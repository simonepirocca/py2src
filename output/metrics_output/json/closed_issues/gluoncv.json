{"total_count": 341, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1411", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1411/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1411/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1411/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1411", "id": 676598659, "node_id": "MDU6SXNzdWU2NzY1OTg2NTk=", "number": 1411, "title": "could you make the git tags consistent?", "user": {"login": "hubutui", "id": 2948593, "node_id": "MDQ6VXNlcjI5NDg1OTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2948593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hubutui", "html_url": "https://github.com/hubutui", "followers_url": "https://api.github.com/users/hubutui/followers", "following_url": "https://api.github.com/users/hubutui/following{/other_user}", "gists_url": "https://api.github.com/users/hubutui/gists{/gist_id}", "starred_url": "https://api.github.com/users/hubutui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hubutui/subscriptions", "organizations_url": "https://api.github.com/users/hubutui/orgs", "repos_url": "https://api.github.com/users/hubutui/repos", "events_url": "https://api.github.com/users/hubutui/events{/privacy}", "received_events_url": "https://api.github.com/users/hubutui/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-11T05:44:42Z", "updated_at": "2020-08-12T01:14:42Z", "closed_at": "2020-08-12T01:14:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Glad to know 0.8.0 is released. Do not forget \"v\" in tag `v0.8.0`, just like what you use for older release, it helps me a lot for gluoncv auto packaging for ArchLinux.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1391", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1391/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1391/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1391/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1391", "id": 668188822, "node_id": "MDU6SXNzdWU2NjgxODg4MjI=", "number": 1391, "title": "Scripts not working", "user": {"login": "mathephysicist", "id": 25594384, "node_id": "MDQ6VXNlcjI1NTk0Mzg0", "avatar_url": "https://avatars0.githubusercontent.com/u/25594384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mathephysicist", "html_url": "https://github.com/mathephysicist", "followers_url": "https://api.github.com/users/mathephysicist/followers", "following_url": "https://api.github.com/users/mathephysicist/following{/other_user}", "gists_url": "https://api.github.com/users/mathephysicist/gists{/gist_id}", "starred_url": "https://api.github.com/users/mathephysicist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mathephysicist/subscriptions", "organizations_url": "https://api.github.com/users/mathephysicist/orgs", "repos_url": "https://api.github.com/users/mathephysicist/repos", "events_url": "https://api.github.com/users/mathephysicist/events{/privacy}", "received_events_url": "https://api.github.com/users/mathephysicist/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-29T21:49:03Z", "updated_at": "2020-08-12T01:49:42Z", "closed_at": "2020-08-12T01:49:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "A lot of the scripts seem to have conflicts when trying to train within that specific tag. \r\n\r\nFor instance 0.7.0 has import paths that are incorrect in the Mask_RCNN script. I propose we update these scripts.\r\n\r\n!pip install gluoncv==0.7.0 \r\n\r\nthen try and run the corresponding 0.7.0 mask_rcnn train script...\r\nfor just one example", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1390", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1390/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1390/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1390/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1390", "id": 666770057, "node_id": "MDU6SXNzdWU2NjY3NzAwNTc=", "number": 1390, "title": "`RandomCrop` pad first and then crop, not what is said in the document or even CIFAR tutorials.", "user": {"login": "Neutron3529", "id": 26130174, "node_id": "MDQ6VXNlcjI2MTMwMTc0", "avatar_url": "https://avatars3.githubusercontent.com/u/26130174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Neutron3529", "html_url": "https://github.com/Neutron3529", "followers_url": "https://api.github.com/users/Neutron3529/followers", "following_url": "https://api.github.com/users/Neutron3529/following{/other_user}", "gists_url": "https://api.github.com/users/Neutron3529/gists{/gist_id}", "starred_url": "https://api.github.com/users/Neutron3529/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Neutron3529/subscriptions", "organizations_url": "https://api.github.com/users/Neutron3529/orgs", "repos_url": "https://api.github.com/users/Neutron3529/repos", "events_url": "https://api.github.com/users/Neutron3529/events{/privacy}", "received_events_url": "https://api.github.com/users/Neutron3529/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-28T05:01:57Z", "updated_at": "2020-08-10T12:03:29Z", "closed_at": "2020-08-10T12:03:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`RandomCrop` pad first and then crop, not what is said in the document or even CIFAR tutorials.\r\n\r\nfurther, an error occurs with the default `pad=None`\r\n```\r\n>>> for i in train_data:break\r\n... \r\nmultiprocessing.pool.RemoteTraceback: \r\n\"\"\"\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/multiprocessing/pool.py\", line 125, in worker\r\n    result = (True, func(*args, **kwds))\r\n  File \"/home/neutron/.local/lib/python3.8/site-packages/mxnet/gluon/data/dataloader.py\", line 450, in _worker_fn\r\n    batch = batchify_fn([_worker_dataset[i] for i in samples])\r\n  File \"/home/neutron/.local/lib/python3.8/site-packages/mxnet/gluon/data/dataloader.py\", line 450, in <listcomp>\r\n    batch = batchify_fn([_worker_dataset[i] for i in samples])\r\n  File \"/home/neutron/.local/lib/python3.8/site-packages/mxnet/gluon/data/dataset.py\", line 219, in __getitem__\r\n    return self._fn(*item)\r\n  File \"/home/neutron/.local/lib/python3.8/site-packages/mxnet/gluon/data/dataset.py\", line 230, in __call__\r\n    return (self._fn(x),) + args\r\n  File \"/home/neutron/.local/lib/python3.8/site-packages/mxnet/gluon/block.py\", line 693, in __call__\r\n    out = self.forward(*args)\r\n  File \"/home/neutron/.local/lib/python3.8/site-packages/mxnet/gluon/nn/basic_layers.py\", line 55, in forward\r\n    x = block(x)\r\n  File \"/home/neutron/.local/lib/python3.8/site-packages/mxnet/gluon/block.py\", line 693, in __call__\r\n    out = self.forward(*args)\r\n  File \"/home/neutron/.local/lib/python3.8/site-packages/gluoncv/data/transforms/block.py\", line 75, in forward\r\n    return image.random_crop(nd.array(x_pad), *self._args)[0]\r\nUnboundLocalError: local variable 'x_pad' referenced before assignment\r\n\"\"\"\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/neutron/.local/lib/python3.8/site-packages/mxnet/gluon/data/dataloader.py\", line 505, in __next__\r\n    batch = pickle.loads(ret.get(self._timeout))\r\n  File \"/usr/lib/python3.8/multiprocessing/pool.py\", line 771, in get\r\n    raise self._value\r\nUnboundLocalError: local variable 'x_pad' referenced before assignment\r\n```\r\n\r\nA PR( #1389 ) is committed to fix both doc and the error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1387", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1387/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1387/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1387/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1387", "id": 666167733, "node_id": "MDU6SXNzdWU2NjYxNjc3MzM=", "number": 1387, "title": "Error when exporting trained model from tutorial", "user": {"login": "joshuachang2311", "id": 30316913, "node_id": "MDQ6VXNlcjMwMzE2OTEz", "avatar_url": "https://avatars1.githubusercontent.com/u/30316913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshuachang2311", "html_url": "https://github.com/joshuachang2311", "followers_url": "https://api.github.com/users/joshuachang2311/followers", "following_url": "https://api.github.com/users/joshuachang2311/following{/other_user}", "gists_url": "https://api.github.com/users/joshuachang2311/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshuachang2311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshuachang2311/subscriptions", "organizations_url": "https://api.github.com/users/joshuachang2311/orgs", "repos_url": "https://api.github.com/users/joshuachang2311/repos", "events_url": "https://api.github.com/users/joshuachang2311/events{/privacy}", "received_events_url": "https://api.github.com/users/joshuachang2311/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-27T10:12:11Z", "updated_at": "2020-07-29T02:14:11Z", "closed_at": "2020-07-29T02:14:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I used the code from [4. Train FCN on Pascal VOC Dataset](https://gluon-cv.mxnet.io/build/examples_segmentation/train_fcn.html), the only difference is that at the end of `train_fcn.py` I added the following line of code:\r\n```python3\r\nexport_block('example_fcn', model, preprocess=True, layout='HWC')\r\n```\r\nThe error message is as follows:\r\n```\r\n  File \"train_fcn.py\", line 259\r\n    export_block('pianoroll_fcn', model, preprocess=True, layout='HWC')\r\n  File \"/root/anaconda3/envs/gluoncv/lib/python3.7/site-packages/gluoncv/utils/export_helper.py\", line 93, in export_block\r\n    if '_target_generator' in copy_block._children:\r\nAttributeError: 'DataParallelModel' object has no attribute '_children'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1382", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1382/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1382/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1382/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1382", "id": 662781033, "node_id": "MDU6SXNzdWU2NjI3ODEwMzM=", "number": 1382, "title": "pretrained ICNet export error", "user": {"login": "get-user-name", "id": 49074239, "node_id": "MDQ6VXNlcjQ5MDc0MjM5", "avatar_url": "https://avatars3.githubusercontent.com/u/49074239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/get-user-name", "html_url": "https://github.com/get-user-name", "followers_url": "https://api.github.com/users/get-user-name/followers", "following_url": "https://api.github.com/users/get-user-name/following{/other_user}", "gists_url": "https://api.github.com/users/get-user-name/gists{/gist_id}", "starred_url": "https://api.github.com/users/get-user-name/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/get-user-name/subscriptions", "organizations_url": "https://api.github.com/users/get-user-name/orgs", "repos_url": "https://api.github.com/users/get-user-name/repos", "events_url": "https://api.github.com/users/get-user-name/events{/privacy}", "received_events_url": "https://api.github.com/users/get-user-name/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-21T09:10:40Z", "updated_at": "2020-07-23T07:27:15Z", "closed_at": "2020-07-23T07:27:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi.\r\nWhen I tried to export pre-trained ICNet, an error occurred.\r\nHow can I export it??\r\n\r\n```\r\n>>> import gluoncv as gcv\r\n>>> from gluoncv.utils import export_block\r\n>>> net = gcv.model_zoo.get_model('icnet_resnet50_mhpv1', pretrained=True)\r\n>>> export_block('icnet_resnet50_mhpv1', net, preprocess=True)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/user/Codes/test_toolkit_comparison/venv/lib/python3.7/site-packages/gluoncv/utils/export_helper.py\", line 153, in export_block\r\n    raise RuntimeError(str(last_exception).splitlines()[0])\r\nRuntimeError: Error in operator icnet0_cascadefeaturefusion0__plus0: [18:09:44] src/operator/contrib/../elemwise_op_common.h:135: Check failed: assign(&dattr, vec.at(i)): Incompatible attr in node icnet0_cascadefeaturefusion0__plus0 at 1-th input: expected [1,128,60,60], got [1,128,75,75]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1377", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1377/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1377/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1377/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1377", "id": 660709131, "node_id": "MDU6SXNzdWU2NjA3MDkxMzE=", "number": 1377, "title": "Evaluating class (channel) 0 for segmentation metrics", "user": {"login": "zergzzlun", "id": 49634127, "node_id": "MDQ6VXNlcjQ5NjM0MTI3", "avatar_url": "https://avatars1.githubusercontent.com/u/49634127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zergzzlun", "html_url": "https://github.com/zergzzlun", "followers_url": "https://api.github.com/users/zergzzlun/followers", "following_url": "https://api.github.com/users/zergzzlun/following{/other_user}", "gists_url": "https://api.github.com/users/zergzzlun/gists{/gist_id}", "starred_url": "https://api.github.com/users/zergzzlun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zergzzlun/subscriptions", "organizations_url": "https://api.github.com/users/zergzzlun/orgs", "repos_url": "https://api.github.com/users/zergzzlun/repos", "events_url": "https://api.github.com/users/zergzzlun/events{/privacy}", "received_events_url": "https://api.github.com/users/zergzzlun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-19T09:04:44Z", "updated_at": "2020-07-20T06:33:29Z", "closed_at": "2020-07-20T06:33:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI've checked out the code and tested [gluoncv.utils.metrics.segmentation](https://gluon-cv.mxnet.io/_modules/gluoncv/utils/metrics/segmentation.html). It seems that there's a mismatch in class 0 for mIoU and pixAcc: When computing mIoU ` batch_intersection_union(output, target, nclass)` ignores class 0 while `batch_pix_accuracy(output, target)` ignores class -1 and takes class 0 as a valid class.\r\nIs that right or am I using the metrics API in the wrong way?\r\n\r\nMany thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1375", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1375/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1375/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1375/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1375", "id": 660157636, "node_id": "MDU6SXNzdWU2NjAxNTc2MzY=", "number": 1375, "title": "SyntaxWarning due to comparison of literals using is in Python 3.8", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-18T13:40:54Z", "updated_at": "2020-08-14T01:28:19Z", "closed_at": "2020-08-14T01:28:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\nfind . -iname '*.py' | grep -v example | xargs -P4 -I{} python3.8 -Wall -m py_compile {}\r\n./scripts/datasets/somethingsomethingv2.py:103: SyntaxWarning: 'str' object is not callable; perhaps you missed a comma?\r\n  print('video decoding fails at %s' (curFolder))\r\n./scripts/action-recognition/train_recognizer.py:339: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\r\n  if opt.resume_params is not '':\r\n./scripts/action-recognition/train_recognizer.py:448: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\r\n  if opt.resume_states is not '':\r\n./scripts/action-recognition/test_recognizer.py:344: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\r\n  if opt.resume_params is not '' and not opt.use_pretrained:\r\n./scripts/action-recognition/inference.py:173: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\r\n  if opt.resume_params is not '' and not opt.use_pretrained:\r\n./scripts/action-recognition/feat_extract.py:161: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\r\n  if opt.resume_params is not '' and not opt.use_pretrained:\r\n./scripts/classification/imagenet/train_horovod.py:364: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\r\n  if args.resume_params is not '':\r\n./scripts/classification/imagenet/train_horovod.py:390: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\r\n  if args.resume_states is not '':\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1374", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1374/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1374/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1374/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1374", "id": 659214316, "node_id": "MDU6SXNzdWU2NTkyMTQzMTY=", "number": 1374, "title": "Is this a wrong sentence of \"self.mode == 'linear'\" ", "user": {"login": "gll89", "id": 26070861, "node_id": "MDQ6VXNlcjI2MDcwODYx", "avatar_url": "https://avatars3.githubusercontent.com/u/26070861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gll89", "html_url": "https://github.com/gll89", "followers_url": "https://api.github.com/users/gll89/followers", "following_url": "https://api.github.com/users/gll89/following{/other_user}", "gists_url": "https://api.github.com/users/gll89/gists{/gist_id}", "starred_url": "https://api.github.com/users/gll89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gll89/subscriptions", "organizations_url": "https://api.github.com/users/gll89/orgs", "repos_url": "https://api.github.com/users/gll89/repos", "events_url": "https://api.github.com/users/gll89/events{/privacy}", "received_events_url": "https://api.github.com/users/gll89/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-17T12:25:39Z", "updated_at": "2020-07-17T14:54:24Z", "closed_at": "2020-07-17T14:54:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the script of \"utils/lr_scheduler.py \", the Line 129 displays \"self.mode =='linear'\", but in parse, lr_model is just one of 'step', 'poly' or 'cosine'. Is there something wrong in the Line 129? Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1370", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1370/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1370/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1370/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1370", "id": 657127063, "node_id": "MDU6SXNzdWU2NTcxMjcwNjM=", "number": 1370, "title": "yolo: load param problem", "user": {"login": "kai339", "id": 36971975, "node_id": "MDQ6VXNlcjM2OTcxOTc1", "avatar_url": "https://avatars1.githubusercontent.com/u/36971975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kai339", "html_url": "https://github.com/kai339", "followers_url": "https://api.github.com/users/kai339/followers", "following_url": "https://api.github.com/users/kai339/following{/other_user}", "gists_url": "https://api.github.com/users/kai339/gists{/gist_id}", "starred_url": "https://api.github.com/users/kai339/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kai339/subscriptions", "organizations_url": "https://api.github.com/users/kai339/orgs", "repos_url": "https://api.github.com/users/kai339/repos", "events_url": "https://api.github.com/users/kai339/events{/privacy}", "received_events_url": "https://api.github.com/users/kai339/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-15T07:26:18Z", "updated_at": "2020-07-16T11:53:39Z", "closed_at": "2020-07-16T11:53:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am a new one here. This is an awesome lib, **thanks for your great work**.\r\nNow, I am encountering a problem that I **trained YOLOv3 on PASCAL VOC** based on Train YOLOv3 on this tutorial: https://gluon-cv.mxnet.io/build/examples_detection/train_yolo_v3.html\r\nAfter training, I got a \"**yolo3_darknet53_voc_best.params**\" file. \r\nThen I tried to **load the parameters** and predict new images\r\nThe command I used as follows,\r\n```\r\nnet = model_zoo.get_model('yolo3_darknet53_voc', pretrained=False)\r\nnet.load_parameters(\"yolo3_darknet53_voc_best.params\")\r\n```\r\nand predict:\r\n```\r\nim_fname = \"2007_000129.jpg\"\r\nx, img = data.transforms.presets.yolo.load_test(im_fname, short=512)\r\nprint('Shape of pre-processed image:', x.shape)\r\nclass_IDs, scores, bounding_boxs = net(x)\r\nax = utils.viz.plot_bbox(img, bounding_boxs[0], scores[0],\r\n                         class_IDs[0], class_names=net.classes)\r\nplt.show()\r\n```\r\n\r\nThe result I got is the raw picture with **no bounding box and prediction**.\r\n\r\nAlso, I've tried another loading method:\r\n```\r\nc = ['aeroplane','bicycle','bird','boat','bottle','bus','car','cat','chair','cow','diningtable','dog','horse','motorbike','person','pottedplant','sheep','sofa','train','tvmonitor']\r\nnet = model_zoo.get_model('yolo3_darknet53_custom', pretrained=False, classes=c)\r\nnet.load_parameters(\"yolo3_darknet53_voc_best.params\")\r\n```\r\nbut the result is the same, **no bounding box and prediction**\r\n\r\nAny suggestion?\r\n**Thanks for any help.**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1368", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1368/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1368/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1368/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1368", "id": 656627964, "node_id": "MDU6SXNzdWU2NTY2Mjc5NjQ=", "number": 1368, "title": "Error Training DeepLab on mxnet-mkl ", "user": {"login": "roy6324", "id": 48947988, "node_id": "MDQ6VXNlcjQ4OTQ3OTg4", "avatar_url": "https://avatars2.githubusercontent.com/u/48947988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roy6324", "html_url": "https://github.com/roy6324", "followers_url": "https://api.github.com/users/roy6324/followers", "following_url": "https://api.github.com/users/roy6324/following{/other_user}", "gists_url": "https://api.github.com/users/roy6324/gists{/gist_id}", "starred_url": "https://api.github.com/users/roy6324/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roy6324/subscriptions", "organizations_url": "https://api.github.com/users/roy6324/orgs", "repos_url": "https://api.github.com/users/roy6324/repos", "events_url": "https://api.github.com/users/roy6324/events{/privacy}", "received_events_url": "https://api.github.com/users/roy6324/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2020-07-14T13:49:19Z", "updated_at": "2020-07-29T04:11:35Z", "closed_at": "2020-07-29T04:11:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "@zhreshold \r\nI've encountered an error trying to train deeplab on cpu using mxnet-mkl. \r\n\r\n### **Steps to reproduce:**\r\n\r\n- **Installing mxnet-mkl:**\r\n`pip3 install mxnet-mkl`\r\n- **Using gluoncv's train.py and running the following command :** \r\n`\r\npython3 gluoncv_test.py --dataset pascal_aug --model-zoo deeplab_resnet101_coco --aux --lr 0.001 --checkname res101  --no-cuda\r\n`\r\n- **This will cause the following error:**\r\n`\r\nmxnet.base.MXNetError: [15:37:48] src/ndarray/ndarray.cc:757: Check failed: !IsMKLDNNData(): We can't generate TBlob for MKLDNN data. Please use Reorder2Default() to generate a new NDArray first\r\n`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1362", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1362/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1362/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1362/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1362", "id": 653786814, "node_id": "MDU6SXNzdWU2NTM3ODY4MTQ=", "number": 1362, "title": "Kernel dying on loading activity recognition model from gluon model zoo", "user": {"login": "ksindwan", "id": 62772250, "node_id": "MDQ6VXNlcjYyNzcyMjUw", "avatar_url": "https://avatars2.githubusercontent.com/u/62772250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ksindwan", "html_url": "https://github.com/ksindwan", "followers_url": "https://api.github.com/users/ksindwan/followers", "following_url": "https://api.github.com/users/ksindwan/following{/other_user}", "gists_url": "https://api.github.com/users/ksindwan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ksindwan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ksindwan/subscriptions", "organizations_url": "https://api.github.com/users/ksindwan/orgs", "repos_url": "https://api.github.com/users/ksindwan/repos", "events_url": "https://api.github.com/users/ksindwan/events{/privacy}", "received_events_url": "https://api.github.com/users/ksindwan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bryanyzhu", "id": 16021460, "node_id": "MDQ6VXNlcjE2MDIxNDYw", "avatar_url": "https://avatars2.githubusercontent.com/u/16021460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryanyzhu", "html_url": "https://github.com/bryanyzhu", "followers_url": "https://api.github.com/users/bryanyzhu/followers", "following_url": "https://api.github.com/users/bryanyzhu/following{/other_user}", "gists_url": "https://api.github.com/users/bryanyzhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryanyzhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryanyzhu/subscriptions", "organizations_url": "https://api.github.com/users/bryanyzhu/orgs", "repos_url": "https://api.github.com/users/bryanyzhu/repos", "events_url": "https://api.github.com/users/bryanyzhu/events{/privacy}", "received_events_url": "https://api.github.com/users/bryanyzhu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bryanyzhu", "id": 16021460, "node_id": "MDQ6VXNlcjE2MDIxNDYw", "avatar_url": "https://avatars2.githubusercontent.com/u/16021460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryanyzhu", "html_url": "https://github.com/bryanyzhu", "followers_url": "https://api.github.com/users/bryanyzhu/followers", "following_url": "https://api.github.com/users/bryanyzhu/following{/other_user}", "gists_url": "https://api.github.com/users/bryanyzhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryanyzhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryanyzhu/subscriptions", "organizations_url": "https://api.github.com/users/bryanyzhu/orgs", "repos_url": "https://api.github.com/users/bryanyzhu/repos", "events_url": "https://api.github.com/users/bryanyzhu/events{/privacy}", "received_events_url": "https://api.github.com/users/bryanyzhu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-07-09T05:57:29Z", "updated_at": "2020-07-13T18:29:41Z", "closed_at": "2020-07-13T18:29:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "num_gpus = 1 ## number of  gpus to be used\r\nctx = [gpu(i) for i in range(num_gpus)]\r\nnet = get_model(name='vgg16_ucf101', nclass=101, num_segments=3)\r\nnet.collect_params().reset_ctx(ctx)\r\n\r\nKernel dies everytime I run this code. trying to follow this tutorial (https://gluon-cv.mxnet.io/build/examples_action_recognition/dive_deep_i3d_kinetics400.html)\r\n\r\nmxnet_version : 1.6.0\r\ngluoncv version : 0.7.0 \r\n\r\nthe same code works without the reset_ctx. I checked it on multiple instances. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1351", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1351/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1351/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1351/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1351", "id": 643266397, "node_id": "MDU6SXNzdWU2NDMyNjYzOTc=", "number": 1351, "title": "predict action recognition models on continuous video such as webcam streams...", "user": {"login": "alighofrani95", "id": 14968123, "node_id": "MDQ6VXNlcjE0OTY4MTIz", "avatar_url": "https://avatars3.githubusercontent.com/u/14968123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alighofrani95", "html_url": "https://github.com/alighofrani95", "followers_url": "https://api.github.com/users/alighofrani95/followers", "following_url": "https://api.github.com/users/alighofrani95/following{/other_user}", "gists_url": "https://api.github.com/users/alighofrani95/gists{/gist_id}", "starred_url": "https://api.github.com/users/alighofrani95/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alighofrani95/subscriptions", "organizations_url": "https://api.github.com/users/alighofrani95/orgs", "repos_url": "https://api.github.com/users/alighofrani95/repos", "events_url": "https://api.github.com/users/alighofrani95/events{/privacy}", "received_events_url": "https://api.github.com/users/alighofrani95/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bryanyzhu", "id": 16021460, "node_id": "MDQ6VXNlcjE2MDIxNDYw", "avatar_url": "https://avatars2.githubusercontent.com/u/16021460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryanyzhu", "html_url": "https://github.com/bryanyzhu", "followers_url": "https://api.github.com/users/bryanyzhu/followers", "following_url": "https://api.github.com/users/bryanyzhu/following{/other_user}", "gists_url": "https://api.github.com/users/bryanyzhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryanyzhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryanyzhu/subscriptions", "organizations_url": "https://api.github.com/users/bryanyzhu/orgs", "repos_url": "https://api.github.com/users/bryanyzhu/repos", "events_url": "https://api.github.com/users/bryanyzhu/events{/privacy}", "received_events_url": "https://api.github.com/users/bryanyzhu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bryanyzhu", "id": 16021460, "node_id": "MDQ6VXNlcjE2MDIxNDYw", "avatar_url": "https://avatars2.githubusercontent.com/u/16021460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryanyzhu", "html_url": "https://github.com/bryanyzhu", "followers_url": "https://api.github.com/users/bryanyzhu/followers", "following_url": "https://api.github.com/users/bryanyzhu/following{/other_user}", "gists_url": "https://api.github.com/users/bryanyzhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryanyzhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryanyzhu/subscriptions", "organizations_url": "https://api.github.com/users/bryanyzhu/orgs", "repos_url": "https://api.github.com/users/bryanyzhu/repos", "events_url": "https://api.github.com/users/bryanyzhu/events{/privacy}", "received_events_url": "https://api.github.com/users/bryanyzhu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-06-22T18:07:52Z", "updated_at": "2020-07-14T20:57:50Z", "closed_at": "2020-07-14T20:57:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi dear gcv developer\r\nI really enjoyed the action recognition implementation on gcv\r\n\r\njust one thing\r\nHow can I predict models such as i3d-nl and slowFast on continuous video such as webcam streams\r\n\r\nthanks a lot ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1345", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1345/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1345/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1345/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1345", "id": 639541877, "node_id": "MDU6SXNzdWU2Mzk1NDE4Nzc=", "number": 1345, "title": "License of pre-trained i3dresnet50 with kinetics400/ucf101", "user": {"login": "hasanp87", "id": 8871432, "node_id": "MDQ6VXNlcjg4NzE0MzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8871432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hasanp87", "html_url": "https://github.com/hasanp87", "followers_url": "https://api.github.com/users/hasanp87/followers", "following_url": "https://api.github.com/users/hasanp87/following{/other_user}", "gists_url": "https://api.github.com/users/hasanp87/gists{/gist_id}", "starred_url": "https://api.github.com/users/hasanp87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hasanp87/subscriptions", "organizations_url": "https://api.github.com/users/hasanp87/orgs", "repos_url": "https://api.github.com/users/hasanp87/repos", "events_url": "https://api.github.com/users/hasanp87/events{/privacy}", "received_events_url": "https://api.github.com/users/hasanp87/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bryanyzhu", "id": 16021460, "node_id": "MDQ6VXNlcjE2MDIxNDYw", "avatar_url": "https://avatars2.githubusercontent.com/u/16021460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryanyzhu", "html_url": "https://github.com/bryanyzhu", "followers_url": "https://api.github.com/users/bryanyzhu/followers", "following_url": "https://api.github.com/users/bryanyzhu/following{/other_user}", "gists_url": "https://api.github.com/users/bryanyzhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryanyzhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryanyzhu/subscriptions", "organizations_url": "https://api.github.com/users/bryanyzhu/orgs", "repos_url": "https://api.github.com/users/bryanyzhu/repos", "events_url": "https://api.github.com/users/bryanyzhu/events{/privacy}", "received_events_url": "https://api.github.com/users/bryanyzhu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bryanyzhu", "id": 16021460, "node_id": "MDQ6VXNlcjE2MDIxNDYw", "avatar_url": "https://avatars2.githubusercontent.com/u/16021460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryanyzhu", "html_url": "https://github.com/bryanyzhu", "followers_url": "https://api.github.com/users/bryanyzhu/followers", "following_url": "https://api.github.com/users/bryanyzhu/following{/other_user}", "gists_url": "https://api.github.com/users/bryanyzhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryanyzhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryanyzhu/subscriptions", "organizations_url": "https://api.github.com/users/bryanyzhu/orgs", "repos_url": "https://api.github.com/users/bryanyzhu/repos", "events_url": "https://api.github.com/users/bryanyzhu/events{/privacy}", "received_events_url": "https://api.github.com/users/bryanyzhu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-06-16T10:09:34Z", "updated_at": "2020-06-29T18:11:34Z", "closed_at": "2020-06-29T18:11:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "What is the license for pre-trained models like https://gluon-cv.mxnet.io/_modules/gluoncv/model_zoo/action_recognition/i3d_resnet.html#i3d_resnet50_v1_kinetics400\r\n\r\nWhat is the license for datasets like UCF101 which are sourced from youtube but do not explicitly mention a license https://www.crcv.ucf.edu/data/UCF101.php", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1341", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1341/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1341/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1341/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1341", "id": 636683109, "node_id": "MDU6SXNzdWU2MzY2ODMxMDk=", "number": 1341, "title": "Training hybrid hrnet imagenet Error: it != node2index_.end() && it->first == e.node.get():", "user": {"login": "firestonelib", "id": 9363289, "node_id": "MDQ6VXNlcjkzNjMyODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/9363289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/firestonelib", "html_url": "https://github.com/firestonelib", "followers_url": "https://api.github.com/users/firestonelib/followers", "following_url": "https://api.github.com/users/firestonelib/following{/other_user}", "gists_url": "https://api.github.com/users/firestonelib/gists{/gist_id}", "starred_url": "https://api.github.com/users/firestonelib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/firestonelib/subscriptions", "organizations_url": "https://api.github.com/users/firestonelib/orgs", "repos_url": "https://api.github.com/users/firestonelib/repos", "events_url": "https://api.github.com/users/firestonelib/events{/privacy}", "received_events_url": "https://api.github.com/users/firestonelib/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-11T03:11:30Z", "updated_at": "2020-07-10T08:34:31Z", "closed_at": "2020-07-10T08:34:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "raceback (most recent call last):\r\n  File \"/root/gluon-cv/scripts/classification/imagenet/train_imagenet.py\", line 400, in train\r\n    outputs = [net(X.astype(opt.dtype, copy=False)) for X in data]\r\n  File \"/root/gluon-cv/scripts/classification/imagenet/train_imagenet.py\", line 400, in <listcomp>\r\n    outputs = [net(X.astype(opt.dtype, copy=False)) for X in data]\r\n  File \"/root/gluon-cv//3rdparty/mxnet/gluon/block.py\", line 693, in __call__\r\n    out = self.forward(*args)\r\n  File \"/root/gluon-cv//3rdparty/mxnet/gluon/block.py\", line 1148, in forward\r\n    return self._call_cached_op(x, *args)\r\n  File \"/root/gluon-cv//3rdparty/mxnet/gluon/block.py\", line 1020, in _call_cached_op\r\n    out = self._cached_op(*cargs)\r\n  File \"/root/gluon-cv//3rdparty/mxnet/_ctypes/ndarray.py\", line 170, in __call__\r\n    ctypes.byref(out_stypes)))\r\n  File \"/root/gluon-cv//3rdparty/mxnet/base.py\", line 255, in check_call\r\n    raise MXNetError(py_str(_LIB.MXGetLastError()))\r\nmxnet.base.MXNetError: [03:07:59] ../3rdparty/tvm/nnvm/src/core/graph.cc:102: Check failed: it != node2index_.end() && it->first == e.node.get():\r\nStack trace:\r\n  [bt] (0) /root/gluon-cv/3rdparty/mxnet/libmxnet.so(+0x40d98c2) [0x7f26e06588c2]\r\n  [bt] (1) /root/gluon-cv/3rdparty/mxnet/libmxnet.so(nnvm::IndexedGraph::IndexedGraph(nnvm::Graph const&)+0x63c) [0x7f26e065d41c]\r\n  [bt] (2) /root/gluon-cv/3rdparty/mxnet/libmxnet.so(nnvm::Graph::indexed_graph() const+0x2f) [0x7f26e065ea7f]\r\n  [bt] (3) /root/gluon-cv/3rdparty/mxnet/libmxnet.so(mxnet::exec::FusePointwiseBackward(nnvm::Graph&&)+0xac) [0x7f26dde0fc8c]\r\n  [bt] (4) /root/gluon-cv/3rdparty/mxnet/libmxnet.so(mxnet::OptimizeGraph(nnvm::Graph*, nnvm::Graph*, nnvm::Graph*, mxnet::Context const&, unsigned long, bool)+0x2d9) [0x7f26dde22f89]\r\n  [bt] (5) /root/gluon-cv/3rdparty/mxnet/libmxnet.so(mxnet::CachedOp::CachedOpState::CachedOpState(mxnet::Context const&, nnvm::Graph const&, nnvm::Graph const&, bool)+0x4f9) [0x7f26dde47669]\r\n  [bt] (6) /root/gluon-cv/3rdparty/mxnet/libmxnet.so(mxnet::CachedOp::GetCachedOpState(mxnet::Context const&)+0x100) [0x7f26dde27fa0]\r\n  [bt] (7) /root/gluon-cv/3rdparty/mxnet/libmxnet.so(mxnet::CachedOp::Forward(std::shared_ptr<mxnet::CachedOp> const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&)+0x185) [0x7f26dde2ff55]\r\n  [bt] (8) /root/gluon-cv/3rdparty/mxnet/libmxnet.so(MXInvokeCachedOp+0x6a0) [0x7f26ddccfa60]\r\nhi, can u help me?\r\n@mli @mjamroz @piiswrong @larroy @leezu ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1316", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1316/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1316/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1316/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1316", "id": 623607844, "node_id": "MDU6SXNzdWU2MjM2MDc4NDQ=", "number": 1316, "title": "always out of memory when use syncbn in segmentation model", "user": {"login": "TomMao23", "id": 33422517, "node_id": "MDQ6VXNlcjMzNDIyNTE3", "avatar_url": "https://avatars2.githubusercontent.com/u/33422517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TomMao23", "html_url": "https://github.com/TomMao23", "followers_url": "https://api.github.com/users/TomMao23/followers", "following_url": "https://api.github.com/users/TomMao23/following{/other_user}", "gists_url": "https://api.github.com/users/TomMao23/gists{/gist_id}", "starred_url": "https://api.github.com/users/TomMao23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TomMao23/subscriptions", "organizations_url": "https://api.github.com/users/TomMao23/orgs", "repos_url": "https://api.github.com/users/TomMao23/repos", "events_url": "https://api.github.com/users/TomMao23/events{/privacy}", "received_events_url": "https://api.github.com/users/TomMao23/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-23T08:17:34Z", "updated_at": "2020-05-24T05:03:13Z", "closed_at": "2020-05-24T05:03:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "environment\uff1a gluoncv 0.7 or 0.8\uff0c mxnet-cu90mkl 1.6\uff0c gtx1080Ti x 2\r\n\r\nThe training segmentation model icnet does not use syncbn when the batchsize reaches 16 or less can also be trained normally. After using syncbn, no matter how small the batchsize is, the memory consumption will increase with each batch of training until the out of memory\r\nI have encountered this problem when trying to use syncbn in deeplab and pspnet\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1311", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1311/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1311/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1311/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1311", "id": 621407407, "node_id": "MDU6SXNzdWU2MjE0MDc0MDc=", "number": 1311, "title": "'data_aug' keyword error in inference.py for action recognition application under Sagemaker ", "user": {"login": "oilpig", "id": 4879237, "node_id": "MDQ6VXNlcjQ4NzkyMzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/4879237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oilpig", "html_url": "https://github.com/oilpig", "followers_url": "https://api.github.com/users/oilpig/followers", "following_url": "https://api.github.com/users/oilpig/following{/other_user}", "gists_url": "https://api.github.com/users/oilpig/gists{/gist_id}", "starred_url": "https://api.github.com/users/oilpig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oilpig/subscriptions", "organizations_url": "https://api.github.com/users/oilpig/orgs", "repos_url": "https://api.github.com/users/oilpig/repos", "events_url": "https://api.github.com/users/oilpig/events{/privacy}", "received_events_url": "https://api.github.com/users/oilpig/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-20T02:17:32Z", "updated_at": "2020-05-21T08:09:49Z", "closed_at": "2020-05-21T08:09:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am testing the inference.py in Sagemaker (condo_mxnet_p36). It seems that it doesn't work in the initial stage. I followed this tutorial, https://gluon-cv.mxnet.io/build/examples_action_recognition/demo_custom.html\r\n<img width=\"1011\" alt=\"Screen Shot 2020-05-20 at 10 12 24 AM\" src=\"https://user-images.githubusercontent.com/4879237/82397292-b4533780-9a82-11ea-91f5-41ee11c005a8.png\">\r\nThe version of MXNet is 1.6.0 and GluonCV is 0.7.0\r\n<img width=\"247\" alt=\"Screen Shot 2020-05-20 at 10 15 36 AM\" src=\"https://user-images.githubusercontent.com/4879237/82397358-dea4f500-9a82-11ea-89c7-5bfc2515be08.png\">\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1307", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1307/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1307/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1307/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1307", "id": 619810249, "node_id": "MDU6SXNzdWU2MTk4MTAyNDk=", "number": 1307, "title": "[Website] Gluon CV source Installation guide points to wrong MXNet nightly build", "user": {"login": "rondogency", "id": 6558914, "node_id": "MDQ6VXNlcjY1NTg5MTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6558914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rondogency", "html_url": "https://github.com/rondogency", "followers_url": "https://api.github.com/users/rondogency/followers", "following_url": "https://api.github.com/users/rondogency/following{/other_user}", "gists_url": "https://api.github.com/users/rondogency/gists{/gist_id}", "starred_url": "https://api.github.com/users/rondogency/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rondogency/subscriptions", "organizations_url": "https://api.github.com/users/rondogency/orgs", "repos_url": "https://api.github.com/users/rondogency/repos", "events_url": "https://api.github.com/users/rondogency/events{/privacy}", "received_events_url": "https://api.github.com/users/rondogency/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-17T22:22:59Z", "updated_at": "2020-05-19T00:30:01Z", "closed_at": "2020-05-19T00:30:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "On https://gluon-cv.mxnet.io/install.html, the MXNet nightly package installation command is still \r\n\"pip install --upgrade mxnet -f https://dist.mxnet.io/python/cu100\", which installs a 1.6 CPU build of MXNet\r\n\r\nIt should be updated to \"pip install --pre mxnet-cu100 -f https://dist.mxnet.io/python/all\", according to MXNet website\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1304", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1304/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1304/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1304/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1304", "id": 617998307, "node_id": "MDU6SXNzdWU2MTc5OTgzMDc=", "number": 1304, "title": "action recognition testing", "user": {"login": "yezqNLP", "id": 35182031, "node_id": "MDQ6VXNlcjM1MTgyMDMx", "avatar_url": "https://avatars3.githubusercontent.com/u/35182031?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yezqNLP", "html_url": "https://github.com/yezqNLP", "followers_url": "https://api.github.com/users/yezqNLP/followers", "following_url": "https://api.github.com/users/yezqNLP/following{/other_user}", "gists_url": "https://api.github.com/users/yezqNLP/gists{/gist_id}", "starred_url": "https://api.github.com/users/yezqNLP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yezqNLP/subscriptions", "organizations_url": "https://api.github.com/users/yezqNLP/orgs", "repos_url": "https://api.github.com/users/yezqNLP/repos", "events_url": "https://api.github.com/users/yezqNLP/events{/privacy}", "received_events_url": "https://api.github.com/users/yezqNLP/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2020-05-14T07:38:21Z", "updated_at": "2020-05-22T01:02:48Z", "closed_at": "2020-05-22T01:02:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "> For testing (reporting these numbers), we use 250 views for 2D networks (25 frames and 10-crop).\r\n\r\nSo, when I do testing for 2D networks, I set `num_segments=25` and `num_crops=10`, is it correct?\r\n@bryanyzhu ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1301", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1301/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1301/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1301/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1301", "id": 616340237, "node_id": "MDU6SXNzdWU2MTYzNDAyMzc=", "number": 1301, "title": "Typos on the tutorials page of Object Tracking.", "user": {"login": "dai-ichiro", "id": 53703225, "node_id": "MDQ6VXNlcjUzNzAzMjI1", "avatar_url": "https://avatars1.githubusercontent.com/u/53703225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dai-ichiro", "html_url": "https://github.com/dai-ichiro", "followers_url": "https://api.github.com/users/dai-ichiro/followers", "following_url": "https://api.github.com/users/dai-ichiro/following{/other_user}", "gists_url": "https://api.github.com/users/dai-ichiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/dai-ichiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dai-ichiro/subscriptions", "organizations_url": "https://api.github.com/users/dai-ichiro/orgs", "repos_url": "https://api.github.com/users/dai-ichiro/repos", "events_url": "https://api.github.com/users/dai-ichiro/events{/privacy}", "received_events_url": "https://api.github.com/users/dai-ichiro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bryanyzhu", "id": 16021460, "node_id": "MDQ6VXNlcjE2MDIxNDYw", "avatar_url": "https://avatars2.githubusercontent.com/u/16021460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryanyzhu", "html_url": "https://github.com/bryanyzhu", "followers_url": "https://api.github.com/users/bryanyzhu/followers", "following_url": "https://api.github.com/users/bryanyzhu/following{/other_user}", "gists_url": "https://api.github.com/users/bryanyzhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryanyzhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryanyzhu/subscriptions", "organizations_url": "https://api.github.com/users/bryanyzhu/orgs", "repos_url": "https://api.github.com/users/bryanyzhu/repos", "events_url": "https://api.github.com/users/bryanyzhu/events{/privacy}", "received_events_url": "https://api.github.com/users/bryanyzhu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bryanyzhu", "id": 16021460, "node_id": "MDQ6VXNlcjE2MDIxNDYw", "avatar_url": "https://avatars2.githubusercontent.com/u/16021460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryanyzhu", "html_url": "https://github.com/bryanyzhu", "followers_url": "https://api.github.com/users/bryanyzhu/followers", "following_url": "https://api.github.com/users/bryanyzhu/following{/other_user}", "gists_url": "https://api.github.com/users/bryanyzhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryanyzhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryanyzhu/subscriptions", "organizations_url": "https://api.github.com/users/bryanyzhu/orgs", "repos_url": "https://api.github.com/users/bryanyzhu/repos", "events_url": "https://api.github.com/users/bryanyzhu/events{/privacy}", "received_events_url": "https://api.github.com/users/bryanyzhu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-05-12T03:59:25Z", "updated_at": "2020-06-08T05:02:03Z", "closed_at": "2020-06-08T05:02:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "01. Single object tracking with pre-trained SiamRPN models\r\n\r\n> You need to prepare two things to start a tracking demo, the video and its first frame object coordinates. The coordinates show the region of interest where to track, and in the format of (center_x, center_y, weight, height).\r\n\r\nI think this is correct.\r\n\r\n> (corner_x, corner_y, width, height)\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1300", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1300/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1300/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1300/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1300", "id": 616257995, "node_id": "MDU6SXNzdWU2MTYyNTc5OTU=", "number": 1300, "title": "minc-2500-tiny.zip file issue", "user": {"login": "cemsaz", "id": 11336887, "node_id": "MDQ6VXNlcjExMzM2ODg3", "avatar_url": "https://avatars0.githubusercontent.com/u/11336887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cemsaz", "html_url": "https://github.com/cemsaz", "followers_url": "https://api.github.com/users/cemsaz/followers", "following_url": "https://api.github.com/users/cemsaz/following{/other_user}", "gists_url": "https://api.github.com/users/cemsaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/cemsaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cemsaz/subscriptions", "organizations_url": "https://api.github.com/users/cemsaz/orgs", "repos_url": "https://api.github.com/users/cemsaz/repos", "events_url": "https://api.github.com/users/cemsaz/events{/privacy}", "received_events_url": "https://api.github.com/users/cemsaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-11T23:43:50Z", "updated_at": "2020-05-19T00:44:53Z", "closed_at": "2020-05-19T00:44:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "[minc-2500-tiny.zip](https://raw.githubusercontent.com/dmlc/web-data/master/gluoncv/classification/minc-2500-tiny.zip) file in [this tutorial](https://github.com/dmlc/gluon-cv/blob/8360e2edc18589248a37e12eb8109cdb7ffc9024/docs/tutorials/classification/transfer_learning_minc.py) has .DS_Store files under training, validation, test folders. \r\n\r\n```\r\ncreating: minc-2500-tiny/train/\r\ncreating: minc-2500-tiny/train/.DS_Store/\r\ncreating: minc-2500-tiny/train/brick/\r\ninflating: minc-2500-tiny/train/brick/brick_000216.jpg  \r\ninflating: minc-2500-tiny/train/brick/brick_000228.jpg  \r\ninflating: minc-2500-tiny/train/brick/brick_000519.jpg\r\n.........\r\ncreating: minc-2500-tiny/test/.DS_Store/\r\ncreating: minc-2500-tiny/test/brick/\r\ninflating: minc-2500-tiny/test/brick/brick_001968.jpg  \r\ninflating: minc-2500-tiny/test/brick/brick_001981.jpg  \r\ncreating: minc-2500-tiny/test/carpet/\r\ninflating: minc-2500-tiny/test/carpet/carpet_000632.jpg  \r\ninflating: minc-2500-tiny/test/carpet/carpet_000891.jpg  \r\n......\r\n```\r\n\r\nThey are treated as a new class and the model sees/uses one more extra class.  \r\n.DS_Store files should be removed from the zip file.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1298", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1298/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1298/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1298/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1298", "id": 615553263, "node_id": "MDU6SXNzdWU2MTU1NTMyNjM=", "number": 1298, "title": "SyncBN  causes the memory to gradually increase with iteration", "user": {"login": "wy3406", "id": 30515251, "node_id": "MDQ6VXNlcjMwNTE1MjUx", "avatar_url": "https://avatars1.githubusercontent.com/u/30515251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wy3406", "html_url": "https://github.com/wy3406", "followers_url": "https://api.github.com/users/wy3406/followers", "following_url": "https://api.github.com/users/wy3406/following{/other_user}", "gists_url": "https://api.github.com/users/wy3406/gists{/gist_id}", "starred_url": "https://api.github.com/users/wy3406/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wy3406/subscriptions", "organizations_url": "https://api.github.com/users/wy3406/orgs", "repos_url": "https://api.github.com/users/wy3406/repos", "events_url": "https://api.github.com/users/wy3406/events{/privacy}", "received_events_url": "https://api.github.com/users/wy3406/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-11T03:00:51Z", "updated_at": "2020-05-14T09:51:27Z", "closed_at": "2020-05-14T09:51:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "- I have a few issues/questions regarding SyncBN\r\nWhen using BN training in custom image segmentation, the memory is normal. But when I replaced BN with SyncBN, I found that the GPU memory gradually increased with iteration until it occupied the entire GPU memory,then the training is stuck. I try to use a smaller batch than BN, which also takes up all the GPU memory.\r\nNote there is no warning when I use SyncBN.\r\nIs there something I have missed?\r\n\r\n- Environments: Python 3.6.9 ; TITAN RTX \u00d7 8;CUDA 10.1\r\n\r\n- Framework: mxnet-mkl-1.6.0 and gluoncv-0.8.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1295", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1295/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1295/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1295/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1295", "id": 615388870, "node_id": "MDU6SXNzdWU2MTUzODg4NzA=", "number": 1295, "title": "CenterNetDefaultValTransform bug fix", "user": {"login": "chinakook", "id": 5417628, "node_id": "MDQ6VXNlcjU0MTc2Mjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5417628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chinakook", "html_url": "https://github.com/chinakook", "followers_url": "https://api.github.com/users/chinakook/followers", "following_url": "https://api.github.com/users/chinakook/following{/other_user}", "gists_url": "https://api.github.com/users/chinakook/gists{/gist_id}", "starred_url": "https://api.github.com/users/chinakook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chinakook/subscriptions", "organizations_url": "https://api.github.com/users/chinakook/orgs", "repos_url": "https://api.github.com/users/chinakook/repos", "events_url": "https://api.github.com/users/chinakook/events{/privacy}", "received_events_url": "https://api.github.com/users/chinakook/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-10T13:11:39Z", "updated_at": "2020-05-11T00:32:37Z", "closed_at": "2020-05-11T00:32:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This class would cause the ```val_loader``` of ```train_center_net.py``` to load data incorrectly after the second epoch, so we'll get the wrong mAP and the mAP will be changed epoch over epoch. I've test without any train code, only with validate code in the for loop.\r\nTo fix this, we should copy the src and label pair as needed.\r\n```\r\nimport copy\r\nclass CenterNetDefaultValTransform(object):\r\n    def __call__(self, src, label):\r\n        img, bbox = copy.copy(src), copy.copy(label)\r\n```\r\n@zhreshold ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1294", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1294/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1294/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1294/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1294", "id": 615347498, "node_id": "MDU6SXNzdWU2MTUzNDc0OTg=", "number": 1294, "title": "Mapillary Vistas dataset support", "user": {"login": "shachargluska", "id": 57857737, "node_id": "MDQ6VXNlcjU3ODU3NzM3", "avatar_url": "https://avatars1.githubusercontent.com/u/57857737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shachargluska", "html_url": "https://github.com/shachargluska", "followers_url": "https://api.github.com/users/shachargluska/followers", "following_url": "https://api.github.com/users/shachargluska/following{/other_user}", "gists_url": "https://api.github.com/users/shachargluska/gists{/gist_id}", "starred_url": "https://api.github.com/users/shachargluska/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shachargluska/subscriptions", "organizations_url": "https://api.github.com/users/shachargluska/orgs", "repos_url": "https://api.github.com/users/shachargluska/repos", "events_url": "https://api.github.com/users/shachargluska/events{/privacy}", "received_events_url": "https://api.github.com/users/shachargluska/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-10T08:55:39Z", "updated_at": "2020-05-11T17:56:39Z", "closed_at": "2020-05-11T17:40:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to support this dataset?\r\nI believe it's a prerequisite of completing https://github.com/dmlc/gluon-cv/issues/944.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1293", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1293/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1293/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1293/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1293", "id": 615345784, "node_id": "MDU6SXNzdWU2MTUzNDU3ODQ=", "number": 1293, "title": "Semantic Segmentation FCN Training", "user": {"login": "shachargluska", "id": 57857737, "node_id": "MDQ6VXNlcjU3ODU3NzM3", "avatar_url": "https://avatars1.githubusercontent.com/u/57857737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shachargluska", "html_url": "https://github.com/shachargluska", "followers_url": "https://api.github.com/users/shachargluska/followers", "following_url": "https://api.github.com/users/shachargluska/following{/other_user}", "gists_url": "https://api.github.com/users/shachargluska/gists{/gist_id}", "starred_url": "https://api.github.com/users/shachargluska/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shachargluska/subscriptions", "organizations_url": "https://api.github.com/users/shachargluska/orgs", "repos_url": "https://api.github.com/users/shachargluska/repos", "events_url": "https://api.github.com/users/shachargluska/events{/privacy}", "received_events_url": "https://api.github.com/users/shachargluska/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bryanyzhu", "id": 16021460, "node_id": "MDQ6VXNlcjE2MDIxNDYw", "avatar_url": "https://avatars2.githubusercontent.com/u/16021460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryanyzhu", "html_url": "https://github.com/bryanyzhu", "followers_url": "https://api.github.com/users/bryanyzhu/followers", "following_url": "https://api.github.com/users/bryanyzhu/following{/other_user}", "gists_url": "https://api.github.com/users/bryanyzhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryanyzhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryanyzhu/subscriptions", "organizations_url": "https://api.github.com/users/bryanyzhu/orgs", "repos_url": "https://api.github.com/users/bryanyzhu/repos", "events_url": "https://api.github.com/users/bryanyzhu/events{/privacy}", "received_events_url": "https://api.github.com/users/bryanyzhu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bryanyzhu", "id": 16021460, "node_id": "MDQ6VXNlcjE2MDIxNDYw", "avatar_url": "https://avatars2.githubusercontent.com/u/16021460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryanyzhu", "html_url": "https://github.com/bryanyzhu", "followers_url": "https://api.github.com/users/bryanyzhu/followers", "following_url": "https://api.github.com/users/bryanyzhu/following{/other_user}", "gists_url": "https://api.github.com/users/bryanyzhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryanyzhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryanyzhu/subscriptions", "organizations_url": "https://api.github.com/users/bryanyzhu/orgs", "repos_url": "https://api.github.com/users/bryanyzhu/repos", "events_url": "https://api.github.com/users/bryanyzhu/events{/privacy}", "received_events_url": "https://api.github.com/users/bryanyzhu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-05-10T08:45:24Z", "updated_at": "2020-05-27T05:47:40Z", "closed_at": "2020-05-27T05:47:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a few issues/questions regarding training FCN using gluoncv:\r\n- The training script defines crop_size & base_size, but it's not documented what these are.\r\n   So what do these mean?\r\n- crop_size & base_size accept a single integer value, but for inference we would potentially want to use an asymmetrical size, such as 2048x1024 (cityscapes) or 1920x1080 (full hd camera). Is there a way around this?\r\n- Looking at fcn.py, I don't see a way to combine the heads as in [the original paper](https://arxiv.org/abs/1411.4038)\r\nThe paper uses upsampling (either bilinear or deconvolution) and then element-wise add in order to combine the heads.\r\n![image](https://user-images.githubusercontent.com/57857737/81494687-82d4b200-92b3-11ea-9552-8c8ae2350808.png)\r\nIt also distinguishes FCN-32, FCN-16 & FCN-8, depending on the heads.\r\nDid I misunderstand the code?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1292", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1292/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1292/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1292/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1292", "id": 615327486, "node_id": "MDU6SXNzdWU2MTUzMjc0ODY=", "number": 1292, "title": "Model Zoo comparison plots source data points.", "user": {"login": "RuRo", "id": 3747318, "node_id": "MDQ6VXNlcjM3NDczMTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/3747318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RuRo", "html_url": "https://github.com/RuRo", "followers_url": "https://api.github.com/users/RuRo/followers", "following_url": "https://api.github.com/users/RuRo/following{/other_user}", "gists_url": "https://api.github.com/users/RuRo/gists{/gist_id}", "starred_url": "https://api.github.com/users/RuRo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RuRo/subscriptions", "organizations_url": "https://api.github.com/users/RuRo/orgs", "repos_url": "https://api.github.com/users/RuRo/repos", "events_url": "https://api.github.com/users/RuRo/events{/privacy}", "received_events_url": "https://api.github.com/users/RuRo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-10T06:27:54Z", "updated_at": "2020-05-21T15:07:31Z", "closed_at": "2020-05-21T15:07:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I would like to use the model zoo Accuracy vs Throughput comparison plots ([classification](https://gluon-cv.mxnet.io/model_zoo/classification.html)). Is there some easy way to get the raw data points used in the plot (other than hovering over each point and manually copying the data)?\r\n\r\nP.S. I am assuming from the [citation section](https://github.com/dmlc/gluon-cv#citation) in the readme, that `gluon-cv` is okay with me using this data, as long as I properly credit `gluoncvnlp2020` and `he2018bag` as sources since this is publicly available information.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1282", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1282/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1282/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1282/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1282", "id": 610684003, "node_id": "MDU6SXNzdWU2MTA2ODQwMDM=", "number": 1282, "title": "CustomVOCDetection gives wrong classes.", "user": {"login": "qsheeeeen", "id": 14889605, "node_id": "MDQ6VXNlcjE0ODg5NjA1", "avatar_url": "https://avatars0.githubusercontent.com/u/14889605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qsheeeeen", "html_url": "https://github.com/qsheeeeen", "followers_url": "https://api.github.com/users/qsheeeeen/followers", "following_url": "https://api.github.com/users/qsheeeeen/following{/other_user}", "gists_url": "https://api.github.com/users/qsheeeeen/gists{/gist_id}", "starred_url": "https://api.github.com/users/qsheeeeen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qsheeeeen/subscriptions", "organizations_url": "https://api.github.com/users/qsheeeeen/orgs", "repos_url": "https://api.github.com/users/qsheeeeen/repos", "events_url": "https://api.github.com/users/qsheeeeen/events{/privacy}", "received_events_url": "https://api.github.com/users/qsheeeeen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-01T10:29:37Z", "updated_at": "2020-06-27T11:29:54Z", "closed_at": "2020-06-27T11:29:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "When use CustomVOCDetection to load tiny_motorbike dataset in tutorial.\r\n```\r\nimport gluoncv as gcv\r\ndataset = gcv.data.CustomVOCDetection(\r\n    generate_classes=True,root='~/Dataset/AutoGluon Tutorial/tiny_motorbike',\r\n    splits=[('','trainval')])\r\nprint(dataset.classes)\r\n\r\n```\r\nIt gives wrong answer.\r\n> ('aeroplane', 'bicycle', 'bird', 'boat', 'bottle', 'bus', 'car', 'cat', 'chair', 'cow', 'diningtable', 'dog', 'horse', 'motorbike', 'person', 'pottedplant', 'sheep', 'sofa', 'train', 'tvmonitor')\r\n\r\nThe right answer should be\r\n> ['bicycle', 'boat', 'bus', 'car', 'chair', 'cow', 'dog', 'motorbike', 'person', pottedplant']\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1275", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1275/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1275/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1275/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1275", "id": 606931063, "node_id": "MDU6SXNzdWU2MDY5MzEwNjM=", "number": 1275, "title": "https://github.com/dmlc/gluon-cv/issues/331#issuecomment-424074563", "user": {"login": "jorgetony253", "id": 64344612, "node_id": "MDQ6VXNlcjY0MzQ0NjEy", "avatar_url": "https://avatars0.githubusercontent.com/u/64344612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jorgetony253", "html_url": "https://github.com/jorgetony253", "followers_url": "https://api.github.com/users/jorgetony253/followers", "following_url": "https://api.github.com/users/jorgetony253/following{/other_user}", "gists_url": "https://api.github.com/users/jorgetony253/gists{/gist_id}", "starred_url": "https://api.github.com/users/jorgetony253/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jorgetony253/subscriptions", "organizations_url": "https://api.github.com/users/jorgetony253/orgs", "repos_url": "https://api.github.com/users/jorgetony253/repos", "events_url": "https://api.github.com/users/jorgetony253/events{/privacy}", "received_events_url": "https://api.github.com/users/jorgetony253/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-26T06:15:23Z", "updated_at": "2020-04-26T06:16:05Z", "closed_at": "2020-04-26T06:15:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "C\u00f3digo\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1274", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1274/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1274/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1274/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1274", "id": 606901214, "node_id": "MDU6SXNzdWU2MDY5MDEyMTQ=", "number": 1274, "title": "5", "user": {"login": "Yossyja", "id": 64223634, "node_id": "MDQ6VXNlcjY0MjIzNjM0", "avatar_url": "https://avatars2.githubusercontent.com/u/64223634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yossyja", "html_url": "https://github.com/Yossyja", "followers_url": "https://api.github.com/users/Yossyja/followers", "following_url": "https://api.github.com/users/Yossyja/following{/other_user}", "gists_url": "https://api.github.com/users/Yossyja/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yossyja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yossyja/subscriptions", "organizations_url": "https://api.github.com/users/Yossyja/orgs", "repos_url": "https://api.github.com/users/Yossyja/repos", "events_url": "https://api.github.com/users/Yossyja/events{/privacy}", "received_events_url": "https://api.github.com/users/Yossyja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-26T02:35:08Z", "updated_at": "2020-05-27T05:48:28Z", "closed_at": "2020-05-27T05:48:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1269", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1269/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1269/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1269/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1269", "id": 606358124, "node_id": "MDU6SXNzdWU2MDYzNTgxMjQ=", "number": 1269, "title": "Unable to export I3D Inception v1 model", "user": {"login": "hasanp87", "id": 8871432, "node_id": "MDQ6VXNlcjg4NzE0MzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8871432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hasanp87", "html_url": "https://github.com/hasanp87", "followers_url": "https://api.github.com/users/hasanp87/followers", "following_url": "https://api.github.com/users/hasanp87/following{/other_user}", "gists_url": "https://api.github.com/users/hasanp87/gists{/gist_id}", "starred_url": "https://api.github.com/users/hasanp87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hasanp87/subscriptions", "organizations_url": "https://api.github.com/users/hasanp87/orgs", "repos_url": "https://api.github.com/users/hasanp87/repos", "events_url": "https://api.github.com/users/hasanp87/events{/privacy}", "received_events_url": "https://api.github.com/users/hasanp87/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bryanyzhu", "id": 16021460, "node_id": "MDQ6VXNlcjE2MDIxNDYw", "avatar_url": "https://avatars2.githubusercontent.com/u/16021460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryanyzhu", "html_url": "https://github.com/bryanyzhu", "followers_url": "https://api.github.com/users/bryanyzhu/followers", "following_url": "https://api.github.com/users/bryanyzhu/following{/other_user}", "gists_url": "https://api.github.com/users/bryanyzhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryanyzhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryanyzhu/subscriptions", "organizations_url": "https://api.github.com/users/bryanyzhu/orgs", "repos_url": "https://api.github.com/users/bryanyzhu/repos", "events_url": "https://api.github.com/users/bryanyzhu/events{/privacy}", "received_events_url": "https://api.github.com/users/bryanyzhu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bryanyzhu", "id": 16021460, "node_id": "MDQ6VXNlcjE2MDIxNDYw", "avatar_url": "https://avatars2.githubusercontent.com/u/16021460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryanyzhu", "html_url": "https://github.com/bryanyzhu", "followers_url": "https://api.github.com/users/bryanyzhu/followers", "following_url": "https://api.github.com/users/bryanyzhu/following{/other_user}", "gists_url": "https://api.github.com/users/bryanyzhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryanyzhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryanyzhu/subscriptions", "organizations_url": "https://api.github.com/users/bryanyzhu/orgs", "repos_url": "https://api.github.com/users/bryanyzhu/repos", "events_url": "https://api.github.com/users/bryanyzhu/events{/privacy}", "received_events_url": "https://api.github.com/users/bryanyzhu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-04-24T14:31:54Z", "updated_at": "2020-06-16T10:12:28Z", "closed_at": "2020-06-16T10:12:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "export_block('model/i3d_inceptionv1_kinetics400', net,preprocess=None,layout='CTHW',data_shape=(3, 32, 224, 224))\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/gluoncv/utils/export_helper.py\", line 153, in export_block\r\n    raise RuntimeError(str(last_exception).splitlines()[0])\r\nRuntimeError: Error in operator resnetv10_conv0_fwd: [15:29:26] src/operator/nn/convolution.cc:152: Check failed: dshp.ndim() == 4U (5 vs. 4) : Input data should be 4D in batch-num_filter-y-x", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1264", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1264/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1264/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1264/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1264", "id": 604406466, "node_id": "MDU6SXNzdWU2MDQ0MDY0NjY=", "number": 1264, "title": "can't open hyper link of 'shell script' or 'trainning log'", "user": {"login": "ritaiask", "id": 6147517, "node_id": "MDQ6VXNlcjYxNDc1MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6147517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ritaiask", "html_url": "https://github.com/ritaiask", "followers_url": "https://api.github.com/users/ritaiask/followers", "following_url": "https://api.github.com/users/ritaiask/following{/other_user}", "gists_url": "https://api.github.com/users/ritaiask/gists{/gist_id}", "starred_url": "https://api.github.com/users/ritaiask/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ritaiask/subscriptions", "organizations_url": "https://api.github.com/users/ritaiask/orgs", "repos_url": "https://api.github.com/users/ritaiask/repos", "events_url": "https://api.github.com/users/ritaiask/events{/privacy}", "received_events_url": "https://api.github.com/users/ritaiask/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-22T02:33:15Z", "updated_at": "2020-05-28T06:29:39Z", "closed_at": "2020-05-28T06:29:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "'https://raw.githubusercontent.com/dmlc/web-data/master/gluoncv/logs/classification/imagenet/resnet18_v1.log'\r\ncan't find service ip address of ' raw.githubusercontent.com'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1262", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1262/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1262/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1262/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1262", "id": 603809586, "node_id": "MDU6SXNzdWU2MDM4MDk1ODY=", "number": 1262, "title": "question about action recognition dataset precessing?", "user": {"login": "yezqNLP", "id": 35182031, "node_id": "MDQ6VXNlcjM1MTgyMDMx", "avatar_url": "https://avatars3.githubusercontent.com/u/35182031?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yezqNLP", "html_url": "https://github.com/yezqNLP", "followers_url": "https://api.github.com/users/yezqNLP/followers", "following_url": "https://api.github.com/users/yezqNLP/following{/other_user}", "gists_url": "https://api.github.com/users/yezqNLP/gists{/gist_id}", "starred_url": "https://api.github.com/users/yezqNLP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yezqNLP/subscriptions", "organizations_url": "https://api.github.com/users/yezqNLP/orgs", "repos_url": "https://api.github.com/users/yezqNLP/repos", "events_url": "https://api.github.com/users/yezqNLP/events{/privacy}", "received_events_url": "https://api.github.com/users/yezqNLP/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-21T08:28:13Z", "updated_at": "2020-04-22T02:03:01Z", "closed_at": "2020-04-22T02:03:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey, it's me again. I have 1 question about `VideoClsCustom`, which has 3 sample_indices method:\r\n`_sample_train_indices, _sample_val_indices, _sample_test_indices`.\r\nI notice `_sample_val_indices, _sample_test_indices`  has only one different line code.\r\nIn `_sample_val_indices`:\r\nhttps://github.com/dmlc/gluon-cv/blob/18f8ab526ffb97660e6e5661f991064c20e2699d/gluoncv/data/video_custom/classification.py#L257\r\nIn `_sample_test_indices`:\r\nhttps://github.com/dmlc/gluon-cv/blob/18f8ab526ffb97660e6e5661f991064c20e2699d/gluoncv/data/video_custom/classification.py#L274\r\nI have been wondering why we got this difference? Can you explain about it?\r\n@bryanyzhu ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1258", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1258/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1258/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1258/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1258", "id": 600420311, "node_id": "MDU6SXNzdWU2MDA0MjAzMTE=", "number": 1258, "title": "finetuning action recognition with my own data", "user": {"login": "skelder", "id": 10125862, "node_id": "MDQ6VXNlcjEwMTI1ODYy", "avatar_url": "https://avatars1.githubusercontent.com/u/10125862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelder", "html_url": "https://github.com/skelder", "followers_url": "https://api.github.com/users/skelder/followers", "following_url": "https://api.github.com/users/skelder/following{/other_user}", "gists_url": "https://api.github.com/users/skelder/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelder/subscriptions", "organizations_url": "https://api.github.com/users/skelder/orgs", "repos_url": "https://api.github.com/users/skelder/repos", "events_url": "https://api.github.com/users/skelder/events{/privacy}", "received_events_url": "https://api.github.com/users/skelder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-15T16:14:41Z", "updated_at": "2020-04-23T18:57:30Z", "closed_at": "2020-04-23T18:57:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I apologize if the question is too trivial.\r\n\r\nHowever, when I try to use the train_recognizer.py script on my own data-set I have weird behavior.\r\n\r\nThe accuracy starts with value around 12-14 and stays that way for the whole training sequence, with loss staying around 2.\r\n\r\nflags i tried to modify\r\npretraining \r\ninput-5d \r\nmode\r\nnone of them changed the behavior in meaningful way\r\n\r\n`python train_recognizer.py --dataset custom --data-dir ~/datasetmaking/myWork/Crop/Recordings --val-data-dir ~/datasetmaking/myWork/Crop/Recordings --train-list ~/datasetmaking/myWork/train.txt --val-list ~/datasetmaking/myWork/val.txt --num-gpus 2 --num-epochs 100 --model i3d_resnet50_v1_custom --num-classes 8 --video-loader --use-decord --new-length 32 --lr 0.001 --batch-size 1 --mode hybrid --use-pretrained`\r\n\r\nthis is the last command i used.\r\n\r\ni think my data is the main problem here, I have total 800 videos of 8 different actions with 640 used for training.\r\n\r\nalso I wanted to clarify about input_size. Is it height and width of the video?\r\ndefault says 224 so my videos should be 224x224 pixels?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1251", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1251/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1251/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1251/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1251", "id": 598280865, "node_id": "MDU6SXNzdWU1OTgyODA4NjU=", "number": 1251, "title": "AlphPose with Gluoncv License", "user": {"login": "KapoorHitesh", "id": 7661135, "node_id": "MDQ6VXNlcjc2NjExMzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7661135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KapoorHitesh", "html_url": "https://github.com/KapoorHitesh", "followers_url": "https://api.github.com/users/KapoorHitesh/followers", "following_url": "https://api.github.com/users/KapoorHitesh/following{/other_user}", "gists_url": "https://api.github.com/users/KapoorHitesh/gists{/gist_id}", "starred_url": "https://api.github.com/users/KapoorHitesh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KapoorHitesh/subscriptions", "organizations_url": "https://api.github.com/users/KapoorHitesh/orgs", "repos_url": "https://api.github.com/users/KapoorHitesh/repos", "events_url": "https://api.github.com/users/KapoorHitesh/events{/privacy}", "received_events_url": "https://api.github.com/users/KapoorHitesh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-11T14:48:41Z", "updated_at": "2020-04-17T20:58:57Z", "closed_at": "2020-04-17T20:58:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi can we use AlphaPose freely with gluoncv? AlphaPose originally is not free for commercial use.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1250", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1250/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1250/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1250/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1250", "id": 596381051, "node_id": "MDU6SXNzdWU1OTYzODEwNTE=", "number": 1250, "title": "partial batch normalization in action recognition model", "user": {"login": "yezqNLP", "id": 35182031, "node_id": "MDQ6VXNlcjM1MTgyMDMx", "avatar_url": "https://avatars3.githubusercontent.com/u/35182031?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yezqNLP", "html_url": "https://github.com/yezqNLP", "followers_url": "https://api.github.com/users/yezqNLP/followers", "following_url": "https://api.github.com/users/yezqNLP/following{/other_user}", "gists_url": "https://api.github.com/users/yezqNLP/gists{/gist_id}", "starred_url": "https://api.github.com/users/yezqNLP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yezqNLP/subscriptions", "organizations_url": "https://api.github.com/users/yezqNLP/orgs", "repos_url": "https://api.github.com/users/yezqNLP/repos", "events_url": "https://api.github.com/users/yezqNLP/events{/privacy}", "received_events_url": "https://api.github.com/users/yezqNLP/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-08T07:52:51Z", "updated_at": "2020-04-09T02:29:45Z", "closed_at": "2020-04-09T02:29:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, I found partial batch normalization `patial-bn` in action recognition model, I know it means to `whether to freeze bn layers except the first layer`. However, I don't know why we are doing this? I tried to google `partial batch normalization`, but  I can't find satisfied answer. \r\nps. This issue is not a bug report or problem of your code, so if it's busy for you, you can give me a reference and I will read it myself. : )\r\nThanks! \r\n@bryanyzhu ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1245", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1245/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1245/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1245/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1245", "id": 592788562, "node_id": "MDU6SXNzdWU1OTI3ODg1NjI=", "number": 1245, "title": "Strange training accuracy in the logs shown in the Classification page", "user": {"login": "stgzr", "id": 6370811, "node_id": "MDQ6VXNlcjYzNzA4MTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/6370811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stgzr", "html_url": "https://github.com/stgzr", "followers_url": "https://api.github.com/users/stgzr/followers", "following_url": "https://api.github.com/users/stgzr/following{/other_user}", "gists_url": "https://api.github.com/users/stgzr/gists{/gist_id}", "starred_url": "https://api.github.com/users/stgzr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stgzr/subscriptions", "organizations_url": "https://api.github.com/users/stgzr/orgs", "repos_url": "https://api.github.com/users/stgzr/repos", "events_url": "https://api.github.com/users/stgzr/events{/privacy}", "received_events_url": "https://api.github.com/users/stgzr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-02T17:10:34Z", "updated_at": "2020-05-20T09:46:53Z", "closed_at": "2020-05-20T09:46:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I read some training logs in the [Classification page](https://gluon-cv.mxnet.io/model_zoo/classification.html) and found some strange results.\r\n- As the training log [resnet50_v1d.log](https://raw.githubusercontent.com/dmlc/web-data/master/gluoncv/logs/classification/imagenet/resnet50_v1d.log) shows, the training accuracy is nearly 80%+ at the very early stage. \r\n- But in this log [resnet101_v1.log](https://raw.githubusercontent.com/dmlc/web-data/master/gluoncv/logs/classification/imagenet/resnet101_v1.log), the training accuracy looks normal(1% at first 50 iterations).\r\nI can't understand why at the very beginning, the training accuracy could reach 80%+ in the first 50 iterations as resnet50_v1d training even with a warmup stage.\r\nIs there anything I missed?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1239", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1239/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1239/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1239/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1239", "id": 591859315, "node_id": "MDU6SXNzdWU1OTE4NTkzMTU=", "number": 1239, "title": "Add depth perception models and tutorials", "user": {"login": "la-cruche", "id": 32586780, "node_id": "MDQ6VXNlcjMyNTg2Nzgw", "avatar_url": "https://avatars1.githubusercontent.com/u/32586780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/la-cruche", "html_url": "https://github.com/la-cruche", "followers_url": "https://api.github.com/users/la-cruche/followers", "following_url": "https://api.github.com/users/la-cruche/following{/other_user}", "gists_url": "https://api.github.com/users/la-cruche/gists{/gist_id}", "starred_url": "https://api.github.com/users/la-cruche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/la-cruche/subscriptions", "organizations_url": "https://api.github.com/users/la-cruche/orgs", "repos_url": "https://api.github.com/users/la-cruche/repos", "events_url": "https://api.github.com/users/la-cruche/events{/privacy}", "received_events_url": "https://api.github.com/users/la-cruche/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-01T11:57:41Z", "updated_at": "2020-07-24T16:12:34Z", "closed_at": "2020-07-24T16:12:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nthe field of depth perception from images is getting traction. For example:\r\n\r\n- _Depth from Videos in the Wild: Unsupervised Monocular Depth Learning from Unknown Cameras_ https://arxiv.org/abs/1904.04998 (Gordon et al)\r\n- _Single-Image Depth Perception in the Wild_ https://papers.nips.cc/paper/6489-single-image-depth-perception-in-the-wild.pdf (Chen et al)\r\n- _FastDepth: Fast Monocular Depth Estimation on Embedded Systems_ https://arxiv.org/abs/1903.03273 (Wofk et al)\r\n- Andrej Karpathy dedicates an exciting section of the Tesla Autonomy Day presentation to depth perception https://www.youtube.com/watch?v=Ucp0TTmvqOE (2:16:46)\r\n\r\nI'd love gluoncv to make this domain of vision more accessible by providing pre-trained models and tutos. I have a slight preference for monocular models, which intuitively look easier to implement in the field; but open to learn the SOTA from you !\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1234", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1234/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1234/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1234/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1234", "id": 589770501, "node_id": "MDU6SXNzdWU1ODk3NzA1MDE=", "number": 1234, "title": "Class names for segmentation models are broken", "user": {"login": "turiphro", "id": 3472431, "node_id": "MDQ6VXNlcjM0NzI0MzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3472431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/turiphro", "html_url": "https://github.com/turiphro", "followers_url": "https://api.github.com/users/turiphro/followers", "following_url": "https://api.github.com/users/turiphro/following{/other_user}", "gists_url": "https://api.github.com/users/turiphro/gists{/gist_id}", "starred_url": "https://api.github.com/users/turiphro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/turiphro/subscriptions", "organizations_url": "https://api.github.com/users/turiphro/orgs", "repos_url": "https://api.github.com/users/turiphro/repos", "events_url": "https://api.github.com/users/turiphro/events{/privacy}", "received_events_url": "https://api.github.com/users/turiphro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-29T11:25:14Z", "updated_at": "2020-03-31T00:15:50Z", "closed_at": "2020-03-31T00:15:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The segmentation models have their `.classes` attribute set incorrectly: accessing them returns a `<property object>`. This is because the model loaders access a property of the dataset *class*, instead of a property of an *instance* of that class.\r\n\r\nTo replicate:\r\n\r\n```\r\nimport gluoncv as gcv\r\n\r\nMODEL1 = \"resnet152_v2\"\r\nMODEL2 = \"yolo3_darknet53_coco\"\r\nMODEL3 = \"fcn_resnet101_voc\"\r\nMODEL4 = \"psp_resnet101_coco\"\r\n\r\nmodel1 = gcv.model_zoo.get_model(MODEL1, pretrained=True)\r\nmodel2 = gcv.model_zoo.get_model(MODEL2, pretrained=True)\r\nmodel3 = gcv.model_zoo.get_model(MODEL3, pretrained=True)\r\nmodel4 = gcv.model_zoo.get_model(MODEL4, pretrained=True)\r\n\r\nprint(\"Classification model:\", model1.classes)\r\nprint(\"Object detection model:\", model2.classes)\r\nprint(\"Segmentation model:\", model3.classes)\r\nprint(\"Segmentation model:\", model4.classes)\r\n```\r\n\r\nThe first two output a tuple with class names, but the segmentation models output a `<property object>`:\r\n\r\n```\r\nClassification model: ['tench', 'goldfish', 'great white shark', 'tiger shark', 'hammerhead', 'electric ray', 'stingray', 'cock', 'hen', 'ostrich', 'brambling', 'goldfinch', 'house finch', 'junco', 'indigo bunting', 'rob.....\r\nObject detection model: ['person', 'bicycle', 'car', 'motorcycle', 'airplane', 'bus', 'train', 'truck', 'boat', 'traffic light', 'fire hydrant', 'stop sign', 'parking meter', 'bench', 'bird', 'cat', 'dog', 'horse', 'shee....\r\nSegmentation model: <property object at 0x7f2d6d65e5f0>\r\nSegmentation model: <property object at 0x7f2d6d65c8f0>\r\n```\r\n\r\nI'll post a PR to fix this issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1232", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1232/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1232/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1232/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1232", "id": 588938325, "node_id": "MDU6SXNzdWU1ODg5MzgzMjU=", "number": 1232, "title": "gluoncv.model_zoo.get_model always  duplicate download models ", "user": {"login": "chouzz", "id": 18023066, "node_id": "MDQ6VXNlcjE4MDIzMDY2", "avatar_url": "https://avatars2.githubusercontent.com/u/18023066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chouzz", "html_url": "https://github.com/chouzz", "followers_url": "https://api.github.com/users/chouzz/followers", "following_url": "https://api.github.com/users/chouzz/following{/other_user}", "gists_url": "https://api.github.com/users/chouzz/gists{/gist_id}", "starred_url": "https://api.github.com/users/chouzz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chouzz/subscriptions", "organizations_url": "https://api.github.com/users/chouzz/orgs", "repos_url": "https://api.github.com/users/chouzz/repos", "events_url": "https://api.github.com/users/chouzz/events{/privacy}", "received_events_url": "https://api.github.com/users/chouzz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-27T07:22:25Z", "updated_at": "2020-03-27T08:27:22Z", "closed_at": "2020-03-27T08:27:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "when i use `python fcn_demo.py`  the code always download models from website,the code is under here which is exactly the same with  [this](https://gluon-cv.mxnet.io/build/examples_segmentation/demo_fcn.html)\r\n\r\n```python\r\nimport mxnet as mx\r\nfrom mxnet import image\r\nfrom mxnet.gluon.data.vision import transforms\r\nimport gluoncv\r\n# using cpu\r\nctx = mx.cpu(0)\r\nurl = 'https://raw.githubusercontent.com/dmlc/web-data/master/gluoncv/segmentation/voc_examples/1.jpg'\r\nfilename = 'example.jpg'\r\ngluoncv.utils.download(url, filename)\r\n# load the image\r\nimg = image.imread(filename)\r\n\r\nfrom matplotlib import pyplot as plt\r\nplt.imshow(img.asnumpy())\r\nplt.show()\r\n\r\n##############################################################################\r\n# normalize the image using dataset mean\r\nfrom gluoncv.data.transforms.presets.segmentation import test_transform\r\nimg = test_transform(img, ctx)\r\nmodel = gluoncv.model_zoo.get_model('fcn_resnet101_voc', pretrained=True)\r\n\r\n##############################################################################\r\n# make prediction using single scale\r\noutput = model.predict(img)\r\npredict = mx.nd.squeeze(mx.nd.argmax(output, 1)).asnumpy()\r\nfrom gluoncv.utils.viz import get_color_pallete\r\nimport matplotlib.image as mpimg\r\nmask = get_color_pallete(predict, 'pascal_voc')\r\nmask.save('output.png')\r\n```\r\n\r\nWhen I run the code, it automatically downloads the model from the , \r\n\r\n\r\n![image](https://user-images.githubusercontent.com/18023066/77732230-5c2e2500-703f-11ea-9062-71628f8cda2e.png)\r\n\r\n\r\n\r\n\r\nEven if I manually put the model file into  `...user/.mxnet /models`  , when I run it again, the program will download the model file again\r\n\r\n![image](https://user-images.githubusercontent.com/18023066/77731863-b7abe300-703e-11ea-949a-14af0d688458.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1231", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1231/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1231/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1231/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1231", "id": 588093916, "node_id": "MDU6SXNzdWU1ODgwOTM5MTY=", "number": 1231, "title": "Input data should be 4D in batch-num_filter-y-x", "user": {"login": "nicholasguimaraes", "id": 41639569, "node_id": "MDQ6VXNlcjQxNjM5NTY5", "avatar_url": "https://avatars1.githubusercontent.com/u/41639569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicholasguimaraes", "html_url": "https://github.com/nicholasguimaraes", "followers_url": "https://api.github.com/users/nicholasguimaraes/followers", "following_url": "https://api.github.com/users/nicholasguimaraes/following{/other_user}", "gists_url": "https://api.github.com/users/nicholasguimaraes/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicholasguimaraes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicholasguimaraes/subscriptions", "organizations_url": "https://api.github.com/users/nicholasguimaraes/orgs", "repos_url": "https://api.github.com/users/nicholasguimaraes/repos", "events_url": "https://api.github.com/users/nicholasguimaraes/events{/privacy}", "received_events_url": "https://api.github.com/users/nicholasguimaraes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-26T01:40:50Z", "updated_at": "2020-04-12T22:00:57Z", "closed_at": "2020-04-12T22:00:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I am trying to run inference.py but I am encountering this error:\r\n\r\nFile \"C:\\Users\\Windows\\AppData\\Roaming\\Python\\Python36\\site-packages\\mxnet\\base.py\", line 253, in check_call\r\n    raise MXNetError(py_str(_LIB.MXGetLastError()))\r\nmxnet.base.MXNetError: [16:58:50] C:\\Jenkins\\workspace\\mxnet-tag\\mxnet\\src\\operator\\nn\\convolution.cc:152: Check failed: dshp.ndim() == 4U (5 vs. 4) : Input data should be 4D in batch-num_filter-y-x\r\n\r\n\r\nThis is what I'm running on command line:\r\n\r\npython inference.py --data-list ucfTrainTestlist/inference.txt --model resnet101_v1b_kinetics400 --resume-params params/ucf101-resnet101_v1b_kinetics400-059.params\r\n\r\nThis is the input shape I'm passing 1x3x32x224x224 \r\n\r\nI know it should be only 4D. What should be removed from the input data?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1229", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1229/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1229/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1229/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1229", "id": 586691391, "node_id": "MDU6SXNzdWU1ODY2OTEzOTE=", "number": 1229, "title": "slowfast network for hmdb51 dataset", "user": {"login": "yezqNLP", "id": 35182031, "node_id": "MDQ6VXNlcjM1MTgyMDMx", "avatar_url": "https://avatars3.githubusercontent.com/u/35182031?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yezqNLP", "html_url": "https://github.com/yezqNLP", "followers_url": "https://api.github.com/users/yezqNLP/followers", "following_url": "https://api.github.com/users/yezqNLP/following{/other_user}", "gists_url": "https://api.github.com/users/yezqNLP/gists{/gist_id}", "starred_url": "https://api.github.com/users/yezqNLP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yezqNLP/subscriptions", "organizations_url": "https://api.github.com/users/yezqNLP/orgs", "repos_url": "https://api.github.com/users/yezqNLP/repos", "events_url": "https://api.github.com/users/yezqNLP/events{/privacy}", "received_events_url": "https://api.github.com/users/yezqNLP/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-03-24T04:55:17Z", "updated_at": "2020-03-28T06:17:58Z", "closed_at": "2020-03-28T06:17:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried to train slowfast network in hmdb51 dataset, I can run the program successfully but the accuracy is pretty low about 0.2. The work that I have done is follwing:\r\n\r\n1. I added a method\r\n \r\n```\r\ndef slowfast_8x8_resnet50_hmdb51(nclass=51, pretrained=False, pretrained_base=True,\r\n                                      use_tsn=False, num_segments=1, num_crop=1,\r\n                                      partial_bn=False, feat_ext=False,\r\n                                      root='~/.mxnet/models', ctx=cpu(), **kwargs):\r\n    model = SlowFast(nclass=nclass,\r\n                     layers=[3, 4, 6, 3],\r\n                     pretrained=pretrained,\r\n                     pretrained_base=pretrained_base,\r\n                     feat_ext=feat_ext,\r\n                     num_segments=num_segments,\r\n                     num_crop=num_crop,\r\n                     partial_bn=partial_bn,\r\n                     alpha=4,\r\n                     beta_inv=8,\r\n                     fusion_conv_channel_ratio=2,\r\n                     fusion_kernel_size=7,\r\n                     width_per_group=64,\r\n                     num_groups=1,\r\n                     slow_temporal_stride=8,\r\n                     fast_temporal_stride=2,\r\n                     slow_frames=8,\r\n                     fast_frames=32,\r\n                     ctx=ctx,\r\n                     **kwargs)\r\n    if pretrained:\r\n        from ..model_store import get_model_file\r\n        model.load_parameters(get_model_file('slowfast_8x8_resnet50_hmdb51',\r\n                                             tag=pretrained, root=root), ctx=ctx)\r\n        from ...data import HMDB51Attr\r\n        attrib = HMDB51Attr()\r\n        model.classes = attrib.classes\r\n    model.collect_params().reset_ctx(ctx)\r\n    return model\r\n```\r\n\r\n2. I modified the train-dataset and val-dataset to add some slowfast paramters, like `video_loader=opt.video_loader, use_decord=opt.use_decord,\r\n                                slowfast=opt.slowfast, slow_temporal_stride=opt.slow_temporal_stride, fast_temporal_stride=opt.fast_temporal_stride` :\r\nhttps://github.com/dmlc/gluon-cv/blob/874f783fa57dadbfd38607ad58f4309141a9479b/scripts/action-recognition/train_recognizer.py#L204 \r\n\r\n```\r\n        train_dataset = HMDB51(setting=opt.train_list, root=data_dir, train=True,\r\n                                new_width=opt.new_width, new_height=opt.new_height, new_length=opt.new_length, new_step=opt.new_step,\r\n                                target_width=input_size, target_height=input_size, video_loader=opt.video_loader, use_decord=opt.use_decord,\r\n                                slowfast=opt.slowfast, slow_temporal_stride=opt.slow_temporal_stride, fast_temporal_stride=opt.fast_temporal_stride,\r\n                                num_segments=opt.num_segments, transform=transform_train)\r\n\r\n```\r\n\r\nAnd the program can run successfully, and the namespace is:\r\n\r\n```\r\nNamespace(accumulate=1, batch_norm=False, batch_size=6, clip_grad=0, crop_ratio=0.875, data_dir='/home/xxx/.mxne\r\nt/datasets/hmdb51/videos', dataset='hmdb51', dtype='float32', eval=False, fast_temporal_stride=2, freeze_bn=Fals\r\ne, hard_weight=0.5, hashtag='', input_5d=False, input_size=224, kvstore=None, label_smoothing=False, last_gamma=\r\nFalse, log_interval=50, logging_file='slowfast_8x8_resnet50_hmdb51.log', lr=0.01, lr_decay=0.1, lr_decay_epoch='\r\n15,25,35', lr_decay_period=0, lr_mode='step', mixup=False, mixup_alpha=0.2, mixup_off_epoch=0, mode='hybrid', mo\r\ndel='slowfast_8x8_resnet50_hmdb51', momentum=0.9, new_height=256, new_length=64, new_step=1, new_width=340, no_w\r\nd=False, num_classes=51, num_crop=1, num_epochs=80, num_gpus=2, num_segments=1, num_workers=8, partial_bn=False,\r\n prefetch_ratio=1.0, resume_epoch=0, resume_params='', resume_states='', save_dir='./hmdb51_slowfast_logs/', sav\r\ne_frequency=20, scale_ratios='1.0,0.8', slow_temporal_stride=8, slowfast=True, teacher=None, temperature=20, tra\r\nin_list='/home/xxx/.mxnet/datasets/hmdb51/testTrainMulti_7030_splits/hmdb51_train_split_1_rawframes.txt', use_am\r\np=False, use_decord=True, use_gn=False, use_pretrained=False, use_se=False, use_tsn=False, val_data_dir=None, va\r\nl_list='/home/xxx/.mxnet/datasets/hmdb51/testTrainMulti_7030_splits/hmdb51_val_split_1_rawframes.txt', video_loa\r\nder=True, warmup_epochs=0, warmup_lr=0.0, wd=0.0001)\r\n```\r\nThe acc is pretty slow, so there is wrong with my modification. Can u look at it?\r\n@bryanyzhu\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1224", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1224/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1224/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1224/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1224", "id": 585185210, "node_id": "MDU6SXNzdWU1ODUxODUyMTA=", "number": 1224, "title": "MXNet Nightly Builds Moved to S3", "user": {"login": "szha", "id": 2626883, "node_id": "MDQ6VXNlcjI2MjY4ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2626883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/szha", "html_url": "https://github.com/szha", "followers_url": "https://api.github.com/users/szha/followers", "following_url": "https://api.github.com/users/szha/following{/other_user}", "gists_url": "https://api.github.com/users/szha/gists{/gist_id}", "starred_url": "https://api.github.com/users/szha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/szha/subscriptions", "organizations_url": "https://api.github.com/users/szha/orgs", "repos_url": "https://api.github.com/users/szha/repos", "events_url": "https://api.github.com/users/szha/events{/privacy}", "received_events_url": "https://api.github.com/users/szha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-20T16:25:40Z", "updated_at": "2020-04-30T17:29:41Z", "closed_at": "2020-04-30T17:29:41Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi,\r\n\r\nMXNet nightly builds have been moved from PyPI to S3 (https://github.com/pypa/pypi-support/issues/243). If this project requires the nightly builds for CI validation, please make sure that your CI pipeline now takes the nightly builds from https://dist.mxnet.io/python. Furthermore, as MXNet [1.7](https://github.com/apache/incubator-mxnet/issues/16864) and [2.0](https://github.com/apache/incubator-mxnet/issues/16167) are currently in progress simultaneously, we are releasing nightly builds for both 1.x and 2.x. Take `mxnet-cu102` for example:\r\n\r\nIf you need the nightly builds for 1.x:\r\n```\r\npip install --pre \"mxnet-cu102<2\" -f https://dist.mxnet.io/python\r\n```\r\n\r\nIf you need the nightly builds for 2.x:\r\n```\r\npip install --pre \"mxnet-cu102>=2\" -f https://dist.mxnet.io/python\r\n```\r\n\r\nFeel free to close this issue if the necessary changes have been made, or If the project doesn't rely on MXNet nightly builds. Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1223", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1223/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1223/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1223/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1223", "id": 584885358, "node_id": "MDU6SXNzdWU1ODQ4ODUzNTg=", "number": 1223, "title": "[Object Tracking] Handling Frame Exit", "user": {"login": "HieronymusLex", "id": 42975160, "node_id": "MDQ6VXNlcjQyOTc1MTYw", "avatar_url": "https://avatars0.githubusercontent.com/u/42975160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HieronymusLex", "html_url": "https://github.com/HieronymusLex", "followers_url": "https://api.github.com/users/HieronymusLex/followers", "following_url": "https://api.github.com/users/HieronymusLex/following{/other_user}", "gists_url": "https://api.github.com/users/HieronymusLex/gists{/gist_id}", "starred_url": "https://api.github.com/users/HieronymusLex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HieronymusLex/subscriptions", "organizations_url": "https://api.github.com/users/HieronymusLex/orgs", "repos_url": "https://api.github.com/users/HieronymusLex/repos", "events_url": "https://api.github.com/users/HieronymusLex/events{/privacy}", "received_events_url": "https://api.github.com/users/HieronymusLex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-20T07:17:59Z", "updated_at": "2020-03-24T00:19:52Z", "closed_at": "2020-03-23T08:25:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I\u2019m curious if there are any recommendations for how to perform object reidentification when using SiamRPN for SOT? My scenario is when the tracked object leaves the view in one frame causing the best_score to drop below some threshold, then they reenter in a subsequent frame, entering from a different location to their exit point.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1219", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1219/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1219/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1219/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1219", "id": 584236362, "node_id": "MDU6SXNzdWU1ODQyMzYzNjI=", "number": 1219, "title": "Using slowfast_4x16_resnet50_custom pretrained model setting pretrained True seems not to be effective. ", "user": {"login": "chenyihang1993", "id": 31203698, "node_id": "MDQ6VXNlcjMxMjAzNjk4", "avatar_url": "https://avatars1.githubusercontent.com/u/31203698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyihang1993", "html_url": "https://github.com/chenyihang1993", "followers_url": "https://api.github.com/users/chenyihang1993/followers", "following_url": "https://api.github.com/users/chenyihang1993/following{/other_user}", "gists_url": "https://api.github.com/users/chenyihang1993/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyihang1993/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyihang1993/subscriptions", "organizations_url": "https://api.github.com/users/chenyihang1993/orgs", "repos_url": "https://api.github.com/users/chenyihang1993/repos", "events_url": "https://api.github.com/users/chenyihang1993/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyihang1993/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-19T08:12:52Z", "updated_at": "2020-03-30T06:40:48Z", "closed_at": "2020-03-30T06:40:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to use slowfast_4x16_resnet50_custom pretrained model and set the paramter pretrained True,   but the pretrained parameters seems not to be loaded. The part of the code is https://github.com/dmlc/gluon-cv/blob/master/gluoncv/model_zoo/action_recognition/slowfast.py#L916-L919", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1214", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1214/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1214/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1214/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1214", "id": 580712664, "node_id": "MDU6SXNzdWU1ODA3MTI2NjQ=", "number": 1214, "title": "Error when use pretrained model", "user": {"login": "yezqNLP", "id": 35182031, "node_id": "MDQ6VXNlcjM1MTgyMDMx", "avatar_url": "https://avatars3.githubusercontent.com/u/35182031?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yezqNLP", "html_url": "https://github.com/yezqNLP", "followers_url": "https://api.github.com/users/yezqNLP/followers", "following_url": "https://api.github.com/users/yezqNLP/following{/other_user}", "gists_url": "https://api.github.com/users/yezqNLP/gists{/gist_id}", "starred_url": "https://api.github.com/users/yezqNLP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yezqNLP/subscriptions", "organizations_url": "https://api.github.com/users/yezqNLP/orgs", "repos_url": "https://api.github.com/users/yezqNLP/repos", "events_url": "https://api.github.com/users/yezqNLP/events{/privacy}", "received_events_url": "https://api.github.com/users/yezqNLP/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-03-13T16:29:55Z", "updated_at": "2020-03-19T16:00:37Z", "closed_at": "2020-03-19T16:00:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried one model of action recognition: resnet50_v1b_hmdb51. I can run the model from scratch successfully. However, when I downloaded the pretrained model and try to load the pretrained model, it reports error:\r\n\r\n> terminate` called after throwing an instance of 'dmlc::Error' what():  [00:20:29] /home/travis/build/dmlc/mxnet-distro/mxnet-build/3rdparty/mshadow/mshadow/./stream_gpu-inl.h:115: Check failed: err == CUBLAS_STATUS_SUCCESS (1 vs. 0) : Create cublas handle failed\r\nStack trace:\r\n  [bt] (0) /home/xxx/download/yes/envs/ac/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x4b04cb) [0x7f40b31da4cb]\r\n[bt] (1) /home/xxx/download/yes/envs/ac/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x25a9b1b) [0x7f40b52d3b1b]\r\n  [bt] (2) /home/xxx/download/yes/envs/ac/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x25aa958) [0x7f40b52d4958]\r\n  [bt] (3) /home/xxx/download/yes/envs/ac/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x25c5257) [0x7f40b52ef257]\r\n  [bt] (4) /home/xxx/download/yes/envs/ac/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x25c5486) [0x7f40b52ef486]\r\n  [bt] (5) /home/xxx/download/yes/envs/ac/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x25c0444) [0x7f40b52ea444]\r\n  [bt] (6) /home/xxx/download/yes/envs/ac/bin/../lib/libstdc++.so.6(+0xc8421) [0x7f410137c421]\r\n  [bt] (7) /lib/x86_64-linux-gnu/libpthread.so.0(+0x76ba) [0x7f410645b6ba]\r\n  [bt] (8) /lib/x86_64-linux-gnu/libc.so.6(clone+0x6d) [0x7f410619141d]\r\n\r\nAfter debug, I found this line which caused the error:\r\n`net.collect_params().reset_ctx(context)`\r\nI can't figure out why this happen as I can run successfully without pretrained model. I use cuda 10 in Ubuntu 16.04.\r\n@bryanyzhu", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1213", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1213/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1213/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1213/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1213", "id": 579873840, "node_id": "MDU6SXNzdWU1Nzk4NzM4NDA=", "number": 1213, "title": "Transfer learning Gluoncv Type ", "user": {"login": "roy6324", "id": 48947988, "node_id": "MDQ6VXNlcjQ4OTQ3OTg4", "avatar_url": "https://avatars2.githubusercontent.com/u/48947988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roy6324", "html_url": "https://github.com/roy6324", "followers_url": "https://api.github.com/users/roy6324/followers", "following_url": "https://api.github.com/users/roy6324/following{/other_user}", "gists_url": "https://api.github.com/users/roy6324/gists{/gist_id}", "starred_url": "https://api.github.com/users/roy6324/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roy6324/subscriptions", "organizations_url": "https://api.github.com/users/roy6324/orgs", "repos_url": "https://api.github.com/users/roy6324/repos", "events_url": "https://api.github.com/users/roy6324/events{/privacy}", "received_events_url": "https://api.github.com/users/roy6324/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-12T11:29:17Z", "updated_at": "2020-04-17T08:21:46Z", "closed_at": "2020-04-17T08:21:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello @zhreshold ,\r\n\r\nWhen doing Transfer Learning using Gluoncv ( classification , semantic segmentation , instance segmentation ), do we reinitialize the last layer , and also finetune the whole network's weights ? or do we reinitialize the last layer, and treat the rest of the network as a fixed feature extractor for the new dataset ( only update weights for the last layer) ? \r\n\r\nThanks :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1209", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1209/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1209/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1209/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1209", "id": 576161953, "node_id": "MDU6SXNzdWU1NzYxNjE5NTM=", "number": 1209, "title": "Finetune a pretrained detection model", "user": {"login": "solua100", "id": 61828448, "node_id": "MDQ6VXNlcjYxODI4NDQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/61828448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solua100", "html_url": "https://github.com/solua100", "followers_url": "https://api.github.com/users/solua100/followers", "following_url": "https://api.github.com/users/solua100/following{/other_user}", "gists_url": "https://api.github.com/users/solua100/gists{/gist_id}", "starred_url": "https://api.github.com/users/solua100/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solua100/subscriptions", "organizations_url": "https://api.github.com/users/solua100/orgs", "repos_url": "https://api.github.com/users/solua100/repos", "events_url": "https://api.github.com/users/solua100/events{/privacy}", "received_events_url": "https://api.github.com/users/solua100/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-05T10:48:11Z", "updated_at": "2020-03-06T10:39:00Z", "closed_at": "2020-03-06T10:38:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI follow Finetune a pretrained detection model in gluoncv website: \r\nhttps://gluon-cv.mxnet.io/build/examples_detection/finetune_detection.html#sphx-glr-download-build-examples-detection-finetune-detection-py\r\n\r\nEverything work fine but at last step, Predict with finetuned model\r\nImage show has no bound like website\r\n\r\nMy pc: cuda toolkit 10.1, mxnet 1.5.1, gluoncv 0.6.0\r\nCan someone help, thanks a lot", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1208", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1208/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1208/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1208/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1208", "id": 575293041, "node_id": "MDU6SXNzdWU1NzUyOTMwNDE=", "number": 1208, "title": "Training slowfast: computer's memory usage increased", "user": {"login": "chenyihang1993", "id": 31203698, "node_id": "MDQ6VXNlcjMxMjAzNjk4", "avatar_url": "https://avatars1.githubusercontent.com/u/31203698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyihang1993", "html_url": "https://github.com/chenyihang1993", "followers_url": "https://api.github.com/users/chenyihang1993/followers", "following_url": "https://api.github.com/users/chenyihang1993/following{/other_user}", "gists_url": "https://api.github.com/users/chenyihang1993/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyihang1993/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyihang1993/subscriptions", "organizations_url": "https://api.github.com/users/chenyihang1993/orgs", "repos_url": "https://api.github.com/users/chenyihang1993/repos", "events_url": "https://api.github.com/users/chenyihang1993/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyihang1993/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-04T10:30:10Z", "updated_at": "2020-03-19T16:00:49Z", "closed_at": "2020-03-19T16:00:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I used slowfast to train my own dataset, I found that the computer's memory usage increased with time. Is this normal? Looking forward for your reply.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1204", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1204/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1204/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1204/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1204", "id": 573640684, "node_id": "MDU6SXNzdWU1NzM2NDA2ODQ=", "number": 1204, "title": "Broken examples", "user": {"login": "shersoni610", "id": 57876250, "node_id": "MDQ6VXNlcjU3ODc2MjUw", "avatar_url": "https://avatars3.githubusercontent.com/u/57876250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shersoni610", "html_url": "https://github.com/shersoni610", "followers_url": "https://api.github.com/users/shersoni610/followers", "following_url": "https://api.github.com/users/shersoni610/following{/other_user}", "gists_url": "https://api.github.com/users/shersoni610/gists{/gist_id}", "starred_url": "https://api.github.com/users/shersoni610/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shersoni610/subscriptions", "organizations_url": "https://api.github.com/users/shersoni610/orgs", "repos_url": "https://api.github.com/users/shersoni610/repos", "events_url": "https://api.github.com/users/shersoni610/events{/privacy}", "received_events_url": "https://api.github.com/users/shersoni610/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-01T23:22:51Z", "updated_at": "2020-03-16T22:49:03Z", "closed_at": "2020-03-16T22:49:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nAre the following python and notebook examples broken:\r\n\r\nhttps://gluon-cv.mxnet.io/build/examples_classification/demo_imagenet.html\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1203", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1203/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1203/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1203/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1203", "id": 571767634, "node_id": "MDU6SXNzdWU1NzE3Njc2MzQ=", "number": 1203, "title": "Github Installation links incorrectly", "user": {"login": "ehsanmok", "id": 6980212, "node_id": "MDQ6VXNlcjY5ODAyMTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6980212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehsanmok", "html_url": "https://github.com/ehsanmok", "followers_url": "https://api.github.com/users/ehsanmok/followers", "following_url": "https://api.github.com/users/ehsanmok/following{/other_user}", "gists_url": "https://api.github.com/users/ehsanmok/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehsanmok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehsanmok/subscriptions", "organizations_url": "https://api.github.com/users/ehsanmok/orgs", "repos_url": "https://api.github.com/users/ehsanmok/repos", "events_url": "https://api.github.com/users/ehsanmok/events{/privacy}", "received_events_url": "https://api.github.com/users/ehsanmok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-27T01:47:52Z", "updated_at": "2020-03-16T22:47:53Z", "closed_at": "2020-03-16T22:47:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "The github installation links to the website instead of [install page](https://gluon-cv.mxnet.io/install.html)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1198", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1198/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1198/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1198/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1198", "id": 569083130, "node_id": "MDU6SXNzdWU1NjkwODMxMzA=", "number": 1198, "title": "How to modify SSDDefaultTrainTransform", "user": {"login": "TorRient", "id": 39651857, "node_id": "MDQ6VXNlcjM5NjUxODU3", "avatar_url": "https://avatars3.githubusercontent.com/u/39651857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TorRient", "html_url": "https://github.com/TorRient", "followers_url": "https://api.github.com/users/TorRient/followers", "following_url": "https://api.github.com/users/TorRient/following{/other_user}", "gists_url": "https://api.github.com/users/TorRient/gists{/gist_id}", "starred_url": "https://api.github.com/users/TorRient/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TorRient/subscriptions", "organizations_url": "https://api.github.com/users/TorRient/orgs", "repos_url": "https://api.github.com/users/TorRient/repos", "events_url": "https://api.github.com/users/TorRient/events{/privacy}", "received_events_url": "https://api.github.com/users/TorRient/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-21T17:21:02Z", "updated_at": "2020-02-22T15:09:30Z", "closed_at": "2020-02-22T15:09:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I saw in the code that SSDDefaultTrainTransform provides various augmentation mechanisms like:\r\nrandom color jitter, random cropping, random flip but i don't want to use random flip.\r\nSo how to modify it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1194", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1194/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1194/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1194/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1194", "id": 568478050, "node_id": "MDU6SXNzdWU1Njg0NzgwNTA=", "number": 1194, "title": "CUDA 10.2 support", "user": {"login": "MangoCats", "id": 4571505, "node_id": "MDQ6VXNlcjQ1NzE1MDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4571505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MangoCats", "html_url": "https://github.com/MangoCats", "followers_url": "https://api.github.com/users/MangoCats/followers", "following_url": "https://api.github.com/users/MangoCats/following{/other_user}", "gists_url": "https://api.github.com/users/MangoCats/gists{/gist_id}", "starred_url": "https://api.github.com/users/MangoCats/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MangoCats/subscriptions", "organizations_url": "https://api.github.com/users/MangoCats/orgs", "repos_url": "https://api.github.com/users/MangoCats/repos", "events_url": "https://api.github.com/users/MangoCats/events{/privacy}", "received_events_url": "https://api.github.com/users/MangoCats/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-20T18:07:02Z", "updated_at": "2020-02-21T21:45:09Z", "closed_at": "2020-02-20T22:54:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any plan/timeline to build a support package for CUDA 10.2?\r\n\r\nI just finished my MXNET install based on 10.2 and would like to use GluonCV with it, but the latest version I find supported in GluonCV is 10.1...\r\n\r\nThanks,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1193", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1193/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1193/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1193/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1193", "id": 566589194, "node_id": "MDU6SXNzdWU1NjY1ODkxOTQ=", "number": 1193, "title": "ValueError: \"siamrpn_alexnet_v2_otb15\" is not among the following model list:", "user": {"login": "josephceli", "id": 41298939, "node_id": "MDQ6VXNlcjQxMjk4OTM5", "avatar_url": "https://avatars0.githubusercontent.com/u/41298939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josephceli", "html_url": "https://github.com/josephceli", "followers_url": "https://api.github.com/users/josephceli/followers", "following_url": "https://api.github.com/users/josephceli/following{/other_user}", "gists_url": "https://api.github.com/users/josephceli/gists{/gist_id}", "starred_url": "https://api.github.com/users/josephceli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josephceli/subscriptions", "organizations_url": "https://api.github.com/users/josephceli/orgs", "repos_url": "https://api.github.com/users/josephceli/repos", "events_url": "https://api.github.com/users/josephceli/events{/privacy}", "received_events_url": "https://api.github.com/users/josephceli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-18T01:21:26Z", "updated_at": "2020-02-18T01:34:44Z", "closed_at": "2020-02-18T01:34:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to run the SiamRPN model based off the following web page\r\n\r\nhttps://gluon-cv.mxnet.io/build/examples_tracking/demo_SiamRPN.html\r\n\r\nI get the following error\r\n\r\npython demo.py\r\nTraceback (most recent call last):\r\n  File \"demo.py\", line 106, in <module>\r\n    net = model_zoo.get_model(opt.netwrok, ctx=mx.cpu(), pretrained=True)\r\n  File \"/Users/josephceli/.pyenv/versions/3.6.1/lib/python3.6/site-packages/gluoncv/model_zoo/model_zoo.py\", line 342, in get_model\r\n    raise ValueError(err_str)\r\nValueError: \"siamrpn_alexnet_v2_otb15\" is not among the following model list:", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1187", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1187/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1187/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1187/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1187", "id": 563765723, "node_id": "MDU6SXNzdWU1NjM3NjU3MjM=", "number": 1187, "title": "About fine-tuning SlowFast on my own dataset", "user": {"login": "chenyihang1993", "id": 31203698, "node_id": "MDQ6VXNlcjMxMjAzNjk4", "avatar_url": "https://avatars1.githubusercontent.com/u/31203698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyihang1993", "html_url": "https://github.com/chenyihang1993", "followers_url": "https://api.github.com/users/chenyihang1993/followers", "following_url": "https://api.github.com/users/chenyihang1993/following{/other_user}", "gists_url": "https://api.github.com/users/chenyihang1993/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyihang1993/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyihang1993/subscriptions", "organizations_url": "https://api.github.com/users/chenyihang1993/orgs", "repos_url": "https://api.github.com/users/chenyihang1993/repos", "events_url": "https://api.github.com/users/chenyihang1993/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyihang1993/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 848349657, "node_id": "MDU6TGFiZWw4NDgzNDk2NTc=", "url": "https://api.github.com/repos/dmlc/gluon-cv/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2020-02-12T05:36:51Z", "updated_at": "2020-02-22T00:06:12Z", "closed_at": "2020-02-22T00:06:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I followed the script in https://gluon-cv.mxnet.io/build/examples_action_recognition/finetune_custom.html#id1, and It worked. But I only changed the model to slowfast_4x16_resnet50_custom, the error raised:\r\n```\r\nTraceback (most recent call last):\r\n  File \"finetune_custom.py\", line 207, in <module>\r\n    pred = net(X)\r\n  File \"/DATA/disk1/cyh/miniconda3/envs/py36-pytorch/lib/python3.6/site-packages/mxnet/gluon/block.py\", line 548, in __call__\r\n    out = self.forward(*args)\r\n  File \"/DATA/disk1/cyh/miniconda3/envs/py36-pytorch/lib/python3.6/site-packages/mxnet/gluon/block.py\", line 925, in forward\r\n    return self.hybrid_forward(ndarray, x, *args, **params)\r\n  File \"/DATA/disk1/cyh/miniconda3/envs/py36-pytorch/lib/python3.6/site-packages/gluoncv/model_zoo/action_recognition/slowfast.py\", line 261, in hybrid_forward\r\n    slow_input = F.slice(x, begin=(None, None, self.fast_frames, None, None), end=(None, None, self.fast_frames + self.slow_frames, None, None))\r\n  File \"<string>\", line 86, in slice\r\n  File \"/DATA/disk1/cyh/miniconda3/envs/py36-pytorch/lib/python3.6/site-packages/mxnet/_ctypes/ndarray.py\", line 92, in _imperative_invoke\r\n    ctypes.byref(out_stypes)))\r\n  File \"/DATA/disk1/cyh/miniconda3/envs/py36-pytorch/lib/python3.6/site-packages/mxnet/base.py\", line 253, in check_call\r\n    raise MXNetError(py_str(_LIB.MXGetLastError()))\r\nmxnet.base.MXNetError: [13:36:28] src/operator/tensor/./matrix_op-inl.h:688: Check failed: b < len (32 vs. 32) : slicing with begin[2]=32 exceeds limit of input dimension[2]=32\r\nStack trace:\r\n  [bt] (0) /DATA/disk1/cyh/miniconda3/envs/py36-pytorch/lib/python3.6/site-packages/mxnet/libmxnet.so(+0x4a16ab) [0x7f0adcbd06ab]\r\n  [bt] (1) /DATA/disk1/cyh/miniconda3/envs/py36-pytorch/lib/python3.6/site-packages/mxnet/libmxnet.so(+0x2403ac5) [0x7f0adeb32ac5]\r\n  [bt] (2) /DATA/disk1/cyh/miniconda3/envs/py36-pytorch/lib/python3.6/site-packages/mxnet/libmxnet.so(+0x2405cd6) [0x7f0adeb34cd6]\r\n  [bt] (3) /DATA/disk1/cyh/miniconda3/envs/py36-pytorch/lib/python3.6/site-packages/mxnet/libmxnet.so(mxnet::imperative::SetShapeType(mxnet::Context const&, nnvm::NodeAttrs const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, mxnet::DispatchMode*)+0x1fb1) [0x7f0adee29ca1]\r\n  [bt] (4) /DATA/disk1/cyh/miniconda3/envs/py36-pytorch/lib/python3.6/site-packages/mxnet/libmxnet.so(mxnet::Imperative::Invoke(mxnet::Context const&, nnvm::NodeAttrs const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&)+0x1db) [0x7f0adee3394b]\r\n  [bt] (5) /DATA/disk1/cyh/miniconda3/envs/py36-pytorch/lib/python3.6/site-packages/mxnet/libmxnet.so(+0x2602da9) [0x7f0aded31da9]\r\n  [bt] (6) /DATA/disk1/cyh/miniconda3/envs/py36-pytorch/lib/python3.6/site-packages/mxnet/libmxnet.so(MXImperativeInvokeEx+0x6f) [0x7f0aded3239f]\r\n  [bt] (7) /DATA/disk1/cyh/miniconda3/envs/py36-pytorch/lib/python3.6/lib-dynload/../../libffi.so.6(ffi_call_unix64+0x4c) [0x7f0b0be2aec0]\r\n  [bt] (8) /DATA/disk1/cyh/miniconda3/envs/py36-pytorch/lib/python3.6/lib-dynload/../../libffi.so.6(ffi_call+0x22d) [0x7f0b0be2a87d]\r\n```\r\nPlease tell me how to slove it. Looking forword your reply.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1182", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1182/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1182/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1182/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1182", "id": 562194559, "node_id": "MDU6SXNzdWU1NjIxOTQ1NTk=", "number": 1182, "title": "Finetuning YOLOv3 COCO with more data", "user": {"login": "manaclan", "id": 16452063, "node_id": "MDQ6VXNlcjE2NDUyMDYz", "avatar_url": "https://avatars1.githubusercontent.com/u/16452063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manaclan", "html_url": "https://github.com/manaclan", "followers_url": "https://api.github.com/users/manaclan/followers", "following_url": "https://api.github.com/users/manaclan/following{/other_user}", "gists_url": "https://api.github.com/users/manaclan/gists{/gist_id}", "starred_url": "https://api.github.com/users/manaclan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manaclan/subscriptions", "organizations_url": "https://api.github.com/users/manaclan/orgs", "repos_url": "https://api.github.com/users/manaclan/repos", "events_url": "https://api.github.com/users/manaclan/events{/privacy}", "received_events_url": "https://api.github.com/users/manaclan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-09T15:36:50Z", "updated_at": "2020-02-10T14:45:30Z", "closed_at": "2020-02-10T14:45:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to finetune the YOLOv3 on COCO with more data that I generate myself (mostly car). I followed the train_yolo3.py and [this tutorial](https://gluon-cv.mxnet.io/build/examples_detection/finetune_detection.html#pikachu-dataset) but some issue happen:\r\n1/ If I use the model I get after training to detect object, I'll get Invalid input format error\r\n2/ If I load the params model to infer, the classID after detecting is all -1\r\n\r\nI attached the train_yolo3 file below for anyone want to have a look\r\n[train_yolo3.txt](https://github.com/dmlc/gluon-cv/files/4177111/train_yolo3.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1180", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1180/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1180/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1180/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1180", "id": 562018970, "node_id": "MDU6SXNzdWU1NjIwMTg5NzA=", "number": 1180, "title": "action recognizer script can't reproduce training result", "user": {"login": "jiawensong", "id": 20223238, "node_id": "MDQ6VXNlcjIwMjIzMjM4", "avatar_url": "https://avatars1.githubusercontent.com/u/20223238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiawensong", "html_url": "https://github.com/jiawensong", "followers_url": "https://api.github.com/users/jiawensong/followers", "following_url": "https://api.github.com/users/jiawensong/following{/other_user}", "gists_url": "https://api.github.com/users/jiawensong/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiawensong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiawensong/subscriptions", "organizations_url": "https://api.github.com/users/jiawensong/orgs", "repos_url": "https://api.github.com/users/jiawensong/repos", "events_url": "https://api.github.com/users/jiawensong/events{/privacy}", "received_events_url": "https://api.github.com/users/jiawensong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 848349661, "node_id": "MDU6TGFiZWw4NDgzNDk2NjE=", "url": "https://api.github.com/repos/dmlc/gluon-cv/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2020-02-08T13:27:21Z", "updated_at": "2020-02-25T07:12:24Z", "closed_at": "2020-02-25T07:12:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "i want to reproduce the result on this setting:\r\ndataset:ucf101\r\nnetwork\uff1avgg16\r\nAll results are tested by test.py with parameters in train command.\r\nMy reproduced result is acc 82.483553, acc in the log https://raw.githubusercontent.com/dmlc/web-data/master/gluoncv/logs/action_recognition/ucf101/vgg16_ucf101_tsn.log  is 81.549035\uff0cacc written at https://gluon-cv.mxnet.io/model_zoo/action_recognition.html is 83.4\uff0cacc of hashtag d6dc1bba is 98.6842. There are three different acc in your project. May i have some detail about how to reproduce them?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1179", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1179/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1179/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1179/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1179", "id": 561939565, "node_id": "MDU6SXNzdWU1NjE5Mzk1NjU=", "number": 1179, "title": "Segmentation Models Inference speed Improvement", "user": {"login": "djaym7", "id": 12378820, "node_id": "MDQ6VXNlcjEyMzc4ODIw", "avatar_url": "https://avatars1.githubusercontent.com/u/12378820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djaym7", "html_url": "https://github.com/djaym7", "followers_url": "https://api.github.com/users/djaym7/followers", "following_url": "https://api.github.com/users/djaym7/following{/other_user}", "gists_url": "https://api.github.com/users/djaym7/gists{/gist_id}", "starred_url": "https://api.github.com/users/djaym7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djaym7/subscriptions", "organizations_url": "https://api.github.com/users/djaym7/orgs", "repos_url": "https://api.github.com/users/djaym7/repos", "events_url": "https://api.github.com/users/djaym7/events{/privacy}", "received_events_url": "https://api.github.com/users/djaym7/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 848349662, "node_id": "MDU6TGFiZWw4NDgzNDk2NjI=", "url": "https://api.github.com/repos/dmlc/gluon-cv/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": "This will not be worked on"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-08T00:34:40Z", "updated_at": "2020-02-11T22:14:25Z", "closed_at": "2020-02-11T22:14:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "All the semantic models in the model zoo contain aux output which is only necessary during training and is just extra overhead during prediction. \r\n\r\nThe documentation and guide for \"Test with {segmantation} model\" should be updated to use aux less inference.\r\n\r\nSolution :   \"add ignore_extra=True while loading parameters as shown below.\r\nWithout it, when \"aux\" =False, the model doesnot have symbol for aux paramters and it throws error.\r\n\r\n![image](https://user-images.githubusercontent.com/12378820/74075595-0dadc400-49c8-11ea-915c-1a5410ff33d5.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1173", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1173/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1173/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1173/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1173", "id": 559802748, "node_id": "MDU6SXNzdWU1NTk4MDI3NDg=", "number": 1173, "title": "[Regression]Semantic Segmentation Train script failing with `Incompatible input shape` when crop_size=350 since 0.4.0+ ", "user": {"login": "chenliu0831", "id": 1504463, "node_id": "MDQ6VXNlcjE1MDQ0NjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1504463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenliu0831", "html_url": "https://github.com/chenliu0831", "followers_url": "https://api.github.com/users/chenliu0831/followers", "following_url": "https://api.github.com/users/chenliu0831/following{/other_user}", "gists_url": "https://api.github.com/users/chenliu0831/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenliu0831/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenliu0831/subscriptions", "organizations_url": "https://api.github.com/users/chenliu0831/orgs", "repos_url": "https://api.github.com/users/chenliu0831/repos", "events_url": "https://api.github.com/users/chenliu0831/events{/privacy}", "received_events_url": "https://api.github.com/users/chenliu0831/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-02-04T15:40:54Z", "updated_at": "2020-02-05T18:48:27Z", "closed_at": "2020-02-05T18:48:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, we recently detected a possible regression of the semantic segmentation when used with deeplab/PSP model and `crop_size` = 350 since GluonCV 0.4.0+. Interestingly, when `crop_size` is 352/360 (basically anything divisible by 8) this failure does not happen at all. \r\n\r\n See the following for failure details:\r\n\r\n- **Env**: MxNet 1.4.1/1.5.1-post0, GluonCV 0.4.0+, training script from matching github revision. \r\n- **Command**: ` python3 train.py --dataset pascal_aug --model psp --backbone resnet50 --lr 0.001 --crop-size 350 --no-cuda`\r\n- Stack trace:\r\n```\r\nTotal Epochs: 50\r\n  0%|                                                                                                                                                      | 0/709 [00:00<?, ?it/s]Traceback (most recent call last):\r\n  File \"train.py\", line 232, in <module>\r\n    trainer.training(epoch)\r\n  File \"train.py\", line 181, in training\r\n    outputs = self.net(data.astype(args.dtype, copy=False))\r\n  File \"/usr/local/lib/python3.7/site-packages/gluoncv/utils/parallel.py\", line 181, in __call__\r\n    return tuple([tuple_map(self.module(*inputs[0], **kwargs[0]))])\r\n  File \"/usr/local/lib/python3.7/site-packages/mxnet/gluon/block.py\", line 540, in __call__\r\n    out = self.forward(*args)\r\n  File \"/usr/local/lib/python3.7/site-packages/mxnet/gluon/block.py\", line 917, in forward\r\n    return self.hybrid_forward(ndarray, x, *args, **params)\r\n  File \"/usr/local/lib/python3.7/site-packages/gluoncv/model_zoo/pspnet.py\", line 54, in hybrid_forward\r\n    x = self.head(c4)\r\n  File \"/usr/local/lib/python3.7/site-packages/mxnet/gluon/block.py\", line 540, in __call__\r\n    out = self.forward(*args)\r\n  File \"/usr/local/lib/python3.7/site-packages/mxnet/gluon/block.py\", line 917, in forward\r\n    return self.hybrid_forward(ndarray, x, *args, **params)\r\n  File \"/usr/local/lib/python3.7/site-packages/gluoncv/model_zoo/pspnet.py\", line 140, in hybrid_forward\r\n    x = self.psp(x)\r\n  File \"/usr/local/lib/python3.7/site-packages/mxnet/gluon/block.py\", line 540, in __call__\r\n    out = self.forward(*args)\r\n  File \"/usr/local/lib/python3.7/site-packages/mxnet/gluon/block.py\", line 917, in forward\r\n    return self.hybrid_forward(ndarray, x, *args, **params)\r\n  File \"/usr/local/lib/python3.7/site-packages/gluoncv/model_zoo/pspnet.py\", line 110, in hybrid_forward\r\n    return F.concat(x, feat1, feat2, feat3, feat4, dim=1)\r\n  File \"<string>\", line 68, in concat\r\n  File \"/usr/local/lib/python3.7/site-packages/mxnet/_ctypes/ndarray.py\", line 92, in _imperative_invoke\r\n    ctypes.byref(out_stypes)))\r\n  File \"/usr/local/lib/python3.7/site-packages/mxnet/base.py\", line 252, in check_call\r\n    raise MXNetError(py_str(_LIB.MXGetLastError()))\r\nmxnet.base.MXNetError: [10:29:03] src/operator/nn/concat.cc:66: Check failed: shape_assign(&(*in_shape)[i], dshape) Incompatible input shape: expected [16,0,44,44], got [16,512,43,43]\r\n\r\nStack trace returned 8 entries:\r\n[bt] (0) 0   libmxnet.so                         0x00000001145a5e60 mxnet::op::NDArrayOpProp::~NDArrayOpProp() + 3024\r\n[bt] (1) 1   libmxnet.so                         0x00000001145a5c0f mxnet::op::NDArrayOpProp::~NDArrayOpProp() + 2431\r\n[bt] (2) 2   libmxnet.so                         0x0000000114891e98 mxnet::op::SupportMKLDNNConcat(std::__1::vector<mxnet::NDArray, std::__1::allocator<mxnet::NDArray> > const&) + 8152\r\n[bt] (3) 3   libmxnet.so                         0x0000000115cc38b9 mxnet::imperative::SetShapeType(mxnet::Context const&, nnvm::NodeAttrs const&, std::__1::vector<mxnet::NDArray*, std::__1::allocator<mxnet::NDArray*> > const&, std::__1::vector<mxnet::NDArray*, std::__1::allocator<mxnet::NDArray*> > const&, mxnet::DispatchMode*) + 1577\r\n[bt] (4) 4   libmxnet.so                         0x0000000115cc2206 mxnet::Imperative::Invoke(mxnet::Context const&, nnvm::NodeAttrs const&, std::__1::vector<mxnet::NDArray*, std::__1::allocator<mxnet::NDArray*> > const&, std::__1::vector<mxnet::NDArray*, std::__1::allocator<mxnet::NDArray*> > const&) + 726\r\n[bt] (5) 5   libmxnet.so                         0x0000000115c1521e SetNDInputsOutputs(nnvm::Op const*, std::__1::vector<mxnet::NDArray*, std::__1::allocator<mxnet::NDArray*> >*, std::__1::vector<mxnet::NDArray*, std::__1::allocator<mxnet::NDArray*> >*, int, void* const*, int*, int, int, void***) + 1774\r\n[bt] (6) 6   libmxnet.so                         0x0000000115c15f40 MXImperativeInvokeEx + 176\r\n[bt] (7) 7   _ctypes.cpython-37m-darwin.so       0x0000000113b163af ffi_call_unix64 + 79\r\n```\r\nThanks.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1161", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1161/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1161/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1161/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1161", "id": 555979442, "node_id": "MDU6SXNzdWU1NTU5Nzk0NDI=", "number": 1161, "title": "VOCMApMetric not counting False Positives", "user": {"login": "oneluckypic", "id": 10719946, "node_id": "MDQ6VXNlcjEwNzE5OTQ2", "avatar_url": "https://avatars3.githubusercontent.com/u/10719946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oneluckypic", "html_url": "https://github.com/oneluckypic", "followers_url": "https://api.github.com/users/oneluckypic/followers", "following_url": "https://api.github.com/users/oneluckypic/following{/other_user}", "gists_url": "https://api.github.com/users/oneluckypic/gists{/gist_id}", "starred_url": "https://api.github.com/users/oneluckypic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oneluckypic/subscriptions", "organizations_url": "https://api.github.com/users/oneluckypic/orgs", "repos_url": "https://api.github.com/users/oneluckypic/repos", "events_url": "https://api.github.com/users/oneluckypic/events{/privacy}", "received_events_url": "https://api.github.com/users/oneluckypic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-28T04:41:16Z", "updated_at": "2020-01-28T17:13:14Z", "closed_at": "2020-01-28T17:06:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Test:\r\n```python\r\nfrom gluoncv.utils.metrics.voc_detection import VOCMApMetric\r\nimport mxnet as mx\r\nimport numpy as np\r\ndef test_voc_map_metric():\r\n    def w(a):\r\n        return [mx.nd.array([a])]\r\n    p1 = [0, 0, 10, 10]\r\n    p2 = [10, 10, 20, 20]\r\n    pred_bboxes = w([p1, p2])\r\n    pred_labels = w([0, 0])\r\n    pred_scores = w([.5, .5])\r\n    gt_bboxes = w([p1])\r\n    gt_labels = w([0])\r\n    gt_difficults = w([0])\r\n    metric = VOCMApMetric(class_names=['dog'])\r\n    metric.update(pred_bboxes, pred_labels, pred_scores,\r\n                      gt_bboxes, gt_labels, gt_difficults)\r\n    print(metric.get())\r\n```\r\nActual Result:\r\n(['dog', 'mAP'], [1.0, 1.0])\r\n\r\nExpected Results:\r\nI would expect 0.5 for both 'dog' and 'mAP'.  Precision is TP / (TP + FP).  There is one TP and one FP, i.e. (1 / (1 + 1).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1134", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1134/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1134/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1134/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1134", "id": 545330665, "node_id": "MDU6SXNzdWU1NDUzMzA2NjU=", "number": 1134, "title": "Please add a comment describing what adepallete is and where it is pasted from or how was it generated", "user": {"login": "yurivict", "id": 271906, "node_id": "MDQ6VXNlcjI3MTkwNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/271906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yurivict", "html_url": "https://github.com/yurivict", "followers_url": "https://api.github.com/users/yurivict/followers", "following_url": "https://api.github.com/users/yurivict/following{/other_user}", "gists_url": "https://api.github.com/users/yurivict/gists{/gist_id}", "starred_url": "https://api.github.com/users/yurivict/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yurivict/subscriptions", "organizations_url": "https://api.github.com/users/yurivict/orgs", "repos_url": "https://api.github.com/users/yurivict/repos", "events_url": "https://api.github.com/users/yurivict/events{/privacy}", "received_events_url": "https://api.github.com/users/yurivict/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-04T20:45:57Z", "updated_at": "2020-01-06T21:38:18Z", "closed_at": "2020-01-06T21:38:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are several numeric arrays here without any explanation:\r\n\r\nhttps://github.com/dmlc/gluon-cv/blob/master/gluoncv/utils/viz/segmentation.py#L74", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1131", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1131/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1131/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1131/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1131", "id": 545129418, "node_id": "MDU6SXNzdWU1NDUxMjk0MTg=", "number": 1131, "title": "#deleted", "user": {"login": "djaym7", "id": 12378820, "node_id": "MDQ6VXNlcjEyMzc4ODIw", "avatar_url": "https://avatars1.githubusercontent.com/u/12378820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djaym7", "html_url": "https://github.com/djaym7", "followers_url": "https://api.github.com/users/djaym7/followers", "following_url": "https://api.github.com/users/djaym7/following{/other_user}", "gists_url": "https://api.github.com/users/djaym7/gists{/gist_id}", "starred_url": "https://api.github.com/users/djaym7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djaym7/subscriptions", "organizations_url": "https://api.github.com/users/djaym7/orgs", "repos_url": "https://api.github.com/users/djaym7/repos", "events_url": "https://api.github.com/users/djaym7/events{/privacy}", "received_events_url": "https://api.github.com/users/djaym7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-03T19:32:02Z", "updated_at": "2020-01-06T21:47:45Z", "closed_at": "2020-01-06T21:47:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "#deleted", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1125", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1125/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1125/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1125/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1125", "id": 543315593, "node_id": "MDU6SXNzdWU1NDMzMTU1OTM=", "number": 1125, "title": "about train centernet", "user": {"login": "mahxn0", "id": 19154155, "node_id": "MDQ6VXNlcjE5MTU0MTU1", "avatar_url": "https://avatars2.githubusercontent.com/u/19154155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahxn0", "html_url": "https://github.com/mahxn0", "followers_url": "https://api.github.com/users/mahxn0/followers", "following_url": "https://api.github.com/users/mahxn0/following{/other_user}", "gists_url": "https://api.github.com/users/mahxn0/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahxn0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahxn0/subscriptions", "organizations_url": "https://api.github.com/users/mahxn0/orgs", "repos_url": "https://api.github.com/users/mahxn0/repos", "events_url": "https://api.github.com/users/mahxn0/events{/privacy}", "received_events_url": "https://api.github.com/users/mahxn0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-29T04:24:10Z", "updated_at": "2019-12-31T01:42:22Z", "closed_at": "2019-12-31T01:42:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "when I train centernet,\r\n`python3 train_center_net.py --dataset mydata --dataset-root /home/yd/watch_data --batch-size 8`\r\npretrain_model is centrenet_dla34_coco.\r\n\r\n i get error AssertionError: HybridBlock requires the first argument to forward be either Symbol or NDArray, but got <class 'list'>\r\nthen i add print(x) in /usr/local/lib/python3.5/dist-packages/mxnet/gluon/block.py line929\r\ni get  [Symbol relu1_fwd, Symbol relu2_fwd, Symbol level2_root_relu0_fwd, Symbol level3_tree_2_root_relu0_fwd, Symbol level4_tree_2_root_relu0_fwd, Symbol level5_root_relu0_fwd]\r\n<class 'list'>\r\n\r\n\r\n\r\n/home/yd/watch_data train\r\n/home/yd/watch_data test\r\nINFO:root:Namespace(batch_size=4, center_reg_weight=1.0, data_shape=512, dataset='mydata', dataset_root='/home/yd/watch_data', epochs=50, flip_validation=False, gpus='0', log_interval=100, lr=0.000125, lr_decay=0.1, lr_decay_epoch='90,120', lr_mode='step', momentum=0.9, network='resnet18_v1b', num_samples=13044, num_workers=4, resume='', save_interval=10, save_prefix='center_net_dla34_coco', seed=233, start_epoch=0, val_interval=1, warmup_epochs=0, warmup_lr=0.0, wd=0.0001, wh_weight=0.1)\r\nINFO:root:Start training from [Epoch 0]\r\nstart train\r\n<Symbol data>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol data>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol data>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol data>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol conv0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol batchnorm0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol conv1_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol batchnorm1_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol relu1_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol relu1_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol conv2_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol batchnorm2_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol relu2_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol relu2_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol relu2_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level2_maxpoolfwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level2_maxpoolfwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level2_proj_conv0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol relu2_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol relu2_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level2_block_tree_1_conv0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level2_block_tree_1_batchnorm0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level2_block_tree_1_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level2_block_tree_1_conv1_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level2_block_tree_1__plus0>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level2_block_tree_1_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level2_block_tree_1_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level2_block_tree_2_conv0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level2_block_tree_2_batchnorm0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level2_block_tree_2_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level2_block_tree_2_conv1_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level2_block_tree_2__plus0>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level2_block_tree_2_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level2_root_concat0>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level2_root_conv0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level2_root_batchnorm0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level2_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level2_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level2_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_maxpoolfwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level2_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level2_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level2_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_1_maxpoolfwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_1_maxpoolfwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_1_proj_conv0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level2_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level2_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_1_block_tree_1_conv0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_1_block_tree_1_batchnorm0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_1_block_tree_1_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_1_block_tree_1_conv1_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_1_block_tree_1__plus0>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_1_block_tree_1_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_1_block_tree_1_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_1_block_tree_2_conv0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_1_block_tree_2_batchnorm0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_1_block_tree_2_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_1_block_tree_2_conv1_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_1_block_tree_2__plus0>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_1_block_tree_2_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_1_root_concat0>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_1_root_conv0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_1_root_batchnorm0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_1_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_1_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_1_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_1_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_1_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_2_block_tree_1_conv0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_2_block_tree_1_batchnorm0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_2_block_tree_1_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_2_block_tree_1_conv1_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_2_block_tree_1__plus0>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_2_block_tree_1_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_2_block_tree_1_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_2_block_tree_2_conv0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_2_block_tree_2_batchnorm0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_2_block_tree_2_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_2_block_tree_2_conv1_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_2_block_tree_2__plus0>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_2_block_tree_2_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_2_root_concat0>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_2_root_conv0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_2_root_batchnorm0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_2_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_2_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_2_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_maxpoolfwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_2_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_2_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_2_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_1_maxpoolfwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_1_maxpoolfwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_1_proj_conv0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_2_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level3_tree_2_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_1_block_tree_1_conv0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_1_block_tree_1_batchnorm0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_1_block_tree_1_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_1_block_tree_1_conv1_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_1_block_tree_1__plus0>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_1_block_tree_1_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_1_block_tree_1_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_1_block_tree_2_conv0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_1_block_tree_2_batchnorm0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_1_block_tree_2_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_1_block_tree_2_conv1_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_1_block_tree_2__plus0>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_1_block_tree_2_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_1_root_concat0>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_1_root_conv0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_1_root_batchnorm0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_1_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_1_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_1_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_1_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_1_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_2_block_tree_1_conv0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_2_block_tree_1_batchnorm0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_2_block_tree_1_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_2_block_tree_1_conv1_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_2_block_tree_1__plus0>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_2_block_tree_1_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_2_block_tree_1_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_2_block_tree_2_conv0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_2_block_tree_2_batchnorm0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_2_block_tree_2_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_2_block_tree_2_conv1_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_2_block_tree_2__plus0>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_2_block_tree_2_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_2_root_concat0>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_2_root_conv0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_2_root_batchnorm0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_2_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_2_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_2_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level5_maxpoolfwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level5_maxpoolfwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level5_proj_conv0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_2_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level4_tree_2_root_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level5_block_tree_1_conv0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level5_block_tree_1_batchnorm0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level5_block_tree_1_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level5_block_tree_1_conv1_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level5_block_tree_1__plus0>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level5_block_tree_1_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level5_block_tree_1_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level5_block_tree_2_conv0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level5_block_tree_2_batchnorm0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level5_block_tree_2_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level5_block_tree_2_conv1_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level5_block_tree_2__plus0>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level5_block_tree_2_relu0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level5_root_concat0>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level5_root_conv0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n<Symbol level5_root_batchnorm0_fwd>\r\n<class 'mxnet.symbol.symbol.Symbol'>\r\n222\r\n[[Symbol relu1_fwd, Symbol relu2_fwd, Symbol level2_root_relu0_fwd, Symbol level3_tree_2_root_relu0_fwd, Symbol level4_tree_2_root_relu0_fwd, Symbol level5_root_relu0_fwd]]\r\n<class 'list'>\r\nTraceback (most recent call last):\r\n  File \"train_center_net.py\", line 307, in <module>\r\n    train(net, train_data, val_data, eval_metric, ctx, args)\r\n  File \"train_center_net.py\", line 238, in train\r\n    heatmap_pred, wh_pred, center_reg_pred = net(x)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mxnet/gluon/block.py\", line 548, in __call__\r\n    out = self.forward(*args)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mxnet/gluon/block.py\", line 915, in forward\r\n    return self._call_cached_op(x, *args)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mxnet/gluon/block.py\", line 805, in _call_cached_op\r\n    self._build_cache(*args)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mxnet/gluon/block.py\", line 757, in _build_cache\r\n    data, out = self._get_graph(*args)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mxnet/gluon/block.py\", line 749, in _get_graph\r\n    out = self.hybrid_forward(symbol, *grouped_inputs, **params)  # pylint: disable=no-value-for-parameter\r\n  File \"/usr/local/lib/python3.5/dist-packages/gluoncv/model_zoo/center_net/center_net.py\", line 170, in hybrid_forward\r\n    y = self.base_network(x)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mxnet/gluon/block.py\", line 548, in __call__\r\n    out = self.forward(*args)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mxnet/gluon/block.py\", line 933, in forward\r\n    return self.hybrid_forward(symbol, x, *args, **params)\r\n  File \"/usr/local/lib/python3.5/dist-packages/gluoncv/model_zoo/center_net/deconv_dla.py\", line 225, in hybrid_forward\r\n    x = self.dla_up(x)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mxnet/gluon/block.py\", line 548, in __call__\r\n    out = self.forward(*args)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mxnet/gluon/block.py\", line 930, in forward\r\n    \"Symbol or NDArray, but got %s\"%type(x)\r\nAssertionError: HybridBlock requires the first argument to forward be either Symbol or NDArray, but got <class 'list'>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1124", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1124/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1124/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1124/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1124", "id": 542416773, "node_id": "MDU6SXNzdWU1NDI0MTY3NzM=", "number": 1124, "title": "3dconv video cls problem", "user": {"login": "ZHEQIUSHUI", "id": 46700201, "node_id": "MDQ6VXNlcjQ2NzAwMjAx", "avatar_url": "https://avatars0.githubusercontent.com/u/46700201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZHEQIUSHUI", "html_url": "https://github.com/ZHEQIUSHUI", "followers_url": "https://api.github.com/users/ZHEQIUSHUI/followers", "following_url": "https://api.github.com/users/ZHEQIUSHUI/following{/other_user}", "gists_url": "https://api.github.com/users/ZHEQIUSHUI/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZHEQIUSHUI/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZHEQIUSHUI/subscriptions", "organizations_url": "https://api.github.com/users/ZHEQIUSHUI/orgs", "repos_url": "https://api.github.com/users/ZHEQIUSHUI/repos", "events_url": "https://api.github.com/users/ZHEQIUSHUI/events{/privacy}", "received_events_url": "https://api.github.com/users/ZHEQIUSHUI/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-26T03:09:37Z", "updated_at": "2019-12-27T02:46:01Z", "closed_at": "2019-12-27T02:46:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "when i train my custom data(nclass is 2),no matter how mang epochs i have training.the acc just about 50%(i think it just classify only one class?)\r\n\r\nthank you for you read if you have free time!\r\n\r\nthis is my option(it is so long....):\r\n>accumulate=1, \r\nbatch_norm=False, \r\nbatch_size=5,\r\nclip_grad=0, \r\ncrop_ratio=0.875, \r\ndata_dir='', \r\ndataset='custom', \r\ndtype='float32', \r\neval=False, \r\nfast_temporal_stride=2, \r\nhard_weight=0.5, \r\nhashtag='', \r\ninput_5d=False, \r\ninput_size=224, \r\nkvstore='device', \r\nlabel_smoothing=False, \r\nlast_gamma=False, \r\nlog_interval=50, \r\nlogging_file='train.log', \r\nlr=0.001, \r\nlr_decay=0.1, \r\nlr_decay_epoch='5,15', \r\nlr_decay_period=0, \r\nlr_mode='step', \r\nmixup=False, \r\nmixup_alpha=0.2, \r\nmixup_off_epoch=0, \r\nmode=None, \r\nmodel='i3d_resnet50_v1_custom', \r\nmomentum=0.9, \r\nnew_height=0, \r\nnew_length=16, \r\nnew_step=1,\r\nnew_width=0, \r\nno_wd=False, \r\nnum_classes=2,\r\nnum_crop=1, \r\nnum_epochs=20, \r\nnum_gpus=1, \r\nnum_segments=1, \r\nnum_workers=4, \r\npartial_bn=False, \r\nprefetch_ratio=2.0, \r\nresume_epoch=0, \r\nresume_params='', \r\nresume_states='', \r\nsave_dir='params', \r\nsave_frequency=10, \r\nscale_ratios='1.0, 0.875, 0.75, 0.66', \r\nslow_temporal_stride=16, \r\nslowfast=False, \r\nteacher=None, \r\ntemperature=20, \r\ntrain_list='../dataset/train.txt', \r\nuse_amp=False, \r\nuse_decord=False, \r\nuse_gn=False, \r\nuse_pretrained=True, \r\nuse_se=False, \r\nuse_tsn=False, \r\nval_data_dir='', \r\nval_list='../dataset/val.txt', \r\nvideo_loader=True, \r\nwarmup_epochs=0, \r\nwarmup_lr=0.0, \r\nwd=0.0001\r\n\r\nthis is my train log:\r\n>[Epoch 000] training: accuracy=53.061224\t loss=11.034944\r\n[Epoch 000] speed: 13 samples/sec\ttime cost: 18.987665\r\n[Epoch 000] validation: acc-top1=68.000000 acc-top5=100.000000 loss=18.733686\r\n\r\n>[Epoch 001] training: accuracy=55.510204\t loss=23.471720\r\n[Epoch 001] speed: 22 samples/sec\ttime cost: 11.574985\r\n[Epoch 001] validation: acc-top1=44.000000 acc-top5=100.000000 loss=103.520424\r\n\r\n>[Epoch 002] training: accuracy=49.795918\t loss=10.128425\r\n[Epoch 002] speed: 22 samples/sec\ttime cost: 11.568123\r\n[Epoch 002] validation: acc-top1=52.000000 acc-top5=100.000000 loss=1.192754\r\n\r\n>[Epoch 003] training: accuracy=49.387755\t loss=7.910957\r\n[Epoch 003] speed: 22 samples/sec\ttime cost: 11.624424\r\n[Epoch 003] validation: acc-top1=52.000000 acc-top5=100.000000 loss=0.702443\r\n\r\n>Epoch[004] Batch [0049]/[0050]\tSpeed: 22.814440 samples/sec\t accuracy=51.600000\t loss=8.536176\t lr=0.000100\r\n[Epoch 004] training: accuracy=51.600000\t loss=8.536176\r\n[Epoch 004] speed: 22 samples/sec\ttime cost: 11.848721\r\n[Epoch 004] validation: acc-top1=56.000000 acc-top5=100.000000 loss=23.990627\r\n\r\n>[Epoch 005] training: accuracy=46.530612\t loss=11.483197\r\n[Epoch 005] speed: 22 samples/sec\ttime cost: 11.690950\r\n[Epoch 005] validation: acc-top1=40.000000 acc-top5=100.000000 loss=7.925127\r\n\r\n>[Epoch 006] training: accuracy=57.142857\t loss=5.142479\r\n[Epoch 006] speed: 21 samples/sec\ttime cost: 11.964715\r\n[Epoch 006] validation: acc-top1=56.000000 acc-top5=100.000000 loss=0.945472", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1121", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1121/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1121/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1121/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1121", "id": 541948266, "node_id": "MDU6SXNzdWU1NDE5NDgyNjY=", "number": 1121, "title": "deeplab_v3b_plus_wideresnet_citys training script and log file is missing", "user": {"login": "ShoufaChen", "id": 28682908, "node_id": "MDQ6VXNlcjI4NjgyOTA4", "avatar_url": "https://avatars2.githubusercontent.com/u/28682908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShoufaChen", "html_url": "https://github.com/ShoufaChen", "followers_url": "https://api.github.com/users/ShoufaChen/followers", "following_url": "https://api.github.com/users/ShoufaChen/following{/other_user}", "gists_url": "https://api.github.com/users/ShoufaChen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShoufaChen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShoufaChen/subscriptions", "organizations_url": "https://api.github.com/users/ShoufaChen/orgs", "repos_url": "https://api.github.com/users/ShoufaChen/repos", "events_url": "https://api.github.com/users/ShoufaChen/events{/privacy}", "received_events_url": "https://api.github.com/users/ShoufaChen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 991160112, "node_id": "MDU6TGFiZWw5OTExNjAxMTI=", "url": "https://api.github.com/repos/dmlc/gluon-cv/labels/doc", "name": "doc", "color": "8cc122", "default": false, "description": "Documentation issues"}], "state": "closed", "locked": false, "assignee": {"login": "bryanyzhu", "id": 16021460, "node_id": "MDQ6VXNlcjE2MDIxNDYw", "avatar_url": "https://avatars2.githubusercontent.com/u/16021460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryanyzhu", "html_url": "https://github.com/bryanyzhu", "followers_url": "https://api.github.com/users/bryanyzhu/followers", "following_url": "https://api.github.com/users/bryanyzhu/following{/other_user}", "gists_url": "https://api.github.com/users/bryanyzhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryanyzhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryanyzhu/subscriptions", "organizations_url": "https://api.github.com/users/bryanyzhu/orgs", "repos_url": "https://api.github.com/users/bryanyzhu/repos", "events_url": "https://api.github.com/users/bryanyzhu/events{/privacy}", "received_events_url": "https://api.github.com/users/bryanyzhu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bryanyzhu", "id": 16021460, "node_id": "MDQ6VXNlcjE2MDIxNDYw", "avatar_url": "https://avatars2.githubusercontent.com/u/16021460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryanyzhu", "html_url": "https://github.com/bryanyzhu", "followers_url": "https://api.github.com/users/bryanyzhu/followers", "following_url": "https://api.github.com/users/bryanyzhu/following{/other_user}", "gists_url": "https://api.github.com/users/bryanyzhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryanyzhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryanyzhu/subscriptions", "organizations_url": "https://api.github.com/users/bryanyzhu/orgs", "repos_url": "https://api.github.com/users/bryanyzhu/repos", "events_url": "https://api.github.com/users/bryanyzhu/events{/privacy}", "received_events_url": "https://api.github.com/users/bryanyzhu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-12-24T01:01:38Z", "updated_at": "2019-12-29T01:25:29Z", "closed_at": "2019-12-29T01:25:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "For semantic segmentation, `deeplab_v3b_plus_wideresnet_citys`  on cityscapes dataset,  the training script and log file is missing.\r\n\r\nhttps://raw.githubusercontent.com/dmlc/web-data/master/gluoncv/logs/segmentation/deeplab_v3b_plus_wideresnet_citys.sh\r\n\r\nhttps://raw.githubusercontent.com/dmlc/web-data/master/gluoncv/logs/segmentation/deeplab_v3b_plus_wideresnet_citys.log", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1111", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1111/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1111/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1111/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1111", "id": 540892032, "node_id": "MDU6SXNzdWU1NDA4OTIwMzI=", "number": 1111, "title": "Default segmentation image augmentation, why pad 0 to the mask", "user": {"login": "weiaicunzai", "id": 1770114, "node_id": "MDQ6VXNlcjE3NzAxMTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1770114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiaicunzai", "html_url": "https://github.com/weiaicunzai", "followers_url": "https://api.github.com/users/weiaicunzai/followers", "following_url": "https://api.github.com/users/weiaicunzai/following{/other_user}", "gists_url": "https://api.github.com/users/weiaicunzai/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiaicunzai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiaicunzai/subscriptions", "organizations_url": "https://api.github.com/users/weiaicunzai/orgs", "repos_url": "https://api.github.com/users/weiaicunzai/repos", "events_url": "https://api.github.com/users/weiaicunzai/events{/privacy}", "received_events_url": "https://api.github.com/users/weiaicunzai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-20T09:36:29Z", "updated_at": "2019-12-21T09:41:43Z", "closed_at": "2019-12-21T09:41:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, guys, I've noticed the default gluon-cv segmentation augmentation also pad 0 to the mask when resizing, why use 0, would this affect the performance of the network predicting the index 0 class? Or causing the training sample imbalance problem(since there might be too many 0 class pixels)?\r\n\r\nin https://github.com/dmlc/gluon-cv/blob/49056d4892382fca067216d6271d1633d869cb8d/gluoncv/data/segbase.py\r\n```python\r\nimg = ImageOps.expand(img, border=(0, 0, padw, padh), fill=0)\r\nmask = ImageOps.expand(mask, border=(0, 0, padw, padh), fill=0) # why fill 0??\r\n```\r\n\r\nThanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1110", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1110/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1110/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1110/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1110", "id": 540765117, "node_id": "MDU6SXNzdWU1NDA3NjUxMTc=", "number": 1110, "title": "train_recognizer.py", "user": {"login": "ZHEQIUSHUI", "id": 46700201, "node_id": "MDQ6VXNlcjQ2NzAwMjAx", "avatar_url": "https://avatars0.githubusercontent.com/u/46700201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZHEQIUSHUI", "html_url": "https://github.com/ZHEQIUSHUI", "followers_url": "https://api.github.com/users/ZHEQIUSHUI/followers", "following_url": "https://api.github.com/users/ZHEQIUSHUI/following{/other_user}", "gists_url": "https://api.github.com/users/ZHEQIUSHUI/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZHEQIUSHUI/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZHEQIUSHUI/subscriptions", "organizations_url": "https://api.github.com/users/ZHEQIUSHUI/orgs", "repos_url": "https://api.github.com/users/ZHEQIUSHUI/repos", "events_url": "https://api.github.com/users/ZHEQIUSHUI/events{/privacy}", "received_events_url": "https://api.github.com/users/ZHEQIUSHUI/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-20T05:13:11Z", "updated_at": "2019-12-20T16:40:59Z", "closed_at": "2019-12-20T16:40:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "about line 464:\r\n>print(X.shape)\r\n   #Got (25, 1, 3, 224, 224)\r\n   X = X.reshape((-1,) + X.shape[2:])\r\n   print(X.shape)\r\n   #Got (25, 3, 224, 224)\r\n   pred = net(X.astype(opt.dtype, copy=False))\r\n\r\nthe code make input dim become 4D,but i got wrong:\r\n>Check failed: dshp.ndim() == 5U (4 vs. 5) : Input data should be 5D in batch-num_filter-depth-y-x\r\n\r\nis the code have bug?or is my wrong?\r\n\r\n\u6025\u6025\u6025\uff01\r\nthank you!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1106", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1106/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1106/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1106/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1106", "id": 540187600, "node_id": "MDU6SXNzdWU1NDAxODc2MDA=", "number": 1106, "title": "syncbn cannot support hybridization ", "user": {"login": "sunke123", "id": 11239351, "node_id": "MDQ6VXNlcjExMjM5MzUx", "avatar_url": "https://avatars2.githubusercontent.com/u/11239351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunke123", "html_url": "https://github.com/sunke123", "followers_url": "https://api.github.com/users/sunke123/followers", "following_url": "https://api.github.com/users/sunke123/following{/other_user}", "gists_url": "https://api.github.com/users/sunke123/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunke123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunke123/subscriptions", "organizations_url": "https://api.github.com/users/sunke123/orgs", "repos_url": "https://api.github.com/users/sunke123/repos", "events_url": "https://api.github.com/users/sunke123/events{/privacy}", "received_events_url": "https://api.github.com/users/sunke123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-19T09:29:14Z", "updated_at": "2020-01-19T02:50:47Z", "closed_at": "2020-01-19T02:50:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I found that the training for segmentation model does not adopt the hybrid mode (e.g. net.hybridize()).\r\n\r\nI tried to use hybrid mode to reduce the training time and found that SyncBN may not support the hybrid mode as described in the official document. When changing the SyncBN to normal BatchNorm, the problem is solved.\r\n\r\nIs there something I have missed? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1103", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1103/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1103/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1103/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1103", "id": 539911871, "node_id": "MDU6SXNzdWU1Mzk5MTE4NzE=", "number": 1103, "title": "How to count the identified objects in Faster -RCNN with gluoncv", "user": {"login": "nilani-rangika", "id": 54088080, "node_id": "MDQ6VXNlcjU0MDg4MDgw", "avatar_url": "https://avatars2.githubusercontent.com/u/54088080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nilani-rangika", "html_url": "https://github.com/nilani-rangika", "followers_url": "https://api.github.com/users/nilani-rangika/followers", "following_url": "https://api.github.com/users/nilani-rangika/following{/other_user}", "gists_url": "https://api.github.com/users/nilani-rangika/gists{/gist_id}", "starred_url": "https://api.github.com/users/nilani-rangika/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nilani-rangika/subscriptions", "organizations_url": "https://api.github.com/users/nilani-rangika/orgs", "repos_url": "https://api.github.com/users/nilani-rangika/repos", "events_url": "https://api.github.com/users/nilani-rangika/events{/privacy}", "received_events_url": "https://api.github.com/users/nilani-rangika/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 848349661, "node_id": "MDU6TGFiZWw4NDgzNDk2NjE=", "url": "https://api.github.com/repos/dmlc/gluon-cv/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-18T20:39:25Z", "updated_at": "2019-12-31T06:03:54Z", "closed_at": "2019-12-31T06:03:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to count the number of vehicles identified in each image using gluoncv. I want some thing similar to the following code. Please help me.\r\n\r\n```\r\nimport os\r\nimport glob\r\nfrom matplotlib import pyplot as plt\r\nfrom gluoncv import model_zoo, data, utils\r\n\r\nvehiclesum1 = []\r\n\r\nfor filename in glob.glob('/home/xx/PythonCode/test/*.jpg'):\r\n    x, orig_img = data.transforms.presets.rcnn.load_test(filename)    \r\n\r\n    box_ids, scores, bboxes = net(x)\r\n    ax = utils.viz.plot_bbox(orig_img, bboxes[0], scores[0], box_ids[0], class_names=net.classes)\r\n\r\n    # I want to identify this label1\r\n    vehiclesum1.append(label1.count('car') + label1.count('truck') + label1.count('motorcycle') + label1.count('bus'))\r\n   \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1100", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1100/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1100/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1100/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1100", "id": 539299438, "node_id": "MDU6SXNzdWU1MzkyOTk0Mzg=", "number": 1100, "title": "Train action recognition on my own dataset", "user": {"login": "nicholasguimaraes", "id": 41639569, "node_id": "MDQ6VXNlcjQxNjM5NTY5", "avatar_url": "https://avatars1.githubusercontent.com/u/41639569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicholasguimaraes", "html_url": "https://github.com/nicholasguimaraes", "followers_url": "https://api.github.com/users/nicholasguimaraes/followers", "following_url": "https://api.github.com/users/nicholasguimaraes/following{/other_user}", "gists_url": "https://api.github.com/users/nicholasguimaraes/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicholasguimaraes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicholasguimaraes/subscriptions", "organizations_url": "https://api.github.com/users/nicholasguimaraes/orgs", "repos_url": "https://api.github.com/users/nicholasguimaraes/repos", "events_url": "https://api.github.com/users/nicholasguimaraes/events{/privacy}", "received_events_url": "https://api.github.com/users/nicholasguimaraes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 33, "created_at": "2019-12-17T20:42:24Z", "updated_at": "2020-02-11T01:02:08Z", "closed_at": "2020-02-11T01:02:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, do I have to adapt the code to train an action recognition network on my own dataset?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1097", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1097/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1097/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1097/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1097", "id": 538847221, "node_id": "MDU6SXNzdWU1Mzg4NDcyMjE=", "number": 1097, "title": "yolov3. Why is the inference time after int8 quantization on the CPU longer than the unquantized model?", "user": {"login": "DuZzzs", "id": 46736075, "node_id": "MDQ6VXNlcjQ2NzM2MDc1", "avatar_url": "https://avatars3.githubusercontent.com/u/46736075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DuZzzs", "html_url": "https://github.com/DuZzzs", "followers_url": "https://api.github.com/users/DuZzzs/followers", "following_url": "https://api.github.com/users/DuZzzs/following{/other_user}", "gists_url": "https://api.github.com/users/DuZzzs/gists{/gist_id}", "starred_url": "https://api.github.com/users/DuZzzs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DuZzzs/subscriptions", "organizations_url": "https://api.github.com/users/DuZzzs/orgs", "repos_url": "https://api.github.com/users/DuZzzs/repos", "events_url": "https://api.github.com/users/DuZzzs/events{/privacy}", "received_events_url": "https://api.github.com/users/DuZzzs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-12-17T05:29:42Z", "updated_at": "2019-12-20T01:31:44Z", "closed_at": "2019-12-20T01:31:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "environment\uff1a\r\n```\r\nUbuntu 16.04.5 LTS\r\n Intel(R) Core(TM) i3-9100F CPU @ 3.60GHz\r\n CPU(s):  4\r\n\r\npip install gluoncv --upgrade\r\npip install mxnet-cu100mkl==1.6.0b20191013\r\n```\r\nModify the code to print out the time\uff08ms/pic\uff09 during validation\u3002The command and output are as follows\uff1a\r\n unquantized model:\r\n```\r\npython eval_yolo.py --network=mobilenet1.0 --dataset=coco --batch-size=1 --gpus=''\r\n\r\ntime cost:  0.3125333786010742\r\ntime cost:  0.3112642765045166\r\ntime cost:  0.3123941421508789\r\n```\r\nafter int8 quantization:\r\n```\r\npython eval_yolo.py --network=mobilenet1.0 --gpus='' --deploy --model-prefix=./model/yolo3_mobilenet1.0_coco-quantized-naive  --dataset=coco --batch-size=1\r\n\r\ntime cost:  0.5255234241485596\r\ntime cost:  0.5221781730651855\r\ntime cost:  0.5260343551635742\r\n```\r\nHello, has anyone encountered this situation?  Why is the inference time longer? Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1086", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1086/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1086/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1086/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1086", "id": 534552028, "node_id": "MDU6SXNzdWU1MzQ1NTIwMjg=", "number": 1086, "title": "FCN training tutorial with nan", "user": {"login": "BrunoKrinski", "id": 45493922, "node_id": "MDQ6VXNlcjQ1NDkzOTIy", "avatar_url": "https://avatars3.githubusercontent.com/u/45493922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BrunoKrinski", "html_url": "https://github.com/BrunoKrinski", "followers_url": "https://api.github.com/users/BrunoKrinski/followers", "following_url": "https://api.github.com/users/BrunoKrinski/following{/other_user}", "gists_url": "https://api.github.com/users/BrunoKrinski/gists{/gist_id}", "starred_url": "https://api.github.com/users/BrunoKrinski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BrunoKrinski/subscriptions", "organizations_url": "https://api.github.com/users/BrunoKrinski/orgs", "repos_url": "https://api.github.com/users/BrunoKrinski/repos", "events_url": "https://api.github.com/users/BrunoKrinski/events{/privacy}", "received_events_url": "https://api.github.com/users/BrunoKrinski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-12-08T14:47:45Z", "updated_at": "2020-08-03T03:34:47Z", "closed_at": "2019-12-13T01:25:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm trying to run a FCN model in my segmentation problem. I tried to follow the \"4. Train FCN on Pascal VOC Dataset\" tutorial without any modification and when I ran the code to train with several iterations, the loss starts to be 'nan' after a few iterations. Does someone know what could be the problem? If it is the tutorial that is with an error or perhaps a configuration that is missing? I'm grateful if someone could help me.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1079", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1079/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1079/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1079/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1079", "id": 532964268, "node_id": "MDU6SXNzdWU1MzI5NjQyNjg=", "number": 1079, "title": "[Semantic Segmentation]`iters_per_epoch` computed incorrectly in training script?", "user": {"login": "chenliu0831", "id": 1504463, "node_id": "MDQ6VXNlcjE1MDQ0NjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1504463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenliu0831", "html_url": "https://github.com/chenliu0831", "followers_url": "https://api.github.com/users/chenliu0831/followers", "following_url": "https://api.github.com/users/chenliu0831/following{/other_user}", "gists_url": "https://api.github.com/users/chenliu0831/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenliu0831/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenliu0831/subscriptions", "organizations_url": "https://api.github.com/users/chenliu0831/orgs", "repos_url": "https://api.github.com/users/chenliu0831/repos", "events_url": "https://api.github.com/users/chenliu0831/events{/privacy}", "received_events_url": "https://api.github.com/users/chenliu0831/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-04T22:08:38Z", "updated_at": "2019-12-05T21:18:48Z", "closed_at": "2019-12-05T21:18:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looking at the input to LRScheduler from Semantic segmentation [training script](https://github.com/dmlc/gluon-cv/blob/master/scripts/segmentation/train.py#L151), shouldn't it be `len(self.train_data) // self.args.batch_size` which is the number of batches? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1076", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1076/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1076/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1076/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1076", "id": 532050798, "node_id": "MDU6SXNzdWU1MzIwNTA3OTg=", "number": 1076, "title": "How to get score for all classes ?", "user": {"login": "dangmanhtruong1995", "id": 20016033, "node_id": "MDQ6VXNlcjIwMDE2MDMz", "avatar_url": "https://avatars1.githubusercontent.com/u/20016033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dangmanhtruong1995", "html_url": "https://github.com/dangmanhtruong1995", "followers_url": "https://api.github.com/users/dangmanhtruong1995/followers", "following_url": "https://api.github.com/users/dangmanhtruong1995/following{/other_user}", "gists_url": "https://api.github.com/users/dangmanhtruong1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/dangmanhtruong1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dangmanhtruong1995/subscriptions", "organizations_url": "https://api.github.com/users/dangmanhtruong1995/orgs", "repos_url": "https://api.github.com/users/dangmanhtruong1995/repos", "events_url": "https://api.github.com/users/dangmanhtruong1995/events{/privacy}", "received_events_url": "https://api.github.com/users/dangmanhtruong1995/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2019-12-03T15:06:28Z", "updated_at": "2019-12-30T19:54:12Z", "closed_at": "2019-12-23T23:27:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, how do I get scores for all classes? For example, there is a dog object, with score 0.9. However I also want the cat score for the same object (0.1). How do I get them ? Thank you very much.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1074", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1074/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1074/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1074/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1074", "id": 531753802, "node_id": "MDU6SXNzdWU1MzE3NTM4MDI=", "number": 1074, "title": "Cannot export when using train_psp.py", "user": {"login": "NamTran838P", "id": 26189749, "node_id": "MDQ6VXNlcjI2MTg5NzQ5", "avatar_url": "https://avatars0.githubusercontent.com/u/26189749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NamTran838P", "html_url": "https://github.com/NamTran838P", "followers_url": "https://api.github.com/users/NamTran838P/followers", "following_url": "https://api.github.com/users/NamTran838P/following{/other_user}", "gists_url": "https://api.github.com/users/NamTran838P/gists{/gist_id}", "starred_url": "https://api.github.com/users/NamTran838P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NamTran838P/subscriptions", "organizations_url": "https://api.github.com/users/NamTran838P/orgs", "repos_url": "https://api.github.com/users/NamTran838P/repos", "events_url": "https://api.github.com/users/NamTran838P/events{/privacy}", "received_events_url": "https://api.github.com/users/NamTran838P/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-03T06:24:17Z", "updated_at": "2020-02-04T22:35:00Z", "closed_at": "2020-02-04T22:35:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since the script train.py does not work for me #1071, I am using the demo train_psp.py script on GluonCV website to perform training. I have tried two export methods but none suceeded. I am using Windows 10, Python 3.8, CPU only. \r\n\r\nFirst method:\r\n\r\n`model.module.hybridize()`\r\n`model.module.export('psp')`\r\n\r\n![2](https://user-images.githubusercontent.com/26189749/70025508-190ceb00-1552-11ea-8d46-fc286596c8c3.PNG)\r\n\r\nSecond method:\r\n\r\n`model.module.hybridize()\r\nexport_block('psp', model.module, layout = 'HWC', preprocess = None) `\r\n\r\n![1](https://user-images.githubusercontent.com/26189749/70025243-45743780-1551-11ea-89c1-c34d1b8e9046.PNG)\r\n\r\nI am training the pspnet model from scratch with only 1 iteration for demo purposes. Please advise how I can proceed to export my trained model successfully. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1071", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1071/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1071/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1071/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1071", "id": 531563031, "node_id": "MDU6SXNzdWU1MzE1NjMwMzE=", "number": 1071, "title": "Using the provided script train.py gives error", "user": {"login": "NamTran838P", "id": 26189749, "node_id": "MDQ6VXNlcjI2MTg5NzQ5", "avatar_url": "https://avatars0.githubusercontent.com/u/26189749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NamTran838P", "html_url": "https://github.com/NamTran838P", "followers_url": "https://api.github.com/users/NamTran838P/followers", "following_url": "https://api.github.com/users/NamTran838P/following{/other_user}", "gists_url": "https://api.github.com/users/NamTran838P/gists{/gist_id}", "starred_url": "https://api.github.com/users/NamTran838P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NamTran838P/subscriptions", "organizations_url": "https://api.github.com/users/NamTran838P/orgs", "repos_url": "https://api.github.com/users/NamTran838P/repos", "events_url": "https://api.github.com/users/NamTran838P/events{/privacy}", "received_events_url": "https://api.github.com/users/NamTran838P/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-12-02T21:53:08Z", "updated_at": "2020-02-04T19:28:33Z", "closed_at": "2020-02-04T19:28:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Windows 8, Python 3.8, no GPU\r\n\r\nI have looked online for solutions and tried:\r\n\r\n```python\r\nfor param in self.net.collect_params().values():\r\n    if param._data is None:       \r\n        param.initialize()\r\n```\r\nHowever, the error remains still. Please advise. Thanks for your help.\r\n\r\n### Terminal output (Powershell) for running train.py\r\nPS C:\\Users\\Nam\\Desktop\\elen 331 final project> **python train.py --dataset ade20k --model psp --backbone resnet50 --syncbn --epochs 120 --lr 0.01 --checkname mycheckpoint**\r\nNumber of GPUs: 0\r\nNamespace(aux=False, aux_weight=0.5, backbone='resnet50', base_size=520, batch_size=16, checkname='mycheckpoint', crop_size=480, ctx=[], dataset='ade20k', dtype='float32', epochs=120, eval=False, kvstore='device', lr=0.01, model='psp', model_zoo=None, momentum=0.9, ngpus=0, no_cuda=False, no_val=False, no_wd=False, norm_kwargs={'num_devices': 0}, norm_layer=<class 'mxnet.gluon.contrib.nn.basic_layers.SyncBatchNorm'>, resume=None, start_epoch=0, syncbn=True, test_batch_size=16, train_split='train', weight_decay=0.0001, workers=16)\r\nself.crop_size 480\r\nPSPNet(\r\n  (conv1): HybridSequential(\r\n    (0): Conv2D(3 -> 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\r\n    (1): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_syncbatchnorm0_', in_channels=64)\r\n    (2): Activation(relu)\r\n    (3): Conv2D(64 -> 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n    (4): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_syncbatchnorm1_', in_channels=64)\r\n    (5): Activation(relu)\r\n    (6): Conv2D(64 -> 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n  )\r\n  (bn1): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_syncbatchnorm2_', in_channels=128)\r\n  (relu): Activation(relu)\r\n  (maxpool): MaxPool2D(size=(3, 3), stride=(2, 2), padding=(1, 1), ceil_mode=False, global_pool=False, pool_type=max, layout=NCHW)\r\n  (layer1): HybridSequential(\r\n    (0): BottleneckV1b(\r\n      (conv1): Conv2D(128 -> 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn1): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers1_syncbatchnorm0_', in_channels=64)\r\n      (relu1): Activation(relu)\r\n      (conv2): Conv2D(64 -> 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n      (bn2): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers1_syncbatchnorm1_', in_channels=64)\r\n      (relu2): Activation(relu)\r\n      (conv3): Conv2D(64 -> 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn3): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers1_syncbatchnorm2_', in_channels=256)\r\n      (relu3): Activation(relu)\r\n      (downsample): HybridSequential(\r\n        (0): Conv2D(128 -> 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n        (1): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_down1_syncbatchnorm0_', in_channels=256)\r\n      )\r\n    )\r\n    (1): BottleneckV1b(\r\n      (conv1): Conv2D(256 -> 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn1): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers1_syncbatchnorm3_', in_channels=64)\r\n      (relu1): Activation(relu)\r\n      (conv2): Conv2D(64 -> 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n      (bn2): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers1_syncbatchnorm4_', in_channels=64)\r\n      (relu2): Activation(relu)\r\n      (conv3): Conv2D(64 -> 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn3): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers1_syncbatchnorm5_', in_channels=256)\r\n      (relu3): Activation(relu)\r\n    )\r\n    (2): BottleneckV1b(\r\n      (conv1): Conv2D(256 -> 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn1): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers1_syncbatchnorm6_', in_channels=64)\r\n      (relu1): Activation(relu)\r\n      (conv2): Conv2D(64 -> 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n      (bn2): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers1_syncbatchnorm7_', in_channels=64)\r\n      (relu2): Activation(relu)\r\n      (conv3): Conv2D(64 -> 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn3): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers1_syncbatchnorm8_', in_channels=256)\r\n      (relu3): Activation(relu)\r\n    )\r\n  )\r\n  (layer2): HybridSequential(\r\n    (0): BottleneckV1b(\r\n      (conv1): Conv2D(256 -> 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn1): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers2_syncbatchnorm0_', in_channels=128)\r\n      (relu1): Activation(relu)\r\n      (conv2): Conv2D(128 -> 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\r\n      (bn2): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers2_syncbatchnorm1_', in_channels=128)\r\n      (relu2): Activation(relu)\r\n      (conv3): Conv2D(128 -> 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn3): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers2_syncbatchnorm2_', in_channels=512)\r\n      (relu3): Activation(relu)\r\n      (downsample): HybridSequential(\r\n        (0): Conv2D(256 -> 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\r\n        (1): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_down2_syncbatchnorm0_', in_channels=512)\r\n      )\r\n    )\r\n    (1): BottleneckV1b(\r\n      (conv1): Conv2D(512 -> 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn1): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers2_syncbatchnorm3_', in_channels=128)\r\n      (relu1): Activation(relu)\r\n      (conv2): Conv2D(128 -> 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n      (bn2): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers2_syncbatchnorm4_', in_channels=128)\r\n      (relu2): Activation(relu)\r\n      (conv3): Conv2D(128 -> 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn3): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers2_syncbatchnorm5_', in_channels=512)\r\n      (relu3): Activation(relu)\r\n    )\r\n    (2): BottleneckV1b(\r\n      (conv1): Conv2D(512 -> 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn1): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers2_syncbatchnorm6_', in_channels=128)\r\n      (relu1): Activation(relu)\r\n      (conv2): Conv2D(128 -> 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n      (bn2): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers2_syncbatchnorm7_', in_channels=128)\r\n      (relu2): Activation(relu)\r\n      (conv3): Conv2D(128 -> 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn3): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers2_syncbatchnorm8_', in_channels=512)\r\n      (relu3): Activation(relu)\r\n    )\r\n    (3): BottleneckV1b(\r\n      (conv1): Conv2D(512 -> 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn1): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers2_syncbatchnorm9_', in_channels=128)\r\n      (relu1): Activation(relu)\r\n      (conv2): Conv2D(128 -> 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n      (bn2): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers2_syncbatchnorm10_', in_channels=128)\r\n      (relu2): Activation(relu)\r\n      (conv3): Conv2D(128 -> 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn3): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers2_syncbatchnorm11_', in_channels=512)\r\n      (relu3): Activation(relu)\r\n    )\r\n  )\r\n  (layer3): HybridSequential(\r\n    (0): BottleneckV1b(\r\n      (conv1): Conv2D(512 -> 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn1): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers3_syncbatchnorm0_', in_channels=256)\r\n      (relu1): Activation(relu)\r\n      (conv2): Conv2D(256 -> 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n      (bn2): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers3_syncbatchnorm1_', in_channels=256)\r\n      (relu2): Activation(relu)\r\n      (conv3): Conv2D(256 -> 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn3): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers3_syncbatchnorm2_', in_channels=1024)\r\n      (relu3): Activation(relu)\r\n      (downsample): HybridSequential(\r\n        (0): Conv2D(512 -> 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n        (1): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_down3_syncbatchnorm0_', in_channels=1024)\r\n      )\r\n    )\r\n    (1): BottleneckV1b(\r\n      (conv1): Conv2D(1024 -> 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn1): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers3_syncbatchnorm3_', in_channels=256)\r\n      (relu1): Activation(relu)\r\n      (conv2): Conv2D(256 -> 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)\r\n      (bn2): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers3_syncbatchnorm4_', in_channels=256)\r\n      (relu2): Activation(relu)\r\n      (conv3): Conv2D(256 -> 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn3): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers3_syncbatchnorm5_', in_channels=1024)\r\n      (relu3): Activation(relu)\r\n    )\r\n    (2): BottleneckV1b(\r\n      (conv1): Conv2D(1024 -> 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn1): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers3_syncbatchnorm6_', in_channels=256)\r\n      (relu1): Activation(relu)\r\n      (conv2): Conv2D(256 -> 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)\r\n      (bn2): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers3_syncbatchnorm7_', in_channels=256)\r\n      (relu2): Activation(relu)\r\n      (conv3): Conv2D(256 -> 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn3): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers3_syncbatchnorm8_', in_channels=1024)\r\n      (relu3): Activation(relu)\r\n    )\r\n    (3): BottleneckV1b(\r\n      (conv1): Conv2D(1024 -> 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn1): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers3_syncbatchnorm9_', in_channels=256)\r\n      (relu1): Activation(relu)\r\n      (conv2): Conv2D(256 -> 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)\r\n      (bn2): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers3_syncbatchnorm10_', in_channels=256)\r\n      (relu2): Activation(relu)\r\n      (conv3): Conv2D(256 -> 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn3): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers3_syncbatchnorm11_', in_channels=1024)\r\n      (relu3): Activation(relu)\r\n    )\r\n    (4): BottleneckV1b(\r\n      (conv1): Conv2D(1024 -> 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn1): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers3_syncbatchnorm12_', in_channels=256)\r\n      (relu1): Activation(relu)\r\n      (conv2): Conv2D(256 -> 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)\r\n      (bn2): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers3_syncbatchnorm13_', in_channels=256)\r\n      (relu2): Activation(relu)\r\n      (conv3): Conv2D(256 -> 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn3): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers3_syncbatchnorm14_', in_channels=1024)\r\n      (relu3): Activation(relu)\r\n    )\r\n    (5): BottleneckV1b(\r\n      (conv1): Conv2D(1024 -> 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn1): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers3_syncbatchnorm15_', in_channels=256)\r\n      (relu1): Activation(relu)\r\n      (conv2): Conv2D(256 -> 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)\r\n      (bn2): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers3_syncbatchnorm16_', in_channels=256)\r\n      (relu2): Activation(relu)\r\n      (conv3): Conv2D(256 -> 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn3): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers3_syncbatchnorm17_', in_channels=1024)\r\n      (relu3): Activation(relu)\r\n    )\r\n  )\r\n  (layer4): HybridSequential(\r\n    (0): BottleneckV1b(\r\n      (conv1): Conv2D(1024 -> 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn1): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers4_syncbatchnorm0_', in_channels=512)\r\n      (relu1): Activation(relu)\r\n      (conv2): Conv2D(512 -> 512, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)\r\n      (bn2): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers4_syncbatchnorm1_', in_channels=512)\r\n      (relu2): Activation(relu)\r\n      (conv3): Conv2D(512 -> 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn3): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers4_syncbatchnorm2_', in_channels=2048)\r\n      (relu3): Activation(relu)\r\n      (downsample): HybridSequential(\r\n        (0): Conv2D(1024 -> 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n        (1): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_down4_syncbatchnorm0_', in_channels=2048)\r\n      )\r\n    )\r\n    (1): BottleneckV1b(\r\n      (conv1): Conv2D(2048 -> 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn1): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers4_syncbatchnorm3_', in_channels=512)\r\n      (relu1): Activation(relu)\r\n      (conv2): Conv2D(512 -> 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)\r\n      (bn2): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers4_syncbatchnorm4_', in_channels=512)\r\n      (relu2): Activation(relu)\r\n      (conv3): Conv2D(512 -> 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn3): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers4_syncbatchnorm5_', in_channels=2048)\r\n      (relu3): Activation(relu)\r\n    )\r\n    (2): BottleneckV1b(\r\n      (conv1): Conv2D(2048 -> 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn1): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers4_syncbatchnorm6_', in_channels=512)\r\n      (relu1): Activation(relu)\r\n      (conv2): Conv2D(512 -> 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)\r\n      (bn2): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers4_syncbatchnorm7_', in_channels=512)\r\n      (relu2): Activation(relu)\r\n      (conv3): Conv2D(512 -> 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n      (bn3): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0_resnetv1s_layers4_syncbatchnorm8_', in_channels=2048)\r\n      (relu3): Activation(relu)\r\n    )\r\n  )\r\n  (head): _PSPHead(\r\n    (psp): _PyramidPooling(\r\n      (conv1): HybridSequential(\r\n        (0): Conv2D(2048 -> 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n        (1): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0__pyramidpooling0_hybridsequential0_syncbatchnorm0_', in_channels=512)\r\n        (2): Activation(relu)\r\n      )\r\n      (conv2): HybridSequential(\r\n        (0): Conv2D(2048 -> 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n        (1): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0__pyramidpooling0_hybridsequential1_syncbatchnorm0_', in_channels=512)\r\n        (2): Activation(relu)\r\n      )\r\n      (conv3): HybridSequential(\r\n        (0): Conv2D(2048 -> 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n        (1): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0__pyramidpooling0_hybridsequential2_syncbatchnorm0_', in_channels=512)\r\n        (2): Activation(relu)\r\n      )\r\n      (conv4): HybridSequential(\r\n        (0): Conv2D(2048 -> 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\r\n        (1): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0__pyramidpooling0_hybridsequential3_syncbatchnorm0_', in_channels=512)\r\n        (2): Activation(relu)\r\n      )\r\n    )\r\n    (block): HybridSequential(\r\n      (0): Conv2D(4096 -> 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\r\n      (1): SyncBatchNorm(eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, ndev=0, key='pspnet0__psphead0_syncbatchnorm0_', in_channels=512)\r\n      (2): Activation(relu)\r\n      (3): Dropout(p = 0.1, axes=())\r\n      (4): Conv2D(512 -> 150, kernel_size=(1, 1), stride=(1, 1))\r\n    )\r\n  )\r\n)\r\nC:\\Users\\Nam\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\mxnet\\gluon\\parameter.py:862: UserWarning: Parameter 'pspnet0_resnetv1s_conv0_weight' is already initialized, ignoring. Set force_reinit=True to re-initialize.\r\n  v.initialize(None, ctx, init, force_reinit=force_reinit)\r\nTraceback (most recent call last):\r\n  File \"train.py\", line 224, in <module>\r\n    trainer = Trainer(args)\r\n  File \"train.py\", line 138, in __init__\r\n    self.evaluator = DataParallelModel(SegEvalModel(model), args.ctx)\r\n  File \"C:\\Users\\Nam\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\gluoncv\\utils\\parallel.py\", line 170, in __init__\r\n    module.collect_params().reset_ctx(ctx=ctx_list)\r\n  File \"C:\\Users\\Nam\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\mxnet\\gluon\\parameter.py\", line 879, in reset_ctx\r\n    i.reset_ctx(ctx)\r\n  File \"C:\\Users\\Nam\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\mxnet\\gluon\\parameter.py\", line 464, in reset_ctx\r\n    \"has not been initialized.\"%self.name)\r\n**ValueError: Cannot reset context for Parameter 'pspnet0_resnetv1s_conv0_weight' because it has not been initialized.**\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1070", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1070/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1070/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1070/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1070", "id": 531550165, "node_id": "MDU6SXNzdWU1MzE1NTAxNjU=", "number": 1070, "title": "Yolo3 dataloader for custom data kernel dies.", "user": {"login": "djaym7", "id": 12378820, "node_id": "MDQ6VXNlcjEyMzc4ODIw", "avatar_url": "https://avatars1.githubusercontent.com/u/12378820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djaym7", "html_url": "https://github.com/djaym7", "followers_url": "https://api.github.com/users/djaym7/followers", "following_url": "https://api.github.com/users/djaym7/following{/other_user}", "gists_url": "https://api.github.com/users/djaym7/gists{/gist_id}", "starred_url": "https://api.github.com/users/djaym7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djaym7/subscriptions", "organizations_url": "https://api.github.com/users/djaym7/orgs", "repos_url": "https://api.github.com/users/djaym7/repos", "events_url": "https://api.github.com/users/djaym7/events{/privacy}", "received_events_url": "https://api.github.com/users/djaym7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2019-12-02T21:27:49Z", "updated_at": "2020-02-29T23:50:35Z", "closed_at": "2020-02-29T23:50:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "classes = [ '1', '2', '3']\r\nkernel dies\r\nclasses = [ '1', '2', '3', '4'] - works fine\r\n\r\nActual number of classes = 3 and works for ssd data loader perfectly.. idk why yolo3's loader required one more class (Isn't the background class added by default?). Tried on mxnet 1.4.1 , 1.5.0 and 1.6.0\r\n\r\nHere is the code for yolo's and ssd's data loader.\r\n\r\n![image](https://user-images.githubusercontent.com/12378820/69996699-6dd74400-1507-11ea-9f20-4cc6a2232dea.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1066", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1066/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1066/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1066/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1066", "id": 529834112, "node_id": "MDU6SXNzdWU1Mjk4MzQxMTI=", "number": 1066, "title": "Error on mxnet/gluon: after upgrade the mxnet-cu100 and gluoncv,then run script \"train_faster_rcnn.py\"", "user": {"login": "HuFBH", "id": 47581857, "node_id": "MDQ6VXNlcjQ3NTgxODU3", "avatar_url": "https://avatars2.githubusercontent.com/u/47581857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HuFBH", "html_url": "https://github.com/HuFBH", "followers_url": "https://api.github.com/users/HuFBH/followers", "following_url": "https://api.github.com/users/HuFBH/following{/other_user}", "gists_url": "https://api.github.com/users/HuFBH/gists{/gist_id}", "starred_url": "https://api.github.com/users/HuFBH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HuFBH/subscriptions", "organizations_url": "https://api.github.com/users/HuFBH/orgs", "repos_url": "https://api.github.com/users/HuFBH/repos", "events_url": "https://api.github.com/users/HuFBH/events{/privacy}", "received_events_url": "https://api.github.com/users/HuFBH/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Jerryzcn", "id": 4907789, "node_id": "MDQ6VXNlcjQ5MDc3ODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4907789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jerryzcn", "html_url": "https://github.com/Jerryzcn", "followers_url": "https://api.github.com/users/Jerryzcn/followers", "following_url": "https://api.github.com/users/Jerryzcn/following{/other_user}", "gists_url": "https://api.github.com/users/Jerryzcn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jerryzcn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jerryzcn/subscriptions", "organizations_url": "https://api.github.com/users/Jerryzcn/orgs", "repos_url": "https://api.github.com/users/Jerryzcn/repos", "events_url": "https://api.github.com/users/Jerryzcn/events{/privacy}", "received_events_url": "https://api.github.com/users/Jerryzcn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Jerryzcn", "id": 4907789, "node_id": "MDQ6VXNlcjQ5MDc3ODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4907789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jerryzcn", "html_url": "https://github.com/Jerryzcn", "followers_url": "https://api.github.com/users/Jerryzcn/followers", "following_url": "https://api.github.com/users/Jerryzcn/following{/other_user}", "gists_url": "https://api.github.com/users/Jerryzcn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jerryzcn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jerryzcn/subscriptions", "organizations_url": "https://api.github.com/users/Jerryzcn/orgs", "repos_url": "https://api.github.com/users/Jerryzcn/repos", "events_url": "https://api.github.com/users/Jerryzcn/events{/privacy}", "received_events_url": "https://api.github.com/users/Jerryzcn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-11-28T10:44:44Z", "updated_at": "2020-03-26T05:58:38Z", "closed_at": "2019-12-23T04:35:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "My virtual environment is broken and then I create a new virtual environment named  \"huf_mx\" as  following.\r\n\r\n![image](https://user-images.githubusercontent.com/47581857/69799144-ac21ea00-120d-11ea-8ecb-5367dc9a7fce.png)\r\n\r\nTrying to run script \"train_faster_rcnn.py\" on spyder IDE, I get the error.\r\nAs shown in the image, there are some problem on mxnet/gluon, or maybe gluoncv either.\r\n\r\nHow to fix it, installing another mxnet?\r\nI have tried 1.4.0,but not work.\r\n\r\nthx a lot.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1065", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1065/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1065/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1065/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1065", "id": 529681013, "node_id": "MDU6SXNzdWU1Mjk2ODEwMTM=", "number": 1065, "title": "problem with train_recognizer.py", "user": {"login": "jiawensong", "id": 20223238, "node_id": "MDQ6VXNlcjIwMjIzMjM4", "avatar_url": "https://avatars1.githubusercontent.com/u/20223238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiawensong", "html_url": "https://github.com/jiawensong", "followers_url": "https://api.github.com/users/jiawensong/followers", "following_url": "https://api.github.com/users/jiawensong/following{/other_user}", "gists_url": "https://api.github.com/users/jiawensong/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiawensong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiawensong/subscriptions", "organizations_url": "https://api.github.com/users/jiawensong/orgs", "repos_url": "https://api.github.com/users/jiawensong/repos", "events_url": "https://api.github.com/users/jiawensong/events{/privacy}", "received_events_url": "https://api.github.com/users/jiawensong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-11-28T04:05:45Z", "updated_at": "2019-12-10T02:41:45Z", "closed_at": "2019-12-10T02:41:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "in the script ,trainer use kvstore but set update_on_kvstore=false.Have someone know what this mean?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1061", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1061/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1061/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1061/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1061", "id": 529345567, "node_id": "MDU6SXNzdWU1MjkzNDU1Njc=", "number": 1061, "title": "GluonCV with CUDA 9.1, pandas and OpenCV: numpy error", "user": {"login": "LewsTherin511", "id": 44398356, "node_id": "MDQ6VXNlcjQ0Mzk4MzU2", "avatar_url": "https://avatars2.githubusercontent.com/u/44398356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LewsTherin511", "html_url": "https://github.com/LewsTherin511", "followers_url": "https://api.github.com/users/LewsTherin511/followers", "following_url": "https://api.github.com/users/LewsTherin511/following{/other_user}", "gists_url": "https://api.github.com/users/LewsTherin511/gists{/gist_id}", "starred_url": "https://api.github.com/users/LewsTherin511/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LewsTherin511/subscriptions", "organizations_url": "https://api.github.com/users/LewsTherin511/orgs", "repos_url": "https://api.github.com/users/LewsTherin511/repos", "events_url": "https://api.github.com/users/LewsTherin511/events{/privacy}", "received_events_url": "https://api.github.com/users/LewsTherin511/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-27T13:27:14Z", "updated_at": "2019-12-08T03:11:20Z", "closed_at": "2019-12-08T03:11:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to install GluonCV with GPU support in a conda environment.\r\n\r\nTo check with CUDA version I have (it's a server I'm accessing through ssh, so it was installed already), I ran:\r\n\r\n`nvcc --version`\r\n\r\nand got:\r\n\r\n```\r\nnvcc: NVIDIA (R) Cuda compiler driver\r\nCopyright (c) 2005-2017 NVIDIA Corporation\r\nBuilt on Fri_Nov__3_21:07:56_CDT_2017\r\nCuda compilation tools, release 9.1, V9.1.85\r\n```\r\n\r\nSo I installed Gluon with:\r\n\r\n`pip install --upgrade mxnet-cu91mkl gluoncv`\r\n\r\nand, since I also need pandas and opencv, I ran:\r\n\r\n```\r\nconda install -c anaconda pandas\r\nconda install -c anaconda opencv\r\n```\r\nEverything fine so far, but whenever I try to run some code (a script to generate .lst files, so it's not even actually using the GPU) I got an error message stating there is an issue with the numpy installation:\r\n\r\n`ImportError: Something is wrong with the numpy installation. While importing we detected an older version of numpy in ['/home/carlo/.conda/envs/gluon/lib/python3.7/site-packages/numpy']. One method of fixing this is to repeatedly uninstall numpy until none is found, then reinstall this version.`\r\n\r\nI tried in environments created either with support for Python 3.6 and 3.7, but it didn't work in either way. Any idea on how to fix it?\r\n\r\n\r\n-------------------------------\r\n**EDIT:**\r\n-------------------------------\r\nFixed it, basically, all I had to do was:\r\n```\r\npip install --upgrade mxnet-cu90mkl gluoncv\r\nconda install -c anaconda cudatoolkit==9.0\r\n```\r\n\r\nSo, it seems I was using the wrong version of mxnet-cuXXmkl, and I was missing the cudatoolkit in my environment.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1060", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1060/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1060/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1060/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1060", "id": 529209730, "node_id": "MDU6SXNzdWU1MjkyMDk3MzA=", "number": 1060, "title": "Faster-RCNN-custom cannot transfer pretrained weight from coco or voc", "user": {"login": "hetong007", "id": 1289856, "node_id": "MDQ6VXNlcjEyODk4NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1289856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hetong007", "html_url": "https://github.com/hetong007", "followers_url": "https://api.github.com/users/hetong007/followers", "following_url": "https://api.github.com/users/hetong007/following{/other_user}", "gists_url": "https://api.github.com/users/hetong007/gists{/gist_id}", "starred_url": "https://api.github.com/users/hetong007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hetong007/subscriptions", "organizations_url": "https://api.github.com/users/hetong007/orgs", "repos_url": "https://api.github.com/users/hetong007/repos", "events_url": "https://api.github.com/users/hetong007/events{/privacy}", "received_events_url": "https://api.github.com/users/hetong007/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-27T09:06:44Z", "updated_at": "2019-11-28T01:49:55Z", "closed_at": "2019-11-28T01:49:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "To reproduce:\r\n\r\n```python\r\nimport gluoncv as gcv\r\nnet1 = gcv.model_zoo.get_model('yolo3_mobilenet1.0_custom', \r\n                               pretrained_base=False, transfer='coco', \r\n                               classes=['a', 'b', 'c'])\r\nnet2 = gcv.model_zoo.get_model('faster_rcnn_resnet50_v1b_custom', \r\n                               pretrained_base=False, transfer='coco', \r\n                               classes=['a', 'b', 'c'])\r\n```\r\n\r\nThe error message:\r\n\r\n```\r\nAssertionError: Parameter '_target_generator._box_encoder.means' is missing in file '/home/ubuntu/.mxnet/models/faster_rcnn_resnet50_v1b_coco-5b4690fb.params', which contains parameters: 'features.5.3.bn3.gamma', 'top_features.0.0.bn1.gamma', 'top_features.0.2.bn1.beta', ..., 'top_features.0.2.bn2.beta', 'features.6.5.conv1.weight', 'top_features.0.1.bn3.gamma', 'features.6.1.bn1.running_var'. Set allow_missing=True to ignore missing parameters.\r\n```\r\n\r\nNotice that Yolo/SSD support this customization, but Faster RCNN breaks it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1055", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1055/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1055/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1055/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1055", "id": 528740560, "node_id": "MDU6SXNzdWU1Mjg3NDA1NjA=", "number": 1055, "title": "resnet50_v1d unused parameters causing DeferredInitializationError", "user": {"login": "skaldesh", "id": 12274166, "node_id": "MDQ6VXNlcjEyMjc0MTY2", "avatar_url": "https://avatars1.githubusercontent.com/u/12274166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skaldesh", "html_url": "https://github.com/skaldesh", "followers_url": "https://api.github.com/users/skaldesh/followers", "following_url": "https://api.github.com/users/skaldesh/following{/other_user}", "gists_url": "https://api.github.com/users/skaldesh/gists{/gist_id}", "starred_url": "https://api.github.com/users/skaldesh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skaldesh/subscriptions", "organizations_url": "https://api.github.com/users/skaldesh/orgs", "repos_url": "https://api.github.com/users/skaldesh/repos", "events_url": "https://api.github.com/users/skaldesh/events{/privacy}", "received_events_url": "https://api.github.com/users/skaldesh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-26T13:54:47Z", "updated_at": "2019-11-27T11:47:30Z", "closed_at": "2019-11-27T11:47:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am using the script to train a classification model with my own dataset that is offered in the gluon-cv tutorial, found here: https://gluon-cv.mxnet.io/build/examples_classification/transfer_learning_minc.html\r\n\r\nThe only change I made is in line 196, where I replaced `ResNet50_v2` with `resnet50_v1d`.\r\n\r\nWhen running the script, it then fails with this exception:\r\n\r\n```python\r\n/usr/local/lib/python3.5/dist-packages/mxnet/gluon/block.py:548: UserWarning: Parameter resnetv1d_dense1_bias, resnetv1d_dense1_weight is not used by any computation. Is this intended?\r\n  out = self.forward(*args)\r\n[13:52:07] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)\r\nTraceback (most recent call last):\r\n  File \"transfer_learning_minc.py\", line 271, in <module>\r\n    trainer.step(batch_size)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mxnet/gluon/trainer.py\", line 327, in step\r\n    self._init_kvstore()\r\n  File \"/usr/local/lib/python3.5/dist-packages/mxnet/gluon/trainer.py\", line 222, in _init_kvstore\r\n    arg_arrays = {param.name: param.data(self._contexts[0]) for param in self._params}\r\n  File \"/usr/local/lib/python3.5/dist-packages/mxnet/gluon/trainer.py\", line 222, in <dictcomp>\r\n    arg_arrays = {param.name: param.data(self._contexts[0]) for param in self._params}\r\n  File \"/usr/local/lib/python3.5/dist-packages/mxnet/gluon/parameter.py\", line 543, in data\r\n    return self._check_and_get(self._data, ctx)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mxnet/gluon/parameter.py\", line 234, in _check_and_get\r\n    \"num_features, etc., for network layers.\"%(self.name))\r\nmxnet.gluon.parameter.DeferredInitializationError: Parameter 'resnetv1d_dense1_weight' has not been initialized yet because initialization was deferred. Actual initialization happens during the first forward pass. Please pass one batch of data through the network before accessing Parameters. You can also avoid deferred initialization by specifying in_units, num_features, etc., for network layers.\r\n```\r\n\r\nSince I am relatively unexperienced so far, I do not know what I need to do in order to fix this...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1053", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1053/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1053/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1053/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1053", "id": 528450580, "node_id": "MDU6SXNzdWU1Mjg0NTA1ODA=", "number": 1053, "title": "Share benchmark scripts", "user": {"login": "djaym7", "id": 12378820, "node_id": "MDQ6VXNlcjEyMzc4ODIw", "avatar_url": "https://avatars1.githubusercontent.com/u/12378820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djaym7", "html_url": "https://github.com/djaym7", "followers_url": "https://api.github.com/users/djaym7/followers", "following_url": "https://api.github.com/users/djaym7/following{/other_user}", "gists_url": "https://api.github.com/users/djaym7/gists{/gist_id}", "starred_url": "https://api.github.com/users/djaym7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djaym7/subscriptions", "organizations_url": "https://api.github.com/users/djaym7/orgs", "repos_url": "https://api.github.com/users/djaym7/repos", "events_url": "https://api.github.com/users/djaym7/events{/privacy}", "received_events_url": "https://api.github.com/users/djaym7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-26T02:38:09Z", "updated_at": "2019-12-02T21:19:09Z", "closed_at": "2019-12-02T21:19:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can anyone share benchmarking scripts used for model_zoo (to reproduce the same throughput results)?\r\nhttps://gluon-cv.mxnet.io/model_zoo/detection.html    \r\nhttps://gluon-cv.mxnet.io/model_zoo/segmentation.html\r\n\r\nMy results with code below have very high variations (MaskRCNN performing much better than yolo3, deeplabV3 performing much better then maskRCNN) while tested mx.gpu(0) on p3.8x large having Tesla v100: \r\n\r\nx=mx.nd.random.randn(...)\r\nnet.hybridize()\r\nstart=time.time()\r\nfor _ in range(1000)\r\n      _ = net(x)\r\nfinal_time = time.time()-start", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1052", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1052/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1052/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1052/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1052", "id": 527911810, "node_id": "MDU6SXNzdWU1Mjc5MTE4MTA=", "number": 1052, "title": "Pretrained model of mobilenetv3_small contain nan weight", "user": {"login": "xiaodaxia", "id": 1224397, "node_id": "MDQ6VXNlcjEyMjQzOTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1224397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiaodaxia", "html_url": "https://github.com/xiaodaxia", "followers_url": "https://api.github.com/users/xiaodaxia/followers", "following_url": "https://api.github.com/users/xiaodaxia/following{/other_user}", "gists_url": "https://api.github.com/users/xiaodaxia/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiaodaxia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiaodaxia/subscriptions", "organizations_url": "https://api.github.com/users/xiaodaxia/orgs", "repos_url": "https://api.github.com/users/xiaodaxia/repos", "events_url": "https://api.github.com/users/xiaodaxia/events{/privacy}", "received_events_url": "https://api.github.com/users/xiaodaxia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-25T07:52:11Z", "updated_at": "2019-12-17T05:24:56Z", "closed_at": "2019-12-17T05:24:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Load the pretrained weights, and the first layer has one channel whose weights are all nan.\r\n**import mxnet as mx\r\nparams = mx.nd.load(\u201cmobilenetv3_small-33c100a7.params\u201d)\r\nprint(params[\u2018features.0.weight\u2019][8,:,:,:])**\r\nwould print out an all nan array.\r\nSo Is this an error or am I missing something?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1051", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1051/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1051/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1051/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1051", "id": 527772011, "node_id": "MDU6SXNzdWU1Mjc3NzIwMTE=", "number": 1051, "title": " Unable to Reproduce Single Pose Result on COCO 2017 with Pretrained Weights", "user": {"login": "lordfjw", "id": 26380857, "node_id": "MDQ6VXNlcjI2MzgwODU3", "avatar_url": "https://avatars3.githubusercontent.com/u/26380857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lordfjw", "html_url": "https://github.com/lordfjw", "followers_url": "https://api.github.com/users/lordfjw/followers", "following_url": "https://api.github.com/users/lordfjw/following{/other_user}", "gists_url": "https://api.github.com/users/lordfjw/gists{/gist_id}", "starred_url": "https://api.github.com/users/lordfjw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lordfjw/subscriptions", "organizations_url": "https://api.github.com/users/lordfjw/orgs", "repos_url": "https://api.github.com/users/lordfjw/repos", "events_url": "https://api.github.com/users/lordfjw/events{/privacy}", "received_events_url": "https://api.github.com/users/lordfjw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-24T22:58:31Z", "updated_at": "2019-11-25T05:46:01Z", "closed_at": "2019-11-25T05:46:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nI am trying to reproduce your single human pose estimation result according to your documents: https://gluon-cv.mxnet.io/model_zoo/pose.html#id46. But I couldn't get similar results using the pretrained weights.\r\n\r\nI followed the instruction here: \r\nhttps://gluon-cv.mxnet.io/build/examples_pose/demo_simple_pose.html#sphx-glr-build-examples-pose-demo-simple-pose-py \r\nand I wrote a similar script using the ground truth bounding boxes of COCO 2017 dataset to run evaluation on the validation split for single pose estimation.\r\n\r\nBelow is my evaluation script:\r\n```\r\nimport mxnet as mx\r\nfrom gluoncv import model_zoo, data, utils\r\nfrom gluoncv.data.transforms.pose import detector_to_simple_pose, heatmap_to_coord\r\nimport numpy as np\r\nimport json\r\nimport os\r\nfrom pycocotools.coco import COCO\r\nfrom pycocotools.cocoeval import COCOeval\r\nfrom tqdm import tqdm\r\n\r\n\r\ndef make_json_entry(pred_coords, confidence, image_id, thres=0.2):\r\n    '''\r\n    :param pred_coords: np.array of shape n*17*2\r\n    :param confidence: np.array of shape n*17*1\r\n    :param image_ids: list of image_ids\r\n    :return:\r\n    '''\r\n    json_entries = []\r\n    if pred_coords is None:\r\n        return json_entries\r\n    else:\r\n        num = pred_coords.shape[0]\r\n        keypoint_num = pred_coords.shape[1]\r\n        for i in range(num):\r\n            json_entry= {}\r\n            json_entry['image_id'] = image_id\r\n            json_entry['category_id'] = 1\r\n            json_entry['keypoints'] = list()\r\n            score = confidence[i, ...]\r\n            score = score[score >= thres]\r\n            json_entry['score'] = float(np.mean(score))\r\n\r\n            for j in range(keypoint_num):\r\n                json_entry['keypoints'].append(int(pred_coords[i, j, 0]))\r\n                json_entry['keypoints'].append(int(pred_coords[i, j, 1]))\r\n                json_entry['keypoints'].append(1)\r\n\r\n            json_entries.append(json_entry)\r\n        return json_entries\r\n\r\ndef eval_coco(json_entries, json_path, dataDir):\r\n    with open(json_path, 'w') as json_file:\r\n        json_file.write(json.dumps(json_entries))\r\n\r\n    annType = 'keypoints'\r\n    prefix = 'person_keypoints'\r\n    print('Running demo for *%s* results.' % (annType))\r\n\r\n    dataType = 'val2017'\r\n    annFile = '%s/annotations/%s_%s.json' % (dataDir, prefix, dataType)\r\n    cocoGt = COCO(annFile)\r\n\r\n    cocoDt = cocoGt.loadRes(json_path)\r\n\r\n    imgIds = sorted(cocoGt.getImgIds())\r\n\r\n    cocoEval = COCOeval(cocoGt, cocoDt, annType)\r\n    cocoEval.params.imgIds = imgIds\r\n    cocoEval.evaluate()\r\n    cocoEval.accumulate()\r\n    cocoEval.summarize()\r\n\r\n\r\ndef inference_image_gt_bbox(im_fname, pose_net, ctx_gpu, coco):\r\n    ori_img = mx.image.imread(im_fname)\r\n    id = fname_to_id(im_fname)\r\n    annIds = coco.getAnnIds(imgIds=[id])\r\n\r\n    if len(annIds) > 0:\r\n        class_IDs = np.zeros([1, len(annIds), 1])\r\n        scores = np.zeros([1, len(annIds), 1])\r\n        bounding_boxs = np.zeros([1, len(annIds), 4])\r\n        anns = coco.loadAnns(annIds)\r\n        for i, ann in enumerate(anns):\r\n            bbox = np.array(ann['bbox'])\r\n            bbox_x1y1_x2y2 = bbox.copy()\r\n            bbox_x1y1_x2y2[2:4] = bbox[0:2] + bbox[2:4]\r\n            bounding_boxs[0, i, :] = bbox_x1y1_x2y2\r\n            scores[0, i, :] = 1\r\n            class_IDs[0, i, :] = 0\r\n\r\n        class_IDs = mx.nd.array(class_IDs)\r\n        scores = mx.nd.array(scores)\r\n        bounding_boxs = mx.nd.array(bounding_boxs)\r\n        pose_input, upscale_bbox = detector_to_simple_pose(ori_img, class_IDs, scores, bounding_boxs, scale=1.25)\r\n        pose_input = pose_input.as_in_context(ctx_gpu)\r\n        predicted_heatmap = pose_net(pose_input)\r\n        pred_coords, confidence = heatmap_to_coord(predicted_heatmap, upscale_bbox)\r\n        pred_coords = pred_coords.asnumpy()\r\n        confidence = confidence.asnumpy()\r\n    else:\r\n        pred_coords = None\r\n        confidence = None\r\n\r\n    return pred_coords, confidence\r\n\r\ndef fname_to_id(fname):\r\n    _, fname = os.path.split(fname)\r\n    return int(fname.split('.')[0])\r\n\r\n\r\ndef main_gt_bbox():\r\n    model_arch = 'simple_pose_resnet50_v1b'\r\n    pretrained_tag = 'e2c7b1ad'\r\n    ctx_gpu = mx.gpu(0)\r\n    data_root = 'C:/user/dataset/COCODATASET2017/'\r\n    data_val = '{}/val2017'.format(data_root)\r\n    ann_file = '{}/annotations/person_keypoints_val2017.json'.format(data_root)\r\n    im_fnames = [os.path.join(data_val, f) for f in os.listdir(data_val)]\r\n\r\n    pose_net = model_zoo.get_model(model_arch, pretrained=pretrained_tag, ctx=ctx_gpu)\r\n\r\n    coco = COCO(ann_file)\r\n\r\n    json_entries = []\r\n    for im_fname in tqdm(im_fnames):\r\n        pred_coords, confidence = inference_image_gt_bbox(im_fname, pose_net, ctx_gpu, coco)\r\n        image_id = fname_to_id(im_fname)\r\n\r\n        json_entry = make_json_entry(pred_coords, confidence, image_id)\r\n        json_entries += json_entry\r\n\r\n    eval_coco(json_entries, './val_gt_bbox_{}.json'.format(model_arch), data_root)\r\n\r\n\r\n\r\n\r\nif __name__ == '__main__':\r\n    main_gt_bbox()\r\n```\r\n\r\nAfter running it, I got 56.2 OKS mAP, which is much lower than the reported 72.4 OKS mAP\r\n```\r\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets= 20 ] = 0.562\r\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets= 20 ] = 0.819\r\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets= 20 ] = 0.613\r\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets= 20 ] = 0.506\r\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets= 20 ] = 0.642\r\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 20 ] = 0.598\r\n Average Recall     (AR) @[ IoU=0.50      | area=   all | maxDets= 20 ] = 0.836\r\n Average Recall     (AR) @[ IoU=0.75      | area=   all | maxDets= 20 ] = 0.648\r\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets= 20 ] = 0.536\r\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets= 20 ] = 0.686\r\n```\r\n\r\nCould you kindly look into this issue or release the scripts that can reproduce the results reported in the documents?\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1050", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1050/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1050/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1050/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1050", "id": 526997639, "node_id": "MDU6SXNzdWU1MjY5OTc2Mzk=", "number": 1050, "title": "Unsuitable **kwargs passed into gluon.HybridBlock in DarknetV3", "user": {"login": "ElectronicElephant", "id": 20351686, "node_id": "MDQ6VXNlcjIwMzUxNjg2", "avatar_url": "https://avatars2.githubusercontent.com/u/20351686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ElectronicElephant", "html_url": "https://github.com/ElectronicElephant", "followers_url": "https://api.github.com/users/ElectronicElephant/followers", "following_url": "https://api.github.com/users/ElectronicElephant/following{/other_user}", "gists_url": "https://api.github.com/users/ElectronicElephant/gists{/gist_id}", "starred_url": "https://api.github.com/users/ElectronicElephant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ElectronicElephant/subscriptions", "organizations_url": "https://api.github.com/users/ElectronicElephant/orgs", "repos_url": "https://api.github.com/users/ElectronicElephant/repos", "events_url": "https://api.github.com/users/ElectronicElephant/events{/privacy}", "received_events_url": "https://api.github.com/users/ElectronicElephant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "zhreshold", "id": 3307514, "node_id": "MDQ6VXNlcjMzMDc1MTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3307514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhreshold", "html_url": "https://github.com/zhreshold", "followers_url": "https://api.github.com/users/zhreshold/followers", "following_url": "https://api.github.com/users/zhreshold/following{/other_user}", "gists_url": "https://api.github.com/users/zhreshold/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhreshold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhreshold/subscriptions", "organizations_url": "https://api.github.com/users/zhreshold/orgs", "repos_url": "https://api.github.com/users/zhreshold/repos", "events_url": "https://api.github.com/users/zhreshold/events{/privacy}", "received_events_url": "https://api.github.com/users/zhreshold/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "zhreshold", "id": 3307514, "node_id": "MDQ6VXNlcjMzMDc1MTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3307514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhreshold", "html_url": "https://github.com/zhreshold", "followers_url": "https://api.github.com/users/zhreshold/followers", "following_url": "https://api.github.com/users/zhreshold/following{/other_user}", "gists_url": "https://api.github.com/users/zhreshold/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhreshold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhreshold/subscriptions", "organizations_url": "https://api.github.com/users/zhreshold/orgs", "repos_url": "https://api.github.com/users/zhreshold/repos", "events_url": "https://api.github.com/users/zhreshold/events{/privacy}", "received_events_url": "https://api.github.com/users/zhreshold/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-11-22T05:35:59Z", "updated_at": "2020-02-04T07:00:36Z", "closed_at": "2020-02-04T07:00:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/dmlc/gluon-cv/blob/1e3b71ad51db9a78984e3cdb631b6e0396832169/gluoncv/model_zoo/yolo/darknet.py#L81\r\n\r\nIn this line, **kwargs is passed into mxnet's `HybridBlock`, whose `__init__` function is\r\n```\r\nclass HybridBlock(Block):\r\n    def __init__(self, prefix=None, params=None):\r\n```\r\nand does not accept `**kwargs` as its parameter.\r\n\r\nIn this situation, as long as `**kwargs` contains anything customed other than `prefix` or `params`, a `TypeError` will be throwed.\r\n\r\nIn my suggestion, you can consider change the line into \r\n```\r\n        super(DarknetV3, self).__init__(kwargs.get('prefix', None), kwargs.get('params', None))\r\n```\r\n, passing only necessary parameters into the parent class.\r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1047", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1047/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1047/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1047/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1047", "id": 525385511, "node_id": "MDU6SXNzdWU1MjUzODU1MTE=", "number": 1047, "title": "Training  ssd  with mobile0-25  with --resume  module params", "user": {"login": "zhangweilion", "id": 25033424, "node_id": "MDQ6VXNlcjI1MDMzNDI0", "avatar_url": "https://avatars3.githubusercontent.com/u/25033424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangweilion", "html_url": "https://github.com/zhangweilion", "followers_url": "https://api.github.com/users/zhangweilion/followers", "following_url": "https://api.github.com/users/zhangweilion/following{/other_user}", "gists_url": "https://api.github.com/users/zhangweilion/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangweilion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangweilion/subscriptions", "organizations_url": "https://api.github.com/users/zhangweilion/orgs", "repos_url": "https://api.github.com/users/zhangweilion/repos", "events_url": "https://api.github.com/users/zhangweilion/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangweilion/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-20T02:41:05Z", "updated_at": "2019-11-20T02:44:05Z", "closed_at": "2019-11-20T02:44:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "![\u56fe\u7247](https://user-images.githubusercontent.com/25033424/69204358-ae3ad780-0b81-11ea-91b3-376f78bd4195.png)\r\nCache_op error:CacheOp requires all inputs to live on the same context.\r\n\r\nResolve\uff1a\r\n       just adding \"net.collect_parmas( ).reset_ctx(ctx[0])\" below net.load_parameters(args.resume.strip( ))", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1046", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1046/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1046/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1046/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1046", "id": 524715288, "node_id": "MDU6SXNzdWU1MjQ3MTUyODg=", "number": 1046, "title": "Quantization : Converting Yolo3 from fp32 to int8 : output always -1", "user": {"login": "djaym7", "id": 12378820, "node_id": "MDQ6VXNlcjEyMzc4ODIw", "avatar_url": "https://avatars1.githubusercontent.com/u/12378820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djaym7", "html_url": "https://github.com/djaym7", "followers_url": "https://api.github.com/users/djaym7/followers", "following_url": "https://api.github.com/users/djaym7/following{/other_user}", "gists_url": "https://api.github.com/users/djaym7/gists{/gist_id}", "starred_url": "https://api.github.com/users/djaym7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djaym7/subscriptions", "organizations_url": "https://api.github.com/users/djaym7/orgs", "repos_url": "https://api.github.com/users/djaym7/repos", "events_url": "https://api.github.com/users/djaym7/events{/privacy}", "received_events_url": "https://api.github.com/users/djaym7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 28, "created_at": "2019-11-19T01:23:01Z", "updated_at": "2019-12-12T06:51:31Z", "closed_at": "2019-12-12T06:51:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "import mxnet as mx\r\nimport gluoncv as gcv\r\nfrom mxnet.contrib.quantization import quantize_model #,quantize_net\r\nimport logging\r\nnet = gcv.model_zoo.yolo3_darknet53_voc(pretrained=True,ctx=mx.gpu())\r\n\r\nctx = [mx.gpu(i) for i in range(mx.context.num_gpus())]\r\nnet.hybridize()\r\n_=net(mx.nd.random.randn(1,3,608,608,ctx=mx.gpu()))\r\nnet.export('yolo')\r\n\r\ndef save_symbol(fname, sym, logger=None):\r\n    if logger is not None:\r\n        logger.info('Saving symbol into file at %s' % fname)\r\n    sym.save(fname)\r\n\r\ndef save_params(fname, arg_params, aux_params, logger=None):\r\n    if logger is not None:\r\n        logger.info('Saving params into file at %s' % fname)\r\n    save_dict = {('arg:%s' % k): v.as_in_context(mx.gpu()) for k, v in arg_params.items()}\r\n    save_dict.update({('aux:%s' % k): v.as_in_context(mx.gpu()) for k, v in aux_params.items()})\r\n    mx.nd.save(fname, save_dict)\r\n\r\nsym, arg_params, aux_params = mx.model.load_checkpoint('yolo',0)\r\n\r\nqsym, qarg_params, qaux_params = quantize_model(sym=sym, arg_params=arg_params, aux_params=aux_params,\r\n                                                       ctx=mx.gpu(), excluded_sym_names=['yolov30_yolooutputv32_conv0_fwd',\r\n                                                                                         'yolov30_yolooutputv31_conv0_fwd',\r\n                                                                                         'darknetv30_conv0_fwd',\r\n                                                                                         'yolov30_yolooutputv30_conv0_fwd'],\r\n                                                       calib_mode=None, quantized_dtype='uint8',\r\n                                                       logger=logging)\r\nsave_symbol('yolo-int8-symbol.json',qsym)\r\nsave_params('yolo-int8-0000.params',qarg_params,aux_params)\r\n\r\n\r\n#####################################################\r\n--The results are completely different for net(x) and mod.forward(x)--\r\nCheck the output for  : \r\ndata1 = mx.nd.random.randn(1,3,608,608,ctx = ctx[0])\r\nmod = mx.mod.Module.load(\"yolo-int8\",0)\r\nmod.bind(for_training=False, data_shapes=[('data', (1,3,608,608))],\r\n         label_shapes=mod._label_shapes)\r\nmod.load_params('yolo-int8-0000.params')\r\nfrom collections import namedtuple\r\nBatch = namedtuple('Batch', ['data'])\r\nmod.forward(Batch([data1]))\r\nmod.get_outputs()\r\ndata1 = mx.nd.random.randn(1,3,608,608,ctx = ctx[0])\r\nmod.forward(Batch([data1]))\r\nmody.forward(Batch([data1]))\r\n\r\n\r\n\r\n#mody is same as mod but for fp32 yolo which gives same output as net(x) which is expected\r\nnet(data1)[0][0][:5],mod.get_outputs()[0][0][:5],mody.get_outputs()[0][0][:5]\r\n\r\nOUT: \r\n(\r\n [[19.]\r\n  [-1.]\r\n  [-1.]\r\n  [-1.]\r\n  [-1.]]\r\n <NDArray 5x1 @gpu(0)>, \r\n [[-1.]\r\n  [-1.]\r\n  [-1.]\r\n  [-1.]\r\n  [-1.]]\r\n <NDArray 5x1 @cpu(0)>, \r\n [[19.]\r\n  [-1.]\r\n  [-1.]\r\n  [-1.]\r\n  [-1.]]\r\n <NDArray 5x1 @cpu(0)>)\r\n\r\n-------------------------------------------\r\nQuantized model always gives -1s in classes. Also, is there any source where i can learn on how to convert this manually ? (sick of waiting for small number of devs working on this and also if there is any slack channel please add me i work at Amazon and have so many issues with mxnet/onnx/quantization/tensorrt/...)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1044", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1044/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1044/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1044/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1044", "id": 523778269, "node_id": "MDU6SXNzdWU1MjM3NzgyNjk=", "number": 1044, "title": "Is TSN implemented in ActionRecInceptionV3 ?", "user": {"login": "wmlba", "id": 18373707, "node_id": "MDQ6VXNlcjE4MzczNzA3", "avatar_url": "https://avatars1.githubusercontent.com/u/18373707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wmlba", "html_url": "https://github.com/wmlba", "followers_url": "https://api.github.com/users/wmlba/followers", "following_url": "https://api.github.com/users/wmlba/following{/other_user}", "gists_url": "https://api.github.com/users/wmlba/gists{/gist_id}", "starred_url": "https://api.github.com/users/wmlba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wmlba/subscriptions", "organizations_url": "https://api.github.com/users/wmlba/orgs", "repos_url": "https://api.github.com/users/wmlba/repos", "events_url": "https://api.github.com/users/wmlba/events{/privacy}", "received_events_url": "https://api.github.com/users/wmlba/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-16T02:44:48Z", "updated_at": "2019-11-18T22:43:56Z", "closed_at": "2019-11-18T22:43:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n     The use of TSN network is False by default and I cannot see anywhere where you pass the variable use_tsn. Is the TSN network implemented?\r\n\r\nIf so, how can I specify modality when training on my own dataset?\r\n\r\nRegards,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1037", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1037/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1037/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1037/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1037", "id": 521387620, "node_id": "MDU6SXNzdWU1MjEzODc2MjA=", "number": 1037, "title": "The accuracy of i3d_resnet50_v1_ucf101 trained on Imagenet and K400", "user": {"login": "chenyihang1993", "id": 31203698, "node_id": "MDQ6VXNlcjMxMjAzNjk4", "avatar_url": "https://avatars1.githubusercontent.com/u/31203698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyihang1993", "html_url": "https://github.com/chenyihang1993", "followers_url": "https://api.github.com/users/chenyihang1993/followers", "following_url": "https://api.github.com/users/chenyihang1993/following{/other_user}", "gists_url": "https://api.github.com/users/chenyihang1993/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyihang1993/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyihang1993/subscriptions", "organizations_url": "https://api.github.com/users/chenyihang1993/orgs", "repos_url": "https://api.github.com/users/chenyihang1993/repos", "events_url": "https://api.github.com/users/chenyihang1993/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyihang1993/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-12T07:58:50Z", "updated_at": "2019-11-22T22:52:58Z", "closed_at": "2019-11-22T22:52:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\uff0c I tested the i3d_resnet50_v1_ucf101 trained on Imagenet and K400 on UCF101\uff0cbut the accuracy is 93.4 while the accuracy posted is 95.4. The command is \r\n```\r\npython3 test_recognizer.py --dataset ucf101 --data-dir /home/cyh/.mxnet/datasets/ucf101/rawframes --val-list /home/cyh/.mxnet/datasets/ucf101/ucfTrainTestlist/ucf101_val_split_1_rawframes.txt --model i3d_resnet50_v1_ucf101 --use-pretrained --num-classes 101 --mode hybrid --dtype float32 --batch-size 4 --num-gpus 1 --num-data-workers 12 --new-height 256 --new-width 340 --new-length 32 --new-step 2 --input-size 224 --log-interval 10\r\n```\r\nPlease tell me how to solve it. THX.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1036", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1036/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1036/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1036/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1036", "id": 520698643, "node_id": "MDU6SXNzdWU1MjA2OTg2NDM=", "number": 1036, "title": "cls_pred, box_pred, mask_pred, roi, samples, matches, rpn_score, rpn_box, anchors,  cls_targets, box_targets, box_masks, indices = net(data, gt_box, gt_label)", "user": {"login": "wb315", "id": 39976683, "node_id": "MDQ6VXNlcjM5OTc2Njgz", "avatar_url": "https://avatars2.githubusercontent.com/u/39976683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wb315", "html_url": "https://github.com/wb315", "followers_url": "https://api.github.com/users/wb315/followers", "following_url": "https://api.github.com/users/wb315/following{/other_user}", "gists_url": "https://api.github.com/users/wb315/gists{/gist_id}", "starred_url": "https://api.github.com/users/wb315/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wb315/subscriptions", "organizations_url": "https://api.github.com/users/wb315/orgs", "repos_url": "https://api.github.com/users/wb315/repos", "events_url": "https://api.github.com/users/wb315/events{/privacy}", "received_events_url": "https://api.github.com/users/wb315/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-11T01:58:28Z", "updated_at": "2019-11-11T02:55:47Z", "closed_at": "2019-11-11T02:55:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "there is 4 need, and give 5 error", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1032", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1032/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1032/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1032/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1032", "id": 519130914, "node_id": "MDU6SXNzdWU1MTkxMzA5MTQ=", "number": 1032, "title": "NMS code question", "user": {"login": "Edwardmark", "id": 15247551, "node_id": "MDQ6VXNlcjE1MjQ3NTUx", "avatar_url": "https://avatars1.githubusercontent.com/u/15247551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edwardmark", "html_url": "https://github.com/Edwardmark", "followers_url": "https://api.github.com/users/Edwardmark/followers", "following_url": "https://api.github.com/users/Edwardmark/following{/other_user}", "gists_url": "https://api.github.com/users/Edwardmark/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edwardmark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edwardmark/subscriptions", "organizations_url": "https://api.github.com/users/Edwardmark/orgs", "repos_url": "https://api.github.com/users/Edwardmark/repos", "events_url": "https://api.github.com/users/Edwardmark/events{/privacy}", "received_events_url": "https://api.github.com/users/Edwardmark/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-07T09:03:23Z", "updated_at": "2019-12-19T06:49:49Z", "closed_at": "2019-12-19T06:49:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am a fresher of gluon-cv, I want to know how you implement nms in ssd model.\r\nAnyone can tell me where the code is? I see there is a tvm convert tutorials of gluon-cv ssd models which includes nms and post-processing operations which can be converted to tvm model directly, I want to know how it works so as to use it in pytorch detection model to conver to tvm.\r\n\r\nThank you very much.\r\nBest,\r\nEdward", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1031", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1031/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1031/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1031/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1031", "id": 519067695, "node_id": "MDU6SXNzdWU1MTkwNjc2OTU=", "number": 1031, "title": "Transfer Learning on the Gluon model (Urgent!!!!!!!!!!)", "user": {"login": "SirishaRella", "id": 42659275, "node_id": "MDQ6VXNlcjQyNjU5Mjc1", "avatar_url": "https://avatars0.githubusercontent.com/u/42659275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SirishaRella", "html_url": "https://github.com/SirishaRella", "followers_url": "https://api.github.com/users/SirishaRella/followers", "following_url": "https://api.github.com/users/SirishaRella/following{/other_user}", "gists_url": "https://api.github.com/users/SirishaRella/gists{/gist_id}", "starred_url": "https://api.github.com/users/SirishaRella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SirishaRella/subscriptions", "organizations_url": "https://api.github.com/users/SirishaRella/orgs", "repos_url": "https://api.github.com/users/SirishaRella/repos", "events_url": "https://api.github.com/users/SirishaRella/events{/privacy}", "received_events_url": "https://api.github.com/users/SirishaRella/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-07T06:25:47Z", "updated_at": "2019-11-07T20:35:53Z", "closed_at": "2019-11-07T20:35:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nI have trained a model with my own custom dataset in Gluon using faster_rcnn_resnet50_v1b_voc and saved this model with name model_one.params. (model_one has only one class)\r\n\r\nNow, I'm trying to load model_one.params as my pre-trained model and train a different model. However, I'm facing an incompatible shape error. (The new model I'm trying to train has two classes.)\r\n\r\nThe error says as following:\r\n**AssertionError: Failed loading Parameter 'fasterrcnn0_dense0_weight' from saved params: shape incompatible expected (3, 0) vs saved (2, 2048)**\r\n\r\nPlease let me know what can I do at this point in time. Any help will be appreciated\r\n\r\nThank you in advance. \r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1027", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1027/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1027/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1027/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1027", "id": 517351807, "node_id": "MDU6SXNzdWU1MTczNTE4MDc=", "number": 1027, "title": "SE layers are ignored when constructing se_resnets", "user": {"login": "ifeherva", "id": 3716849, "node_id": "MDQ6VXNlcjM3MTY4NDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3716849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ifeherva", "html_url": "https://github.com/ifeherva", "followers_url": "https://api.github.com/users/ifeherva/followers", "following_url": "https://api.github.com/users/ifeherva/following{/other_user}", "gists_url": "https://api.github.com/users/ifeherva/gists{/gist_id}", "starred_url": "https://api.github.com/users/ifeherva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ifeherva/subscriptions", "organizations_url": "https://api.github.com/users/ifeherva/orgs", "repos_url": "https://api.github.com/users/ifeherva/repos", "events_url": "https://api.github.com/users/ifeherva/events{/privacy}", "received_events_url": "https://api.github.com/users/ifeherva/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 848349649, "node_id": "MDU6TGFiZWw4NDgzNDk2NDk=", "url": "https://api.github.com/repos/dmlc/gluon-cv/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-04T19:24:56Z", "updated_at": "2020-01-02T04:10:38Z", "closed_at": "2020-01-02T04:10:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`gluoncv.model_zoo.get_model('se_resnet50_v1')`\r\n\r\nand\r\n\r\n`gluoncv.model_zoo.get_model('resnet50_v1')`\r\n\r\nreturns the same model since the use_se flag is never used. The error is here:\r\n\r\nhttps://github.com/dmlc/gluon-cv/blob/master/gluoncv/model_zoo/resnet.py#L555", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1025", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1025/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1025/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1025/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1025", "id": 516949564, "node_id": "MDU6SXNzdWU1MTY5NDk1NjQ=", "number": 1025, "title": "Issue with image augmentations in SSDDefaultTrainTransform", "user": {"login": "sodadi", "id": 30921712, "node_id": "MDQ6VXNlcjMwOTIxNzEy", "avatar_url": "https://avatars1.githubusercontent.com/u/30921712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sodadi", "html_url": "https://github.com/sodadi", "followers_url": "https://api.github.com/users/sodadi/followers", "following_url": "https://api.github.com/users/sodadi/following{/other_user}", "gists_url": "https://api.github.com/users/sodadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/sodadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sodadi/subscriptions", "organizations_url": "https://api.github.com/users/sodadi/orgs", "repos_url": "https://api.github.com/users/sodadi/repos", "events_url": "https://api.github.com/users/sodadi/events{/privacy}", "received_events_url": "https://api.github.com/users/sodadi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-04T04:00:36Z", "updated_at": "2019-11-05T05:49:49Z", "closed_at": "2019-11-05T05:49:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I saw in the code that SSDDefaultTrainTransform provides various augmentation mechanisms like:\r\nrandom color jitter, random cropping, random flip, etc.\r\n\r\nBut are these applied by default or is there a way to explicitly call these?\r\nI tried introducing some print statements to see if they are applied, but I did not see any changes in the console.\r\n\r\nI am using SSD detection with a custom LST dataset.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1024", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1024/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1024/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1024/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1024", "id": 516795852, "node_id": "MDU6SXNzdWU1MTY3OTU4NTI=", "number": 1024, "title": "An suggestion for gluoncv next version", "user": {"login": "dbsxdbsx", "id": 17372655, "node_id": "MDQ6VXNlcjE3MzcyNjU1", "avatar_url": "https://avatars2.githubusercontent.com/u/17372655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbsxdbsx", "html_url": "https://github.com/dbsxdbsx", "followers_url": "https://api.github.com/users/dbsxdbsx/followers", "following_url": "https://api.github.com/users/dbsxdbsx/following{/other_user}", "gists_url": "https://api.github.com/users/dbsxdbsx/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbsxdbsx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbsxdbsx/subscriptions", "organizations_url": "https://api.github.com/users/dbsxdbsx/orgs", "repos_url": "https://api.github.com/users/dbsxdbsx/repos", "events_url": "https://api.github.com/users/dbsxdbsx/events{/privacy}", "received_events_url": "https://api.github.com/users/dbsxdbsx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-03T09:18:47Z", "updated_at": "2019-11-11T04:40:07Z", "closed_at": "2019-11-11T04:40:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Personally, I pay attention to computer vision, like object detection(OD) and  image caption(IC). According to what I've know about GluonCV, here are some advice:\r\n1.please update OD model, like corner network or center network, if possible, maybe matrix network is better.\r\n2.I hope there would be some models for (single) object tracking,like PySOT, with maskrcnn and so on.\r\n3.I hope there would be a section for IC.\r\n4. sometimes,  a model is anticipated to be not only for OD, but also for IC or other CV tasks.I am not pretty sure, but just come up that maybe there would be something to do to make gluon CV more flexible and more interractive with gluonNLP or other modules.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1021", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1021/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1021/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1021/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1021", "id": 515905013, "node_id": "MDU6SXNzdWU1MTU5MDUwMTM=", "number": 1021, "title": "Does HardSwish cost much more memory than ReLU6?", "user": {"login": "ShoufaChen", "id": 28682908, "node_id": "MDQ6VXNlcjI4NjgyOTA4", "avatar_url": "https://avatars2.githubusercontent.com/u/28682908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShoufaChen", "html_url": "https://github.com/ShoufaChen", "followers_url": "https://api.github.com/users/ShoufaChen/followers", "following_url": "https://api.github.com/users/ShoufaChen/following{/other_user}", "gists_url": "https://api.github.com/users/ShoufaChen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShoufaChen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShoufaChen/subscriptions", "organizations_url": "https://api.github.com/users/ShoufaChen/orgs", "repos_url": "https://api.github.com/users/ShoufaChen/repos", "events_url": "https://api.github.com/users/ShoufaChen/events{/privacy}", "received_events_url": "https://api.github.com/users/ShoufaChen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-01T04:26:52Z", "updated_at": "2019-11-10T14:04:35Z", "closed_at": "2019-11-10T14:04:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just change the `ReLU6()` to `HardSwish()`  based on MobileNetv2. \r\n\r\nThe already wored program (which left almost 1G gpu memory) now out of memory?\r\n\r\nI'm wondering does Does HardSwish cost much more memory than ReLU6 in theory\r\nor\r\nI just have some bug in my code?\r\n\r\n\r\nI also test the `ReLU` relative to the `ReLU6`;  and the  `nn.Activation('relu')` costs 2G memory less than `ReLU6`.   Maybe the implementation of the `ReLU6` of Gluoncv can be improved?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1002", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1002/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1002/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/1002/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/1002", "id": 511746627, "node_id": "MDU6SXNzdWU1MTE3NDY2Mjc=", "number": 1002, "title": "error in official faster rcnn-voc example. hybrid_forward()", "user": {"login": "sodadi", "id": 30921712, "node_id": "MDQ6VXNlcjMwOTIxNzEy", "avatar_url": "https://avatars1.githubusercontent.com/u/30921712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sodadi", "html_url": "https://github.com/sodadi", "followers_url": "https://api.github.com/users/sodadi/followers", "following_url": "https://api.github.com/users/sodadi/following{/other_user}", "gists_url": "https://api.github.com/users/sodadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/sodadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sodadi/subscriptions", "organizations_url": "https://api.github.com/users/sodadi/orgs", "repos_url": "https://api.github.com/users/sodadi/repos", "events_url": "https://api.github.com/users/sodadi/events{/privacy}", "received_events_url": "https://api.github.com/users/sodadi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-10-24T06:58:29Z", "updated_at": "2019-12-20T23:28:47Z", "closed_at": "2019-12-20T23:28:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI am using the https://gluon-cv.mxnet.io/build/examples_detection/demo_faster_rcnn.html script on the voc2007 data.\r\n\r\nafter the data load, I get the following error while the script reads the train_data:\r\n\r\n  _File \"<ipython-input-1-684c53df0030>\", line 1, in <module>\r\n    runfile('C:/IPA/Projects/trademarkDetection/datasetcreation/frcnn/train_faster_rcnn.py', wdir='C:/IPA/Projects/trademarkDetection/datasetcreation/frcnn', post_mortem=True)\r\n\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\spyder_kernels\\customize\\spydercustomize.py\", line 827, in runfile\r\n    execfile(filename, namespace)\r\n\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\spyder_kernels\\customize\\spydercustomize.py\", line 110, in execfile\r\n    exec(compile(f.read(), filename, 'exec'), namespace)\r\n\r\n  File \"C:/IPA/Projects/trademarkDetection/datasetcreation/frcnn/train_faster_rcnn.py\", line 527, in <module>\r\n    train(net, train_data, val_data, eval_metric, batch_size, ctx, args)\r\n\r\n  File \"C:/IPA/Projects/trademarkDetection/datasetcreation/frcnn/train_faster_rcnn.py\", line 429, in train\r\n    executor.put(data)\r\n\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\gluoncv\\utils\\parallel.py\", line 119, in put\r\n    out = self._parallizable.forward_backward(x)\r\n\r\n  File \"C:/IPA/Projects/trademarkDetection/datasetcreation/frcnn/train_faster_rcnn.py\", line 287, in forward_backward\r\n    box_targets, box_masks, _ = net(data, gt_box, gt_label)\r\n\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\mxnet\\gluon\\block.py\", line 540, in __call__\r\n    out = self.forward(*args)\r\n\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\mxnet\\gluon\\block.py\", line 907, in forward\r\n    return self._call_cached_op(x, *args)\r\n\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\mxnet\\gluon\\block.py\", line 797, in _call_cached_op\r\n    self._build_cache(*args)\r\n\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\mxnet\\gluon\\block.py\", line 749, in _build_cache\r\n    data, out = self._get_graph(*args)\r\n\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\mxnet\\gluon\\block.py\", line 741, in _get_graph\r\n    out = self.hybrid_forward(symbol, *grouped_inputs, **params)  # pylint: disable=no-value-for-parameter_\r\n\r\n**TypeError: hybrid_forward() takes from 3 to 4 positional arguments but 5 were given**\r\n\r\n\r\nCan someone help me with this?\r\nmxnet version - mxnet-cu92==1.4.1\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/993", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/993/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/993/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/993/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/993", "id": 508963734, "node_id": "MDU6SXNzdWU1MDg5NjM3MzQ=", "number": 993, "title": "mxnet.base.MXNetError: [17:23:47] src/operator/nn/pooling.cc:190: Check failed: param.kernel[0] <= dshape_nchw[2] + 2 * param.pad[0]: kernel size (8) exceeds input (5 padded to 5)", "user": {"login": "chenyihang1993", "id": 31203698, "node_id": "MDQ6VXNlcjMxMjAzNjk4", "avatar_url": "https://avatars1.githubusercontent.com/u/31203698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyihang1993", "html_url": "https://github.com/chenyihang1993", "followers_url": "https://api.github.com/users/chenyihang1993/followers", "following_url": "https://api.github.com/users/chenyihang1993/following{/other_user}", "gists_url": "https://api.github.com/users/chenyihang1993/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyihang1993/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyihang1993/subscriptions", "organizations_url": "https://api.github.com/users/chenyihang1993/orgs", "repos_url": "https://api.github.com/users/chenyihang1993/repos", "events_url": "https://api.github.com/users/chenyihang1993/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyihang1993/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bryanyzhu", "id": 16021460, "node_id": "MDQ6VXNlcjE2MDIxNDYw", "avatar_url": "https://avatars2.githubusercontent.com/u/16021460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryanyzhu", "html_url": "https://github.com/bryanyzhu", "followers_url": "https://api.github.com/users/bryanyzhu/followers", "following_url": "https://api.github.com/users/bryanyzhu/following{/other_user}", "gists_url": "https://api.github.com/users/bryanyzhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryanyzhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryanyzhu/subscriptions", "organizations_url": "https://api.github.com/users/bryanyzhu/orgs", "repos_url": "https://api.github.com/users/bryanyzhu/repos", "events_url": "https://api.github.com/users/bryanyzhu/events{/privacy}", "received_events_url": "https://api.github.com/users/bryanyzhu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bryanyzhu", "id": 16021460, "node_id": "MDQ6VXNlcjE2MDIxNDYw", "avatar_url": "https://avatars2.githubusercontent.com/u/16021460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryanyzhu", "html_url": "https://github.com/bryanyzhu", "followers_url": "https://api.github.com/users/bryanyzhu/followers", "following_url": "https://api.github.com/users/bryanyzhu/following{/other_user}", "gists_url": "https://api.github.com/users/bryanyzhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryanyzhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryanyzhu/subscriptions", "organizations_url": "https://api.github.com/users/bryanyzhu/orgs", "repos_url": "https://api.github.com/users/bryanyzhu/repos", "events_url": "https://api.github.com/users/bryanyzhu/events{/privacy}", "received_events_url": "https://api.github.com/users/bryanyzhu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2019-10-18T09:30:16Z", "updated_at": "2019-10-30T03:48:39Z", "closed_at": "2019-10-30T03:48:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I run the command ```python ./scripts/action-recognition/test_recognizer.py --model inceptionv3_kinetics400 --dataset kinetics400 --num-classes 400```, raise the error:\r\n```\r\n/home/cyh/miniconda3/envs/python36/bin/python /home/cyh/git/gluon-cv/scripts/action-recognition/test_recognizer.py --model inceptionv3_kinetics400\r\nNamespace(batch_norm=False, batch_size=32, crop_ratio=0.875, data_dir='/home/cyh/.mxnet/datasets/ucf101/rawframes', dataset='ucf101', dtype='float32', eval=False, hard_weight=0.5, input_5d=False, input_size=224, label_smoothing=False, last_gamma=False, log_interval=50, logging_file='train.log', lr=0.1, lr_decay=0.1, lr_decay_epoch='40,60', lr_decay_period=0, lr_mode='step', mixup=False, mixup_alpha=0.2, mixup_off_epoch=0, mode=None, model='inceptionv3_kinetics400', momentum=0.9, new_height=256, new_length=1, new_step=1, new_width=340, no_wd=False, num_classes=101, num_epochs=3, num_gpus=0, num_segments=1, num_workers=4, prefetch_ratio=2.0, resume_epoch=0, resume_params='', resume_states='', save_dir='params', save_frequency=10, teacher=None, temperature=20, ten_crop=False, three_crop=False, train_list='/home/cyh/.mxnet/datasets/ucf101/ucfTrainTestlist/ucf101_train_rgb_split1.txt', use_amp=False, use_decord=False, use_gn=False, use_pretrained=False, use_se=False, use_softmax=False, use_tsn=False, val_data_dir='/home/cyh/.mxnet/datasets/ucf101/rawframes', val_list='/home/cyh/.mxnet/datasets/ucf101/ucfTrainTestlist/ucf101_val_split_1_rawframes.txt', video_loader=False, warmup_epochs=0, warmup_lr=0.0, wd=0.0001)\r\nTotal batch size is set to 32 on 0 GPUs\r\nPre-trained model is successfully loaded from the model zoo.\r\nLoad 3782 test samples in 118 iterations.\r\nTraceback (most recent call last):\r\n  File \"/home/cyh/git/gluon-cv/scripts/action-recognition/test_recognizer.py\", line 253, in <module>\r\n    main()\r\n  File \"/home/cyh/git/gluon-cv/scripts/action-recognition/test_recognizer.py\", line 246, in main\r\n    acc_top1_val, acc_top5_val = test(context, val_data, opt, net)\r\n  File \"/home/cyh/git/gluon-cv/scripts/action-recognition/test_recognizer.py\", line 157, in test\r\n    pred = net(X.astype(opt.dtype, copy=False))\r\n  File \"/home/cyh/miniconda3/envs/python36/lib/python3.6/site-packages/mxnet/gluon/block.py\", line 548, in __call__\r\n    out = self.forward(*args)\r\n  File \"/home/cyh/miniconda3/envs/python36/lib/python3.6/site-packages/mxnet/gluon/block.py\", line 925, in forward\r\n    return self.hybrid_forward(ndarray, x, *args, **params)\r\n  File \"/home/cyh/git/gluon-cv/gluoncv/model_zoo/action_recognition/inceptionv3_kinetics400.py\", line 52, in hybrid_forward\r\n    x = self.features(x)\r\n  File \"/home/cyh/miniconda3/envs/python36/lib/python3.6/site-packages/mxnet/gluon/block.py\", line 548, in __call__\r\n    out = self.forward(*args)\r\n  File \"/home/cyh/miniconda3/envs/python36/lib/python3.6/site-packages/mxnet/gluon/block.py\", line 925, in forward\r\n    return self.hybrid_forward(ndarray, x, *args, **params)\r\n  File \"/home/cyh/miniconda3/envs/python36/lib/python3.6/site-packages/mxnet/gluon/nn/basic_layers.py\", line 117, in hybrid_forward\r\n    x = block(x)\r\n  File \"/home/cyh/miniconda3/envs/python36/lib/python3.6/site-packages/mxnet/gluon/block.py\", line 548, in __call__\r\n    out = self.forward(*args)\r\n  File \"/home/cyh/miniconda3/envs/python36/lib/python3.6/site-packages/mxnet/gluon/block.py\", line 925, in forward\r\n    return self.hybrid_forward(ndarray, x, *args, **params)\r\n  File \"/home/cyh/miniconda3/envs/python36/lib/python3.6/site-packages/mxnet/gluon/nn/conv_layers.py\", line 696, in hybrid_forward\r\n    return F.Pooling(x, name='fwd', **self._kwargs)\r\n  File \"<string>\", line 127, in Pooling\r\n  File \"/home/cyh/miniconda3/envs/python36/lib/python3.6/site-packages/mxnet/_ctypes/ndarray.py\", line 92, in _imperative_invoke\r\n    ctypes.byref(out_stypes)))\r\n  File \"/home/cyh/miniconda3/envs/python36/lib/python3.6/site-packages/mxnet/base.py\", line 253, in check_call\r\n    raise MXNetError(py_str(_LIB.MXGetLastError()))\r\nmxnet.base.MXNetError: [17:23:47] src/operator/nn/pooling.cc:190: Check failed: param.kernel[0] <= dshape_nchw[2] + 2 * param.pad[0]: kernel size (8) exceeds input (5 padded to 5)\r\nStack trace:\r\n  [bt] (0) /home/cyh/miniconda3/envs/python36/lib/python3.6/site-packages/mxnet/libmxnet.so(+0x4b03ab) [0x7fd4759b53ab]\r\n  [bt] (1) /home/cyh/miniconda3/envs/python36/lib/python3.6/site-packages/mxnet/libmxnet.so(+0xa78b8b) [0x7fd475f7db8b]\r\n  [bt] (2) /home/cyh/miniconda3/envs/python36/lib/python3.6/site-packages/mxnet/libmxnet.so(mxnet::imperative::SetShapeType(mxnet::Context const&, nnvm::NodeAttrs const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, mxnet::DispatchMode*)+0x1fb1) [0x7fd477b680d1]\r\n  [bt] (3) /home/cyh/miniconda3/envs/python36/lib/python3.6/site-packages/mxnet/libmxnet.so(mxnet::Imperative::Invoke(mxnet::Context const&, nnvm::NodeAttrs const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&)+0x1db) [0x7fd477b714ab]\r\n  [bt] (4) /home/cyh/miniconda3/envs/python36/lib/python3.6/site-packages/mxnet/libmxnet.so(+0x25652f9) [0x7fd477a6a2f9]\r\n  [bt] (5) /home/cyh/miniconda3/envs/python36/lib/python3.6/site-packages/mxnet/libmxnet.so(MXImperativeInvokeEx+0x6f) [0x7fd477a6a8ef]\r\n  [bt] (6) /home/cyh/miniconda3/envs/python36/lib/python3.6/lib-dynload/../../libffi.so.6(ffi_call_unix64+0x4c) [0x7fd4a53baec0]\r\n  [bt] (7) /home/cyh/miniconda3/envs/python36/lib/python3.6/lib-dynload/../../libffi.so.6(ffi_call+0x22d) [0x7fd4a53ba87d]\r\n  [bt] (8) /home/cyh/miniconda3/envs/python36/lib/python3.6/lib-dynload/_ctypes.cpython-36m-x86_64-linux-gnu.so(_ctypes_callproc+0x2ce) [0x7fd4a5861e4e]\r\n```\r\nPlease tell me how to solve it. THX", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/990", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/990/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/990/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/990/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/990", "id": 508792498, "node_id": "MDU6SXNzdWU1MDg3OTI0OTg=", "number": 990, "title": "Segfault in running eval.py for simple_pose", "user": {"login": "velociraptor111", "id": 19272937, "node_id": "MDQ6VXNlcjE5MjcyOTM3", "avatar_url": "https://avatars2.githubusercontent.com/u/19272937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/velociraptor111", "html_url": "https://github.com/velociraptor111", "followers_url": "https://api.github.com/users/velociraptor111/followers", "following_url": "https://api.github.com/users/velociraptor111/following{/other_user}", "gists_url": "https://api.github.com/users/velociraptor111/gists{/gist_id}", "starred_url": "https://api.github.com/users/velociraptor111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/velociraptor111/subscriptions", "organizations_url": "https://api.github.com/users/velociraptor111/orgs", "repos_url": "https://api.github.com/users/velociraptor111/repos", "events_url": "https://api.github.com/users/velociraptor111/events{/privacy}", "received_events_url": "https://api.github.com/users/velociraptor111/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-18T00:48:15Z", "updated_at": "2019-10-18T01:54:47Z", "closed_at": "2019-10-18T01:54:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is the command. \r\nI am running on CPU\r\n```bash\r\npython validate.py \\\r\n    --model simple_pose_resnet50_v1d --num-joints 17 \\\r\n    --batch-size 1 --num-gpus 0 -j 60\r\n```\r\n\r\nHere is the full output\r\n```\r\nloading annotations into memory...\r\nDone (t=0.52s)\r\ncreating index...\r\nindex created!\r\n  0%|                                                                                                                                                                                                                                       | 0/6352 [00:00<?, ?it/s]\r\nSegmentation fault: 11\r\n\r\nStack trace:\r\n  [bt] (0) 1   libmxnet.so                         0x0000000117fbd2b0 mxnet::Storage::Get() + 4880\r\n  [bt] (1) 2   libsystem_platform.dylib            0x00007fff70c58b5d _sigtramp + 29\r\n  [bt] (2) 3   ???                                 0x0000fff70000fff6 0x0 + 281436322070518\r\n  [bt] (3) 4   libmxnet.so                         0x00000001182f8751 mxnet::Storage::Get() + 3393457\r\n  [bt] (4) 5   libmxnet.so                         0x0000000118195dd5 mxnet::Storage::Get() + 1941045\r\n  [bt] (5) 6   libmxnet.so                         0x0000000118196dba mxnet::Storage::Get() + 1945114\r\n  [bt] (6) 7   libmxnet.so                         0x000000011817d99f mxnet::Storage::Get() + 1841663\r\n  [bt] (7) 8   libmxnet.so                         0x000000011791de61 mxnet::io::ImdecodeImpl(int, bool, void*, unsigned long, mxnet::NDArray*) + 3073\r\n  [bt] (8) 9   libmxnet.so                         0x000000011787b6c7 std::__1::enable_if<(__is_forward_iterator<mxnet::NDArray**>::value) && (is_constructible<mxnet::NDArray*, std::__1::iterator_traits<mxnet::NDArray**>::reference>::value), void>::type std::__1::vector<mxnet::NDArray*, std::__1::allocator<mxnet::NDArray*> >::assign<mxnet::NDArray**>(mxnet::NDArray**, mxnet::NDArray**) + 30295\r\nlibc++abi.dylib: terminating\r\n\r\nSegmentation fault: 11\r\n```\r\n\r\nSeems like the error is originating from here:\r\n```python\r\nfor batch in tqdm(val_data):\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/985", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/985/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/985/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/985/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/985", "id": 507615549, "node_id": "MDU6SXNzdWU1MDc2MTU1NDk=", "number": 985, "title": "How to transfer learning with maskrcnn", "user": {"login": "dont32", "id": 23291353, "node_id": "MDQ6VXNlcjIzMjkxMzUz", "avatar_url": "https://avatars0.githubusercontent.com/u/23291353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dont32", "html_url": "https://github.com/dont32", "followers_url": "https://api.github.com/users/dont32/followers", "following_url": "https://api.github.com/users/dont32/following{/other_user}", "gists_url": "https://api.github.com/users/dont32/gists{/gist_id}", "starred_url": "https://api.github.com/users/dont32/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dont32/subscriptions", "organizations_url": "https://api.github.com/users/dont32/orgs", "repos_url": "https://api.github.com/users/dont32/repos", "events_url": "https://api.github.com/users/dont32/events{/privacy}", "received_events_url": "https://api.github.com/users/dont32/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-10-16T05:02:16Z", "updated_at": "2019-11-29T02:14:35Z", "closed_at": "2019-11-29T02:14:35Z", "author_association": "NONE", "active_lock_reason": null, "body": " I used file train_mask_rcnn.py and change in instance.py for load custom dataset but program alway stop in next_data_batch = next(train_data_iter). Not have anny error in terminal", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dmlc/gluon-cv/issues/982", "repository_url": "https://api.github.com/repos/dmlc/gluon-cv", "labels_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/982/labels{/name}", "comments_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/982/comments", "events_url": "https://api.github.com/repos/dmlc/gluon-cv/issues/982/events", "html_url": "https://github.com/dmlc/gluon-cv/issues/982", "id": 506142027, "node_id": "MDU6SXNzdWU1MDYxNDIwMjc=", "number": 982, "title": "how to export my own mobilenet1.0", "user": {"login": "ou525", "id": 23331359, "node_id": "MDQ6VXNlcjIzMzMxMzU5", "avatar_url": "https://avatars1.githubusercontent.com/u/23331359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ou525", "html_url": "https://github.com/ou525", "followers_url": "https://api.github.com/users/ou525/followers", "following_url": "https://api.github.com/users/ou525/following{/other_user}", "gists_url": "https://api.github.com/users/ou525/gists{/gist_id}", "starred_url": "https://api.github.com/users/ou525/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ou525/subscriptions", "organizations_url": "https://api.github.com/users/ou525/orgs", "repos_url": "https://api.github.com/users/ou525/repos", "events_url": "https://api.github.com/users/ou525/events{/privacy}", "received_events_url": "https://api.github.com/users/ou525/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-10-12T06:37:53Z", "updated_at": "2019-10-15T01:21:24Z", "closed_at": "2019-10-14T06:37:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "i train my own data using train_imagenet.py. but i donot how to export the model to mxnet.\r\ni try\uff1a\r\n\r\nimport gluoncv as gcv\r\nfrom gluoncv.utils import export_block\r\n\r\nnet = gcv.model_zoo.get_model('mobilenet1.0', pretrained=True)\r\nnet.load_parameters('./0.0877-imagenet-mobilenet1.0-88-best.params')\r\nexport_block('mobilenet1.0', net, preprocess=True, layout='HWC')\r\nprint('Done.')\r\nBut there was an error, how can I solve it?\r\n\r\nerror: \r\nTraceback (most recent call last):\r\n  File \"export_class.py\", line 5, in <module>\r\n    net.load_parameters('/home/ou/workplace/tmp_model/0.0877-imagenet-mobilenet1.0-88-best.params')\r\n  File \"/usr/local/lib/python2.7/dist-packages/mxnet/gluon/block.py\", line 410, in load_parameters\r\n    params[name]._load_init(loaded[name], ctx, cast_dtype=cast_dtype, dtype_source=dtype_source)\r\n  File \"/usr/local/lib/python2.7/dist-packages/mxnet/gluon/parameter.py\", line 279, in _load_init\r\n    self.name, str(self.shape), str(data.shape))\r\nAssertionError: Failed loading Parameter 'mobilenet0_dense0_weight' from saved params: shape incompatible expected (1000, 1024) vs saved (5, 1024)\r\n", "performed_via_github_app": null, "score": 1.0}]}