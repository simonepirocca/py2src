{"total_count": 21, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/51", "repository_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator", "labels_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/51/comments", "events_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/51/events", "html_url": "https://github.com/bxparks/bigquery-schema-generator/issues/51", "id": 656252602, "node_id": "MDU6SXNzdWU2NTYyNTI2MDI=", "number": 51, "title": "Loading GCP stackdriver logs into BQ", "user": {"login": "coffeecoco", "id": 1858146, "node_id": "MDQ6VXNlcjE4NTgxNDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1858146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coffeecoco", "html_url": "https://github.com/coffeecoco", "followers_url": "https://api.github.com/users/coffeecoco/followers", "following_url": "https://api.github.com/users/coffeecoco/following{/other_user}", "gists_url": "https://api.github.com/users/coffeecoco/gists{/gist_id}", "starred_url": "https://api.github.com/users/coffeecoco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coffeecoco/subscriptions", "organizations_url": "https://api.github.com/users/coffeecoco/orgs", "repos_url": "https://api.github.com/users/coffeecoco/repos", "events_url": "https://api.github.com/users/coffeecoco/events{/privacy}", "received_events_url": "https://api.github.com/users/coffeecoco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-14T01:17:23Z", "updated_at": "2020-07-16T05:21:30Z", "closed_at": "2020-07-15T05:24:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Schema nested too deeply for field \r\n\r\nprotoPayload.request.spec.validation.openAPIV3Schema.properties.spec.properties.match.properties.kinds.items.properties.apiGroups.items, maximum allowed depth is 15.\r\n\r\n  \"logName\": \"projects/xxxxxxxxxxxxx/logs/cloudaudit.googleapis.com%2Fdata_access\",\r\n  \"type\": \"k8s_cluster\"\r\n\r\nNeed a way to possibly handle this ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/49", "repository_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator", "labels_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/49/comments", "events_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/49/events", "html_url": "https://github.com/bxparks/bigquery-schema-generator/issues/49", "id": 647544568, "node_id": "MDU6SXNzdWU2NDc1NDQ1Njg=", "number": 49, "title": "Skip bad records instead of throwing an exception?", "user": {"login": "VictorLeP", "id": 6874341, "node_id": "MDQ6VXNlcjY4NzQzNDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/6874341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VictorLeP", "html_url": "https://github.com/VictorLeP", "followers_url": "https://api.github.com/users/VictorLeP/followers", "following_url": "https://api.github.com/users/VictorLeP/following{/other_user}", "gists_url": "https://api.github.com/users/VictorLeP/gists{/gist_id}", "starred_url": "https://api.github.com/users/VictorLeP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VictorLeP/subscriptions", "organizations_url": "https://api.github.com/users/VictorLeP/orgs", "repos_url": "https://api.github.com/users/VictorLeP/repos", "events_url": "https://api.github.com/users/VictorLeP/events{/privacy}", "received_events_url": "https://api.github.com/users/VictorLeP/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-06-29T17:26:42Z", "updated_at": "2020-07-04T08:37:18Z", "closed_at": "2020-07-03T02:43:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a newline delimited JSON file with a few bad (i.e. undecodable) lines. Currently this results in a `JSONDecodeError` halting execution. \r\nGiven that BigQuery can cope with bad records (`--max_bad_records` parameter) by skipping them, would it be useful to have a similar option in the schema generator? (This could be useful for e.g. CSV files with missing trailing columns as well.)\r\nConcretely, the issue with my JSON file could be resolved by adding an (optional) try/except to https://github.com/bxparks/bigquery-schema-generator/blob/a60c38a7208e16fcf0c38ed57fd44d64b0ac030a/bigquery_schema_generator/generate_schema.py#L546-L552", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/48", "repository_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator", "labels_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/48/comments", "events_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/48/events", "html_url": "https://github.com/bxparks/bigquery-schema-generator/issues/48", "id": 632057154, "node_id": "MDU6SXNzdWU2MzIwNTcxNTQ=", "number": 48, "title": "Ignoring non-RECORD field with mismatched mode: - error", "user": {"login": "IAmBotmaker", "id": 39246583, "node_id": "MDQ6VXNlcjM5MjQ2NTgz", "avatar_url": "https://avatars1.githubusercontent.com/u/39246583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IAmBotmaker", "html_url": "https://github.com/IAmBotmaker", "followers_url": "https://api.github.com/users/IAmBotmaker/followers", "following_url": "https://api.github.com/users/IAmBotmaker/following{/other_user}", "gists_url": "https://api.github.com/users/IAmBotmaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/IAmBotmaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IAmBotmaker/subscriptions", "organizations_url": "https://api.github.com/users/IAmBotmaker/orgs", "repos_url": "https://api.github.com/users/IAmBotmaker/repos", "events_url": "https://api.github.com/users/IAmBotmaker/events{/privacy}", "received_events_url": "https://api.github.com/users/IAmBotmaker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-05T23:33:39Z", "updated_at": "2020-06-10T03:39:28Z", "closed_at": "2020-06-10T03:39:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, when trying to recreate the example (using Ubuntu and venv)\r\nI have the following problems\r\n\r\nuser@DESKTOP:/mnt/c/X/venv_dir$ cat > file.data.json\r\n{ \"a\": [1, 2] }\r\n{ \"i\": 3 }\r\nCtrl-D\r\nuser@DESKTOP:/mnt/c/X/venv_dir$ generate-schema < file.data.json > file.schema.json\r\nTraceback (most recent call last):\r\n  File \"/home/user/.local/bin/generate-schema\", line 7, in <module>\r\n    from bigquery_schema_generator.generate_schema import main\r\n  File \"/home/user/.local/lib/python3.5/site-packages/bigquery_schema_generator/generate_schema.py\", line 303\r\n    f'Ignoring non-RECORD field with mismatched mode: '\r\n                                                      ^\r\nSyntaxError: invalid syntax\r\n\r\nWhat might be wrong with this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/47", "repository_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator", "labels_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/47/comments", "events_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/47/events", "html_url": "https://github.com/bxparks/bigquery-schema-generator/issues/47", "id": 609334099, "node_id": "MDU6SXNzdWU2MDkzMzQwOTk=", "number": 47, "title": "Allow option to pass in iterable of dictionaries when used as a library", "user": {"login": "abroglesc", "id": 26876482, "node_id": "MDQ6VXNlcjI2ODc2NDgy", "avatar_url": "https://avatars0.githubusercontent.com/u/26876482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abroglesc", "html_url": "https://github.com/abroglesc", "followers_url": "https://api.github.com/users/abroglesc/followers", "following_url": "https://api.github.com/users/abroglesc/following{/other_user}", "gists_url": "https://api.github.com/users/abroglesc/gists{/gist_id}", "starred_url": "https://api.github.com/users/abroglesc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abroglesc/subscriptions", "organizations_url": "https://api.github.com/users/abroglesc/orgs", "repos_url": "https://api.github.com/users/abroglesc/repos", "events_url": "https://api.github.com/users/abroglesc/events{/privacy}", "received_events_url": "https://api.github.com/users/abroglesc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-29T20:23:09Z", "updated_at": "2020-06-06T00:08:19Z", "closed_at": "2020-06-06T00:08:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Right now if I wanted to generate the schema of a list of dictionaries I would need to first convert each dictionary into a JSON string just so that it could be loaded back into a dictionary and yielded in the json_reader. When using this as a library this would be a useful feature.\r\n\r\nI am happy to create a PR for this if you would like but wanted to propose and make sure you are onboard with it before sending the PR @bxparks \r\n\r\nLet me know if I should continue with a PR that includes some added tests for it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/46", "repository_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator", "labels_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/46/comments", "events_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/46/events", "html_url": "https://github.com/bxparks/bigquery-schema-generator/issues/46", "id": 599042962, "node_id": "MDU6SXNzdWU1OTkwNDI5NjI=", "number": 46, "title": "Dates which are not in ISO format...", "user": {"login": "rajib76", "id": 16340036, "node_id": "MDQ6VXNlcjE2MzQwMDM2", "avatar_url": "https://avatars1.githubusercontent.com/u/16340036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rajib76", "html_url": "https://github.com/rajib76", "followers_url": "https://api.github.com/users/rajib76/followers", "following_url": "https://api.github.com/users/rajib76/following{/other_user}", "gists_url": "https://api.github.com/users/rajib76/gists{/gist_id}", "starred_url": "https://api.github.com/users/rajib76/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rajib76/subscriptions", "organizations_url": "https://api.github.com/users/rajib76/orgs", "repos_url": "https://api.github.com/users/rajib76/repos", "events_url": "https://api.github.com/users/rajib76/events{/privacy}", "received_events_url": "https://api.github.com/users/rajib76/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-04-13T18:08:29Z", "updated_at": "2020-04-13T20:32:33Z", "closed_at": "2020-04-13T20:17:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\nCurrently the code identifies a date/timestamp field only if it is in ISO format. Is it possible to add a feature to identify dates/timestamp in any format. I can work on this if required.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/43", "repository_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator", "labels_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/43/comments", "events_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/43/events", "html_url": "https://github.com/bxparks/bigquery-schema-generator/issues/43", "id": 593836762, "node_id": "MDU6SXNzdWU1OTM4MzY3NjI=", "number": 43, "title": "recursive name sanitization of records of type RECORD fails", "user": {"login": "riccardomc", "id": 3062042, "node_id": "MDQ6VXNlcjMwNjIwNDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3062042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/riccardomc", "html_url": "https://github.com/riccardomc", "followers_url": "https://api.github.com/users/riccardomc/followers", "following_url": "https://api.github.com/users/riccardomc/following{/other_user}", "gists_url": "https://api.github.com/users/riccardomc/gists{/gist_id}", "starred_url": "https://api.github.com/users/riccardomc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/riccardomc/subscriptions", "organizations_url": "https://api.github.com/users/riccardomc/orgs", "repos_url": "https://api.github.com/users/riccardomc/repos", "events_url": "https://api.github.com/users/riccardomc/events{/privacy}", "received_events_url": "https://api.github.com/users/riccardomc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-04T12:45:46Z", "updated_at": "2020-04-04T19:36:51Z", "closed_at": "2020-04-04T19:36:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Names in `RECORD` fields are not sanitized. I reproduced the issue consistently by introducing the following test data:\r\n\r\n```\r\n# Sanitize the names to comply with BigQuery, recursively.\r\nDATA sanitize_names\r\n{ \"r\" : { \"a-name\": [1, 2] } }\r\nSCHEMA\r\n[\r\n  {\r\n    \"fields\": [\r\n      {\r\n        \"mode\": \"REPEATED\",\r\n        \"name\": \"a_name\",\r\n        \"type\": \"INTEGER\"\r\n      }\r\n    ],\r\n    \"mode\": \"NULLABLE\",\r\n    \"name\": \"r\",\r\n    \"type\": \"RECORD\"\r\n  }\r\n]\r\nEND\r\n```\r\n\r\nWhich results in the following failure:\r\n```\r\n======================================================================\r\nFAIL: test (__main__.TestFromDataFile)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"./tests/test_generate_schema.py\", line 423, in test\r\n    self.verify_data_chunk(chunk_count, chunk)\r\n  File \"./tests/test_generate_schema.py\", line 450, in verify_data_chunk\r\n    self.assertEqual(expected, schema)\r\nAssertionError: Lists differ: [Orde[62 chars]', 'a_name'), ('type', 'INTEGER')])]), ('mode'[46 chars]')])] != [Orde[62 chars]', 'a-name'), ('type', 'INTEGER')])]), ('mode'[46 chars]')])]\r\n\r\nFirst differing element 0:\r\nOrder[61 chars]', 'a_name'), ('type', 'INTEGER')])]), ('mode'[45 chars]D')])\r\nOrder[61 chars]', 'a-name'), ('type', 'INTEGER')])]), ('mode'[45 chars]D')])\r\n\r\n  [OrderedDict([('fields',\r\n                 [OrderedDict([('mode', 'REPEATED'),\r\n-                              ('name', 'a_name'),\r\n?                                         ^\r\n\r\n+                              ('name', 'a-name'),\r\n?                                         ^\r\n\r\n                               ('type', 'INTEGER')])]),\r\n                ('mode', 'NULLABLE'),\r\n                ('name', 'r'),\r\n                ('type', 'RECORD')])]\r\n\r\n----------------------------------------------------------------------\r\nRan 14 tests in 0.006s\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/42", "repository_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator", "labels_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/42/comments", "events_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/42/events", "html_url": "https://github.com/bxparks/bigquery-schema-generator/issues/42", "id": 591247557, "node_id": "MDU6SXNzdWU1OTEyNDc1NTc=", "number": 42, "title": "Quick note to say thanks!", "user": {"login": "max-sixty", "id": 5635139, "node_id": "MDQ6VXNlcjU2MzUxMzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/max-sixty", "html_url": "https://github.com/max-sixty", "followers_url": "https://api.github.com/users/max-sixty/followers", "following_url": "https://api.github.com/users/max-sixty/following{/other_user}", "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}", "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions", "organizations_url": "https://api.github.com/users/max-sixty/orgs", "repos_url": "https://api.github.com/users/max-sixty/repos", "events_url": "https://api.github.com/users/max-sixty/events{/privacy}", "received_events_url": "https://api.github.com/users/max-sixty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-31T16:29:32Z", "updated_at": "2020-03-31T19:38:30Z", "closed_at": "2020-03-31T16:29:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "This library saved me a bunch of time. Despite using BQ for a long time I hadn't heard of it until someone referred me on SO. Thanks a lot!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/41", "repository_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator", "labels_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/41/comments", "events_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/41/events", "html_url": "https://github.com/bxparks/bigquery-schema-generator/issues/41", "id": 586017041, "node_id": "MDU6SXNzdWU1ODYwMTcwNDE=", "number": 41, "title": "getting error after running the generate-schema", "user": {"login": "snowlover173", "id": 19501368, "node_id": "MDQ6VXNlcjE5NTAxMzY4", "avatar_url": "https://avatars1.githubusercontent.com/u/19501368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowlover173", "html_url": "https://github.com/snowlover173", "followers_url": "https://api.github.com/users/snowlover173/followers", "following_url": "https://api.github.com/users/snowlover173/following{/other_user}", "gists_url": "https://api.github.com/users/snowlover173/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowlover173/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowlover173/subscriptions", "organizations_url": "https://api.github.com/users/snowlover173/orgs", "repos_url": "https://api.github.com/users/snowlover173/repos", "events_url": "https://api.github.com/users/snowlover173/events{/privacy}", "received_events_url": "https://api.github.com/users/snowlover173/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-23T08:20:05Z", "updated_at": "2020-03-26T03:28:43Z", "closed_at": "2020-03-26T03:28:43Z", "author_association": "NONE", "active_lock_reason": null, "body": ">generate-schema file2.data.json file.schema.json\r\nusage: generate-schema [-h] [--input_format INPUT_FORMAT] [--keep_nulls]\r\n                       [--quoted_values_are_strings] [--infer_mode]\r\n                       [--debugging_interval DEBUGGING_INTERVAL]\r\n                       [--debugging_map] [--sanitize_names]\r\ngenerate-schema: error: unrecognized arguments: file2.data.json file.schema.json\r\n\r\nI have tried linux and mac both and get the same error. the file2.data.json has only one json object. but basically it gives error on the args.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/39", "repository_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator", "labels_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/39/comments", "events_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/39/events", "html_url": "https://github.com/bxparks/bigquery-schema-generator/issues/39", "id": 497086752, "node_id": "MDU6SXNzdWU0OTcwODY3NTI=", "number": 39, "title": "Can the schema generation tool suppress case insensitive duplicates that are not accepted by bigquery?", "user": {"login": "deepakmalpote", "id": 18697739, "node_id": "MDQ6VXNlcjE4Njk3NzM5", "avatar_url": "https://avatars2.githubusercontent.com/u/18697739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deepakmalpote", "html_url": "https://github.com/deepakmalpote", "followers_url": "https://api.github.com/users/deepakmalpote/followers", "following_url": "https://api.github.com/users/deepakmalpote/following{/other_user}", "gists_url": "https://api.github.com/users/deepakmalpote/gists{/gist_id}", "starred_url": "https://api.github.com/users/deepakmalpote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deepakmalpote/subscriptions", "organizations_url": "https://api.github.com/users/deepakmalpote/orgs", "repos_url": "https://api.github.com/users/deepakmalpote/repos", "events_url": "https://api.github.com/users/deepakmalpote/events{/privacy}", "received_events_url": "https://api.github.com/users/deepakmalpote/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-23T13:07:02Z", "updated_at": "2019-10-16T16:22:05Z", "closed_at": "2019-10-16T16:22:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n\r\nI have been trying to export asset metadata to GCS. The idea is to export the asset metadata generated into bigquery and then visualize in Data Studio.\r\n\r\nHowever whenever I use the cloud asset API (either using curl or 'gcloud asset export' command), the generated raw json data file contains two duplicate fields, 'IPProtocol' and 'ipProtocol'.\r\n\r\nDue to this when I try to export this data into bigquery (either by bq mk or bq load command) it gives me follwing error.\r\n\r\n$ bq mk inventory_dataset.2019_09_20_11_00_00 schema.json\r\nBigQuery error in mk operation: Field resource.data.allowed.ipProtocol already exists in schema\r\n\r\nIs this a bug or I am doing anything wrong?\r\n\r\nI am using a bigquery-schema-generator tool for generating schema.(https://pypi.org/project/bigquery-schema-generator/)\r\n\r\nPlease help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/38", "repository_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator", "labels_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/38/comments", "events_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/38/events", "html_url": "https://github.com/bxparks/bigquery-schema-generator/issues/38", "id": 491277791, "node_id": "MDU6SXNzdWU0OTEyNzc3OTE=", "number": 38, "title": "Sudo pip install is discouraged", "user": {"login": "alexwennerberg", "id": 11624958, "node_id": "MDQ6VXNlcjExNjI0OTU4", "avatar_url": "https://avatars1.githubusercontent.com/u/11624958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexwennerberg", "html_url": "https://github.com/alexwennerberg", "followers_url": "https://api.github.com/users/alexwennerberg/followers", "following_url": "https://api.github.com/users/alexwennerberg/following{/other_user}", "gists_url": "https://api.github.com/users/alexwennerberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexwennerberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexwennerberg/subscriptions", "organizations_url": "https://api.github.com/users/alexwennerberg/orgs", "repos_url": "https://api.github.com/users/alexwennerberg/repos", "events_url": "https://api.github.com/users/alexwennerberg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexwennerberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-09T19:18:46Z", "updated_at": "2019-09-09T23:35:43Z", "closed_at": "2019-09-09T20:59:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey -- I love this tool. However, the documentation recommends using sudo to install pip packages, which is discouraged. See this stackoverflow thread: https://stackoverflow.com/questions/21055859/what-are-the-risks-of-running-sudo-pip\r\n\r\nI would recommend altering the instructions to suggest `pip3 install --user`, which allows you to get the command line script outside a virtual environment without requiring you to install as root.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/37", "repository_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator", "labels_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/37/comments", "events_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/37/events", "html_url": "https://github.com/bxparks/bigquery-schema-generator/issues/37", "id": 490762732, "node_id": "MDU6SXNzdWU0OTA3NjI3MzI=", "number": 37, "title": "infer_mode still returns \"REQUIRED\" for json file", "user": {"login": "rconnol", "id": 12263637, "node_id": "MDQ6VXNlcjEyMjYzNjM3", "avatar_url": "https://avatars2.githubusercontent.com/u/12263637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rconnol", "html_url": "https://github.com/rconnol", "followers_url": "https://api.github.com/users/rconnol/followers", "following_url": "https://api.github.com/users/rconnol/following{/other_user}", "gists_url": "https://api.github.com/users/rconnol/gists{/gist_id}", "starred_url": "https://api.github.com/users/rconnol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rconnol/subscriptions", "organizations_url": "https://api.github.com/users/rconnol/orgs", "repos_url": "https://api.github.com/users/rconnol/repos", "events_url": "https://api.github.com/users/rconnol/events{/privacy}", "received_events_url": "https://api.github.com/users/rconnol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-08T14:43:00Z", "updated_at": "2019-10-16T16:16:53Z", "closed_at": "2019-10-16T16:16:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I set infer_mode=False, and after scanning the json file, the resulting schema still had 'REQUIRED' fields instead of the default 'NULLABLE'.\r\n\r\nIs that the expected behavior? Or am I misunderstanding what the argument does?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/36", "repository_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator", "labels_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/36/comments", "events_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/36/events", "html_url": "https://github.com/bxparks/bigquery-schema-generator/issues/36", "id": 490761283, "node_id": "MDU6SXNzdWU0OTA3NjEyODM=", "number": 36, "title": "When creating a load job programmatically, load_job.schema has to be a list of bigquery.SchemaField objects", "user": {"login": "rconnol", "id": 12263637, "node_id": "MDQ6VXNlcjEyMjYzNjM3", "avatar_url": "https://avatars2.githubusercontent.com/u/12263637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rconnol", "html_url": "https://github.com/rconnol", "followers_url": "https://api.github.com/users/rconnol/followers", "following_url": "https://api.github.com/users/rconnol/following{/other_user}", "gists_url": "https://api.github.com/users/rconnol/gists{/gist_id}", "starred_url": "https://api.github.com/users/rconnol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rconnol/subscriptions", "organizations_url": "https://api.github.com/users/rconnol/orgs", "repos_url": "https://api.github.com/users/rconnol/repos", "events_url": "https://api.github.com/users/rconnol/events{/privacy}", "received_events_url": "https://api.github.com/users/rconnol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-08T14:29:44Z", "updated_at": "2019-10-16T16:25:31Z", "closed_at": "2019-10-16T16:25:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "i wrote a recursive function to walk a flattened schema_map and convert everything to bigquery.SchemaField:\r\n\r\nbut this could probably be done somewhere higher up instead of post generation, and would be more performant. This works well for me, but could be helpful for others.\r\n\r\n```\r\ndef walk_schema(s):\r\n    result = []\r\n    for field in s:\r\n        if field.get('fields', None):\r\n            field['fields'] = walk_schema(field['fields'])\r\n        \r\n        if field.get('type', None):\r\n            field['field_type'] = field.pop('type')\r\n        \r\n        field = bigquery.SchemaField(**field)\r\n        result.append(field)\r\n    return result\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/33", "repository_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator", "labels_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/33/comments", "events_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/33/events", "html_url": "https://github.com/bxparks/bigquery-schema-generator/issues/33", "id": 456290333, "node_id": "MDU6SXNzdWU0NTYyOTAzMzM=", "number": 33, "title": "Issue with invalid csv column names", "user": {"login": "jonwarghed", "id": 553289, "node_id": "MDQ6VXNlcjU1MzI4OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/553289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonwarghed", "html_url": "https://github.com/jonwarghed", "followers_url": "https://api.github.com/users/jonwarghed/followers", "following_url": "https://api.github.com/users/jonwarghed/following{/other_user}", "gists_url": "https://api.github.com/users/jonwarghed/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonwarghed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonwarghed/subscriptions", "organizations_url": "https://api.github.com/users/jonwarghed/orgs", "repos_url": "https://api.github.com/users/jonwarghed/repos", "events_url": "https://api.github.com/users/jonwarghed/events{/privacy}", "received_events_url": "https://api.github.com/users/jonwarghed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-14T14:53:48Z", "updated_at": "2019-06-17T14:55:42Z", "closed_at": "2019-06-17T14:55:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Having issue with that my csv column names are not valid bigquery names. Renaming and handling this is outside my control and schema is updated frequently. Ran into this library which makes it much easier but noticed I had to process everything twice to clean up the invalid names.\r\n\r\nBigquery does an automatic substitution in accordance with what is described in this issue https://github.com/bxparks/bigquery-schema-generator/issues/14\r\n\r\nSo added a pull request that allows one to run it with a sanitize names mode if wanted.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/31", "repository_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator", "labels_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/31/comments", "events_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/31/events", "html_url": "https://github.com/bxparks/bigquery-schema-generator/issues/31", "id": 446183880, "node_id": "MDU6SXNzdWU0NDYxODM4ODA=", "number": 31, "title": "Type Inferrence in inconsistent lists of dictionaries", "user": {"login": "georgejerzy", "id": 48442586, "node_id": "MDQ6VXNlcjQ4NDQyNTg2", "avatar_url": "https://avatars3.githubusercontent.com/u/48442586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/georgejerzy", "html_url": "https://github.com/georgejerzy", "followers_url": "https://api.github.com/users/georgejerzy/followers", "following_url": "https://api.github.com/users/georgejerzy/following{/other_user}", "gists_url": "https://api.github.com/users/georgejerzy/gists{/gist_id}", "starred_url": "https://api.github.com/users/georgejerzy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/georgejerzy/subscriptions", "organizations_url": "https://api.github.com/users/georgejerzy/orgs", "repos_url": "https://api.github.com/users/georgejerzy/repos", "events_url": "https://api.github.com/users/georgejerzy/events{/privacy}", "received_events_url": "https://api.github.com/users/georgejerzy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-05-20T15:35:57Z", "updated_at": "2019-06-06T18:25:11Z", "closed_at": "2019-06-06T18:25:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I would expect that module would pass the following test:\r\n```json\r\nDATA\r\n{ \"r\" : [{ \"i\": 4 },{ \"i\": \"4px\" }] }\r\nSCHEMA\r\n[\r\n  {\r\n    \"fields\": [\r\n      {\r\n        \"mode\": \"NULLABLE\",\r\n        \"name\": \"i\",\r\n        \"type\": \"STRING\"\r\n      }\r\n    ],\r\n    \"mode\": \"REPEATED\",\r\n    \"name\": \"r\",\r\n    \"type\": \"RECORD\"\r\n  }\r\n]\r\nEND\r\n```\r\nUnfortunately, type of the \"i\" field returned is INTEGER. I have a problem with understanding if it is this a bug - it's seems to be technically doable and useful, but it also seems to be a case mentioned somewhere in README - \"but bq load does not support it, so we follow its behavior\".\r\nIs is a bug to be fixed or not?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/22", "repository_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator", "labels_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/22/comments", "events_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/22/events", "html_url": "https://github.com/bxparks/bigquery-schema-generator/issues/22", "id": 410284362, "node_id": "MDU6SXNzdWU0MTAyODQzNjI=", "number": 22, "title": "Make quoted integer detection optional", "user": {"login": "de-code", "id": 1016473, "node_id": "MDQ6VXNlcjEwMTY0NzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1016473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/de-code", "html_url": "https://github.com/de-code", "followers_url": "https://api.github.com/users/de-code/followers", "following_url": "https://api.github.com/users/de-code/following{/other_user}", "gists_url": "https://api.github.com/users/de-code/gists{/gist_id}", "starred_url": "https://api.github.com/users/de-code/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/de-code/subscriptions", "organizations_url": "https://api.github.com/users/de-code/orgs", "repos_url": "https://api.github.com/users/de-code/repos", "events_url": "https://api.github.com/users/de-code/events{/privacy}", "received_events_url": "https://api.github.com/users/de-code/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-14T12:49:56Z", "updated_at": "2019-02-15T20:16:38Z", "closed_at": "2019-02-15T20:16:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#15 introduced automatic conversion of quoted numeric version to INTEGER type.\r\nFor my use-case I would not want that behaviour. Some identifiers using numbers but should be treated as strings. e.g. they may not just consist of digits in other files. I am generating the JSON and would generate the JSON with the corresponding type (i.e. if I wanted something to be represented as an INTEGER then I wouldn't quote it).\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/21", "repository_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator", "labels_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/21/comments", "events_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/21/events", "html_url": "https://github.com/bxparks/bigquery-schema-generator/issues/21", "id": 407161267, "node_id": "MDU6SXNzdWU0MDcxNjEyNjc=", "number": 21, "title": "support sending an existing schema to deduce_schema ", "user": {"login": "lior-lemonade", "id": 39515505, "node_id": "MDQ6VXNlcjM5NTE1NTA1", "avatar_url": "https://avatars1.githubusercontent.com/u/39515505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lior-lemonade", "html_url": "https://github.com/lior-lemonade", "followers_url": "https://api.github.com/users/lior-lemonade/followers", "following_url": "https://api.github.com/users/lior-lemonade/following{/other_user}", "gists_url": "https://api.github.com/users/lior-lemonade/gists{/gist_id}", "starred_url": "https://api.github.com/users/lior-lemonade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lior-lemonade/subscriptions", "organizations_url": "https://api.github.com/users/lior-lemonade/orgs", "repos_url": "https://api.github.com/users/lior-lemonade/repos", "events_url": "https://api.github.com/users/lior-lemonade/events{/privacy}", "received_events_url": "https://api.github.com/users/lior-lemonade/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-06T10:10:27Z", "updated_at": "2019-03-07T03:02:29Z", "closed_at": "2019-03-07T03:02:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "support sending an existing schema to deduce schema so we can merge an existing BigQuery schema with new rows in file.\r\nSomething like:\r\n\r\ndef deduce_schema(self, file, schema_map =None):\r\n    if schema_map is None:\r\n          schema_map = OrderedDict()\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/19", "repository_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator", "labels_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/19/comments", "events_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/19/events", "html_url": "https://github.com/bxparks/bigquery-schema-generator/issues/19", "id": 399779908, "node_id": "MDU6SXNzdWUzOTk3Nzk5MDg=", "number": 19, "title": "Support for \"UTC\" suffix in TIMESTAMP data", "user": {"login": "rsmorris123", "id": 37405288, "node_id": "MDQ6VXNlcjM3NDA1Mjg4", "avatar_url": "https://avatars0.githubusercontent.com/u/37405288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsmorris123", "html_url": "https://github.com/rsmorris123", "followers_url": "https://api.github.com/users/rsmorris123/followers", "following_url": "https://api.github.com/users/rsmorris123/following{/other_user}", "gists_url": "https://api.github.com/users/rsmorris123/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsmorris123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsmorris123/subscriptions", "organizations_url": "https://api.github.com/users/rsmorris123/orgs", "repos_url": "https://api.github.com/users/rsmorris123/repos", "events_url": "https://api.github.com/users/rsmorris123/events{/privacy}", "received_events_url": "https://api.github.com/users/rsmorris123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-16T12:09:12Z", "updated_at": "2019-01-18T17:42:04Z", "closed_at": "2019-01-18T17:42:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using bq extract to export table data from BigQuery exports default UTC timestamps in the format \"YY-MM-DD HH:MI:SS UTC\". This is the same format as displayed in BigQuery Web UI when previewing data.\r\nWhen this data is passed through the schema generator, the regex on the TIMESTAMP_MATCHER fails and the data is interpreted as a STRING in the JSON schema.\r\nAttempting to use bq update using the JSON schema on the same table the data was exported from then fails due to the change in data type from TIMESTAMP to STRING.\r\nShould be quite simple to fix - need to add optional \" UTC\" check in regex as an alternative to \"Z\".", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/18", "repository_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator", "labels_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/18/comments", "events_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/18/events", "html_url": "https://github.com/bxparks/bigquery-schema-generator/issues/18", "id": 397289715, "node_id": "MDU6SXNzdWUzOTcyODk3MTU=", "number": 18, "title": "Integers exceeding the bigquery integer limit are still converted to integer in the schema", "user": {"login": "alvinburgos", "id": 3456232, "node_id": "MDQ6VXNlcjM0NTYyMzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3456232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alvinburgos", "html_url": "https://github.com/alvinburgos", "followers_url": "https://api.github.com/users/alvinburgos/followers", "following_url": "https://api.github.com/users/alvinburgos/following{/other_user}", "gists_url": "https://api.github.com/users/alvinburgos/gists{/gist_id}", "starred_url": "https://api.github.com/users/alvinburgos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alvinburgos/subscriptions", "organizations_url": "https://api.github.com/users/alvinburgos/orgs", "repos_url": "https://api.github.com/users/alvinburgos/repos", "events_url": "https://api.github.com/users/alvinburgos/events{/privacy}", "received_events_url": "https://api.github.com/users/alvinburgos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-09T09:49:36Z", "updated_at": "2019-01-18T17:42:34Z", "closed_at": "2019-01-18T17:42:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "To replicate:\r\n\r\n`test.json`:\r\n\r\n```\r\n{\"name\": \"111222333444555666777\"}\r\n{\"name\": \"111222333444555666777\"}\r\n```\r\n\r\nExpected:\r\n```\r\n % python3 -m bigquery_schema_generator.generate_schema --keep_nulls < ../data/test.json\r\nINFO:root:Processed 2 lines\r\n[\r\n  {\r\n    \"mode\": \"NULLABLE\",\r\n    \"name\": \"name\",\r\n    \"type\": \"STRING\"\r\n  }\r\n]\r\n\r\n```\r\n\r\nActual:\r\n```\r\n % python3 -m bigquery_schema_generator.generate_schema --keep_nulls < ../data/test.json\r\nINFO:root:Processed 2 lines\r\n[\r\n  {\r\n    \"mode\": \"NULLABLE\",\r\n    \"name\": \"name\",\r\n    \"type\": \"INTEGER\"\r\n  }\r\n]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/14", "repository_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator", "labels_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/14/comments", "events_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/14/events", "html_url": "https://github.com/bxparks/bigquery-schema-generator/issues/14", "id": 354278304, "node_id": "MDU6SXNzdWUzNTQyNzgzMDQ=", "number": 14, "title": "error with white spaces & other wrong characters in column names", "user": {"login": "Iuiu1234", "id": 30587996, "node_id": "MDQ6VXNlcjMwNTg3OTk2", "avatar_url": "https://avatars2.githubusercontent.com/u/30587996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Iuiu1234", "html_url": "https://github.com/Iuiu1234", "followers_url": "https://api.github.com/users/Iuiu1234/followers", "following_url": "https://api.github.com/users/Iuiu1234/following{/other_user}", "gists_url": "https://api.github.com/users/Iuiu1234/gists{/gist_id}", "starred_url": "https://api.github.com/users/Iuiu1234/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Iuiu1234/subscriptions", "organizations_url": "https://api.github.com/users/Iuiu1234/orgs", "repos_url": "https://api.github.com/users/Iuiu1234/repos", "events_url": "https://api.github.com/users/Iuiu1234/events{/privacy}", "received_events_url": "https://api.github.com/users/Iuiu1234/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-08-27T11:17:00Z", "updated_at": "2018-12-17T20:09:04Z", "closed_at": "2018-12-17T20:09:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "When the schema is created, column names with spaces are writen as they are. \r\nTherefore, when uploading to bq generates the following error\r\n<BigQuery error in load operation: Invalid field name \"utm_medium-partners\". Fields must contain only letters, numbers, and underscores, start with a letter or underscore, and be at most 128 characters long.>\r\n\r\nWould be posible to substitute blank spaces and other wrong characters with '_' as the '--autodetect' option does? \r\nFor example:\r\n'Column.example 1' is written as 'Column_example_1'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/8", "repository_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator", "labels_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/8/comments", "events_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/8/events", "html_url": "https://github.com/bxparks/bigquery-schema-generator/issues/8", "id": 291006952, "node_id": "MDU6SXNzdWUyOTEwMDY5NTI=", "number": 8, "title": "create symlink at /usr/local/bin/generate-schema on MacOS", "user": {"login": "bxparks", "id": 26933282, "node_id": "MDQ6VXNlcjI2OTMzMjgy", "avatar_url": "https://avatars0.githubusercontent.com/u/26933282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bxparks", "html_url": "https://github.com/bxparks", "followers_url": "https://api.github.com/users/bxparks/followers", "following_url": "https://api.github.com/users/bxparks/following{/other_user}", "gists_url": "https://api.github.com/users/bxparks/gists{/gist_id}", "starred_url": "https://api.github.com/users/bxparks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bxparks/subscriptions", "organizations_url": "https://api.github.com/users/bxparks/orgs", "repos_url": "https://api.github.com/users/bxparks/repos", "events_url": "https://api.github.com/users/bxparks/events{/privacy}", "received_events_url": "https://api.github.com/users/bxparks/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bxparks", "id": 26933282, "node_id": "MDQ6VXNlcjI2OTMzMjgy", "avatar_url": "https://avatars0.githubusercontent.com/u/26933282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bxparks", "html_url": "https://github.com/bxparks", "followers_url": "https://api.github.com/users/bxparks/followers", "following_url": "https://api.github.com/users/bxparks/following{/other_user}", "gists_url": "https://api.github.com/users/bxparks/gists{/gist_id}", "starred_url": "https://api.github.com/users/bxparks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bxparks/subscriptions", "organizations_url": "https://api.github.com/users/bxparks/orgs", "repos_url": "https://api.github.com/users/bxparks/repos", "events_url": "https://api.github.com/users/bxparks/events{/privacy}", "received_events_url": "https://api.github.com/users/bxparks/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bxparks", "id": 26933282, "node_id": "MDQ6VXNlcjI2OTMzMjgy", "avatar_url": "https://avatars0.githubusercontent.com/u/26933282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bxparks", "html_url": "https://github.com/bxparks", "followers_url": "https://api.github.com/users/bxparks/followers", "following_url": "https://api.github.com/users/bxparks/following{/other_user}", "gists_url": "https://api.github.com/users/bxparks/gists{/gist_id}", "starred_url": "https://api.github.com/users/bxparks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bxparks/subscriptions", "organizations_url": "https://api.github.com/users/bxparks/orgs", "repos_url": "https://api.github.com/users/bxparks/repos", "events_url": "https://api.github.com/users/bxparks/events{/privacy}", "received_events_url": "https://api.github.com/users/bxparks/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-01-23T21:54:32Z", "updated_at": "2018-01-26T16:24:55Z", "closed_at": "2018-01-26T16:24:55Z", "author_association": "OWNER", "active_lock_reason": null, "body": "To install from PyPI, we use the following pip3 command:\r\n$ sudo -H pip3 install bigquery-schema-generator\r\n\r\nOn Ubuntu (verified on 17.10, 16.04), the 'generate-schema' shell script is installed at: /usr/local/bin/generate-schema\r\n\r\nOn MacOS (verified on 10.13.2, using Python 3.6.4), the 'generate-schema' script is installed at:\r\n/Library/Frameworks/Python.framework/Versions/3.6/bin/generate-schema\r\nThis is not an obvious location for the user.\r\n\r\nWe need to create a symlink from /usr/local/bin/generate-schema -> (the above location) on MacOS.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/5", "repository_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator", "labels_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/5/comments", "events_url": "https://api.github.com/repos/bxparks/bigquery-schema-generator/issues/5/events", "html_url": "https://github.com/bxparks/bigquery-schema-generator/issues/5", "id": 287996895, "node_id": "MDU6SXNzdWUyODc5OTY4OTU=", "number": 5, "title": "Doesn't install properly from PyPI", "user": {"login": "call", "id": 6537446, "node_id": "MDQ6VXNlcjY1Mzc0NDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/6537446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/call", "html_url": "https://github.com/call", "followers_url": "https://api.github.com/users/call/followers", "following_url": "https://api.github.com/users/call/following{/other_user}", "gists_url": "https://api.github.com/users/call/gists{/gist_id}", "starred_url": "https://api.github.com/users/call/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/call/subscriptions", "organizations_url": "https://api.github.com/users/call/orgs", "repos_url": "https://api.github.com/users/call/repos", "events_url": "https://api.github.com/users/call/events{/privacy}", "received_events_url": "https://api.github.com/users/call/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bxparks", "id": 26933282, "node_id": "MDQ6VXNlcjI2OTMzMjgy", "avatar_url": "https://avatars0.githubusercontent.com/u/26933282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bxparks", "html_url": "https://github.com/bxparks", "followers_url": "https://api.github.com/users/bxparks/followers", "following_url": "https://api.github.com/users/bxparks/following{/other_user}", "gists_url": "https://api.github.com/users/bxparks/gists{/gist_id}", "starred_url": "https://api.github.com/users/bxparks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bxparks/subscriptions", "organizations_url": "https://api.github.com/users/bxparks/orgs", "repos_url": "https://api.github.com/users/bxparks/repos", "events_url": "https://api.github.com/users/bxparks/events{/privacy}", "received_events_url": "https://api.github.com/users/bxparks/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bxparks", "id": 26933282, "node_id": "MDQ6VXNlcjI2OTMzMjgy", "avatar_url": "https://avatars0.githubusercontent.com/u/26933282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bxparks", "html_url": "https://github.com/bxparks", "followers_url": "https://api.github.com/users/bxparks/followers", "following_url": "https://api.github.com/users/bxparks/following{/other_user}", "gists_url": "https://api.github.com/users/bxparks/gists{/gist_id}", "starred_url": "https://api.github.com/users/bxparks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bxparks/subscriptions", "organizations_url": "https://api.github.com/users/bxparks/orgs", "repos_url": "https://api.github.com/users/bxparks/repos", "events_url": "https://api.github.com/users/bxparks/events{/privacy}", "received_events_url": "https://api.github.com/users/bxparks/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-01-12T03:23:17Z", "updated_at": "2018-01-26T16:21:07Z", "closed_at": "2018-01-26T16:21:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Attempting to install from PyPI produces the following errors:\r\n\r\n```\r\n$ pip3 install bigquery-schema-generator\r\nCollecting bigquery-schema-generator\r\n  Downloading bigquery-schema-generator-0.1.2.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/private/var/folders/_q/d57c1qhn5fb9ng6ycg2_3sxc0000gp/T/pip-build-i66hkje9/bigquery-schema-generator/setup.py\", line 5, in <module>\r\n        import pypandoc\r\n    ModuleNotFoundError: No module named 'pypandoc'\r\n\r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /private/var/folders/_q/d57c1qhn5fb9ng6ycg2_3sxc0000gp/T/pip-build-i66hkje9/bigquery-schema-generator/\r\n```\r\nAfter installing pypandoc and trying again, I encountered this error:\r\n```\r\npip3 install bigquery-schema-generator\r\nThe directory '/Users/call/Library/Caches/pip/http' or its parent directory is not owned by the current user and the cache has been disabled. Please check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.\r\nThe directory '/Users/call/Library/Caches/pip' or its parent directory is not owned by the current user and caching wheels has been disabled. check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.\r\nCollecting bigquery-schema-generator\r\n  Downloading bigquery-schema-generator-0.1.2.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/private/tmp/pip-build-mr9vuupc/bigquery-schema-generator/setup.py\", line 6, in <module>\r\n        long_description = pypandoc.convert('README.md', 'rst')\r\n      File \"/usr/local/lib/python3.6/site-packages/pypandoc/__init__.py\", line 66, in convert\r\n        raise RuntimeError(\"Format missing, but need one (identified source as text as no \"\r\n    RuntimeError: Format missing, but need one (identified source as text as no file with that name was found).\r\n\r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /private/tmp/pip-build-mr9vuupc/bigquery-schema-generator/\r\n```\r\n\r\nI was able to work around this by cloning this repo, cd'ing into the local repo and installing via ```pip3 install .```, but it'd be great if this installed properly from PyPI.\r\n\r\nAlso, this is a much-needed utility. I'd previously been semi-solving this problem using wolverdude/genSON to infer a JSON schema, then converting that to BigQuery schema with some custom code, but this looks much more idiomatic. Looking forward to taking it for a spin. Thanks, and keep up the good work.", "performed_via_github_app": null, "score": 1.0}]}