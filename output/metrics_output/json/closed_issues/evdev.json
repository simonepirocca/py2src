{"total_count": 52, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/114", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/114/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/114/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/114", "id": 537108846, "node_id": "MDU6SXNzdWU1MzcxMDg4NDY=", "number": 114, "title": "When setting up Uinput device, resolution is dropped.", "user": {"login": "DanielJoyce", "id": 947350, "node_id": "MDQ6VXNlcjk0NzM1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/947350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DanielJoyce", "html_url": "https://github.com/DanielJoyce", "followers_url": "https://api.github.com/users/DanielJoyce/followers", "following_url": "https://api.github.com/users/DanielJoyce/following{/other_user}", "gists_url": "https://api.github.com/users/DanielJoyce/gists{/gist_id}", "starred_url": "https://api.github.com/users/DanielJoyce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DanielJoyce/subscriptions", "organizations_url": "https://api.github.com/users/DanielJoyce/orgs", "repos_url": "https://api.github.com/users/DanielJoyce/repos", "events_url": "https://api.github.com/users/DanielJoyce/events{/privacy}", "received_events_url": "https://api.github.com/users/DanielJoyce/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2019-12-12T17:13:52Z", "updated_at": "2019-12-13T14:56:54Z", "closed_at": "2019-12-13T14:56:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I create synthetic device like so:\r\n\r\n``` python\r\ndef build_synthetic_tablet_device():\r\n    \"\"\"\r\n    TODO Need to inhect the range values of some of these properties from the plugged in tablet\r\n\r\n    Build and return a uinput based synthetic 'tablet'.\r\n    \"\"\"\r\n    return UInput({\r\n        ecodes.EV_KEY: ecodes.BTN.keys(),\r\n        ecodes.EV_LED: ecodes.LED.keys(),\r\n        ecodes.EV_ABS: [\r\n\r\n            (ecodes.ABS_X, AbsInfo(value=0, min=0, max=8192, fuzz=0,  flat=0, resolution=10)),\r\n            (ecodes.ABS_Y, AbsInfo(value=0, min=0, max=8192, fuzz=0,  flat=0, resolution=10)),\r\n            (ecodes.ABS_PRESSURE, AbsInfo(value=0, min=0, max=8192, fuzz=0,  flat=0, resolution=10)),\r\n            (ecodes.ABS_DISTANCE, AbsInfo(value=0, min=0, max=8192, fuzz=0,  flat=0, resolution=10))\r\n        ]\r\n    }, name=\"synthetic-tablet\", phys=\"synthetic-tablet\")\r\n```\r\n\r\nWhen I check it with libinput --list-devices ( from the libinput-tools package)\r\n\r\nit reports:\r\n\r\n```\r\n$ sudo libinput list-devices\r\nevent21 - synthetic-tablet: libinput bug: missing tablet capabilities: resolution. Ignoring this device.\r\n```\r\n\r\nChecking capabilities on the created device, we see:\r\n\r\n```\r\nsynthetic-tablet, /dev/input/event21:\r\n{ ('EV_ABS', 3): [ ( ('ABS_X', 0),\r\n                     AbsInfo(value=0, min=0, max=8192, fuzz=0, flat=0, resolution=0)),\r\n                   ( ('ABS_Y', 1),\r\n                     AbsInfo(value=0, min=0, max=8192, fuzz=0, flat=0, resolution=0)),\r\n                   ( ('ABS_PRESSURE', 24),\r\n                     AbsInfo(value=0, min=0, max=8192, fuzz=0, flat=0, resolution=0)),\r\n                   ( ('ABS_DISTANCE', 25),\r\n                     AbsInfo(value=0, min=0, max=8192, fuzz=0, flat=0, resolution=0))],\r\n  ('EV_KEY', 1): [ (['BTN_0', 'BTN_MISC'], 256),\r\n                   ('BTN_1', 257),\r\n                   ('BTN_2', 258),\r\n                   ('BTN_3', 259),\r\n                   ('BTN_4', 260),\r\n                   ('BTN_5', 261),\r\n                   ('BTN_6', 262),\r\n                   ('BTN_7', 263),\r\n                   ('BTN_8', 264),\r\n                   ('BTN_9', 265),\r\n                   (['BTN_LEFT', 'BTN_MOUSE'], 272),\r\n                   ('BTN_RIGHT', 273),\r\n                   ('BTN_MIDDLE', 274),\r\n                   ('BTN_SIDE', 275),\r\n                   ('BTN_EXTRA', 276),\r\n                   ('BTN_FORWARD', 277),\r\n                   ('BTN_BACK', 278),\r\n                   ('BTN_TASK', 279),\r\n                   (['BTN_JOYSTICK', 'BTN_TRIGGER'], 288),\r\n                   ('BTN_THUMB', 289),\r\n                   ('BTN_THUMB2', 290),\r\n                   ('BTN_TOP', 291),\r\n                   ('BTN_TOP2', 292),\r\n                   ('BTN_PINKIE', 293),\r\n                   ('BTN_BASE', 294),\r\n                   ('BTN_BASE2', 295),\r\n                   ('BTN_BASE3', 296),\r\n                   ('BTN_BASE4', 297),\r\n                   ('BTN_BASE5', 298),\r\n                   ('BTN_BASE6', 299),\r\n                   ('BTN_DEAD', 303),\r\n                   (['BTN_A', 'BTN_GAMEPAD', 'BTN_SOUTH'], 304),\r\n                   (['BTN_B', 'BTN_EAST'], 305),\r\n                   ('BTN_C', 306),\r\n                   (['BTN_NORTH', 'BTN_X'], 307),\r\n                   (['BTN_WEST', 'BTN_Y'], 308),\r\n                   ('BTN_Z', 309),\r\n                   ('BTN_TL', 310),\r\n                   ('BTN_TR', 311),\r\n                   ('BTN_TL2', 312),\r\n                   ('BTN_TR2', 313),\r\n                   ('BTN_SELECT', 314),\r\n                   ('BTN_START', 315),\r\n                   ('BTN_MODE', 316),\r\n                   ('BTN_THUMBL', 317),\r\n                   ('BTN_THUMBR', 318),\r\n                   (['BTN_DIGI', 'BTN_TOOL_PEN'], 320),\r\n                   ('BTN_TOOL_RUBBER', 321),\r\n                   ('BTN_TOOL_BRUSH', 322),\r\n                   ('BTN_TOOL_PENCIL', 323),\r\n                   ('BTN_TOOL_AIRBRUSH', 324),\r\n                   ('BTN_TOOL_FINGER', 325),\r\n                   ('BTN_TOOL_MOUSE', 326),\r\n                   ('BTN_TOOL_LENS', 327),\r\n                   ('BTN_TOOL_QUINTTAP', 328),\r\n                   ('BTN_STYLUS3', 329),\r\n                   ('BTN_TOUCH', 330),\r\n                   ('BTN_STYLUS', 331),\r\n                   ('BTN_STYLUS2', 332),\r\n                   ('BTN_TOOL_DOUBLETAP', 333),\r\n                   ('BTN_TOOL_TRIPLETAP', 334),\r\n                   ('BTN_TOOL_QUADTAP', 335),\r\n                   (['BTN_GEAR_DOWN', 'BTN_WHEEL'], 336),\r\n                   ('BTN_GEAR_UP', 337),\r\n                   ('BTN_DPAD_UP', 544),\r\n                   ('BTN_DPAD_DOWN', 545),\r\n                   ('BTN_DPAD_LEFT', 546),\r\n                   ('BTN_DPAD_RIGHT', 547),\r\n                   (['BTN_TRIGGER_HAPPY', 'BTN_TRIGGER_HAPPY1'], 704),\r\n                   ('BTN_TRIGGER_HAPPY2', 705),\r\n                   ('BTN_TRIGGER_HAPPY3', 706),\r\n                   ('BTN_TRIGGER_HAPPY4', 707),\r\n                   ('BTN_TRIGGER_HAPPY5', 708),\r\n                   ('BTN_TRIGGER_HAPPY6', 709),\r\n                   ('BTN_TRIGGER_HAPPY7', 710),\r\n                   ('BTN_TRIGGER_HAPPY8', 711),\r\n                   ('BTN_TRIGGER_HAPPY9', 712),\r\n                   ('BTN_TRIGGER_HAPPY10', 713),\r\n                   ('BTN_TRIGGER_HAPPY11', 714),\r\n                   ('BTN_TRIGGER_HAPPY12', 715),\r\n                   ('BTN_TRIGGER_HAPPY13', 716),\r\n                   ('BTN_TRIGGER_HAPPY14', 717),\r\n                   ('BTN_TRIGGER_HAPPY15', 718),\r\n                   ('BTN_TRIGGER_HAPPY16', 719),\r\n                   ('BTN_TRIGGER_HAPPY17', 720),\r\n                   ('BTN_TRIGGER_HAPPY18', 721),\r\n                   ('BTN_TRIGGER_HAPPY19', 722),\r\n                   ('BTN_TRIGGER_HAPPY20', 723),\r\n                   ('BTN_TRIGGER_HAPPY21', 724),\r\n                   ('BTN_TRIGGER_HAPPY22', 725),\r\n                   ('BTN_TRIGGER_HAPPY23', 726),\r\n                   ('BTN_TRIGGER_HAPPY24', 727),\r\n                   ('BTN_TRIGGER_HAPPY25', 728),\r\n                   ('BTN_TRIGGER_HAPPY26', 729),\r\n                   ('BTN_TRIGGER_HAPPY27', 730),\r\n                   ('BTN_TRIGGER_HAPPY28', 731),\r\n                   ('BTN_TRIGGER_HAPPY29', 732),\r\n                   ('BTN_TRIGGER_HAPPY30', 733),\r\n                   ('BTN_TRIGGER_HAPPY31', 734),\r\n                   ('BTN_TRIGGER_HAPPY32', 735),\r\n                   ('BTN_TRIGGER_HAPPY33', 736),\r\n                   ('BTN_TRIGGER_HAPPY34', 737),\r\n                   ('BTN_TRIGGER_HAPPY35', 738),\r\n                   ('BTN_TRIGGER_HAPPY36', 739),\r\n                   ('BTN_TRIGGER_HAPPY37', 740),\r\n                   ('BTN_TRIGGER_HAPPY38', 741),\r\n                   ('BTN_TRIGGER_HAPPY39', 742),\r\n                   ('BTN_TRIGGER_HAPPY40', 743)],\r\n  ('EV_LED', 17): [ ('LED_NUML', 0),\r\n                    ('LED_CAPSL', 1),\r\n                    ('LED_SCROLLL', 2),\r\n                    ('LED_COMPOSE', 3),\r\n                    ('LED_KANA', 4),\r\n                    ('LED_SLEEP', 5),\r\n                    ('LED_SUSPEND', 6),\r\n                    ('LED_MUTE', 7),\r\n                    ('LED_MISC', 8),\r\n                    ('LED_MAIL', 9),\r\n                    ('LED_CHARGING', 10)],\r\n  ('EV_SYN', 0): [ ('SYN_REPORT', 0),\r\n                   ('SYN_CONFIG', 1),\r\n                   ('SYN_DROPPED', 3),\r\n                   ('?', 17),\r\n                   ('?', 21)]}\r\n```\r\nThe resolution value for the AbsInfo has been dropped\r\n\r\nI suspect the problem is in _prepare_events of uinput.py, possibly line 164\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/113", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/113/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/113/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/113", "id": 534235561, "node_id": "MDU6SXNzdWU1MzQyMzU1NjE=", "number": 113, "title": "Documentation Error: Tutorial Listing accessible event devices", "user": {"login": "windy54", "id": 5352523, "node_id": "MDQ6VXNlcjUzNTI1MjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/5352523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/windy54", "html_url": "https://github.com/windy54", "followers_url": "https://api.github.com/users/windy54/followers", "following_url": "https://api.github.com/users/windy54/following{/other_user}", "gists_url": "https://api.github.com/users/windy54/gists{/gist_id}", "starred_url": "https://api.github.com/users/windy54/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/windy54/subscriptions", "organizations_url": "https://api.github.com/users/windy54/orgs", "repos_url": "https://api.github.com/users/windy54/repos", "events_url": "https://api.github.com/users/windy54/events{/privacy}", "received_events_url": "https://api.github.com/users/windy54/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-06T20:08:55Z", "updated_at": "2019-12-07T10:54:34Z", "closed_at": "2019-12-07T10:54:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have just tried this tutorial on a raspberry PI running Buster, python 3.5.3 and it does not work.\r\n```\r\nimport evdev\r\ndevices = [evdev.InputDevice(path) for path in evdev.list_devices()]\r\nfor device in devices:\r\n\t    print(device.path, device.name, device.phys)\r\n```\r\nIdle gives the following error:\r\n\t\r\nTraceback (most recent call last):\r\n  File \"<pyshell#4>\", line 2, in <module>\r\n    print(device.path, device.name, device.phys)\r\nAttributeError: \"InputDevice\" object has no attribute \"path\"\r\n\r\n\r\nI have looked at help(evdev.device.InputDevice) and found an attribute __fspath__\r\n\r\nIf I now run\r\n```\r\nfor device in devices:\r\n\tprint(device.__fspath__, device.name, device.phys)\r\n```\r\n\r\n\t\r\n<bound method InputDevice.__fspath__ of InputDevice('/dev/input/event1')> Logitech USB Optical Mouse usb-3f980000.usb-1.5/input0\r\n<bound method InputDevice.__fspath__ of InputDevice('/dev/input/event0')> DELL DELL USB Keyboard usb-3f980000.usb-1.4/input0\r\n\r\nThere are no errors and it outputs the path along with other information.\r\n\r\nI am not sure if this is the \"best\" fix for the example, assuming there is an error. \r\n\r\nAs a newcomer to evdev and relatively new to python I am quite pleased I managed to find a fix.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/111", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/111/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/111/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/111", "id": 522656257, "node_id": "MDU6SXNzdWU1MjI2NTYyNTc=", "number": 111, "title": "Static symbol moduleinit clashes with pygit2 and pyrsistent", "user": {"login": "jayvdb", "id": 15092, "node_id": "MDQ6VXNlcjE1MDky", "avatar_url": "https://avatars1.githubusercontent.com/u/15092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayvdb", "html_url": "https://github.com/jayvdb", "followers_url": "https://api.github.com/users/jayvdb/followers", "following_url": "https://api.github.com/users/jayvdb/following{/other_user}", "gists_url": "https://api.github.com/users/jayvdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayvdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayvdb/subscriptions", "organizations_url": "https://api.github.com/users/jayvdb/orgs", "repos_url": "https://api.github.com/users/jayvdb/repos", "events_url": "https://api.github.com/users/jayvdb/events{/privacy}", "received_events_url": "https://api.github.com/users/jayvdb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-14T06:36:33Z", "updated_at": "2019-11-14T12:39:07Z", "closed_at": "2019-11-14T12:39:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please see https://github.com/tobgu/pyrsistent/issues/182", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/107", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/107/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/107/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/107", "id": 449974249, "node_id": "MDU6SXNzdWU0NDk5NzQyNDk=", "number": 107, "title": "reading led state and grab() ing device turns all leds off while retaining num/caps-lock state.", "user": {"login": "foxsam21", "id": 11862524, "node_id": "MDQ6VXNlcjExODYyNTI0", "avatar_url": "https://avatars0.githubusercontent.com/u/11862524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foxsam21", "html_url": "https://github.com/foxsam21", "followers_url": "https://api.github.com/users/foxsam21/followers", "following_url": "https://api.github.com/users/foxsam21/following{/other_user}", "gists_url": "https://api.github.com/users/foxsam21/gists{/gist_id}", "starred_url": "https://api.github.com/users/foxsam21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foxsam21/subscriptions", "organizations_url": "https://api.github.com/users/foxsam21/orgs", "repos_url": "https://api.github.com/users/foxsam21/repos", "events_url": "https://api.github.com/users/foxsam21/events{/privacy}", "received_events_url": "https://api.github.com/users/foxsam21/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-05-29T19:10:04Z", "updated_at": "2019-06-25T04:36:16Z", "closed_at": "2019-06-06T18:38:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I asked this as a [question on stackoverflow](https://stackoverflow.com/questions/56316262/grab-after-device-leds-turns-off-led) but I think it may be a bug in the module itself.\r\nIf I read the led states and grab the device the leds turn off. It does not matter which one I do first. This is without pressing any keys (it's not a symptom of grab() not registering the release of numlock etc...). Even though the leds turn off the actual numlock state stays the same as it was. Another thing I noticed is that pressing one of caps/numlock restores the led state of both leds.\r\nHere is an example:\r\n```python\r\nimport evdev\r\nevdev.InputDevice('/dev/input/event3').leds()\r\nevdev.InputDevice('/dev/input/event3').grab()\r\n```\r\nIf numlock led was on and capslock led off after running the above code both will be off. If i press numbers on the numberpad they work as if numlock is on even though the led is off. If I press capslock the capslock led will turn on and the numlock led will be restored to on.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/103", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/103/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/103/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/103", "id": 387973129, "node_id": "MDU6SXNzdWUzODc5NzMxMjk=", "number": 103, "title": "unable to drop out and back in  async_read_loop()", "user": {"login": "miccoli", "id": 6403904, "node_id": "MDQ6VXNlcjY0MDM5MDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/6403904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miccoli", "html_url": "https://github.com/miccoli", "followers_url": "https://api.github.com/users/miccoli/followers", "following_url": "https://api.github.com/users/miccoli/following{/other_user}", "gists_url": "https://api.github.com/users/miccoli/gists{/gist_id}", "starred_url": "https://api.github.com/users/miccoli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miccoli/subscriptions", "organizations_url": "https://api.github.com/users/miccoli/orgs", "repos_url": "https://api.github.com/users/miccoli/repos", "events_url": "https://api.github.com/users/miccoli/events{/privacy}", "received_events_url": "https://api.github.com/users/miccoli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-05T22:25:56Z", "updated_at": "2020-01-11T23:21:41Z", "closed_at": "2020-01-11T23:21:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm able to read events with the [async_read_loop](\r\nhttps://python-evdev.readthedocs.io/en/latest/apidoc.html#evdev.eventio_async.EventIO.async_read_loop) API but I'm unable to stop and restart the `async for` loop. Here an example:\r\n\r\n<details>\r\n<summary>python example program</summary>\r\n\r\n```python\r\nimport asyncio\r\nimport evdev\r\n\r\nasync def scan(devpath):\r\n    dev = evdev.InputDevice(devpath)\r\n    print(\"  * device opened\")\r\n    try:\r\n        async for event in dev.async_read_loop():\r\n            print(\"  event: {}\".format(event))\r\n    finally:\r\n        dev.close()\r\n        print(\"  * device closed\")\r\n\r\n\r\nasync def amain():\r\n    for i in range(3):\r\n        print(\"Loop {}\".format(i))\r\n        task = asyncio.create_task(scan(\"/dev/input/event0\"))\r\n        await asyncio.sleep(10)\r\n        task.cancel()\r\n        while not task.done():\r\n            await asyncio.sleep(0.1)\r\n\r\nasyncio.run(amain())\r\n```\r\n\r\n</details>\r\n\r\nThis program creates a task that reads events from `/dev/input/event0`, waits 10 seconds, cancels the task and restarts it. The problem is that after the first iteration (Loop 0) the `dev.async_read_loop()` does not receive events any more.\r\n\r\n<details>\r\n<summary>Example output</summary>\r\n\r\n```\r\nLoop 0\r\n  * device opened\r\n  event: event at 1544047875.152415, code 04, type 04, val 786658\r\n  event: event at 1544047875.152415, code 113, type 01, val 01\r\n  event: event at 1544047875.152415, code 00, type 00, val 00\r\n  event: event at 1544047875.174997, code 04, type 04, val 786658\r\n  event: event at 1544047875.174997, code 113, type 01, val 00\r\n  event: event at 1544047875.174997, code 00, type 00, val 00\r\n  * device closed\r\nLoop 1\r\n  * device opened\r\n  * device closed\r\nLoop 2\r\n  * device opened\r\n  * device closed\r\n```\r\n\r\n</details>\r\n\r\nTested with evdev version 1.1.2, Python 3.7.1 on 'Linux 4.14.85-1-ARCH'\r\n\r\n### edit ###\r\nSame problem with all the [asyncio methods](\r\nhttps://python-evdev.readthedocs.io/en/latest/apidoc.html#module-evdev.eventio_async)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/99", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/99/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/99/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/99", "id": 360488052, "node_id": "MDU6SXNzdWUzNjA0ODgwNTI=", "number": 99, "title": "Dynamically update device list using asyncio", "user": {"login": "fenhl", "id": 641386, "node_id": "MDQ6VXNlcjY0MTM4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/641386?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fenhl", "html_url": "https://github.com/fenhl", "followers_url": "https://api.github.com/users/fenhl/followers", "following_url": "https://api.github.com/users/fenhl/following{/other_user}", "gists_url": "https://api.github.com/users/fenhl/gists{/gist_id}", "starred_url": "https://api.github.com/users/fenhl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fenhl/subscriptions", "organizations_url": "https://api.github.com/users/fenhl/orgs", "repos_url": "https://api.github.com/users/fenhl/repos", "events_url": "https://api.github.com/users/fenhl/events{/privacy}", "received_events_url": "https://api.github.com/users/fenhl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-09-15T00:07:00Z", "updated_at": "2020-01-11T23:28:04Z", "closed_at": "2020-01-11T23:28:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using this library's `asyncio` API to listen for events from all devices. The issue I'm having is that the list of available devices needs to be created in advance, so new devices plugged in while my program is already running are ignored, and even worse, unplugging a device crashes my program with an `OSError`.\r\n\r\nIt would be useful if this library could provide a solution, perhaps in form of an async iterator which simply yields events from all devices, along with the device that generated them. For additional information parity, special \u201cdevice added/removed\u201d events could be inserted as well.\r\n\r\nTagging @paulo-raca \u2014 maybe you have an idea of how to implement this, since it looks like you added the `asyncio` support to this library.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/98", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/98/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/98/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/98", "id": 356100710, "node_id": "MDU6SXNzdWUzNTYxMDA3MTA=", "number": 98, "title": "evdev 1.1.0 fails to install on Travis-CI", "user": {"login": "ddemidov", "id": 270503, "node_id": "MDQ6VXNlcjI3MDUwMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/270503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddemidov", "html_url": "https://github.com/ddemidov", "followers_url": "https://api.github.com/users/ddemidov/followers", "following_url": "https://api.github.com/users/ddemidov/following{/other_user}", "gists_url": "https://api.github.com/users/ddemidov/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddemidov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddemidov/subscriptions", "organizations_url": "https://api.github.com/users/ddemidov/orgs", "repos_url": "https://api.github.com/users/ddemidov/repos", "events_url": "https://api.github.com/users/ddemidov/events{/privacy}", "received_events_url": "https://api.github.com/users/ddemidov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-31T19:35:04Z", "updated_at": "2018-09-01T17:50:14Z", "closed_at": "2018-09-01T17:50:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "The command `pip install evdev` fails on Travis-CI.\r\n\r\nSee\r\n* https://github.com/ev3dev/ev3dev-lang-python/pull/500,\r\n* https://travis-ci.org/ev3dev/ev3dev-lang-python/builds/423161128#L545\r\n\r\nThe error is\r\n```\r\ngcc -pthread -Wno-unused-result -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -g -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -fPIC -I/opt/python/3.4.6/include/python3.4m -c evdev/uinput.c -o build/temp.linux-x86_64-3.4/evdev/uinput.o -std=c99 -Wno-error=declaration-after-statement\r\n  evdev/uinput.c: In function \u2018uinput_setup\u2019:\r\n  evdev/uinput.c:92:28: error: \u2018FF_MAX_EFFECTS\u2019 undeclared (first use in this function)\r\n       uidev.ff_effects_max = FF_MAX_EFFECTS;\r\n                              ^\r\n  evdev/uinput.c:92:28: note: each undeclared identifier is reported only once for each function it appears in\r\n  error: command 'gcc' failed with exit status 1\r\n  \r\n  ----------------------------------------\r\n  Failed building wheel for evdev\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/97", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/97/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/97/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/97", "id": 355285703, "node_id": "MDU6SXNzdWUzNTUyODU3MDM=", "number": 97, "title": "Bug: min/max 0 (becuase absinfo is empty on 1.1.0)", "user": {"login": "c-andy-martin", "id": 16160086, "node_id": "MDQ6VXNlcjE2MTYwMDg2", "avatar_url": "https://avatars1.githubusercontent.com/u/16160086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c-andy-martin", "html_url": "https://github.com/c-andy-martin", "followers_url": "https://api.github.com/users/c-andy-martin/followers", "following_url": "https://api.github.com/users/c-andy-martin/following{/other_user}", "gists_url": "https://api.github.com/users/c-andy-martin/gists{/gist_id}", "starred_url": "https://api.github.com/users/c-andy-martin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c-andy-martin/subscriptions", "organizations_url": "https://api.github.com/users/c-andy-martin/orgs", "repos_url": "https://api.github.com/users/c-andy-martin/repos", "events_url": "https://api.github.com/users/c-andy-martin/events{/privacy}", "received_events_url": "https://api.github.com/users/c-andy-martin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-29T18:43:55Z", "updated_at": "2018-09-01T17:48:50Z", "closed_at": "2018-09-01T17:30:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I believe this change broke absinfo on object creation:\r\n\r\nhttps://github.com/gvalkov/python-evdev/commit/34fe42c0b5bf015b4b8315833b19d32d0b4de440\r\n\r\nIt calls _uinput.setup passing `absinfo` before `absinfo` was setup using the passed in `events` dictionary. This causes invalid behavior, for instance, w/ ds4drv:\r\n\r\nInput driver version is 1.0.1\r\nInput device ID: bus 0x3 vendor 0x54c product 0x5c4 version 0x111\r\nInput device name: \"Sony Computer Entertainment Wireless Controller\"\r\nSupported events:\r\n  Event type 0 (EV_SYN)\r\n  Event type 1 (EV_KEY)\r\n    Event code 304 (BTN_SOUTH)\r\n    Event code 305 (BTN_EAST)\r\n    Event code 306 (BTN_C)\r\n    Event code 307 (BTN_NORTH)\r\n    Event code 308 (BTN_WEST)\r\n    Event code 309 (BTN_Z)\r\n    Event code 310 (BTN_TL)\r\n    Event code 311 (BTN_TR)\r\n    Event code 312 (BTN_TL2)\r\n    Event code 313 (BTN_TR2)\r\n    Event code 314 (BTN_SELECT)\r\n    Event code 315 (BTN_START)\r\n    Event code 316 (BTN_MODE)\r\n    Event code 317 (BTN_THUMBL)\r\n  Event type 3 (EV_ABS)\r\n    Event code 0 (ABS_X)\r\n      Value    124\r\n      Min        0\r\n      Max        0\r\n    Event code 1 (ABS_Y)\r\n      Value    128\r\n      Min        0\r\n      Max        0\r\n    Event code 2 (ABS_Z)\r\n      Value    129\r\n      Min        0\r\n      Max        0\r\n...\r\n\r\nAnd so on (all min/max values are 0!)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/96", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/96/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/96/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/96", "id": 354119149, "node_id": "MDU6SXNzdWUzNTQxMTkxNDk=", "number": 96, "title": "Is this repository maintained? ", "user": {"login": "PyDever", "id": 28792696, "node_id": "MDQ6VXNlcjI4NzkyNjk2", "avatar_url": "https://avatars3.githubusercontent.com/u/28792696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PyDever", "html_url": "https://github.com/PyDever", "followers_url": "https://api.github.com/users/PyDever/followers", "following_url": "https://api.github.com/users/PyDever/following{/other_user}", "gists_url": "https://api.github.com/users/PyDever/gists{/gist_id}", "starred_url": "https://api.github.com/users/PyDever/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PyDever/subscriptions", "organizations_url": "https://api.github.com/users/PyDever/orgs", "repos_url": "https://api.github.com/users/PyDever/repos", "events_url": "https://api.github.com/users/PyDever/events{/privacy}", "received_events_url": "https://api.github.com/users/PyDever/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-26T19:04:35Z", "updated_at": "2018-09-01T17:50:26Z", "closed_at": "2018-09-01T17:50:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is this repository maintained anymore? I see there are several issues. I am more than happy to takeover if owner doesn't have the time. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/95", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/95/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/95/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/95", "id": 351630316, "node_id": "MDU6SXNzdWUzNTE2MzAzMTY=", "number": 95, "title": "\"name 'buffer' is not defined\" when calling upload_effect", "user": {"login": "robomancer-or", "id": 25011953, "node_id": "MDQ6VXNlcjI1MDExOTUz", "avatar_url": "https://avatars0.githubusercontent.com/u/25011953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robomancer-or", "html_url": "https://github.com/robomancer-or", "followers_url": "https://api.github.com/users/robomancer-or/followers", "following_url": "https://api.github.com/users/robomancer-or/following{/other_user}", "gists_url": "https://api.github.com/users/robomancer-or/gists{/gist_id}", "starred_url": "https://api.github.com/users/robomancer-or/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robomancer-or/subscriptions", "organizations_url": "https://api.github.com/users/robomancer-or/orgs", "repos_url": "https://api.github.com/users/robomancer-or/repos", "events_url": "https://api.github.com/users/robomancer-or/events{/privacy}", "received_events_url": "https://api.github.com/users/robomancer-or/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-17T15:04:33Z", "updated_at": "2018-08-21T18:29:22Z", "closed_at": "2018-08-21T18:29:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I call upload_effect to get force feedback working it's throwing an error because it can't find `buffer`.\r\n\r\nI've tracked it to line 293 of https://github.com/gvalkov/python-evdev/blob/ff/evdev/device.py apparently the function buffer is nowhere to be found...??", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/90", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/90/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/90/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/90", "id": 327988198, "node_id": "MDU6SXNzdWUzMjc5ODgxOTg=", "number": 90, "title": "AttributeError: 'InputDevice' object has no attribute 'path' when comparing equality", "user": {"login": "siikamiika", "id": 5602483, "node_id": "MDQ6VXNlcjU2MDI0ODM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5602483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siikamiika", "html_url": "https://github.com/siikamiika", "followers_url": "https://api.github.com/users/siikamiika/followers", "following_url": "https://api.github.com/users/siikamiika/following{/other_user}", "gists_url": "https://api.github.com/users/siikamiika/gists{/gist_id}", "starred_url": "https://api.github.com/users/siikamiika/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siikamiika/subscriptions", "organizations_url": "https://api.github.com/users/siikamiika/orgs", "repos_url": "https://api.github.com/users/siikamiika/repos", "events_url": "https://api.github.com/users/siikamiika/events{/privacy}", "received_events_url": "https://api.github.com/users/siikamiika/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-31T04:16:48Z", "updated_at": "2018-06-01T00:53:19Z", "closed_at": "2018-05-31T23:00:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "The `path` attribute added in 711606f4a7e41a967c763e03fada9f6046b38f09 doesn't work for me on CPython 3.6.4. I was comparing two references to the same object, and the actual device behind `InputDevice` did not exist at that moment (it was unplugged). I'd send a pull request undoing the commit but I don't know if that would break something else.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/85", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/85/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/85/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/85", "id": 316467633, "node_id": "MDU6SXNzdWUzMTY0Njc2MzM=", "number": 85, "title": "How to read events using asyncio", "user": {"login": "MouhamedEssam", "id": 18332980, "node_id": "MDQ6VXNlcjE4MzMyOTgw", "avatar_url": "https://avatars3.githubusercontent.com/u/18332980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MouhamedEssam", "html_url": "https://github.com/MouhamedEssam", "followers_url": "https://api.github.com/users/MouhamedEssam/followers", "following_url": "https://api.github.com/users/MouhamedEssam/following{/other_user}", "gists_url": "https://api.github.com/users/MouhamedEssam/gists{/gist_id}", "starred_url": "https://api.github.com/users/MouhamedEssam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MouhamedEssam/subscriptions", "organizations_url": "https://api.github.com/users/MouhamedEssam/orgs", "repos_url": "https://api.github.com/users/MouhamedEssam/repos", "events_url": "https://api.github.com/users/MouhamedEssam/events{/privacy}", "received_events_url": "https://api.github.com/users/MouhamedEssam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-21T06:44:44Z", "updated_at": "2018-05-31T21:48:42Z", "closed_at": "2018-05-31T21:48:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "in the documentation, there is an example to read events using asyncore with a note along the example suggesting to use asyncio with no explanation, and am also need explanation what is the need of reading events using asyncore.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/83", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/83/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/83/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/83", "id": 308176547, "node_id": "MDU6SXNzdWUzMDgxNzY1NDc=", "number": 83, "title": "Syntax Error in 0.8.0", "user": {"login": "joh06937", "id": 3850101, "node_id": "MDQ6VXNlcjM4NTAxMDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3850101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joh06937", "html_url": "https://github.com/joh06937", "followers_url": "https://api.github.com/users/joh06937/followers", "following_url": "https://api.github.com/users/joh06937/following{/other_user}", "gists_url": "https://api.github.com/users/joh06937/gists{/gist_id}", "starred_url": "https://api.github.com/users/joh06937/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joh06937/subscriptions", "organizations_url": "https://api.github.com/users/joh06937/orgs", "repos_url": "https://api.github.com/users/joh06937/repos", "events_url": "https://api.github.com/users/joh06937/events{/privacy}", "received_events_url": "https://api.github.com/users/joh06937/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-23T20:57:03Z", "updated_at": "2018-03-25T15:06:29Z", "closed_at": "2018-03-23T23:12:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "...\r\n    import evdev\r\n  File \".../python2.7/site-packages/evdev/__init__.py\", line 9, in <module>\r\n    from evdev.uinput import UInput, UInputError\r\n  File \".../python2.7/site-packages/evdev/uinput.py\", line 35\r\n    def from_device(cls, *devices, filtered_types=(ecodes.EV_SYN, ecodes.EV_FF), **kwargs):\r\n                                                ^\r\nSyntaxError: invalid syntax", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/81", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/81/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/81/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/81", "id": 307655042, "node_id": "MDU6SXNzdWUzMDc2NTUwNDI=", "number": 81, "title": "Physical device for bluetooth devices returns controller MAC rather than device MAC", "user": {"login": "tomoinn", "id": 1400070, "node_id": "MDQ6VXNlcjE0MDAwNzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1400070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomoinn", "html_url": "https://github.com/tomoinn", "followers_url": "https://api.github.com/users/tomoinn/followers", "following_url": "https://api.github.com/users/tomoinn/following{/other_user}", "gists_url": "https://api.github.com/users/tomoinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomoinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomoinn/subscriptions", "organizations_url": "https://api.github.com/users/tomoinn/orgs", "repos_url": "https://api.github.com/users/tomoinn/repos", "events_url": "https://api.github.com/users/tomoinn/events{/privacy}", "received_events_url": "https://api.github.com/users/tomoinn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-03-22T13:58:57Z", "updated_at": "2018-03-22T19:21:58Z", "closed_at": "2018-03-22T19:21:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On my dev machine and my raspberry pi, both linux 4.15 / bluez 5.49 / python-evdev 0.7, I've noticed that getting the phys property of an InputDevice returns the MAC of the bluetooth controller, and not the MAC of the device. I suspect this isn't a problem with this library, but I've no idea where else to report it.\r\n\r\nThis is a problem because I'm trying to deal with hardware that creates multiple nodes in /dev/input (for example, the sony PS4 controller creates three), and it used to be the case I could group nodes by phys attribute. Of course, this now doesn't work because any bluetooth device gets the same phys property.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/80", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/80/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/80/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/80", "id": 304102400, "node_id": "MDU6SXNzdWUzMDQxMDI0MDA=", "number": 80, "title": "Generator returned from .read() crashes upon attempts to iterate through it", "user": {"login": "cjosephson", "id": 707398, "node_id": "MDQ6VXNlcjcwNzM5OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/707398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjosephson", "html_url": "https://github.com/cjosephson", "followers_url": "https://api.github.com/users/cjosephson/followers", "following_url": "https://api.github.com/users/cjosephson/following{/other_user}", "gists_url": "https://api.github.com/users/cjosephson/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjosephson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjosephson/subscriptions", "organizations_url": "https://api.github.com/users/cjosephson/orgs", "repos_url": "https://api.github.com/users/cjosephson/repos", "events_url": "https://api.github.com/users/cjosephson/events{/privacy}", "received_events_url": "https://api.github.com/users/cjosephson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-10T20:32:24Z", "updated_at": "2018-03-10T20:40:22Z", "closed_at": "2018-03-10T20:39:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "We grab an RFID device and then try to .read(). I expected a BlockingIOError to be raised, but instead a generator is returned that crashes when we try to iterate though it. We are running version 0.7.0 in python 2.7.13\r\n\r\nOur code:\r\n\r\n```\r\nimport evdev\r\nimport sys, os\r\nfrom utils import printd\r\n\r\nclass CardReader(object):\r\n    def __init__(self):\r\n        # find the RFID card reader device                                                                                                                                                                  \r\n        devices = [evdev.InputDevice(fn) for fn in evdev.list_devices()]\r\n\r\n        rfid_devs = [d for d in devices if 'RFID' in d.name]\r\n        if len(rfid_devs) == 0:\r\n            printd('ERROR: No RFID devices found... exiting')\r\n            sys.exit(1)\r\n        self.rfid_dev = rfid_devs[0]\r\n        if len(rfid_devs) > 1:\r\n            printd('WARNING: Multiple RFID devices found... using: {}'.format(self.rfid_dev.name))\r\n\r\n    def read_card(self):\r\n        # lock the device                                                                                                                                                                                   \r\n        self.rfid_dev.grab()\r\n        # read the digits                                                                                                                                                                                   \r\n        digits = []\r\n        #for event in self.rfid_dev.read_loop():                                                                                                                                                            \r\n        try:\r\n            print(\"trying\")\r\n            events = self.rfid_dev.read()\r\n        except:\r\n            print(\"blocking\")\r\n            self.rfid_dev.ungrab()\r\n            return None\r\n        for event in events:\r\n            print(\"event:\",event)\r\n            if event.type == evdev.ecodes.EV_KEY:\r\n                data = evdev.categorize(event)\r\n                if data.keycode == 'KEY_ENTER':\r\n                    break\r\n                if data.keystate == 1: # the key is pressed down                                                                                                                                            \r\n                    digits.append(data.keycode.replace('KEY_', ''))\r\n        print(\"lol3\")\r\n        print(\"digits\",digits)\r\n        # unlock the device                                                                                                                                                                                 \r\n        self.rfid_dev.ungrab()\r\n        input_str = ''.join(digits)\r\n        try:\r\n            card_num = int(input_str)\r\n            return card_num\r\n        except ValueError as e:\r\n            card_num = -1\r\n            if input_str != '':\r\n                printd('ERROR: Invalid card number entered: {}'.format(input_str))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/78", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/78/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/78/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/78", "id": 294103698, "node_id": "MDU6SXNzdWUyOTQxMDM2OTg=", "number": 78, "title": "changing fd", "user": {"login": "mrmsbarnes", "id": 8269732, "node_id": "MDQ6VXNlcjgyNjk3MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8269732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrmsbarnes", "html_url": "https://github.com/mrmsbarnes", "followers_url": "https://api.github.com/users/mrmsbarnes/followers", "following_url": "https://api.github.com/users/mrmsbarnes/following{/other_user}", "gists_url": "https://api.github.com/users/mrmsbarnes/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrmsbarnes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrmsbarnes/subscriptions", "organizations_url": "https://api.github.com/users/mrmsbarnes/orgs", "repos_url": "https://api.github.com/users/mrmsbarnes/repos", "events_url": "https://api.github.com/users/mrmsbarnes/events{/privacy}", "received_events_url": "https://api.github.com/users/mrmsbarnes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-03T11:21:38Z", "updated_at": "2018-02-07T06:57:32Z", "closed_at": "2018-02-07T06:57:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "import evdev\r\ndevices = (evdev.InputDevice('/dev/input/event1'), evdev.InputDevice('/dev/input/event2'))\r\nfor dev in devices:\r\n    print (dev.fd, dev)\r\nprint (evdev.InputDevice('/dev/input/event1').fd, evdev.InputDevice('/dev/input/event1'))\r\nprint (evdev.InputDevice('/dev/input/event2').fd, evdev.InputDevice('/dev/input/event2'))\r\n\r\noutput:\r\npi@raspberrypi:~ $ python3 mhook2.py\r\n3 device /dev/input/event1, name \"Rextron USB\", phys \"usb-3f980000.usb-1.3.1/input1\"\r\n4 device /dev/input/event2, name \"lircd-uinput\", phys \"\"\r\n5 device /dev/input/event1, name \"Rextron USB\", phys \"usb-3f980000.usb-1.3.1/input1\"\r\n5 device /dev/input/event2, name \"lircd-uinput\", phys \"\"\r\n\r\nwhy do fd's change from 3 and 4 to 5?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/77", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/77/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/77/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/77", "id": 292040311, "node_id": "MDU6SXNzdWUyOTIwNDAzMTE=", "number": 77, "title": "UInput.from_device does not merge every event code", "user": {"login": "ismailof", "id": 16477746, "node_id": "MDQ6VXNlcjE2NDc3NzQ2", "avatar_url": "https://avatars2.githubusercontent.com/u/16477746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ismailof", "html_url": "https://github.com/ismailof", "followers_url": "https://api.github.com/users/ismailof/followers", "following_url": "https://api.github.com/users/ismailof/following{/other_user}", "gists_url": "https://api.github.com/users/ismailof/gists{/gist_id}", "starred_url": "https://api.github.com/users/ismailof/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ismailof/subscriptions", "organizations_url": "https://api.github.com/users/ismailof/orgs", "repos_url": "https://api.github.com/users/ismailof/repos", "events_url": "https://api.github.com/users/ismailof/events{/privacy}", "received_events_url": "https://api.github.com/users/ismailof/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-26T21:42:24Z", "updated_at": "2018-02-22T22:59:38Z", "closed_at": "2018-02-22T22:59:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When using `UInput.from_device()` to merge the capabilities of several devices, the resulting capabilities of the uinput device are not the full list of those in the source devices.\r\n\r\nSince for each ev_type in `dev.capabilities()` we have a list of ev_codes, if two devices have same ev_type but differente ev_codes, the update method on `uinput.py` replaces the previous list with the last ones:\r\n```\r\n     all_capabilities = {}\r\n     for dev in device_instances:\r\n         all_capabilities.update(dev.capabilities())\r\n```\r\n\r\nTo correctly merge capabilities of several devices we should do something like this to extend the lists instead of replacing them:\r\n```  \r\n    all_capabilities = defaultdict(list)\r\n    for dev in device_instances:\r\n        dev_caps = dev.capabilities()        \r\n        for ev_type, ev_codes in dev_caps.iteritems():\r\n            all_capabilities[ev_type].extend(ev_codes)\r\n            all_capabilities[ev_type] = list(set(all_capabilities[ev_type]))  # removes duplicate ev_codes\r\n```  \r\n\r\nThe last line could be avoided if instead of lists we had sets for device capabilities, which would automatically avoid duplicate ev_codes, but that might be a bigger API change, I think.\r\n\r\nI could do a pull request if you find it appropriate", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/76", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/76/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/76/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/76", "id": 291767631, "node_id": "MDU6SXNzdWUyOTE3Njc2MzE=", "number": 76, "title": "'Invalid Argument' error when trying to create a UInput with EV_FF", "user": {"login": "quinnyo", "id": 3379314, "node_id": "MDQ6VXNlcjMzNzkzMTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3379314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quinnyo", "html_url": "https://github.com/quinnyo", "followers_url": "https://api.github.com/users/quinnyo/followers", "following_url": "https://api.github.com/users/quinnyo/following{/other_user}", "gists_url": "https://api.github.com/users/quinnyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/quinnyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quinnyo/subscriptions", "organizations_url": "https://api.github.com/users/quinnyo/orgs", "repos_url": "https://api.github.com/users/quinnyo/repos", "events_url": "https://api.github.com/users/quinnyo/events{/privacy}", "received_events_url": "https://api.github.com/users/quinnyo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-26T00:56:35Z", "updated_at": "2018-02-25T12:05:45Z", "closed_at": "2018-02-25T12:05:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Unable to create a UInput device from an xbox 360 controller due to the EV_FF capability.\r\nSimilar to #60 but the EV_FF capability needs to be filtered out as well as EV_SYN", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/73", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/73/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/73/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/73", "id": 282785898, "node_id": "MDU6SXNzdWUyODI3ODU4OTg=", "number": 73, "title": "Device has wrong __ne__ operator.", "user": {"login": "peter50216", "id": 891109, "node_id": "MDQ6VXNlcjg5MTEwOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/891109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter50216", "html_url": "https://github.com/peter50216", "followers_url": "https://api.github.com/users/peter50216/followers", "following_url": "https://api.github.com/users/peter50216/following{/other_user}", "gists_url": "https://api.github.com/users/peter50216/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter50216/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter50216/subscriptions", "organizations_url": "https://api.github.com/users/peter50216/orgs", "repos_url": "https://api.github.com/users/peter50216/repos", "events_url": "https://api.github.com/users/peter50216/events{/privacy}", "received_events_url": "https://api.github.com/users/peter50216/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-18T07:25:51Z", "updated_at": "2017-12-28T16:12:37Z", "closed_at": "2017-12-28T16:12:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n>>> import evdev\r\n>>> e = evdev.InputDevice(evdev.list_devices()[0])\r\n>>> e2 = evdev.InputDevice(evdev.list_devices()[0])\r\n>>> e == e2\r\nTrue\r\n>>> e != e2\r\nTrue\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/67", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/67/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/67/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/67", "id": 236275236, "node_id": "MDU6SXNzdWUyMzYyNzUyMzY=", "number": 67, "title": "Exceptions lost from async_read_one", "user": {"login": "0xabu", "id": 13037682, "node_id": "MDQ6VXNlcjEzMDM3Njgy", "avatar_url": "https://avatars1.githubusercontent.com/u/13037682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0xabu", "html_url": "https://github.com/0xabu", "followers_url": "https://api.github.com/users/0xabu/followers", "following_url": "https://api.github.com/users/0xabu/following{/other_user}", "gists_url": "https://api.github.com/users/0xabu/gists{/gist_id}", "starred_url": "https://api.github.com/users/0xabu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0xabu/subscriptions", "organizations_url": "https://api.github.com/users/0xabu/orgs", "repos_url": "https://api.github.com/users/0xabu/repos", "events_url": "https://api.github.com/users/0xabu/events{/privacy}", "received_events_url": "https://api.github.com/users/0xabu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-15T18:24:53Z", "updated_at": "2017-06-16T17:03:36Z", "closed_at": "2017-06-16T17:03:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have a USB device which sometimes disappears unexpectedly for a few ms and I'm trying to handle this cleanly in application-level code -- similar to issue #64, I get an OSError back from a read call, and need to respond by closing and waiting to reopen the device.\r\n\r\nI'm using `async_read_one()`. Unfortunately when the underlying (synchronous) `read_one()` call raises an exception, the exception leaks out of the future into the event loop. The fix that worked for me is to catch it and attach it to the future:\r\n\r\n```\r\n    def async_read_one(self):\r\n        future = asyncio.Future()\r\n        def read_next():\r\n            try:\r\n                future.set_result(self.read_one())\r\n            except Exception as ex:\r\n                future.set_exception(ex)\r\n        self._do_when_readable(read_next)\r\n        return future\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/66", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/66/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/66/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/66", "id": 233341940, "node_id": "MDU6SXNzdWUyMzMzNDE5NDA=", "number": 66, "title": "Installation issue: module 'evdev' has no attribute 'InputDevice'", "user": {"login": "kaisbensalah", "id": 27280717, "node_id": "MDQ6VXNlcjI3MjgwNzE3", "avatar_url": "https://avatars2.githubusercontent.com/u/27280717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaisbensalah", "html_url": "https://github.com/kaisbensalah", "followers_url": "https://api.github.com/users/kaisbensalah/followers", "following_url": "https://api.github.com/users/kaisbensalah/following{/other_user}", "gists_url": "https://api.github.com/users/kaisbensalah/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaisbensalah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaisbensalah/subscriptions", "organizations_url": "https://api.github.com/users/kaisbensalah/orgs", "repos_url": "https://api.github.com/users/kaisbensalah/repos", "events_url": "https://api.github.com/users/kaisbensalah/events{/privacy}", "received_events_url": "https://api.github.com/users/kaisbensalah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-03T03:43:36Z", "updated_at": "2017-06-03T17:35:06Z", "closed_at": "2017-06-03T17:35:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/63", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/63/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/63/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/63", "id": 181726187, "node_id": "MDU6SXNzdWUxODE3MjYxODc=", "number": 63, "title": "After update 0.6.3 error installing on Raspbian Jessie", "user": {"login": "meguia", "id": 5315107, "node_id": "MDQ6VXNlcjUzMTUxMDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5315107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meguia", "html_url": "https://github.com/meguia", "followers_url": "https://api.github.com/users/meguia/followers", "following_url": "https://api.github.com/users/meguia/following{/other_user}", "gists_url": "https://api.github.com/users/meguia/gists{/gist_id}", "starred_url": "https://api.github.com/users/meguia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meguia/subscriptions", "organizations_url": "https://api.github.com/users/meguia/orgs", "repos_url": "https://api.github.com/users/meguia/repos", "events_url": "https://api.github.com/users/meguia/events{/privacy}", "received_events_url": "https://api.github.com/users/meguia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-07T17:33:17Z", "updated_at": "2016-10-07T19:59:32Z", "closed_at": "2016-10-07T19:59:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using updated Raspbian Jessie with all the dependencies installed, now when I try to install with pip (or pip3)\n`sudo pip install evdev`\nThen when building 'evdev._ecodes' extension I get the following error:\n`In file included from /usr/include/python2.7/Python.h:126:0,\n                     from evdev/ecodes.c:2:\n    evdev/ecodes.c: In function \u2018moduleinit\u2019:\n    evdev/ecodes.c:69:29: error: \u2018BUS_RMI\u2019 undeclared (first use in this function)\n         PyModule_AddIntMacro(m, BUS_RMI);`\n\nThanks in advance!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/61", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/61/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/61/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/61", "id": 180635236, "node_id": "MDU6SXNzdWUxODA2MzUyMzY=", "number": 61, "title": "Pointer does not move with ecodes.EV_REL", "user": {"login": "om26er", "id": 6350837, "node_id": "MDQ6VXNlcjYzNTA4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6350837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/om26er", "html_url": "https://github.com/om26er", "followers_url": "https://api.github.com/users/om26er/followers", "following_url": "https://api.github.com/users/om26er/following{/other_user}", "gists_url": "https://api.github.com/users/om26er/gists{/gist_id}", "starred_url": "https://api.github.com/users/om26er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/om26er/subscriptions", "organizations_url": "https://api.github.com/users/om26er/orgs", "repos_url": "https://api.github.com/users/om26er/repos", "events_url": "https://api.github.com/users/om26er/events{/privacy}", "received_events_url": "https://api.github.com/users/om26er/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-03T13:04:37Z", "updated_at": "2016-10-03T19:40:09Z", "closed_at": "2016-10-03T14:19:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to move the mouse visually on screen for an automation tool that I am working on, it seems the mouse pointer does not move with ecodes.EV_REL. I am working on Ubuntu and I tried on both X11 and Mir display server. python-uinput seems to be working fine though, but our project heavily uses python-evdev so we need to keep using it. Below is the code that reproduces the issue.\n\n```\nfrom time import sleep\n\nfrom evdev import UInput, ecodes\n\nui = UInput()\nfor i in range(20):\n    ui.write(ecodes.EV_REL, ecodes.REL_X, 5)\n    ui.write(ecodes.EV_REL, ecodes.REL_Y, 5)\n    ui.syn()\n    sleep(0.01)\n```\n\nThat codes does run without errors but it does not do anything, OTH, mouse click events do work.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/60", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/60/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/60/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/60", "id": 170293469, "node_id": "MDU6SXNzdWUxNzAyOTM0Njk=", "number": 60, "title": "OSError: [Errno 22] Invalid argument while copy capabilities from InputDevice to UInput", "user": {"login": "chrys87", "id": 13770812, "node_id": "MDQ6VXNlcjEzNzcwODEy", "avatar_url": "https://avatars0.githubusercontent.com/u/13770812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrys87", "html_url": "https://github.com/chrys87", "followers_url": "https://api.github.com/users/chrys87/followers", "following_url": "https://api.github.com/users/chrys87/following{/other_user}", "gists_url": "https://api.github.com/users/chrys87/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrys87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrys87/subscriptions", "organizations_url": "https://api.github.com/users/chrys87/orgs", "repos_url": "https://api.github.com/users/chrys87/repos", "events_url": "https://api.github.com/users/chrys87/events{/privacy}", "received_events_url": "https://api.github.com/users/chrys87/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-09T23:17:25Z", "updated_at": "2016-10-16T20:30:28Z", "closed_at": "2016-08-30T08:17:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Howdy,\nI currently write a screenreader deamon for linux.\nfor this i need to \"consume\" the shortcuts for the screenreader because there should no other programm react to it. so i need to grab the InputDevices -> Check ist the keypress for me? No -> write it back to the \"normal\" input line for other programms.\nso i try to generate a UInput class per InputDevice and i like to have the same capabilities (because later i just forewart the input)\nIf i define the UInput variable with (see example):\n\n`uDevices[fd] = UInput( dev.capabilities())`\n\ni get the following error:\n`Traceback (most recent call last):\n  File \"<stdin>\", line 7, in <module>\n  File \"/usr/lib/python3.5/site-packages/evdev/uinput.py\", line 104, in __init__\n    _uinput.enable(self.fd, etype, code)\nOSError: [Errno 22] Invalid argument`\n\nif i try something more simple it works:\n`\n    from evdev import UInput, AbsInfo, ecodes as e\n    t = UInput({ e.EV_KEY : [e.KEY_A, e.KEY_B]})`\n\nso somehow it seems that it is not able to parse.\n\nDid i something wrong? can I got this working somehow? is this maybe a bug?\n\nthe following example code gives me the error:\n\n``` python\nimport evdev\nfrom evdev import InputDevice, UInput\nfrom select import select\nimport time\n\niDevices = map(evdev.InputDevice, (evdev.list_devices()))\niDevices = {dev.fd: dev for dev in iDevices if dev.fn in ['/dev/input/event14']} # event14 is in my example a keyboard\nuDevices = {}\nfor fd in iDevices:\n    dev = iDevices[fd]\n    print(dev.capabilities(verbose=True))\n    print('-----------')\n    print(dev.capabilities(verbose=False))    \n    print('-----------')    \n    uDevices[fd] = UInput( dev.capabilities())\n```\n\nthe prints give me the following:\n\n```\n{('EV_MSC', 4): [('MSC_SCAN', 4)], ('EV_SYN', 0): [('SYN_REPORT', 0), ('SYN_CONFIG', 1), ('?', 4), ('?', 17), ('?', 20)], ('EV_KEY', 1): [('KEY_ESC', 1), ('KEY_1', 2), ('KEY_2', 3), ('KEY_3', 4), ('KEY_4', 5), ('KEY_5', 6), ('KEY_6', 7), ('KEY_7', 8), ('KEY_8', 9), ('KEY_9', 10), ('KEY_0', 11), ('KEY_MINUS', 12), ('KEY_EQUAL', 13), ('KEY_BACKSPACE', 14), ('KEY_TAB', 15), ('KEY_Q', 16), ('KEY_W', 17), ('KEY_E', 18), ('KEY_R', 19), ('KEY_T', 20), ('KEY_Y', 21), ('KEY_U', 22), ('KEY_I', 23), ('KEY_O', 24), ('KEY_P', 25), ('KEY_LEFTBRACE', 26), ('KEY_RIGHTBRACE', 27), ('KEY_ENTER', 28), ('KEY_LEFTCTRL', 29), ('KEY_A', 30), ('KEY_S', 31), ('KEY_D', 32), ('KEY_F', 33), ('KEY_G', 34), ('KEY_H', 35), ('KEY_J', 36), ('KEY_K', 37), ('KEY_L', 38), ('KEY_SEMICOLON', 39), ('KEY_APOSTROPHE', 40), ('KEY_GRAVE', 41), ('KEY_LEFTSHIFT', 42), ('KEY_BACKSLASH', 43), ('KEY_Z', 44), ('KEY_X', 45), ('KEY_C', 46), ('KEY_V', 47), ('KEY_B', 48), ('KEY_N', 49), ('KEY_M', 50), ('KEY_COMMA', 51), ('KEY_DOT', 52), ('KEY_SLASH', 53), ('KEY_RIGHTSHIFT', 54), ('KEY_KPASTERISK', 55), ('KEY_LEFTALT', 56), ('KEY_SPACE', 57), ('KEY_CAPSLOCK', 58), ('KEY_F1', 59), ('KEY_F2', 60), ('KEY_F3', 61), ('KEY_F4', 62), ('KEY_F5', 63), ('KEY_F6', 64), ('KEY_F7', 65), ('KEY_F8', 66), ('KEY_F9', 67), ('KEY_F10', 68), ('KEY_NUMLOCK', 69), ('KEY_SCROLLLOCK', 70), ('KEY_KP7', 71), ('KEY_KP8', 72), ('KEY_KP9', 73), ('KEY_KPMINUS', 74), ('KEY_KP4', 75), ('KEY_KP5', 76), ('KEY_KP6', 77), ('KEY_KPPLUS', 78), ('KEY_KP1', 79), ('KEY_KP2', 80), ('KEY_KP3', 81), ('KEY_KP0', 82), ('KEY_KPDOT', 83), ('KEY_ZENKAKUHANKAKU', 85), ('KEY_102ND', 86), ('KEY_F11', 87), ('KEY_F12', 88), ('KEY_RO', 89), ('KEY_KATAKANA', 90), ('KEY_HIRAGANA', 91), ('KEY_HENKAN', 92), ('KEY_KATAKANAHIRAGANA', 93), ('KEY_MUHENKAN', 94), ('KEY_KPJPCOMMA', 95), ('KEY_KPENTER', 96), ('KEY_RIGHTCTRL', 97), ('KEY_KPSLASH', 98), ('KEY_SYSRQ', 99), ('KEY_RIGHTALT', 100), ('KEY_HOME', 102), ('KEY_UP', 103), ('KEY_PAGEUP', 104), ('KEY_LEFT', 105), ('KEY_RIGHT', 106), ('KEY_END', 107), ('KEY_DOWN', 108), ('KEY_PAGEDOWN', 109), ('KEY_INSERT', 110), ('KEY_DELETE', 111), (['KEY_MIN_INTERESTING', 'KEY_MUTE'], 113), ('KEY_VOLUMEDOWN', 114), ('KEY_VOLUMEUP', 115), ('KEY_POWER', 116), ('KEY_KPEQUAL', 117), ('KEY_PAUSE', 119), ('KEY_KPCOMMA', 121), (['KEY_HANGEUL', 'KEY_HANGUEL'], 122), ('KEY_HANJA', 123), ('KEY_YEN', 124), ('KEY_LEFTMETA', 125), ('KEY_RIGHTMETA', 126), ('KEY_COMPOSE', 127), ('KEY_STOP', 128), ('KEY_AGAIN', 129), ('KEY_PROPS', 130), ('KEY_UNDO', 131), ('KEY_FRONT', 132), ('KEY_COPY', 133), ('KEY_OPEN', 134), ('KEY_PASTE', 135), ('KEY_FIND', 136), ('KEY_CUT', 137), ('KEY_HELP', 138), ('KEY_F13', 183), ('KEY_F14', 184), ('KEY_F15', 185), ('KEY_F16', 186), ('KEY_F17', 187), ('KEY_F18', 188), ('KEY_F19', 189), ('KEY_F20', 190), ('KEY_F21', 191), ('KEY_F22', 192), ('KEY_F23', 193), ('KEY_F24', 194), ('KEY_UNKNOWN', 240)], ('EV_LED', 17): [('LED_NUML', 0), ('LED_CAPSL', 1), ('LED_SCROLLL', 2), ('LED_COMPOSE', 3), ('LED_KANA', 4)]}\n-----------\n{0: [0, 1, 4, 17, 20], 1: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 240], 4: [4], 17: [0, 1, 2, 3, 4]}\n-----------\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/59", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/59/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/59/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/59", "id": 154200267, "node_id": "MDU6SXNzdWUxNTQyMDAyNjc=", "number": 59, "title": "Hardcoded values in setup.py ", "user": {"login": "jjungo", "id": 6055936, "node_id": "MDQ6VXNlcjYwNTU5MzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/6055936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjungo", "html_url": "https://github.com/jjungo", "followers_url": "https://api.github.com/users/jjungo/followers", "following_url": "https://api.github.com/users/jjungo/following{/other_user}", "gists_url": "https://api.github.com/users/jjungo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjungo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjungo/subscriptions", "organizations_url": "https://api.github.com/users/jjungo/orgs", "repos_url": "https://api.github.com/users/jjungo/repos", "events_url": "https://api.github.com/users/jjungo/events{/privacy}", "received_events_url": "https://api.github.com/users/jjungo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-11T09:37:02Z", "updated_at": "2016-06-05T21:25:28Z", "closed_at": "2016-06-05T21:25:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nIn [setup.py](https://github.com/gvalkov/python-evdev/blob/master/setup.py#L69) and [gencodes.py](https://github.com/gvalkov/python-evdev/blob/master/evdev/genecodes.py#L14), locations of `input.h` and `input-event-codes.h` are hardcoded. It seems problematic for cross-compiling.\n\nExample: I use buildroot and try to integrate python-evdev in my local buildroot repo. During the cross-compilation of python-evdev, `gencodes.py` parses theses two headers files in order to generate a `encode.c`. Then the compiler try to compile with the target header files which are located in the buildroot path.\n\nI temporarily changed theses hardocded values to point on my buildroot local repository, but it's ugly and couldn't be automatized.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/57", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/57/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/57/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/57", "id": 142219579, "node_id": "MDU6SXNzdWUxNDIyMTk1Nzk=", "number": 57, "title": "Add a description of what is/not working", "user": {"login": "mncharity", "id": 104805, "node_id": "MDQ6VXNlcjEwNDgwNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/104805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mncharity", "html_url": "https://github.com/mncharity", "followers_url": "https://api.github.com/users/mncharity/followers", "following_url": "https://api.github.com/users/mncharity/following{/other_user}", "gists_url": "https://api.github.com/users/mncharity/gists{/gist_id}", "starred_url": "https://api.github.com/users/mncharity/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mncharity/subscriptions", "organizations_url": "https://api.github.com/users/mncharity/orgs", "repos_url": "https://api.github.com/users/mncharity/repos", "events_url": "https://api.github.com/users/mncharity/events{/privacy}", "received_events_url": "https://api.github.com/users/mncharity/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-20T23:14:22Z", "updated_at": "2018-09-01T17:53:45Z", "closed_at": "2018-09-01T17:53:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Some uses of uinput are not currently supported (for example, rumblers: #23, [ff branch](/gvalkov/python-evdev/tree/ff)).  Which, doesn't seem to be documented.\n\nAdding to the documentation, a brief description of what is and isn't working, might help potential users anticipate whether python-evdev is appropriate for their intended use.\n\nHere is a strawman draft:\n## Scope and status\n\nAll keyboard and mice events should work.  Rumblers #23 currently do not work.  Joysticks, touchpads, tablets, cameras, force feedback, and less common devices _probably work / probably don't work / sometimes work / partially work / haven't been tested / are not supported_.\n\nSome characters, such as `:` (colon), cannot easily be generated from scratch #7.  Translating them into UInput events would require knowing the kernel keyboard translation table, and there is no python equivalent of `dumpkeys`.  Consider using [PyUserInput](https://github.com/PyUserInput/PyUserInput) instead.\n\nRelated projects include: [python-uinput](https://pypi.python.org/pypi/python-uinput/); [uinput-mapper](https://github.com/MerlijnWajer/uinput-mapper); [PyUserInput](https://github.com/PyUserInput/PyUserInput); [pygame](http://www.pygame.org/).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/45", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/45/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/45/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/45", "id": 129926213, "node_id": "MDU6SXNzdWUxMjk5MjYyMTM=", "number": 45, "title": "Suport for read() on UInput", "user": {"login": "paulo-raca", "id": 1072660, "node_id": "MDQ6VXNlcjEwNzI2NjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1072660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulo-raca", "html_url": "https://github.com/paulo-raca", "followers_url": "https://api.github.com/users/paulo-raca/followers", "following_url": "https://api.github.com/users/paulo-raca/following{/other_user}", "gists_url": "https://api.github.com/users/paulo-raca/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulo-raca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulo-raca/subscriptions", "organizations_url": "https://api.github.com/users/paulo-raca/orgs", "repos_url": "https://api.github.com/users/paulo-raca/repos", "events_url": "https://api.github.com/users/paulo-raca/events{/privacy}", "received_events_url": "https://api.github.com/users/paulo-raca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-30T01:34:13Z", "updated_at": "2016-02-02T21:20:55Z", "closed_at": "2016-02-02T21:20:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm using UInput to connect a device with leds and a buzzer (EV_LED and EV_SND)\n\nPython-evdev should support a `read()` operation that lets me set those.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/43", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/43/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/43/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/43", "id": 128378330, "node_id": "MDU6SXNzdWUxMjgzNzgzMzA=", "number": 43, "title": "Import error with Linux kernel 4.4.0", "user": {"login": "arcriley", "id": 1917169, "node_id": "MDQ6VXNlcjE5MTcxNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1917169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arcriley", "html_url": "https://github.com/arcriley", "followers_url": "https://api.github.com/users/arcriley/followers", "following_url": "https://api.github.com/users/arcriley/following{/other_user}", "gists_url": "https://api.github.com/users/arcriley/gists{/gist_id}", "starred_url": "https://api.github.com/users/arcriley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arcriley/subscriptions", "organizations_url": "https://api.github.com/users/arcriley/orgs", "repos_url": "https://api.github.com/users/arcriley/repos", "events_url": "https://api.github.com/users/arcriley/events{/privacy}", "received_events_url": "https://api.github.com/users/arcriley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-01-24T07:12:34Z", "updated_at": "2017-02-20T20:12:17Z", "closed_at": "2017-02-20T20:12:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using Gentoo's gentoo-sources-4.4.0, python-evdev generates from a input.h which causes it to fail on input:\n# python\n\nPython 2.7.11 (default, Jan 21 2016, 21:00:40) \n[GCC 5.3.0] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n> > > from evdev import UInput, UInputError, ecodes\n> > > Traceback (most recent call last):\n> > >   File \"<stdin>\", line 1, in <module>\n> > >   File \"/usr/lib64/python2.7/site-packages/evdev/**init**.py\", line 5, in <module>\n> > >     from evdev.device import DeviceInfo, InputDevice, AbsInfo\n> > >   File \"/usr/lib64/python2.7/site-packages/evdev/device.py\", line 7, in <module>\n> > >     from evdev import _input, _uinput, ecodes, util\n> > >   File \"/usr/lib64/python2.7/site-packages/evdev/ecodes.py\", line 75, in <module>\n> > >     keys.update(BTN)\n> > > NameError: name 'BTN' is not defined\n\nThis affects at least python-evdev 0.4.5 and 0.5.0 and can be fixed by downgrading both the kernel and sys-kernel/linux-headers to version 4.3, then rebuilding python-evdev.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/38", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/38/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/38/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/38", "id": 105567434, "node_id": "MDU6SXNzdWUxMDU1Njc0MzQ=", "number": 38, "title": "Send vibration to gamepad", "user": {"login": "kharlashkin", "id": 10542930, "node_id": "MDQ6VXNlcjEwNTQyOTMw", "avatar_url": "https://avatars3.githubusercontent.com/u/10542930?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kharlashkin", "html_url": "https://github.com/kharlashkin", "followers_url": "https://api.github.com/users/kharlashkin/followers", "following_url": "https://api.github.com/users/kharlashkin/following{/other_user}", "gists_url": "https://api.github.com/users/kharlashkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/kharlashkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kharlashkin/subscriptions", "organizations_url": "https://api.github.com/users/kharlashkin/orgs", "repos_url": "https://api.github.com/users/kharlashkin/repos", "events_url": "https://api.github.com/users/kharlashkin/events{/privacy}", "received_events_url": "https://api.github.com/users/kharlashkin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-09-09T10:17:30Z", "updated_at": "2018-08-27T18:14:02Z", "closed_at": "2018-08-27T18:14:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\nI'm try send vibration to Xbox 360 controller with python. Do you have example of sending vibroeffect with evdev?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/37", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/37/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/37/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/37", "id": 104979263, "node_id": "MDU6SXNzdWUxMDQ5NzkyNjM=", "number": 37, "title": "Not working inside loop in Raspberry Pi", "user": {"login": "squgeim", "id": 4996818, "node_id": "MDQ6VXNlcjQ5OTY4MTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/4996818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/squgeim", "html_url": "https://github.com/squgeim", "followers_url": "https://api.github.com/users/squgeim/followers", "following_url": "https://api.github.com/users/squgeim/following{/other_user}", "gists_url": "https://api.github.com/users/squgeim/gists{/gist_id}", "starred_url": "https://api.github.com/users/squgeim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/squgeim/subscriptions", "organizations_url": "https://api.github.com/users/squgeim/orgs", "repos_url": "https://api.github.com/users/squgeim/repos", "events_url": "https://api.github.com/users/squgeim/events{/privacy}", "received_events_url": "https://api.github.com/users/squgeim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-09-04T22:16:27Z", "updated_at": "2018-08-27T18:11:53Z", "closed_at": "2018-08-27T18:11:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to do a mouse button click when I receive some input from serial in Raspberry Pi. When done in a shell with just evdev, it works, but when done inside a loop that monitors the serial, it does not work. It gives no error or any message in the shell. The same code works in a laptop though.\n\nIs is an issue with the Raspberry Pi (ArchLinuxARM) or some issue inside python-evdev?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/36", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/36/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/36/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/36", "id": 93377607, "node_id": "MDU6SXNzdWU5MzM3NzYwNw==", "number": 36, "title": "debian 8.0 install through pip", "user": {"login": "j41ss", "id": 7556861, "node_id": "MDQ6VXNlcjc1NTY4NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/7556861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j41ss", "html_url": "https://github.com/j41ss", "followers_url": "https://api.github.com/users/j41ss/followers", "following_url": "https://api.github.com/users/j41ss/following{/other_user}", "gists_url": "https://api.github.com/users/j41ss/gists{/gist_id}", "starred_url": "https://api.github.com/users/j41ss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j41ss/subscriptions", "organizations_url": "https://api.github.com/users/j41ss/orgs", "repos_url": "https://api.github.com/users/j41ss/repos", "events_url": "https://api.github.com/users/j41ss/events{/privacy}", "received_events_url": "https://api.github.com/users/j41ss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-06T21:06:32Z", "updated_at": "2015-07-07T17:48:57Z", "closed_at": "2015-07-07T17:48:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\nimport evdev\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"evdev/__init__.py\", line 7, in <module>\n    from evdev.device import DeviceInfo, InputDevice, AbsInfo\n  File \"evdev/device.py\", line 8, in <module>\n    from evdev import _input, _uinput, ecodes, util\n  File \"evdev/ecodes.py\", line 42, in <module>\n    from evdev import _ecodes\nImportError: cannot import name _ecodes\n```\n\nappend to man notify about correct global enviroment variable PYTHON_PATH=\"/usr/local/lib/python2.7/\"\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/35", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/35/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/35/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/35", "id": 85912251, "node_id": "MDU6SXNzdWU4NTkxMjI1MQ==", "number": 35, "title": "Read-only opening of devices", "user": {"login": "sim642", "id": 378740, "node_id": "MDQ6VXNlcjM3ODc0MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/378740?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sim642", "html_url": "https://github.com/sim642", "followers_url": "https://api.github.com/users/sim642/followers", "following_url": "https://api.github.com/users/sim642/following{/other_user}", "gists_url": "https://api.github.com/users/sim642/gists{/gist_id}", "starred_url": "https://api.github.com/users/sim642/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sim642/subscriptions", "organizations_url": "https://api.github.com/users/sim642/orgs", "repos_url": "https://api.github.com/users/sim642/repos", "events_url": "https://api.github.com/users/sim642/events{/privacy}", "received_events_url": "https://api.github.com/users/sim642/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-07T15:42:09Z", "updated_at": "2015-06-16T18:12:40Z", "closed_at": "2015-06-16T18:12:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently InputDevice wants to open the device `os.RDWR` ([code](https://github.com/gvalkov/python-evdev/blob/master/evdev/device.py#L93)) but there's good reason to be able to open a device `os.RDONLY`, either if there's no intention to modify anything or there's not sufficient permissions.\n\nMaking a custom derived class with changed `__init__` seems to work but I think it could very well be included in the library:\n\n``` py\nfrom evdev import InputDevice, _input, DeviceInfo\nimport os\n\nclass ReadInputDevice(InputDevice):\n    def __init__(self, dev):\n        '''\n        :param dev: path to input device\n        '''\n\n        #: Path to input device.\n        self.fn = dev\n\n        #: A non-blocking file descriptor to the device file.\n        self.fd = os.open(dev, os.O_RDONLY | os.O_NONBLOCK)\n\n        # Returns (bustype, vendor, product, version, name, phys, capabilities).\n        info_res = _input.ioctl_devinfo(self.fd)\n\n        #: A :class:`DeviceInfo <evdev.device.DeviceInfo>` instance.\n        self.info = DeviceInfo(*info_res[:4])\n\n        #: The name of the event device.\n        self.name = info_res[4]\n\n        #: The physical topology of the device.\n        self.phys = info_res[5]\n\n        #: The evdev protocol version.\n        self.version = _input.ioctl_EVIOCGVERSION(self.fd)\n\n        #: The raw dictionary of device capabilities - see `:func:capabilities()`.\n        self._rawcapabilities = _input.ioctl_capabilities(self.fd)\n\n        #: The number of force feedback effects the device can keep in its memory.\n        self.ff_effects_count = _input.ioctl_EVIOCGEFFECTS(self.fd)\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/34", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/34/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/34/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/34", "id": 85048721, "node_id": "MDU6SXNzdWU4NTA0ODcyMQ==", "number": 34, "title": "Installing python-evdev on arduino yun - fhonour-copts error", "user": {"login": "vrbs", "id": 12746400, "node_id": "MDQ6VXNlcjEyNzQ2NDAw", "avatar_url": "https://avatars3.githubusercontent.com/u/12746400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrbs", "html_url": "https://github.com/vrbs", "followers_url": "https://api.github.com/users/vrbs/followers", "following_url": "https://api.github.com/users/vrbs/following{/other_user}", "gists_url": "https://api.github.com/users/vrbs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrbs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrbs/subscriptions", "organizations_url": "https://api.github.com/users/vrbs/orgs", "repos_url": "https://api.github.com/users/vrbs/repos", "events_url": "https://api.github.com/users/vrbs/events{/privacy}", "received_events_url": "https://api.github.com/users/vrbs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-04T11:23:08Z", "updated_at": "2016-03-10T15:48:23Z", "closed_at": "2015-06-06T11:13:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi:\nI am trying to install python-evdev on my arduino yun using  \"./setup.py install\". I get the following error: Any suggestion will be appreciated (bear in mind that I am a newbie).\n\n```\n./setup.py install\n\nrunning install\n\nrunning bdist_egg\n\nwriting ecodes.c (using /usr/include/linux/input.h)\n\nrunning egg_info\n\nwriting evdev.egg-info/PKG-INFO\n\nwriting top-level names to evdev.egg-info/top_level.txt\n\nwriting dependency_links to evdev.egg-info/dependency_links.txt\n\nreading manifest file 'evdev.egg-info/SOURCES.txt'\n\nreading manifest template 'MANIFEST.in'\n\nwriting manifest file 'evdev.egg-info/SOURCES.txt'\n\ninstalling library code to build/bdist.linux-mips/egg\n\nrunning install_lib\n\nrunning build_py\n\nrunning build_ext\n\nbuilding 'evdev._input' extension\n\nmips-openwrt-linux-uclibc-gcc -fno-strict-aliasing -Os -pipe -mips32r2 \n-mtune=mips32r2 -fno-caller-saves -fhonour-copts -Wno-error=unused-but-set-variable -msoft-float -DNDEBUG -Os -pipe -mips32r2 -mtune=mips32r2 -fno-caller-saves -fhonour-copts -Wno-error=unused-but-set-variable -msoft-float -fPIC -I/usr/include/python2.7 -c evdev/input.c -o build/temp.linux-mips-2.7/evdev/input.o -std=c99 -Wno-error=declaration-after-statement\n\ncc1: error: unrecognized command line option '-fhonour-copts'\n\ncc1: error: unrecognized command line option '-fhonour-copts'\n\nerror: command 'mips-openwrt-linux-uclibc-gcc' failed with exit status 1\n\nroot@Arduino:/mnt/sda1/python-evdev-0.4.7# cc1: error: unrecognized command \nline option '-fhonour-copts'\n-ash: cc1:: not found\nroot@Arduino:/mnt/sda1/python-evdev-0.4.7# cc1: error: unrecognized command line option '-fhonour-copts'\n-ash: cc1:: not found\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/33", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/33/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/33/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/33", "id": 78997809, "node_id": "MDU6SXNzdWU3ODk5NzgwOQ==", "number": 33, "title": "Break waiting for event loop on time period", "user": {"login": "xyronexus", "id": 779180, "node_id": "MDQ6VXNlcjc3OTE4MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/779180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xyronexus", "html_url": "https://github.com/xyronexus", "followers_url": "https://api.github.com/users/xyronexus/followers", "following_url": "https://api.github.com/users/xyronexus/following{/other_user}", "gists_url": "https://api.github.com/users/xyronexus/gists{/gist_id}", "starred_url": "https://api.github.com/users/xyronexus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xyronexus/subscriptions", "organizations_url": "https://api.github.com/users/xyronexus/orgs", "repos_url": "https://api.github.com/users/xyronexus/repos", "events_url": "https://api.github.com/users/xyronexus/events{/privacy}", "received_events_url": "https://api.github.com/users/xyronexus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-21T13:34:44Z", "updated_at": "2018-08-27T18:12:00Z", "closed_at": "2018-08-27T18:12:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm wondering how to break wait for event loop if some time is gonna pass by. Dont know how to do this in evdev\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/32", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/32/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/32/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/32", "id": 74933337, "node_id": "MDU6SXNzdWU3NDkzMzMzNw==", "number": 32, "title": "InputDevice.read() - Recource temporarily unaivalable", "user": {"login": "Avraamu", "id": 7830106, "node_id": "MDQ6VXNlcjc4MzAxMDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7830106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Avraamu", "html_url": "https://github.com/Avraamu", "followers_url": "https://api.github.com/users/Avraamu/followers", "following_url": "https://api.github.com/users/Avraamu/following{/other_user}", "gists_url": "https://api.github.com/users/Avraamu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Avraamu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Avraamu/subscriptions", "organizations_url": "https://api.github.com/users/Avraamu/orgs", "repos_url": "https://api.github.com/users/Avraamu/repos", "events_url": "https://api.github.com/users/Avraamu/events{/privacy}", "received_events_url": "https://api.github.com/users/Avraamu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-10T14:43:37Z", "updated_at": "2015-05-16T16:24:57Z", "closed_at": "2015-05-16T16:24:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \nI'm trying to read out the axis of a \"Logitech Cordless RumblePad 2\", not without trouble however...\nI am able to read out the events coming from the device with .read_loop() (events_get in the sample code) and from read_one.  But I am unable to to read from the read() buffer (get_axis_pos in example).\n\nI'm using Ubuntu 14.04.2 LTS\n\nDumbed down the code I am using looks like this:\n\n```\nimport evdev\nimport logging\n\ncontroller_name = \"Logitech Logitech Cordless RumblePad 2\"\n\nlogging.basicConfig(level=logging.DEBUG, format=\"[%(asctime)s] %(threadName)s %(message)s\", datefmt=\"%H:%M:%S\")\nlogging.info(\"Controller output script started\")\n\ndef main():\n    controller = ControllerInput(controller_name)\n    while True:\n        controller.get_axis_pos()\n\n\nclass ControllerInput():\n    def __init__(self, controller_name):\n\n        devices = [evdev.InputDevice(fn) for fn in evdev.list_devices()]\n        logging.debug(\"Found devices: \" + str(len(devices)))\n\n        dev_location = None\n        for dev in devices:\n            if dev.name == controller_name:\n                dev_location = dev.fn\n                logging.debug(\"Found desired device: \" + dev.name + \" at: \" + dev.fn)\n                break\n        if dev_location is None:\n            raise \"Device not found!\"\n\n        self.dev_obj = evdev.InputDevice(dev_location)\n        self.axispos = [128, 128, 128, 128]     #left x,y |right x,y\n\n    def events_get(self):\n        for event in self.dev_obj.read_loop():\n            if event.type != 0:\n                print(event)\n\n    def get_axis_pos(self):\n        event_gen = self.dev_obj.read()\n        if event_gen is not None:\n            for event in event_gen:\n                if event.type == 3:\n                    if event.code == 0:      #0: left x axis |1: left y axis\n                        self.axispos[0] = event.value\n                    elif event.code == 1:\n                        self.axispos[1] = event.value\n                    elif event.code == 2:   #2: right x axis |5: right y axis\n                        self.axispos[2] = event.value\n                    elif event.code == 5:\n                        self.axispos[3] = event.value\n\n        logging.debug(\"Controller axis: \" + str(self.axispos[0]))\n\nif __name__ == \"__main__\":\n    main()\n```\n\nThe error I get when running this code is:\n\n```\n[16:34:26] MainThread Controller output script started\n[16:34:26] MainThread Found devices: 1\n[16:34:26] MainThread Found desired device: Logitech Logitech Cordless RumblePad 2 at: /dev/input/event13\nTraceback (most recent call last):\n  File \"/media/philip/2.3.1-18-amd64/Projects/pycharm/quadcopter/controller.py\", line 139, in <module>\n    main()\n  File \"/media/philip/2.3.1-18-amd64/Projects/pycharm/quadcopter/controller.py\", line 48, in main\n    controller.get_axis_pos()\n  File \"/media/philip/2.3.1-18-amd64/Projects/pycharm/quadcopter/controller.py\", line 125, in get_axis_pos\n    for event in event_gen:\n  File \"/usr/lib/python3/dist-packages/evdev/device.py\", line 246, in read\n    events = _input.device_read_many(self.fd)\nBlockingIOError: [Errno 11] Resource temporarily unavailable\n```\n\nRegards Avraamu\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/30", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/30/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/30/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/30", "id": 40266880, "node_id": "MDU6SXNzdWU0MDI2Njg4MA==", "number": 30, "title": "Problem with the tutorial code for \"Specifying uinput device options\"", "user": {"login": "albertotonda", "id": 6748817, "node_id": "MDQ6VXNlcjY3NDg4MTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/6748817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albertotonda", "html_url": "https://github.com/albertotonda", "followers_url": "https://api.github.com/users/albertotonda/followers", "following_url": "https://api.github.com/users/albertotonda/following{/other_user}", "gists_url": "https://api.github.com/users/albertotonda/gists{/gist_id}", "starred_url": "https://api.github.com/users/albertotonda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albertotonda/subscriptions", "organizations_url": "https://api.github.com/users/albertotonda/orgs", "repos_url": "https://api.github.com/users/albertotonda/repos", "events_url": "https://api.github.com/users/albertotonda/events{/privacy}", "received_events_url": "https://api.github.com/users/albertotonda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-08-14T15:35:01Z", "updated_at": "2018-08-27T18:14:33Z", "closed_at": "2018-08-27T18:14:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all, thanks for your great work! :-)\n\nUsing the code provided in \"Specifying uinput device options\" raises an error (using Python2.7, python-evdev 0.4.5, Ubuntu 14.04) :\n\n```\ncap = { ecodes.EV_KEY : [ecodes.KEY_A, ecodes.KEY_B], ecodes.EV_ABS : [ (ecodes.ABS_X, AbsInfo(min=0, max=255, fuzz=0, flat=0)), (ecodes.ABS_Y, AbsInfo(0, 255, 0, 0)), (ecodes.ABS_MT_POSITION_X, (0, 255, 128, 0)) ] }\nTypeError: __new__() takes exactly 7 arguments (5 given)\n```\n\nProbably because the constructor of AbsInfo changed somehow? I can see how a new parameter called \"resolution\" has been added, but I don't understand what is the 7th argument. Correcting the AbsInfo instances with:\n\n```\nAbsInfo(min=0, max=255, fuzz=0, flat=0, resolution=0)\n```\n\nraises the same error\n\n```\nTypeError: __new__() takes exactly 7 arguments (6 given)\n```\n\nChanging the line to:\n\n```\nAbsInfo(0, 255, 0, 0, 0, 0)\n```\n\nexecutes without errors, but (and this might be a separate issue) the virtual mouse does not move, albeit the EV_KEY events work.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/28", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/28/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/28/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/28", "id": 35893148, "node_id": "MDU6SXNzdWUzNTg5MzE0OA==", "number": 28, "title": "Error in device.py", "user": {"login": "tobiz", "id": 3607256, "node_id": "MDQ6VXNlcjM2MDcyNTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3607256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobiz", "html_url": "https://github.com/tobiz", "followers_url": "https://api.github.com/users/tobiz/followers", "following_url": "https://api.github.com/users/tobiz/following{/other_user}", "gists_url": "https://api.github.com/users/tobiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobiz/subscriptions", "organizations_url": "https://api.github.com/users/tobiz/orgs", "repos_url": "https://api.github.com/users/tobiz/repos", "events_url": "https://api.github.com/users/tobiz/events{/privacy}", "received_events_url": "https://api.github.com/users/tobiz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-06-17T14:18:02Z", "updated_at": "2015-05-10T21:08:47Z", "closed_at": "2015-05-10T21:08:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Line 217 should be (under python 2.6):\n        return '{0!r}'.format(msg)\nNot:\n        return '{}({!r})'.format(msg)\nIs this valid syntax anyway, use of (), since {0}({!r}) doesn't work!\n\nHaving made my changes tutorial 1 now works under python 2.6\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/27", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/27/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/27/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/27", "id": 35885289, "node_id": "MDU6SXNzdWUzNTg4NTI4OQ==", "number": 27, "title": "Error in util.py", "user": {"login": "tobiz", "id": 3607256, "node_id": "MDQ6VXNlcjM2MDcyNTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3607256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobiz", "html_url": "https://github.com/tobiz", "followers_url": "https://api.github.com/users/tobiz/followers", "following_url": "https://api.github.com/users/tobiz/following{/other_user}", "gists_url": "https://api.github.com/users/tobiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobiz/subscriptions", "organizations_url": "https://api.github.com/users/tobiz/orgs", "repos_url": "https://api.github.com/users/tobiz/repos", "events_url": "https://api.github.com/users/tobiz/events{/privacy}", "received_events_url": "https://api.github.com/users/tobiz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-06-17T12:50:44Z", "updated_at": "2015-05-10T21:16:41Z", "closed_at": "2015-05-10T21:16:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "line 14 on util.py reads:\n\n```\nfns = glob.glob('{}/event*'.format(input_device_dir))\n```\n\nto work (on python 2.6) it has to read:\n\n```\nfns = glob.glob('{0}/event*'.format(input_device_dir))\n```\n\nIf you run the first tutorial example with the current util.py line 14 you get:\n\n```\n>>> devices = map(InputDevice, list_devices())\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python2.6/dist-packages/evdev/util.py\", line 14, in list_devices\n    fns = glob.glob('{}/event*'.format(input_device_dir))\nValueError: zero length field name in format\n```\n\nIf you run the modified line 14 you get:\n\n```\n>>> fns = glob.glob('{0}/event*'.format('/dev/input'))\n>>> print fns\n['/dev/input/event6', '/dev/input/event5', '/dev/input/event4', '/dev/input/event3', '/dev/input/event2', '/dev/input/event1', '/dev/input/event0']\n```\n\nHope that helps\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/24", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/24/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/24/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/24", "id": 31474027, "node_id": "MDU6SXNzdWUzMTQ3NDAyNw==", "number": 24, "title": "msg in DeviceInfo Class needs vendor and product swapping", "user": {"login": "m1ari", "id": 5360245, "node_id": "MDQ6VXNlcjUzNjAyNDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/5360245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m1ari", "html_url": "https://github.com/m1ari", "followers_url": "https://api.github.com/users/m1ari/followers", "following_url": "https://api.github.com/users/m1ari/following{/other_user}", "gists_url": "https://api.github.com/users/m1ari/gists{/gist_id}", "starred_url": "https://api.github.com/users/m1ari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m1ari/subscriptions", "organizations_url": "https://api.github.com/users/m1ari/orgs", "repos_url": "https://api.github.com/users/m1ari/repos", "events_url": "https://api.github.com/users/m1ari/events{/privacy}", "received_events_url": "https://api.github.com/users/m1ari/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-04-14T15:43:20Z", "updated_at": "2014-04-14T22:55:43Z", "closed_at": "2014-04-14T22:55:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Possibly linked to the change for issue #5 the msg string defined in the **str** method of DeviceInfo (currently line 71 of device.py) needs to swap the vendor and product names.\n\nfrom lsusb -v:\nBus 001 Device 004: ID 08ff:0009 AuthenTec, Inc. \n  idVendor           0x08ff AuthenTec, Inc.\n  idProduct          0x0009 \n\nfrom print str(dev.info):\nbus: 0003, product 08ff, vendor 0009, version 0110\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/21", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/21/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/21/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/21", "id": 25963984, "node_id": "MDU6SXNzdWUyNTk2Mzk4NA==", "number": 21, "title": "Typo on documentation.", "user": {"login": "elopio", "id": 617831, "node_id": "MDQ6VXNlcjYxNzgzMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/617831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elopio", "html_url": "https://github.com/elopio", "followers_url": "https://api.github.com/users/elopio/followers", "following_url": "https://api.github.com/users/elopio/following{/other_user}", "gists_url": "https://api.github.com/users/elopio/gists{/gist_id}", "starred_url": "https://api.github.com/users/elopio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elopio/subscriptions", "organizations_url": "https://api.github.com/users/elopio/orgs", "repos_url": "https://api.github.com/users/elopio/repos", "events_url": "https://api.github.com/users/elopio/events{/privacy}", "received_events_url": "https://api.github.com/users/elopio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-01-21T04:23:45Z", "updated_at": "2014-01-21T10:50:37Z", "closed_at": "2014-01-21T10:50:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There's a typo on the documentation of util.resolve_ecodes:\nhttps://github.com/gvalkov/python-evdev/blob/master/evdev/util.py#L70\n\nresoLve_ecodes\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/20", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/20/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/20/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/20", "id": 25039995, "node_id": "MDU6SXNzdWUyNTAzOTk5NQ==", "number": 20, "title": "Documentation bug: evdev.EV_KEY", "user": {"login": "parke", "id": 1454858, "node_id": "MDQ6VXNlcjE0NTQ4NTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1454858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/parke", "html_url": "https://github.com/parke", "followers_url": "https://api.github.com/users/parke/followers", "following_url": "https://api.github.com/users/parke/following{/other_user}", "gists_url": "https://api.github.com/users/parke/gists{/gist_id}", "starred_url": "https://api.github.com/users/parke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/parke/subscriptions", "organizations_url": "https://api.github.com/users/parke/orgs", "repos_url": "https://api.github.com/users/parke/repos", "events_url": "https://api.github.com/users/parke/events{/privacy}", "received_events_url": "https://api.github.com/users/parke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-01-03T22:34:49Z", "updated_at": "2014-01-04T08:43:22Z", "closed_at": "2014-01-03T22:50:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "On this page:\nhttp://pythonhosted.org/evdev/apidoc.html#module-evdev.ecodes\n\n> > > evdev.ecodes.EV[evdev.EV_KEY]\n> > > 'EV_KEY'\n\nShould probably be:\n\n> > > evdev.ecodes.EV[evdev.ecodes.EV_KEY]\n> > > 'EV_KEY'\n\n(Hmm, I not sure how to escape the above triple greater-than characters.)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/19", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/19/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/19/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/19", "id": 24496848, "node_id": "MDU6SXNzdWUyNDQ5Njg0OA==", "number": 19, "title": "Exception OSError in __del__ ignored", "user": {"login": "rolfmorel", "id": 854835, "node_id": "MDQ6VXNlcjg1NDgzNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/854835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rolfmorel", "html_url": "https://github.com/rolfmorel", "followers_url": "https://api.github.com/users/rolfmorel/followers", "following_url": "https://api.github.com/users/rolfmorel/following{/other_user}", "gists_url": "https://api.github.com/users/rolfmorel/gists{/gist_id}", "starred_url": "https://api.github.com/users/rolfmorel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rolfmorel/subscriptions", "organizations_url": "https://api.github.com/users/rolfmorel/orgs", "repos_url": "https://api.github.com/users/rolfmorel/repos", "events_url": "https://api.github.com/users/rolfmorel/events{/privacy}", "received_events_url": "https://api.github.com/users/rolfmorel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-12-18T15:32:57Z", "updated_at": "2013-12-19T22:59:57Z", "closed_at": "2013-12-19T22:59:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi gvalkov,\n\nI am using python-evdev on a project ([spacemouse-py](https://github.com/polyphemus/spacemouse-py)) to get rid of calls to a c library and so far I am really pleased with python-evdev.\n\nWith that out of the way; I am using python-evdev 0.4.2 on python 3.3.3 and 2.7.6 and am getting this error writing to ipython/the terminal:\nOn python2:\n\n```\nException OSError: (19, 'No such device') in <bound method InputDevice.__del__ of InputDevice(u'/dev/input/event3')> ignored\n```\n\nAnd on python3:\n\n```\nException OSError: OSError(9, 'Bad file descriptor') in <bound method InputDevice.__del__ of InputDevice('/dev/input/event3')> ignored\n```\n\nanytime an InputDevice is deleted or completely unreferenced.\n\nThe problem according to the python documentation: \n\n> Warning : Due to the precarious circumstances under which __del__() methods are invoked, exceptions that occur during their execution are ignored, and a warning is printed to sys.stderr instead. Also, when __del__() is invoked in response to a module being deleted (e.g., when execution of the program is done), other globals referenced by the __del__() method may already have been deleted or in the process of being torn down (e.g. the import machinery shutting down). For this reason, __del__() methods should do the absolute minimum needed to maintain external invariants. Starting with version 1.5, Python guarantees that globals whose name begins with a single underscore are deleted from their module before other globals are deleted; if no other references to such globals exist, this may help in assuring that imported modules are still available at the time when the __del__() method is called.\n\nWhich means any exceptions raised in a __del__ method will not be propagated but instead will be printed as a message to stderr.\n\nMy use case is that a device is disconnected while I still have an open connection to it. The device node will be removed and calling close on the still open file descriptor will generate this error.\n\nThe solution would be to just ignore this specific error by using an try: except: block in the __del__ method.\n\nAny thoughts on the matter would be appreciated.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/18", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/18/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/18/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/18", "id": 24234502, "node_id": "MDU6SXNzdWUyNDIzNDUwMg==", "number": 18, "title": "InputDevice does not close file handle", "user": {"login": "bhelm", "id": 769791, "node_id": "MDQ6VXNlcjc2OTc5MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/769791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhelm", "html_url": "https://github.com/bhelm", "followers_url": "https://api.github.com/users/bhelm/followers", "following_url": "https://api.github.com/users/bhelm/following{/other_user}", "gists_url": "https://api.github.com/users/bhelm/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhelm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhelm/subscriptions", "organizations_url": "https://api.github.com/users/bhelm/orgs", "repos_url": "https://api.github.com/users/bhelm/repos", "events_url": "https://api.github.com/users/bhelm/events{/privacy}", "received_events_url": "https://api.github.com/users/bhelm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-12-13T09:12:31Z", "updated_at": "2013-12-13T14:40:03Z", "closed_at": "2013-12-13T14:38:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "im using InputDevice in a loop to poll for a device to get online.\nim not keeping the reference to the InputDevice, so it should be subject to the garbage collection. But still, the open file descriptors are increasing until i hit the max open file limit.\n\ni have to call the .close() function of the InputDevice manually for proper closing.\n\nthis can be observed in the first example:\n\n``` python\n>>> from evdev import InputDevice, list_devices\n>>> devices = map(InputDevice, list_devices())\n>>> for dev in devices:\n        print( '%-20s %-32s %s' % (dev.fn, dev.name, dev.phys) )\n```\n\nif you then ls -la /proc/PID/fd you can see all the handles still open, even if the for dev in devices loop were in a already finished function and no references are left.\n\nif this is not a bug and cannot be done better, the .close() should be at least added the the samples.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/17", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/17/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/17/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/17", "id": 19992522, "node_id": "MDU6SXNzdWUxOTk5MjUyMg==", "number": 17, "title": "Problem with d-pad detection", "user": {"login": "cjeanneret", "id": 82490, "node_id": "MDQ6VXNlcjgyNDkw", "avatar_url": "https://avatars0.githubusercontent.com/u/82490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjeanneret", "html_url": "https://github.com/cjeanneret", "followers_url": "https://api.github.com/users/cjeanneret/followers", "following_url": "https://api.github.com/users/cjeanneret/following{/other_user}", "gists_url": "https://api.github.com/users/cjeanneret/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjeanneret/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjeanneret/subscriptions", "organizations_url": "https://api.github.com/users/cjeanneret/orgs", "repos_url": "https://api.github.com/users/cjeanneret/repos", "events_url": "https://api.github.com/users/cjeanneret/events{/privacy}", "received_events_url": "https://api.github.com/users/cjeanneret/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-09-24T17:20:06Z", "updated_at": "2013-09-25T18:18:21Z", "closed_at": "2013-09-24T19:06:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\nI just bought a \"retro\" gamepad, with 8 buttons and a directional pad (d-pad).\nButtons are detected and can be separated (though ecodes are a bit strange \u2014 but this isn't an issue).\n\nD-pad on the contrary seems to be a bit harder to understand\u2026\nHere's a print of caught events:\n\n```\n# UP\nevent at 1380042926.679244, code 01, type 03, val 00\nevent at 1380042926.679262, code 00, type 00, val 00\nevent at 1380042926.767252, code 01, type 03, val 127\nevent at 1380042926.767270, code 00, type 00, val 00\n# RIGHT\nevent at 1380042927.919373, code 00, type 03, val 255\nevent at 1380042927.919392, code 00, type 00, val 00\nevent at 1380042927.983368, code 00, type 03, val 127\nevent at 1380042927.983387, code 00, type 00, val 00\n# BOTTOM\nevent at 1380042929.063476, code 01, type 03, val 255\nevent at 1380042929.063495, code 00, type 00, val 00\nevent at 1380042929.111483, code 01, type 03, val 127\nevent at 1380042929.111500, code 00, type 00, val 00\n# LEFT\nevent at 1380042930.175583, code 00, type 03, val 00\nevent at 1380042930.175603, code 00, type 00, val 00\nevent at 1380042930.263594, code 00, type 03, val 127\nevent at 1380042930.263612, code 00, type 00, val 00\n```\n\nAny advice on how to use those values ? Each press-release seems to do four events, as you can see -.-'.\n\nThank you for your time!\n\nCheers,\n\nC.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/15", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/15/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/15/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/15", "id": 17401944, "node_id": "MDU6SXNzdWUxNzQwMTk0NA==", "number": 15, "title": "Loop stuck, runs only once on each keypress", "user": {"login": "bskrt", "id": 747278, "node_id": "MDQ6VXNlcjc0NzI3OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/747278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bskrt", "html_url": "https://github.com/bskrt", "followers_url": "https://api.github.com/users/bskrt/followers", "following_url": "https://api.github.com/users/bskrt/following{/other_user}", "gists_url": "https://api.github.com/users/bskrt/gists{/gist_id}", "starred_url": "https://api.github.com/users/bskrt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bskrt/subscriptions", "organizations_url": "https://api.github.com/users/bskrt/orgs", "repos_url": "https://api.github.com/users/bskrt/repos", "events_url": "https://api.github.com/users/bskrt/events{/privacy}", "received_events_url": "https://api.github.com/users/bskrt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2013-07-30T15:23:21Z", "updated_at": "2015-05-16T16:24:36Z", "closed_at": "2015-05-16T16:24:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm working on a project that needs to do certain things on specific keypresses.\n\nTo do this I'm using a loop to check the value of the pressed key and do something accordingly. The problem I'm having is that the while loop is interrupted whenever I'm using the getKey() function, so the rest of the loop only runs once after each keypress.\n\nI'm probably doing something very basic horribly wrong as I've just started out with python recently. A push in the right direction would be of great help!\n\n```\nfrom evdev import InputDevice, list_devices, categorize, ecodes\n\ndev = InputDevice('/dev/input/event0')\ndef getKey():\n    for event in dev.read_loop():\n        if event.type == ecodes.EV_KEY:\n            keybrd = categorize(event)\n            if keybrd.keystate == keybrd.key_down:\n                c = keybrd.keycode\n                return c\n                c = ''\n\nwhile 42:\n    c = getKey()\n    print 'expected to be looping'\n\n    if c == 'KEY_Z':\n        print 'dosomething'\n    if c == 'KEY_Q':\n        print 'dosomethingelse'\n    runSomeOtherFunctionThatNeedsToBeLooped()\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/14", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/14/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/14/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/14", "id": 16928875, "node_id": "MDU6SXNzdWUxNjkyODg3NQ==", "number": 14, "title": "c extensions functions memory leak", "user": {"login": "madskaddie", "id": 37925, "node_id": "MDQ6VXNlcjM3OTI1", "avatar_url": "https://avatars2.githubusercontent.com/u/37925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madskaddie", "html_url": "https://github.com/madskaddie", "followers_url": "https://api.github.com/users/madskaddie/followers", "following_url": "https://api.github.com/users/madskaddie/following{/other_user}", "gists_url": "https://api.github.com/users/madskaddie/gists{/gist_id}", "starred_url": "https://api.github.com/users/madskaddie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madskaddie/subscriptions", "organizations_url": "https://api.github.com/users/madskaddie/orgs", "repos_url": "https://api.github.com/users/madskaddie/repos", "events_url": "https://api.github.com/users/madskaddie/events{/privacy}", "received_events_url": "https://api.github.com/users/madskaddie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-07-18T16:14:51Z", "updated_at": "2013-07-19T17:02:23Z", "closed_at": "2013-07-19T17:02:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "When deallocating InputDevice objects the memory is not restored.\n\nThis problem was spotted because a problematic USB bus resets randomly. The code needed to workaround this fact, creates a new InputDevice on demand. The memory is allways increasing. Try this to watch:\n\n``` python\nfor i in xrange(10000):\n  a = InputDevice(path)\n  a.close() \n```\n\nI looked at the C [code](https://github.com/gvalkov/python-evdev/blob/master/evdev/input.c) and it seems that the ref count calls [see this article](http://robinelvin.wordpress.com/2011/03/24/python-c-extension-memory-leak/) are missing and thus the memory is not released. This is just a guess - no experience with python C extensions...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/10", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/10/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/10/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/10", "id": 15163373, "node_id": "MDU6SXNzdWUxNTE2MzM3Mw==", "number": 10, "title": "Keyboard LED indicators don't work when grab device", "user": {"login": "ellysh", "id": 1086198, "node_id": "MDQ6VXNlcjEwODYxOTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1086198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellysh", "html_url": "https://github.com/ellysh", "followers_url": "https://api.github.com/users/ellysh/followers", "following_url": "https://api.github.com/users/ellysh/following{/other_user}", "gists_url": "https://api.github.com/users/ellysh/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellysh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellysh/subscriptions", "organizations_url": "https://api.github.com/users/ellysh/orgs", "repos_url": "https://api.github.com/users/ellysh/repos", "events_url": "https://api.github.com/users/ellysh/events{/privacy}", "received_events_url": "https://api.github.com/users/ellysh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-06-05T10:26:58Z", "updated_at": "2013-07-01T10:57:02Z", "closed_at": "2013-07-01T10:57:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \n\nI have a question about your code sample from this issue:\n[link](https://github.com/gvalkov/python-evdev/issues/3#issuecomment-11841777)\n\nThis is source code:\n\n```\ndev = InputDevice(...)\ndev.grab()\n\nfor ev in dev.read_loop():\n    if ev.code not in (KEY_LEFTCTRL, KEY_RIGHTCTRL, KEY_Q):\n        ui.write_event(ev)\n        continue\n\n    # lots of messy checks for when Q is pressed/depressed while a\n    # Ctrl key is pressed (ev.value == 1)\n```\n\nThe LED indicators don't work when device is grabbed and events are resended by `ui.write_event` function. Is it possible to fix the LEDs work?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/9", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/9/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/9/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/9", "id": 14947084, "node_id": "MDU6SXNzdWUxNDk0NzA4NA==", "number": 9, "title": "Strange behavior on n-key rollover keyboard", "user": {"login": "giorgosg", "id": 94940, "node_id": "MDQ6VXNlcjk0OTQw", "avatar_url": "https://avatars2.githubusercontent.com/u/94940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giorgosg", "html_url": "https://github.com/giorgosg", "followers_url": "https://api.github.com/users/giorgosg/followers", "following_url": "https://api.github.com/users/giorgosg/following{/other_user}", "gists_url": "https://api.github.com/users/giorgosg/gists{/gist_id}", "starred_url": "https://api.github.com/users/giorgosg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giorgosg/subscriptions", "organizations_url": "https://api.github.com/users/giorgosg/orgs", "repos_url": "https://api.github.com/users/giorgosg/repos", "events_url": "https://api.github.com/users/giorgosg/events{/privacy}", "received_events_url": "https://api.github.com/users/giorgosg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-05-30T15:42:04Z", "updated_at": "2013-06-01T17:58:13Z", "closed_at": "2013-05-30T16:03:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I will look more into it but here is what I have figured out so far:\n- It registers up to 6 keys pressed simultaneously.\n- When grab is on, any more keys pressed after 6 keys appear on the terminal.\n- Any more keys pressed after 6 are not registered.\n- The keyboard is supposed to be n-key rollover and if I open the keyboard layout on gnome I can see X can register up to 17 keys. (I think that's how many the keyboard can really handle.)\n- testing with evtest I can see it suffers from the same problem.\n\nI am not sure if this a problem with this package or with evdev, but X uses the same API right? Anyway I will try to figure it out but please let me know If you have any ideas about what is happening.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/6", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/6/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/6/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/6", "id": 13830808, "node_id": "MDU6SXNzdWUxMzgzMDgwOA==", "number": 6, "title": "Documentation does not match code", "user": {"login": "thomir", "id": 372783, "node_id": "MDQ6VXNlcjM3Mjc4Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/372783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomir", "html_url": "https://github.com/thomir", "followers_url": "https://api.github.com/users/thomir/followers", "following_url": "https://api.github.com/users/thomir/following{/other_user}", "gists_url": "https://api.github.com/users/thomir/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomir/subscriptions", "organizations_url": "https://api.github.com/users/thomir/orgs", "repos_url": "https://api.github.com/users/thomir/repos", "events_url": "https://api.github.com/users/thomir/events{/privacy}", "received_events_url": "https://api.github.com/users/thomir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-04-30T22:40:09Z", "updated_at": "2013-05-01T09:25:30Z", "closed_at": "2013-05-01T09:25:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems the code has changed to rename AbsData -> AbsInfo, but the documentation does not reflect that change.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/4", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/4/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/4/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/4", "id": 9733900, "node_id": "MDU6SXNzdWU5NzMzOTAw", "number": 4, "title": "Strange behavior of grab()", "user": {"login": "moigagoo", "id": 1045340, "node_id": "MDQ6VXNlcjEwNDUzNDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1045340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moigagoo", "html_url": "https://github.com/moigagoo", "followers_url": "https://api.github.com/users/moigagoo/followers", "following_url": "https://api.github.com/users/moigagoo/following{/other_user}", "gists_url": "https://api.github.com/users/moigagoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/moigagoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moigagoo/subscriptions", "organizations_url": "https://api.github.com/users/moigagoo/orgs", "repos_url": "https://api.github.com/users/moigagoo/repos", "events_url": "https://api.github.com/users/moigagoo/events{/privacy}", "received_events_url": "https://api.github.com/users/moigagoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-01-07T13:35:55Z", "updated_at": "2013-01-08T17:41:57Z", "closed_at": "2013-01-08T17:41:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using evdev to catch keyboard events like LCtrl + C + C. I want to grab the device as LCtrl is pressed (event.code = 29, event.value = 1) and ungrab it when Ctrl is released (event.code = 29, event.value = 0) to guarantee that the regular shortcut is not triggered.\n\nThe problem is, after the keyboard is ungrabbed on LCtrl release, the system behaves as if LCtrl were still held down, so if I hit C (after LCtrl is released and the device is ungrabbed), it is interpreted as LCtrl + C.\n\nExample code:\n\n``` python\nfrom evdev import InputDevice, ecodes\n\ndev = InputDevice('/dev/input/event0') # Or whatever the keyboard device is \n\nfor event in dev.read_loop():\n    if (event.type == ecodes.EV_KEY):\n            if ((event.code, event.value) == (29, 1)):\n                dev.grab()\n                print ('Grab')\n            elif ((event.code, event.value) == (29, 0)):\n                dev.ungrab()\n                print('Ungrab')\n```\n\nJust run it in terminal (I assume you're on Linux), press and release LCtrl, then press C, and see that the script is interrupted, as if you pressed Ctrl+C.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/3", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/3/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/3/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/3", "id": 9627498, "node_id": "MDU6SXNzdWU5NjI3NDk4", "number": 3, "title": "Ignore events", "user": {"login": "aver-d", "id": 1934120, "node_id": "MDQ6VXNlcjE5MzQxMjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1934120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aver-d", "html_url": "https://github.com/aver-d", "followers_url": "https://api.github.com/users/aver-d/followers", "following_url": "https://api.github.com/users/aver-d/following{/other_user}", "gists_url": "https://api.github.com/users/aver-d/gists{/gist_id}", "starred_url": "https://api.github.com/users/aver-d/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aver-d/subscriptions", "organizations_url": "https://api.github.com/users/aver-d/orgs", "repos_url": "https://api.github.com/users/aver-d/repos", "events_url": "https://api.github.com/users/aver-d/events{/privacy}", "received_events_url": "https://api.github.com/users/aver-d/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-01-02T21:07:00Z", "updated_at": "2017-09-20T23:37:22Z", "closed_at": "2013-01-06T19:05:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to ignore/disregard events?\n\nI'm trying to re-map certain keypresses. For example, ctrl-q would become crtl-c. \n\nYour documentation shows how I can easily watch for the keypress and then fire a new keypress event (this is very clear, thanks). However, I don't know how to ignore the first keypress event. \n\nThanks very much for this library.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gvalkov/python-evdev/issues/2", "repository_url": "https://api.github.com/repos/gvalkov/python-evdev", "labels_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/2/comments", "events_url": "https://api.github.com/repos/gvalkov/python-evdev/issues/2/events", "html_url": "https://github.com/gvalkov/python-evdev/issues/2", "id": 7003691, "node_id": "MDU6SXNzdWU3MDAzNjkx", "number": 2, "title": "some error when run setup.py install at python26 platform", "user": {"login": "liutaihua", "id": 616461, "node_id": "MDQ6VXNlcjYxNjQ2MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/616461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liutaihua", "html_url": "https://github.com/liutaihua", "followers_url": "https://api.github.com/users/liutaihua/followers", "following_url": "https://api.github.com/users/liutaihua/following{/other_user}", "gists_url": "https://api.github.com/users/liutaihua/gists{/gist_id}", "starred_url": "https://api.github.com/users/liutaihua/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liutaihua/subscriptions", "organizations_url": "https://api.github.com/users/liutaihua/orgs", "repos_url": "https://api.github.com/users/liutaihua/repos", "events_url": "https://api.github.com/users/liutaihua/events{/privacy}", "received_events_url": "https://api.github.com/users/liutaihua/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-09-20T07:31:10Z", "updated_at": "2013-11-06T23:31:40Z", "closed_at": "2013-11-06T23:31:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "  File \"setup.py\", line 85, in create_ecodes\n    print('writing ecodes.c (using {})'.format(header))\n\n```\ncwd='{}/evdev'.format(here),\n```\n\nValueError: zero length field name in format\n\n for corrent this issue:\n\ndiff --git a/setup.py b/setup.py\nindex d5dc724..58db7e7 100755\n--- a/setup.py\n+++ b/setup.py\n@@ -82,9 +82,9 @@ def create_ecodes():\n\n```\n from subprocess import check_call\n```\n-    print('writing ecodes.c (using {})'.format(header))\n-    check_call('bash ./ecodes.sh {} > ecodes.c'.format(header),\n-               cwd='{}/evdev'.format(here),\n-    print('writing ecodes.c (using {0})'.format(header))\n-    check_call('bash ./ecodes.sh {0} > ecodes.c'.format(header),\n-               cwd='{0}/evdev'.format(here),\n              shell=True)\n", "performed_via_github_app": null, "score": 1.0}]}