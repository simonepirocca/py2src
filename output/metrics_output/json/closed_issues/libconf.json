{"total_count": 12, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/Grk0/python-libconf/issues/18", "repository_url": "https://api.github.com/repos/Grk0/python-libconf", "labels_url": "https://api.github.com/repos/Grk0/python-libconf/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/Grk0/python-libconf/issues/18/comments", "events_url": "https://api.github.com/repos/Grk0/python-libconf/issues/18/events", "html_url": "https://github.com/Grk0/python-libconf/issues/18", "id": 521410729, "node_id": "MDU6SXNzdWU1MjE0MTA3Mjk=", "number": 18, "title": "The last element in a list may be followed by a comma", "user": {"login": "r3n4ud", "id": 699794, "node_id": "MDQ6VXNlcjY5OTc5NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/699794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r3n4ud", "html_url": "https://github.com/r3n4ud", "followers_url": "https://api.github.com/users/r3n4ud/followers", "following_url": "https://api.github.com/users/r3n4ud/following{/other_user}", "gists_url": "https://api.github.com/users/r3n4ud/gists{/gist_id}", "starred_url": "https://api.github.com/users/r3n4ud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r3n4ud/subscriptions", "organizations_url": "https://api.github.com/users/r3n4ud/orgs", "repos_url": "https://api.github.com/users/r3n4ud/repos", "events_url": "https://api.github.com/users/r3n4ud/events{/privacy}", "received_events_url": "https://api.github.com/users/r3n4ud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-12T08:52:38Z", "updated_at": "2019-11-21T05:18:31Z", "closed_at": "2019-11-21T05:02:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have a bunch of `libconfig` files containing a comma after the last element on a list. This is valid according to https://hyperrealm.github.io/libconfig/libconfig_manual.html#Lists but `python-libconf` fails on this.\r\n\r\nA minimal sample to reproduce the issue is:\r\n```py\r\n#!/usr/bin/env python3\r\nfrom __future__ import print_function\r\nimport io\r\nimport libconf\r\n\r\nCFG = io.StringIO(\"\"\"foo = \"bar data\";\r\n\r\nbaz:\r\n{\r\n  id = \"qux\"\r\n  quzz = (\r\n       {\r\n        id = \"toto\";\r\n        attr = \"data\";\r\n       },\r\n\r\n       {\r\n        id = \"tata\";\r\n        attr = \"another data\";\r\n       },\r\n\r\n        );\r\n};\r\n\"\"\")\r\n\r\nif __name__ == '__main__':\r\n    CONFIG = libconf.load(CFG)\r\n    print(CONFIG)\r\n```\r\nwhich results to:\r\n```\r\n[\u2026]\r\nlibconf.ConfigParseError: Unexpected token ')' in '<unknown>', row 17, column 9; expected value after ','\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grk0/python-libconf/issues/15", "repository_url": "https://api.github.com/repos/Grk0/python-libconf", "labels_url": "https://api.github.com/repos/Grk0/python-libconf/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/Grk0/python-libconf/issues/15/comments", "events_url": "https://api.github.com/repos/Grk0/python-libconf/issues/15/events", "html_url": "https://github.com/Grk0/python-libconf/issues/15", "id": 375672253, "node_id": "MDU6SXNzdWUzNzU2NzIyNTM=", "number": 15, "title": "can't load a config file created by libconf", "user": {"login": "awoodx", "id": 23278823, "node_id": "MDQ6VXNlcjIzMjc4ODIz", "avatar_url": "https://avatars3.githubusercontent.com/u/23278823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/awoodx", "html_url": "https://github.com/awoodx", "followers_url": "https://api.github.com/users/awoodx/followers", "following_url": "https://api.github.com/users/awoodx/following{/other_user}", "gists_url": "https://api.github.com/users/awoodx/gists{/gist_id}", "starred_url": "https://api.github.com/users/awoodx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/awoodx/subscriptions", "organizations_url": "https://api.github.com/users/awoodx/orgs", "repos_url": "https://api.github.com/users/awoodx/repos", "events_url": "https://api.github.com/users/awoodx/events{/privacy}", "received_events_url": "https://api.github.com/users/awoodx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-30T20:11:06Z", "updated_at": "2018-11-23T07:30:22Z", "closed_at": "2018-11-23T07:30:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nI'm having issues with libconf.load()'ing a file that I created using libconf.dump(). A small snippet that reproduces the issue:\r\n\r\n```python\r\nimport libconf\r\nt1 = {}\r\nt1[\"test\"] = []\r\npset = {}\r\npset[\"param1\"] = \"x\";\r\nt1[\"test\"].append(pset)\r\nt1[\"test\"].append(pset)\r\ns = libconf.dumps(t1)\r\nlc = libconf.loads(s)\r\n```\r\nI get libconf.ConfigParseError:\r\nlibconf.ConfigParseError: Unexpected token u'{' in '<unknown>', row 3, column 5; expected: (']',)\r\nAny help or workaround would be greatly appreciated!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grk0/python-libconf/issues/14", "repository_url": "https://api.github.com/repos/Grk0/python-libconf", "labels_url": "https://api.github.com/repos/Grk0/python-libconf/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/Grk0/python-libconf/issues/14/comments", "events_url": "https://api.github.com/repos/Grk0/python-libconf/issues/14/events", "html_url": "https://github.com/Grk0/python-libconf/issues/14", "id": 339193213, "node_id": "MDU6SXNzdWUzMzkxOTMyMTM=", "number": 14, "title": "How to save comment use libconf.dump", "user": {"login": "VeblenXSYK", "id": 9734740, "node_id": "MDQ6VXNlcjk3MzQ3NDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/9734740?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VeblenXSYK", "html_url": "https://github.com/VeblenXSYK", "followers_url": "https://api.github.com/users/VeblenXSYK/followers", "following_url": "https://api.github.com/users/VeblenXSYK/following{/other_user}", "gists_url": "https://api.github.com/users/VeblenXSYK/gists{/gist_id}", "starred_url": "https://api.github.com/users/VeblenXSYK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VeblenXSYK/subscriptions", "organizations_url": "https://api.github.com/users/VeblenXSYK/orgs", "repos_url": "https://api.github.com/users/VeblenXSYK/repos", "events_url": "https://api.github.com/users/VeblenXSYK/events{/privacy}", "received_events_url": "https://api.github.com/users/VeblenXSYK/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-08T03:24:52Z", "updated_at": "2018-07-10T10:03:48Z", "closed_at": "2018-07-10T10:03:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I found the comment miss after call libconf.dump, how to save comment in .cfg file. Thanks in advance for your feedback\uff01\uff01\uff01", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grk0/python-libconf/issues/13", "repository_url": "https://api.github.com/repos/Grk0/python-libconf", "labels_url": "https://api.github.com/repos/Grk0/python-libconf/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/Grk0/python-libconf/issues/13/comments", "events_url": "https://api.github.com/repos/Grk0/python-libconf/issues/13/events", "html_url": "https://github.com/Grk0/python-libconf/issues/13", "id": 313662225, "node_id": "MDU6SXNzdWUzMTM2NjIyMjU=", "number": 13, "title": "The dictionary AttrDict is not deepcopiable", "user": {"login": "AnandTella", "id": 22096056, "node_id": "MDQ6VXNlcjIyMDk2MDU2", "avatar_url": "https://avatars1.githubusercontent.com/u/22096056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AnandTella", "html_url": "https://github.com/AnandTella", "followers_url": "https://api.github.com/users/AnandTella/followers", "following_url": "https://api.github.com/users/AnandTella/following{/other_user}", "gists_url": "https://api.github.com/users/AnandTella/gists{/gist_id}", "starred_url": "https://api.github.com/users/AnandTella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AnandTella/subscriptions", "organizations_url": "https://api.github.com/users/AnandTella/orgs", "repos_url": "https://api.github.com/users/AnandTella/repos", "events_url": "https://api.github.com/users/AnandTella/events{/privacy}", "received_events_url": "https://api.github.com/users/AnandTella/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-12T10:14:01Z", "updated_at": "2018-11-23T19:42:39Z", "closed_at": "2018-11-23T19:42:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The deepcopy of the AttrDict is failing as the \"__getattr__\" doesn't raise AttributeError for non existing attributes. \r\n\r\nThe getattr(x, \"__deepcopy__\", None) is invoked internally on deepcopy.\r\nThe attribute \"__deepcopy__\" is not present and hence KeyError is raised by \"__getitem__\" but AttributeError is expected from \"__getattr__\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grk0/python-libconf/issues/9", "repository_url": "https://api.github.com/repos/Grk0/python-libconf", "labels_url": "https://api.github.com/repos/Grk0/python-libconf/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/Grk0/python-libconf/issues/9/comments", "events_url": "https://api.github.com/repos/Grk0/python-libconf/issues/9/events", "html_url": "https://github.com/Grk0/python-libconf/issues/9", "id": 264406532, "node_id": "MDU6SXNzdWUyNjQ0MDY1MzI=", "number": 9, "title": "How to set a value as a long integer?", "user": {"login": "dhiraj113", "id": 3724470, "node_id": "MDQ6VXNlcjM3MjQ0NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3724470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhiraj113", "html_url": "https://github.com/dhiraj113", "followers_url": "https://api.github.com/users/dhiraj113/followers", "following_url": "https://api.github.com/users/dhiraj113/following{/other_user}", "gists_url": "https://api.github.com/users/dhiraj113/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhiraj113/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhiraj113/subscriptions", "organizations_url": "https://api.github.com/users/dhiraj113/orgs", "repos_url": "https://api.github.com/users/dhiraj113/repos", "events_url": "https://api.github.com/users/dhiraj113/events{/privacy}", "received_events_url": "https://api.github.com/users/dhiraj113/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-10T23:15:44Z", "updated_at": "2017-10-11T00:25:57Z", "closed_at": "2017-10-11T00:25:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to set a value as a long-integer in libconf. The output should appear as below in the created `.cfg` file\r\n\r\n```\r\nconfig['key'] = 1000000L\r\n````\r\n\r\nIs there some API to specify the data type of the value?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grk0/python-libconf/issues/8", "repository_url": "https://api.github.com/repos/Grk0/python-libconf", "labels_url": "https://api.github.com/repos/Grk0/python-libconf/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/Grk0/python-libconf/issues/8/comments", "events_url": "https://api.github.com/repos/Grk0/python-libconf/issues/8/events", "html_url": "https://github.com/Grk0/python-libconf/issues/8", "id": 257760133, "node_id": "MDU6SXNzdWUyNTc3NjAxMzM=", "number": 8, "title": "arrays", "user": {"login": "flok99", "id": 3216056, "node_id": "MDQ6VXNlcjMyMTYwNTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3216056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flok99", "html_url": "https://github.com/flok99", "followers_url": "https://api.github.com/users/flok99/followers", "following_url": "https://api.github.com/users/flok99/following{/other_user}", "gists_url": "https://api.github.com/users/flok99/gists{/gist_id}", "starred_url": "https://api.github.com/users/flok99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flok99/subscriptions", "organizations_url": "https://api.github.com/users/flok99/orgs", "repos_url": "https://api.github.com/users/flok99/repos", "events_url": "https://api.github.com/users/flok99/events{/privacy}", "received_events_url": "https://api.github.com/users/flok99/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-14T15:24:30Z", "updated_at": "2017-10-10T23:43:15Z", "closed_at": "2017-10-10T23:43:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nAm I not right that arrays should also between ( and ), like as lists do? (and not [ and ])\r\nBecause libconfig++9v5 complains about that.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grk0/python-libconf/issues/7", "repository_url": "https://api.github.com/repos/Grk0/python-libconf", "labels_url": "https://api.github.com/repos/Grk0/python-libconf/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/Grk0/python-libconf/issues/7/comments", "events_url": "https://api.github.com/repos/Grk0/python-libconf/issues/7/events", "html_url": "https://github.com/Grk0/python-libconf/issues/7", "id": 232297082, "node_id": "MDU6SXNzdWUyMzIyOTcwODI=", "number": 7, "title": "Creating config on the fly", "user": {"login": "minihops", "id": 17300615, "node_id": "MDQ6VXNlcjE3MzAwNjE1", "avatar_url": "https://avatars0.githubusercontent.com/u/17300615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minihops", "html_url": "https://github.com/minihops", "followers_url": "https://api.github.com/users/minihops/followers", "following_url": "https://api.github.com/users/minihops/following{/other_user}", "gists_url": "https://api.github.com/users/minihops/gists{/gist_id}", "starred_url": "https://api.github.com/users/minihops/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minihops/subscriptions", "organizations_url": "https://api.github.com/users/minihops/orgs", "repos_url": "https://api.github.com/users/minihops/repos", "events_url": "https://api.github.com/users/minihops/events{/privacy}", "received_events_url": "https://api.github.com/users/minihops/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-30T15:45:00Z", "updated_at": "2017-09-23T13:43:17Z", "closed_at": "2017-09-23T13:43:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, thanks for providing this pice of software.\r\nI want to use the lib for creating a configuration on the fly and write it to a file at the end.\r\nIs there any sample for that? \r\nThanks.\r\nChristof", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grk0/python-libconf/issues/6", "repository_url": "https://api.github.com/repos/Grk0/python-libconf", "labels_url": "https://api.github.com/repos/Grk0/python-libconf/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/Grk0/python-libconf/issues/6/comments", "events_url": "https://api.github.com/repos/Grk0/python-libconf/issues/6/events", "html_url": "https://github.com/Grk0/python-libconf/issues/6", "id": 225381490, "node_id": "MDU6SXNzdWUyMjUzODE0OTA=", "number": 6, "title": "What's the workflow to read a libconf file and edit some fields in it", "user": {"login": "dhiraj113", "id": 3724470, "node_id": "MDQ6VXNlcjM3MjQ0NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3724470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhiraj113", "html_url": "https://github.com/dhiraj113", "followers_url": "https://api.github.com/users/dhiraj113/followers", "following_url": "https://api.github.com/users/dhiraj113/following{/other_user}", "gists_url": "https://api.github.com/users/dhiraj113/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhiraj113/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhiraj113/subscriptions", "organizations_url": "https://api.github.com/users/dhiraj113/orgs", "repos_url": "https://api.github.com/users/dhiraj113/repos", "events_url": "https://api.github.com/users/dhiraj113/events{/privacy}", "received_events_url": "https://api.github.com/users/dhiraj113/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-01T04:03:33Z", "updated_at": "2017-05-01T05:15:15Z", "closed_at": "2017-05-01T05:15:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grk0/python-libconf/issues/5", "repository_url": "https://api.github.com/repos/Grk0/python-libconf", "labels_url": "https://api.github.com/repos/Grk0/python-libconf/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/Grk0/python-libconf/issues/5/comments", "events_url": "https://api.github.com/repos/Grk0/python-libconf/issues/5/events", "html_url": "https://github.com/Grk0/python-libconf/issues/5", "id": 225374115, "node_id": "MDU6SXNzdWUyMjUzNzQxMTU=", "number": 5, "title": "Setting dynamically generated key of arbitrary depth", "user": {"login": "dhiraj113", "id": 3724470, "node_id": "MDQ6VXNlcjM3MjQ0NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3724470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhiraj113", "html_url": "https://github.com/dhiraj113", "followers_url": "https://api.github.com/users/dhiraj113/followers", "following_url": "https://api.github.com/users/dhiraj113/following{/other_user}", "gists_url": "https://api.github.com/users/dhiraj113/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhiraj113/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhiraj113/subscriptions", "organizations_url": "https://api.github.com/users/dhiraj113/orgs", "repos_url": "https://api.github.com/users/dhiraj113/repos", "events_url": "https://api.github.com/users/dhiraj113/events{/privacy}", "received_events_url": "https://api.github.com/users/dhiraj113/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-01T02:25:25Z", "updated_at": "2017-05-21T19:59:38Z", "closed_at": "2017-05-21T19:59:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to assign dynamically generated key, value pairs using the provided API?\r\n\r\nSuppose, I have a key of format `field1.field2.field3...` but whose depth is known only at runtime. How to assign such a key value pair?\r\n\r\nI ideally would like to be able to do something like this\r\n```\r\nconfig['window.title'] = value\r\n```\r\nBoth the suggested options are not very helpful because\r\n\r\n1. `config.window.title`  requires the strings `window` and `title` to be known at the time of code writing. However, in my use case, they are known only at runtime.\r\n2. `config['window']['title']` requires the depth of key to be known at the time of code writing. However, for my use case, the depth is known only at runtime.\r\n\r\nThe provided API looks to be too restrictive and insufficient for the very basic case of assigning value to a key generated at runtime.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grk0/python-libconf/issues/4", "repository_url": "https://api.github.com/repos/Grk0/python-libconf", "labels_url": "https://api.github.com/repos/Grk0/python-libconf/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/Grk0/python-libconf/issues/4/comments", "events_url": "https://api.github.com/repos/Grk0/python-libconf/issues/4/events", "html_url": "https://github.com/Grk0/python-libconf/issues/4", "id": 190869685, "node_id": "MDU6SXNzdWUxOTA4Njk2ODU=", "number": 4, "title": "load() only works for Python 3", "user": {"login": "jwiegley", "id": 8460, "node_id": "MDQ6VXNlcjg0NjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/8460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwiegley", "html_url": "https://github.com/jwiegley", "followers_url": "https://api.github.com/users/jwiegley/followers", "following_url": "https://api.github.com/users/jwiegley/following{/other_user}", "gists_url": "https://api.github.com/users/jwiegley/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwiegley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwiegley/subscriptions", "organizations_url": "https://api.github.com/users/jwiegley/orgs", "repos_url": "https://api.github.com/users/jwiegley/repos", "events_url": "https://api.github.com/users/jwiegley/events{/privacy}", "received_events_url": "https://api.github.com/users/jwiegley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-11-21T23:51:26Z", "updated_at": "2017-01-06T17:42:47Z", "closed_at": "2017-01-06T17:42:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following code in libconf.py:\r\n\r\n``` python\r\n    if isinstance(f.read(0), bytes):\r\n        raise TypeError(\"libconf.load() input file must by unicode\")\r\n```\r\n\r\nOnly works for file objects opened in Python 3.  It should be something like:\r\n\r\n``` python\r\nif sys.version_info >= (3,0,0):\r\n    # for Python 3\r\n    if isinstance(s, bytes):\r\n        raise TypeError(\"libconf.load() input file must be unicode\")\r\nelse:\r\n    # for Python 2\r\n    if isinstance(s, unicode):\r\n        raise TypeError(\"libconf.load() input file must be unicode\")\r\n```\r\n\r\nIncluding @tgiannak, who found this issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grk0/python-libconf/issues/3", "repository_url": "https://api.github.com/repos/Grk0/python-libconf", "labels_url": "https://api.github.com/repos/Grk0/python-libconf/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/Grk0/python-libconf/issues/3/comments", "events_url": "https://api.github.com/repos/Grk0/python-libconf/issues/3/events", "html_url": "https://github.com/Grk0/python-libconf/issues/3", "id": 182410619, "node_id": "MDU6SXNzdWUxODI0MTA2MTk=", "number": 3, "title": "Parsing error of floats without points", "user": {"login": "sleepywitti", "id": 1587657, "node_id": "MDQ6VXNlcjE1ODc2NTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1587657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sleepywitti", "html_url": "https://github.com/sleepywitti", "followers_url": "https://api.github.com/users/sleepywitti/followers", "following_url": "https://api.github.com/users/sleepywitti/following{/other_user}", "gists_url": "https://api.github.com/users/sleepywitti/gists{/gist_id}", "starred_url": "https://api.github.com/users/sleepywitti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sleepywitti/subscriptions", "organizations_url": "https://api.github.com/users/sleepywitti/orgs", "repos_url": "https://api.github.com/users/sleepywitti/repos", "events_url": "https://api.github.com/users/sleepywitti/events{/privacy}", "received_events_url": "https://api.github.com/users/sleepywitti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-10-12T01:04:34Z", "updated_at": "2016-10-18T06:09:56Z", "closed_at": "2016-10-18T06:09:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for this great library. I found a small problem with floats written as `1e-1`. It seems to be fixed by making the sign `[-+]` in 128 optional:\n\n```\n    (FltToken,  'float',     r'([-+]?([0-9]+)?\\.[0-9]*([eE][-+]?[0-9]+)?)|'\n                             r'([-+]?([0-9]+)(\\.[0-9]*)?[eE][-+]?[0-9]+)'),\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grk0/python-libconf/issues/1", "repository_url": "https://api.github.com/repos/Grk0/python-libconf", "labels_url": "https://api.github.com/repos/Grk0/python-libconf/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/Grk0/python-libconf/issues/1/comments", "events_url": "https://api.github.com/repos/Grk0/python-libconf/issues/1/events", "html_url": "https://github.com/Grk0/python-libconf/issues/1", "id": 175973770, "node_id": "MDU6SXNzdWUxNzU5NzM3NzA=", "number": 1, "title": "Error in regex for float", "user": {"login": "AnandTella", "id": 22096056, "node_id": "MDQ6VXNlcjIyMDk2MDU2", "avatar_url": "https://avatars1.githubusercontent.com/u/22096056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AnandTella", "html_url": "https://github.com/AnandTella", "followers_url": "https://api.github.com/users/AnandTella/followers", "following_url": "https://api.github.com/users/AnandTella/following{/other_user}", "gists_url": "https://api.github.com/users/AnandTella/gists{/gist_id}", "starred_url": "https://api.github.com/users/AnandTella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AnandTella/subscriptions", "organizations_url": "https://api.github.com/users/AnandTella/orgs", "repos_url": "https://api.github.com/users/AnandTella/repos", "events_url": "https://api.github.com/users/AnandTella/events{/privacy}", "received_events_url": "https://api.github.com/users/AnandTella/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-09T10:05:14Z", "updated_at": "2016-09-09T20:30:43Z", "closed_at": "2016-09-09T19:44:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was loading the example file and I got the following error.\n\nconfig:\n\n```\nversion = 7;\nwindow: {\n   title: \"libconfig example\"\n   position: { x: 375; y: 210; w: 800; h: 600; }\n};\ncapabilities: {\n   can-do-lists: (true, 0x3A20, (\"sublist\"), {subgroup: \"ok\"})\n   can-do-arrays: [3, \"yes\", True]\n};\n\n```\n\npython code:\n\n```\nimport libconf\nwith open('example.cfg') as f:\n     config = libconf.load(f)\nprint config\n\n```\n\nException:\n\n```\nFile \"/usr/local/lib/python2.7/dist-packages/libconf.py\", line 440, in load\n    includedir=includedir)\n  File \"/usr/local/lib/python2.7/dist-packages/libconf.py\", line 217, in from_file\n    tokens.extend(tokenizer.tokenize(''.join(lines)))\n  File \"/usr/local/lib/python2.7/dist-packages/libconf.py\", line 141, in tokenize\n    m = re.match(regex, string)\n  File \"/usr/lib/python2.7/re.py\", line 137, in match\n    return _compile(pattern, flags).match(string)\n  File \"/usr/lib/python2.7/re.py\", line 242, in _compile\n    raise error, v # invalid expression\nerror: nothing to repeat\n```\n\nMy Re version:\n\n```\npython -c \"import re; print re.__version__\"\n2.2.1\n```\n\nMy Python Version:\n\n```\npython --version\nPython 2.7.3\n```\n\n**Proposed solution:**\nreplace the line 99 libconf.py\n\n```\n(FltToken,  'float',     r'([-+]?([0-9]*)?\\.[0-9]*([eE][-+]?[0-9]+)?)|'\n                                 r'([-+]([0-9]+)(\\.[0-9]*)?[eE][-+]?[0-9]+)'),\n```\n\nwith \n\n```\n(FltToken,  'float',     r'([-+]?([0-9]+)?\\.[0-9]*([eE][-+]?[0-9]+)?)|'\n                                 r'([-+]([0-9]+)(\\.[0-9]*)?[eE][-+]?[0-9]+)'),\n```\n\nExact error is in: ([0-9]*)? \n", "performed_via_github_app": null, "score": 1.0}]}