{"total_count": 50, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/111", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/111/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/111/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/111", "id": 623600326, "node_id": "MDU6SXNzdWU2MjM2MDAzMjY=", "number": 111, "title": "Some case Failed when run ext_test", "user": {"login": "Alanscut", "id": 21104054, "node_id": "MDQ6VXNlcjIxMTA0MDU0", "avatar_url": "https://avatars0.githubusercontent.com/u/21104054?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alanscut", "html_url": "https://github.com/Alanscut", "followers_url": "https://api.github.com/users/Alanscut/followers", "following_url": "https://api.github.com/users/Alanscut/following{/other_user}", "gists_url": "https://api.github.com/users/Alanscut/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alanscut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alanscut/subscriptions", "organizations_url": "https://api.github.com/users/Alanscut/orgs", "repos_url": "https://api.github.com/users/Alanscut/repos", "events_url": "https://api.github.com/users/Alanscut/events{/privacy}", "received_events_url": "https://api.github.com/users/Alanscut/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-23T07:21:23Z", "updated_at": "2020-06-22T12:43:53Z", "closed_at": "2020-06-22T12:43:53Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Hi @stefankoegl , when I run the external tests [json-patch-tests](https://github.com/json-patch/json-patch-tests), some case failed, I think some of them are bugs, others are due to unreasonable assertions.\r\nhere is the list:\r\n- 1: pass only when changing **add** to **replace** -- **not sure if it is a bug**\r\n```\r\n    { \"comment\": \"replace array document with object document?\",\r\n      \"doc\": [],\r\n      \"patch\": [{\"op\": \"add\", \"path\": \"\", \"value\": {}}],\r\n      \"expected\": {} }\r\n```\r\n- 2: failed with `KeyError: 'path'` before entering the assertion -- **unreasonable assertion**\r\n```\r\n    { \"comment\": \"missing 'path' parameter\",\r\n      \"doc\": {},\r\n      \"patch\": [ { \"op\": \"add\", \"value\": \"bar\" } ],\r\n      \"error\": \"missing 'path' parameter\" }\r\n```\r\n\r\n- 3: failed with `TypeError: expected string or bytes-like object` before entering the assertion -- **unreasonable assertion**\r\n```\r\n      { \"comment\": \"'path' parameter with null value\",\r\n        \"doc\": {},\r\n        \"patch\": [ { \"op\": \"add\", \"path\": null, \"value\": \"bar\" } ],\r\n        \"error\": \"null is not valid value for 'path'\" }\r\n```\r\n\r\n-4: index leading with zero should failed but success -- **bug**\r\n```\r\n      { \"comment\": \"test with bad array number that has leading zeros\",\r\n        \"doc\": [\"foo\", \"bar\"],\r\n        \"patch\": [{\"op\": \"test\", \"path\": \"/00\", \"value\": \"foo\"}],\r\n        \"error\": \"test op should reject the array value, it has leading zeros\" },\r\n  \r\n      { \"comment\": \"test with bad array number that has leading zeros\",\r\n        \"doc\": [\"foo\", \"bar\"],\r\n        \"patch\": [{\"op\": \"test\", \"path\": \"/01\", \"value\": \"bar\"}],\r\n        \"error\": \"test op should reject the array value, it has leading zeros\" }\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/103", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/103/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/103/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/103", "id": 514571198, "node_id": "MDU6SXNzdWU1MTQ1NzExOTg=", "number": 103, "title": "Unexpected behaviour with int/float", "user": {"login": "rbachleitner", "id": 23425469, "node_id": "MDQ6VXNlcjIzNDI1NDY5", "avatar_url": "https://avatars1.githubusercontent.com/u/23425469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbachleitner", "html_url": "https://github.com/rbachleitner", "followers_url": "https://api.github.com/users/rbachleitner/followers", "following_url": "https://api.github.com/users/rbachleitner/following{/other_user}", "gists_url": "https://api.github.com/users/rbachleitner/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbachleitner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbachleitner/subscriptions", "organizations_url": "https://api.github.com/users/rbachleitner/orgs", "repos_url": "https://api.github.com/users/rbachleitner/repos", "events_url": "https://api.github.com/users/rbachleitner/events{/privacy}", "received_events_url": "https://api.github.com/users/rbachleitner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-30T10:56:58Z", "updated_at": "2020-01-29T08:28:21Z", "closed_at": "2020-01-29T08:28:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Or is this expected behaviour:\r\n\r\n```\r\n>>> src = { 'value' : 1 }\r\n>>> dest = { 'value' : 1.0 }\r\n>>> a = jsonpatch.JsonPatch.from_diff(src, dest)\r\n>>> a.to_string()\r\n'[]'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/102", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/102/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/102/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/102", "id": 512475280, "node_id": "MDU6SXNzdWU1MTI0NzUyODA=", "number": 102, "title": "TypeError on replace with list index '-'", "user": {"login": "twbecker", "id": 1576404, "node_id": "MDQ6VXNlcjE1NzY0MDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1576404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twbecker", "html_url": "https://github.com/twbecker", "followers_url": "https://api.github.com/users/twbecker/followers", "following_url": "https://api.github.com/users/twbecker/following{/other_user}", "gists_url": "https://api.github.com/users/twbecker/gists{/gist_id}", "starred_url": "https://api.github.com/users/twbecker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twbecker/subscriptions", "organizations_url": "https://api.github.com/users/twbecker/orgs", "repos_url": "https://api.github.com/users/twbecker/repos", "events_url": "https://api.github.com/users/twbecker/events{/privacy}", "received_events_url": "https://api.github.com/users/twbecker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-25T11:57:42Z", "updated_at": "2020-06-22T12:41:10Z", "closed_at": "2020-06-22T12:41:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Best shown with an example:\r\n```bash\r\n$ cat test.json \r\n{\"foo\": [0, 1, 2]}\r\n\r\n$ echo '[{\"op\": \"replace\", \"path\": \"/foo/-\", \"value\": \"3\"}]' | jsonpatch ./test.json\r\nTraceback (most recent call last):\r\n  File \"venv/bin/jsonpatch\", line 106, in <module>\r\n    main()\r\n  File \"venv/bin/jsonpatch\", line 31, in main\r\n    patch_files()\r\n  File \"venv/bin/jsonpatch\", line 41, in patch_files\r\n    result = jsonpatch.apply_patch(doc, patch)\r\n  File \"venv/lib/python3.6/site-packages/jsonpatch.py\", line 143, in apply_patch\r\n    return patch.apply(doc, in_place)\r\n  File \"venv/lib/python3.6/site-packages/jsonpatch.py\", line 312, in apply\r\n    obj = operation.apply(obj)\r\n  File \"venv/lib/python3.6/site-packages/jsonpatch.py\", line 477, in apply\r\n    if part > len(subobj) or part < 0:\r\nTypeError: '>' not supported between instances of 'str' and 'int'\r\n```\r\n\r\nI fully agree that replace with '-' doesn't make sense, but it would be preferable IMO for this to raise `InvalidJsonPatch` or `JsonPatchConflict` than `TypeError`. Indeed this was the behavior under Python 2:\r\n```bash\r\n$  echo '[{\"op\": \"replace\", \"path\": \"/foo/-\", \"value\": \"3\"}]' | jsonpatch ~/projects/ffs/ffs-server/src/test/robotframework/test.json\r\nTraceback (most recent call last):\r\n  File \"venv2/bin/jsonpatch\", line 106, in <module>\r\n    main()\r\n  File \"venv2/bin/jsonpatch\", line 31, in main\r\n    patch_files()\r\n  File \"venv2/bin/jsonpatch\", line 41, in patch_files\r\n    result = jsonpatch.apply_patch(doc, patch)\r\n  File \"venv2/local/lib/python2.7/site-packages/jsonpatch.py\", line 143, in apply_patch\r\n    return patch.apply(doc, in_place)\r\n  File \"venv2/local/lib/python2.7/site-packages/jsonpatch.py\", line 312, in apply\r\n    obj = operation.apply(obj)\r\n  File \"venv2/local/lib/python2.7/site-packages/jsonpatch.py\", line 476, in apply\r\n    raise JsonPatchConflict(\"can't replace outside of list\")\r\njsonpatch.JsonPatchConflict: can't replace outside of list\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/101", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/101/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/101/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/101", "id": 507185534, "node_id": "MDU6SXNzdWU1MDcxODU1MzQ=", "number": 101, "title": "Bug with lists", "user": {"login": "bbasics", "id": 55757995, "node_id": "MDQ6VXNlcjU1NzU3OTk1", "avatar_url": "https://avatars2.githubusercontent.com/u/55757995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bbasics", "html_url": "https://github.com/bbasics", "followers_url": "https://api.github.com/users/bbasics/followers", "following_url": "https://api.github.com/users/bbasics/following{/other_user}", "gists_url": "https://api.github.com/users/bbasics/gists{/gist_id}", "starred_url": "https://api.github.com/users/bbasics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bbasics/subscriptions", "organizations_url": "https://api.github.com/users/bbasics/orgs", "repos_url": "https://api.github.com/users/bbasics/repos", "events_url": "https://api.github.com/users/bbasics/events{/privacy}", "received_events_url": "https://api.github.com/users/bbasics/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-15T11:34:23Z", "updated_at": "2020-06-09T16:31:09Z", "closed_at": "2020-06-09T16:31:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nimport jsonpatch\r\njsonpatch.make_patch(['1', '2', '3', '4'], ['4', '3', '1', '2', '2'])\r\n```\r\ngives:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3/dist-packages/jsonpatch.py\", line 494, in apply\r\n    value = subobj[part]\r\nIndexError: list index out of range\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"./test.py\", line 3, in <module>\r\n    jsonpatch.make_patch(['1', '2', '3', '4'], ['4', '3', '1', '2', '2'])\r\n  File \"/usr/lib/python3/dist-packages/jsonpatch.py\", line 178, in make_patch\r\n    new = patch.apply(src)\r\n  File \"/usr/lib/python3/dist-packages/jsonpatch.py\", line 360, in apply\r\n    obj = operation.apply(obj)\r\n  File \"/usr/lib/python3/dist-packages/jsonpatch.py\", line 496, in apply\r\n    raise JsonPatchConflict(str(ex))\r\njsonpatch.JsonPatchConflict: list index out of range\r\n```\r\nI use bionic ubuntu package (version 1.19)\r\n\r\nBest regards", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/93", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/93/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/93/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/93", "id": 416001468, "node_id": "MDU6SXNzdWU0MTYwMDE0Njg=", "number": 93, "title": "Conflict with https://github.com/xlwings/jsondiff", "user": {"login": "yan12125", "id": 1937689, "node_id": "MDQ6VXNlcjE5Mzc2ODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1937689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yan12125", "html_url": "https://github.com/yan12125", "followers_url": "https://api.github.com/users/yan12125/followers", "following_url": "https://api.github.com/users/yan12125/following{/other_user}", "gists_url": "https://api.github.com/users/yan12125/gists{/gist_id}", "starred_url": "https://api.github.com/users/yan12125/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yan12125/subscriptions", "organizations_url": "https://api.github.com/users/yan12125/orgs", "repos_url": "https://api.github.com/users/yan12125/repos", "events_url": "https://api.github.com/users/yan12125/events{/privacy}", "received_events_url": "https://api.github.com/users/yan12125/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-01T08:54:38Z", "updated_at": "2019-06-23T16:15:40Z", "closed_at": "2019-06-23T16:15:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Both Python packages installs an executable `jsondiff`. As a reulst it's impossible to install both python-jsondiff and python-jsonpatch on Arch Linux https://bugs.archlinux.org/task/60911.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/90", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/90/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/90/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/90", "id": 376208369, "node_id": "MDU6SXNzdWUzNzYyMDgzNjk=", "number": 90, "title": "mixing boolean and integers", "user": {"login": "noblige", "id": 252976, "node_id": "MDQ6VXNlcjI1Mjk3Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/252976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noblige", "html_url": "https://github.com/noblige", "followers_url": "https://api.github.com/users/noblige/followers", "following_url": "https://api.github.com/users/noblige/following{/other_user}", "gists_url": "https://api.github.com/users/noblige/gists{/gist_id}", "starred_url": "https://api.github.com/users/noblige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noblige/subscriptions", "organizations_url": "https://api.github.com/users/noblige/orgs", "repos_url": "https://api.github.com/users/noblige/repos", "events_url": "https://api.github.com/users/noblige/events{/privacy}", "received_events_url": "https://api.github.com/users/noblige/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-01T00:24:36Z", "updated_at": "2020-01-29T08:28:15Z", "closed_at": "2020-01-29T08:28:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems like `boolean` and `integer` types are not correctly compared, e.g.:\r\n```\r\n>>> print jsonpatch.make_patch({\"field_1\":True},{\"field_2\":1})\r\n[{\"path\": \"/field_2\", \"from\": \"/field_1\", \"op\": \"move\"}]\r\n```\r\n\r\n```\r\n>>> print jsonpatch.make_patch({\"field\":True},{\"field\":1})\r\n[]\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/86", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/86/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/86/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/86", "id": 308398676, "node_id": "MDU6SXNzdWUzMDgzOTg2NzY=", "number": 86, "title": "tests fail: No such file or directory: u'./tests.js'", "user": {"login": "yurivict", "id": 271906, "node_id": "MDQ6VXNlcjI3MTkwNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/271906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yurivict", "html_url": "https://github.com/yurivict", "followers_url": "https://api.github.com/users/yurivict/followers", "following_url": "https://api.github.com/users/yurivict/following{/other_user}", "gists_url": "https://api.github.com/users/yurivict/gists{/gist_id}", "starred_url": "https://api.github.com/users/yurivict/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yurivict/subscriptions", "organizations_url": "https://api.github.com/users/yurivict/orgs", "repos_url": "https://api.github.com/users/yurivict/repos", "events_url": "https://api.github.com/users/yurivict/events{/privacy}", "received_events_url": "https://api.github.com/users/yurivict/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-25T23:58:26Z", "updated_at": "2018-04-02T08:36:13Z", "closed_at": "2018-04-02T08:36:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/85", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/85/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/85/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/85", "id": 306097163, "node_id": "MDU6SXNzdWUzMDYwOTcxNjM=", "number": 85, "title": "Replace operations details", "user": {"login": "smehta", "id": 808367, "node_id": "MDQ6VXNlcjgwODM2Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/808367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smehta", "html_url": "https://github.com/smehta", "followers_url": "https://api.github.com/users/smehta/followers", "following_url": "https://api.github.com/users/smehta/following{/other_user}", "gists_url": "https://api.github.com/users/smehta/gists{/gist_id}", "starred_url": "https://api.github.com/users/smehta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smehta/subscriptions", "organizations_url": "https://api.github.com/users/smehta/orgs", "repos_url": "https://api.github.com/users/smehta/repos", "events_url": "https://api.github.com/users/smehta/events{/privacy}", "received_events_url": "https://api.github.com/users/smehta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-16T22:40:02Z", "updated_at": "2018-04-03T22:10:19Z", "closed_at": "2018-04-03T22:10:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using  patch = jsonpatch.make_patch(src, dst) operation.\r\n\r\nI am wondering when the op = 'replace', Is it possible to know what exactly has changed between 2 json object ?  I was curious to know if it can do deep comparison. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/84", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/84/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/84/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/84", "id": 306058242, "node_id": "MDU6SXNzdWUzMDYwNTgyNDI=", "number": 84, "title": "Lincese information", "user": {"login": "smehta", "id": 808367, "node_id": "MDQ6VXNlcjgwODM2Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/808367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smehta", "html_url": "https://github.com/smehta", "followers_url": "https://api.github.com/users/smehta/followers", "following_url": "https://api.github.com/users/smehta/following{/other_user}", "gists_url": "https://api.github.com/users/smehta/gists{/gist_id}", "starred_url": "https://api.github.com/users/smehta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smehta/subscriptions", "organizations_url": "https://api.github.com/users/smehta/orgs", "repos_url": "https://api.github.com/users/smehta/repos", "events_url": "https://api.github.com/users/smehta/events{/privacy}", "received_events_url": "https://api.github.com/users/smehta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-16T19:57:50Z", "updated_at": "2018-03-16T20:19:11Z", "closed_at": "2018-03-16T20:19:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Stefan K\u00f6gl, \r\n\r\nWhere can I find the license information for this library ? \r\n\r\nThanks,\r\nSahil", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/82", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/82/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/82/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/82", "id": 294851120, "node_id": "MDU6SXNzdWUyOTQ4NTExMjA=", "number": 82, "title": "unit test test_js_file fails when running it from pypi", "user": {"login": "amoralej", "id": 1783517, "node_id": "MDQ6VXNlcjE3ODM1MTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1783517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoralej", "html_url": "https://github.com/amoralej", "followers_url": "https://api.github.com/users/amoralej/followers", "following_url": "https://api.github.com/users/amoralej/following{/other_user}", "gists_url": "https://api.github.com/users/amoralej/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoralej/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoralej/subscriptions", "organizations_url": "https://api.github.com/users/amoralej/orgs", "repos_url": "https://api.github.com/users/amoralej/repos", "events_url": "https://api.github.com/users/amoralej/events{/privacy}", "received_events_url": "https://api.github.com/users/amoralej/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-06T17:43:45Z", "updated_at": "2018-03-11T15:57:02Z", "closed_at": "2018-03-11T15:56:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "When try to run unit tests with the tarbal from https://pypi.io/packages/source/j/jsonpatch/jsonpatch-1.21.tar.gz:\r\n\r\nERROR: test_js_file (__main__.ApplyPatchTestCase)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"./tests.py\", line 17, in test_js_file\r\n    with open('./tests.js', 'r') as f:\r\nIOError: [Errno 2] No such file or directory: u'./tests.js'\r\n\r\nRoot cause is missing tests.js file from tarbal, could it be added to the package?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/80", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/80/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/80/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/80", "id": 287723477, "node_id": "MDU6SXNzdWUyODc3MjM0Nzc=", "number": 80, "title": "Diffing removal in complex arrays", "user": {"login": "Glignos", "id": 16304052, "node_id": "MDQ6VXNlcjE2MzA0MDUy", "avatar_url": "https://avatars2.githubusercontent.com/u/16304052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Glignos", "html_url": "https://github.com/Glignos", "followers_url": "https://api.github.com/users/Glignos/followers", "following_url": "https://api.github.com/users/Glignos/following{/other_user}", "gists_url": "https://api.github.com/users/Glignos/gists{/gist_id}", "starred_url": "https://api.github.com/users/Glignos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Glignos/subscriptions", "organizations_url": "https://api.github.com/users/Glignos/orgs", "repos_url": "https://api.github.com/users/Glignos/repos", "events_url": "https://api.github.com/users/Glignos/events{/privacy}", "received_events_url": "https://api.github.com/users/Glignos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-11T09:50:16Z", "updated_at": "2019-02-12T08:56:33Z", "closed_at": "2019-02-12T08:56:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've noticed that after version 1.6 the behaviour in diffing a removal from a non last index has changed.\r\nTo be more specific in this case:\r\n```jsonpatch.JsonPatch.from_diff([{'a':1},{'b':2}],[{'b':2}])```\r\nat version 1.6 you're receiving correcly the json patch: ```[{u'path': u'/0', u'op': u'remove'}]```\r\nbut from version 1.20 the result is:\r\n```[{u'path': u'/0/a', u'value': 1, u'op': u'remove'}, {u'path': u'/0/b', u'value': 2, u'op': u'add'}, {u'path': u'/1', u'value': {'b': 2}, u'op': u'remove'}]```\r\nWith a quick look at your tests it doesn't seem that this is expected.\r\nCan you confirm this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/76", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/76/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/76/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/76", "id": 279035107, "node_id": "MDU6SXNzdWUyNzkwMzUxMDc=", "number": 76, "title": "jsondiff 1.20 includes extraneous 'value' field for remove operation", "user": {"login": "ostackbrian", "id": 2169547, "node_id": "MDQ6VXNlcjIxNjk1NDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2169547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ostackbrian", "html_url": "https://github.com/ostackbrian", "followers_url": "https://api.github.com/users/ostackbrian/followers", "following_url": "https://api.github.com/users/ostackbrian/following{/other_user}", "gists_url": "https://api.github.com/users/ostackbrian/gists{/gist_id}", "starred_url": "https://api.github.com/users/ostackbrian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ostackbrian/subscriptions", "organizations_url": "https://api.github.com/users/ostackbrian/orgs", "repos_url": "https://api.github.com/users/ostackbrian/repos", "events_url": "https://api.github.com/users/ostackbrian/events{/privacy}", "received_events_url": "https://api.github.com/users/ostackbrian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-04T15:25:51Z", "updated_at": "2017-12-31T14:29:09Z", "closed_at": "2017-12-31T14:29:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This was detected by openstack/python-glanceclient unit tests.  Here's a command line example:\r\n\r\n$ cat has-friend.json\r\n{ \"name\": \"fred\", \"friend\": \"barney\", \"spouse\": \"betty\" }\r\n$ cat no-friend.json\r\n{ \"name\": \"fred\", \"spouse\": \"betty\" }\r\n\r\n$ jsondiff --version\r\njsondiff 1.20\r\n$ jsondiff has-friend.json no-friend.json\r\n[{\"path\": \"/friend\", \"value\": \"barney\", \"op\": \"remove\"}]\r\n\r\n$ /usr/local/bin/jsondiff --version\r\njsondiff 1.16\r\n$ /usr/local/bin/jsondiff has-friend.json no-friend.json\r\n[{\"path\": \"/friend\", \"op\": \"remove\"}]\r\n\r\nMy reading of https://tools.ietf.org/html/rfc6902#section-4.2 is the 1.16 version is correct.\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/74", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/74/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/74/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/74", "id": 275740999, "node_id": "MDU6SXNzdWUyNzU3NDA5OTk=", "number": 74, "title": "Array within a dict throws a \"list assignment index out of range\" exception", "user": {"login": "kevinhaeni", "id": 10581997, "node_id": "MDQ6VXNlcjEwNTgxOTk3", "avatar_url": "https://avatars2.githubusercontent.com/u/10581997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinhaeni", "html_url": "https://github.com/kevinhaeni", "followers_url": "https://api.github.com/users/kevinhaeni/followers", "following_url": "https://api.github.com/users/kevinhaeni/following{/other_user}", "gists_url": "https://api.github.com/users/kevinhaeni/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinhaeni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinhaeni/subscriptions", "organizations_url": "https://api.github.com/users/kevinhaeni/orgs", "repos_url": "https://api.github.com/users/kevinhaeni/repos", "events_url": "https://api.github.com/users/kevinhaeni/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinhaeni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-21T14:55:17Z", "updated_at": "2017-11-25T18:14:03Z", "closed_at": "2017-11-25T18:14:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, we have encountered the following issue when adding a value to an array within a dictionary:\r\n\r\n```\r\n        old = {'key': [{'someNumber': 0, 'someArray': [1, 2, 3]}]}\r\n        new = {'key': [{'someNumber': 0, 'someArray': [1, 2, 3, 4]}]}\r\n        patches = jsonpatch.make_patch(old,new)\r\n```\r\n\r\nMake_patch raises a \"list assignment index out of range\" exception. Any idea?\r\n\r\nI have quickly checked with a debugger and it seems that the make_patch originally generates a correct 'add' operation, however, the optimzer creates the following operation:\r\n\r\n`[{\"value\": 4, \"path\": \"/key/0/someArray/3\", \"op\": \"replace\"}]\r\n`\r\nwhich is of course not correct and might result in the above error when you apply the operations to the old object:\r\n`    new = patch.apply(src)`\r\n\r\nany idea how to fix this? As a workaround, I have just disabled optimizations in the first from_diff call. Is that a possible workaround?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/73", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/73/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/73/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/73", "id": 272192246, "node_id": "MDU6SXNzdWUyNzIxOTIyNDY=", "number": 73, "title": "escape sequences not implemented", "user": {"login": "nielslaukens", "id": 454359, "node_id": "MDQ6VXNlcjQ1NDM1OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/454359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nielslaukens", "html_url": "https://github.com/nielslaukens", "followers_url": "https://api.github.com/users/nielslaukens/followers", "following_url": "https://api.github.com/users/nielslaukens/following{/other_user}", "gists_url": "https://api.github.com/users/nielslaukens/gists{/gist_id}", "starred_url": "https://api.github.com/users/nielslaukens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nielslaukens/subscriptions", "organizations_url": "https://api.github.com/users/nielslaukens/orgs", "repos_url": "https://api.github.com/users/nielslaukens/repos", "events_url": "https://api.github.com/users/nielslaukens/events{/privacy}", "received_events_url": "https://api.github.com/users/nielslaukens/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-08T13:08:43Z", "updated_at": "2017-11-08T13:52:46Z", "closed_at": "2017-11-08T13:25:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "[RFC6901 section 3](https://tools.ietf.org/html/rfc6901#section-3) defines the syntax for the `path` part of an operation. It specifies 2 escape sequences for keys that must be used. Currently, python-json-patch does not implement these correctly.\r\n\r\nTest case:\r\n```python\r\nimport jsonpatch\r\njsonpatch.apply_patch({}, {'op': 'add', 'path': '/test-0123-1456', 'value': 42})\r\n```\r\n\r\nexpected result:\r\n`{'test-123/456': 42}`\r\n\r\nactual result:\r\n`{'test-0123-1456': 42}`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/70", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/70/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/70/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/70", "id": 256401360, "node_id": "MDU6SXNzdWUyNTY0MDEzNjA=", "number": 70, "title": "Move and Remove don't seem to work with MariaDB, SQLAlchemy on Flask", "user": {"login": "Torniojaws", "id": 5442750, "node_id": "MDQ6VXNlcjU0NDI3NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5442750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Torniojaws", "html_url": "https://github.com/Torniojaws", "followers_url": "https://api.github.com/users/Torniojaws/followers", "following_url": "https://api.github.com/users/Torniojaws/following{/other_user}", "gists_url": "https://api.github.com/users/Torniojaws/gists{/gist_id}", "starred_url": "https://api.github.com/users/Torniojaws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Torniojaws/subscriptions", "organizations_url": "https://api.github.com/users/Torniojaws/orgs", "repos_url": "https://api.github.com/users/Torniojaws/repos", "events_url": "https://api.github.com/users/Torniojaws/events{/privacy}", "received_events_url": "https://api.github.com/users/Torniojaws/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-09-09T00:29:30Z", "updated_at": "2017-09-09T14:59:35Z", "closed_at": "2017-09-09T14:59:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "All the other ops work just fine, but ``move`` and ``remove`` don't seem to delete anything? Is there some limitation with for example MariaDB and/or SQLAlchemy? I am using the PyMySQL driver.\r\n\r\n**Update**:\r\nSee my third post in this issue with a more valid case in point. In that, the move/remove fails even when the DB column allows NULL values.\r\n\r\n```\r\nself = <test_views.TestNewsView testMethod=test_patching_things_using_remove>\r\n\r\n    def test_patching_things_using_remove(self):\r\n        response = self.app.patch(\r\n            \"/api/1.0/news/{}\".format(int(self.news_ids[0])),\r\n            data=json.dumps(\r\n                [{\r\n                    \"op\": \"remove\",\r\n                    \"path\": \"/author\"\r\n                }]\r\n            ),\r\n            content_type=\"application/json\"\r\n        )\r\n\r\n        news = News.query.get_or_404(self.news_ids[0])\r\n\r\n        self.assertEquals(200, response.status_code)\r\n>       self.assertEquals(None, news.Author)\r\nE       AssertionError: None != 'UnitTest Author'\r\n```\r\n\r\nThe implementation:\r\n\r\n``PATCH /news/123``\r\n```\r\n    def patch(self, news_id):\r\n        \"\"\"Change an existing News item partially using an instruction-based JSON, as defined by:\r\n        https://tools.ietf.org/html/rfc6902\r\n        \"\"\"\r\n        news_item = News.query.get_or_404(news_id)\r\n        result = None\r\n        try:\r\n            self.patch_item(news_item, request.get_json())\r\n            db.session.commit()\r\n\r\n            news_item = News.query.get_or_404(news_id)\r\n            result = news_item.asdict()\r\n        except JsonPatchTestFailed:\r\n            # This is raised when using \"op\": \"test\" and the compared values are not identical\r\n            result = {\"success\": False, \"result\": \"Existing value is not identical to tested one\"}\r\n\r\n        return make_response(jsonify(result), 200)\r\n```\r\nThe method:\r\n```\r\n    def patch_item(self, news, patchdata, **kwargs):\r\n        # Map the values to DB column names\r\n        mapped_patchdata = []\r\n        for p in patchdata:\r\n            # Replace eg. /title with /Title\r\n            p = self.patch_mapping(p)\r\n            mapped_patchdata.append(p)\r\n        # What I do above is to convert:\r\n        # This: [{\"op\": \"remove\", \"path\": \"/title\"}]\r\n        # Into: [{\"op\": \"remove\", \"path\": \"/Title\"}]\r\n\r\n        data = news.asdict(exclude_pk=True, **kwargs)\r\n        patch = JsonPatch(mapped_patchdata)\r\n        data = patch.apply(data)\r\n        news.fromdict(data)\r\n```\r\nThe mapping:\r\n```\r\n    def patch_mapping(self, patch):\r\n        \"\"\"This is used to map a patch \"path\" or \"from\" to a custom value.\r\n        Useful for when the patch path/from is not the same as the DB column name.\r\n\r\n        Eg.\r\n        PATCH /news/123\r\n        [{ \"op\": \"move\", \"from\": \"/title\", \"path\": \"/author\" }]\r\n\r\n        If the News column is \"Title\", having \"/title\" would fail to patch because the case does\r\n        not match. So the mapping converts this:\r\n            { \"op\": \"move\", \"from\": \"/title\", \"path\": \"/author\" }\r\n        To this:\r\n            { \"op\": \"move\", \"from\": \"/Title\", \"path\": \"/Author\" }\r\n        \"\"\"\r\n        mapping = {\r\n            \"/title\": \"/Title\",\r\n            \"/contents\": \"/Contents\",\r\n            \"/author\": \"/Author\"\r\n        }\r\n\r\n        mutable = deepcopy(patch)\r\n        for prop in patch:\r\n            if prop == \"path\" or prop == \"from\":\r\n                mutable[prop] = mapping.get(patch[prop], None)\r\n        return mutable\r\n```\r\n\r\nAs mentioned, all other cases work just fine and the DB values are patched correctly. But with ``move`` and ``remove`` it seems nothing happens. I don't have any foreign keys or anything in the DB for the elements which fail.\r\n\r\nHere's the fail for ``move``. What is interesting is that the value *is* moved correctly to ``/author``, as it passes the assert. In the beginning of the test, the value of ``/author`` is ``UnitTest Author``. It's just the deletion of ``/contents`` that fails.\r\n```\r\nself = <test_views.TestNewsView testMethod=test_patching_things_using_move>\r\n\r\n    def test_patching_things_using_move(self):\r\n        response = self.app.patch(\r\n            \"/api/1.0/news/{}\".format(int(self.news_ids[0])),\r\n            data=json.dumps(\r\n                [{\r\n                    \"op\": \"move\",\r\n                    \"from\": \"/contents\",\r\n                    \"path\": \"/author\"\r\n                }]\r\n            ),\r\n            content_type=\"application/json\"\r\n        )\r\n\r\n        news = News.query.get_or_404(self.news_ids[0])\r\n\r\n        self.assertEquals(200, response.status_code)\r\n        self.assertEquals(\"UnitTest Contents\", news.Author)\r\n>       self.assertEquals(None, news.Contents)\r\nE       AssertionError: None != 'UnitTest Contents'\r\n\r\ntests/news/test_views.py:202: AssertionError\r\n```\r\n\r\nThe DB:\r\n![image](https://user-images.githubusercontent.com/5442750/30235299-f1bf45ee-950f-11e7-9eca-085e33611a95.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/67", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/67/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/67/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/67", "id": 254751327, "node_id": "MDU6SXNzdWUyNTQ3NTEzMjc=", "number": 67, "title": "Please package the next version as v1.20", "user": {"login": "geofft", "id": 74644, "node_id": "MDQ6VXNlcjc0NjQ0", "avatar_url": "https://avatars1.githubusercontent.com/u/74644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geofft", "html_url": "https://github.com/geofft", "followers_url": "https://api.github.com/users/geofft/followers", "following_url": "https://api.github.com/users/geofft/following{/other_user}", "gists_url": "https://api.github.com/users/geofft/gists{/gist_id}", "starred_url": "https://api.github.com/users/geofft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geofft/subscriptions", "organizations_url": "https://api.github.com/users/geofft/orgs", "repos_url": "https://api.github.com/users/geofft/repos", "events_url": "https://api.github.com/users/geofft/events{/privacy}", "received_events_url": "https://api.github.com/users/geofft/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-01T21:04:49Z", "updated_at": "2017-11-25T18:10:55Z", "closed_at": "2017-11-25T18:10:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm working on updating the packaging for python-json-patch in Debian, and it looks like at some point in the past, we had packaged v1.10 as v1.19 (I'm not sure if this was a previous Debian maintainer making a typo, or a v1.19 tag in the upstream repo - we have [a git commit that claims to merge the v1.19 tag](https://anonscm.debian.org/cgit/openstack/python/python-json-patch.git/commit/?h=debian/liberty&id=586cda77ff999a096347e61c2f1807dc61221d2b), but no such tag currently exists in your repo). This mistake has also propagated to downstream distributions including Ubuntu.\r\n\r\nSince we need version numbers to increase for upgrades to happen, Ubuntu is working around this by calling the latest version \"1.19+really1.16\", which sorts after \"1.19\" (see https://pad.lv/1704024), and I'll do the same in Debian.\r\n\r\nDo you mind giving the next release the version number 1.20, so that we can resynchronize and get onto reasonable version numbers? Sorry about the trouble, and thanks for your software!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/66", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/66/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/66/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/66", "id": 249826685, "node_id": "MDU6SXNzdWUyNDk4MjY2ODU=", "number": 66, "title": "make_patch cannot handle addition of nested dictionaries", "user": {"login": "zauberparacelsus", "id": 548168, "node_id": "MDQ6VXNlcjU0ODE2OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/548168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zauberparacelsus", "html_url": "https://github.com/zauberparacelsus", "followers_url": "https://api.github.com/users/zauberparacelsus/followers", "following_url": "https://api.github.com/users/zauberparacelsus/following{/other_user}", "gists_url": "https://api.github.com/users/zauberparacelsus/gists{/gist_id}", "starred_url": "https://api.github.com/users/zauberparacelsus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zauberparacelsus/subscriptions", "organizations_url": "https://api.github.com/users/zauberparacelsus/orgs", "repos_url": "https://api.github.com/users/zauberparacelsus/repos", "events_url": "https://api.github.com/users/zauberparacelsus/events{/privacy}", "received_events_url": "https://api.github.com/users/zauberparacelsus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-12T18:06:10Z", "updated_at": "2017-08-14T13:53:03Z", "closed_at": "2017-08-14T13:53:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "make_patch fails when you add a dictionary object as an element to another existing dictionary.\r\n\r\nThe following code will reproduce the problem, with the output being an empty list:\r\n```python\r\nimport jsonpatch\r\nsourceData = {\"foo\": {}}\r\noutput = dict(sourceData)\r\noutput[\"foo\"][\"bar\"] = {\"a\": 1, \"b\": 2, \"c\": 3}\r\nprint(jsonpatch.make_patch(sourceData, output))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/64", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/64/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/64/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/64", "id": 243408448, "node_id": "MDU6SXNzdWUyNDM0MDg0NDg=", "number": 64, "title": "Version in jsonpatch.py is 1.15 not 1.16", "user": {"login": "petedmarsh", "id": 1192314, "node_id": "MDQ6VXNlcjExOTIzMTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1192314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petedmarsh", "html_url": "https://github.com/petedmarsh", "followers_url": "https://api.github.com/users/petedmarsh/followers", "following_url": "https://api.github.com/users/petedmarsh/following{/other_user}", "gists_url": "https://api.github.com/users/petedmarsh/gists{/gist_id}", "starred_url": "https://api.github.com/users/petedmarsh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petedmarsh/subscriptions", "organizations_url": "https://api.github.com/users/petedmarsh/orgs", "repos_url": "https://api.github.com/users/petedmarsh/repos", "events_url": "https://api.github.com/users/petedmarsh/events{/privacy}", "received_events_url": "https://api.github.com/users/petedmarsh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-17T14:11:20Z", "updated_at": "2017-07-17T19:19:18Z", "closed_at": "2017-07-17T19:19:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just noticed that  `__version__` in `jsonpatch.py` is `1.15` but the current release version is 1.16 - the commit bumping to 1.16 appears to be missing from master (https://github.com/stefankoegl/python-json-patch/commit/1fc5e2022ff2c5796bd28af56646b135ede4ee71).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/60", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/60/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/60/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/60", "id": 213634293, "node_id": "MDU6SXNzdWUyMTM2MzQyOTM=", "number": 60, "title": "Feature request: patch using jsonpointer", "user": {"login": "austinnichols101", "id": 6962379, "node_id": "MDQ6VXNlcjY5NjIzNzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/6962379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/austinnichols101", "html_url": "https://github.com/austinnichols101", "followers_url": "https://api.github.com/users/austinnichols101/followers", "following_url": "https://api.github.com/users/austinnichols101/following{/other_user}", "gists_url": "https://api.github.com/users/austinnichols101/gists{/gist_id}", "starred_url": "https://api.github.com/users/austinnichols101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/austinnichols101/subscriptions", "organizations_url": "https://api.github.com/users/austinnichols101/orgs", "repos_url": "https://api.github.com/users/austinnichols101/repos", "events_url": "https://api.github.com/users/austinnichols101/events{/privacy}", "received_events_url": "https://api.github.com/users/austinnichols101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-12T20:57:29Z", "updated_at": "2018-04-02T16:03:57Z", "closed_at": "2018-04-02T16:03:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "@stefankoegl - thanks for all of your work. \r\n\r\nFeature request - \r\n\r\nI am manually constructing a patch from a set of pre-created jsonpointer objects.  When I create the patch I'm using the `path` property of the pointer:\r\n\r\n`patch.append({'op': 'add', 'path': pointer.path, 'value': value })`\r\n\r\nFor large documents, this creates a small bit of overhead as I'm having pointer convert to a path, and then back again when `jsonpointer.JsonPointer.from_parts` is called when the patch is applied.  \r\n\r\nI would like to be able to use just `pointer` instead of `pointer.path` .  No sense in parsing twice...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/57", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/57/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/57/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/57", "id": 198170002, "node_id": "MDU6SXNzdWUxOTgxNzAwMDI=", "number": 57, "title": "inspect.getargspec(json.load) break with Python 3.6", "user": {"login": "Natim", "id": 229453, "node_id": "MDQ6VXNlcjIyOTQ1Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/229453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Natim", "html_url": "https://github.com/Natim", "followers_url": "https://api.github.com/users/Natim/followers", "following_url": "https://api.github.com/users/Natim/following{/other_user}", "gists_url": "https://api.github.com/users/Natim/gists{/gist_id}", "starred_url": "https://api.github.com/users/Natim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Natim/subscriptions", "organizations_url": "https://api.github.com/users/Natim/orgs", "repos_url": "https://api.github.com/users/Natim/repos", "events_url": "https://api.github.com/users/Natim/events{/privacy}", "received_events_url": "https://api.github.com/users/Natim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-12-30T16:56:04Z", "updated_at": "2017-01-12T21:31:05Z", "closed_at": "2017-01-12T21:31:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\njsonpatch.py:108: in get_loadjson\r\n\r\n    argspec = inspect.getargspec(json.load)\r\n```\r\n\r\n**ValueError: Function has keyword-only parameters or annotations, use getfullargspec() API which can support them**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/56", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/56/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/56/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/56", "id": 188684356, "node_id": "MDU6SXNzdWUxODg2ODQzNTY=", "number": 56, "title": "Cannot be imported on Python 3.6, because of keyword-only argument inspection", "user": {"login": "jmoldow", "id": 1150978, "node_id": "MDQ6VXNlcjExNTA5Nzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1150978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmoldow", "html_url": "https://github.com/jmoldow", "followers_url": "https://api.github.com/users/jmoldow/followers", "following_url": "https://api.github.com/users/jmoldow/following{/other_user}", "gists_url": "https://api.github.com/users/jmoldow/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmoldow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmoldow/subscriptions", "organizations_url": "https://api.github.com/users/jmoldow/orgs", "repos_url": "https://api.github.com/users/jmoldow/repos", "events_url": "https://api.github.com/users/jmoldow/events{/privacy}", "received_events_url": "https://api.github.com/users/jmoldow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-11T04:47:42Z", "updated_at": "2018-05-31T18:55:11Z", "closed_at": "2016-11-11T05:08:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "jsonpatch==1.14 on Python 3.6 cannot be imported.\r\n\r\nIt fails with the following stacktrace:\r\n\r\n```python\r\n      .tox/py/lib/python3.6/site-packages/jsonpatch.py:114: in <module>\r\n          json.load = get_loadjson()\r\n      .tox/py/lib/python3.6/site-packages/jsonpatch.py:108: in get_loadjson\r\n          argspec = inspect.getargspec(json.load)\r\n      lib/python3.6/inspect.py:1039: in getargspec\r\n          raise ValueError(\"Function has keyword-only arguments or annotations\"\r\n      E   ValueError: Function has keyword-only arguments or annotations, use getfullargspec() API which can support them\r\n```\r\n\r\nThe error message is a bit misleading. In Python >=3.5, `inspect.getfullargspec()` is also deprecated, in favor of `inspect.signature()`.\r\n\r\nhttps://docs.python.org/3.6/library/inspect.html#inspect.getfullargspec\r\n\r\nThis happened because Python 3.6 changed all optional arguments to be keyword-only.\r\n\r\nhttps://docs.python.org/3.6/library/json.html#json.load", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/55", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/55/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/55/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/55", "id": 173547574, "node_id": "MDU6SXNzdWUxNzM1NDc1NzQ=", "number": 55, "title": "Incorrect patch produced", "user": {"login": "trvrm", "id": 1843539, "node_id": "MDQ6VXNlcjE4NDM1Mzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1843539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trvrm", "html_url": "https://github.com/trvrm", "followers_url": "https://api.github.com/users/trvrm/followers", "following_url": "https://api.github.com/users/trvrm/following{/other_user}", "gists_url": "https://api.github.com/users/trvrm/gists{/gist_id}", "starred_url": "https://api.github.com/users/trvrm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trvrm/subscriptions", "organizations_url": "https://api.github.com/users/trvrm/orgs", "repos_url": "https://api.github.com/users/trvrm/repos", "events_url": "https://api.github.com/users/trvrm/events{/privacy}", "received_events_url": "https://api.github.com/users/trvrm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-26T21:30:41Z", "updated_at": "2017-06-15T15:36:58Z", "closed_at": "2017-06-15T15:36:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\nsrc =  [{'a': 1},{'b': 2}]\ndst =  [{'a': 1,'b': 2}]\n\npatch = jsonpatch.make_patch(src,dst)\nprint(patch.patch)\nprint(patch.apply(src))\nassert patch.apply(src)==dst\n```\n\nproduces the following patch\n\n``` python\n[\n    {'op': 'remove', 'path': '/1'}, \n    {'op': 'replace', 'value': 1, 'path': '/0/a'}\n]\n```\n\nWhich when applied to `src` produces \n\n``` python\n[{'a': 1}]\n```\n\nwhich is obviously incorrect, and fails the assertion. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/54", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/54/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/54/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/54", "id": 173322774, "node_id": "MDU6SXNzdWUxNzMzMjI3NzQ=", "number": 54, "title": "Error applying patch created by `make_patch`", "user": {"login": "trvrm", "id": 1843539, "node_id": "MDQ6VXNlcjE4NDM1Mzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1843539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trvrm", "html_url": "https://github.com/trvrm", "followers_url": "https://api.github.com/users/trvrm/followers", "following_url": "https://api.github.com/users/trvrm/following{/other_user}", "gists_url": "https://api.github.com/users/trvrm/gists{/gist_id}", "starred_url": "https://api.github.com/users/trvrm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trvrm/subscriptions", "organizations_url": "https://api.github.com/users/trvrm/orgs", "repos_url": "https://api.github.com/users/trvrm/repos", "events_url": "https://api.github.com/users/trvrm/events{/privacy}", "received_events_url": "https://api.github.com/users/trvrm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-25T22:10:31Z", "updated_at": "2017-06-15T15:37:11Z", "closed_at": "2017-06-15T15:37:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "applying a simple patch created by diffing a list containing a dict:\n\n``` python\n        src = [{}]\n        dst = [{'key': ''}]\n        patch = jsonpatch.make_patch(src, dst)\n        res = patch.apply(src)\n```\n\ncauses\n\n```\njsonpatch.JsonPatchConflict: can't replace non-existent object 'key'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/49", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/49/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/49/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/49", "id": 152493850, "node_id": "MDU6SXNzdWUxNTI0OTM4NTA=", "number": 49, "title": "Trouble creating a patch from objects in array", "user": {"login": "jayme-github", "id": 1632246, "node_id": "MDQ6VXNlcjE2MzIyNDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1632246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayme-github", "html_url": "https://github.com/jayme-github", "followers_url": "https://api.github.com/users/jayme-github/followers", "following_url": "https://api.github.com/users/jayme-github/following{/other_user}", "gists_url": "https://api.github.com/users/jayme-github/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayme-github/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayme-github/subscriptions", "organizations_url": "https://api.github.com/users/jayme-github/orgs", "repos_url": "https://api.github.com/users/jayme-github/repos", "events_url": "https://api.github.com/users/jayme-github/events{/privacy}", "received_events_url": "https://api.github.com/users/jayme-github/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-05-02T07:15:24Z", "updated_at": "2017-10-27T17:03:10Z", "closed_at": "2017-10-27T17:03:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using jsonpatch as part of [pykube](https://github.com/eldarion-gondor/pykube) to generate patches for kubernetes object definitions. The following (reduced) example generates a wrong patch for me:\n\noriginal.json:\n\n``` json\n{\n    \"containers\": [\n        {\n            \"name\": \"fpm\",\n            \"image\": \"eu.gcr.io/foo/bar:v1\"\n        },\n        {\n            \"name\": \"fluentd\",\n            \"image\": \"eu.gcr.io/foo/bar:v1\"\n        }\n    ]\n}\n```\n\nmodified.json:\n\n``` json\n{\n    \"containers\": [\n        {\n            \"name\": \"fpm\",\n            \"image\": \"eu.gcr.io/foo/bar:v2\"\n        },\n        {\n            \"name\": \"fluentd\",\n            \"image\": \"eu.gcr.io/foo/bar:v0\"\n        }\n    ]\n}\n```\n\njsonpatch.make_patch() output:\n\n``` json\n[\n    {\n        \"path\": \"/containers/1/image\",\n        \"value\": \"eu.gcr.io/foo/bar:v0\",\n        \"op\": \"replace\"\n    },\n    {\n        \"path\": \"/containers/0\",\n        \"value\": {\n            \"image\": \"eu.gcr.io/foo/bar:v2\",\n            \"name\": \"fpm\"\n        },\n        \"op\": \"replace\"\n    }\n]\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/48", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/48/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/48/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/48", "id": 149416205, "node_id": "MDU6SXNzdWUxNDk0MTYyMDU=", "number": 48, "title": "Cannot make a reverse patch (test 'Add into composite value')", "user": {"login": "ukch", "id": 973865, "node_id": "MDQ6VXNlcjk3Mzg2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/973865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ukch", "html_url": "https://github.com/ukch", "followers_url": "https://api.github.com/users/ukch/followers", "following_url": "https://api.github.com/users/ukch/following{/other_user}", "gists_url": "https://api.github.com/users/ukch/gists{/gist_id}", "starred_url": "https://api.github.com/users/ukch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ukch/subscriptions", "organizations_url": "https://api.github.com/users/ukch/orgs", "repos_url": "https://api.github.com/users/ukch/repos", "events_url": "https://api.github.com/users/ukch/events{/privacy}", "received_events_url": "https://api.github.com/users/ukch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-19T10:25:10Z", "updated_at": "2017-06-15T15:38:09Z", "closed_at": "2017-06-15T15:38:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "In my code, I am taking a patch, applying it, then creating a reverse patch so I can revert the changes in future should I wish (sort of like a very simple VCS). I am using the [tests.json](https://github.com/json-patch/json-patch-tests/blob/master/tests.json) file to test my own code, and it is failing the test 'Add into composite value'.\n\nHere is a simplified example of the code that is failing:\n\n``` python\nimport jsonpatch\ntest = {\n    \"comment\": \"Add into composite value\",\n    \"doc\": {\"foo\": 1, \"baz\": [{\"qux\": \"hello\"}]},\n    \"patch\": [{\"op\": \"add\", \"path\": \"/baz/0/foo\", \"value\": \"world\"}],\n    \"expected\": {\"foo\": 1, \"baz\": [{\"qux\": \"hello\", \"foo\": \"world\"}]}\n}\npatch = jsonpatch.JsonPatch(test[\"patch\"])\nnew_doc = patch.apply(test[\"doc\"])\nassert new_doc == test[\"expected\"]\nreverse_patch = jsonpatch.make_patch(new_doc, test[\"doc\"])\n# do something with reverse_patch\n```\n\nAnd here is the traceback I am getting:\n\n``` python-traceback\nTraceback (most recent call last):\n  File \"test.py\", line 11, in <module>\n    reverse_patch = jsonpatch.make_patch(new_doc, test[\"doc\"])\n  File \"$VIRTUAL_ENV/lib/python3.5/site-packages/jsonpatch.py\", line 171, in make_patch\n    return JsonPatch.from_diff(src, dst)\n  File \"$VIRTUAL_ENV/lib/python3.5/site-packages/jsonpatch.py\", line 322, in from_diff\n    return cls(list(compare_values([], src, dst)))\n  File \"$VIRTUAL_ENV/lib/python3.5/site-packages/jsonpatch.py\", line 293, in compare_values\n    for operation in compare_dicts(path, value, other):\n  File \"$VIRTUAL_ENV/lib/python3.5/site-packages/jsonpatch.py\", line 310, in compare_dicts\n    for operation in compare_values(current, src[key], dst[key]):\n  File \"$VIRTUAL_ENV/lib/python3.5/site-packages/jsonpatch.py\", line 297, in compare_values\n    for operation in compare_lists(path, value, other):\n  File \"$VIRTUAL_ENV/lib/python3.5/site-packages/jsonpatch.py\", line 739, in _optimize\n    _optimize_using_replace(ops_by_path[item['path']], item)\n  File \"$VIRTUAL_ENV/lib/python3.5/site-packages/jsonpatch.py\", line 772, in _optimize_using_replace\n    prev['value'] = patch.patch[0]['value']\nKeyError: 'value'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/47", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/47/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/47/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/47", "id": 149062002, "node_id": "MDU6SXNzdWUxNDkwNjIwMDI=", "number": 47, "title": "wrong patch result returned under 1.13", "user": {"login": "woosley", "id": 61531, "node_id": "MDQ6VXNlcjYxNTMx", "avatar_url": "https://avatars3.githubusercontent.com/u/61531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/woosley", "html_url": "https://github.com/woosley", "followers_url": "https://api.github.com/users/woosley/followers", "following_url": "https://api.github.com/users/woosley/following{/other_user}", "gists_url": "https://api.github.com/users/woosley/gists{/gist_id}", "starred_url": "https://api.github.com/users/woosley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/woosley/subscriptions", "organizations_url": "https://api.github.com/users/woosley/orgs", "repos_url": "https://api.github.com/users/woosley/repos", "events_url": "https://api.github.com/users/woosley/events{/privacy}", "received_events_url": "https://api.github.com/users/woosley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-18T07:03:31Z", "updated_at": "2017-06-15T15:39:27Z", "closed_at": "2017-06-15T15:39:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "versions: \n\n```\n$python --version\nPython 3.4.3\n(mytest) woosley@maddog:~/code/jsonpatch_test\n$pip show jsonpatch\n\n---\nName: jsonpatch\nVersion: 1.13\nLocation: /Users/woosley/.pyenv/versions/3.4.3/envs/mytest/lib/python3.4/site-packages\nRequires: jsonpointer\n```\n\n``` python\nimport json\nimport jsonpatch\n\nmydict = {\n    \"dicts\": [\n        {\"user\": \"admin\",\n         \"permission\": \"admin\"},\n        {\"user\": \"dvzone\",\n         \"permission\": \"read_write\"},\n        {\"user\": \"dvzone_readonly\",\n         \"permission\": \"read_write\"},\n    ],\n}\nmydict2 = {\n    \"dicts\": [\n        {\"user\": \"admin\",\n         \"permission\": \"admin\",\n         \"pass\": \"pass\"},\n        {\"user\": \"dvzon\",\n         \"pass\": \"pass\",\n         \"permission\": \"read_write\"},\n        {\"user\": \"dvzone_readonly\",\n         \"pass\": \"pass\",\n         \"permission\": \"read_write\"},\n    ],\n}\nprint(json.dumps(list(jsonpatch.make_patch(mydict, mydict2)), indent=4))\n```\n\n```\n$python a.py\n[\n    {\n        \"path\": \"/dicts/2/pass\",   # this path does not exist in mydict.\n        \"op\": \"replace\",\n        \"value\": \"pass\"\n    },\n    {\n        \"path\": \"/dicts/1\",\n        \"op\": \"replace\",\n        \"value\": {\n            \"permission\": \"read_write\",\n            \"user\": \"dvzon\",\n            \"pass\": \"pass\"\n        }\n    },\n    {\n        \"path\": \"/dicts/0\",\n        \"op\": \"replace\",\n        \"value\": {\n            \"permission\": \"admin\",\n            \"user\": \"admin\",\n            \"pass\": \"pass\"\n        }\n    }\n]\n```\n\nit is working fine under jsonpatch 1.11\n\n```\n$pip show jsonpatch\nName: jsonpatch\nVersion: 1.11\nLocation: /Users/woosley/.pyenv/versions/3.4.3/lib/python3.4/site-packages/jsonpatch-1.11-py3.4.egg\nRequires: jsonpointer\n\n$python a.py\n[\n    {\n        \"value\": {\n            \"pass\": \"pass\",\n            \"user\": \"dvzone_readonly\",\n            \"permission\": \"read_write\"\n        },\n        \"op\": \"replace\",\n        \"path\": \"/dicts/2\"\n    },\n    {\n        \"value\": {\n            \"pass\": \"pass\",\n            \"user\": \"dvzon\",\n            \"permission\": \"read_write\"\n        },\n        \"op\": \"replace\",\n        \"path\": \"/dicts/1\"\n    },\n    {\n        \"value\": {\n            \"pass\": \"pass\",\n            \"user\": \"admin\",\n            \"permission\": \"admin\"\n        },\n        \"op\": \"replace\",\n        \"path\": \"/dicts/0\"\n    }\n]\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/42", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/42/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/42/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/42", "id": 111101784, "node_id": "MDU6SXNzdWUxMTExMDE3ODQ=", "number": 42, "title": "Can't install with pyenv virtualenv on OS X: UnicodeDecodeError ", "user": {"login": "audiodude", "id": 57832, "node_id": "MDQ6VXNlcjU3ODMy", "avatar_url": "https://avatars1.githubusercontent.com/u/57832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/audiodude", "html_url": "https://github.com/audiodude", "followers_url": "https://api.github.com/users/audiodude/followers", "following_url": "https://api.github.com/users/audiodude/following{/other_user}", "gists_url": "https://api.github.com/users/audiodude/gists{/gist_id}", "starred_url": "https://api.github.com/users/audiodude/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/audiodude/subscriptions", "organizations_url": "https://api.github.com/users/audiodude/orgs", "repos_url": "https://api.github.com/users/audiodude/repos", "events_url": "https://api.github.com/users/audiodude/events{/privacy}", "received_events_url": "https://api.github.com/users/audiodude/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-13T04:19:31Z", "updated_at": "2015-10-28T19:26:28Z", "closed_at": "2015-10-28T19:26:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using a pyenv virtualenv on OS X 10.9 with python 3.4.2.\n\nThe install command was `pip install -r requirements.txt` for a project that has dependencies on jsonpatch.\n\nThis is what's in the install log:\n\n```\n  Downloading jsonpatch-0.4.tar.gz\n  Downloading from URL https://pypi.python.org/packages/source/j/jsonpatch/jsonpatch-0.4.tar.gz#md5=81b31ded626e6c15b4cc8b8f094e9490 (from https://pypi.python.org/simple/jsonpatch/)\n  Running setup.py (path:/Users/tmoney/.pyenv/versions/inspectors-general/build/jsonpatch/setup.py) egg_info for package jsonpatch\nDownloading/unpacking jsonpatch==0.4 (from internetarchive->-r requirements.txt (line 10))\n  Downloading jsonpatch-0.4.tar.gz\n  Running setup.py (path:/Users/tmoney/.pyenv/versions/inspectors-general/build/jsonpatch/setup.py) egg_info for package jsonpatch\n    Traceback (most recent call last):\n      File \"<string>\", line 17, in <module>\n      File \"/Users/tmoney/.pyenv/versions/inspectors-general/build/jsonpatch/setup.py\", line 13, in <module>\n        src = open('jsonpatch.py').read()\n      File \"/Users/tmoney/.pyenv/versions/3.4.2/lib/python3.4/encodings/ascii.py\", line 26, in decode\n        return codecs.ascii_decode(input, self.errors)[0]\n    UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 173: ordinal not in range(128)\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n\n  File \"<string>\", line 17, in <module>\n\n  File \"/Users/tmoney/.pyenv/versions/inspectors-general/build/jsonpatch/setup.py\", line 13, in <module>\n\n    src = open('jsonpatch.py').read()\n\n  File \"/Users/tmoney/.pyenv/versions/3.4.2/lib/python3.4/encodings/ascii.py\", line 26, in decode\n\n    return codecs.ascii_decode(input, self.errors)[0]\n\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 173: ordinal not in range(128)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/41", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/41/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/41/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/41", "id": 109394877, "node_id": "MDU6SXNzdWUxMDkzOTQ4Nzc=", "number": 41, "title": "apply_patch function failed for array in nested structure", "user": {"login": "kevinxin90", "id": 10997542, "node_id": "MDQ6VXNlcjEwOTk3NTQy", "avatar_url": "https://avatars2.githubusercontent.com/u/10997542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinxin90", "html_url": "https://github.com/kevinxin90", "followers_url": "https://api.github.com/users/kevinxin90/followers", "following_url": "https://api.github.com/users/kevinxin90/following{/other_user}", "gists_url": "https://api.github.com/users/kevinxin90/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinxin90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinxin90/subscriptions", "organizations_url": "https://api.github.com/users/kevinxin90/orgs", "repos_url": "https://api.github.com/users/kevinxin90/repos", "events_url": "https://api.github.com/users/kevinxin90/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinxin90/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-10-01T22:08:26Z", "updated_at": "2017-11-25T18:16:53Z", "closed_at": "2017-11-25T18:16:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "This issue is similar to issue #40 , but it happens when using the apply_patch function.\n\nA 'JsonPatchConflict: can't insert outside of list' error would raise every time we try to use apply_patch function between two docs having array inside a nested structure.\n\nTake the following example:\n\n```\ndoc5 = {'school':{'names':['Kevin','Carl']}}\n\ndoc6 = {'school':{'names':['Carl','Kate','Kevin','Jake']}}\n\npatch = jsonpatch.JsonPatch.from_diff(doc5, doc6)\n\njsonpatch.apply_patch(doc5,patch)\n```\n\nWhen it run it produce the following error:\n\n```\n----> 1 jsonpatch.apply_patch(doc5,patch)\n\n/home/kevinxin/ENV/src/jsonpatch/jsonpatch.py in apply_patch(doc, patch, in_place)\n    149     else:\n    150         patch = JsonPatch(patch)\n--> 151     return patch.apply(doc, in_place)\n    152\n    153\n\n/home/kevinxin/ENV/src/jsonpatch/jsonpatch.py in apply(self, obj, in_place)\n    347\n    348         for operation in self._ops:\n--> 349             obj = operation.apply(obj)\n    350\n    351         return obj\n\n/home/kevinxin/ENV/src/jsonpatch/jsonpatch.py in apply(self, obj)\n    498             'path': self.location,\n    499             'value': value\n--> 500         }).apply(obj)\n    501\n    502         return obj\n\n/home/kevinxin/ENV/src/jsonpatch/jsonpatch.py in apply(self, obj)\n    422\n    423             elif part > len(subobj) or part < 0:\n--> 424                 raise JsonPatchConflict(\"can't insert outside of list\")\n    425\n    426             else:\n\nJsonPatchConflict: can't insert outside of list\n```\n\nHowever, it the array is not in nested structure, the problem is gone.\n\nTake the following example\uff1a\n\n```\ndoc3 = {'names':['kevin','Carl']}\n\ndoc4 = {'names':['Carl','Kate','Kevin','Jake']}\n\npatch = jsonpatch.JsonPatch.from_diff(doc3, doc4)\n\njsonpatch.apply_patch(doc3,patch)\nOut: {'names': ['Carl', 'Kate', 'Kevin', 'Jake']}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/40", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/40/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/40/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/40", "id": 97710177, "node_id": "MDU6SXNzdWU5NzcxMDE3Nw==", "number": 40, "title": "Issue generating Array diff tree", "user": {"login": "neoshrew", "id": 9039399, "node_id": "MDQ6VXNlcjkwMzkzOTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9039399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neoshrew", "html_url": "https://github.com/neoshrew", "followers_url": "https://api.github.com/users/neoshrew/followers", "following_url": "https://api.github.com/users/neoshrew/following{/other_user}", "gists_url": "https://api.github.com/users/neoshrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/neoshrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neoshrew/subscriptions", "organizations_url": "https://api.github.com/users/neoshrew/orgs", "repos_url": "https://api.github.com/users/neoshrew/repos", "events_url": "https://api.github.com/users/neoshrew/events{/privacy}", "received_events_url": "https://api.github.com/users/neoshrew/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-28T13:40:51Z", "updated_at": "2015-11-03T19:08:08Z", "closed_at": "2015-11-03T19:08:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "(I did look at issue #30 , but that was after a successful creation of a patch. Apologies if I've misunderstood and it is the same issue)\n\nI've been starting at this, and it looks like the issue lies in _split_by_common_seq\n\nTake the following example\n\n``` python\nimport jsonpatch\n\nsrc = [8, 7, 2, 1, 0, 9, 4, 3, 5, 6]\ndest = [7, 2, 1, 0, 9, 4, 3, 6, 5, 8]\n\npatch = jsonpatch.make_patch(src, dest)\n```\n\nWhen run, it produces the following error\n\n```\n$ python tmp.py \nTraceback (most recent call last):\n  File \"tmp.py\", line 6, in <module>\n    patch = jsonpatch.make_patch(src, dest)\n  File \"/space/TMP/crap/python-json-patch/jsonpatch.py\", line 171, in make_patch\n    return JsonPatch.from_diff(src, dst)\n  File \"/space/TMP/crap/python-json-patch/jsonpatch.py\", line 322, in from_diff\n    return cls(list(compare_values([], src, dst)))\n  File \"/space/TMP/crap/python-json-patch/jsonpatch.py\", line 297, in compare_values\n    for operation in compare_lists(path, value, other):\n  File \"/space/TMP/crap/python-json-patch/jsonpatch.py\", line 730, in _optimize\n    for item in operations:\n  File \"/space/TMP/crap/python-json-patch/jsonpatch.py\", line 649, in _compare\n    for op, _ in _compare_with_shift(path, src, dst, left, right, 0):\n  File \"/space/TMP/crap/python-json-patch/jsonpatch.py\", line 672, in _compare_with_shift\n    shift=shift):\n  File \"/space/TMP/crap/python-json-patch/jsonpatch.py\", line 672, in _compare_with_shift\n    shift=shift):\n  File \"/space/TMP/crap/python-json-patch/jsonpatch.py\", line 675, in _compare_with_shift\n    for item, shift in _compare_right(path, dst, right, shift):\n  File \"/space/TMP/crap/python-json-patch/jsonpatch.py\", line 710, in _compare_right\n    {'op': 'add', 'path': ptr.path, 'value': dst[idx]},\nIndexError: list index out of range\n```\n\nIf we look at the output of `_split_by_common_seq`\n\n```\n>>> jsonpatch._split_by_common_seq(src, dest)\n[[(0, 1), None], [[(8, 9), None], [None, (9, 11)]]]\n```\n\nThat (9, 11) is causing the issue, as dest is only 10 items long.\n\nIt looks like it's made this tree, which is valid.\n\n```\n[7, 2, 1, 0, 9, 4, 3]\n   /   \\\n[8]     [6]\n        / \\\n     [5]   [5, 8]\n```\n\nBased on that, the last tuple shuld be `(8, 10)`, which would work.\n\nI've been staring at this and I can't work it out. I think it's something in the way the indexes are added together when recursing, but my brain can never handle logic to do with list indices.\n\nAny suggestions would be great as it turns out this pattern of Array appears frequently in the data I'm dealing with.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/39", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/39/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/39/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/39", "id": 90971266, "node_id": "MDU6SXNzdWU5MDk3MTI2Ng==", "number": 39, "title": "test test_make_patch_unicode fails in -1.11 under py2.7, pypy", "user": {"login": "idella", "id": 1655078, "node_id": "MDQ6VXNlcjE2NTUwNzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1655078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idella", "html_url": "https://github.com/idella", "followers_url": "https://api.github.com/users/idella/followers", "following_url": "https://api.github.com/users/idella/following{/other_user}", "gists_url": "https://api.github.com/users/idella/gists{/gist_id}", "starred_url": "https://api.github.com/users/idella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idella/subscriptions", "organizations_url": "https://api.github.com/users/idella/orgs", "repos_url": "https://api.github.com/users/idella/repos", "events_url": "https://api.github.com/users/idella/events{/privacy}", "received_events_url": "https://api.github.com/users/idella/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-25T13:52:29Z", "updated_at": "2015-06-25T13:55:59Z", "closed_at": "2015-06-25T13:55:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` bash\n..............................................E....................\n======================================================================\nERROR: test_make_patch_unicode (__main__.MakePatchTestCase)\nTest if unicode keys and values are handled correctly\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"tests.py\", line 358, in test_make_patch_unicode\n    patch = jsonpatch.make_patch(src, dst)\n  File \"/mnt/gen2/TmpDir/portage/dev-python/jsonpatch-1.11/work/jsonpatch-1.11/jsonpatch.py\", line 171, in make_patch\n    return JsonPatch.from_diff(src, dst)\n  File \"/mnt/gen2/TmpDir/portage/dev-python/jsonpatch-1.11/work/jsonpatch-1.11/jsonpatch.py\", line 322, in from_diff\n    return cls(list(compare_values([], src, dst)))\n  File \"/mnt/gen2/TmpDir/portage/dev-python/jsonpatch-1.11/work/jsonpatch-1.11/jsonpatch.py\", line 293, in compare_values\n    for operation in compare_dicts(path, value, other):\n  File \"/mnt/gen2/TmpDir/portage/dev-python/jsonpatch-1.11/work/jsonpatch-1.11/jsonpatch.py\", line 314, in compare_dicts\n    ptr = JsonPointer.from_parts(path + [key])\n  File \"/usr/lib64/python2.7/site-packages/jsonpointer.py\", line 291, in from_parts\n    parts = [str(part) for part in parts]\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\xee' in position 0: ordinal not in range(128)\n\n----------------------------------------------------------------------\nRan 67 tests in 0.025s\n\nFAILED (errors=1)\n```\n\nditto pypy.\nDo you require any further information?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/37", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/37/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/37/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/37", "id": 87043414, "node_id": "MDU6SXNzdWU4NzA0MzQxNA==", "number": 37, "title": "json.load method overriding", "user": {"login": "BlueMonday", "id": 3181677, "node_id": "MDQ6VXNlcjMxODE2Nzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3181677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BlueMonday", "html_url": "https://github.com/BlueMonday", "followers_url": "https://api.github.com/users/BlueMonday/followers", "following_url": "https://api.github.com/users/BlueMonday/following{/other_user}", "gists_url": "https://api.github.com/users/BlueMonday/gists{/gist_id}", "starred_url": "https://api.github.com/users/BlueMonday/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BlueMonday/subscriptions", "organizations_url": "https://api.github.com/users/BlueMonday/orgs", "repos_url": "https://api.github.com/users/BlueMonday/repos", "events_url": "https://api.github.com/users/BlueMonday/events{/privacy}", "received_events_url": "https://api.github.com/users/BlueMonday/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-10T17:20:52Z", "updated_at": "2017-11-25T17:52:29Z", "closed_at": "2017-11-25T17:52:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nI was wondering why `json.load` is overridden and set to a partial. It doesn't seem like `json.load` is used at all in the library, instead `json.loads` is used. The way it is currently set up, importing `jsonpatch` will result in a different behaviour for `json.load`. \r\n\r\nThis is due to these specific lines in `jsonpatch`: \r\n\r\n```python\r\nimport json \r\njson.load = ... \r\n```\r\n\r\nThis led to a bunch of really sneaky bugs... I was trying to use the `object_hook` of `json.load` but some library I was using imported `jsonpatch` which sets the `object_pairs_hook` parameter so `object_hook` was not being used (if `object_pairs_hook` is not None it gets used instead of `object_hook`). \r\n\r\nIf the intention was to override `json.loads` can it be done in a way that doesn't affect every library that imports `jsonpatch`? If that is not the case could the override be removed since it is not used?\r\n\r\nI am not known for being good at explaining... Let me know if you want me to clarify!\r\n\r\n@stefankoegl \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/36", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/36/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/36/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/36", "id": 79461847, "node_id": "MDU6SXNzdWU3OTQ2MTg0Nw==", "number": 36, "title": "The produced patch is not the minimal one", "user": {"login": "stanch", "id": 2670454, "node_id": "MDQ6VXNlcjI2NzA0NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2670454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stanch", "html_url": "https://github.com/stanch", "followers_url": "https://api.github.com/users/stanch/followers", "following_url": "https://api.github.com/users/stanch/following{/other_user}", "gists_url": "https://api.github.com/users/stanch/gists{/gist_id}", "starred_url": "https://api.github.com/users/stanch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stanch/subscriptions", "organizations_url": "https://api.github.com/users/stanch/orgs", "repos_url": "https://api.github.com/users/stanch/repos", "events_url": "https://api.github.com/users/stanch/events{/privacy}", "received_events_url": "https://api.github.com/users/stanch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-22T13:47:22Z", "updated_at": "2016-02-13T18:05:59Z", "closed_at": "2016-02-13T14:43:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nConsider the following example:\n\n``` javascript\n\u2192  jsondiff <(echo '[{\"foo\": 1, \"bar\": 2}]') <(echo '[{\"foo\": 2, \"bar\": 2}]') | jq .\n[\n  {\n    \"path\": \"/0\",\n    \"value\": {\n      \"foo\": 2,\n      \"bar\": 2\n    },\n    \"op\": \"replace\"\n  }\n]\n```\n\nI think the result should be:\n\n``` javascript\n[\n  {\n    \"path\": \"/0/foo\",\n    \"value\": 2,\n    \"op\": \"replace\"\n  }\n]\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/35", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/35/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/35/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/35", "id": 72429326, "node_id": "MDU6SXNzdWU3MjQyOTMyNg==", "number": 35, "title": "Key order", "user": {"login": "st0nx", "id": 11751448, "node_id": "MDQ6VXNlcjExNzUxNDQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/11751448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/st0nx", "html_url": "https://github.com/st0nx", "followers_url": "https://api.github.com/users/st0nx/followers", "following_url": "https://api.github.com/users/st0nx/following{/other_user}", "gists_url": "https://api.github.com/users/st0nx/gists{/gist_id}", "starred_url": "https://api.github.com/users/st0nx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/st0nx/subscriptions", "organizations_url": "https://api.github.com/users/st0nx/orgs", "repos_url": "https://api.github.com/users/st0nx/repos", "events_url": "https://api.github.com/users/st0nx/events{/privacy}", "received_events_url": "https://api.github.com/users/st0nx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-01T13:08:59Z", "updated_at": "2017-06-15T15:32:55Z", "closed_at": "2017-06-15T15:32:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "if I have the key order:\n\"{\"path\": \"/cvc\", \"value\": 1112, \"op\": \"replace\"}\"\nI get an InvalidJsonPatch: Operation does not contain 'op' member.\nIt arises because \" _get_operation\" take the keys in the order where the first \"op\".\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/33", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/33/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/33/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/33", "id": 47609506, "node_id": "MDU6SXNzdWU0NzYwOTUwNg==", "number": 33, "title": "Support for MutableMappings / MutableSequences", "user": {"login": "andrewmichaelsmith", "id": 686224, "node_id": "MDQ6VXNlcjY4NjIyNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/686224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewmichaelsmith", "html_url": "https://github.com/andrewmichaelsmith", "followers_url": "https://api.github.com/users/andrewmichaelsmith/followers", "following_url": "https://api.github.com/users/andrewmichaelsmith/following{/other_user}", "gists_url": "https://api.github.com/users/andrewmichaelsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewmichaelsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewmichaelsmith/subscriptions", "organizations_url": "https://api.github.com/users/andrewmichaelsmith/orgs", "repos_url": "https://api.github.com/users/andrewmichaelsmith/repos", "events_url": "https://api.github.com/users/andrewmichaelsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewmichaelsmith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "stefankoegl", "id": 184196, "node_id": "MDQ6VXNlcjE4NDE5Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/184196?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefankoegl", "html_url": "https://github.com/stefankoegl", "followers_url": "https://api.github.com/users/stefankoegl/followers", "following_url": "https://api.github.com/users/stefankoegl/following{/other_user}", "gists_url": "https://api.github.com/users/stefankoegl/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefankoegl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefankoegl/subscriptions", "organizations_url": "https://api.github.com/users/stefankoegl/orgs", "repos_url": "https://api.github.com/users/stefankoegl/repos", "events_url": "https://api.github.com/users/stefankoegl/events{/privacy}", "received_events_url": "https://api.github.com/users/stefankoegl/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "stefankoegl", "id": 184196, "node_id": "MDQ6VXNlcjE4NDE5Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/184196?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefankoegl", "html_url": "https://github.com/stefankoegl", "followers_url": "https://api.github.com/users/stefankoegl/followers", "following_url": "https://api.github.com/users/stefankoegl/following{/other_user}", "gists_url": "https://api.github.com/users/stefankoegl/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefankoegl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefankoegl/subscriptions", "organizations_url": "https://api.github.com/users/stefankoegl/orgs", "repos_url": "https://api.github.com/users/stefankoegl/repos", "events_url": "https://api.github.com/users/stefankoegl/events{/privacy}", "received_events_url": "https://api.github.com/users/stefankoegl/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2014-11-03T15:58:05Z", "updated_at": "2015-04-23T16:48:27Z", "closed_at": "2014-11-03T20:41:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\n\nThis may or may not qualify as a bug in your eyes but thought I'd report it. \n\nBasically I have a project where I have implemented MutableMapping and MutableSequenece (https://docs.python.org/3/library/collections.abc.html`). \n\nIf I try and apply a patch (patch.apply) to my MutableMapping I get this error:\n\n```\n/usr/local/lib/python2.7/dist-packages/jsonpatch.py\", line 344, in apply\n    obj = operation.apply(obj)\n  File \"/usr/local/lib/python2.7/dist-packages/jsonpatch.py\", line 412, in apply\n    \"invalid document type %s\" (type(doc),)\nNameError: global name 'doc' is not defined\n```\n\nI assume this is because you're using `isinstance(subobj, dict)` to check if something is a dict (i.e. https://github.com/stefankoegl/python-json-patch/blob/master/jsonpatch.py#L422) and deciding my object is neither a list or a dict. \n\nI suppose one way to fix this would be to have `isinstance(subobj, dict) or isinstance(subjobj, MutableMapping)`.\n\n(looking at code on github I suspect this error would be slightly different, I'm currently on `jsonpatch.__version__ == 1.3`)\n\nAny thoughts?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/31", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/31/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/31/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/31", "id": 43961805, "node_id": "MDU6SXNzdWU0Mzk2MTgwNQ==", "number": 31, "title": "The command line utils not working.", "user": {"login": "gabe0x02", "id": 154245, "node_id": "MDQ6VXNlcjE1NDI0NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/154245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabe0x02", "html_url": "https://github.com/gabe0x02", "followers_url": "https://api.github.com/users/gabe0x02/followers", "following_url": "https://api.github.com/users/gabe0x02/following{/other_user}", "gists_url": "https://api.github.com/users/gabe0x02/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabe0x02/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabe0x02/subscriptions", "organizations_url": "https://api.github.com/users/gabe0x02/orgs", "repos_url": "https://api.github.com/users/gabe0x02/repos", "events_url": "https://api.github.com/users/gabe0x02/events{/privacy}", "received_events_url": "https://api.github.com/users/gabe0x02/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-09-25T20:11:29Z", "updated_at": "2014-09-30T00:23:17Z", "closed_at": "2014-09-26T15:27:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "The command line utils don't seem to install correctly for me on OSX.\n\nI installed with easy_install and I can use the library just fine.  Not sure what went wrong.\n\nThanks\n\n```\nGabriels-MacBook-Air:~ gabe$ sudo easy_install jsonpatch\nSearching for jsonpatch\nBest match: jsonpatch 1.7\nProcessing jsonpatch-1.7-py2.7.egg\njsonpatch 1.7 is already the active version in easy-install.pth\nInstalling jsonpatch script to /usr/local/bin\nInstalling jsondiff script to /usr/local/bin\nInstalling jsonpatch script to /usr/local/bin\nInstalling jsondiff script to /usr/local/bin\nGabriels-MacBook-Air:~ gabe$ jsondiff\nTraceback (most recent call last):\n  File \"/usr/local/bin/jsondiff\", line 8, in <module>\n    load_entry_point('jsonpatch==1.7', 'console_scripts', 'jsondiff')()\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources.py\", line 318, in load_entry_point\n    return get_distribution(dist).load_entry_point(group, name)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources.py\", line 2221, in load_entry_point\n    return ep.load()\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources.py\", line 1954, in load\n    entry = __import__(self.module_name, globals(),globals(), ['__name__'])\nImportError: No module named jsondiff\nGabriels-MacBook-Air:~ gabe$ jsonpatch\nTraceback (most recent call last):\n  File \"/usr/local/bin/jsonpatch\", line 8, in <module>\n    load_entry_point('jsonpatch==1.7', 'console_scripts', 'jsonpatch')()\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources.py\", line 318, in load_entry_point\n    return get_distribution(dist).load_entry_point(group, name)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources.py\", line 2221, in load_entry_point\n    return ep.load()\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources.py\", line 1959, in load\n    raise ImportError(\"%r has no %r attribute\" % (entry,attr))\nImportError: <module 'jsonpatch' from '/Library/Python/2.7/site-packages/jsonpatch-1.7-py2.7.egg/jsonpatch.pyc'> has no 'main' attribute\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/30", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/30/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/30/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/30", "id": 38211004, "node_id": "MDU6SXNzdWUzODIxMTAwNA==", "number": 30, "title": "Array diff bug", "user": {"login": "yhack", "id": 5070148, "node_id": "MDQ6VXNlcjUwNzAxNDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5070148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yhack", "html_url": "https://github.com/yhack", "followers_url": "https://api.github.com/users/yhack/followers", "following_url": "https://api.github.com/users/yhack/following{/other_user}", "gists_url": "https://api.github.com/users/yhack/gists{/gist_id}", "starred_url": "https://api.github.com/users/yhack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yhack/subscriptions", "organizations_url": "https://api.github.com/users/yhack/orgs", "repos_url": "https://api.github.com/users/yhack/repos", "events_url": "https://api.github.com/users/yhack/events{/privacy}", "received_events_url": "https://api.github.com/users/yhack/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2014-07-18T20:48:29Z", "updated_at": "2017-11-25T17:52:09Z", "closed_at": "2017-11-25T17:52:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Great program, but I think I found a bug. These steps will reproduce it:\n\nsrc = [1,2,3] \ndes = [3,1,4,2] \nCreate a patch from these then apply the patch to src. It will produce an index out of bounds exception. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/29", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/29/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/29/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/29", "id": 37751222, "node_id": "MDU6SXNzdWUzNzc1MTIyMg==", "number": 29, "title": "Golang port guidance", "user": {"login": "cameront", "id": 290529, "node_id": "MDQ6VXNlcjI5MDUyOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/290529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cameront", "html_url": "https://github.com/cameront", "followers_url": "https://api.github.com/users/cameront/followers", "following_url": "https://api.github.com/users/cameront/following{/other_user}", "gists_url": "https://api.github.com/users/cameront/gists{/gist_id}", "starred_url": "https://api.github.com/users/cameront/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cameront/subscriptions", "organizations_url": "https://api.github.com/users/cameront/orgs", "repos_url": "https://api.github.com/users/cameront/repos", "events_url": "https://api.github.com/users/cameront/events{/privacy}", "received_events_url": "https://api.github.com/users/cameront/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-07-13T23:04:20Z", "updated_at": "2014-07-17T17:53:56Z", "closed_at": "2014-07-17T17:53:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello -- and first of all, thank you for python-json-patch!\n\nI've spent some time porting your code to a golang implementation at: [go-jsonpatch](https://github.com/cameront/go-jsonpatch)\n\nI've never ported a library across languages before, and I have very little experience with open source licensing, so I had some questions for you:\n1) I've read the [COPYING](https://github.com/stefankoegl/python-json-patch/blob/master/COPYING) notice. Does this mean that you'd like me to add the copyright notice to each of the source files in my repo as well?\n2) I assume you'd like this distributed under the same modified [BSD license](http://opensource.org/licenses/BSD-3-Clause), is that correct?\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/28", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/28/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/28/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/28", "id": 34571474, "node_id": "MDU6SXNzdWUzNDU3MTQ3NA==", "number": 28, "title": "patch top level arrays", "user": {"login": "bsr203", "id": 1966521, "node_id": "MDQ6VXNlcjE5NjY1MjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1966521?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bsr203", "html_url": "https://github.com/bsr203", "followers_url": "https://api.github.com/users/bsr203/followers", "following_url": "https://api.github.com/users/bsr203/following{/other_user}", "gists_url": "https://api.github.com/users/bsr203/gists{/gist_id}", "starred_url": "https://api.github.com/users/bsr203/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bsr203/subscriptions", "organizations_url": "https://api.github.com/users/bsr203/orgs", "repos_url": "https://api.github.com/users/bsr203/repos", "events_url": "https://api.github.com/users/bsr203/events{/privacy}", "received_events_url": "https://api.github.com/users/bsr203/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-05-29T16:48:56Z", "updated_at": "2014-06-24T18:38:48Z", "closed_at": "2014-06-24T18:35:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does the input to json patch always needs to be an object, not array? I see the method `from_diff` only accepts objects. Is there a way to get the patch if top level is an array.\n\n```\n   def test_apply_patch_to_copy(self):\n        src = [{'foo': 'bar', 'boo': 'qux'}]\n        dst = [{'baz': 'qux', 'foo': 'boo'}]\n        patch = jsonpatch.make_patch(src, dst)\n        res = patch.apply(src)\n        self.assertTrue(src is not res)\n\n```\n\n```\n  File \"/Users/xx/python-json-patch/jsonpatch.py\", line 311, in from_diff\n    return cls(list(compare_dicts([], src, dst)))\n  File \"/Users/xx/python-json-patch/jsonpatch.py\", line 306, in compare_dicts\n    'value': dst[key]}\nTypeError: list indices must be integers, not dict\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/26", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/26/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/26/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/26", "id": 29815914, "node_id": "MDU6SXNzdWUyOTgxNTkxNA==", "number": 26, "title": "Making a patch with \"/\" in key", "user": {"login": "johanfforsberg", "id": 1274600, "node_id": "MDQ6VXNlcjEyNzQ2MDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1274600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johanfforsberg", "html_url": "https://github.com/johanfforsberg", "followers_url": "https://api.github.com/users/johanfforsberg/followers", "following_url": "https://api.github.com/users/johanfforsberg/following{/other_user}", "gists_url": "https://api.github.com/users/johanfforsberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/johanfforsberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johanfforsberg/subscriptions", "organizations_url": "https://api.github.com/users/johanfforsberg/orgs", "repos_url": "https://api.github.com/users/johanfforsberg/repos", "events_url": "https://api.github.com/users/johanfforsberg/events{/privacy}", "received_events_url": "https://api.github.com/users/johanfforsberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-03-20T12:52:48Z", "updated_at": "2014-03-22T18:18:12Z", "closed_at": "2014-03-22T18:03:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm using jsonpatch on dicts where there are keys with the normal slash (\"/\") character in them:\n\na = {\"x/y\": 1}\nb = {\"x/y\": 2}\np = make_patch(a, b)\nprint p\n[{\"path\": \"/x/y\", \"value\": 2, \"op\": \"replace\"}]\n\nSo far so good, but applying the patch does not work:\n\np.apply(a)\n...\nJsonPointerException: member 'x' not found in {'x/y': 1}\n\n...which is not so unexpected since the key \"x\" does not exist.\n\nFrom my reading of the json-pointer RFC, slash should be replaced by \"~1\" in key names, and indeed, if I make this change to the patch it applies:\n\np.patch[0][\"path\"] = u'/x~1y'\np.apply(a)\n{'x/y': 2}\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/24", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/24/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/24/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/24", "id": 27626997, "node_id": "MDU6SXNzdWUyNzYyNjk5Nw==", "number": 24, "title": "Detect move operations when diffing two structures", "user": {"login": "zbyte64", "id": 89620, "node_id": "MDQ6VXNlcjg5NjIw", "avatar_url": "https://avatars0.githubusercontent.com/u/89620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zbyte64", "html_url": "https://github.com/zbyte64", "followers_url": "https://api.github.com/users/zbyte64/followers", "following_url": "https://api.github.com/users/zbyte64/following{/other_user}", "gists_url": "https://api.github.com/users/zbyte64/gists{/gist_id}", "starred_url": "https://api.github.com/users/zbyte64/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zbyte64/subscriptions", "organizations_url": "https://api.github.com/users/zbyte64/orgs", "repos_url": "https://api.github.com/users/zbyte64/repos", "events_url": "https://api.github.com/users/zbyte64/events{/privacy}", "received_events_url": "https://api.github.com/users/zbyte64/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-02-14T21:41:50Z", "updated_at": "2014-03-22T10:51:28Z", "closed_at": "2014-03-22T10:51:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently if I reorder objects in an array and diff two structures make_patch will return with replace operations instead of move. For example the following will return 3 place operations instead of 1 move::\n\n```\njsonpatch.make_patch({\"foo\":[1,2,3]}, {\"foo\":[3,1,2]}).to_string()\n'[{\"path\": \"/foo/0\", \"value\": 3, \"op\": \"replace\"}, {\"path\": \"/foo/1\", \"value\": 1, \"op\": \"replace\"}, {\"path\": \"/foo/2\", \"value\": 2, \"op\": \"replace\"}]'\n```\n\nIf the elements are even more complex then we get even more unnecessary operations::\n\n```\njsonpatch.make_patch({\"foo\":[{\"myobject\": 1}, {\"herobject\": 2}]}, {\"foo\":[{\"herobject\": 2}, {\"myobject\": 1}]}).to_string()\n'[{\"path\": \"/foo/0/myobject\", \"op\": \"remove\"}, {\"path\": \"/foo/0/herobject\", \"value\": 2, \"op\": \"add\"}, {\"path\": \"/foo/1/herobject\", \"op\": \"remove\"}, {\"path\": \"/foo/1/myobject\", \"value\": 1, \"op\": \"add\"}]'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/23", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/23/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/23/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/23", "id": 26459911, "node_id": "MDU6SXNzdWUyNjQ1OTkxMQ==", "number": 23, "title": "Patching objects", "user": {"login": "mattupstate", "id": 166176, "node_id": "MDQ6VXNlcjE2NjE3Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/166176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattupstate", "html_url": "https://github.com/mattupstate", "followers_url": "https://api.github.com/users/mattupstate/followers", "following_url": "https://api.github.com/users/mattupstate/following{/other_user}", "gists_url": "https://api.github.com/users/mattupstate/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattupstate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattupstate/subscriptions", "organizations_url": "https://api.github.com/users/mattupstate/orgs", "repos_url": "https://api.github.com/users/mattupstate/repos", "events_url": "https://api.github.com/users/mattupstate/events{/privacy}", "received_events_url": "https://api.github.com/users/mattupstate/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-01-28T17:29:12Z", "updated_at": "2014-01-28T18:16:15Z", "closed_at": "2014-01-28T18:16:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd love to be able to patch regular Python objects. I figured making a little adapter that makes my object behave like a dictionary would be sufficient. Like so:\n\n``` python\nclass PatchAdapter(object):\n\n    def __init__(self, obj):\n        self.obj = obj\n\n    def __getitem__(self, item):\n        return getattr(self.obj, item)\n\n    def __setitem__(self, item, value):\n        setattr(self.obj, item, value)\n```\n\nMaybe I'm naive, but the `jsonpatch` only allows patches to be applied to `dict` and `list` objects, which prevented this from happening. Was wondering if this might be able to be accommodated or you could suggest a different approach. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/16", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/16/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/16/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/16", "id": 20075394, "node_id": "MDU6SXNzdWUyMDA3NTM5NA==", "number": 16, "title": "Please include license text in the tarball", "user": {"login": "apevec", "id": 934852, "node_id": "MDQ6VXNlcjkzNDg1Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/934852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apevec", "html_url": "https://github.com/apevec", "followers_url": "https://api.github.com/users/apevec/followers", "following_url": "https://api.github.com/users/apevec/following{/other_user}", "gists_url": "https://api.github.com/users/apevec/gists{/gist_id}", "starred_url": "https://api.github.com/users/apevec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apevec/subscriptions", "organizations_url": "https://api.github.com/users/apevec/orgs", "repos_url": "https://api.github.com/users/apevec/repos", "events_url": "https://api.github.com/users/apevec/events{/privacy}", "received_events_url": "https://api.github.com/users/apevec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-09-25T22:53:50Z", "updated_at": "2013-10-11T21:54:16Z", "closed_at": "2013-09-26T19:55:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Source tarball[1] on pypi does not contain the license file[2]\nProposed patch would be:\n--- a/MANIFEST.in\n+++ b/MANIFEST.in\n@@ -1 +1,2 @@\n include requirements.txt\n+include COPYING\n\n[1] https://pypi.python.org/packages/source/j/jsonpatch/jsonpatch-1.1.tar.gz\n[2] https://github.com/stefankoegl/python-json-patch/blob/master/COPYING\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/14", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/14/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/14/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/14", "id": 13859983, "node_id": "MDU6SXNzdWUxMzg1OTk4Mw==", "number": 14, "title": "Submit this to pypi!", "user": {"login": "aaronharnly", "id": 11905, "node_id": "MDQ6VXNlcjExOTA1", "avatar_url": "https://avatars0.githubusercontent.com/u/11905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaronharnly", "html_url": "https://github.com/aaronharnly", "followers_url": "https://api.github.com/users/aaronharnly/followers", "following_url": "https://api.github.com/users/aaronharnly/following{/other_user}", "gists_url": "https://api.github.com/users/aaronharnly/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaronharnly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaronharnly/subscriptions", "organizations_url": "https://api.github.com/users/aaronharnly/orgs", "repos_url": "https://api.github.com/users/aaronharnly/repos", "events_url": "https://api.github.com/users/aaronharnly/events{/privacy}", "received_events_url": "https://api.github.com/users/aaronharnly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-05-01T18:34:42Z", "updated_at": "2013-05-01T18:39:06Z", "closed_at": "2013-05-01T18:37:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a handy tool, and it'd be nice to be able to include it as a normal-looking dependency in `pip` or `setup.py` (rather than via the ungainly `git+https://github.com/stefankoegl/python-json-patch.git`). \n\nI'd be delighted if you submit it to pypi!\n\nIt's quite easy to do:\nhttp://docs.python.org/2.7/distutils/packageindex.html\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/13", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/13/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/13/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/13", "id": 12554198, "node_id": "MDU6SXNzdWUxMjU1NDE5OA==", "number": 13, "title": "Command line interface", "user": {"login": "peritus", "id": 11022, "node_id": "MDQ6VXNlcjExMDIy", "avatar_url": "https://avatars0.githubusercontent.com/u/11022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peritus", "html_url": "https://github.com/peritus", "followers_url": "https://api.github.com/users/peritus/followers", "following_url": "https://api.github.com/users/peritus/following{/other_user}", "gists_url": "https://api.github.com/users/peritus/gists{/gist_id}", "starred_url": "https://api.github.com/users/peritus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peritus/subscriptions", "organizations_url": "https://api.github.com/users/peritus/orgs", "repos_url": "https://api.github.com/users/peritus/repos", "events_url": "https://api.github.com/users/peritus/events{/privacy}", "received_events_url": "https://api.github.com/users/peritus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "stefankoegl", "id": 184196, "node_id": "MDQ6VXNlcjE4NDE5Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/184196?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefankoegl", "html_url": "https://github.com/stefankoegl", "followers_url": "https://api.github.com/users/stefankoegl/followers", "following_url": "https://api.github.com/users/stefankoegl/following{/other_user}", "gists_url": "https://api.github.com/users/stefankoegl/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefankoegl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefankoegl/subscriptions", "organizations_url": "https://api.github.com/users/stefankoegl/orgs", "repos_url": "https://api.github.com/users/stefankoegl/repos", "events_url": "https://api.github.com/users/stefankoegl/events{/privacy}", "received_events_url": "https://api.github.com/users/stefankoegl/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "stefankoegl", "id": 184196, "node_id": "MDQ6VXNlcjE4NDE5Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/184196?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefankoegl", "html_url": "https://github.com/stefankoegl", "followers_url": "https://api.github.com/users/stefankoegl/followers", "following_url": "https://api.github.com/users/stefankoegl/following{/other_user}", "gists_url": "https://api.github.com/users/stefankoegl/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefankoegl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefankoegl/subscriptions", "organizations_url": "https://api.github.com/users/stefankoegl/orgs", "repos_url": "https://api.github.com/users/stefankoegl/repos", "events_url": "https://api.github.com/users/stefankoegl/events{/privacy}", "received_events_url": "https://api.github.com/users/stefankoegl/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2013-03-28T09:15:29Z", "updated_at": "2013-10-13T13:35:34Z", "closed_at": "2013-10-13T13:35:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd really like to use this utility from the command line in JSON consuming shell scripts, perhaps like this:\n\n```\n$> echo '{\"spam\": \"eggs\"}' |\\\njsonpatch --pretty '[{\"path\": \"/ham\", \"op\": \"add\", \"value\": false}]'\n{\"spam\": \"eggs\", \"ham\": false}\n```\n\n(same would be for `jsonpointer`, and for json diff \u2014\u00a0should I file a separate issue ?)\n\nThis is the perfect companion to https://github.com/jkbr/httpie \u2014\u00a0I'm using https://github.com/ddopson/underscore-cli at the moment, although it's fairly sophisticated, I'd like some real jsonpatch.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/12", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/12/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/12/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/12", "id": 9632704, "node_id": "MDU6SXNzdWU5NjMyNzA0", "number": 12, "title": "error while installing", "user": {"login": "notslang", "id": 1049204, "node_id": "MDQ6VXNlcjEwNDkyMDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1049204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notslang", "html_url": "https://github.com/notslang", "followers_url": "https://api.github.com/users/notslang/followers", "following_url": "https://api.github.com/users/notslang/following{/other_user}", "gists_url": "https://api.github.com/users/notslang/gists{/gist_id}", "starred_url": "https://api.github.com/users/notslang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notslang/subscriptions", "organizations_url": "https://api.github.com/users/notslang/orgs", "repos_url": "https://api.github.com/users/notslang/repos", "events_url": "https://api.github.com/users/notslang/events{/privacy}", "received_events_url": "https://api.github.com/users/notslang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-01-03T00:51:10Z", "updated_at": "2013-01-03T08:34:41Z", "closed_at": "2013-01-03T08:34:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` bash\n\u10c5 ~ sudo pip install jsonpatch\nDownloading/unpacking jsonpatch\n  Downloading jsonpatch-0.11.tar.gz\n  Running setup.py egg_info for package jsonpatch\n    Traceback (most recent call last):\n      File \"<string>\", line 14, in <module>\n      File \"/home/slang/build/jsonpatch/setup.py\", line 23, in <module>\n        REQUIREMENTS = list(open('requirements.txt'))\n    IOError: [Errno 2] No such file or directory: 'requirements.txt'\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n\n  File \"<string>\", line 14, in <module>\n\n  File \"/home/slang/build/jsonpatch/setup.py\", line 23, in <module>\n\n    REQUIREMENTS = list(open('requirements.txt'))\n\nIOError: [Errno 2] No such file or directory: 'requirements.txt'\n\n----------------------------------------\nCommand python setup.py egg_info failed with error code 1\nStoring complete log in /home/slang/.pip/pip.log\n\n```\n\nlooks like issues with the current directory not being the location of requirements.txt. maybe use something like this:\n\n``` python\nimport os\n REQUIREMENTS = list(open(os.path.dirname(__file__) + '/requirements.txt'))\n```\n\n...but with that filepath join function so it doesn't die on windows\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/11", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/11/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/11/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/11", "id": 9263721, "node_id": "MDU6SXNzdWU5MjYzNzIx", "number": 11, "title": "__hash__ doesn't seem right.", "user": {"login": "rnd42", "id": 618839, "node_id": "MDQ6VXNlcjYxODgzOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/618839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rnd42", "html_url": "https://github.com/rnd42", "followers_url": "https://api.github.com/users/rnd42/followers", "following_url": "https://api.github.com/users/rnd42/following{/other_user}", "gists_url": "https://api.github.com/users/rnd42/gists{/gist_id}", "starred_url": "https://api.github.com/users/rnd42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rnd42/subscriptions", "organizations_url": "https://api.github.com/users/rnd42/orgs", "repos_url": "https://api.github.com/users/rnd42/repos", "events_url": "https://api.github.com/users/rnd42/events{/privacy}", "received_events_url": "https://api.github.com/users/rnd42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2012-12-13T19:41:53Z", "updated_at": "2012-12-14T08:24:00Z", "closed_at": "2012-12-14T08:24:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI was looking through the code base and noticed the in the **hash** function on the JsonPatch class you generate the hash with a frozenset.  Looking at the latest draft (http://tools.ietf.org/html/draft-pbryan-json-patch-04#section-3) it says \"Operations are applied sequentially in the order they appear in the array.\" therefore\n\n```\n[\n    {'op': 'replace', 'path': '/foo', 'value': 'bar'},\n    {'op': 'test', 'path': '/foo', 'value': 'bar'}\n]\n```\n\nand\n\n```\n[\n    {'op': 'test', 'path': '/foo', 'value': 'bar'},\n    {'op': 'replace', 'path': '/foo', 'value': 'bar'}\n]\n```\n\nShould evaluate as different patches, but would evaluate as the same patch with the frozenset implementation.  Perhaps a tuple which is also hashable would work better?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/10", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/10/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/10/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/10", "id": 8682584, "node_id": "MDU6SXNzdWU4NjgyNTg0", "number": 10, "title": "jsonpointer dep isn't installed on 'setup.py install'", "user": {"login": "bcwaldon", "id": 548759, "node_id": "MDQ6VXNlcjU0ODc1OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/548759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bcwaldon", "html_url": "https://github.com/bcwaldon", "followers_url": "https://api.github.com/users/bcwaldon/followers", "following_url": "https://api.github.com/users/bcwaldon/following{/other_user}", "gists_url": "https://api.github.com/users/bcwaldon/gists{/gist_id}", "starred_url": "https://api.github.com/users/bcwaldon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bcwaldon/subscriptions", "organizations_url": "https://api.github.com/users/bcwaldon/orgs", "repos_url": "https://api.github.com/users/bcwaldon/repos", "events_url": "https://api.github.com/users/bcwaldon/events{/privacy}", "received_events_url": "https://api.github.com/users/bcwaldon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-11-26T16:23:26Z", "updated_at": "2012-11-26T16:54:32Z", "closed_at": "2012-11-26T16:38:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "njord:python-json-pointer [master] % workon tmp\n(tmp)njord:python-json-pointer [master] % pip install jsonpatch  \nDownloading/unpacking jsonpatch\n  Downloading jsonpatch-0.8.tar.gz\n  Running setup.py egg_info for package jsonpatch\n\nInstalling collected packages: jsonpatch\n  Running setup.py install for jsonpatch\n\nSuccessfully installed jsonpatch\nCleaning up...\n(tmp)njord:python-json-pointer [master] % pip freeze\njsonpatch==0.8\nwsgiref==0.1.2\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/8", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/8/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/8/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/8", "id": 6831930, "node_id": "MDU6SXNzdWU2ODMxOTMw", "number": 8, "title": "Copying mutables", "user": {"login": "kxepal", "id": 785983, "node_id": "MDQ6VXNlcjc4NTk4Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/785983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kxepal", "html_url": "https://github.com/kxepal", "followers_url": "https://api.github.com/users/kxepal/followers", "following_url": "https://api.github.com/users/kxepal/following{/other_user}", "gists_url": "https://api.github.com/users/kxepal/gists{/gist_id}", "starred_url": "https://api.github.com/users/kxepal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kxepal/subscriptions", "organizations_url": "https://api.github.com/users/kxepal/orgs", "repos_url": "https://api.github.com/users/kxepal/repos", "events_url": "https://api.github.com/users/kxepal/events{/privacy}", "received_events_url": "https://api.github.com/users/kxepal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-09-12T21:10:30Z", "updated_at": "2012-09-14T13:26:03Z", "closed_at": "2012-09-14T13:26:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Following changeset 3829275 I wonder should next case fail or not?\n\n``` python\n    def test_copy_mutable(self):\n        obj = {'foo': [{'bar': 42}, {'baz': 3.14}], 'boo': []}\n        res = jsonpatch.apply_patch(obj, [{'copy': '/foo/0', 'to': '/boo/0' }])\n        self.assertEqual(res, {'foo': [{'bar': 42}, {'baz': 3.14}], 'boo': [{'bar': 42}]})\n        res['foo'][0]['zoo'] = 255\n        self.assertEqual(res['boo'], [{'bar': 42}])\n```\n\nActually it does...\n\n```\n======================================================================\nFAIL: test_copy_mutable (__main__.ApplyPatchTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"tests.py\", line 93, in test_copy_mutable\n    self.assertEqual(res['boo'], [{'bar': 42}])\nAssertionError: Lists differ: [{'bar': 42, 'zoo': 255}] != [{'bar': 42}]\n\nFirst differing element 0:\n{'bar': 42, 'zoo': 255}\n{'bar': 42}\n\n- [{'bar': 42, 'zoo': 255}]\n+ [{'bar': 42}]\n\n----------------------------------------------------------------------\nRan 27 tests in 0.007s\n\nFAILED (failures=1)\n```\n\nHowever, specification doesn't says anything about how mutable objects should be copied, so it this expected behavior or actually not?\n\n_UPDATE_: fixed English and refactored sentences.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/7", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/7/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/7/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/7", "id": 6764531, "node_id": "MDU6SXNzdWU2NzY0NTMx", "number": 7, "title": "Implement 'copy' operation", "user": {"login": "bcwaldon", "id": 548759, "node_id": "MDQ6VXNlcjU0ODc1OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/548759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bcwaldon", "html_url": "https://github.com/bcwaldon", "followers_url": "https://api.github.com/users/bcwaldon/followers", "following_url": "https://api.github.com/users/bcwaldon/following{/other_user}", "gists_url": "https://api.github.com/users/bcwaldon/gists{/gist_id}", "starred_url": "https://api.github.com/users/bcwaldon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bcwaldon/subscriptions", "organizations_url": "https://api.github.com/users/bcwaldon/orgs", "repos_url": "https://api.github.com/users/bcwaldon/repos", "events_url": "https://api.github.com/users/bcwaldon/events{/privacy}", "received_events_url": "https://api.github.com/users/bcwaldon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2012-09-10T15:29:07Z", "updated_at": "2012-09-11T09:44:19Z", "closed_at": "2012-09-11T09:44:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "The latest draft of json-patch adds a 'copy' operation: http://tools.ietf.org/html/draft-ietf-appsawg-json-patch-03#section-4.5\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/4", "repository_url": "https://api.github.com/repos/stefankoegl/python-json-patch", "labels_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/4/comments", "events_url": "https://api.github.com/repos/stefankoegl/python-json-patch/issues/4/events", "html_url": "https://github.com/stefankoegl/python-json-patch/issues/4", "id": 5522429, "node_id": "MDU6SXNzdWU1NTIyNDI5", "number": 4, "title": "make patch works wrong for lists", "user": {"login": "kxepal", "id": 785983, "node_id": "MDQ6VXNlcjc4NTk4Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/785983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kxepal", "html_url": "https://github.com/kxepal", "followers_url": "https://api.github.com/users/kxepal/followers", "following_url": "https://api.github.com/users/kxepal/following{/other_user}", "gists_url": "https://api.github.com/users/kxepal/gists{/gist_id}", "starred_url": "https://api.github.com/users/kxepal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kxepal/subscriptions", "organizations_url": "https://api.github.com/users/kxepal/orgs", "repos_url": "https://api.github.com/users/kxepal/repos", "events_url": "https://api.github.com/users/kxepal/events{/privacy}", "received_events_url": "https://api.github.com/users/kxepal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2012-07-10T13:07:32Z", "updated_at": "2012-07-18T17:52:47Z", "closed_at": "2012-07-18T17:52:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In short, there is very simple case that fails:\n\n``` python\nfrom jsonpatch import apply_patch, make_patch\nsrc = {'foo': [1, 3]}\ndst = {'foo': [0, 3, 3, 2]}\nprint apply_patch(src, make_patch(src, dst))\n```\n\nThat's possible because of `reversed` statement at https://github.com/stefankoegl/python-json-patch/blob/master/jsonpatch.py#L244\nIf we remove it code above would work perfectly, but we'll break next case:\n\n``` python\nfrom jsonpatch import apply_patch, make_patch\nsrc = {'foo': [1, 3]}\ndst = {'foo': [0, 3, 3, 2]}\nprint apply_patch(dst, make_patch(dst, src))\n```\n\nIn other words, we have to add items in ascending order and remove them in descending one. That's my code and my fault, I'll try to figure how to fix it in better way, just creating issue there to let you know about problem.\n", "performed_via_github_app": null, "score": 1.0}]}