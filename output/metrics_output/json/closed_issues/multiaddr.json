{"total_count": 15, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/55", "repository_url": "https://api.github.com/repos/multiformats/py-multiaddr", "labels_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/55/comments", "events_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/55/events", "html_url": "https://github.com/multiformats/py-multiaddr/issues/55", "id": 540344198, "node_id": "MDU6SXNzdWU1NDAzNDQxOTg=", "number": 55, "title": "Multiaddr is unhashable", "user": {"login": "ShadowJonathan", "id": 22740616, "node_id": "MDQ6VXNlcjIyNzQwNjE2", "avatar_url": "https://avatars0.githubusercontent.com/u/22740616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShadowJonathan", "html_url": "https://github.com/ShadowJonathan", "followers_url": "https://api.github.com/users/ShadowJonathan/followers", "following_url": "https://api.github.com/users/ShadowJonathan/following{/other_user}", "gists_url": "https://api.github.com/users/ShadowJonathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShadowJonathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShadowJonathan/subscriptions", "organizations_url": "https://api.github.com/users/ShadowJonathan/orgs", "repos_url": "https://api.github.com/users/ShadowJonathan/repos", "events_url": "https://api.github.com/users/ShadowJonathan/events{/privacy}", "received_events_url": "https://api.github.com/users/ShadowJonathan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-19T14:22:37Z", "updated_at": "2019-12-20T07:55:48Z", "closed_at": "2019-12-20T07:55:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n>       self.multiaddrs.update(_multiaddr_from_socket(sock) for sock in self.server.sockets)\r\nE       TypeError: unhashable type: 'Multiaddr'\r\n```\r\nThis really surprises me, as `Multiaddr` is internally represented by a series of bytes, which are hashable, and hash-ability of an object is pretty vital to the majority of the python ecosystem.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/50", "repository_url": "https://api.github.com/repos/multiformats/py-multiaddr", "labels_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/50/comments", "events_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/50/events", "html_url": "https://github.com/multiformats/py-multiaddr/issues/50", "id": 446014412, "node_id": "MDU6SXNzdWU0NDYwMTQ0MTI=", "number": 50, "title": "Infura IPFS SSL certificate verification fails", "user": {"login": "njgheorghita", "id": 9753150, "node_id": "MDQ6VXNlcjk3NTMxNTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/9753150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njgheorghita", "html_url": "https://github.com/njgheorghita", "followers_url": "https://api.github.com/users/njgheorghita/followers", "following_url": "https://api.github.com/users/njgheorghita/following{/other_user}", "gists_url": "https://api.github.com/users/njgheorghita/gists{/gist_id}", "starred_url": "https://api.github.com/users/njgheorghita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njgheorghita/subscriptions", "organizations_url": "https://api.github.com/users/njgheorghita/orgs", "repos_url": "https://api.github.com/users/njgheorghita/repos", "events_url": "https://api.github.com/users/njgheorghita/events{/privacy}", "received_events_url": "https://api.github.com/users/njgheorghita/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-20T09:31:24Z", "updated_at": "2019-05-21T12:34:28Z", "closed_at": "2019-05-21T12:34:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nI just updated to `ipfshttpclient` from `py-ipfs-api` and I'm now having trouble connecting to Infura's IPFS endpoint.\r\n\r\nInfura IPFS multiaddr:\r\n`base_uri = \"/dns/ipfs.infura.io/tcp/5001/https\"`\r\n\r\nConnecting to Infura IPFS\r\n```python\r\nself.client = ipfshttpclient.connect(self.base_uri)\r\n```\r\n\r\nStack trace: \r\n```sh\r\nethpm/backends/ipfs.py:60: in __init__\r\n    self.client = ipfshttpclient.connect(self.base_uri)\r\nvenv/lib/python3.6/site-packages/ipfshttpclient/client/__init__.py:102: in connect\r\n    assert_version(client.version()['Version'])\r\nvenv/lib/python3.6/site-packages/ipfshttpclient/client/base.py:15: in wrapper\r\n    result = func(*args, **kwargs)\r\nvenv/lib/python3.6/site-packages/ipfshttpclient/client/miscellaneous.py:204: in version\r\n    return self._client.request('/version', decoder='json', **kwargs)\r\nvenv/lib/python3.6/site-packages/ipfshttpclient/http.py:44: in wrapper\r\n    return func(self, *args, **merged)\r\nvenv/lib/python3.6/site-packages/ipfshttpclient/http.py:364: in request\r\n    files, headers, data, timeout=timeout)\r\nvenv/lib/python3.6/site-packages/ipfshttpclient/http.py:282: in _request\r\n    timeout=timeout)\r\nvenv/lib/python3.6/site-packages/ipfshttpclient/http.py:249: in _do_request\r\n    six.raise_from(exceptions.ConnectionError(error), error)\r\n<string>:3: in raise_from\r\n    ???\r\nE   ipfshttpclient.exceptions.ConnectionError: SSLError: HTTPSConnectionPool(host='ipfs.infura.io', port=5001): Max retries exceeded with url: /api/v0/version?stream-channels=true (Caused by SSLError(SSLError(\"bad handshake: Error([('SSL routines', 'tls_process_server_certificate', 'certificate verify failed')],)\",),))\r\n```\r\n\r\nI'm not sure what I could be doing wrong. There doesn't seem to be any problem with [infura's ssl certificates](https://www.sslshopper.com/ssl-checker.html#hostname=ipfs.infura.io). It appears that the multiaddr is being correctly parsed, since the request is being made to https://ipfs.infura.io:5001/api/v0/version. Any thoughts or ideas on what could be the issue would be great, cheers!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/47", "repository_url": "https://api.github.com/repos/multiformats/py-multiaddr", "labels_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/47/comments", "events_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/47/events", "html_url": "https://github.com/multiformats/py-multiaddr/issues/47", "id": 441478697, "node_id": "MDU6SXNzdWU0NDE0Nzg2OTc=", "number": 47, "title": "Recent changes breaking py-multiaddr as dependency?", "user": {"login": "robzajac", "id": 11546455, "node_id": "MDQ6VXNlcjExNTQ2NDU1", "avatar_url": "https://avatars0.githubusercontent.com/u/11546455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robzajac", "html_url": "https://github.com/robzajac", "followers_url": "https://api.github.com/users/robzajac/followers", "following_url": "https://api.github.com/users/robzajac/following{/other_user}", "gists_url": "https://api.github.com/users/robzajac/gists{/gist_id}", "starred_url": "https://api.github.com/users/robzajac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robzajac/subscriptions", "organizations_url": "https://api.github.com/users/robzajac/orgs", "repos_url": "https://api.github.com/users/robzajac/repos", "events_url": "https://api.github.com/users/robzajac/events{/privacy}", "received_events_url": "https://api.github.com/users/robzajac/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 336418906, "node_id": "MDU6TGFiZWwzMzY0MTg5MDY=", "url": "https://api.github.com/repos/multiformats/py-multiaddr/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-05-07T22:52:18Z", "updated_at": "2019-05-23T08:14:14Z", "closed_at": "2019-05-23T08:14:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The recent release seems to have broken [py-libp2p builds](https://travis-ci.com/libp2p/py-libp2p/jobs/198328926) where `py-multiaddr` is used as a dependency. It seems to be an issue with packaging the new `multiaddr/codecs/` directory. Can anyone add color as to what might be wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/45", "repository_url": "https://api.github.com/repos/multiformats/py-multiaddr", "labels_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/45/comments", "events_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/45/events", "html_url": "https://github.com/multiformats/py-multiaddr/issues/45", "id": 441109946, "node_id": "MDU6SXNzdWU0NDExMDk5NDY=", "number": 45, "title": "Enable linters in tox and CI", "user": {"login": "mhchia", "id": 8223657, "node_id": "MDQ6VXNlcjgyMjM2NTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8223657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhchia", "html_url": "https://github.com/mhchia", "followers_url": "https://api.github.com/users/mhchia/followers", "following_url": "https://api.github.com/users/mhchia/following{/other_user}", "gists_url": "https://api.github.com/users/mhchia/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhchia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhchia/subscriptions", "organizations_url": "https://api.github.com/users/mhchia/orgs", "repos_url": "https://api.github.com/users/mhchia/repos", "events_url": "https://api.github.com/users/mhchia/events{/privacy}", "received_events_url": "https://api.github.com/users/mhchia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-07T08:39:35Z", "updated_at": "2019-05-08T06:49:01Z", "closed_at": "2019-05-08T06:49:01Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "IMO it will be great to enable flake8, and possibly other linters. Thoughts? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/44", "repository_url": "https://api.github.com/repos/multiformats/py-multiaddr", "labels_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/44/comments", "events_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/44/events", "html_url": "https://github.com/multiformats/py-multiaddr/issues/44", "id": 441108756, "node_id": "MDU6SXNzdWU0NDExMDg3NTY=", "number": 44, "title": "Bump version and release", "user": {"login": "mhchia", "id": 8223657, "node_id": "MDQ6VXNlcjgyMjM2NTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8223657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhchia", "html_url": "https://github.com/mhchia", "followers_url": "https://api.github.com/users/mhchia/followers", "following_url": "https://api.github.com/users/mhchia/following{/other_user}", "gists_url": "https://api.github.com/users/mhchia/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhchia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhchia/subscriptions", "organizations_url": "https://api.github.com/users/mhchia/orgs", "repos_url": "https://api.github.com/users/mhchia/repos", "events_url": "https://api.github.com/users/mhchia/events{/privacy}", "received_events_url": "https://api.github.com/users/mhchia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-07T08:36:59Z", "updated_at": "2019-05-23T08:14:33Z", "closed_at": "2019-05-23T08:14:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We had a lot of changes and improvements since the last release, includes some breaking changes(e.g. bytes are unhexlified, different exceptions are raised, ...etc), especially thanks to @alexander255 's tremendous contribution. It is reasonable to have a new release.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/39", "repository_url": "https://api.github.com/repos/multiformats/py-multiaddr", "labels_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/39/comments", "events_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/39/events", "html_url": "https://github.com/multiformats/py-multiaddr/issues/39", "id": 422084777, "node_id": "MDU6SXNzdWU0MjIwODQ3Nzc=", "number": 39, "title": "Catch specific exceptions instead of `Exception`", "user": {"login": "mhchia", "id": 8223657, "node_id": "MDQ6VXNlcjgyMjM2NTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8223657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhchia", "html_url": "https://github.com/mhchia", "followers_url": "https://api.github.com/users/mhchia/followers", "following_url": "https://api.github.com/users/mhchia/following{/other_user}", "gists_url": "https://api.github.com/users/mhchia/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhchia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhchia/subscriptions", "organizations_url": "https://api.github.com/users/mhchia/orgs", "repos_url": "https://api.github.com/users/mhchia/repos", "events_url": "https://api.github.com/users/mhchia/events{/privacy}", "received_events_url": "https://api.github.com/users/mhchia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 336418908, "node_id": "MDU6TGFiZWwzMzY0MTg5MDg=", "url": "https://api.github.com/repos/multiformats/py-multiaddr/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-18T08:08:43Z", "updated_at": "2019-04-27T07:47:43Z", "closed_at": "2019-04-27T07:47:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Per the [discussion](https://github.com/multiformats/py-multiaddr/pull/37#discussion_r266202195), IMO when catching exceptions, it is reasonable to change to the pattern @alexander255 proposed in the discussion.\r\n\r\n> - Use raise from everywhere were we do this catch then raise something else kind of thing to properly document the exception chain involved\r\n> - Add some more specialized exceptions (ParsingError, InternalStateError, \u2026) that indirectly derive from ValueError for back-compat\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/30", "repository_url": "https://api.github.com/repos/multiformats/py-multiaddr", "labels_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/30/comments", "events_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/30/events", "html_url": "https://github.com/multiformats/py-multiaddr/issues/30", "id": 389106521, "node_id": "MDU6SXNzdWUzODkxMDY1MjE=", "number": 30, "title": "Add new maintainer to pypi", "user": {"login": "sbuss", "id": 494522, "node_id": "MDQ6VXNlcjQ5NDUyMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/494522?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbuss", "html_url": "https://github.com/sbuss", "followers_url": "https://api.github.com/users/sbuss/followers", "following_url": "https://api.github.com/users/sbuss/following{/other_user}", "gists_url": "https://api.github.com/users/sbuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbuss/subscriptions", "organizations_url": "https://api.github.com/users/sbuss/orgs", "repos_url": "https://api.github.com/users/sbuss/repos", "events_url": "https://api.github.com/users/sbuss/events{/privacy}", "received_events_url": "https://api.github.com/users/sbuss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-12-10T02:22:34Z", "updated_at": "2018-12-20T17:56:57Z", "closed_at": "2018-12-20T17:56:57Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I'm still the sole maintainer for the pypi package: https://pypi.org/project/multiaddr/\r\n\r\nLMK the correct account to add to finish handing this off to the multiformats project", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/29", "repository_url": "https://api.github.com/repos/multiformats/py-multiaddr", "labels_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/29/comments", "events_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/29/events", "html_url": "https://github.com/multiformats/py-multiaddr/issues/29", "id": 389002812, "node_id": "MDU6SXNzdWUzODkwMDI4MTI=", "number": 29, "title": "Python versions to support?", "user": {"login": "mhchia", "id": 8223657, "node_id": "MDQ6VXNlcjgyMjM2NTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8223657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhchia", "html_url": "https://github.com/mhchia", "followers_url": "https://api.github.com/users/mhchia/followers", "following_url": "https://api.github.com/users/mhchia/following{/other_user}", "gists_url": "https://api.github.com/users/mhchia/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhchia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhchia/subscriptions", "organizations_url": "https://api.github.com/users/mhchia/orgs", "repos_url": "https://api.github.com/users/mhchia/repos", "events_url": "https://api.github.com/users/mhchia/events{/privacy}", "received_events_url": "https://api.github.com/users/mhchia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-09T09:21:15Z", "updated_at": "2019-02-06T12:46:45Z", "closed_at": "2019-02-06T12:46:45Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently, py-multiaddr supports Python 2.6, 2.7, 3.3, 3.4, 3.5 according to https://github.com/multiformats/py-multiaddr/blob/master/setup.py#L44-L50, while py-libp2p supports 3.6. I'm wondering which versions will we support in the long-term? And do we still want to maintain the tests for Python 2 as well? Just want to confirm this before actually fixing the test in Python 2:) Thanks a lot!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/28", "repository_url": "https://api.github.com/repos/multiformats/py-multiaddr", "labels_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/28/comments", "events_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/28/events", "html_url": "https://github.com/multiformats/py-multiaddr/issues/28", "id": 389002065, "node_id": "MDU6SXNzdWUzODkwMDIwNjU=", "number": 28, "title": "Change hexlified bytes to raw bytes in Multiaddr?", "user": {"login": "mhchia", "id": 8223657, "node_id": "MDQ6VXNlcjgyMjM2NTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8223657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhchia", "html_url": "https://github.com/mhchia", "followers_url": "https://api.github.com/users/mhchia/followers", "following_url": "https://api.github.com/users/mhchia/following{/other_user}", "gists_url": "https://api.github.com/users/mhchia/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhchia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhchia/subscriptions", "organizations_url": "https://api.github.com/users/mhchia/orgs", "repos_url": "https://api.github.com/users/mhchia/repos", "events_url": "https://api.github.com/users/mhchia/events{/privacy}", "received_events_url": "https://api.github.com/users/mhchia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-09T09:09:49Z", "updated_at": "2019-03-17T02:09:18Z", "closed_at": "2019-03-17T02:09:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently, if we initialize a `Multiaddr`, the `to_bytes()` will output a hexlified value in bytes format. We need an additional `binascii.unhexlify` to get the raw bytes.\r\n```python\r\n>>> m1 = Multiaddr(\"/ip4/127.0.0.1/udp/1234\")\r\n>>> m1.to_bytes()\r\nb'047f0000011104d2'\r\n>>> binascii.unhexlify(b'047f0000011104d2')\r\nb'\\x04\\x7f\\x00\\x00\\x01\\x11\\x04\\xd2'\r\n```\r\nIMO we can just keep the raw bytes in `Multiaddr`, e.g. `b'\\x04\\x7f\\x00\\x00\\x01\\x11\\x04\\xd2'` in the above example. This removes the dependency on binascii, additional converting overhead(we handle raw bytes in [de]serializations). And also aligns with the `Multiaddr.Bytes()` in `go-multiaddr`.\r\n\r\nWhat do you guys think? cc @raulk @zixuanzh @zaibon @robzajac @alexh \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/19", "repository_url": "https://api.github.com/repos/multiformats/py-multiaddr", "labels_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/19/comments", "events_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/19/events", "html_url": "https://github.com/multiformats/py-multiaddr/issues/19", "id": 169616394, "node_id": "MDU6SXNzdWUxNjk2MTYzOTQ=", "number": 19, "title": "Move to Multiformats?", "user": {"login": "RichardLitt", "id": 910753, "node_id": "MDQ6VXNlcjkxMDc1Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/910753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RichardLitt", "html_url": "https://github.com/RichardLitt", "followers_url": "https://api.github.com/users/RichardLitt/followers", "following_url": "https://api.github.com/users/RichardLitt/following{/other_user}", "gists_url": "https://api.github.com/users/RichardLitt/gists{/gist_id}", "starred_url": "https://api.github.com/users/RichardLitt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RichardLitt/subscriptions", "organizations_url": "https://api.github.com/users/RichardLitt/orgs", "repos_url": "https://api.github.com/users/RichardLitt/repos", "events_url": "https://api.github.com/users/RichardLitt/events{/privacy}", "received_events_url": "https://api.github.com/users/RichardLitt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-08-05T14:12:45Z", "updated_at": "2018-12-10T12:53:53Z", "closed_at": "2018-12-04T05:31:02Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "hey @sbuss!\n\nThanks so much for this. As you may know, we recently created the [Multiformats](//github.com/multiformats) organization to be a home for all of the multiformats - multiaddr, multihash, etc. Would you be interested in moving this repository to that organization? \n\nThanks for taking the time to read this. \ud83d\udc4d \n\nTracking issue, here: https://github.com/multiformats/multiformats/issues/4.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/18", "repository_url": "https://api.github.com/repos/multiformats/py-multiaddr", "labels_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/18/comments", "events_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/18/events", "html_url": "https://github.com/multiformats/py-multiaddr/issues/18", "id": 166239587, "node_id": "MDU6SXNzdWUxNjYyMzk1ODc=", "number": 18, "title": "address_string_to_bytes can't return non-string", "user": {"login": "JesseWeinstein", "id": 200568, "node_id": "MDQ6VXNlcjIwMDU2OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/200568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JesseWeinstein", "html_url": "https://github.com/JesseWeinstein", "followers_url": "https://api.github.com/users/JesseWeinstein/followers", "following_url": "https://api.github.com/users/JesseWeinstein/following{/other_user}", "gists_url": "https://api.github.com/users/JesseWeinstein/gists{/gist_id}", "starred_url": "https://api.github.com/users/JesseWeinstein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JesseWeinstein/subscriptions", "organizations_url": "https://api.github.com/users/JesseWeinstein/orgs", "repos_url": "https://api.github.com/users/JesseWeinstein/repos", "events_url": "https://api.github.com/users/JesseWeinstein/events{/privacy}", "received_events_url": "https://api.github.com/users/JesseWeinstein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-07-19T03:20:45Z", "updated_at": "2016-08-15T04:17:12Z", "closed_at": "2016-08-15T04:17:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`string_to_bytes` checks whether `address_string_to_bytes` returned an instance of `basestring`, and converts it to bytes if so -- but I don't see any cases where `address_string_to_bytes` can actually return anything that **isn't** an instance of `basestring`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/17", "repository_url": "https://api.github.com/repos/multiformats/py-multiaddr", "labels_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/17/comments", "events_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/17/events", "html_url": "https://github.com/multiformats/py-multiaddr/issues/17", "id": 166237924, "node_id": "MDU6SXNzdWUxNjYyMzc5MjQ=", "number": 17, "title": "_uvarint can't make negative numbers", "user": {"login": "JesseWeinstein", "id": 200568, "node_id": "MDQ6VXNlcjIwMDU2OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/200568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JesseWeinstein", "html_url": "https://github.com/JesseWeinstein", "followers_url": "https://api.github.com/users/JesseWeinstein/followers", "following_url": "https://api.github.com/users/JesseWeinstein/following{/other_user}", "gists_url": "https://api.github.com/users/JesseWeinstein/gists{/gist_id}", "starred_url": "https://api.github.com/users/JesseWeinstein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JesseWeinstein/subscriptions", "organizations_url": "https://api.github.com/users/JesseWeinstein/orgs", "repos_url": "https://api.github.com/users/JesseWeinstein/repos", "events_url": "https://api.github.com/users/JesseWeinstein/events{/privacy}", "received_events_url": "https://api.github.com/users/JesseWeinstein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-19T03:04:08Z", "updated_at": "2016-08-15T02:18:21Z", "closed_at": "2016-08-15T02:18:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm not sure how `protocols._uvarint` can ever return a negative number -- but `read_varint_code` checks for this case.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/15", "repository_url": "https://api.github.com/repos/multiformats/py-multiaddr", "labels_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/15/comments", "events_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/15/events", "html_url": "https://github.com/multiformats/py-multiaddr/issues/15", "id": 162341560, "node_id": "MDU6SXNzdWUxNjIzNDE1NjA=", "number": 15, "title": "Get module added to PyPI", "user": {"login": "fredthomsen", "id": 880064, "node_id": "MDQ6VXNlcjg4MDA2NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/880064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fredthomsen", "html_url": "https://github.com/fredthomsen", "followers_url": "https://api.github.com/users/fredthomsen/followers", "following_url": "https://api.github.com/users/fredthomsen/following{/other_user}", "gists_url": "https://api.github.com/users/fredthomsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/fredthomsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fredthomsen/subscriptions", "organizations_url": "https://api.github.com/users/fredthomsen/orgs", "repos_url": "https://api.github.com/users/fredthomsen/repos", "events_url": "https://api.github.com/users/fredthomsen/events{/privacy}", "received_events_url": "https://api.github.com/users/fredthomsen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-26T18:51:26Z", "updated_at": "2016-06-26T20:09:34Z", "closed_at": "2016-06-26T20:09:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If we want to this to become the defacto python multiaddr implementation, we should get it added to PyPI as soon as we feel that it is ready.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/7", "repository_url": "https://api.github.com/repos/multiformats/py-multiaddr", "labels_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/7/comments", "events_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/7/events", "html_url": "https://github.com/multiformats/py-multiaddr/issues/7", "id": 138845995, "node_id": "MDU6SXNzdWUxMzg4NDU5OTU=", "number": 7, "title": "IP6 addresses are not decoded properly", "user": {"login": "sbuss", "id": 494522, "node_id": "MDQ6VXNlcjQ5NDUyMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/494522?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbuss", "html_url": "https://github.com/sbuss", "followers_url": "https://api.github.com/users/sbuss/followers", "following_url": "https://api.github.com/users/sbuss/following{/other_user}", "gists_url": "https://api.github.com/users/sbuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbuss/subscriptions", "organizations_url": "https://api.github.com/users/sbuss/orgs", "repos_url": "https://api.github.com/users/sbuss/repos", "events_url": "https://api.github.com/users/sbuss/events{/privacy}", "received_events_url": "https://api.github.com/users/sbuss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-03-06T22:38:51Z", "updated_at": "2016-03-06T22:43:03Z", "closed_at": "2016-03-06T22:43:03Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "```\n=================================== FAILURES ===================================\n\n_____________________________ test_valid[/ip6/::1] _____________________________\n\naddr_str = '/ip6/::1'\n    @pytest.mark.parametrize(\n        \"addr_str\",\n        [\"/ip4/1.2.3.4\",\n         \"/ip4/0.0.0.0\",\n         \"/ip6/::1\",\n         \"/ip6/2601:9:4f81:9700:803e:ca65:66e8:c21\",\n         \"/onion/timaq4ygg2iegci7:1234\",\n         \"/onion/timaq4ygg2iegci7:80/http\",\n         \"/udp/0\",\n         \"/tcp/0\",\n         \"/sctp/0\",\n         \"/udp/1234\",\n         \"/tcp/1234\",\n         \"/sctp/1234\",\n         \"/udp/65535\",\n         \"/tcp/65535\",\n         \"/ipfs/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC\",\n         \"/udp/1234/sctp/1234\",\n         \"/udp/1234/udt\",\n         \"/udp/1234/utp\",\n         \"/tcp/1234/http\",\n         \"/tcp/1234/https\",\n         \"/ipfs/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC/tcp/1234\",\n         \"/ip4/127.0.0.1/udp/1234\",\n         \"/ip4/127.0.0.1/udp/0\",\n         \"/ip4/127.0.0.1/tcp/1234\",\n         \"/ip4/127.0.0.1/tcp/1234/\",\n         \"/ip4/127.0.0.1/ipfs/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC\",\n         \"/ip4/127.0.0.1/ipfs/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC/tcp/1234\"])  # nopep8\n    def test_valid(addr_str):\n        ma = Multiaddr(addr_str)\n>       assert str(ma) == addr_str.rstrip(\"/\")\nE       assert '/ip6/0.0.0.1' == '/ip6/::1'\nE         - /ip6/0.0.0.1\nE         + /ip6/::1\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/5", "repository_url": "https://api.github.com/repos/multiformats/py-multiaddr", "labels_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/5/comments", "events_url": "https://api.github.com/repos/multiformats/py-multiaddr/issues/5/events", "html_url": "https://github.com/multiformats/py-multiaddr/issues/5", "id": 138727537, "node_id": "MDU6SXNzdWUxMzg3Mjc1Mzc=", "number": 5, "title": "Onion addresses aren't encoding correctly", "user": {"login": "sbuss", "id": 494522, "node_id": "MDQ6VXNlcjQ5NDUyMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/494522?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbuss", "html_url": "https://github.com/sbuss", "followers_url": "https://api.github.com/users/sbuss/followers", "following_url": "https://api.github.com/users/sbuss/following{/other_user}", "gists_url": "https://api.github.com/users/sbuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbuss/subscriptions", "organizations_url": "https://api.github.com/users/sbuss/orgs", "repos_url": "https://api.github.com/users/sbuss/repos", "events_url": "https://api.github.com/users/sbuss/events{/privacy}", "received_events_url": "https://api.github.com/users/sbuss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-03-05T22:00:42Z", "updated_at": "2016-03-08T08:43:43Z", "closed_at": "2016-03-06T22:37:31Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "``` python\nIn [4]: s = '/onion/blockchainbdgpzk:80'\n\nIn [5]: ma = Multiaddr(s)\n\nIn [6]: ma.protocols()\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-6-1cd054e849b6> in <module>()\n----> 1 ma.protocols()\n\n/home/sbuss/workspace/py-multiaddr/multiaddr/multiaddr.py in protocols(self)\n     76     def protocols(self):\n     77         \"\"\"Returns a list of Protocols this Multiaddr includes.\"\"\"\n---> 78         buf = binascii.unhexlify(self.to_bytes())\n     79         protos = []\n     80         while buf:\n\nTypeError: Non-hexadecimal digit found\n\nIn [7]: print(ma)\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n<ipython-input-7-e1c995ffcb8b> in <module>()\n----> 1 print(ma)\n\n/home/sbuss/workspace/py-multiaddr/multiaddr/multiaddr.py in __str__(self)\n     65         except Exception:\n     66             raise ValueError(\n---> 67                 \"multiaddr failed to convert back to string. corrupted?\")\n     68 \n     69     def __repr__(self):\n\nValueError: multiaddr failed to convert back to string. corrupted?\n```\n", "performed_via_github_app": null, "score": 1.0}]}