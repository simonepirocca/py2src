{"total_count": 24, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/encode/requests-async/issues/57", "repository_url": "https://api.github.com/repos/encode/requests-async", "labels_url": "https://api.github.com/repos/encode/requests-async/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/encode/requests-async/issues/57/comments", "events_url": "https://api.github.com/repos/encode/requests-async/issues/57/events", "html_url": "https://github.com/encode/requests-async/issues/57", "id": 459546039, "node_id": "MDU6SXNzdWU0NTk1NDYwMzk=", "number": 57, "title": "\"ConnectionError: [Errno 104] Connection reset by peer\" on one particular website", "user": {"login": "dvtan", "id": 46267888, "node_id": "MDQ6VXNlcjQ2MjY3ODg4", "avatar_url": "https://avatars1.githubusercontent.com/u/46267888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvtan", "html_url": "https://github.com/dvtan", "followers_url": "https://api.github.com/users/dvtan/followers", "following_url": "https://api.github.com/users/dvtan/following{/other_user}", "gists_url": "https://api.github.com/users/dvtan/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvtan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvtan/subscriptions", "organizations_url": "https://api.github.com/users/dvtan/orgs", "repos_url": "https://api.github.com/users/dvtan/repos", "events_url": "https://api.github.com/users/dvtan/events{/privacy}", "received_events_url": "https://api.github.com/users/dvtan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-23T07:34:22Z", "updated_at": "2019-06-23T10:26:49Z", "closed_at": "2019-06-23T10:24:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "With normal `requests`, it works:\r\n\r\n```\r\nimport requests\r\n\r\nresponse = requests.get('https://listings.och.uwaterloo.ca/Listings/Details/Show?rentalId=126696')\r\n```\r\n\r\nIt also works with aiohttp's client.\r\n\r\nBut using requests_async results in `requests.exceptions.ConnectionError: [Errno 104] Connection reset by peer`:\r\n\r\n```\r\nimport asyncio\r\nimport requests_async as requests\r\n\r\nasync def client_example():\r\n    response = await requests.get('https://listings.och.uwaterloo.ca/Listings/Details/Show?rentalId=126696')\r\n\r\nloop = asyncio.get_event_loop()\r\nloop.run_until_complete(client_example())\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/requests-async/issues/55", "repository_url": "https://api.github.com/repos/encode/requests-async", "labels_url": "https://api.github.com/repos/encode/requests-async/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/encode/requests-async/issues/55/comments", "events_url": "https://api.github.com/repos/encode/requests-async/issues/55/events", "html_url": "https://github.com/encode/requests-async/issues/55", "id": 458580619, "node_id": "MDU6SXNzdWU0NTg1ODA2MTk=", "number": 55, "title": "UnboundLocalError(\"local variable 'response' referenced before assignment\")", "user": {"login": "Fak3", "id": 991641, "node_id": "MDQ6VXNlcjk5MTY0MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/991641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Fak3", "html_url": "https://github.com/Fak3", "followers_url": "https://api.github.com/users/Fak3/followers", "following_url": "https://api.github.com/users/Fak3/following{/other_user}", "gists_url": "https://api.github.com/users/Fak3/gists{/gist_id}", "starred_url": "https://api.github.com/users/Fak3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Fak3/subscriptions", "organizations_url": "https://api.github.com/users/Fak3/orgs", "repos_url": "https://api.github.com/users/Fak3/repos", "events_url": "https://api.github.com/users/Fak3/events{/privacy}", "received_events_url": "https://api.github.com/users/Fak3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-20T10:42:32Z", "updated_at": "2019-06-21T12:53:41Z", "closed_at": "2019-06-21T12:53:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Version: 0.6.0\r\n```python\r\nimport requests_async as requests\r\nawait requests.request(\r\n            'POST', 'http://127.0.0.1:8000/api/v2/', timeout=10, data={}\r\n        )\r\n```\r\n\r\n```\r\n   File \"/home/u1/.virtualenvs/paradox/lib/python3.7/site-packages/requests_async/api.py\", line 6, in request\r\n     return await session.request(method=method, url=url, **kwargs)\r\n   File \"/home/u1/.virtualenvs/paradox/lib/python3.7/site-packages/requests_async/sessions.py\", line 79, in request\r\n     resp = await self.send(prep, **send_kwargs)\r\n   File \"/home/u1/.virtualenvs/paradox/lib/python3.7/site-packages/requests_async/sessions.py\", line 136, in send\r\n     r = await adapter.send(request, **kwargs)\r\n   File \"/home/u1/.virtualenvs/paradox/lib/python3.7/site-packages/requests_async/adapters.py\", line 65, in send\r\n     await response.read()\r\nipdb> e\r\nUnboundLocalError(\"local variable 'response' referenced before assignment\")\r\nipdb> \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/requests-async/issues/52", "repository_url": "https://api.github.com/repos/encode/requests-async", "labels_url": "https://api.github.com/repos/encode/requests-async/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/encode/requests-async/issues/52/comments", "events_url": "https://api.github.com/repos/encode/requests-async/issues/52/events", "html_url": "https://github.com/encode/requests-async/issues/52", "id": 456338878, "node_id": "MDU6SXNzdWU0NTYzMzg4Nzg=", "number": 52, "title": "Strange behaviour on request of specific URL", "user": {"login": "HarrySky", "id": 8982851, "node_id": "MDQ6VXNlcjg5ODI4NTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/8982851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HarrySky", "html_url": "https://github.com/HarrySky", "followers_url": "https://api.github.com/users/HarrySky/followers", "following_url": "https://api.github.com/users/HarrySky/following{/other_user}", "gists_url": "https://api.github.com/users/HarrySky/gists{/gist_id}", "starred_url": "https://api.github.com/users/HarrySky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HarrySky/subscriptions", "organizations_url": "https://api.github.com/users/HarrySky/orgs", "repos_url": "https://api.github.com/users/HarrySky/repos", "events_url": "https://api.github.com/users/HarrySky/events{/privacy}", "received_events_url": "https://api.github.com/users/HarrySky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-06-14T16:38:52Z", "updated_at": "2019-06-17T15:16:07Z", "closed_at": "2019-06-16T05:37:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using Python 3.7 I can send any request with timeout to any website and get expected ConnectTimeout or it will finish (you can replace 'https://spotify.com/' URL with anything):\r\n\r\n```\r\n>>> asyncio.run(requests_async.get('https://spotify.com/', timeout=0.1))\r\nTraceback (most recent call last):\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/concurrency.py\", line 149, in connect\r\n    timeout.connect_timeout,\r\n  File \"/usr/lib/python3.7/asyncio/tasks.py\", line 423, in wait_for\r\n    raise futures.TimeoutError()\r\nconcurrent.futures._base.TimeoutError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/requests_async/adapters.py\", line 56, in send\r\n    timeout=timeout,\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/interfaces.py\", line 51, in request\r\n    response = await self.send(request, stream=stream, ssl=ssl, timeout=timeout)\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/dispatch/connection_pool.py\", line 119, in send\r\n    raise exc\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/dispatch/connection_pool.py\", line 114, in send\r\n    request, stream=stream, ssl=ssl, timeout=timeout\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/dispatch/connection.py\", line 49, in send\r\n    await self.connect(ssl=ssl, timeout=timeout)\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/dispatch/connection.py\", line 81, in connect\r\n    host, port, ssl_context, timeout\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/concurrency.py\", line 152, in connect\r\n    raise ConnectTimeout()\r\nhttpcore.exceptions.ConnectTimeout\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib/python3.7/asyncio/runners.py\", line 43, in run\r\n    return loop.run_until_complete(main)\r\n  File \"/usr/lib/python3.7/asyncio/base_events.py\", line 573, in run_until_complete\r\n    return future.result()\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/requests_async/api.py\", line 11, in get\r\n    return await request(\"get\", url, params=params, **kwargs)\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/requests_async/api.py\", line 6, in request\r\n    return await session.request(method=method, url=url, **kwargs)\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/requests_async/sessions.py\", line 79, in request\r\n    resp = await self.send(prep, **send_kwargs)\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/requests_async/sessions.py\", line 136, in send\r\n    r = await adapter.send(request, **kwargs)\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/requests_async/adapters.py\", line 61, in send\r\n    raise ConnectTimeout(err, request=request)\r\nrequests.exceptions.ConnectTimeout\r\n\r\nOriginal exception was:\r\nTraceback (most recent call last):\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/concurrency.py\", line 149, in connect\r\n    timeout.connect_timeout,\r\n  File \"/usr/lib/python3.7/asyncio/tasks.py\", line 423, in wait_for\r\n    raise futures.TimeoutError()\r\nconcurrent.futures._base.TimeoutError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/requests_async/adapters.py\", line 56, in send\r\n    timeout=timeout,\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/interfaces.py\", line 51, in request\r\n    response = await self.send(request, stream=stream, ssl=ssl, timeout=timeout)\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/dispatch/connection_pool.py\", line 119, in send\r\n    raise exc\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/dispatch/connection_pool.py\", line 114, in send\r\n    request, stream=stream, ssl=ssl, timeout=timeout\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/dispatch/connection.py\", line 49, in send\r\n    await self.connect(ssl=ssl, timeout=timeout)\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/dispatch/connection.py\", line 81, in connect\r\n    host, port, ssl_context, timeout\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/concurrency.py\", line 152, in connect\r\n    raise ConnectTimeout()\r\nhttpcore.exceptions.ConnectTimeout\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib/python3.7/asyncio/runners.py\", line 43, in run\r\n    return loop.run_until_complete(main)\r\n  File \"/usr/lib/python3.7/asyncio/base_events.py\", line 573, in run_until_complete\r\n    return future.result()\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/requests_async/api.py\", line 11, in get\r\n    return await request(\"get\", url, params=params, **kwargs)\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/requests_async/api.py\", line 6, in request\r\n    return await session.request(method=method, url=url, **kwargs)\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/requests_async/sessions.py\", line 79, in request\r\n    resp = await self.send(prep, **send_kwargs)\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/requests_async/sessions.py\", line 136, in send\r\n    r = await adapter.send(request, **kwargs)\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/requests_async/adapters.py\", line 61, in send\r\n    raise ConnectTimeout(err, request=request)\r\nrequests.exceptions.ConnectTimeout\r\n```\r\n\r\nBut for some reason I get different error when trying to access **api.spotify.com** with timeout (any timeout - 1, 10, 50 seconds). And it hangs indefinitely if no timeout is provided.\r\n\r\n```\r\n>>> asyncio.run(requests_async.get('https://api.spotify.com/v1/me', timeout=0.1))\r\nTraceback (most recent call last):\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/concurrency.py\", line 65, in read\r\n    self.stream_reader.read(n), timeout.read_timeout\r\n  File \"/usr/lib/python3.7/asyncio/tasks.py\", line 423, in wait_for\r\n    raise futures.TimeoutError()\r\nconcurrent.futures._base.TimeoutError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/dispatch/connection_pool.py\", line 114, in send\r\n    request, stream=stream, ssl=ssl, timeout=timeout\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/dispatch/connection.py\", line 53, in send\r\n    request, stream=stream, timeout=timeout\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/dispatch/http2.py\", line 77, in send\r\n    await response.read()\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/models.py\", line 684, in read\r\n    self._content = b\"\".join([part async for part in self.stream()])\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/models.py\", line 684, in <listcomp>\r\n    self._content = b\"\".join([part async for part in self.stream()])\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/models.py\", line 695, in stream\r\n    async for chunk in self.raw():\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/models.py\", line 712, in raw\r\n    async for part in self._raw_stream:\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/dispatch/http2.py\", line 121, in body_iter\r\n    event = await self.receive_event(stream_id, timeout)\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/dispatch/http2.py\", line 131, in receive_event\r\n    data = await self.reader.read(self.READ_NUM_BYTES, timeout)\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/concurrency.py\", line 68, in read\r\n    raise ReadTimeout()\r\nhttpcore.exceptions.ReadTimeout\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib/python3.7/asyncio/runners.py\", line 43, in run\r\n    return loop.run_until_complete(main)\r\n  File \"/usr/lib/python3.7/asyncio/base_events.py\", line 573, in run_until_complete\r\n    return future.result()\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/requests_async/api.py\", line 11, in get\r\n    return await request(\"get\", url, params=params, **kwargs)\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/requests_async/api.py\", line 6, in request\r\n    return await session.request(method=method, url=url, **kwargs)\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/requests_async/sessions.py\", line 79, in request\r\n    resp = await self.send(prep, **send_kwargs)\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/requests_async/sessions.py\", line 136, in send\r\n    r = await adapter.send(request, **kwargs)\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/requests_async/adapters.py\", line 56, in send\r\n    timeout=timeout,\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/interfaces.py\", line 51, in request\r\n    response = await self.send(request, stream=stream, ssl=ssl, timeout=timeout)\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/dispatch/connection_pool.py\", line 117, in send\r\n    self.active_connections.remove(connection)\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/dispatch/connection_pool.py\", line 64, in remove\r\n    del self.all[connection]\r\nKeyError: <httpcore.dispatch.connection.HTTPConnection object at 0x7f0e940d1a20>\r\n\r\nOriginal exception was:\r\nTraceback (most recent call last):\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/concurrency.py\", line 65, in read\r\n    self.stream_reader.read(n), timeout.read_timeout\r\n  File \"/usr/lib/python3.7/asyncio/tasks.py\", line 423, in wait_for\r\n    raise futures.TimeoutError()\r\nconcurrent.futures._base.TimeoutError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/dispatch/connection_pool.py\", line 114, in send\r\n    request, stream=stream, ssl=ssl, timeout=timeout\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/dispatch/connection.py\", line 53, in send\r\n    request, stream=stream, timeout=timeout\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/dispatch/http2.py\", line 77, in send\r\n    await response.read()\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/models.py\", line 684, in read\r\n    self._content = b\"\".join([part async for part in self.stream()])\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/models.py\", line 684, in <listcomp>\r\n    self._content = b\"\".join([part async for part in self.stream()])\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/models.py\", line 695, in stream\r\n    async for chunk in self.raw():\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/models.py\", line 712, in raw\r\n    async for part in self._raw_stream:\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/dispatch/http2.py\", line 121, in body_iter\r\n    event = await self.receive_event(stream_id, timeout)\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/dispatch/http2.py\", line 131, in receive_event\r\n    data = await self.reader.read(self.READ_NUM_BYTES, timeout)\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/concurrency.py\", line 68, in read\r\n    raise ReadTimeout()\r\nhttpcore.exceptions.ReadTimeout\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib/python3.7/asyncio/runners.py\", line 43, in run\r\n    return loop.run_until_complete(main)\r\n  File \"/usr/lib/python3.7/asyncio/base_events.py\", line 573, in run_until_complete\r\n    return future.result()\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/requests_async/api.py\", line 11, in get\r\n    return await request(\"get\", url, params=params, **kwargs)\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/requests_async/api.py\", line 6, in request\r\n    return await session.request(method=method, url=url, **kwargs)\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/requests_async/sessions.py\", line 79, in request\r\n    resp = await self.send(prep, **send_kwargs)\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/requests_async/sessions.py\", line 136, in send\r\n    r = await adapter.send(request, **kwargs)\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/requests_async/adapters.py\", line 56, in send\r\n    timeout=timeout,\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/interfaces.py\", line 51, in request\r\n    response = await self.send(request, stream=stream, ssl=ssl, timeout=timeout)\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/dispatch/connection_pool.py\", line 117, in send\r\n    self.active_connections.remove(connection)\r\n  File \"/home/harry/.local/lib/python3.7/site-packages/httpcore/dispatch/connection_pool.py\", line 64, in remove\r\n    del self.all[connection]\r\nKeyError: <httpcore.dispatch.connection.HTTPConnection object at 0x7f0e940d1a20>\r\n```\r\n\r\nI get KeyError when trying to delete connection as if **it does not even create a connection**. That's strange. Maybe you have idea why that might happen? I don't have this problem with `requests` package, but it is not async and I really want to use your great wrapper package.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/requests-async/issues/50", "repository_url": "https://api.github.com/repos/encode/requests-async", "labels_url": "https://api.github.com/repos/encode/requests-async/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/encode/requests-async/issues/50/comments", "events_url": "https://api.github.com/repos/encode/requests-async/issues/50/events", "html_url": "https://github.com/encode/requests-async/issues/50", "id": 451922411, "node_id": "MDU6SXNzdWU0NTE5MjI0MTE=", "number": 50, "title": "Production available\uff1f", "user": {"login": "fanjindong", "id": 24584669, "node_id": "MDQ6VXNlcjI0NTg0NjY5", "avatar_url": "https://avatars1.githubusercontent.com/u/24584669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fanjindong", "html_url": "https://github.com/fanjindong", "followers_url": "https://api.github.com/users/fanjindong/followers", "following_url": "https://api.github.com/users/fanjindong/following{/other_user}", "gists_url": "https://api.github.com/users/fanjindong/gists{/gist_id}", "starred_url": "https://api.github.com/users/fanjindong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fanjindong/subscriptions", "organizations_url": "https://api.github.com/users/fanjindong/orgs", "repos_url": "https://api.github.com/users/fanjindong/repos", "events_url": "https://api.github.com/users/fanjindong/events{/privacy}", "received_events_url": "https://api.github.com/users/fanjindong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-04T10:38:31Z", "updated_at": "2019-06-04T10:39:45Z", "closed_at": "2019-06-04T10:39:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "RT", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/requests-async/issues/49", "repository_url": "https://api.github.com/repos/encode/requests-async", "labels_url": "https://api.github.com/repos/encode/requests-async/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/encode/requests-async/issues/49/comments", "events_url": "https://api.github.com/repos/encode/requests-async/issues/49/events", "html_url": "https://github.com/encode/requests-async/issues/49", "id": 445476844, "node_id": "MDU6SXNzdWU0NDU0NzY4NDQ=", "number": 49, "title": "requests.exceptions.ConnectionError: Multiple exceptions: [Errno 10060]", "user": {"login": "stkubr", "id": 5551300, "node_id": "MDQ6VXNlcjU1NTEzMDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5551300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stkubr", "html_url": "https://github.com/stkubr", "followers_url": "https://api.github.com/users/stkubr/followers", "following_url": "https://api.github.com/users/stkubr/following{/other_user}", "gists_url": "https://api.github.com/users/stkubr/gists{/gist_id}", "starred_url": "https://api.github.com/users/stkubr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stkubr/subscriptions", "organizations_url": "https://api.github.com/users/stkubr/orgs", "repos_url": "https://api.github.com/users/stkubr/repos", "events_url": "https://api.github.com/users/stkubr/events{/privacy}", "received_events_url": "https://api.github.com/users/stkubr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-17T14:42:14Z", "updated_at": "2019-06-18T10:45:41Z", "closed_at": "2019-06-18T10:45:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, sync requests lib works fine, but requests_async breaks. Here is code to reproduce:\r\n\r\n```\r\nimport asyncio\r\nimport requests_async\r\nimport requests\r\n\r\ndef get_sync():\r\n    response = requests.get('https://www.python.org/')\r\n    return response.text\r\n\r\nasync def get_async():\r\n    response = await requests_async.get('https://www.python.org/')\r\n    return response.text\r\n\r\nres1 = get_sync()\r\nprint(res1[:20])\r\n\r\nres2 = asyncio.get_event_loop().run_until_complete(asyncio.gather(get_async()))\r\nprint(res2[:20])\r\n```\r\n\r\npython=3.7.1\r\nrequests_async=0.5\r\n\r\nError happen in async part, output: \r\nFile \"C:/Users/Kubrsta/.PyCharm2019.1/config/scratches/scratch_9.py\", line 10, in get_async\r\n    response = await requests_async.get('https://www.python.org/', verify=False)\r\n  File \"E:\\anaconda3\\lib\\site-packages\\requests_async\\api.py\", line 11, in get\r\n    return await request(\"get\", url, params=params, **kwargs)\r\n  File \"E:\\anaconda3\\lib\\site-packages\\requests_async\\api.py\", line 6, in request\r\n    return await session.request(method=method, url=url, **kwargs)\r\n  File \"E:\\anaconda3\\lib\\site-packages\\requests_async\\sessions.py\", line 79, in request\r\n    resp = await self.send(prep, **send_kwargs)\r\n  File \"E:\\anaconda3\\lib\\site-packages\\requests_async\\sessions.py\", line 136, in send\r\n    r = await adapter.send(request, **kwargs)\r\n  File \"E:\\anaconda3\\lib\\site-packages\\requests_async\\adapters.py\", line 59, in send\r\n    raise ConnectionError(err, request=request)\r\nrequests.exceptions.ConnectionError: Multiple exceptions: [Errno 10060] Connect call failed ('151.101.0.223', 443), [Errno 10060] Connect call failed ('151.101.192.223', 443), [Errno 10060] Connect call failed ('151.101.64.223', 443), [Errno 10060] Connect call failed ('151.101.128.223', 443)\r\n\r\nCould it be due to the corporate proxy?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/requests-async/issues/47", "repository_url": "https://api.github.com/repos/encode/requests-async", "labels_url": "https://api.github.com/repos/encode/requests-async/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/encode/requests-async/issues/47/comments", "events_url": "https://api.github.com/repos/encode/requests-async/issues/47/events", "html_url": "https://github.com/encode/requests-async/issues/47", "id": 444840041, "node_id": "MDU6SXNzdWU0NDQ4NDAwNDE=", "number": 47, "title": "SyntaxError: invalid syntax", "user": {"login": "primozc", "id": 1833314, "node_id": "MDQ6VXNlcjE4MzMzMTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1833314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/primozc", "html_url": "https://github.com/primozc", "followers_url": "https://api.github.com/users/primozc/followers", "following_url": "https://api.github.com/users/primozc/following{/other_user}", "gists_url": "https://api.github.com/users/primozc/gists{/gist_id}", "starred_url": "https://api.github.com/users/primozc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/primozc/subscriptions", "organizations_url": "https://api.github.com/users/primozc/orgs", "repos_url": "https://api.github.com/users/primozc/repos", "events_url": "https://api.github.com/users/primozc/events{/privacy}", "received_events_url": "https://api.github.com/users/primozc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-16T09:10:03Z", "updated_at": "2019-05-16T19:33:57Z", "closed_at": "2019-05-16T19:33:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to use async requests inside pool ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/requests-async/issues/46", "repository_url": "https://api.github.com/repos/encode/requests-async", "labels_url": "https://api.github.com/repos/encode/requests-async/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/encode/requests-async/issues/46/comments", "events_url": "https://api.github.com/repos/encode/requests-async/issues/46/events", "html_url": "https://github.com/encode/requests-async/issues/46", "id": 440674993, "node_id": "MDU6SXNzdWU0NDA2NzQ5OTM=", "number": 46, "title": "name 'socket' is not defined", "user": {"login": "odysseusmax", "id": 35767464, "node_id": "MDQ6VXNlcjM1NzY3NDY0", "avatar_url": "https://avatars2.githubusercontent.com/u/35767464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/odysseusmax", "html_url": "https://github.com/odysseusmax", "followers_url": "https://api.github.com/users/odysseusmax/followers", "following_url": "https://api.github.com/users/odysseusmax/following{/other_user}", "gists_url": "https://api.github.com/users/odysseusmax/gists{/gist_id}", "starred_url": "https://api.github.com/users/odysseusmax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/odysseusmax/subscriptions", "organizations_url": "https://api.github.com/users/odysseusmax/orgs", "repos_url": "https://api.github.com/users/odysseusmax/repos", "events_url": "https://api.github.com/users/odysseusmax/events{/privacy}", "received_events_url": "https://api.github.com/users/odysseusmax/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-06T12:26:26Z", "updated_at": "2019-05-15T08:36:25Z", "closed_at": "2019-05-15T08:36:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Link used:**\r\n `https://download.wetransfer.com//eu2/1d747c5c7b436407f3f886c67932b76120190505211938/3898f2ea5e14f176a27b9950281ee964ef593674/Mortal%20Engines%202018%20Hindi%20ORG%20Dual%20Audio%20www.downloadhub.ind.in%20720p%20BluRay%20ESubs.mkv?cf=y&token=eyJhbGciOiJIUzI1NiJ9.eyJ1bmlxdWUiOiIxZDc0N2M1YzdiNDM2NDA3ZjNmODg2YzY3OTMyYjc2MTIwMTkwNTA1MjExOTM4IiwiZmlsZW5hbWUiOiJNb3J0YWwlMjBFbmdpbmVzJTIwMjAxOCUyMEhpbmRpJTIwT1JHJTIwRHVhbCUyMEF1ZGlvJTIwd3d3LmRvd25sb2FkaHViLmluZC5pbiUyMDcyMHAlMjBCbHVSYXklMjBFU3Vicy5ta3YiLCJleHBpcmVzIjoxNTU3MTI1ODM5LCJob3QiOmZhbHNlLCJieXRlc19lc3RpbWF0ZWQiOjEyNDE2MTcyNDksImVudHJpZXNfZmluZ2VycHJpbnQiOiIzODk4ZjJlYTVlMTRmMTc2YTI3Yjk5NTAyODFlZTk2NGVmNTkzNjc0Iiwid2F5YmlsbF91cmwiOiJodHRwOi8vcHJvZHVjdGlvbi5iYWNrZW5kLnNlcnZpY2UuZXUtd2VzdC0xLnd0OjkyOTIvd2F5YmlsbC92MS81NDJmZjA1NWU2NmY3YTE4ZTc0NGU4MjZjOThjZDlkMjdmZDhhNjJjMmFiYWI1NDQ5MGJiOTlmZTgxNmVhMjk3ODEwMjkwMTFhNGFmMTgxMGM0MmNiYzQ2OWY1YWFhMzA1NjM5ZDYzOTdmY2IwNDc3NDJiMWQ3YWI3MmJkOTczMSIsImNhbGxiYWNrIjoie1wiZm9ybWRhdGFcIjp7XCJhY3Rpb25cIjpcImh0dHA6Ly9wcm9kdWN0aW9uLmZyb250ZW5kLnNlcnZpY2UuZXUtd2VzdC0xLnd0OjMwMDAvYXBpL2JhY2tlbmQvdHJhbnNmZXJzLzFkNzQ3YzVjN2I0MzY0MDdmM2Y4ODZjNjc5MzJiNzYxMjAxOTA1MDUyMTE5MzgvZG93bmxvYWRzLzYxNjg0NjA1MzgvY29tcGxldGVkXCJ9LFwiZm9ybVwiOntcInN0YXR1c1wiOltcInBhcmFtXCIsXCJzdGF0dXNcIl0sXCJkb3dubG9hZF9pZFwiOlwiNjE2ODQ2MDUzOFwifX0ifQ.fSkUyCaLwSjHxQ0OffAmsHyd9O9etC_eY2_0Vj8iGv0`\r\n\r\n **Code used:**\r\n\r\n```\r\nr = await requests.get(url, allow_redirects=True, verify=False, stream=True)\r\n\r\nif(r.status_code < 400):\r\n\r\n    async with aiofiles.open(filename, mode='wb') as fd:\r\n                                \r\n        async for chunk in r.iter_content(chunk_size=8*1024):\r\n                                    \r\n            await fd.write(chunk)\r\n```\r\n\r\n**Error traceback:**\r\n\r\n```\r\nTraceback (most recent call last):\r\n\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/requests_async/adapters.py\", line 54, in send\r\n\r\n     timeout=timeout,\r\n\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/httpcore/pool.py\", line 78, in request\r\n\r\n     response = await connection.send(request)\r\n\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/httpcore/connections.py\", line 76, in send\r\n\r\n     status_code=status_code, reason=reason, headers=headers, body=body, on_close=self._release\r\n\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/httpcore/datastructures.py\", line 149, in __init__\r\n\r\n     decoder_cls = SUPPORTED_DECODERS[part]\r\n\r\n KeyError: b'none'\r\n\r\n \r\n\r\n During handling of the above exception, another exception occurred:\r\n\r\n \r\n\r\n Traceback (most recent call last):\r\n\r\n   File \"/app/downloads.py\", line 109, in down_File\r\n\r\n     r = await requests.get(url, allow_redirects=True, verify=False, stream=True)\r\n\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/requests_async/api.py\", line 11, in get\r\n\r\n     return await request(\"get\", url, params=params, **kwargs)\r\n\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/requests_async/api.py\", line 6, in request\r\n\r\n     return await session.request(method=method, url=url, **kwargs)\r\n\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/requests_async/sessions.py\", line 79, in request\r\n\r\n     resp = await self.send(prep, **send_kwargs)\r\n\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/requests_async/sessions.py\", line 136, in send\r\n\r\n     r = await adapter.send(request, **kwargs)\r\n\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/requests_async/adapters.py\", line 56, in send\r\n\r\n     except (httpcore.BadResponse, socket.error) as err:\r\n\r\n NameError: name 'socket' is not defined\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/requests-async/issues/42", "repository_url": "https://api.github.com/repos/encode/requests-async", "labels_url": "https://api.github.com/repos/encode/requests-async/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/encode/requests-async/issues/42/comments", "events_url": "https://api.github.com/repos/encode/requests-async/issues/42/events", "html_url": "https://github.com/encode/requests-async/issues/42", "id": 435490419, "node_id": "MDU6SXNzdWU0MzU0OTA0MTk=", "number": 42, "title": " 'NoneType' object has no attribute 'resume_reading'", "user": {"login": "odysseusmax", "id": 35767464, "node_id": "MDQ6VXNlcjM1NzY3NDY0", "avatar_url": "https://avatars2.githubusercontent.com/u/35767464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/odysseusmax", "html_url": "https://github.com/odysseusmax", "followers_url": "https://api.github.com/users/odysseusmax/followers", "following_url": "https://api.github.com/users/odysseusmax/following{/other_user}", "gists_url": "https://api.github.com/users/odysseusmax/gists{/gist_id}", "starred_url": "https://api.github.com/users/odysseusmax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/odysseusmax/subscriptions", "organizations_url": "https://api.github.com/users/odysseusmax/orgs", "repos_url": "https://api.github.com/users/odysseusmax/repos", "events_url": "https://api.github.com/users/odysseusmax/events{/privacy}", "received_events_url": "https://api.github.com/users/odysseusmax/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-21T09:04:22Z", "updated_at": "2019-06-18T10:43:01Z", "closed_at": "2019-06-18T10:42:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Resently this happens. \r\n```\r\nTraceback (most recent call last):\r\n   File \"/app/downlods.py\", line 193, in direct_link\r\n     async for chunk in rg.iter_content(chunk_size=8*1024):\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/requests_async/models.py\", line 60, in iter_content\r\n     async for chunk in generate():\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/requests_async/models.py\", line 46, in generate\r\n     async for part in stream():\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/httpcore/datastructures.py\", line 184, in stream\r\n     async for chunk in self.raw():\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/httpcore/datastructures.py\", line 197, in raw\r\n     async for part in self.body_aiter:\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/httpcore/connections.py\", line 83, in _body_iter\r\n     event = await self._receive_event()\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/httpcore/connections.py\", line 100, in _receive_event\r\n     self.reader.read(2048), self.timeout.read_timeout\r\n   File \"/app/.heroku/python/lib/python3.7/asyncio/tasks.py\", line 388, in \r\n     return await fut\r\n   File \"/app/.heroku/python/lib/python3.7/asyncio/streams.py\", line 646, in read\r\n     self._maybe_resume_transport()\r\n   File \"/app/.heroku/python/lib/python3.7/asyncio/streams.py\", line 417, in _maybe_resume_transport\r\n     self._transport.resume_reading()\r\n   File \"/app/.heroku/python/lib/python3.7/asyncio/sslproto.py\", line 345, in resume_reading\r\n     self._ssl_protocol._transport.resume_reading()\r\n AttributeError: 'NoneType' object has no attribute 'resume_reading'\r\n```\r\n\r\nLink: `https://transfer.sh/5PNkN/MaxStudio_June.mkv `\r\n\r\ncode:\r\n\r\n```\r\nr = await requests.get(url, allow_redirects=True, stream=True, verify=False)\r\nif(r.status_code < 400):\r\n    async with aiofiles.open(filename, mode='wb') as fd:\r\n            async for chunk in rg.iter_content(chunk_size=8*1024):\r\n                 await fd.write(chunk)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/requests-async/issues/40", "repository_url": "https://api.github.com/repos/encode/requests-async", "labels_url": "https://api.github.com/repos/encode/requests-async/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/encode/requests-async/issues/40/comments", "events_url": "https://api.github.com/repos/encode/requests-async/issues/40/events", "html_url": "https://github.com/encode/requests-async/issues/40", "id": 435356556, "node_id": "MDU6SXNzdWU0MzUzNTY1NTY=", "number": 40, "title": "sessions \"Cannot access .content on a streaming response\" ", "user": {"login": "odysseusmax", "id": 35767464, "node_id": "MDQ6VXNlcjM1NzY3NDY0", "avatar_url": "https://avatars2.githubusercontent.com/u/35767464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/odysseusmax", "html_url": "https://github.com/odysseusmax", "followers_url": "https://api.github.com/users/odysseusmax/followers", "following_url": "https://api.github.com/users/odysseusmax/following{/other_user}", "gists_url": "https://api.github.com/users/odysseusmax/gists{/gist_id}", "starred_url": "https://api.github.com/users/odysseusmax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/odysseusmax/subscriptions", "organizations_url": "https://api.github.com/users/odysseusmax/orgs", "repos_url": "https://api.github.com/users/odysseusmax/repos", "events_url": "https://api.github.com/users/odysseusmax/events{/privacy}", "received_events_url": "https://api.github.com/users/odysseusmax/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-20T04:45:24Z", "updated_at": "2019-04-20T09:33:50Z", "closed_at": "2019-04-20T09:31:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "When requesting a stream request with sessions, `requests_async.exceptions.ContentNotAvailable: Cannot access .content on a streaming response` occours. Works just fine if `stream=False`\r\n\r\n**Code used**\r\n\r\n```\r\nasync with requests.Session() as session:\r\n        r = await session.get(url,  params=params, stream=True, verify=False)\r\n        for key,value in r.headers.items():\r\n            print(key, ' : ',value)\r\n```\r\n**Error**\r\n\r\n```\r\nTraceback (most recent call last):\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/pyrogram/client/ext/dispatcher.py\", line 155, in update_worker\r\n     await handler.callback(self.client, *args)\r\n   File \"main.py\", line 206, in text\r\n     result = await download(c, m, message, snt.message_id)\r\n   File \"/app/downlods.py\", line 24, in download\r\n     ext = await gdrive_dl(c, m, url, mid, filename)\r\n   File \"/app/downlods.py\", line 84, in gdrive_dl\r\n     r = await session.get(url, params=params, stream=True, verify=False)\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/requests_async/sessions.py\", line 85, in get\r\n     return await self.request(\"GET\", url, **kwargs)\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/requests_async/sessions.py\", line 79, in request\r\n     resp = await self.send(prep, **send_kwargs)\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/requests_async/sessions.py\", line 157, in send\r\n     async for resp in self.resolve_redirects(r, request, **kwargs):\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/requests_async/sessions.py\", line 209, in resolve_redirects\r\n     resp.content  # Consume socket so it can be released\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/requests_async/models.py\", line 25, in content\r\n     raise ContentNotAvailable(\"Cannot access .content on a streaming response\")\r\n requests_async.exceptions.ContentNotAvailable: Cannot access .content on a streaming response\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/requests-async/issues/39", "repository_url": "https://api.github.com/repos/encode/requests-async", "labels_url": "https://api.github.com/repos/encode/requests-async/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/encode/requests-async/issues/39/comments", "events_url": "https://api.github.com/repos/encode/requests-async/issues/39/events", "html_url": "https://github.com/encode/requests-async/issues/39", "id": 435259802, "node_id": "MDU6SXNzdWU0MzUyNTk4MDI=", "number": 39, "title": "error while requesting", "user": {"login": "odysseusmax", "id": 35767464, "node_id": "MDQ6VXNlcjM1NzY3NDY0", "avatar_url": "https://avatars2.githubusercontent.com/u/35767464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/odysseusmax", "html_url": "https://github.com/odysseusmax", "followers_url": "https://api.github.com/users/odysseusmax/followers", "following_url": "https://api.github.com/users/odysseusmax/following{/other_user}", "gists_url": "https://api.github.com/users/odysseusmax/gists{/gist_id}", "starred_url": "https://api.github.com/users/odysseusmax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/odysseusmax/subscriptions", "organizations_url": "https://api.github.com/users/odysseusmax/orgs", "repos_url": "https://api.github.com/users/odysseusmax/repos", "events_url": "https://api.github.com/users/odysseusmax/events{/privacy}", "received_events_url": "https://api.github.com/users/odysseusmax/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-19T18:10:09Z", "updated_at": "2019-04-20T09:33:34Z", "closed_at": "2019-04-20T09:31:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "While making a head request the following errors occoured.\r\n\r\ncode used:\r\n```\r\nr = await requests.headt(url, allow_redirects=True)\r\n```\r\n\r\nerror:\r\n```\r\nTraceback (most recent call last):\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/requests_async/adapters.py\", line 53, in send\r\n     timeout=timeout,\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/httpcore/pool.py\", line 77, in request\r\n     connection = await self.acquire_connection(parsed_url, ssl=ssl, timeout=timeout)\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/httpcore/pool.py\", line 102, in acquire_connection\r\n     ssl_context = await self.get_ssl_context(url, ssl)\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/httpcore/pool.py\", line 150, in get_ssl_context\r\n     None, self.get_ssl_context_verify\r\n  File \"/app/.heroku/python/lib/python3.7/concurrent/futures/thread.py\", line 57, in run\r\n     result = self.fn(*self.args, **self.kwargs)\r\n TypeError: get_ssl_context_verify() missing 1 required positional argument: 'config'\r\n \r\n During handling of the above exception, another exception occurred:\r\n\r\n Traceback (most recent call last):\r\n   File \"/app/downlods.py\", line 94, in direct_link\r\n     r = await requests.head(url, allow_redirects=True)\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/requests_async/api.py\", line 21, in head\r\n     return await request(\"head\", url, **kwargs)\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/requests_async/api.py\", line 6, in request\r\n     return await session.request(method=method, url=url, **kwargs)\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/requests_async/sessions.py\", line 79, in request\r\n     resp = await self.send(prep, **send_kwargs)\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/requests_async/sessions.py\", line 136, in send\r\n     r = await adapter.send(request, **kwargs)\r\n   File \"/app/.heroku/python/lib/python3.7/site-packages/requests_async/adapters.py\", line 55, in send\r\n    except (httpcore.BadRequest, socket.error) as err:\r\n AttributeError: module 'httpcore' has no attribute 'BadRequest'\r\n```\r\npythn-3.7.3\r\nrequests-async-0.3.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/requests-async/issues/36", "repository_url": "https://api.github.com/repos/encode/requests-async", "labels_url": "https://api.github.com/repos/encode/requests-async/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/encode/requests-async/issues/36/comments", "events_url": "https://api.github.com/repos/encode/requests-async/issues/36/events", "html_url": "https://github.com/encode/requests-async/issues/36", "id": 432485173, "node_id": "MDU6SXNzdWU0MzI0ODUxNzM=", "number": 36, "title": "requests-futures", "user": {"login": "blueyed", "id": 9766, "node_id": "MDQ6VXNlcjk3NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blueyed", "html_url": "https://github.com/blueyed", "followers_url": "https://api.github.com/users/blueyed/followers", "following_url": "https://api.github.com/users/blueyed/following{/other_user}", "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions", "organizations_url": "https://api.github.com/users/blueyed/orgs", "repos_url": "https://api.github.com/users/blueyed/repos", "events_url": "https://api.github.com/users/blueyed/events{/privacy}", "received_events_url": "https://api.github.com/users/blueyed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-12T09:57:35Z", "updated_at": "2019-04-12T12:12:12Z", "closed_at": "2019-04-12T12:12:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "What do you think of https://github.com/ross/requests-futures?\r\nIs it worth adding to alternatives in the README?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/requests-async/issues/33", "repository_url": "https://api.github.com/repos/encode/requests-async", "labels_url": "https://api.github.com/repos/encode/requests-async/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/encode/requests-async/issues/33/comments", "events_url": "https://api.github.com/repos/encode/requests-async/issues/33/events", "html_url": "https://github.com/encode/requests-async/issues/33", "id": 430153383, "node_id": "MDU6SXNzdWU0MzAxNTMzODM=", "number": 33, "title": "Benefits of ASGISession as a test client?", "user": {"login": "florimondmanca", "id": 15911462, "node_id": "MDQ6VXNlcjE1OTExNDYy", "avatar_url": "https://avatars0.githubusercontent.com/u/15911462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/florimondmanca", "html_url": "https://github.com/florimondmanca", "followers_url": "https://api.github.com/users/florimondmanca/followers", "following_url": "https://api.github.com/users/florimondmanca/following{/other_user}", "gists_url": "https://api.github.com/users/florimondmanca/gists{/gist_id}", "starred_url": "https://api.github.com/users/florimondmanca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/florimondmanca/subscriptions", "organizations_url": "https://api.github.com/users/florimondmanca/orgs", "repos_url": "https://api.github.com/users/florimondmanca/repos", "events_url": "https://api.github.com/users/florimondmanca/events{/privacy}", "received_events_url": "https://api.github.com/users/florimondmanca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-07T14:42:44Z", "updated_at": "2019-04-07T18:48:05Z", "closed_at": "2019-04-07T18:47:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey! I just realized through Python Bytes that requests-async (ASGISession in particular) can be used to build an async test client for ASGI apps.\r\n\r\nSo I\u2019m considering moving to using this instead of Starlette\u2019s (sync) requests-like client.\r\n\r\nBut this would require a bit more work on the testing side - eg in pytest you\u2019d need to get pytest-asyncio, decorate test cases, etc.\r\n\r\nSo I\u2019m asking a simple question \u2014 what kind of benefits can using this test client bring in terms of testing?\r\n\r\nI\u2019ve had issues precisouly with testing multi-client behavior (eg connect to a WebSocket endpoint and make an HTTP request in the meanwhile), most likely because the event loop management that Starlette\u2019s test client does. Would this simplify this kind of use case?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/requests-async/issues/32", "repository_url": "https://api.github.com/repos/encode/requests-async", "labels_url": "https://api.github.com/repos/encode/requests-async/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/encode/requests-async/issues/32/comments", "events_url": "https://api.github.com/repos/encode/requests-async/issues/32/events", "html_url": "https://github.com/encode/requests-async/issues/32", "id": 429334298, "node_id": "MDU6SXNzdWU0MjkzMzQyOTg=", "number": 32, "title": "Support Custom CA Bundle (Self Signed Certs)", "user": {"login": "iwoloschin", "id": 6474586, "node_id": "MDQ6VXNlcjY0NzQ1ODY=", "avatar_url": "https://avatars3.githubusercontent.com/u/6474586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iwoloschin", "html_url": "https://github.com/iwoloschin", "followers_url": "https://api.github.com/users/iwoloschin/followers", "following_url": "https://api.github.com/users/iwoloschin/following{/other_user}", "gists_url": "https://api.github.com/users/iwoloschin/gists{/gist_id}", "starred_url": "https://api.github.com/users/iwoloschin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iwoloschin/subscriptions", "organizations_url": "https://api.github.com/users/iwoloschin/orgs", "repos_url": "https://api.github.com/users/iwoloschin/repos", "events_url": "https://api.github.com/users/iwoloschin/events{/privacy}", "received_events_url": "https://api.github.com/users/iwoloschin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-04T15:10:20Z", "updated_at": "2019-04-10T14:42:18Z", "closed_at": "2019-04-10T14:41:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Looks like support for self signed certs was inadvertently removed in the last day or two.  Opening an issue to track, if no one else gets to it first I can probably make a PR within a couple of days.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/requests-async/issues/20", "repository_url": "https://api.github.com/repos/encode/requests-async", "labels_url": "https://api.github.com/repos/encode/requests-async/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/encode/requests-async/issues/20/comments", "events_url": "https://api.github.com/repos/encode/requests-async/issues/20/events", "html_url": "https://github.com/encode/requests-async/issues/20", "id": 424426978, "node_id": "MDU6SXNzdWU0MjQ0MjY5Nzg=", "number": 20, "title": "cake without sparkles", "user": {"login": "ken-reitz", "id": 119893, "node_id": "MDQ6VXNlcjExOTg5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/119893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ken-reitz", "html_url": "https://github.com/ken-reitz", "followers_url": "https://api.github.com/users/ken-reitz/followers", "following_url": "https://api.github.com/users/ken-reitz/following{/other_user}", "gists_url": "https://api.github.com/users/ken-reitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ken-reitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ken-reitz/subscriptions", "organizations_url": "https://api.github.com/users/ken-reitz/orgs", "repos_url": "https://api.github.com/users/ken-reitz/repos", "events_url": "https://api.github.com/users/ken-reitz/events{/privacy}", "received_events_url": "https://api.github.com/users/ken-reitz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-22T22:51:49Z", "updated_at": "2019-03-26T10:31:13Z", "closed_at": "2019-03-26T10:31:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "*the cake is a lie*", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/requests-async/issues/17", "repository_url": "https://api.github.com/repos/encode/requests-async", "labels_url": "https://api.github.com/repos/encode/requests-async/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/encode/requests-async/issues/17/comments", "events_url": "https://api.github.com/repos/encode/requests-async/issues/17/events", "html_url": "https://github.com/encode/requests-async/issues/17", "id": 424121777, "node_id": "MDU6SXNzdWU0MjQxMjE3Nzc=", "number": 17, "title": "exceptions import", "user": {"login": "larsclaussen", "id": 10025277, "node_id": "MDQ6VXNlcjEwMDI1Mjc3", "avatar_url": "https://avatars0.githubusercontent.com/u/10025277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/larsclaussen", "html_url": "https://github.com/larsclaussen", "followers_url": "https://api.github.com/users/larsclaussen/followers", "following_url": "https://api.github.com/users/larsclaussen/following{/other_user}", "gists_url": "https://api.github.com/users/larsclaussen/gists{/gist_id}", "starred_url": "https://api.github.com/users/larsclaussen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/larsclaussen/subscriptions", "organizations_url": "https://api.github.com/users/larsclaussen/orgs", "repos_url": "https://api.github.com/users/larsclaussen/repos", "events_url": "https://api.github.com/users/larsclaussen/events{/privacy}", "received_events_url": "https://api.github.com/users/larsclaussen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-22T09:42:06Z", "updated_at": "2019-03-22T11:38:46Z", "closed_at": "2019-03-22T10:40:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all, good work there on the ASGI/async front! Highly appreciated.   \r\n\r\nSo far porting my code from ``requests`` to ``requests_async`` has been seamless. I was wondering, however, how to properly import exceptions. Using requests directly I'd do\r\n```   \r\nfrom requests import exceptions\r\n```\r\nI would expect that I was also able to import exceptions the same way\r\n```   \r\nfrom requests_async import exceptions\r\n```\r\nIs this by design because the intention is just to be able to use await for making requests? Or is the plan to wrap the requests lib entirely?   ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/requests-async/issues/14", "repository_url": "https://api.github.com/repos/encode/requests-async", "labels_url": "https://api.github.com/repos/encode/requests-async/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/encode/requests-async/issues/14/comments", "events_url": "https://api.github.com/repos/encode/requests-async/issues/14/events", "html_url": "https://github.com/encode/requests-async/issues/14", "id": 423896958, "node_id": "MDU6SXNzdWU0MjM4OTY5NTg=", "number": 14, "title": "Blocking on network I/O, not co-operative", "user": {"login": "heemayl", "id": 10320695, "node_id": "MDQ6VXNlcjEwMzIwNjk1", "avatar_url": "https://avatars0.githubusercontent.com/u/10320695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heemayl", "html_url": "https://github.com/heemayl", "followers_url": "https://api.github.com/users/heemayl/followers", "following_url": "https://api.github.com/users/heemayl/following{/other_user}", "gists_url": "https://api.github.com/users/heemayl/gists{/gist_id}", "starred_url": "https://api.github.com/users/heemayl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heemayl/subscriptions", "organizations_url": "https://api.github.com/users/heemayl/orgs", "repos_url": "https://api.github.com/users/heemayl/repos", "events_url": "https://api.github.com/users/heemayl/events{/privacy}", "received_events_url": "https://api.github.com/users/heemayl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-21T19:10:47Z", "updated_at": "2019-03-21T19:35:25Z", "closed_at": "2019-03-21T19:27:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Unless i'm missing something, this does not help with co-operative multitasking i.e. it does not let the event loop to run other coroutines while waiting on network I/O.\r\n\r\n```python\r\nIn [1397]: async def send_req(url): \r\n      ...:     print(f'Start: {url}: {time.time()}') \r\n      ...:     res = await requests_async.get(url) \r\n      ...:     print(f'End: {url}: {res.status_code}: {time.time()}') \r\n      ...:     return None \r\n      ...:                                                                                                                                                                                                  \r\n\r\nIn [1398]: async def check_requests_async(): \r\n      ...:     await send_req('https://example.com') \r\n      ...:     await send_req('https://python.org') \r\n      ...:     await send_req('https://pypi.org') \r\n      ...:     return None \r\n      ...:                                                                                                                                                                                                  \r\n\r\nIn [1399]: loop.run_until_complete(check_requests_async())                                                                                                                                                  \r\nStart: https://example.com: 1553195192.1109543\r\nEnd: https://example.com: 200: 1553195194.197162\r\nStart: https://python.org: 1553195194.1972675\r\nEnd: https://python.org: 200: 1553195198.2745004\r\nStart: https://pypi.org: 1553195198.2746341\r\nEnd: https://pypi.org: 200: 1553195200.1185997\r\n```\r\n\r\nPlease correct me if I'm barking up the wrong tree here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/requests-async/issues/12", "repository_url": "https://api.github.com/repos/encode/requests-async", "labels_url": "https://api.github.com/repos/encode/requests-async/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/encode/requests-async/issues/12/comments", "events_url": "https://api.github.com/repos/encode/requests-async/issues/12/events", "html_url": "https://github.com/encode/requests-async/issues/12", "id": 423760143, "node_id": "MDU6SXNzdWU0MjM3NjAxNDM=", "number": 12, "title": "Having to encode `request.body`", "user": {"login": "tomchristie", "id": 647359, "node_id": "MDQ6VXNlcjY0NzM1OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/647359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomchristie", "html_url": "https://github.com/tomchristie", "followers_url": "https://api.github.com/users/tomchristie/followers", "following_url": "https://api.github.com/users/tomchristie/following{/other_user}", "gists_url": "https://api.github.com/users/tomchristie/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomchristie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomchristie/subscriptions", "organizations_url": "https://api.github.com/users/tomchristie/orgs", "repos_url": "https://api.github.com/users/tomchristie/repos", "events_url": "https://api.github.com/users/tomchristie/events{/privacy}", "received_events_url": "https://api.github.com/users/tomchristie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-03-21T14:31:28Z", "updated_at": "2019-03-26T11:26:01Z", "closed_at": "2019-03-26T11:19:20Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In the adapter class we're currently encoding the body of the `PreparedRequest` instance, with `request.body.encode(\"utf-8\")`.\r\n\r\nI'm not certain why it isn't already represented as a byte interface, or how to change that, since the current \"hey let's just encode it with utf-8, that must be right\" is rather brittle.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/requests-async/issues/11", "repository_url": "https://api.github.com/repos/encode/requests-async", "labels_url": "https://api.github.com/repos/encode/requests-async/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/encode/requests-async/issues/11/comments", "events_url": "https://api.github.com/repos/encode/requests-async/issues/11/events", "html_url": "https://github.com/encode/requests-async/issues/11", "id": 423748651, "node_id": "MDU6SXNzdWU0MjM3NDg2NTE=", "number": 11, "title": "Timeout support.", "user": {"login": "tomchristie", "id": 647359, "node_id": "MDQ6VXNlcjY0NzM1OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/647359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomchristie", "html_url": "https://github.com/tomchristie", "followers_url": "https://api.github.com/users/tomchristie/followers", "following_url": "https://api.github.com/users/tomchristie/following{/other_user}", "gists_url": "https://api.github.com/users/tomchristie/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomchristie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomchristie/subscriptions", "organizations_url": "https://api.github.com/users/tomchristie/orgs", "repos_url": "https://api.github.com/users/tomchristie/repos", "events_url": "https://api.github.com/users/tomchristie/events{/privacy}", "received_events_url": "https://api.github.com/users/tomchristie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-03-21T14:10:05Z", "updated_at": "2019-03-22T15:37:04Z", "closed_at": "2019-03-22T15:37:04Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The adapter class ought to implement timeout support.\r\n\r\nPresumably at `open_connection`, and at `reader.read(...)`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/requests-async/issues/10", "repository_url": "https://api.github.com/repos/encode/requests-async", "labels_url": "https://api.github.com/repos/encode/requests-async/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/encode/requests-async/issues/10/comments", "events_url": "https://api.github.com/repos/encode/requests-async/issues/10/events", "html_url": "https://github.com/encode/requests-async/issues/10", "id": 423747821, "node_id": "MDU6SXNzdWU0MjM3NDc4MjE=", "number": 10, "title": "Connection pooling.", "user": {"login": "tomchristie", "id": 647359, "node_id": "MDQ6VXNlcjY0NzM1OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/647359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomchristie", "html_url": "https://github.com/tomchristie", "followers_url": "https://api.github.com/users/tomchristie/followers", "following_url": "https://api.github.com/users/tomchristie/following{/other_user}", "gists_url": "https://api.github.com/users/tomchristie/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomchristie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomchristie/subscriptions", "organizations_url": "https://api.github.com/users/tomchristie/orgs", "repos_url": "https://api.github.com/users/tomchristie/repos", "events_url": "https://api.github.com/users/tomchristie/events{/privacy}", "received_events_url": "https://api.github.com/users/tomchristie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2019-03-21T14:08:25Z", "updated_at": "2019-05-17T20:04:22Z", "closed_at": "2019-04-19T10:16:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The adpater class should mimic requests more closely, and provide connection pooling.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/requests-async/issues/9", "repository_url": "https://api.github.com/repos/encode/requests-async", "labels_url": "https://api.github.com/repos/encode/requests-async/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/encode/requests-async/issues/9/comments", "events_url": "https://api.github.com/repos/encode/requests-async/issues/9/events", "html_url": "https://github.com/encode/requests-async/issues/9", "id": 423746849, "node_id": "MDU6SXNzdWU0MjM3NDY4NDk=", "number": 9, "title": "Response.next", "user": {"login": "tomchristie", "id": 647359, "node_id": "MDQ6VXNlcjY0NzM1OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/647359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomchristie", "html_url": "https://github.com/tomchristie", "followers_url": "https://api.github.com/users/tomchristie/followers", "following_url": "https://api.github.com/users/tomchristie/following{/other_user}", "gists_url": "https://api.github.com/users/tomchristie/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomchristie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomchristie/subscriptions", "organizations_url": "https://api.github.com/users/tomchristie/orgs", "repos_url": "https://api.github.com/users/tomchristie/repos", "events_url": "https://api.github.com/users/tomchristie/events{/privacy}", "received_events_url": "https://api.github.com/users/tomchristie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-21T14:06:28Z", "updated_at": "2019-03-26T11:02:00Z", "closed_at": "2019-03-26T11:02:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When `allow_redirects` is set to `False`, requests sets a `response.next` property.\r\nI've not really looked into what the interface for that is.\r\nCan we expose an equivelent async interface there?\r\nWould we need to modify the response class to do so?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/requests-async/issues/8", "repository_url": "https://api.github.com/repos/encode/requests-async", "labels_url": "https://api.github.com/repos/encode/requests-async/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/encode/requests-async/issues/8/comments", "events_url": "https://api.github.com/repos/encode/requests-async/issues/8/events", "html_url": "https://github.com/encode/requests-async/issues/8", "id": 423745861, "node_id": "MDU6SXNzdWU0MjM3NDU4NjE=", "number": 8, "title": "Streaming request uploads and response downloads.", "user": {"login": "tomchristie", "id": 647359, "node_id": "MDQ6VXNlcjY0NzM1OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/647359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomchristie", "html_url": "https://github.com/tomchristie", "followers_url": "https://api.github.com/users/tomchristie/followers", "following_url": "https://api.github.com/users/tomchristie/following{/other_user}", "gists_url": "https://api.github.com/users/tomchristie/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomchristie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomchristie/subscriptions", "organizations_url": "https://api.github.com/users/tomchristie/orgs", "repos_url": "https://api.github.com/users/tomchristie/repos", "events_url": "https://api.github.com/users/tomchristie/events{/privacy}", "received_events_url": "https://api.github.com/users/tomchristie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-03-21T14:04:25Z", "updated_at": "2019-04-19T12:36:41Z", "closed_at": "2019-04-19T12:36:41Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Not currently supported.\r\nWe can do at some point, but I think we should defer it at the moment.\r\n\r\nIt's more complicated than some other issues, because it'd mean minor API changes (eg. exactly what kind of interface do we expose for streaming downloads?)\r\n\r\nAlso for downloads we might end up having to stop using `urllib3` responses, and handle some bits (eg. gzip decompression) ourselves.\r\n\r\nIdeally we should:\r\n\r\n* Raise an error is `stream=True` is set.\r\n* Figure out how we can detect if a streaming *request* is being attempted, and handle any error conditions there neatly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/requests-async/issues/7", "repository_url": "https://api.github.com/repos/encode/requests-async", "labels_url": "https://api.github.com/repos/encode/requests-async/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/encode/requests-async/issues/7/comments", "events_url": "https://api.github.com/repos/encode/requests-async/issues/7/events", "html_url": "https://github.com/encode/requests-async/issues/7", "id": 423745141, "node_id": "MDU6SXNzdWU0MjM3NDUxNDE=", "number": 7, "title": "Proxy support", "user": {"login": "tomchristie", "id": 647359, "node_id": "MDQ6VXNlcjY0NzM1OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/647359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomchristie", "html_url": "https://github.com/tomchristie", "followers_url": "https://api.github.com/users/tomchristie/followers", "following_url": "https://api.github.com/users/tomchristie/following{/other_user}", "gists_url": "https://api.github.com/users/tomchristie/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomchristie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomchristie/subscriptions", "organizations_url": "https://api.github.com/users/tomchristie/orgs", "repos_url": "https://api.github.com/users/tomchristie/repos", "events_url": "https://api.github.com/users/tomchristie/events{/privacy}", "received_events_url": "https://api.github.com/users/tomchristie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-03-21T14:02:52Z", "updated_at": "2019-06-18T15:24:53Z", "closed_at": "2019-06-18T15:24:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I'd assume this is probably currently broken, but haven't looked into it yet.\r\n\r\nQuestions:\r\n\r\n* Can anyone confirm if it is currently broken?\r\n* Where does the error occur if so?\r\n* What API in requests do we need to be honoring?\r\n* Where does requests handle proxy connections?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/requests-async/issues/6", "repository_url": "https://api.github.com/repos/encode/requests-async", "labels_url": "https://api.github.com/repos/encode/requests-async/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/encode/requests-async/issues/6/comments", "events_url": "https://api.github.com/repos/encode/requests-async/issues/6/events", "html_url": "https://github.com/encode/requests-async/issues/6", "id": 423744544, "node_id": "MDU6SXNzdWU0MjM3NDQ1NDQ=", "number": 6, "title": "SSL Verification", "user": {"login": "tomchristie", "id": 647359, "node_id": "MDQ6VXNlcjY0NzM1OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/647359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomchristie", "html_url": "https://github.com/tomchristie", "followers_url": "https://api.github.com/users/tomchristie/followers", "following_url": "https://api.github.com/users/tomchristie/following{/other_user}", "gists_url": "https://api.github.com/users/tomchristie/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomchristie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomchristie/subscriptions", "organizations_url": "https://api.github.com/users/tomchristie/orgs", "repos_url": "https://api.github.com/users/tomchristie/repos", "events_url": "https://api.github.com/users/tomchristie/events{/privacy}", "received_events_url": "https://api.github.com/users/tomchristie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-21T14:01:38Z", "updated_at": "2019-03-27T17:33:11Z", "closed_at": "2019-03-27T17:33:11Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "At the moment we're setting no_verify on any SSL requests: https://github.com/encode/requests-async/blob/master/requests_async/adapters.py\r\n\r\n`requests` *doesn't* do this, and *does* verify certificates by default.\r\n\r\nIf you remove the `no_verify` (eg. switch it to `ssl=True` or `ssl = ssl.create_default_context()`) then you'lll get an SSL error with `requests-async`, but not with `requests`.\r\n\r\n* Where does requests load the ssl context?\r\n* How can we make sure we're doing the same.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/requests-async/issues/5", "repository_url": "https://api.github.com/repos/encode/requests-async", "labels_url": "https://api.github.com/repos/encode/requests-async/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/encode/requests-async/issues/5/comments", "events_url": "https://api.github.com/repos/encode/requests-async/issues/5/events", "html_url": "https://github.com/encode/requests-async/issues/5", "id": 423743141, "node_id": "MDU6SXNzdWU0MjM3NDMxNDE=", "number": 5, "title": "Async cookie persistence", "user": {"login": "tomchristie", "id": 647359, "node_id": "MDQ6VXNlcjY0NzM1OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/647359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomchristie", "html_url": "https://github.com/tomchristie", "followers_url": "https://api.github.com/users/tomchristie/followers", "following_url": "https://api.github.com/users/tomchristie/following{/other_user}", "gists_url": "https://api.github.com/users/tomchristie/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomchristie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomchristie/subscriptions", "organizations_url": "https://api.github.com/users/tomchristie/orgs", "repos_url": "https://api.github.com/users/tomchristie/repos", "events_url": "https://api.github.com/users/tomchristie/events{/privacy}", "received_events_url": "https://api.github.com/users/tomchristie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-21T13:58:49Z", "updated_at": "2019-03-27T16:18:14Z", "closed_at": "2019-03-27T16:18:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Some cookie stores will be on-disk. Writing to the cookie store will be a blocking operation. Really we ought to make sure that any write to an on-disk cookie jar is performed within a threadpool.\r\n\r\nStarlette's `run_in_threadpool` may be useful.\r\n\r\nQuestions:\r\n\r\n* Can we differentiate between in-memory and on-disk cases?\r\n* What is the default?", "performed_via_github_app": null, "score": 1.0}]}