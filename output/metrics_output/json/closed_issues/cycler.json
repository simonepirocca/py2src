{"total_count": 13, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/matplotlib/cycler/issues/55", "repository_url": "https://api.github.com/repos/matplotlib/cycler", "labels_url": "https://api.github.com/repos/matplotlib/cycler/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/matplotlib/cycler/issues/55/comments", "events_url": "https://api.github.com/repos/matplotlib/cycler/issues/55/events", "html_url": "https://github.com/matplotlib/cycler/issues/55", "id": 566037854, "node_id": "MDU6SXNzdWU1NjYwMzc4NTQ=", "number": 55, "title": "doc: fix compatibility with ipython 7.11+", "user": {"login": "sandrotosi", "id": 346648, "node_id": "MDQ6VXNlcjM0NjY0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/346648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sandrotosi", "html_url": "https://github.com/sandrotosi", "followers_url": "https://api.github.com/users/sandrotosi/followers", "following_url": "https://api.github.com/users/sandrotosi/following{/other_user}", "gists_url": "https://api.github.com/users/sandrotosi/gists{/gist_id}", "starred_url": "https://api.github.com/users/sandrotosi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sandrotosi/subscriptions", "organizations_url": "https://api.github.com/users/sandrotosi/orgs", "repos_url": "https://api.github.com/users/sandrotosi/repos", "events_url": "https://api.github.com/users/sandrotosi/events{/privacy}", "received_events_url": "https://api.github.com/users/sandrotosi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-17T03:43:29Z", "updated_at": "2020-02-18T12:45:49Z", "closed_at": "2020-02-18T12:45:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nsince we introduced ipython 7.11 in Debian cycler failed to build its documentation, the fix is pretty straightforward:\r\n\r\n```\r\n--- a/doc/source/index.rst\r\n+++ b/doc/source/index.rst\r\n@@ -48,8 +48,6 @@ hashable (as it will eventually be used\r\n \r\n    from __future__ import print_function\r\n    from cycler import cycler\r\n-\r\n-\r\n    color_cycle = cycler(color=['r', 'g', 'b'])\r\n    color_cycle\r\n```\r\n\r\ncan you please apply it? thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/matplotlib/cycler/issues/51", "repository_url": "https://api.github.com/repos/matplotlib/cycler", "labels_url": "https://api.github.com/repos/matplotlib/cycler/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/matplotlib/cycler/issues/51/comments", "events_url": "https://api.github.com/repos/matplotlib/cycler/issues/51/events", "html_url": "https://github.com/matplotlib/cycler/issues/51", "id": 398852417, "node_id": "MDU6SXNzdWUzOTg4NTI0MTc=", "number": 51, "title": "[feature-request] addition of cyclers requires them to be equal length", "user": {"login": "bjmuld", "id": 11355599, "node_id": "MDQ6VXNlcjExMzU1NTk5", "avatar_url": "https://avatars1.githubusercontent.com/u/11355599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjmuld", "html_url": "https://github.com/bjmuld", "followers_url": "https://api.github.com/users/bjmuld/followers", "following_url": "https://api.github.com/users/bjmuld/following{/other_user}", "gists_url": "https://api.github.com/users/bjmuld/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjmuld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjmuld/subscriptions", "organizations_url": "https://api.github.com/users/bjmuld/orgs", "repos_url": "https://api.github.com/users/bjmuld/repos", "events_url": "https://api.github.com/users/bjmuld/events{/privacy}", "received_events_url": "https://api.github.com/users/bjmuld/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-14T11:42:57Z", "updated_at": "2019-01-14T11:44:39Z", "closed_at": "2019-01-14T11:44:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I often need to combine cyclers of unequal length.  I had been under the impression that the salient feature distinguishing the '\\*' and '+' operations was whether or not the cyclers being joined were of equal length, but after submitting [matplotlib/cycler #50](https://github.com/matplotlib/cycler/issues/50), it seems that '\\*' is intended to combine them in a hierarchical fashion, where '+' yields simultaneous cycling.\r\n\r\nCurrently, '+' does not support unequal-length cyclers, leaving the user to solve the problem of finding the LCM of the two cyclers and extending their length appropriately. Though not insurmountable, it's a significant distraction from other work.\r\n\r\nThoughts?\r\n\r\n```python\r\nfrom matplotlib.pyplot import cycler\r\n\r\nprop_orders = {\r\n    'color': ['k', 'r', 'g', 'b', 'c', 'm', 'y'],\r\n    'marker': ['.', 'o', 'v', 's', '*'],\r\n}\r\n\r\na=cycler('color', prop_orders['color'])\r\nb=cycler('marker', prop_orders['marker'])\r\n\r\nc = (a*b)()\r\n\r\nprint(next(c))\r\nprint(next(c))\r\n```\r\n\r\n**Actual outcome**\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"\", line 242, in __add__\r\n    \"not {0} and {1}\".format(len(self), len(other)))\r\nValueError: Can only add equal length cycles, not 7 and 5\r\n```\r\n\r\n**Desired outcome**\r\nI would hope for the operation to succeed and for both attributes to be actively cycling, i.e.\r\n```\r\n{'color': 'k', 'marker': '.'}\r\n{'color': 'r', 'marker': 'o'}\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/matplotlib/cycler/issues/50", "repository_url": "https://api.github.com/repos/matplotlib/cycler", "labels_url": "https://api.github.com/repos/matplotlib/cycler/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/matplotlib/cycler/issues/50/comments", "events_url": "https://api.github.com/repos/matplotlib/cycler/issues/50/events", "html_url": "https://github.com/matplotlib/cycler/issues/50", "id": 398703199, "node_id": "MDU6SXNzdWUzOTg3MDMxOTk=", "number": 50, "title": "cross product yields cycler which repeats property values (not really cycling, then)", "user": {"login": "bjmuld", "id": 11355599, "node_id": "MDQ6VXNlcjExMzU1NTk5", "avatar_url": "https://avatars1.githubusercontent.com/u/11355599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjmuld", "html_url": "https://github.com/bjmuld", "followers_url": "https://api.github.com/users/bjmuld/followers", "following_url": "https://api.github.com/users/bjmuld/following{/other_user}", "gists_url": "https://api.github.com/users/bjmuld/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjmuld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjmuld/subscriptions", "organizations_url": "https://api.github.com/users/bjmuld/orgs", "repos_url": "https://api.github.com/users/bjmuld/repos", "events_url": "https://api.github.com/users/bjmuld/events{/privacy}", "received_events_url": "https://api.github.com/users/bjmuld/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 226751566, "node_id": "MDU6TGFiZWwyMjY3NTE1NjY=", "url": "https://api.github.com/repos/matplotlib/cycler/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-13T21:50:55Z", "updated_at": "2019-01-14T00:42:32Z", "closed_at": "2019-01-14T00:42:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--To help us understand and resolve your issue, please fill out the form to the best of your ability.-->\r\n<!--You can feel free to delete the sections that do not apply.-->\r\n\r\n### Bug report\r\n\r\n**Bug summary**\r\n\r\nComposing two property cyclers yields a cycler which stays on one property value for multiple calls\r\n\r\n<!--A minimum code snippet required to reproduce the bug, also minimizing the number of dependencies required-->\r\n\r\n```python\r\nfrom matplotlib.pyplot import cycler\r\n\r\nprop_orders = {\r\n    'color': ['k', 'r', 'g', 'b', 'c', 'm', 'y'],\r\n    'marker': ['.', 'o', 'v', 's', '*'],\r\n    'linestyle': ['-', '--', '-.', ':'],\r\n    'hatch': ('-', '+', 'x', '\\\\', '*', 'o', 'O', '.'),\r\n}\r\n\r\na=cycler('color', prop_orders['color'])\r\nb=cycler('marker', prop_orders['marker'])\r\n\r\nc = (a*b)()\r\n\r\nprint(next(c))\r\nprint(next(c))\r\n```\r\n\r\n**Actual outcome**\r\n\r\n<!--The output produced by the above code, which may be a screenshot, console output, etc.-->\r\n\r\n```\r\n{'color': 'k', 'marker': '.'}\r\n{'color': 'k', 'marker': 'o'}\r\n```\r\n\r\n**Expected outcome**\r\nI would expect both attributes to be actively cycling, i.e.\r\n```\r\n{'color': 'k', 'marker': '.'}\r\n{'color': 'r', 'marker': 'o'}\r\n```\r\n<!--A description of the expected outcome from the code snippet-->\r\n<!--If this used to work in an earlier version of Matplotlib, please note the version it used to work on-->\r\n\r\n**Matplotlib version**\r\n<!--Please specify your platform and versions of the relevant libraries you are using:-->\r\n  * Operating system: Ubuntu 18.04\r\n  * Matplotlib version: 3.0.2\r\n  * Matplotlib backend (`print(matplotlib.get_backend())`): Qt5Agg\r\n  * Python version:  3.6.8 (Anaconda)\r\n  * Jupyter version (if applicable):  n/a\r\n  * Other libraries: \r\n\r\n<!--Please tell us how you installed matplotlib and python e.g., from source, pip, conda-->\r\n<!--If you installed from conda, please specify which channel you used if not the default-->\r\n\r\n(mini)conda installation\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/matplotlib/cycler/issues/35", "repository_url": "https://api.github.com/repos/matplotlib/cycler", "labels_url": "https://api.github.com/repos/matplotlib/cycler/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/matplotlib/cycler/issues/35/comments", "events_url": "https://api.github.com/repos/matplotlib/cycler/issues/35/events", "html_url": "https://github.com/matplotlib/cycler/issues/35", "id": 158325410, "node_id": "MDU6SXNzdWUxNTgzMjU0MTA=", "number": 35, "title": "DOC: Minor typo in `Mutiplication` section", "user": {"login": "afvincent", "id": 17270724, "node_id": "MDQ6VXNlcjE3MjcwNzI0", "avatar_url": "https://avatars1.githubusercontent.com/u/17270724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/afvincent", "html_url": "https://github.com/afvincent", "followers_url": "https://api.github.com/users/afvincent/followers", "following_url": "https://api.github.com/users/afvincent/following{/other_user}", "gists_url": "https://api.github.com/users/afvincent/gists{/gist_id}", "starred_url": "https://api.github.com/users/afvincent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/afvincent/subscriptions", "organizations_url": "https://api.github.com/users/afvincent/orgs", "repos_url": "https://api.github.com/users/afvincent/repos", "events_url": "https://api.github.com/users/afvincent/events{/privacy}", "received_events_url": "https://api.github.com/users/afvincent/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/matplotlib/cycler/milestones/1", "html_url": "https://github.com/matplotlib/cycler/milestone/1", "labels_url": "https://api.github.com/repos/matplotlib/cycler/milestones/1/labels", "id": 1203262, "node_id": "MDk6TWlsZXN0b25lMTIwMzI2Mg==", "number": 1, "title": "v1.0", "description": "Targeted to go with matplotlib 2.0", "creator": {"login": "tacaswell", "id": 199813, "node_id": "MDQ6VXNlcjE5OTgxMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tacaswell", "html_url": "https://github.com/tacaswell", "followers_url": "https://api.github.com/users/tacaswell/followers", "following_url": "https://api.github.com/users/tacaswell/following{/other_user}", "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}", "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions", "organizations_url": "https://api.github.com/users/tacaswell/orgs", "repos_url": "https://api.github.com/users/tacaswell/repos", "events_url": "https://api.github.com/users/tacaswell/events{/privacy}", "received_events_url": "https://api.github.com/users/tacaswell/received_events", "type": "User", "site_admin": false}, "open_issues": 6, "closed_issues": 13, "state": "open", "created_at": "2015-07-11T06:17:05Z", "updated_at": "2018-08-28T11:30:46Z", "due_on": "2016-07-05T07:00:00Z", "closed_at": null}, "comments": 5, "created_at": "2016-06-03T09:20:11Z", "updated_at": "2016-06-03T20:09:53Z", "closed_at": "2016-06-03T15:22:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I didn't find any function called `prod()` in `itertools`, so I assume that `itertools.prod()` in the documentation (section \"Multiplication\") refers in reality to `itertools.product()`. \n\nBesides is \"outer product\" the correct name for this product? In `itertools.product()` docstring, the name \"Cartesian product\" is used and Wikipedia doesn't seem to give the exact same definition for the two products (see [Cartesian](https://en.wikipedia.org/wiki/Cartesian_product) vs [outer](https://en.wikipedia.org/wiki/Outer_product)).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/matplotlib/cycler/issues/31", "repository_url": "https://api.github.com/repos/matplotlib/cycler", "labels_url": "https://api.github.com/repos/matplotlib/cycler/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/matplotlib/cycler/issues/31/comments", "events_url": "https://api.github.com/repos/matplotlib/cycler/issues/31/events", "html_url": "https://github.com/matplotlib/cycler/issues/31", "id": 134378430, "node_id": "MDU6SXNzdWUxMzQzNzg0MzA=", "number": 31, "title": "Include tests in release", "user": {"login": "FRidh", "id": 2129135, "node_id": "MDQ6VXNlcjIxMjkxMzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2129135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FRidh", "html_url": "https://github.com/FRidh", "followers_url": "https://api.github.com/users/FRidh/followers", "following_url": "https://api.github.com/users/FRidh/following{/other_user}", "gists_url": "https://api.github.com/users/FRidh/gists{/gist_id}", "starred_url": "https://api.github.com/users/FRidh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FRidh/subscriptions", "organizations_url": "https://api.github.com/users/FRidh/orgs", "repos_url": "https://api.github.com/users/FRidh/repos", "events_url": "https://api.github.com/users/FRidh/events{/privacy}", "received_events_url": "https://api.github.com/users/FRidh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/matplotlib/cycler/milestones/1", "html_url": "https://github.com/matplotlib/cycler/milestone/1", "labels_url": "https://api.github.com/repos/matplotlib/cycler/milestones/1/labels", "id": 1203262, "node_id": "MDk6TWlsZXN0b25lMTIwMzI2Mg==", "number": 1, "title": "v1.0", "description": "Targeted to go with matplotlib 2.0", "creator": {"login": "tacaswell", "id": 199813, "node_id": "MDQ6VXNlcjE5OTgxMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tacaswell", "html_url": "https://github.com/tacaswell", "followers_url": "https://api.github.com/users/tacaswell/followers", "following_url": "https://api.github.com/users/tacaswell/following{/other_user}", "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}", "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions", "organizations_url": "https://api.github.com/users/tacaswell/orgs", "repos_url": "https://api.github.com/users/tacaswell/repos", "events_url": "https://api.github.com/users/tacaswell/events{/privacy}", "received_events_url": "https://api.github.com/users/tacaswell/received_events", "type": "User", "site_admin": false}, "open_issues": 6, "closed_issues": 13, "state": "open", "created_at": "2015-07-11T06:17:05Z", "updated_at": "2018-08-28T11:30:46Z", "due_on": "2016-07-05T07:00:00Z", "closed_at": null}, "comments": 2, "created_at": "2016-02-17T19:35:17Z", "updated_at": "2016-06-03T20:10:14Z", "closed_at": "2016-02-18T08:52:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please include tests in the archives of releases. This makes it easier for packagers to test whether their packaged version works. Thanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/matplotlib/cycler/issues/24", "repository_url": "https://api.github.com/repos/matplotlib/cycler", "labels_url": "https://api.github.com/repos/matplotlib/cycler/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/matplotlib/cycler/issues/24/comments", "events_url": "https://api.github.com/repos/matplotlib/cycler/issues/24/events", "html_url": "https://github.com/matplotlib/cycler/issues/24", "id": 115922834, "node_id": "MDU6SXNzdWUxMTU5MjI4MzQ=", "number": 24, "title": "Add download/github link to documentation", "user": {"login": "jenshnielsen", "id": 548266, "node_id": "MDQ6VXNlcjU0ODI2Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/548266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jenshnielsen", "html_url": "https://github.com/jenshnielsen", "followers_url": "https://api.github.com/users/jenshnielsen/followers", "following_url": "https://api.github.com/users/jenshnielsen/following{/other_user}", "gists_url": "https://api.github.com/users/jenshnielsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/jenshnielsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jenshnielsen/subscriptions", "organizations_url": "https://api.github.com/users/jenshnielsen/orgs", "repos_url": "https://api.github.com/users/jenshnielsen/repos", "events_url": "https://api.github.com/users/jenshnielsen/events{/privacy}", "received_events_url": "https://api.github.com/users/jenshnielsen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/matplotlib/cycler/milestones/1", "html_url": "https://github.com/matplotlib/cycler/milestone/1", "labels_url": "https://api.github.com/repos/matplotlib/cycler/milestones/1/labels", "id": 1203262, "node_id": "MDk6TWlsZXN0b25lMTIwMzI2Mg==", "number": 1, "title": "v1.0", "description": "Targeted to go with matplotlib 2.0", "creator": {"login": "tacaswell", "id": 199813, "node_id": "MDQ6VXNlcjE5OTgxMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tacaswell", "html_url": "https://github.com/tacaswell", "followers_url": "https://api.github.com/users/tacaswell/followers", "following_url": "https://api.github.com/users/tacaswell/following{/other_user}", "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}", "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions", "organizations_url": "https://api.github.com/users/tacaswell/orgs", "repos_url": "https://api.github.com/users/tacaswell/repos", "events_url": "https://api.github.com/users/tacaswell/events{/privacy}", "received_events_url": "https://api.github.com/users/tacaswell/received_events", "type": "User", "site_admin": false}, "open_issues": 6, "closed_issues": 13, "state": "open", "created_at": "2015-07-11T06:17:05Z", "updated_at": "2018-08-28T11:30:46Z", "due_on": "2016-07-05T07:00:00Z", "closed_at": null}, "comments": 0, "created_at": "2015-11-09T17:14:39Z", "updated_at": "2016-06-03T20:10:24Z", "closed_at": "2016-02-14T20:51:01Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "On http://matplotlib.org/cycler/ there is no obvious link to the source on github or a tar download. This is the first page that I hit when Googling \"matplotlib cycler\" so it would be nice to point to that. Related to https://github.com/matplotlib/matplotlib/issues/5449\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/matplotlib/cycler/issues/21", "repository_url": "https://api.github.com/repos/matplotlib/cycler", "labels_url": "https://api.github.com/repos/matplotlib/cycler/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/matplotlib/cycler/issues/21/comments", "events_url": "https://api.github.com/repos/matplotlib/cycler/issues/21/events", "html_url": "https://github.com/matplotlib/cycler/issues/21", "id": 112547673, "node_id": "MDU6SXNzdWUxMTI1NDc2NzM=", "number": 21, "title": "Please ship tests to pypi", "user": {"login": "jlec", "id": 79732, "node_id": "MDQ6VXNlcjc5NzMy", "avatar_url": "https://avatars0.githubusercontent.com/u/79732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlec", "html_url": "https://github.com/jlec", "followers_url": "https://api.github.com/users/jlec/followers", "following_url": "https://api.github.com/users/jlec/following{/other_user}", "gists_url": "https://api.github.com/users/jlec/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlec/subscriptions", "organizations_url": "https://api.github.com/users/jlec/orgs", "repos_url": "https://api.github.com/users/jlec/repos", "events_url": "https://api.github.com/users/jlec/events{/privacy}", "received_events_url": "https://api.github.com/users/jlec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-21T09:31:17Z", "updated_at": "2016-02-16T10:16:03Z", "closed_at": "2015-10-21T15:39:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "the pypi tarball is not containing the run_tests.py. Downstream distro packager like to run tests on their system to see that everything is working. Please ship the test script in the pypi tarball.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/matplotlib/cycler/issues/12", "repository_url": "https://api.github.com/repos/matplotlib/cycler", "labels_url": "https://api.github.com/repos/matplotlib/cycler/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/matplotlib/cycler/issues/12/comments", "events_url": "https://api.github.com/repos/matplotlib/cycler/issues/12/events", "html_url": "https://github.com/matplotlib/cycler/issues/12", "id": 102197854, "node_id": "MDU6SXNzdWUxMDIxOTc4NTQ=", "number": 12, "title": "ENH: expand call signature of cycler()", "user": {"login": "WeatherGod", "id": 291576, "node_id": "MDQ6VXNlcjI5MTU3Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/291576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WeatherGod", "html_url": "https://github.com/WeatherGod", "followers_url": "https://api.github.com/users/WeatherGod/followers", "following_url": "https://api.github.com/users/WeatherGod/following{/other_user}", "gists_url": "https://api.github.com/users/WeatherGod/gists{/gist_id}", "starred_url": "https://api.github.com/users/WeatherGod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WeatherGod/subscriptions", "organizations_url": "https://api.github.com/users/WeatherGod/orgs", "repos_url": "https://api.github.com/users/WeatherGod/repos", "events_url": "https://api.github.com/users/WeatherGod/events{/privacy}", "received_events_url": "https://api.github.com/users/WeatherGod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-08-20T18:08:13Z", "updated_at": "2015-08-21T16:33:52Z", "closed_at": "2015-08-21T16:33:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In the discussions going on over in https://github.com/matplotlib/matplotlib/pull/4686, some have asked for the `cycler()` call signature to be expanded a bit. Now, this can be a rabbit hole, so I will break out the proposal into stages so that we can decide just how deep we want to go:\n\nCurrent signature (I call this the simple positional):\n`cycler(key, vals)`\n\n1) Allow a single kwarg to be equivalent to the current notation:\n`cycler(k=vals)`\nExample:\n`cycler(color='rgb')` vs.\n`cycler('color', 'rgb')`\n\n2) Allow for multiple kwargs (all assumed to be \"added\" together):\n`cycler(k1=v1[, k2=v2, ...])`\nExample:\n`cycler(color='rgb', lw=[1, 2, 3])` vs.\n`cycler('color', 'rgb') + cycler('lw', [1, 2, 3])`\n\n3) Allow for multiple positional args (all assumed to be \"multiplied\" together):\n`cycler(k1, v1[, k2, v2, ...])`\nExample:\n`cycler('color', 'rgb', 'lw', [1, 2, 3])`\n`cycler('color', 'rgb') * cycler('lw', [1, 2, 3])`\n\nFor 2 & 3, I would completely disallow the mixing of positional and keyword arguments.\nIf we want to avoid having two different operations possible from a single cycler(), we could forgo option 3, and go for the following:\n3alt) Allow for both positional and kwargs, but assume all to be \"added\" together:\n`cycler(k1, v1[, *args][, k3=v3, **kwargs])`\n\nWhichever option (if any) people want, I can put together a PR that implements that. Ideally, I would like to have `cycler.cycler()` to have very similar, if not identical, call signatures to my validating version that I am making in the matplotlib PR referenced above.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/matplotlib/cycler/issues/11", "repository_url": "https://api.github.com/repos/matplotlib/cycler", "labels_url": "https://api.github.com/repos/matplotlib/cycler/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/matplotlib/cycler/issues/11/comments", "events_url": "https://api.github.com/repos/matplotlib/cycler/issues/11/events", "html_url": "https://github.com/matplotlib/cycler/issues/11", "id": 102192201, "node_id": "MDU6SXNzdWUxMDIxOTIyMDE=", "number": 11, "title": "Ability to change the keys?", "user": {"login": "WeatherGod", "id": 291576, "node_id": "MDQ6VXNlcjI5MTU3Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/291576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WeatherGod", "html_url": "https://github.com/WeatherGod", "followers_url": "https://api.github.com/users/WeatherGod/followers", "following_url": "https://api.github.com/users/WeatherGod/following{/other_user}", "gists_url": "https://api.github.com/users/WeatherGod/gists{/gist_id}", "starred_url": "https://api.github.com/users/WeatherGod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WeatherGod/subscriptions", "organizations_url": "https://api.github.com/users/WeatherGod/orgs", "repos_url": "https://api.github.com/users/WeatherGod/repos", "events_url": "https://api.github.com/users/WeatherGod/events{/privacy}", "received_events_url": "https://api.github.com/users/WeatherGod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-08-20T17:43:22Z", "updated_at": "2015-08-30T21:29:59Z", "closed_at": "2015-08-30T21:29:59Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "While I totally agree that we should not be able to change the values associated with each key, what about being able to change out the key names? A use case would be for normalizing property names:\n\n```\n>>> c = cycler('color', 'rgb') + cycler('lw', [1, 2, 3])\n>>> c.key_change('lw', 'linewidth')\ncycler('color', ['r', 'g', 'b']) + cycler('linewidth', [1, 2, 3])\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/matplotlib/cycler/issues/9", "repository_url": "https://api.github.com/repos/matplotlib/cycler", "labels_url": "https://api.github.com/repos/matplotlib/cycler/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/matplotlib/cycler/issues/9/comments", "events_url": "https://api.github.com/repos/matplotlib/cycler/issues/9/events", "html_url": "https://github.com/matplotlib/cycler/issues/9", "id": 101210339, "node_id": "MDU6SXNzdWUxMDEyMTAzMzk=", "number": 9, "title": "test the equality of two cyclers", "user": {"login": "WeatherGod", "id": 291576, "node_id": "MDQ6VXNlcjI5MTU3Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/291576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WeatherGod", "html_url": "https://github.com/WeatherGod", "followers_url": "https://api.github.com/users/WeatherGod/followers", "following_url": "https://api.github.com/users/WeatherGod/following{/other_user}", "gists_url": "https://api.github.com/users/WeatherGod/gists{/gist_id}", "starred_url": "https://api.github.com/users/WeatherGod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WeatherGod/subscriptions", "organizations_url": "https://api.github.com/users/WeatherGod/orgs", "repos_url": "https://api.github.com/users/WeatherGod/repos", "events_url": "https://api.github.com/users/WeatherGod/events{/privacy}", "received_events_url": "https://api.github.com/users/WeatherGod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-08-15T21:13:15Z", "updated_at": "2015-08-16T13:59:17Z", "closed_at": "2015-08-16T13:59:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This would make unit-testing _so_ much easier!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/matplotlib/cycler/issues/6", "repository_url": "https://api.github.com/repos/matplotlib/cycler", "labels_url": "https://api.github.com/repos/matplotlib/cycler/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/matplotlib/cycler/issues/6/comments", "events_url": "https://api.github.com/repos/matplotlib/cycler/issues/6/events", "html_url": "https://github.com/matplotlib/cycler/issues/6", "id": 94513873, "node_id": "MDU6SXNzdWU5NDUxMzg3Mw==", "number": 6, "title": "Ability to update 1 or more parts of a cycler?", "user": {"login": "WeatherGod", "id": 291576, "node_id": "MDQ6VXNlcjI5MTU3Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/291576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WeatherGod", "html_url": "https://github.com/WeatherGod", "followers_url": "https://api.github.com/users/WeatherGod/followers", "following_url": "https://api.github.com/users/WeatherGod/following{/other_user}", "gists_url": "https://api.github.com/users/WeatherGod/gists{/gist_id}", "starred_url": "https://api.github.com/users/WeatherGod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WeatherGod/subscriptions", "organizations_url": "https://api.github.com/users/WeatherGod/orgs", "repos_url": "https://api.github.com/users/WeatherGod/repos", "events_url": "https://api.github.com/users/WeatherGod/events{/privacy}", "received_events_url": "https://api.github.com/users/WeatherGod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-07-11T22:48:42Z", "updated_at": "2015-08-22T21:21:13Z", "closed_at": "2015-08-22T21:21:13Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Don't know how feasible this would be, but I am thinking of a case where there is an existing cycler object (possibly a default cycler), and the user needs to swap out a component of the composed cycler, such as changing the color cycle.\n\nOne possible stumbling block might be if the object is in the middle of being cycled?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/matplotlib/cycler/issues/4", "repository_url": "https://api.github.com/repos/matplotlib/cycler", "labels_url": "https://api.github.com/repos/matplotlib/cycler/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/matplotlib/cycler/issues/4/comments", "events_url": "https://api.github.com/repos/matplotlib/cycler/issues/4/events", "html_url": "https://github.com/matplotlib/cycler/issues/4", "id": 93142249, "node_id": "MDU6SXNzdWU5MzE0MjI0OQ==", "number": 4, "title": "Persistent (or \"memory\", \"label\") cycler", "user": {"login": "mfitzp", "id": 126239, "node_id": "MDQ6VXNlcjEyNjIzOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/126239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mfitzp", "html_url": "https://github.com/mfitzp", "followers_url": "https://api.github.com/users/mfitzp/followers", "following_url": "https://api.github.com/users/mfitzp/following{/other_user}", "gists_url": "https://api.github.com/users/mfitzp/gists{/gist_id}", "starred_url": "https://api.github.com/users/mfitzp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mfitzp/subscriptions", "organizations_url": "https://api.github.com/users/mfitzp/orgs", "repos_url": "https://api.github.com/users/mfitzp/repos", "events_url": "https://api.github.com/users/mfitzp/events{/privacy}", "received_events_url": "https://api.github.com/users/mfitzp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-07-05T20:03:44Z", "updated_at": "2015-09-15T15:27:59Z", "closed_at": "2015-09-15T15:27:59Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When the original proposal for the Cycler was made I put together an implementation of a \"persistent cycler\" that used the same back-end but provided an interface whereby values were provided in exchange for a key (label). The first time a value is requested the next value in the cycler is returned while on subsequent calls the same result will be returned for the same key.\n\nThe use case was for consistent labeling of plots throughout an analysis. When performing initial analysis it's often not important what the styles used are, but it _is_ helpful if they stay the same.\n\nI imagine implementing this as a subclass of Cycler with a `.get()` accessor (similar to a dictionary) or perhaps as a simple class that contains a cycler object within. This might put it out of scope of this project. It would be nice (long term) to be able to pass these cyclers into matplotlib functions and have styles assigned automatically (and in the case of the persistent cycler on the basis of labels).\n\nIf this seems reasonable I can open a couple of PRs with alternate implementations for discussion.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/matplotlib/cycler/issues/2", "repository_url": "https://api.github.com/repos/matplotlib/cycler", "labels_url": "https://api.github.com/repos/matplotlib/cycler/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/matplotlib/cycler/issues/2/comments", "events_url": "https://api.github.com/repos/matplotlib/cycler/issues/2/events", "html_url": "https://github.com/matplotlib/cycler/issues/2", "id": 93044098, "node_id": "MDU6SXNzdWU5MzA0NDA5OA==", "number": 2, "title": "Cycler doesn't cycle", "user": {"login": "OceanWolf", "id": 3758703, "node_id": "MDQ6VXNlcjM3NTg3MDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3758703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OceanWolf", "html_url": "https://github.com/OceanWolf", "followers_url": "https://api.github.com/users/OceanWolf/followers", "following_url": "https://api.github.com/users/OceanWolf/following{/other_user}", "gists_url": "https://api.github.com/users/OceanWolf/gists{/gist_id}", "starred_url": "https://api.github.com/users/OceanWolf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OceanWolf/subscriptions", "organizations_url": "https://api.github.com/users/OceanWolf/orgs", "repos_url": "https://api.github.com/users/OceanWolf/repos", "events_url": "https://api.github.com/users/OceanWolf/events{/privacy}", "received_events_url": "https://api.github.com/users/OceanWolf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-07-04T20:19:49Z", "updated_at": "2015-07-11T14:59:10Z", "closed_at": "2015-07-11T14:59:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "This issue falls mainly along the lines of semantics.  I would expect something called `Cycler` to do the cycling itself, instead it just represents a list, of course we want to create a cycle object from the list, but nothing in \"`Cycler`\" actually promotes this...\n\nPerhaps naming this `CycleHelper` would help, and ooh, just had an idea to combine this with my own cycling experiments... one moment while I make a PR... :smiling_imp:.\n", "performed_via_github_app": null, "score": 1.0}]}