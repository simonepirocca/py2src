{"total_count": 56, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/mpdavis/python-jose/issues/179", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/179/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/179/events", "html_url": "https://github.com/mpdavis/python-jose/issues/179", "id": 666710534, "node_id": "MDU6SXNzdWU2NjY3MTA1MzQ=", "number": 179, "title": "zsh: no matches found: python-jose[cryptography]", "user": {"login": "ghotiv", "id": 7190138, "node_id": "MDQ6VXNlcjcxOTAxMzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7190138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghotiv", "html_url": "https://github.com/ghotiv", "followers_url": "https://api.github.com/users/ghotiv/followers", "following_url": "https://api.github.com/users/ghotiv/following{/other_user}", "gists_url": "https://api.github.com/users/ghotiv/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghotiv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghotiv/subscriptions", "organizations_url": "https://api.github.com/users/ghotiv/orgs", "repos_url": "https://api.github.com/users/ghotiv/repos", "events_url": "https://api.github.com/users/ghotiv/events{/privacy}", "received_events_url": "https://api.github.com/users/ghotiv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1738173230, "node_id": "MDU6TGFiZWwxNzM4MTczMjMw", "url": "https://api.github.com/repos/mpdavis/python-jose/labels/need%20more%20information", "name": "need more information", "color": "ea1026", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-28T02:47:49Z", "updated_at": "2020-07-29T06:43:10Z", "closed_at": "2020-07-28T08:13:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "(py375) ghoti@ghotideMacBook-Pro pay_test % pip install python-jose[cryptography]\r\nzsh: no matches found: python-jose[cryptography]", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/177", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/177/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/177/events", "html_url": "https://github.com/mpdavis/python-jose/issues/177", "id": 662869288, "node_id": "MDU6SXNzdWU2NjI4NjkyODg=", "number": 177, "title": "import error", "user": {"login": "nantha42", "id": 12470524, "node_id": "MDQ6VXNlcjEyNDcwNTI0", "avatar_url": "https://avatars1.githubusercontent.com/u/12470524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nantha42", "html_url": "https://github.com/nantha42", "followers_url": "https://api.github.com/users/nantha42/followers", "following_url": "https://api.github.com/users/nantha42/following{/other_user}", "gists_url": "https://api.github.com/users/nantha42/gists{/gist_id}", "starred_url": "https://api.github.com/users/nantha42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nantha42/subscriptions", "organizations_url": "https://api.github.com/users/nantha42/orgs", "repos_url": "https://api.github.com/users/nantha42/repos", "events_url": "https://api.github.com/users/nantha42/events{/privacy}", "received_events_url": "https://api.github.com/users/nantha42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-21T10:44:50Z", "updated_at": "2020-07-21T10:46:21Z", "closed_at": "2020-07-21T10:46:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using python3 but the print statement is without brackets!\r\n`\r\nTraceback (most recent call last):\r\n  File \"/Users/nantha/Projc/my_projects/intern/extract_log.py\", line 2, in <module>\r\n    import jose\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/jose.py\", line 546\r\n    print decrypt(deserialize_compact(jwt), {'k':key},\r\n                ^\r\nSyntaxError: invalid syntax\r\n`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/176", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/176/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/176/events", "html_url": "https://github.com/mpdavis/python-jose/issues/176", "id": 620194529, "node_id": "MDU6SXNzdWU2MjAxOTQ1Mjk=", "number": 176, "title": "Test test_key_too_short fails ", "user": {"login": "tkdchen", "id": 919706, "node_id": "MDQ6VXNlcjkxOTcwNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/919706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tkdchen", "html_url": "https://github.com/tkdchen", "followers_url": "https://api.github.com/users/tkdchen/followers", "following_url": "https://api.github.com/users/tkdchen/following{/other_user}", "gists_url": "https://api.github.com/users/tkdchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/tkdchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tkdchen/subscriptions", "organizations_url": "https://api.github.com/users/tkdchen/orgs", "repos_url": "https://api.github.com/users/tkdchen/repos", "events_url": "https://api.github.com/users/tkdchen/events{/privacy}", "received_events_url": "https://api.github.com/users/tkdchen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-18T13:06:46Z", "updated_at": "2020-07-30T00:41:13Z", "closed_at": "2020-07-30T00:41:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "When run tests from master branch within testenv py36-base, the expected error `BadDigestError` is not raised.\r\n\r\n```\r\n    @pytest.mark.parametrize(\"Backend,ExceptionType\", _backend_exception_types())\r\n    def test_key_too_short(self, Backend, ExceptionType):\r\n        key = Backend(TOO_SHORT_PRIVATE_KEY, ALGORITHMS.ES512)\r\n        with pytest.raises(ExceptionType):\r\n>           key.sign(b'foo')\r\nE           Failed: DID NOT RAISE <class 'ecdsa.keys.BadDigestError'>\r\n\r\ntests/algorithms/test_EC.py:121: Failed\r\n```\r\n\r\nSteps to reproduce:\r\n\r\n* create a virtual environment\r\n* install tox\r\n* `tox -e py36-base`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/175", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/175/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/175/events", "html_url": "https://github.com/mpdavis/python-jose/issues/175", "id": 607004034, "node_id": "MDU6SXNzdWU2MDcwMDQwMzQ=", "number": 175, "title": "Support for JWT custom claims", "user": {"login": "JohnPaton", "id": 18459252, "node_id": "MDQ6VXNlcjE4NDU5MjUy", "avatar_url": "https://avatars2.githubusercontent.com/u/18459252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnPaton", "html_url": "https://github.com/JohnPaton", "followers_url": "https://api.github.com/users/JohnPaton/followers", "following_url": "https://api.github.com/users/JohnPaton/following{/other_user}", "gists_url": "https://api.github.com/users/JohnPaton/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnPaton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnPaton/subscriptions", "organizations_url": "https://api.github.com/users/JohnPaton/orgs", "repos_url": "https://api.github.com/users/JohnPaton/repos", "events_url": "https://api.github.com/users/JohnPaton/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnPaton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-26T12:45:29Z", "updated_at": "2020-04-26T15:48:17Z", "closed_at": "2020-04-26T15:46:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice for `jwt.decode` to support an additional `custom_claims` dict for verification. \r\n\r\nExamples:\r\n\r\n```pycon\r\n>>> from jose import jwt\r\n\r\n>>> token = jwt.encode({\"custom\": \"test\"}, key=\"secret\")\r\n\r\n>>> jwt.decode(token, key=\"secret\")\r\n{'custom': 'test'}\r\n\r\n>>> jwt.decode(token, key=\"secret\", custom_claims={\"custom\": \"test\"})\r\n{'custom': 'test'}\r\n\r\n>>> jwt.decode(token, key=\"secret\", custom_claims={\"custom\": \"something else\"})\r\nTraceback (most recent call last):\r\n  [ ... ]\r\njose.exceptions.JWTClaimsError: Invalid custom claims\r\n\r\n>>> jwt.decode(token, key=\"secret\", custom_claims={\"other key\": \"value\"})\r\nTraceback (most recent call last):\r\n  [ ... ]\r\njose.exceptions.JWTClaimsError: Invalid custom claims\r\n```\r\n\r\nI would be happy to work on a PR for this if there is interest in the feature.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/172", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/172/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/172/events", "html_url": "https://github.com/mpdavis/python-jose/issues/172", "id": 559073968, "node_id": "MDU6SXNzdWU1NTkwNzM5Njg=", "number": 172, "title": "Cannot execute `token.py` with jose imports", "user": {"login": "vmarkovtsev", "id": 2793551, "node_id": "MDQ6VXNlcjI3OTM1NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2793551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmarkovtsev", "html_url": "https://github.com/vmarkovtsev", "followers_url": "https://api.github.com/users/vmarkovtsev/followers", "following_url": "https://api.github.com/users/vmarkovtsev/following{/other_user}", "gists_url": "https://api.github.com/users/vmarkovtsev/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmarkovtsev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmarkovtsev/subscriptions", "organizations_url": "https://api.github.com/users/vmarkovtsev/orgs", "repos_url": "https://api.github.com/users/vmarkovtsev/repos", "events_url": "https://api.github.com/users/vmarkovtsev/events{/privacy}", "received_events_url": "https://api.github.com/users/vmarkovtsev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-03T13:11:46Z", "updated_at": "2020-02-03T13:14:14Z", "closed_at": "2020-02-03T13:14:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Summary\r\n\r\n`import jose` in a file named `token.py` crashes.\r\n\r\n### Reproduction\r\n\r\nSave this line as `token.py`:\r\n\r\n```python\r\nfrom jose import jwt\r\n```\r\n\r\nThen\r\n\r\n```\r\npython3 token.py\r\n```\r\n\r\nYou should see\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/dist-packages/jose/utils.py\", line 17, in <module>\r\n    from Crypto.Util.number import long_to_bytes\r\nModuleNotFoundError: No module named 'Crypto'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"token.py\", line 1, in <module>\r\n    from jose import jwt\r\n  File \"/usr/local/lib/python3.7/dist-packages/jose/jwt.py\", line 13, in <module>\r\n    from jose import jws\r\n  File \"/usr/local/lib/python3.7/dist-packages/jose/jws.py\", line 11, in <module>\r\n    from jose import jwk\r\n  File \"/usr/local/lib/python3.7/dist-packages/jose/jwk.py\", line 8, in <module>\r\n    from jose.utils import base64url_decode, base64url_encode\r\n  File \"/usr/local/lib/python3.7/dist-packages/jose/utils.py\", line 20, in <module>\r\n    from cryptography.utils import int_to_bytes as _long_to_bytes\r\n  File \"/usr/lib/python3/dist-packages/cryptography/utils.py\", line 9, in <module>\r\n    import inspect\r\n  File \"/usr/lib/python3.7/inspect.py\", line 40, in <module>\r\n    import linecache\r\n  File \"/usr/lib/python3.7/linecache.py\", line 11, in <module>\r\n    import tokenize\r\n  File \"/usr/lib/python3.7/tokenize.py\", line 41, in <module>\r\n    __all__ = token.__all__ + [\"tokenize\", \"detect_encoding\",\r\nAttributeError: module 'token' has no attribute '__all__'\r\nError in sys.excepthook:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3/dist-packages/apport_python_hook.py\", line 62, in apport_excepthook\r\n    import re, traceback\r\n  File \"/usr/lib/python3.7/traceback.py\", line 5, in <module>\r\n    import linecache\r\n  File \"/usr/lib/python3.7/linecache.py\", line 11, in <module>\r\n    import tokenize\r\n  File \"/usr/lib/python3.7/tokenize.py\", line 41, in <module>\r\n    __all__ = token.__all__ + [\"tokenize\", \"detect_encoding\",\r\nAttributeError: module 'token' has no attribute '__all__'\r\n\r\nOriginal exception was:\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/dist-packages/jose/utils.py\", line 17, in <module>\r\n    from Crypto.Util.number import long_to_bytes\r\nModuleNotFoundError: No module named 'Crypto'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"token.py\", line 1, in <module>\r\n    from jose import jwt\r\n  File \"/usr/local/lib/python3.7/dist-packages/jose/jwt.py\", line 13, in <module>\r\n    from jose import jws\r\n  File \"/usr/local/lib/python3.7/dist-packages/jose/jws.py\", line 11, in <module>\r\n    from jose import jwk\r\n  File \"/usr/local/lib/python3.7/dist-packages/jose/jwk.py\", line 8, in <module>\r\n    from jose.utils import base64url_decode, base64url_encode\r\n  File \"/usr/local/lib/python3.7/dist-packages/jose/utils.py\", line 20, in <module>\r\n    from cryptography.utils import int_to_bytes as _long_to_bytes\r\n  File \"/usr/lib/python3/dist-packages/cryptography/utils.py\", line 9, in <module>\r\n    import inspect\r\n  File \"/usr/lib/python3.7/inspect.py\", line 40, in <module>\r\n    import linecache\r\n  File \"/usr/lib/python3.7/linecache.py\", line 11, in <module>\r\n    import tokenize\r\n  File \"/usr/lib/python3.7/tokenize.py\", line 41, in <module>\r\n    __all__ = token.__all__ + [\"tokenize\", \"detect_encoding\",\r\nAttributeError: module 'token' has no attribute '__all__'\r\n```\r\n\r\nI bet that the reason is that `jose` messes with `sys.path` somewhere so that `token.py` precedes the real `token` package and a nasty name collision occurs.\r\n\r\n### System info\r\n\r\n- Python 3.7.5 \r\n- python-jose 3.1.0\r\n- Ubuntu 19.10", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/161", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/161/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/161/events", "html_url": "https://github.com/mpdavis/python-jose/issues/161", "id": 537893582, "node_id": "MDU6SXNzdWU1Mzc4OTM1ODI=", "number": 161, "title": "Cannot run setup.py if setup.py is not in sys.path", "user": {"login": "mrginglymus", "id": 390569, "node_id": "MDQ6VXNlcjM5MDU2OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/390569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrginglymus", "html_url": "https://github.com/mrginglymus", "followers_url": "https://api.github.com/users/mrginglymus/followers", "following_url": "https://api.github.com/users/mrginglymus/following{/other_user}", "gists_url": "https://api.github.com/users/mrginglymus/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrginglymus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrginglymus/subscriptions", "organizations_url": "https://api.github.com/users/mrginglymus/orgs", "repos_url": "https://api.github.com/users/mrginglymus/repos", "events_url": "https://api.github.com/users/mrginglymus/events{/privacy}", "received_events_url": "https://api.github.com/users/mrginglymus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 201996341, "node_id": "MDU6TGFiZWwyMDE5OTYzNDE=", "url": "https://api.github.com/repos/mpdavis/python-jose/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 201996344, "node_id": "MDU6TGFiZWwyMDE5OTYzNDQ=", "url": "https://api.github.com/repos/mpdavis/python-jose/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-12-14T09:55:24Z", "updated_at": "2019-12-19T09:51:17Z", "closed_at": "2019-12-19T09:51:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "`setup.py` can only currently be run if the `jose` can be imported. It is presumably assumed that the source root will be somewhere near the top of `sys.path` but this is not always the case. \r\n\r\nThere are, therefore, two failure modes possible. If `python-jose` is not already installed, `setup.py` cannot be run at all. If `python-jose` _is_ installed, then the version from the installed copy is used to generate the version for `setup.py`.\r\n\r\nSwitching to using `setup.cfg`:\r\n```\r\n[metadata]\r\nversion = attr: jose.__version__\r\n```\r\nallows `setup.py` to be run even if the source root is not on the path.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/158", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/158/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/158/events", "html_url": "https://github.com/mpdavis/python-jose/issues/158", "id": 533613288, "node_id": "MDU6SXNzdWU1MzM2MTMyODg=", "number": 158, "title": "Python 3.8 Deprecation Warning", "user": {"login": "Syntactical01", "id": 46199814, "node_id": "MDQ6VXNlcjQ2MTk5ODE0", "avatar_url": "https://avatars0.githubusercontent.com/u/46199814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Syntactical01", "html_url": "https://github.com/Syntactical01", "followers_url": "https://api.github.com/users/Syntactical01/followers", "following_url": "https://api.github.com/users/Syntactical01/following{/other_user}", "gists_url": "https://api.github.com/users/Syntactical01/gists{/gist_id}", "starred_url": "https://api.github.com/users/Syntactical01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Syntactical01/subscriptions", "organizations_url": "https://api.github.com/users/Syntactical01/orgs", "repos_url": "https://api.github.com/users/Syntactical01/repos", "events_url": "https://api.github.com/users/Syntactical01/events{/privacy}", "received_events_url": "https://api.github.com/users/Syntactical01/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-05T21:37:36Z", "updated_at": "2019-12-06T04:00:27Z", "closed_at": "2019-12-06T04:00:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting a Deprecation warning from pylint with the latest version of `python-jose==3.0.1`:\r\n```\r\nenv/lib/python3.7/site-packages/jose/jws.py:6\r\n  /Users/me/Repos/webapp/env/lib/python3.7/site-packages/jose/jws.py:6: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n    from collections import Mapping, Iterable\r\n```\r\nI am currently using Python 3.7, so I can ignore the warning, but I am hoping to upgrade to Python 3.8 in the future.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/155", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/155/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/155/events", "html_url": "https://github.com/mpdavis/python-jose/issues/155", "id": 507670477, "node_id": "MDU6SXNzdWU1MDc2NzA0Nzc=", "number": 155, "title": "A 3.0.2 release to release the fix to #75", "user": {"login": "techdragon", "id": 2115079, "node_id": "MDQ6VXNlcjIxMTUwNzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2115079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/techdragon", "html_url": "https://github.com/techdragon", "followers_url": "https://api.github.com/users/techdragon/followers", "following_url": "https://api.github.com/users/techdragon/following{/other_user}", "gists_url": "https://api.github.com/users/techdragon/gists{/gist_id}", "starred_url": "https://api.github.com/users/techdragon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/techdragon/subscriptions", "organizations_url": "https://api.github.com/users/techdragon/orgs", "repos_url": "https://api.github.com/users/techdragon/repos", "events_url": "https://api.github.com/users/techdragon/events{/privacy}", "received_events_url": "https://api.github.com/users/techdragon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-16T07:34:29Z", "updated_at": "2019-12-10T21:31:11Z", "closed_at": "2019-12-10T09:43:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "While I'm aware of a desire to finish a larger update to this library ( #145 ), I'd like to voice my need for a smaller release _sooner_... Since this library is often used as a dependency, in particular by libraries such as `python_social_auth`, we really need a release on pypi that includes the changes that fixed #75 which fixes things so that correct standards compliant behaviour no longer causes errors when using things built on this library. ( that is, a release that includes PR #76 ) \r\n\r\nIt's problematic that we can't write downstream libraries, specifying that they require a version of this library that is correctly standards compliant, so a patch release `x.x.+1` that added only this fix would be really handy. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/149", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/149/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/149/events", "html_url": "https://github.com/mpdavis/python-jose/issues/149", "id": 481969589, "node_id": "MDU6SXNzdWU0ODE5Njk1ODk=", "number": 149, "title": "Test failures", "user": {"login": "FRidh", "id": 2129135, "node_id": "MDQ6VXNlcjIxMjkxMzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2129135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FRidh", "html_url": "https://github.com/FRidh", "followers_url": "https://api.github.com/users/FRidh/followers", "following_url": "https://api.github.com/users/FRidh/following{/other_user}", "gists_url": "https://api.github.com/users/FRidh/gists{/gist_id}", "starred_url": "https://api.github.com/users/FRidh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FRidh/subscriptions", "organizations_url": "https://api.github.com/users/FRidh/orgs", "repos_url": "https://api.github.com/users/FRidh/repos", "events_url": "https://api.github.com/users/FRidh/events{/privacy}", "received_events_url": "https://api.github.com/users/FRidh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1738173230, "node_id": "MDU6TGFiZWwxNzM4MTczMjMw", "url": "https://api.github.com/repos/mpdavis/python-jose/labels/need%20more%20information", "name": "need more information", "color": "ea1026", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-18T08:44:16Z", "updated_at": "2019-12-17T09:39:40Z", "closed_at": "2019-12-17T09:39:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.7.4, pytest-5.1.0, py-1.8.0, pluggy-0.12.0\r\nrootdir: /build/source, inifile: setup.cfg, testpaths: tests\r\nplugins: cov-2.6.1\r\ncollected 184 items                                                            \r\n\r\ntests/test_firebase.py ...                                               [  1%]\r\ntests/test_jwk.py .........                                              [  6%]\r\ntests/test_jws.py ......................................                 [ 27%]\r\ntests/test_jwt.py .FF..............................................      [ 53%]\r\ntests/test_utils.py ..                                                   [ 54%]\r\ntests/algorithms/test_EC.py .........................                    [ 68%]\r\ntests/algorithms/test_HMAC.py ...                                        [ 70%]\r\ntests/algorithms/test_RSA.py ........................................... [ 93%]\r\n.......                                                                  [ 97%]\r\ntests/algorithms/test_base.py ..                                         [ 98%]\r\ntests/rfc/test_rfc7520.py ...                                            [100%]\r\n\r\n=================================== FAILURES ===================================\r\n_______________________ TestJWT.test_invalid_claims_json _______________________\r\n\r\nself = <tests.test_jwt.TestJWT object at 0x7ffff5521ad0>\r\n\r\n    def test_invalid_claims_json(self):\r\n        old_jws_verify = jws.verify\r\n        try:\r\n            token = u'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhIjoiYiJ9.jiMyrsmD8AoHWeQgmxZ5yq8z0lXS67_QGs52AzC8Ru8'\r\n    \r\n            def return_invalid_json(token, key, algorithms, verify=True):\r\n                return b'[\"a\", \"b\"}'\r\n    \r\n            jws.verify = return_invalid_json\r\n    \r\n>           with pytest.raises(JWTError, message='Invalid payload string: [\"a\", \"b\"}'):\r\nE           TypeError: Unexpected keyword arguments passed to pytest.raises: message\r\nE           Use context-manager form instead?\r\n\r\ntests/test_jwt.py:65: TypeError\r\n_________________________ TestJWT.test_invalid_claims __________________________\r\n\r\nself = <tests.test_jwt.TestJWT object at 0x7ffff552ed50>\r\n\r\n    def test_invalid_claims(self):\r\n        old_jws_verify = jws.verify\r\n        try:\r\n            token = u'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhIjoiYiJ9.jiMyrsmD8AoHWeQgmxZ5yq8z0lXS67_QGs52AzC8Ru8'\r\n    \r\n            def return_encoded_array(token, key, algorithms, verify=True):\r\n                return b'[\"a\",\"b\"]'\r\n    \r\n            jws.verify = return_encoded_array\r\n    \r\n>           with pytest.raises(JWTError, message='Invalid payload string: must be a json object'):\r\nE           TypeError: Unexpected keyword arguments passed to pytest.raises: message\r\nE           Use context-manager form instead?\r\n\r\ntests/test_jwt.py:80: TypeError\r\n=============================== warnings summary ===============================\r\njose/jwt.py:5\r\n  /build/source/jose/jwt.py:5: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n    from collections import Mapping\r\n\r\njose/jws.py:6\r\n  /build/source/jose/jws.py:6: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n    from collections import Mapping, Iterable\r\n\r\n-- Docs: https://docs.pytest.org/en/latest/warnings.html\r\n\r\n----------- coverage: platform linux, python 3.7.4-final-0 -----------\r\nName                                    Stmts   Miss  Cover   Missing\r\n---------------------------------------------------------------------\r\njose/__init__.py                            8      0   100%\r\njose/backends/__init__.py                  11      7    36%   4-8, 12-13\r\njose/backends/base.py                      13      3    77%   15, 18, 21\r\njose/backends/cryptography_backend.py     193      6    97%   201, 256, 265-266, 296, 308\r\njose/backends/ecdsa_backend.py             75      1    99%   88\r\njose/backends/pycrypto_backend.py         110      6    95%   25, 129-130, 135-136, 152\r\njose/backends/rsa_backend.py              143      4    97%   73, 128, 190, 210\r\njose/constants.py                          20      0   100%\r\njose/exceptions.py                         18      0   100%\r\njose/jwk.py                                82      4    95%   14-15, 19-20\r\njose/jws.py                               119      6    95%   156-157, 186-187, 268-269\r\njose/jwt.py                               154      6    96%   144-145, 148, 435-437\r\njose/utils.py                              57     21    63%   18-35, 124-134\r\n---------------------------------------------------------------------\r\nTOTAL                                    1003     64    94%\r\n\r\n================== 2 failed, 182 passed, 2 warnings in 37.79s ==================\r\nbuilder for '/nix/store/jxcmvbqgqzrq61272ha8hw52ggn3bwjf-python3.7-python-jose-3.0.1.drv' failed with exit code 1\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/148", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/148/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/148/events", "html_url": "https://github.com/mpdavis/python-jose/issues/148", "id": 462169542, "node_id": "MDU6SXNzdWU0NjIxNjk1NDI=", "number": 148, "title": "Allow jwt.decode audience to be an iterable", "user": {"login": "bgrant", "id": 624123, "node_id": "MDQ6VXNlcjYyNDEyMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/624123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bgrant", "html_url": "https://github.com/bgrant", "followers_url": "https://api.github.com/users/bgrant/followers", "following_url": "https://api.github.com/users/bgrant/following{/other_user}", "gists_url": "https://api.github.com/users/bgrant/gists{/gist_id}", "starred_url": "https://api.github.com/users/bgrant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bgrant/subscriptions", "organizations_url": "https://api.github.com/users/bgrant/orgs", "repos_url": "https://api.github.com/users/bgrant/repos", "events_url": "https://api.github.com/users/bgrant/events{/privacy}", "received_events_url": "https://api.github.com/users/bgrant/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 201996343, "node_id": "MDU6TGFiZWwyMDE5OTYzNDM=", "url": "https://api.github.com/repos/mpdavis/python-jose/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 201996344, "node_id": "MDU6TGFiZWwyMDE5OTYzNDQ=", "url": "https://api.github.com/repos/mpdavis/python-jose/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-28T19:04:03Z", "updated_at": "2019-12-22T21:56:08Z", "closed_at": "2019-12-22T21:56:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, `audience` in `jwt.decode` will only accept a `str`:\r\n\r\n```\r\n        audience (str): The intended audience of the token.  If the \"aud\" claim is\r\n            included in the claim set, then the audience must be included and must equal\r\n            the provided claim.\r\n```\r\n\r\nIt would be useful if an iterable could be passed in for `audience`, with the meaning that the \"aud\" claim must be included and match *one of* the values in `audience`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/145", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/145/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/145/events", "html_url": "https://github.com/mpdavis/python-jose/issues/145", "id": 444641734, "node_id": "MDU6SXNzdWU0NDQ2NDE3MzQ=", "number": 145, "title": "What's needed for 3.1.0 release?", "user": {"login": "jmehnle", "id": 286913, "node_id": "MDQ6VXNlcjI4NjkxMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/286913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmehnle", "html_url": "https://github.com/jmehnle", "followers_url": "https://api.github.com/users/jmehnle/followers", "following_url": "https://api.github.com/users/jmehnle/following{/other_user}", "gists_url": "https://api.github.com/users/jmehnle/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmehnle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmehnle/subscriptions", "organizations_url": "https://api.github.com/users/jmehnle/orgs", "repos_url": "https://api.github.com/users/jmehnle/repos", "events_url": "https://api.github.com/users/jmehnle/events{/privacy}", "received_events_url": "https://api.github.com/users/jmehnle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2019-05-15T20:57:10Z", "updated_at": "2019-12-11T13:36:59Z", "closed_at": "2019-12-10T09:43:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "What's needed for the 3.1.0 release to happen? Is there anything I can help with?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/144", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/144/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/144/events", "html_url": "https://github.com/mpdavis/python-jose/issues/144", "id": 444612458, "node_id": "MDU6SXNzdWU0NDQ2MTI0NTg=", "number": 144, "title": "Python Social Auth fails for jwk.construct(key) when missing 'alg'", "user": {"login": "cgthayer", "id": 265677, "node_id": "MDQ6VXNlcjI2NTY3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/265677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgthayer", "html_url": "https://github.com/cgthayer", "followers_url": "https://api.github.com/users/cgthayer/followers", "following_url": "https://api.github.com/users/cgthayer/following{/other_user}", "gists_url": "https://api.github.com/users/cgthayer/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgthayer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgthayer/subscriptions", "organizations_url": "https://api.github.com/users/cgthayer/orgs", "repos_url": "https://api.github.com/users/cgthayer/repos", "events_url": "https://api.github.com/users/cgthayer/events{/privacy}", "received_events_url": "https://api.github.com/users/cgthayer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 201996341, "node_id": "MDU6TGFiZWwyMDE5OTYzNDE=", "url": "https://api.github.com/repos/mpdavis/python-jose/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 201996345, "node_id": "MDU6TGFiZWwyMDE5OTYzNDU=", "url": "https://api.github.com/repos/mpdavis/python-jose/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-15T19:44:06Z", "updated_at": "2020-01-13T21:08:29Z", "closed_at": "2020-01-13T21:08:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm working on an integration with onelogin for SSO. I'm using python-social-auth openid_connect which is throwing this exception:\r\n\r\n```\r\njose.exceptions.JWKError: Unable to find a algorithm for key: {'kty': 'EC', 'kid': '3B2VqQDG7Zere66666666', 'use': 'sig', 'x': 'Bzs6VlmYJUNcON18AZjAtDAsksksksksksksksksksksk', 'y': 'sujDlptuEPFujgcIPa-x-AN2Grmr-Y90-CdCdCDCdCDcD', 'crv': 'P-256'}\r\n```\r\nIt appears that the token I get back doesn't include 'alg'.\r\n\r\nI believe that jose.jwk should attempt to use RS256 in this case if 'alg' is missing from the key, based on https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation in Section \"3.1.3.7.  ID Token Validation\" see line 7 \"The alg value SHOULD be the default of RS256 or the algorithm sent by the Client in the id_token_signed_response_alg parameter during Registration.\"\r\n\r\nThe change would be jwk.py:53\r\n\r\n```\r\n    algorithm = key_data.get('alg', ALGORITHMS.RS256)\r\n```\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/137", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/137/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/137/events", "html_url": "https://github.com/mpdavis/python-jose/issues/137", "id": 432336919, "node_id": "MDU6SXNzdWU0MzIzMzY5MTk=", "number": 137, "title": "jwk construct with hs256 returns 'k' as binary", "user": {"login": "piedrahitapablo", "id": 6783539, "node_id": "MDQ6VXNlcjY3ODM1Mzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6783539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/piedrahitapablo", "html_url": "https://github.com/piedrahitapablo", "followers_url": "https://api.github.com/users/piedrahitapablo/followers", "following_url": "https://api.github.com/users/piedrahitapablo/following{/other_user}", "gists_url": "https://api.github.com/users/piedrahitapablo/gists{/gist_id}", "starred_url": "https://api.github.com/users/piedrahitapablo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/piedrahitapablo/subscriptions", "organizations_url": "https://api.github.com/users/piedrahitapablo/orgs", "repos_url": "https://api.github.com/users/piedrahitapablo/repos", "events_url": "https://api.github.com/users/piedrahitapablo/events{/privacy}", "received_events_url": "https://api.github.com/users/piedrahitapablo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 201996341, "node_id": "MDU6TGFiZWwyMDE5OTYzNDE=", "url": "https://api.github.com/repos/mpdavis/python-jose/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-12T00:32:13Z", "updated_at": "2019-12-19T05:06:22Z", "closed_at": "2019-12-19T05:06:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure if this is expected behavior or a minor bug, but when `jwk.construct` is used and the jwk is converted to a dict using `.to_dict`, the 'k' attribute is returned as a binary string. This is not an issue until the dict is used to decode a JWT and an AttributeError is raised because 'k' does not have a `encode` method ('bytes' object has no attribute 'encode'). To reproduce:\r\n\r\n```\r\nfrom jose import jwk, jwt\r\n\r\nuser_jwt = jwt.encode({'username': 'user'}, 'secret')\r\n\r\njwk_obj = jwk.construct('secret', 'HS256')\r\njwk_dict = jwk_obj.to_dict()\r\n\r\n# to avoid the exception:\r\n# jwk_dict['k'] = jwk_dict['k'].decode('utf-8')\r\n\r\nclaims = jwt.decode(user_jwt, jwk_dict)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/133", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/133/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/133/events", "html_url": "https://github.com/mpdavis/python-jose/issues/133", "id": 430747664, "node_id": "MDU6SXNzdWU0MzA3NDc2NjQ=", "number": 133, "title": "Cannot use Dict[kid: str, cert: bytes] as jwt.decode key arg. No support for PEM certs when decoding JWTs.", "user": {"login": "crunk1", "id": 1885442, "node_id": "MDQ6VXNlcjE4ODU0NDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1885442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crunk1", "html_url": "https://github.com/crunk1", "followers_url": "https://api.github.com/users/crunk1/followers", "following_url": "https://api.github.com/users/crunk1/following{/other_user}", "gists_url": "https://api.github.com/users/crunk1/gists{/gist_id}", "starred_url": "https://api.github.com/users/crunk1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crunk1/subscriptions", "organizations_url": "https://api.github.com/users/crunk1/orgs", "repos_url": "https://api.github.com/users/crunk1/repos", "events_url": "https://api.github.com/users/crunk1/events{/privacy}", "received_events_url": "https://api.github.com/users/crunk1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-09T03:19:39Z", "updated_at": "2019-04-09T19:27:33Z", "closed_at": "2019-04-09T19:27:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to decode firebase auth tokens. Google's public RSA256 certs are available here: https://www.googleapis.com/identitytoolkit/v3/relyingparty/publicKeys.\r\n\r\nPassing in the dictionary for Google's certs in as jwt.decode's key arg results in the following error:\r\n\r\n```\r\n  File \"/home/scott/work/api/api_service/rest/auth_func.py\", line 14, in basic\r\n    token_info = jose.jwt.decode(t, _GOOGLE_KEYS)\r\n  File \"/home/scott/work/api/venv/lib/python3.7/site-packages/jose/jwt.py\", line 135, in decode\r\n    payload = jws.verify(token, key, algorithms, verify=verify_signature)\r\n  File \"/home/scott/work/api/venv/lib/python3.7/site-packages/jose/jws.py\", line 77, in verify\r\n    _verify_signature(signing_input, header, signature, key, algorithms)\r\n  File \"/home/scott/work/api/venv/lib/python3.7/site-packages/jose/jws.py\", line 264, in _verify_signature\r\n    if not _sig_matches_keys(keys, signing_input, signature, alg):\r\n  File \"/home/scott/work/api/venv/lib/python3.7/site-packages/jose/jws.py\", line 212, in _sig_matches_keys\r\n    key = jwk.construct(key, alg)\r\n  File \"/home/scott/work/api/venv/lib/python3.7/site-packages/jose/jwk.py\", line 61, in construct\r\n    return key_class(key_data, algorithm)\r\n  File \"/home/scott/work/api/venv/lib/python3.7/site-packages/jose/backends/rsa_backend.py\", line 131, in __init__\r\n    raise JWKError(e)\r\njose.exceptions.JWKError: No PEM start marker \"b'-----BEGIN PRIVATE KEY-----'\" found\r\n```\r\n\r\nOr am I doing something wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/127", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/127/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/127/events", "html_url": "https://github.com/mpdavis/python-jose/issues/127", "id": 420270889, "node_id": "MDU6SXNzdWU0MjAyNzA4ODk=", "number": 127, "title": "JWK can not be dumped to JSON", "user": {"login": "galak-fyyar", "id": 357018, "node_id": "MDQ6VXNlcjM1NzAxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/357018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/galak-fyyar", "html_url": "https://github.com/galak-fyyar", "followers_url": "https://api.github.com/users/galak-fyyar/followers", "following_url": "https://api.github.com/users/galak-fyyar/following{/other_user}", "gists_url": "https://api.github.com/users/galak-fyyar/gists{/gist_id}", "starred_url": "https://api.github.com/users/galak-fyyar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/galak-fyyar/subscriptions", "organizations_url": "https://api.github.com/users/galak-fyyar/orgs", "repos_url": "https://api.github.com/users/galak-fyyar/repos", "events_url": "https://api.github.com/users/galak-fyyar/events{/privacy}", "received_events_url": "https://api.github.com/users/galak-fyyar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 201996341, "node_id": "MDU6TGFiZWwyMDE5OTYzNDE=", "url": "https://api.github.com/repos/mpdavis/python-jose/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-13T01:03:05Z", "updated_at": "2019-12-19T05:06:22Z", "closed_at": "2019-12-19T05:06:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "JOSE has a functionality that could be helpful for `.well-known/jwks.json` generation \u2014 ability to convert PEMs to dictionary compatible with JWK specification. However, produced dictionary utilizes `bytes`, instead of `str` in Python 3, which crashes `json.dumps`.\r\n\r\nFor example:\r\n```python3\r\nimport json\r\nfrom jose import jwk\r\n\r\n\r\nkey_pem = \"\"\"-----BEGIN PUBLIC KEY-----\r\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEU7X2p6GjDeHWgvDkWZHcjKLXdNwM\r\nua9kolwyy3nv7k3xiRgX/jfX1QbXaQuvqr40PhoWjtJR2C9uTvyP6AMHkw==\r\n-----END PUBLIC KEY-----\"\"\"\r\nkey = jwk.construct(key_pem, algorithm=\"ES256\").to_dict()\r\njson.dumps({\"keys\": [key]})\r\n```\r\n\r\nThis will crash with `TypeError: Object of type bytes is not JSON serializable` due to all base64 encoded values being stored as `bytes` not `str`.\r\n\r\nThe solution to circumvent the issue is:\r\n```python3\r\nimport json\r\nfrom jose import jwk\r\n\r\n\r\nclass ByteEncoder(json.JSONEncoder):\r\n    #pylint: disable=method-hidden\r\n    def default(self, x):\r\n        if isinstance(x, bytes):\r\n            return str(x, \"UTF-8\")\r\n        else:\r\n            super().default(x)\r\n\r\n\r\nkey_pem = \"\"\"-----BEGIN PUBLIC KEY-----\r\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEU7X2p6GjDeHWgvDkWZHcjKLXdNwM\r\nua9kolwyy3nv7k3xiRgX/jfX1QbXaQuvqr40PhoWjtJR2C9uTvyP6AMHkw==\r\n-----END PUBLIC KEY-----\"\"\"\r\nkey = jwk.construct(key_pem, algorithm=\"ES256\").to_dict()\r\njson.dumps({\"keys\": [key]}, cls=ByteEncoder)\r\n```\r\n\r\nHowever, is there a better way?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/125", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/125/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/125/events", "html_url": "https://github.com/mpdavis/python-jose/issues/125", "id": 404828037, "node_id": "MDU6SXNzdWU0MDQ4MjgwMzc=", "number": 125, "title": "Issue with retrieving headers in Python 3.7", "user": {"login": "mbklaene", "id": 13907063, "node_id": "MDQ6VXNlcjEzOTA3MDYz", "avatar_url": "https://avatars0.githubusercontent.com/u/13907063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbklaene", "html_url": "https://github.com/mbklaene", "followers_url": "https://api.github.com/users/mbklaene/followers", "following_url": "https://api.github.com/users/mbklaene/following{/other_user}", "gists_url": "https://api.github.com/users/mbklaene/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbklaene/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbklaene/subscriptions", "organizations_url": "https://api.github.com/users/mbklaene/orgs", "repos_url": "https://api.github.com/users/mbklaene/repos", "events_url": "https://api.github.com/users/mbklaene/events{/privacy}", "received_events_url": "https://api.github.com/users/mbklaene/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-30T15:35:23Z", "updated_at": "2019-02-06T15:34:26Z", "closed_at": "2019-02-06T15:34:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to follow an example from awslabs for a Lambda authorizer. However, I'm using Python 3.7\r\n\r\nI'm guessing there's an encoding issue happening. This line throws this error. On jwt.io, pasting the token shows me the correct headers.\r\n\r\nheaders = jwt.get_unverified_headers(token)\r\n\r\n{\r\n  \"errorType\": \"JWTError\",\r\n  \"errorMessage\": \"Error decoding token headers.\",\r\n  \"stackTrace\": [\r\n    \"  File \\\"/var/task/index.py\\\", line 45, in handler\\n    claims = token_verifier(keys, token)\\n\",\r\n    \"  File \\\"/var/task/index.py\\\", line 79, in token_verifier\\n    headers = jwt.get_unverified_headers(token)\\n\",\r\n    \"  File \\\"/var/task/jose/jwt.py\\\", line 193, in get_unverified_headers\\n    return get_unverified_header(token)\\n\",\r\n    \"  File \\\"/var/task/jose/jwt.py\\\", line 173, in get_unverified_header\\n    raise JWTError('Error decoding token headers.')\\n\"\r\n  ]\r\n}\r\n\r\npython3 --version:\r\nPython 3.7.2\r\n\r\n\r\npip freeze gives me:\r\nconfigparser==3.7.1\r\necdsa==0.13\r\nfuture==0.17.1\r\njose==1.0.0\r\npyasn1==0.4.5\r\npython-jose==3.0.0\r\nrsa==4.0\r\nsix==1.12.0\r\n\r\nSorry. I doubt this is a library issue but my inability to deal with this appropriately in python3. But can you provide any insight?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/123", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/123/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/123/events", "html_url": "https://github.com/mpdavis/python-jose/issues/123", "id": 398831001, "node_id": "MDU6SXNzdWUzOTg4MzEwMDE=", "number": 123, "title": "Backend import priority", "user": {"login": "RazerM", "id": 1337586, "node_id": "MDQ6VXNlcjEzMzc1ODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1337586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RazerM", "html_url": "https://github.com/RazerM", "followers_url": "https://api.github.com/users/RazerM/followers", "following_url": "https://api.github.com/users/RazerM/following{/other_user}", "gists_url": "https://api.github.com/users/RazerM/gists{/gist_id}", "starred_url": "https://api.github.com/users/RazerM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RazerM/subscriptions", "organizations_url": "https://api.github.com/users/RazerM/orgs", "repos_url": "https://api.github.com/users/RazerM/repos", "events_url": "https://api.github.com/users/RazerM/events{/privacy}", "received_events_url": "https://api.github.com/users/RazerM/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-14T10:39:55Z", "updated_at": "2019-04-02T13:13:59Z", "closed_at": "2019-04-02T13:13:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/mpdavis/python-jose/blob/cc710e04a1c7096c3d37efffaf2877f88beebda5/jose/backends/__init__.py#L2-L8\r\n\r\n`pycrypto` and `cryptography` should swap places here for the case where both are installed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/119", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/119/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/119/events", "html_url": "https://github.com/mpdavis/python-jose/issues/119", "id": 394240765, "node_id": "MDU6SXNzdWUzOTQyNDA3NjU=", "number": 119, "title": "Invalid PKCS8 encoding for private keys in python-rsa backend", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-26T21:02:09Z", "updated_at": "2019-04-08T20:05:08Z", "closed_at": "2019-04-08T20:05:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the process of investigating the `pycrypto/dome` dependency on the `python-rsa` backend, I discovered that the PKCS8 encoding being performed for RSA private keys by the `python-rsa` backend is incompatible with the other backends.\r\n\r\nDigging deeper, I found that the magic prefix[1] being added to the PKCS1 encoded private key[2] is both invalid per the PKCS8 spec[3] and incorrectly sets a static message size.\r\n\r\nThis results in the serialized keys being unreadable by any other system, and also in the `python-rsa` backend being unable to deserialize any keys written by a correct system.\r\n\r\nCurrent magic prefix:\r\n\r\n[Full key from tests, header tweaked to have a valid length](https://lapo.it/asn1js/#MIIJQQIBADANBgkqhkiG9w0BAQEFADCCCSsCAQACggIBALUin0niNH7pESF9_AB5SgdWD6V_D1GDdiXb3zPl4zZi31NTO-DdFZncyF_ebJ3kBjvZAtsTCBPgCJbedmH_yoAWYIAJUvWNFcfA7Ei9h7zo4LgHV4q972C7wMsh4p_5lIrCTqnHBSgoRyo55NLl8v9_Pta9e_3GE6e-m6yqVNSOJDNtDP_3W7ywVo388sPXobn6--GlcK_tMSX7AVa9qGkBcMP1xxs-vUO8hyug28WDuMOKtrCH3AuKU_F0zx6OCWdjO99xGvGux8bWUuet_5oYUWS1OWsp0KcGlb9lPvgi-hLxrfE5TWTpHkb_MM_kbfAe9I86EaVSt-q0fqRypV4TBk-tfb_Ni53k3bKgNuVoti3f3NJ4rrpduAOvmmo9rvUlm8QPS5lbRZ7bzW0Wh1xNUi6Sz6CKfLqaRhdNjc9r95XfIAp001n6vwUPNEMvHtHKEUQARAma4yDMxxIOjJaEQ8uJ2tKUUL-tVaIKkSg1Nq9_1XsxT0A293ImLGY1ga9x6TTpFI067y5hcjhPUOUf6kBpnOgWLX5Oa5-4iH15ZCQGR14QcvhJQbogTPmEpBTO3R_drEiKGdOVeDD9PV3Kace5HcLCcu9krrLfR53fQe1d-WJ1Relu_dZVR53p4QiTs4kZpB-MSy2z5Gkk9irNyBx-7VZbTOjbEZN4zXVTAgMBAAECggIBAK8ftCV4oAx7RWa-KWBD48DIAgSdna_Pi_D6bQf-IPi6CvTCqkezOGkzvj6CCz1z8lr2av5nng2pMmS63HXPGndQKyhe22gwaXhhG5EQPSX1eR4zav3muIMrwzAhqLvGT0kAp5EZq_CxUGyQ4JzOWWuQGK8BL9mhIeuyK0x6ud1vN6zIqCLpgjYhvu00O3oBBomLEO-ORi6xAi2YSikU4Lf0_pNXEpNSyyWsJnuV4CVMPtw_RnXSRHqb2KC_sGf4JztgA8j5z3UO6HNjT3BTF6ZiEH9vfv4OxX5WrX0IZCL_ngumwedQ4XTItc8qdoTocyoOo5--IsVV_h7bNv3DIgD7tDWlplPZ_IOx5l1nOPrkjv37LBoyNwy2CnecZ4a6uGt2TuaCS3jDvVO9fmJHLYNtz0x8DQBq7D2HYxnAZyRHbW12t9WoCOTwBuq4BlGN4kqFqhy4AU8a19OE1lby0IvMG8YewRBdMmrDnmSsXRNiFmIO-cxrI5bsh5Tp6UWuZUn-imerYYfXnMxR2LUuA72AXGfYWVv4PO4ntvEpARccZdG62LfbijWCb7mo1RvJE_NAAu1s4Nqu1pp6MMNyTSVGzbYbOXaislEpTBTCAf7znjxRy6wOqg3wJ7EB4FG_Vh4VK2LB9tFyqakdjo5llNOW1eKUjFvycBt-6PqcdcihAoIBAQDZ8MdHe5LBDLyY3jeaZQ8t3jC4nwSPuki_6OU1w6BTOqycRftFD-9LqLmCatnSPgwkgOnPxLJ-1gDoq2Ne-2nSnAVfG4sALZih5xZwrP5MAGavJTL0D7TTyf76tp-NJDuPIfH8W3hnJsgKhT2eGCksazwOHHWxyLhUrfVsmlHFRZs3UxR1ZUT-9BF3Zlx7fOG8ljQeAh3qvM5qzcTzQIuuZxJFJLO4gUDLbr8ldvml4wzkwTAneuiISIdomatTu5F1MIIdTh_YQmu6K4h8gHYJCnSglqHJmzzxDThE4I62gPcESF8DmEw29V-YTL4tZgh6PMYzI7uLMw9N8SVYu1q7AoIBAQDUxG5QpMRMoSamjGRd1N3X9mK_2bR6rK06-JcAfzDipM5rkq0TsYXhJCiLMW4lfgMU77T0dRUK5am4UyUcMvqcOCjyez-H6tkf2Aar10jQQmpk7epdl3V6pwJNwPvnDhGdpVPbm34HXjdiIfK4HZ9S1njkowlnxMZpKFOtf13usQDHlykEpRykp1_b6MbhNsSDR3lOmQCstZBpqybRIlpyPG_AuLPH08g7VydS2rMrNIhztk89o1IX-CCcG_Oy5OyM3tjKyPqD81Q15ZpG45AeLWMqIkU4_K5PKcAVvx1b9NNqYzi02uJM9ZEN5bGf9wLOM3zYu5lhIWnZhLACH2JJAoIBAQDTt_a_2Ko-ZFMq5mV51ccjNgB6ufBCeCOIW4Wf70Vm1U8uGUX6V3qOM4DT0117ws8k_x8kud71HIyRez3z3aV19h-5vxYPvDvUvJuuJkB8ML-QUkDnnAJ85HSRtqvU_2fkqoNcNrgG7UPUBJBRbwNApYQX6UnkxitcCAqt0FSzoeUhn9H2IcUfMJdvOL-LL0xUWk6TAFdz3KtiUjeMYB3R9UtoZDk7ekUp25JRoPzxTFsQNyTClcIj8uGomfA4TbUG9XLRaT3CZvQkTXowCNOiAMg_4VWWdvqC6ebJ8qRxY2OUg4HaCi-wDDsrxxHRJJgDt9qLf6EHnzi07Rjs1EVVAoIBAQC0seYmIuh7U9kpVM3gSmnlgWA4IsH99SxhisFjMKHpuaF9BmJq-TcED9tG60HqIWyomTMK8WxfhtButF4t5rWjeqZ72GQKIE8pliOESR-TjvQgp1WFCp5A_hkcw6qrfe1D_yaKuTF9PGy4sLAb4Txv86lUM4pHUHxYzmDSVfsGPdi1qRCy2y7KP0NP1g8hMYwPGeJR9-r0wnXU5__dWNmLbvxRpgs4yAmjK88_tHC5XrIL42bEqDGOHbJEIhEDexvSP2fKQIlRCpQX-djeH2FD37P6EoTLcvzuSjzRuy9J61CpZ36_Sa0rQtpf_RSvD-6YBG4g-qG2NdRZYTDBfLnRAoIBAQCCobzhbYqQ9Y6gzqYzqEfbCv5UUeW1VVkH2pjAzdQMJoyW1R0vIYbWFDP-LIdqddj-kYKDvHzg39bxHFhYd8cTWRNaTwj2iAg_YuVPjUbz89rwvdNB3K2i0a1BWkc8IajjpJ2CUgaxs1vgsd2EnmjgoJysiPAeYMOAtBtIi9XUrM9m0dTuBjTlX090eo6GRFwExaPynNi9GALwKQTVGL2NJG4yfyX0zudOtErFn7X-IsN464Up_UcE02Hav5BKxhVrwxiZ9jIroTHtqJzX1cyBkZnVMR8ItbpZLKQJ_35mO39IWabJA8HB8mZmymbpPjVPxSfCAHJr5Pcu5tuZ0knP)\r\n\r\n```\r\n30  # sequence\r\n8204BD  # DER-encoded sequence contents length of 1213 bytes -- INCORRECT STATIC LENGTH\r\n  020100  # integer: 0 -- Version\r\n  300D  # sequence containing 13 bytes -- PrivateKeyAlgorithmIdentifier\r\n    06092A864886F70D010101  # OID -- rsaEncryption\r\n    0500  # NULL -- parameters\r\n  <PKCS1 key added>\r\n```\r\n\r\nPrefix should be:\r\n\r\n[Full key from tests](https://lapo.it/asn1js/#MIIJRQIBADANBgkqhkiG9w0BAQEFAASCCS8wggkrAgEAAoICAQC1Ip9J4jR-6REhffwAeUoHVg-lfw9Rg3Yl298z5eM2Yt9TUzvg3RWZ3Mhf3myd5AY72QLbEwgT4AiW3nZh_8qAFmCACVL1jRXHwOxIvYe86OC4B1eKve9gu8DLIeKf-ZSKwk6pxwUoKEcqOeTS5fL_fz7WvXv9xhOnvpusqlTUjiQzbQz_91u8sFaN_PLD16G5-vvhpXCv7TEl-wFWvahpAXDD9ccbPr1DvIcroNvFg7jDirawh9wLilPxdM8ejglnYzvfcRrxrsfG1lLnrf-aGFFktTlrKdCnBpW_ZT74IvoS8a3xOU1k6R5G_zDP5G3wHvSPOhGlUrfqtH6kcqVeEwZPrX2_zYud5N2yoDblaLYt39zSeK66XbgDr5pqPa71JZvED0uZW0We281tFodcTVIuks-giny6mkYXTY3Pa_eV3yAKdNNZ-r8FDzRDLx7RyhFEAEQJmuMgzMcSDoyWhEPLidrSlFC_rVWiCpEoNTavf9V7MU9ANvdyJixmNYGvcek06RSNOu8uYXI4T1DlH-pAaZzoFi1-TmufuIh9eWQkBkdeEHL4SUG6IEz5hKQUzt0f3axIihnTlXgw_T1dymnHuR3CwnLvZK6y30ed30HtXflidUXpbv3WVUed6eEIk7OJGaQfjEsts-RpJPYqzcgcfu1WW0zo2xGTeM11UwIDAQABAoICAQCvH7QleKAMe0VmvilgQ-PAyAIEnZ2vz4vw-m0H_iD4ugr0wqpHszhpM74-ggs9c_Ja9mr-Z54NqTJkutx1zxp3UCsoXttoMGl4YRuRED0l9XkeM2r95riDK8MwIai7xk9JAKeRGavwsVBskOCczllrkBivAS_ZoSHrsitMerndbzesyKgi6YI2Ib7tNDt6AQaJixDvjkYusQItmEopFOC39P6TVxKTUsslrCZ7leAlTD7cP0Z10kR6m9igv7Bn-Cc7YAPI-c91DuhzY09wUxemYhB_b37-DsV-Vq19CGQi_54LpsHnUOF0yLXPKnaE6HMqDqOfviLFVf4e2zb9wyIA-7Q1paZT2fyDseZdZzj65I79-ywaMjcMtgp3nGeGurhrdk7mgkt4w71TvX5iRy2Dbc9MfA0Aauw9h2MZwGckR21tdrfVqAjk8AbquAZRjeJKhaocuAFPGtfThNZW8tCLzBvGHsEQXTJqw55krF0TYhZiDvnMayOW7IeU6elFrmVJ_opnq2GH15zMUdi1LgO9gFxn2Flb-DzuJ7bxKQEXHGXRuti324o1gm-5qNUbyRPzQALtbODartaaejDDck0lRs22Gzl2orJRKUwUwgH-8548UcusDqoN8CexAeBRv1YeFStiwfbRcqmpHY6OZZTTltXilIxb8nAbfuj6nHXIoQKCAQEA2fDHR3uSwQy8mN43mmUPLd4wuJ8Ej7pIv-jlNcOgUzqsnEX7RQ_vS6i5gmrZ0j4MJIDpz8SyftYA6KtjXvtp0pwFXxuLAC2YoecWcKz-TABmryUy9A-008n--rafjSQ7jyHx_Ft4ZybICoU9nhgpLGs8Dhx1sci4VK31bJpRxUWbN1MUdWVE_vQRd2Zce3zhvJY0HgId6rzOas3E80CLrmcSRSSzuIFAy26_JXb5peMM5MEwJ3roiEiHaJmrU7uRdTCCHU4f2EJruiuIfIB2CQp0oJahyZs88Q04ROCOtoD3BEhfA5hMNvVfmEy-LWYIejzGMyO7izMPTfElWLtauwKCAQEA1MRuUKTETKEmpoxkXdTd1_Ziv9m0eqytOviXAH8w4qTOa5KtE7GF4SQoizFuJX4DFO-09HUVCuWpuFMlHDL6nDgo8ns_h-rZH9gGq9dI0EJqZO3qXZd1eqcCTcD75w4RnaVT25t-B143YiHyuB2fUtZ45KMJZ8TGaShTrX9d7rEAx5cpBKUcpKdf2-jG4TbEg0d5TpkArLWQaasm0SJacjxvwLizx9PIO1cnUtqzKzSIc7ZPPaNSF_ggnBvzsuTsjN7Yysj6g_NUNeWaRuOQHi1jKiJFOPyuTynAFb8dW_TTamM4tNriTPWRDeWxn_cCzjN82LuZYSFp2YSwAh9iSQKCAQEA07f2v9iqPmRTKuZledXHIzYAernwQngjiFuFn-9FZtVPLhlF-ld6jjOA09Nde8LPJP8fJLne9RyMkXs9892ldfYfub8WD7w71LybriZAfDC_kFJA55wCfOR0kbar1P9n5KqDXDa4Bu1D1ASQUW8DQKWEF-lJ5MYrXAgKrdBUs6HlIZ_R9iHFHzCXbzi_iy9MVFpOkwBXc9yrYlI3jGAd0fVLaGQ5O3pFKduSUaD88UxbEDckwpXCI_LhqJnwOE21BvVy0Wk9wmb0JE16MAjTogDIP-FVlnb6gunmyfKkcWNjlIOB2govsAw7K8cR0SSYA7fai3-hB584tO0Y7NRFVQKCAQEAtLHmJiLoe1PZKVTN4Epp5YFgOCLB_fUsYYrBYzCh6bmhfQZiavk3BA_bRutB6iFsqJkzCvFsX4bQbrReLea1o3qme9hkCiBPKZYjhEkfk470IKdVhQqeQP4ZHMOqq33tQ_8mirkxfTxsuLCwG-E8b_OpVDOKR1B8WM5g0lX7Bj3YtakQstsuyj9DT9YPITGMDxniUffq9MJ11Of_3VjZi278UaYLOMgJoyvPP7RwuV6yC-NmxKgxjh2yRCIRA3sb0j9nykCJUQqUF_nY3h9hQ9-z-hKEy3L87ko80bsvSetQqWd-v0mtK0LaX_0Urw_umARuIPqhtjXUWWEwwXy50QKCAQEAgqG84W2KkPWOoM6mM6hH2wr-VFHltVVZB9qYwM3UDCaMltUdLyGG1hQz_iyHanXY_pGCg7x84N_W8RxYWHfHE1kTWk8I9ogIP2LlT41G8_Pa8L3TQdytotGtQVpHPCGo46SdglIGsbNb4LHdhJ5o4KCcrIjwHmDDgLQbSIvV1KzPZtHU7gY05V9PdHqOhkRcBMWj8pzYvRgC8CkE1Ri9jSRuMn8l9M7nTrRKxZ-1_iLDeOuFKf1HBNNh2r-QSsYVa8MYmfYyK6Ex7aic19XMgZGZ1TEfCLW6WSykCf9-Zjt_SFmmyQPBwfJmZspm6T41T8UnwgBya-T3LubbmdJJzw)\r\n\r\n```\r\n30  # sequence\r\n820945  # DER-encoded sequence contents length of 2373 bytes -- LENGTH MUST BE SET PER KEY\r\n  02 01 00  # integer: 0 -- Version\r\n  30  # sequence\r\n  0D  # DER-encoded sequence contents length of 13 bytes -- PrivateKeyAlgorithmIdentifier\r\n    06092A864886F70D010101  # OID -- rsaEncryption\r\n    0500  # NULL -- parameters\r\n  04 # Octet String\r\n  82092F  # DER-encoded octet string length of 2351 bytes -- LENGTH MUST BE SET PER KEY\r\n    <PKCS1 key added>\r\n```\r\n\r\n[1] https://github.com/mpdavis/python-jose/blob/master/jose/backends/rsa_backend.py#L15\r\n[2] https://github.com/mpdavis/python-jose/blob/master/jose/backends/rsa_backend.py#L186\r\n[3] https://tools.ietf.org/html/rfc5208#page-5", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/114", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/114/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/114/events", "html_url": "https://github.com/mpdavis/python-jose/issues/114", "id": 393946128, "node_id": "MDU6SXNzdWUzOTM5NDYxMjg=", "number": 114, "title": "Tracking changes required for full crypto backend independence", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-12-25T01:54:07Z", "updated_at": "2019-04-08T20:04:57Z", "closed_at": "2019-04-08T20:04:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As discussed in #108 and #109, the various cryptographic backends are not all independently operable. This tracking issue will enumerate the changes that need to be made and track the PRs that fix them.\r\n\r\nTags will use the names for dependency grouping as defined in the extras installs, with \"base\" used to define the `python-rsa`/`python-ecdsa` backend.\r\n\r\n## Known Issues\r\n\r\n### Test failures\r\n\r\n#### cryptography\r\n\r\n- [x] `TestECAlgorithm::test_verify` #117\r\n\r\n#### base\r\n\r\n- [x] `test_firebase.py::TestFirebase::test_individual_cert` #118\r\n- [x] `test_firebase.py::TestFirebase::test_certs_dict` #118\r\n- [x] `test_firebase.py::TestFirebase::test_certs_string` #118\r\n\r\n#### pycrypto\r\n\r\npassing\r\n\r\n#### pycryptodome\r\n\r\npassing\r\n\r\n#### compatibility (all backends installed concurrently)\r\n\r\n- [x] `algorithms/test_EC.py::TestECAlgorithm::test_verify` #117\r\n- [x] `algorithms/test_RSA.py::test_cryptography_RSA_key_instance` #116\r\n\r\n### Cross-dependencies\r\n\r\n#### cryptography\r\n\r\n`CryptographyECKey` depends on `ecdsa.utils` encoding functions.\r\n\r\n- [x] `ecdsa.SigningKey` and `ecdsa.VerifyingKey` #117\r\n- [x] `sigdecode_string` #117\r\n- [x] `sigencode_string` #117\r\n- [x] `sigdecode_der` #117\r\n- [x] `sigencode_der` #117\r\n\r\n#### pycrypto/dome\r\n\r\n- [x] `pycrypto_backend.RSAKey` depends on `rsa_backend.pem_to_spki`. #121 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/112", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/112/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/112/events", "html_url": "https://github.com/mpdavis/python-jose/issues/112", "id": 384184552, "node_id": "MDU6SXNzdWUzODQxODQ1NTI=", "number": 112, "title": "install_requires 'future' even in a python3 environment", "user": {"login": "lestephane", "id": 5460884, "node_id": "MDQ6VXNlcjU0NjA4ODQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5460884?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lestephane", "html_url": "https://github.com/lestephane", "followers_url": "https://api.github.com/users/lestephane/followers", "following_url": "https://api.github.com/users/lestephane/following{/other_user}", "gists_url": "https://api.github.com/users/lestephane/gists{/gist_id}", "starred_url": "https://api.github.com/users/lestephane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lestephane/subscriptions", "organizations_url": "https://api.github.com/users/lestephane/orgs", "repos_url": "https://api.github.com/users/lestephane/repos", "events_url": "https://api.github.com/users/lestephane/events{/privacy}", "received_events_url": "https://api.github.com/users/lestephane/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-26T05:57:25Z", "updated_at": "2019-04-10T08:44:46Z", "closed_at": "2019-04-10T08:44:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "(arrived here from https://github.com/UnitedIncome/serverless-python-requirements/issues/285#issuecomment-441324344)\r\n\r\nI'm experiencing lambda python packages that are much larger than they should be in a Python3 environment because Jose depends on **future**, even though future is only needed in a python 2.6 environment.\r\n \r\nhttps://github.com/mpdavis/python-jose/blob/7bc6b980c220037cdb356606515542699bf49421/setup.py#L68\r\n\r\nIs this a limitation inherent to python? How to avoid pulling in future? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/108", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/108/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/108/events", "html_url": "https://github.com/mpdavis/python-jose/issues/108", "id": 358237567, "node_id": "MDU6SXNzdWUzNTgyMzc1Njc=", "number": 108, "title": "backend-explicit tests", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-07T23:09:43Z", "updated_at": "2019-04-08T20:04:47Z", "closed_at": "2019-04-08T20:04:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The current test framework loads all cryptographic backends and then tests them all in the same pass.\r\n\r\nThis has a few unintended effects: it makes it impossible to run the tests without all backends present, it masks failures of some tests that will fail when certain backends are not present (because they use the autoloader), and it makes it easier to forget to enable tests for certain backends.\r\n\r\nI've been hacking on this and I have the tests reconfigured to enable testing with isolated backends[1], but as noted above the previous approach was masking tests that currently fail when certain backends are not present.\r\n\r\nAssuming that this is a change that would be desirable, what would be your preferred way of handling the changes? In the interest of keeping the PRs small and digestible I would rather not lump the test reworking and any fixes together into the same PR, but pushing only the test rework will make the test suite fail.\r\n\r\n[1] https://github.com/mattsb42-aws/python-jose/tree/explicit-dependencies", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/106", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/106/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/106/events", "html_url": "https://github.com/mpdavis/python-jose/issues/106", "id": 355387686, "node_id": "MDU6SXNzdWUzNTUzODc2ODY=", "number": 106, "title": "Regression: cryptography library support for x509 certificate", "user": {"login": "danielfaust", "id": 320098, "node_id": "MDQ6VXNlcjMyMDA5OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/320098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielfaust", "html_url": "https://github.com/danielfaust", "followers_url": "https://api.github.com/users/danielfaust/followers", "following_url": "https://api.github.com/users/danielfaust/following{/other_user}", "gists_url": "https://api.github.com/users/danielfaust/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielfaust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielfaust/subscriptions", "organizations_url": "https://api.github.com/users/danielfaust/orgs", "repos_url": "https://api.github.com/users/danielfaust/repos", "events_url": "https://api.github.com/users/danielfaust/events{/privacy}", "received_events_url": "https://api.github.com/users/danielfaust/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-30T01:15:53Z", "updated_at": "2018-08-30T09:40:29Z", "closed_at": "2018-08-30T02:57:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Some dependency related issue came up in my Docker container which makes use of `python-jose`. It appears that something stopped installing `pycrypto`. I'm not sure if it used to get installed alongside `python-jose` due to the contents of the `requirements.txt` file, which contained `pycrypto` until this commit: https://github.com/mpdavis/python-jose/commit/b08a58fabf1e6080f3729167d672729751fcb702#diff-b4ef698db8ca845e5845c4618278f29a \r\n\r\nWhichever the reason is why `pycrypto` isn't requested anymore in my dependency tree, for some reason `python-jose` is now using the `cryptography` backend (https://github.com/mpdavis/python-jose/blob/master/jose/backends/cryptography_backend.py), I think it is because I'm installing the `service_identity` module which pulls in `pyopenssl` and that in turn pulls in `cryptography`.\r\n\r\nI just noticed that the `cryptography` module is recommended as the default one: https://github.com/mpdavis/python-jose#custom-backends\r\n\r\nHere's the problem:\r\n\r\nThe `pycrypto` backend is able to load keys from x509 certificates, which are used by Google's GitKit and also by Firebase. The current code for the `cryptography` backend is not able to do this and triggers an exception due to a deserialization error `JWKError: Could not deserialize key data` both for GitKit and for Firebase.\r\n\r\nInitial x509 certificates support got added due to this issue https://github.com/mpdavis/python-jose/issues/27#issuecomment-242092991\r\n\r\nThe modification in the snippet below at `key.startswith('-----BEGIN CERTIFICATE-----'):` fixes the issue, but I am not able to further deal with this issue due to time constraints, currently I'm solving this issue \"manually\" issuing a `pip install pycrypto` in the Dockerfile (other parts of my code depend on `pycrypto`, so I need to install it anyway).\r\n\r\nPlease read the blue note at https://cryptography.io/en/latest/hazmat/primitives/asymmetric/serialization/#pem\r\nwhich leads to this document\r\nhttps://cryptography.io/en/latest/x509/reference/#cryptography.x509.load_pem_x509_certificate\r\n\r\nPlease apologize for just stating the problem here. The modified code is the following (in this file https://github.com/mpdavis/python-jose/blob/master/jose/backends/cryptography_backend.py#L196):\r\n\r\n```\r\nclass CryptographyRSAKey(Key):\r\n    SHA256 = hashes.SHA256\r\n    SHA384 = hashes.SHA384\r\n    SHA512 = hashes.SHA512\r\n\r\n    def __init__(self, key, algorithm, cryptography_backend=default_backend):\r\n        \r\n        if algorithm not in ALGORITHMS.RSA:\r\n            raise JWKError('hash_alg: %s is not a valid hash algorithm' % algorithm)\r\n\r\n        self.hash_alg = {\r\n            ALGORITHMS.RS256: self.SHA256,\r\n            ALGORITHMS.RS384: self.SHA384,\r\n            ALGORITHMS.RS512: self.SHA512\r\n        }.get(algorithm)\r\n        self._algorithm = algorithm\r\n\r\n        self.cryptography_backend = cryptography_backend\r\n\r\n        # if it conforms to RSAPublicKey interface\r\n        if hasattr(key, 'public_bytes') and hasattr(key, 'public_numbers'):\r\n            self.prepared_key = key\r\n            return\r\n\r\n        if isinstance(key, dict):\r\n            self.prepared_key = self._process_jwk(key)\r\n            return\r\n\r\n        if isinstance(key, six.string_types):\r\n            key = key.encode('utf-8')\r\n\r\n        if isinstance(key, six.binary_type):\r\n            if key.startswith('-----BEGIN CERTIFICATE-----'): # <####### FROM HERE\r\n              try:\r\n                  key = x509.load_pem_x509_certificate(key, self.cryptography_backend())\r\n                  self.prepared_key = key.public_key()\r\n              except Exception as e:\r\n                  raise JWKError(e)\r\n            else: # <####### TO HERE\r\n              try:\r\n                  try:\r\n                      key = load_pem_public_key(key, self.cryptography_backend())\r\n                  except ValueError:\r\n                      key = load_pem_private_key(key, password=None, backend=self.cryptography_backend())\r\n                  self.prepared_key = key\r\n              except Exception as e:\r\n                  raise JWKError(e)\r\n            return\r\n\r\n        raise JWKError('Unable to parse an RSA_JWK from key: %s' % key)\r\n```\r\nThis is the way it got fixed for pycrypto back then: https://github.com/mpdavis/python-jose/blob/e70b62583b272b2c040df613b4e264e5d08e176a/jose/backends/pycrypto_backend.py#L64\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/105", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/105/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/105/events", "html_url": "https://github.com/mpdavis/python-jose/issues/105", "id": 351382420, "node_id": "MDU6SXNzdWUzNTEzODI0MjA=", "number": 105, "title": "Just to say, that this is the best lib name ever!", "user": {"login": "josecoelho", "id": 1987013, "node_id": "MDQ6VXNlcjE5ODcwMTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1987013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josecoelho", "html_url": "https://github.com/josecoelho", "followers_url": "https://api.github.com/users/josecoelho/followers", "following_url": "https://api.github.com/users/josecoelho/following{/other_user}", "gists_url": "https://api.github.com/users/josecoelho/gists{/gist_id}", "starred_url": "https://api.github.com/users/josecoelho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josecoelho/subscriptions", "organizations_url": "https://api.github.com/users/josecoelho/orgs", "repos_url": "https://api.github.com/users/josecoelho/repos", "events_url": "https://api.github.com/users/josecoelho/events{/privacy}", "received_events_url": "https://api.github.com/users/josecoelho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-16T21:53:27Z", "updated_at": "2018-08-16T21:54:02Z", "closed_at": "2018-08-16T21:54:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sorry about the joke. Please, close this issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/102", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/102/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/102/events", "html_url": "https://github.com/mpdavis/python-jose/issues/102", "id": 340180800, "node_id": "MDU6SXNzdWUzNDAxODA4MDA=", "number": 102, "title": "RSA key format is not supported ", "user": {"login": "Allan-Nava", "id": 22498435, "node_id": "MDQ6VXNlcjIyNDk4NDM1", "avatar_url": "https://avatars3.githubusercontent.com/u/22498435?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Allan-Nava", "html_url": "https://github.com/Allan-Nava", "followers_url": "https://api.github.com/users/Allan-Nava/followers", "following_url": "https://api.github.com/users/Allan-Nava/following{/other_user}", "gists_url": "https://api.github.com/users/Allan-Nava/gists{/gist_id}", "starred_url": "https://api.github.com/users/Allan-Nava/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Allan-Nava/subscriptions", "organizations_url": "https://api.github.com/users/Allan-Nava/orgs", "repos_url": "https://api.github.com/users/Allan-Nava/repos", "events_url": "https://api.github.com/users/Allan-Nava/events{/privacy}", "received_events_url": "https://api.github.com/users/Allan-Nava/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-11T10:20:46Z", "updated_at": "2018-07-11T13:29:09Z", "closed_at": "2018-07-11T13:29:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to decode the jwt token, I got this error:\r\n`RSA key format is not supported`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/99", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/99/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/99/events", "html_url": "https://github.com/mpdavis/python-jose/issues/99", "id": 334733047, "node_id": "MDU6SXNzdWUzMzQ3MzMwNDc=", "number": 99, "title": "Include release notes", "user": {"login": "RacingTadpole", "id": 1757858, "node_id": "MDQ6VXNlcjE3NTc4NTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1757858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RacingTadpole", "html_url": "https://github.com/RacingTadpole", "followers_url": "https://api.github.com/users/RacingTadpole/followers", "following_url": "https://api.github.com/users/RacingTadpole/following{/other_user}", "gists_url": "https://api.github.com/users/RacingTadpole/gists{/gist_id}", "starred_url": "https://api.github.com/users/RacingTadpole/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RacingTadpole/subscriptions", "organizations_url": "https://api.github.com/users/RacingTadpole/orgs", "repos_url": "https://api.github.com/users/RacingTadpole/repos", "events_url": "https://api.github.com/users/RacingTadpole/events{/privacy}", "received_events_url": "https://api.github.com/users/RacingTadpole/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-22T03:33:39Z", "updated_at": "2019-12-10T08:08:19Z", "closed_at": "2019-12-10T08:08:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a list of what's changed between releases of python-jose? \r\n\r\nI'm having trouble deciding when a new version of python-jose is crucial \u2013 eg. because it includes security patches or fixes a bug that could affect my usage \u2013 vs when it is just a nice-to-have. Unfortunately redeploying is not always costless.\r\n\r\nA change log / release notes would really help with this - or if you already have one, a link to it in the read-me or docs.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/90", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/90/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/90/events", "html_url": "https://github.com/mpdavis/python-jose/issues/90", "id": 321914103, "node_id": "MDU6SXNzdWUzMjE5MTQxMDM=", "number": 90, "title": "pyjwt verifies token while python-jose fails", "user": {"login": "jonathan-kosgei", "id": 6712914, "node_id": "MDQ6VXNlcjY3MTI5MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6712914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathan-kosgei", "html_url": "https://github.com/jonathan-kosgei", "followers_url": "https://api.github.com/users/jonathan-kosgei/followers", "following_url": "https://api.github.com/users/jonathan-kosgei/following{/other_user}", "gists_url": "https://api.github.com/users/jonathan-kosgei/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathan-kosgei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathan-kosgei/subscriptions", "organizations_url": "https://api.github.com/users/jonathan-kosgei/orgs", "repos_url": "https://api.github.com/users/jonathan-kosgei/repos", "events_url": "https://api.github.com/users/jonathan-kosgei/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathan-kosgei/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-05-10T12:28:50Z", "updated_at": "2018-05-10T14:10:23Z", "closed_at": "2018-05-10T14:00:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "This pyjwt example works;\r\n\r\n```\r\nimport jwt\r\n\r\npublic_key = \"-----BEGIN PUBLIC KEY-----\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAumZZl1U3GFFZyVTRmHLg\\nb1II9+fOIqg9CT4gGDyfLglsPMBV3m6G88KhgiStpnY/nmR/yx0PewIBYPJNEC6x\\nxdKxDbKkIA7oZz+P+I1qJwYQsyhIfmVd9IwGIebYu1ZNrlJmseu4axi+Q3NbjRs4\\nsvXDt/WF4bkmGIvdlt35xta7+Djo+WiGWfFZBaurnDZqtIZ4xl/CJW0rByX1hBHS\\nUn/sS4JL8YUnPC8vLDUXlG5sLH/7BTI1VMtpWWqROnY9B/J8fR6oDdaSWP/BaYQQ\\nr8g6ye3a95zpaTweTNnom2VMgj9g23qPYrKD9zXL4oXTjjTb0MbUHRLP8FcYI7E5\\nSwIDAQAB\\n-----END PUBLIC KEY-----\\n\"\r\ntoken = \"eyJraWQiOiJ3bXF3Q2ttbVFubll1RXJEVGU2MDVOWUdMR0VTSW5iWUVmd3ZBeXJHc053PSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiJiMTMzZWQ0ZC02ZmUwLTQ0YjgtYjZiOS00YWY4NmJkMDYzMmQiLCJldmVudF9pZCI6IjcwNGEzODc3LTU0NGMtMTFlOC04YzRjLTZkNDNmZDlhNDg2YiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE1MjU5NTQ3OTEsImlzcyI6Imh0dHBzOlwvXC9jb2duaXRvLWlkcC51cy1lYXN0LTEuYW1hem9uYXdzLmNvbVwvdXMtZWFzdC0xX21yazRSeWpZeiIsImV4cCI6MTUyNTk1ODM5MSwiaWF0IjoxNTI1OTU0NzkxLCJqdGkiOiJjN2EzZjE1MC1jM2I3LTQzOWQtOWRiNS1jNzMxNDgzNzc3MjIiLCJjbGllbnRfaWQiOiI2dXBlNm5kdW5ka3Y3ZjVpOWpsbzZhOHAydCIsInVzZXJuYW1lIjoiam9uYXRoYW5rb3NnZWkxMDAwQGdtYWlsLmNvbSJ9.extzT3KMtocdKmuNgpUpOAUe2WgOmEV2TbO4yWS8nnNzugIlYx93od38WKxLR66x1qTJVv-YQ-Yuk0pt2Nh-bWbYbOmYpURNBAVeFoLILxOMcGtboRI8ecBN57KZt6EQZl9_4gJmSqYDC3yXPBWyZ1MpDItaZCEbOEHIg8CEoCgTyeo5H_-AH7jBBSOLJF1rzdqntVkaVeCO91Zc-L13ZNEpaxtNH95IKhn7XWD0vWvmnjYvHH4xe7iuOE-9zg9QTtb4tJvSdfkRYakfuJ-cqHaHOYFUu50n-rVs8H6Rr_fi_vohxC7ksdglhytg7K0COtvLSiJAFoZpuUW8QPF2lA\"\r\n\r\ndecoded_payload = jwt.decode(token, key=public_key, algorithms=['RS256'])\r\n```\r\nWhile the same example with python-jose fails\r\n```\r\nfrom jose import jwk\r\nfrom jose.utils import base64url_decode\r\ntoken = \"eyJraWQiOiJ3bXF3Q2ttbVFubll1RXJEVGU2MDVOWUdMR0VTSW5iWUVmd3ZBeXJHc053PSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiJiMTMzZWQ0ZC02ZmUwLTQ0YjgtYjZiOS00YWY4NmJkMDYzMmQiLCJldmVudF9pZCI6IjcwNGEzODc3LTU0NGMtMTFlOC04YzRjLTZkNDNmZDlhNDg2YiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE1MjU5NTQ3OTEsImlzcyI6Imh0dHBzOlwvXC9jb2duaXRvLWlkcC51cy1lYXN0LTEuYW1hem9uYXdzLmNvbVwvdXMtZWFzdC0xX21yazRSeWpZeiIsImV4cCI6MTUyNTk1ODM5MSwiaWF0IjoxNTI1OTU0NzkxLCJqdGkiOiJjN2EzZjE1MC1jM2I3LTQzOWQtOWRiNS1jNzMxNDgzNzc3MjIiLCJjbGllbnRfaWQiOiI2dXBlNm5kdW5ka3Y3ZjVpOWpsbzZhOHAydCIsInVzZXJuYW1lIjoiam9uYXRoYW5rb3NnZWkxMDAwQGdtYWlsLmNvbSJ9.extzT3KMtocdKmuNgpUpOAUe2WgOmEV2TbO4yWS8nnNzugIlYx93od38WKxLR66x1qTJVv-YQ-Yuk0pt2Nh-bWbYbOmYpURNBAVeFoLILxOMcGtboRI8ecBN57KZt6EQZl9_4gJmSqYDC3yXPBWyZ1MpDItaZCEbOEHIg8CEoCgTyeo5H_-AH7jBBSOLJF1rzdqntVkaVeCO91Zc-L13ZNEpaxtNH95IKhn7XWD0vWvmnjYvHH4xe7iuOE-9zg9QTtb4tJvSdfkRYakfuJ-cqHaHOYFUu50n-rVs8H6Rr_fi_vohxC7ksdglhytg7K0COtvLSiJAFoZpuUW8QPF2lA\"\r\nrsa_key = {\"alg\":\"RS256\",\"e\":\"AQAB\",\"kid\":\"wmqwCkmmQnnYuErDTe605NYGLGESInbYEfwvAyrGsNw=\",\"kty\":\"RSA\",\"n\":\"umZZl1U3GFFZyVTRmHLgb1II9-fOIqg9CT4gGDyfLglsPMBV3m6G88KhgiStpnY_nmR_yx0PewIBYPJNEC6xxdKxDbKkIA7oZz-P-I1qJwYQsyhIfmVd9IwGIebYu1ZNrlJmseu4axi-Q3NbjRs4svXDt_WF4bkmGIvdlt35xta7-Djo-WiGWfFZBaurnDZqtIZ4xl_CJW0rByX1hBHSUn_sS4JL8YUnPC8vLDUXlG5sLH_7BTI1VMtpWWqROnY9B_J8fR6oDdaSWP_BaYQQr8g6ye3a95zpaTweTNnom2VMgj9g23qPYrKD9zXL4oXTjjTb0MbUHRLP8FcYI7E5Sw\",\"use\":\"sig\"}\r\nkey = jwk.construct(rsa_key)\r\nmessage, encoded_sig = token.rsplit('.', 1)\r\ndecoded_sig = base64url_decode(encoded_sig.encode('utf-8'))\r\nkey.verify(message, decoded_sig)\r\n```\r\nThat is key.verify returns `False`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/86", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/86/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/86/events", "html_url": "https://github.com/mpdavis/python-jose/issues/86", "id": 312205024, "node_id": "MDU6SXNzdWUzMTIyMDUwMjQ=", "number": 86, "title": "Tag 2.0.2 on GitHub", "user": {"login": "dotlambda", "id": 6806011, "node_id": "MDQ6VXNlcjY4MDYwMTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/6806011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotlambda", "html_url": "https://github.com/dotlambda", "followers_url": "https://api.github.com/users/dotlambda/followers", "following_url": "https://api.github.com/users/dotlambda/following{/other_user}", "gists_url": "https://api.github.com/users/dotlambda/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotlambda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotlambda/subscriptions", "organizations_url": "https://api.github.com/users/dotlambda/orgs", "repos_url": "https://api.github.com/users/dotlambda/repos", "events_url": "https://api.github.com/users/dotlambda/events{/privacy}", "received_events_url": "https://api.github.com/users/dotlambda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-07T13:04:46Z", "updated_at": "2018-05-10T13:36:17Z", "closed_at": "2018-05-10T13:36:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please add a tag for version 2.0.2.\r\nThere is only a tarball on PyPI: https://pypi.org/project/python-jose/2.0.2/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/82", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/82/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/82/events", "html_url": "https://github.com/mpdavis/python-jose/issues/82", "id": 298016674, "node_id": "MDU6SXNzdWUyOTgwMTY2NzQ=", "number": 82, "title": "MemoryError", "user": {"login": "FilimonovAP81", "id": 32813125, "node_id": "MDQ6VXNlcjMyODEzMTI1", "avatar_url": "https://avatars2.githubusercontent.com/u/32813125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FilimonovAP81", "html_url": "https://github.com/FilimonovAP81", "followers_url": "https://api.github.com/users/FilimonovAP81/followers", "following_url": "https://api.github.com/users/FilimonovAP81/following{/other_user}", "gists_url": "https://api.github.com/users/FilimonovAP81/gists{/gist_id}", "starred_url": "https://api.github.com/users/FilimonovAP81/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FilimonovAP81/subscriptions", "organizations_url": "https://api.github.com/users/FilimonovAP81/orgs", "repos_url": "https://api.github.com/users/FilimonovAP81/repos", "events_url": "https://api.github.com/users/FilimonovAP81/events{/privacy}", "received_events_url": "https://api.github.com/users/FilimonovAP81/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-17T16:26:05Z", "updated_at": "2018-02-24T14:35:10Z", "closed_at": "2018-02-24T14:35:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI have MemoryError message then I try to import your lib.\r\n\r\nDo you know potential problem places?\r\n\r\nI use python 2.7.10 and djangorestframework 3.3.2 and last release of your library.\r\nResult is:\r\n\r\n```\r\nException Type: MemoryError\r\n/usr/lib64/python2.7/ctypes/__init__.py in _reset_cache, line 279\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/80", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/80/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/80/events", "html_url": "https://github.com/mpdavis/python-jose/issues/80", "id": 295125676, "node_id": "MDU6SXNzdWUyOTUxMjU2NzY=", "number": 80, "title": "Use OrderedDict for headers in jwt.decode and jws._encode_header", "user": {"login": "Fufutako", "id": 30046869, "node_id": "MDQ6VXNlcjMwMDQ2ODY5", "avatar_url": "https://avatars0.githubusercontent.com/u/30046869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Fufutako", "html_url": "https://github.com/Fufutako", "followers_url": "https://api.github.com/users/Fufutako/followers", "following_url": "https://api.github.com/users/Fufutako/following{/other_user}", "gists_url": "https://api.github.com/users/Fufutako/gists{/gist_id}", "starred_url": "https://api.github.com/users/Fufutako/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Fufutako/subscriptions", "organizations_url": "https://api.github.com/users/Fufutako/orgs", "repos_url": "https://api.github.com/users/Fufutako/repos", "events_url": "https://api.github.com/users/Fufutako/events{/privacy}", "received_events_url": "https://api.github.com/users/Fufutako/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-07T12:50:03Z", "updated_at": "2019-04-10T08:41:40Z", "closed_at": "2019-04-10T08:41:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI would implement the \"headless JWT\" idea I rode in this article https://dev.to/neilmadden/7-best-practices-for-json-web-tokens the section 4 \"Consider using \"headless\" JWTs\" .\r\n\r\nBut the fact python-jose build the headers from dict make this impossible. Indeed, keys don't have an order in a classic dict. Could you consider to use OrderedDict instead, in jws.py l.131 and jwt.py l.114 ?\r\n\r\nIf this idea interests you, I could make a pull request.\r\n\r\nBest,\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/79", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/79/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/79/events", "html_url": "https://github.com/mpdavis/python-jose/issues/79", "id": 291562305, "node_id": "MDU6SXNzdWUyOTE1NjIzMDU=", "number": 79, "title": "pycrypto is default backend, but setup.py still requires pycryptodome", "user": {"login": "sfro", "id": 623219, "node_id": "MDQ6VXNlcjYyMzIxOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/623219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfro", "html_url": "https://github.com/sfro", "followers_url": "https://api.github.com/users/sfro/followers", "following_url": "https://api.github.com/users/sfro/following{/other_user}", "gists_url": "https://api.github.com/users/sfro/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfro/subscriptions", "organizations_url": "https://api.github.com/users/sfro/orgs", "repos_url": "https://api.github.com/users/sfro/repos", "events_url": "https://api.github.com/users/sfro/events{/privacy}", "received_events_url": "https://api.github.com/users/sfro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-01-25T13:01:30Z", "updated_at": "2018-05-10T13:39:10Z", "closed_at": "2018-05-10T13:39:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "In this commit python-jose defaults back to pycrypto:\r\nhttps://github.com/mpdavis/python-jose/commit/402c815b7c9643896f66fe920f59ae6362088ca1\r\n\r\nSo latest master is like this:\r\nhttps://github.com/mpdavis/python-jose/blob/master/jose/backends/__init__.py\r\n\r\nYet setup.py still requires pycryptodome in latest master:\r\nhttps://github.com/mpdavis/python-jose/blob/master/setup.py\r\n\r\nIs there a reason behind why pycryptodome is still required?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/78", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/78/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/78/events", "html_url": "https://github.com/mpdavis/python-jose/issues/78", "id": 290149017, "node_id": "MDU6SXNzdWUyOTAxNDkwMTc=", "number": 78, "title": "Old version of pycryptodome", "user": {"login": "fgblomqvist", "id": 649260, "node_id": "MDQ6VXNlcjY0OTI2MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/649260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fgblomqvist", "html_url": "https://github.com/fgblomqvist", "followers_url": "https://api.github.com/users/fgblomqvist/followers", "following_url": "https://api.github.com/users/fgblomqvist/following{/other_user}", "gists_url": "https://api.github.com/users/fgblomqvist/gists{/gist_id}", "starred_url": "https://api.github.com/users/fgblomqvist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fgblomqvist/subscriptions", "organizations_url": "https://api.github.com/users/fgblomqvist/orgs", "repos_url": "https://api.github.com/users/fgblomqvist/repos", "events_url": "https://api.github.com/users/fgblomqvist/events{/privacy}", "received_events_url": "https://api.github.com/users/fgblomqvist/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-20T00:50:09Z", "updated_at": "2018-01-22T20:53:07Z", "closed_at": "2018-01-21T20:41:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "How come an over 2 years old version of pycryptodome is used when there are releases that are less than a month old?\r\n\r\nThe reason why I discovered this is because this pycryptodome does not work on Heroku:\r\n```\r\nremote:   File \"/app/.heroku/python/lib/python3.6/site-packages/Crypto/Hash/BLAKE2s.py\", line 63, in <module>\u001b\r\n\r\nremote:     from Crypto.Random import get_random_bytes\u001b\r\n\r\nremote: ImportError: cannot import name 'get_random_bytes'\u001b\r\n```\r\nNot sure if a newer version would fix it but I would assume so.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/75", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/75/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/75/events", "html_url": "https://github.com/mpdavis/python-jose/issues/75", "id": 282661121, "node_id": "MDU6SXNzdWUyODI2NjExMjE=", "number": 75, "title": "Should at_hash claim verification fail when missing from JWT?", "user": {"login": "leplatrem", "id": 546692, "node_id": "MDQ6VXNlcjU0NjY5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/546692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leplatrem", "html_url": "https://github.com/leplatrem", "followers_url": "https://api.github.com/users/leplatrem/followers", "following_url": "https://api.github.com/users/leplatrem/following{/other_user}", "gists_url": "https://api.github.com/users/leplatrem/gists{/gist_id}", "starred_url": "https://api.github.com/users/leplatrem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leplatrem/subscriptions", "organizations_url": "https://api.github.com/users/leplatrem/orgs", "repos_url": "https://api.github.com/users/leplatrem/repos", "events_url": "https://api.github.com/users/leplatrem/events{/privacy}", "received_events_url": "https://api.github.com/users/leplatrem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-17T00:47:10Z", "updated_at": "2019-09-18T18:44:48Z", "closed_at": "2018-11-26T19:21:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It looks like `at_hash` in JWT payload is optional (see http://openid.net/specs/openid-connect-core-1_0.html#CodeIDToken).\r\n\r\nHowever, in python-jose, when both `id_token` and `access_token` parameters are specified, decoding a JWT that has no `at_hash` claim raises an error (*at_hash claim missing from token*)\r\nhttps://github.com/mpdavis/python-jose/pull/30/files#diff-b106d01229785c64375df96ca4b3f58cR422\r\n\r\nShouldn't it be acceptable since the spec says it's optional?\r\n\r\nObviously we can disable at_hash verification with the appropriate decode option, but we find it useful to perform claims verification on JWT that have it or not with the same code. Maybe with a `allow_missing_at_hash` option or something?\r\n\r\nHuge thanks for this lib \ud83d\ude3b ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/65", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/65/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/65/events", "html_url": "https://github.com/mpdavis/python-jose/issues/65", "id": 254962277, "node_id": "MDU6SXNzdWUyNTQ5NjIyNzc=", "number": 65, "title": "Upload source dists to PyPI", "user": {"login": "sscherfke", "id": 511179, "node_id": "MDQ6VXNlcjUxMTE3OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/511179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sscherfke", "html_url": "https://github.com/sscherfke", "followers_url": "https://api.github.com/users/sscherfke/followers", "following_url": "https://api.github.com/users/sscherfke/following{/other_user}", "gists_url": "https://api.github.com/users/sscherfke/gists{/gist_id}", "starred_url": "https://api.github.com/users/sscherfke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sscherfke/subscriptions", "organizations_url": "https://api.github.com/users/sscherfke/orgs", "repos_url": "https://api.github.com/users/sscherfke/repos", "events_url": "https://api.github.com/users/sscherfke/events{/privacy}", "received_events_url": "https://api.github.com/users/sscherfke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-04T07:56:23Z", "updated_at": "2017-09-05T16:37:32Z", "closed_at": "2017-09-05T14:58:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice if you could continue to upload source distributions to PyPI since this makes packaging python-jose for other package managers a bit easier.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/62", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/62/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/62/events", "html_url": "https://github.com/mpdavis/python-jose/issues/62", "id": 254651834, "node_id": "MDU6SXNzdWUyNTQ2NTE4MzQ=", "number": 62, "title": "CVE-2017-11424 Applies to python-jose as well!", "user": {"login": "sirosen", "id": 1300022, "node_id": "MDQ6VXNlcjEzMDAwMjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1300022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sirosen", "html_url": "https://github.com/sirosen", "followers_url": "https://api.github.com/users/sirosen/followers", "following_url": "https://api.github.com/users/sirosen/following{/other_user}", "gists_url": "https://api.github.com/users/sirosen/gists{/gist_id}", "starred_url": "https://api.github.com/users/sirosen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sirosen/subscriptions", "organizations_url": "https://api.github.com/users/sirosen/orgs", "repos_url": "https://api.github.com/users/sirosen/repos", "events_url": "https://api.github.com/users/sirosen/events{/privacy}", "received_events_url": "https://api.github.com/users/sirosen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-01T14:07:38Z", "updated_at": "2017-09-01T16:04:38Z", "closed_at": "2017-09-01T16:04:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[CVE-2017-11424](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-11424) details a key confusion attack against pyjwt.\r\n\r\nAs I understand it, we just need to add another magic string to [this check](https://github.com/mpdavis/python-jose/blob/b54c12aa54b76d34942f537418399d689d828099/jose/jwk.py#L106-L115)\r\n\r\nNot being a crypto expert, I'll open a pull request with the fix described in the CVE, but would appreciate someone else taking a look at the CVE before merging.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/60", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/60/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/60/events", "html_url": "https://github.com/mpdavis/python-jose/issues/60", "id": 237416796, "node_id": "MDU6SXNzdWUyMzc0MTY3OTY=", "number": 60, "title": ".", "user": {"login": "nbhambha", "id": 11166258, "node_id": "MDQ6VXNlcjExMTY2MjU4", "avatar_url": "https://avatars3.githubusercontent.com/u/11166258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbhambha", "html_url": "https://github.com/nbhambha", "followers_url": "https://api.github.com/users/nbhambha/followers", "following_url": "https://api.github.com/users/nbhambha/following{/other_user}", "gists_url": "https://api.github.com/users/nbhambha/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbhambha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbhambha/subscriptions", "organizations_url": "https://api.github.com/users/nbhambha/orgs", "repos_url": "https://api.github.com/users/nbhambha/repos", "events_url": "https://api.github.com/users/nbhambha/events{/privacy}", "received_events_url": "https://api.github.com/users/nbhambha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-21T05:13:09Z", "updated_at": "2017-06-23T16:41:46Z", "closed_at": "2017-06-23T16:41:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/55", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/55/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/55/events", "html_url": "https://github.com/mpdavis/python-jose/issues/55", "id": 232324828, "node_id": "MDU6SXNzdWUyMzIzMjQ4Mjg=", "number": 55, "title": "Wheel please", "user": {"login": "peterbe", "id": 26739, "node_id": "MDQ6VXNlcjI2NzM5", "avatar_url": "https://avatars2.githubusercontent.com/u/26739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterbe", "html_url": "https://github.com/peterbe", "followers_url": "https://api.github.com/users/peterbe/followers", "following_url": "https://api.github.com/users/peterbe/following{/other_user}", "gists_url": "https://api.github.com/users/peterbe/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterbe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterbe/subscriptions", "organizations_url": "https://api.github.com/users/peterbe/orgs", "repos_url": "https://api.github.com/users/peterbe/repos", "events_url": "https://api.github.com/users/peterbe/events{/privacy}", "received_events_url": "https://api.github.com/users/peterbe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-30T17:26:23Z", "updated_at": "2017-05-31T14:58:24Z", "closed_at": "2017-05-30T18:05:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "`python-jose` only exists in pypi as a tarball. [1.3.2 at the time of writing](https://pypi.python.org/pypi/python-jose/1.3.2)\r\nCan we please have this as a wheel too on PyPI?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/53", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/53/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/53/events", "html_url": "https://github.com/mpdavis/python-jose/issues/53", "id": 230673711, "node_id": "MDU6SXNzdWUyMzA2NzM3MTE=", "number": 53, "title": "JWS verification succeeds with both public and private keys when signing with the private key using RS256", "user": {"login": "dumptyd", "id": 16368429, "node_id": "MDQ6VXNlcjE2MzY4NDI5", "avatar_url": "https://avatars1.githubusercontent.com/u/16368429?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dumptyd", "html_url": "https://github.com/dumptyd", "followers_url": "https://api.github.com/users/dumptyd/followers", "following_url": "https://api.github.com/users/dumptyd/following{/other_user}", "gists_url": "https://api.github.com/users/dumptyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/dumptyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dumptyd/subscriptions", "organizations_url": "https://api.github.com/users/dumptyd/orgs", "repos_url": "https://api.github.com/users/dumptyd/repos", "events_url": "https://api.github.com/users/dumptyd/events{/privacy}", "received_events_url": "https://api.github.com/users/dumptyd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-05-23T11:23:38Z", "updated_at": "2019-12-20T10:27:44Z", "closed_at": "2019-12-20T10:27:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here's the code snippet. \r\n\r\n<small> (PS: Not my keys) </small>\r\n\r\n```py\r\nfrom base64 import b64decode\r\nfrom jose import jws\r\n\r\nprivate_key = 'MIICWwIBAAKBgGbhqjBjqCgXkqDCx1BRHDSJb9P4J+OjOPXeeIsVkY9UiBerApfTUCIVMSEOiM3u1b790Uk1e6tAUMmoM3ZUIuWsEylGflZYK7alsxEAyQfTDW/eRgMovQD8mr4TDBWKa5y61z8UDt5+YPY4XSd4y/Xh4FJpHj4yyBJzNhJ8MzrzAgMBAAECgYA+sHdBsRgABg0kxEsrF6F2KeDoaqfzv7uvpfYR2fyuN7YNpfiYhvynJ/6dw/t8cHHyRTtHvr0ypqgTmNhy2+W/AR82SYYe/4nai8aHRuTvGM7/H1GwhlggsziJepZBpemU1Iu0Ue3+ZPEn+egB7PZezxi2QbLoafGoPArTJkB/AQJBAL23VPOzi9HL3NyDVJUIQ0bk2Ev118OkLtqqe/qORjDe+iDPX2k1pe6PYhgLovRZxElbCxENu9sgWQG/sea9KkECQQCK06JQ8XtlGRphmPPWb7z1gmebBr5m7RtYdX27g53OynrKiuZ9lnwY/r3deBJqas9qMCM2G0qANUGHZIKAb9AzAkEApKfpY1oBkCSPnBOf5Xk2auFTmRnWGkb1I3O0BtJUuTXNgYx6EqYtTc/EI3p2A/2lDsWl5Tc2RAjfN1VY4hpsAQJAcJ310ovSedS/XeTiCVZjhxXeThhOZNh7kmrdMDw4zAPdUGkVSVPGH9Cm3P4GkmVLFO0v4ziIWzDYk6ipZN9PmQJARv/EHHKedpVSBps5DvI+umMvtH06GhhoIm8iFDx4W1PTez9CGjvq299NoAqxHMyZVe23Kb0vqkKyPg0pgtRGjQ=='\r\n\r\npublic_key = 'MIGeMA0GCSqGSIb3DQEBAQUAA4GMADCBiAKBgGbhqjBjqCgXkqDCx1BRHDSJb9P4J+OjOPXeeIsVkY9UiBerApfTUCIVMSEOiM3u1b790Uk1e6tAUMmoM3ZUIuWsEylGflZYK7alsxEAyQfTDW/eRgMovQD8mr4TDBWKa5y61z8UDt5+YPY4XSd4y/Xh4FJpHj4yyBJzNhJ8MzrzAgMBAAE='\r\n\r\ntoken = jws.sign({'email': 'abc@b.com'}, b64decode(private_key), algorithm='RS256')\r\nprint token\r\ndec = jws.verify(token, b64decode(private_key), algorithms='RS256')\r\nprint dec", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/48", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/48/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/48/events", "html_url": "https://github.com/mpdavis/python-jose/issues/48", "id": 221009430, "node_id": "MDU6SXNzdWUyMjEwMDk0MzA=", "number": 48, "title": "Different servers generate different JWT tokens using the same parameters", "user": {"login": "PLPeeters", "id": 3260909, "node_id": "MDQ6VXNlcjMyNjA5MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3260909?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PLPeeters", "html_url": "https://github.com/PLPeeters", "followers_url": "https://api.github.com/users/PLPeeters/followers", "following_url": "https://api.github.com/users/PLPeeters/following{/other_user}", "gists_url": "https://api.github.com/users/PLPeeters/gists{/gist_id}", "starred_url": "https://api.github.com/users/PLPeeters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PLPeeters/subscriptions", "organizations_url": "https://api.github.com/users/PLPeeters/orgs", "repos_url": "https://api.github.com/users/PLPeeters/repos", "events_url": "https://api.github.com/users/PLPeeters/events{/privacy}", "received_events_url": "https://api.github.com/users/PLPeeters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-11T16:30:59Z", "updated_at": "2017-04-12T07:31:35Z", "closed_at": "2017-04-12T07:31:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using [python-jose](https://github.com/mpdavis/python-jose)'s JWT implementation to generate JWT tokens for authentication purposes.\r\n\r\nWe're running our backend in a Docker container on Kubernetes and **sometimes, when we have multiple pods, we get different tokens _for the same claims, secret and algorithm_**. I've also had this happen on a single container on my development environment when `touch`ing my `index.wsgi` script.\r\n\r\nPod 1:\r\n\r\n    >>> jwt.encode({'key': 'value'}, 'secret', algorithm='HS256')\r\n    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJrZXkiOiJ2YWx1ZSJ9.FG-8UppwHaFp1LgRYQQeS6EDQF7_6-bMFegNucHjmWg'\r\n\r\nPod 2:\r\n\r\n    >>> jwt.encode({'key': 'value'}, 'secret', algorithm='HS256')\r\n    'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJrZXkiOiJ2YWx1ZSJ9.JPIDicqvQ6GAh14yE2yZ3wnZQ0LiLNTTRDtJgLZcn98'\r\n\r\nI took a deep dive into the code to see what could be causing this and didn't find anything incriminating. In a nutshell, here's what the code does:\r\n\r\n1. Do a `json.dumps` of the algorithm header (`{'typ': 'JWT', 'alg': 'HS256'}`) and encode it as Base64, removing any `=`'s\r\n2. Do a `json.dumps` of the payload (`{'key': 'value'}`) and encode it as Base64, removing any `=`'s\r\n3. Sign `encoded_header.encoded_payload` using HMAC256 with the `secret` key and encode it as Base64, again removing any `=`'s\r\n4. Concatenate the signature to the previous string, resulting in `encoded_header.encoded_payload.encoded_signature`\r\n\r\nAt this point, I have no idea what is causing this. I'm suspecting a bug of some sort in the HMAC or SHA256 implementation of Python, but that seems rather unlikely... Any clues?\r\n\r\nNote: we've successfully reproduced the bug using `pyjwt`.\r\n\r\n[StackOverflow Question](http://stackoverflow.com/questions/43351439/different-servers-generate-different-jwt-tokens-using-the-same-parameters)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/41", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/41/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/41/events", "html_url": "https://github.com/mpdavis/python-jose/issues/41", "id": 198869956, "node_id": "MDU6SXNzdWUxOTg4Njk5NTY=", "number": 41, "title": "crytography library", "user": {"login": "davemo88", "id": 6555331, "node_id": "MDQ6VXNlcjY1NTUzMzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/6555331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davemo88", "html_url": "https://github.com/davemo88", "followers_url": "https://api.github.com/users/davemo88/followers", "following_url": "https://api.github.com/users/davemo88/following{/other_user}", "gists_url": "https://api.github.com/users/davemo88/gists{/gist_id}", "starred_url": "https://api.github.com/users/davemo88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davemo88/subscriptions", "organizations_url": "https://api.github.com/users/davemo88/orgs", "repos_url": "https://api.github.com/users/davemo88/repos", "events_url": "https://api.github.com/users/davemo88/events{/privacy}", "received_events_url": "https://api.github.com/users/davemo88/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-01-05T03:43:27Z", "updated_at": "2018-12-25T23:47:38Z", "closed_at": "2018-12-25T23:47:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I ended up here because of [PyJWT](https://github.com/jpadilla/pyjwt) but I also needed jwk stuff. I noticed PyJWT uses [cryptography](https://github.com/pyca/cryptography) for some algorithm support. I guess Google App Engine requires PyCrypto as you mention but perhaps python-jose should also support cryptography. For example pycrypto hasn't had a commit in 2 years whereas cryptography repository is active.\r\n\r\nJust a thought! I might be interested in pitching in as well.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/40", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/40/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/40/events", "html_url": "https://github.com/mpdavis/python-jose/issues/40", "id": 198786673, "node_id": "MDU6SXNzdWUxOTg3ODY2NzM=", "number": 40, "title": "Python 3.5 support - Encoding errors - JWK", "user": {"login": "lchabert", "id": 2452640, "node_id": "MDQ6VXNlcjI0NTI2NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2452640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lchabert", "html_url": "https://github.com/lchabert", "followers_url": "https://api.github.com/users/lchabert/followers", "following_url": "https://api.github.com/users/lchabert/following{/other_user}", "gists_url": "https://api.github.com/users/lchabert/gists{/gist_id}", "starred_url": "https://api.github.com/users/lchabert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lchabert/subscriptions", "organizations_url": "https://api.github.com/users/lchabert/orgs", "repos_url": "https://api.github.com/users/lchabert/repos", "events_url": "https://api.github.com/users/lchabert/events{/privacy}", "received_events_url": "https://api.github.com/users/lchabert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-01-04T19:13:12Z", "updated_at": "2017-05-03T22:02:26Z", "closed_at": "2017-01-09T20:34:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm working with your lib and Auth0 authentication provider, but when i try to decode my encoded sig, i have a TypeError raised.\r\n\r\nFollowing python code\r\n```python\r\n\r\nkeys = r.json()['keys']\r\nkey = jwk.construct(keys[0])\r\n\r\nmessage, encoded_sig = jwt_value.rsplit('.', 1)\r\ndecoded_sig = base64url_decode(encoded_sig)\r\nd = key.verify(message, decoded_sig)\r\n```\r\n\r\nand my error is: \r\n```\r\n  File \"/home/lchabert/Documents/Developement/python/voxitrunk-env/lib/python3.5/site-packages/jose/utils.py\", line 39, in base64url_decode\r\n    input += b'=' * (4 - rem)\r\nTypeError: Can't convert 'bytes' object to str implicitly\r\n```\r\n\r\nI have try to intercept this error on utils.py, and encode the input string. It works, but other encoding errors are raised on 'verify' function too.\r\n\r\nDo you know any incompatibility with hashing modules and python 3.5 ?\r\n\r\nThanks,\r\nRegards.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/38", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/38/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/38/events", "html_url": "https://github.com/mpdavis/python-jose/issues/38", "id": 195673969, "node_id": "MDU6SXNzdWUxOTU2NzM5Njk=", "number": 38, "title": "Odd issue with RFC5270 test", "user": {"login": "jrconlin", "id": 35755, "node_id": "MDQ6VXNlcjM1NzU1", "avatar_url": "https://avatars2.githubusercontent.com/u/35755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrconlin", "html_url": "https://github.com/jrconlin", "followers_url": "https://api.github.com/users/jrconlin/followers", "following_url": "https://api.github.com/users/jrconlin/following{/other_user}", "gists_url": "https://api.github.com/users/jrconlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrconlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrconlin/subscriptions", "organizations_url": "https://api.github.com/users/jrconlin/orgs", "repos_url": "https://api.github.com/users/jrconlin/repos", "events_url": "https://api.github.com/users/jrconlin/events{/privacy}", "received_events_url": "https://api.github.com/users/jrconlin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-12-14T23:19:49Z", "updated_at": "2018-09-13T13:04:11Z", "closed_at": "2018-09-13T13:04:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI'm currently working on a patch to allow python-jose to use pyelliptic. This is because we use the library in a fairly high-demand environment and would like to use a clib based EC handler. \r\n\r\nI have every test but one working. `tests.rfc.TestFourThreeThree.test_signature` is failing because OpenSSL flags that the point defined is not on curve. \r\n\r\nI have a gist that demonstrates the problem: https://gist.github.com/jrconlin/ad8c7f692235b0fd51ddbe20be09c272\r\n\r\n(in that test, the \"rfc\" key is taken from the RFC text, \"control\" are a pair of points extracted from an openssl public key generated by:\r\n\r\n`openssl  ecparam -name secp521r1 -genkey -noout | openssl ec -pubout`)\r\n\r\nOddly, if I take the RFC key values and reformat them as a raw key PEM, `openssl ecparam -check` says they're ok.\r\n\r\nHoping that I'm just doing something stupid, but if you have a moment, I'd greatly appreciate your input.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/37", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/37/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/37/events", "html_url": "https://github.com/mpdavis/python-jose/issues/37", "id": 194514655, "node_id": "MDU6SXNzdWUxOTQ1MTQ2NTU=", "number": 37, "title": "ImportError", "user": {"login": "buddyeatsbugs", "id": 16785845, "node_id": "MDQ6VXNlcjE2Nzg1ODQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/16785845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/buddyeatsbugs", "html_url": "https://github.com/buddyeatsbugs", "followers_url": "https://api.github.com/users/buddyeatsbugs/followers", "following_url": "https://api.github.com/users/buddyeatsbugs/following{/other_user}", "gists_url": "https://api.github.com/users/buddyeatsbugs/gists{/gist_id}", "starred_url": "https://api.github.com/users/buddyeatsbugs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/buddyeatsbugs/subscriptions", "organizations_url": "https://api.github.com/users/buddyeatsbugs/orgs", "repos_url": "https://api.github.com/users/buddyeatsbugs/repos", "events_url": "https://api.github.com/users/buddyeatsbugs/events{/privacy}", "received_events_url": "https://api.github.com/users/buddyeatsbugs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-09T05:00:34Z", "updated_at": "2016-12-10T02:48:32Z", "closed_at": "2016-12-10T02:48:32Z", "author_association": "NONE", "active_lock_reason": null, "body": " I get this log output when trying to run python-jose on AWS\r\n```\r\nfrom jose import jwt\r\n ImportError: No module named jose\r\n```\r\n\r\nI have already confirmed that python-jose is already installed.\r\n`Requirement already satisfied (use --upgrade to upgrade): python-jose==1.3.2 in /opt/python/run/venv/lib/python2.7/site-packages (from -r /opt/python/ondeck/app/requirements.txt (line 14))`\r\n\r\nAny idea why this might be happening?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/32", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/32/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/32/events", "html_url": "https://github.com/mpdavis/python-jose/issues/32", "id": 170398233, "node_id": "MDU6SXNzdWUxNzAzOTgyMzM=", "number": 32, "title": "Unable to verify ADAL token signature", "user": {"login": "gmeans", "id": 277741, "node_id": "MDQ6VXNlcjI3Nzc0MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/277741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gmeans", "html_url": "https://github.com/gmeans", "followers_url": "https://api.github.com/users/gmeans/followers", "following_url": "https://api.github.com/users/gmeans/following{/other_user}", "gists_url": "https://api.github.com/users/gmeans/gists{/gist_id}", "starred_url": "https://api.github.com/users/gmeans/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gmeans/subscriptions", "organizations_url": "https://api.github.com/users/gmeans/orgs", "repos_url": "https://api.github.com/users/gmeans/repos", "events_url": "https://api.github.com/users/gmeans/events{/privacy}", "received_events_url": "https://api.github.com/users/gmeans/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-08-10T11:50:18Z", "updated_at": "2019-10-01T12:22:56Z", "closed_at": "2016-08-10T12:44:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "We're working w/ an app that is using adal.js to authenticate a user within a SPA, then afterwards we are looking to verify that token on the backend. \n\nWe are trying to use the the `jwt.decode()` method but receive a 'Signature Verification Failed' error we can't figure out. Since Azure issues its public keys in RSA format we were trying to use the `jwk.RSAKey` object to create the public key for decoding.\n\nThe keys we are pointed to are posted here:\n\nhttps://login.windows.net/common/discovery/keys\n\nHere's the flow of our code.\n\n``` python\n# token sent over from ADAL. We've pasted this string into http://jwt.calebb.net\n# and everything appears to decode correctly.\ntoken = \"...\"\n\n# note there are multiple keys posted at the above URL, we select the right one by \n# looking at the kid attribute in the decoded token.\nkey_data=<dict from url posted above>\n\n# Prepare the key using the RSA object\nfrom jose.jwk import RSA\nkey = RSAKey(key_data, algorithm='RS256')\n\n# Try to to use the exportKey() function to feed a PEM formatted\n# key into jwt.decode()\njwt.decode(token, k.prepared_key.exportKey(), algorithms='RS256')\n```\n\nThis results in a Signature verification failed error. We've also tried using jwk.construct() directly and calling verify but we have the same result.\n\nAny ideas? Maybe we are using exportKey() incorrectly?\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/28", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/28/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/28/events", "html_url": "https://github.com/mpdavis/python-jose/issues/28", "id": 165766816, "node_id": "MDU6SXNzdWUxNjU3NjY4MTY=", "number": 28, "title": "JWK example in documentation is wrong", "user": {"login": "bjmc", "id": 328557, "node_id": "MDQ6VXNlcjMyODU1Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/328557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjmc", "html_url": "https://github.com/bjmc", "followers_url": "https://api.github.com/users/bjmc/followers", "following_url": "https://api.github.com/users/bjmc/following{/other_user}", "gists_url": "https://api.github.com/users/bjmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjmc/subscriptions", "organizations_url": "https://api.github.com/users/bjmc/orgs", "repos_url": "https://api.github.com/users/bjmc/repos", "events_url": "https://api.github.com/users/bjmc/events{/privacy}", "received_events_url": "https://api.github.com/users/bjmc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 201996341, "node_id": "MDU6TGFiZWwyMDE5OTYzNDE=", "url": "https://api.github.com/repos/mpdavis/python-jose/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 410862115, "node_id": "MDU6TGFiZWw0MTA4NjIxMTU=", "url": "https://api.github.com/repos/mpdavis/python-jose/labels/docs", "name": "docs", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-07-15T11:29:10Z", "updated_at": "2016-07-19T20:33:46Z", "closed_at": "2016-07-15T15:40:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The example [given here](http://python-jose.readthedocs.io/en/stable/jwk/index.html#examples) doesn't work:\n\n`key.verify(token)`\n\nraises an exception:\n\n`*** TypeError: verify() takes exactly 3 arguments (2 given)`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/27", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/27/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/27/events", "html_url": "https://github.com/mpdavis/python-jose/issues/27", "id": 163318931, "node_id": "MDU6SXNzdWUxNjMzMTg5MzE=", "number": 27, "title": "Add message about lack of X.509 certificate support in documentation", "user": {"login": "anjorinjnr", "id": 1556093, "node_id": "MDQ6VXNlcjE1NTYwOTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1556093?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anjorinjnr", "html_url": "https://github.com/anjorinjnr", "followers_url": "https://api.github.com/users/anjorinjnr/followers", "following_url": "https://api.github.com/users/anjorinjnr/following{/other_user}", "gists_url": "https://api.github.com/users/anjorinjnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/anjorinjnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anjorinjnr/subscriptions", "organizations_url": "https://api.github.com/users/anjorinjnr/orgs", "repos_url": "https://api.github.com/users/anjorinjnr/repos", "events_url": "https://api.github.com/users/anjorinjnr/events{/privacy}", "received_events_url": "https://api.github.com/users/anjorinjnr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 410862115, "node_id": "MDU6TGFiZWw0MTA4NjIxMTU=", "url": "https://api.github.com/repos/mpdavis/python-jose/labels/docs", "name": "docs", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2016-07-01T04:49:56Z", "updated_at": "2016-09-02T15:58:38Z", "closed_at": "2016-09-01T15:06:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get this error when using algorithms='RS256' on google app engine.\n\nFull stack trace\n\n```\nTraceback (most recent call last):\n  File \"/Applications/GoogleAppEngineLauncher.app/Contents/Resources/GoogleAppEngine-default.bundle/Contents/Resources/google_appengine/google/appengine/tools/devappserver2/python/request_handler.py\", line 226, in handle_interactive_request\n    exec(compiled_code, self._command_globals)\n  File \"<string>\", line 12, in <module>\n  File \"lib/jose/jwt.py\", line 121, in decode\n    payload = jws.verify(token, key, algorithms, verify=verify_signature)\n  File \"lib/jose/jws.py\", line 75, in verify\n    _verify_signature(signing_input, header, signature, key, algorithms)\n  File \"lib/jose/jws.py\", line 218, in _verify_signature\n    key = jwk.construct(key, alg)\n  File \"lib/jose/jwk.py\", line 65, in construct\n    return RSAKey(key_data, algorithm)\n  File \"lib/jose/jwk.py\", line 201, in __init__\n    raise JWKError(e)\nJWKError: RSA key format is not supported\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/26", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/26/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/26/events", "html_url": "https://github.com/mpdavis/python-jose/issues/26", "id": 163021390, "node_id": "MDU6SXNzdWUxNjMwMjEzOTA=", "number": 26, "title": "Please switch to pycryptodomex", "user": {"login": "jdunck", "id": 10229, "node_id": "MDQ6VXNlcjEwMjI5", "avatar_url": "https://avatars2.githubusercontent.com/u/10229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdunck", "html_url": "https://github.com/jdunck", "followers_url": "https://api.github.com/users/jdunck/followers", "following_url": "https://api.github.com/users/jdunck/following{/other_user}", "gists_url": "https://api.github.com/users/jdunck/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdunck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdunck/subscriptions", "organizations_url": "https://api.github.com/users/jdunck/orgs", "repos_url": "https://api.github.com/users/jdunck/repos", "events_url": "https://api.github.com/users/jdunck/events{/privacy}", "received_events_url": "https://api.github.com/users/jdunck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 201996347, "node_id": "MDU6TGFiZWwyMDE5OTYzNDc=", "url": "https://api.github.com/repos/mpdavis/python-jose/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-06-29T20:40:44Z", "updated_at": "2016-07-19T18:51:05Z", "closed_at": "2016-06-30T21:30:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Guidance from pycryptodome is to use \"pycryptodomex\" unless you know you're installing to a virtualenv:\n\nhttp://pycryptodome.readthedocs.io/en/latest/src/introduction.html\n\nI think since this is a library, it would be better to require pycryptodomex and code to that.  I'd be happy to do a PR if you agree.\n\n(I noticed this because we have a couple libraries with transitive deps to jose and to pyjwkest (both).  But they depend on both pycryptodome and pycryptodomex, which is a pain.)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/25", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/25/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/25/events", "html_url": "https://github.com/mpdavis/python-jose/issues/25", "id": 161863965, "node_id": "MDU6SXNzdWUxNjE4NjM5NjU=", "number": 25, "title": "JWTError", "user": {"login": "buddyeatsbugs", "id": 16785845, "node_id": "MDQ6VXNlcjE2Nzg1ODQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/16785845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/buddyeatsbugs", "html_url": "https://github.com/buddyeatsbugs", "followers_url": "https://api.github.com/users/buddyeatsbugs/followers", "following_url": "https://api.github.com/users/buddyeatsbugs/following{/other_user}", "gists_url": "https://api.github.com/users/buddyeatsbugs/gists{/gist_id}", "starred_url": "https://api.github.com/users/buddyeatsbugs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/buddyeatsbugs/subscriptions", "organizations_url": "https://api.github.com/users/buddyeatsbugs/orgs", "repos_url": "https://api.github.com/users/buddyeatsbugs/repos", "events_url": "https://api.github.com/users/buddyeatsbugs/events{/privacy}", "received_events_url": "https://api.github.com/users/buddyeatsbugs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 201996346, "node_id": "MDU6TGFiZWwyMDE5OTYzNDY=", "url": "https://api.github.com/repos/mpdavis/python-jose/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-23T08:10:19Z", "updated_at": "2016-07-19T18:49:24Z", "closed_at": "2016-07-01T10:54:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello I've been looking for how to use JWTError but i couldn't find an example anywhere. Did I miss it?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/23", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/23/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/23/events", "html_url": "https://github.com/mpdavis/python-jose/issues/23", "id": 160423014, "node_id": "MDU6SXNzdWUxNjA0MjMwMTQ=", "number": 23, "title": "0.6.x versions broke google appengine compatibility (subprocess dependency)", "user": {"login": "fabito", "id": 308613, "node_id": "MDQ6VXNlcjMwODYxMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/308613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabito", "html_url": "https://github.com/fabito", "followers_url": "https://api.github.com/users/fabito/followers", "following_url": "https://api.github.com/users/fabito/following{/other_user}", "gists_url": "https://api.github.com/users/fabito/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabito/subscriptions", "organizations_url": "https://api.github.com/users/fabito/orgs", "repos_url": "https://api.github.com/users/fabito/repos", "events_url": "https://api.github.com/users/fabito/events{/privacy}", "received_events_url": "https://api.github.com/users/fabito/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 201996341, "node_id": "MDU6TGFiZWwyMDE5OTYzNDE=", "url": "https://api.github.com/repos/mpdavis/python-jose/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-06-15T13:32:33Z", "updated_at": "2016-07-19T18:49:37Z", "closed_at": "2016-06-16T02:49:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using python-jose on GAE and had to fallback to 0.5.6.\n0.6.x versions are no working.\nSeems like its related to the \"builtins\" dependency (which depends on unavailable subprocess module [1]) introduced in this commit:\n\nhttps://github.com/mpdavis/python-jose/commit/babfe193988fb187217f9afd0fd6f46dbdbcf108\n\n[1] https://cloud.google.com/appengine/kb/#libraries\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/21", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/21/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/21/events", "html_url": "https://github.com/mpdavis/python-jose/issues/21", "id": 155443244, "node_id": "MDU6SXNzdWUxNTU0NDMyNDQ=", "number": 21, "title": "Dependency on google app engine. ", "user": {"login": "HW-Siew", "id": 10137637, "node_id": "MDQ6VXNlcjEwMTM3NjM3", "avatar_url": "https://avatars1.githubusercontent.com/u/10137637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HW-Siew", "html_url": "https://github.com/HW-Siew", "followers_url": "https://api.github.com/users/HW-Siew/followers", "following_url": "https://api.github.com/users/HW-Siew/following{/other_user}", "gists_url": "https://api.github.com/users/HW-Siew/gists{/gist_id}", "starred_url": "https://api.github.com/users/HW-Siew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HW-Siew/subscriptions", "organizations_url": "https://api.github.com/users/HW-Siew/orgs", "repos_url": "https://api.github.com/users/HW-Siew/repos", "events_url": "https://api.github.com/users/HW-Siew/events{/privacy}", "received_events_url": "https://api.github.com/users/HW-Siew/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 201996346, "node_id": "MDU6TGFiZWwyMDE5OTYzNDY=", "url": "https://api.github.com/repos/mpdavis/python-jose/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-05-18T08:24:49Z", "updated_at": "2017-04-22T20:13:13Z", "closed_at": "2016-05-19T09:07:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I tried to use this on google app engine. A few of dependency are required, six.py and builtins. Am i going to add the required module manually or i missed out configuration on google app engine? Thanks for the advice.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/14", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/14/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/14/events", "html_url": "https://github.com/mpdavis/python-jose/issues/14", "id": 137740664, "node_id": "MDU6SXNzdWUxMzc3NDA2NjQ=", "number": 14, "title": "0.6.0 release broke Python 2.7 compatibility", "user": {"login": "dokai", "id": 5369, "node_id": "MDQ6VXNlcjUzNjk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dokai", "html_url": "https://github.com/dokai", "followers_url": "https://api.github.com/users/dokai/followers", "following_url": "https://api.github.com/users/dokai/following{/other_user}", "gists_url": "https://api.github.com/users/dokai/gists{/gist_id}", "starred_url": "https://api.github.com/users/dokai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dokai/subscriptions", "organizations_url": "https://api.github.com/users/dokai/orgs", "repos_url": "https://api.github.com/users/dokai/repos", "events_url": "https://api.github.com/users/dokai/events{/privacy}", "received_events_url": "https://api.github.com/users/dokai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 201996341, "node_id": "MDU6TGFiZWwyMDE5OTYzNDE=", "url": "https://api.github.com/repos/mpdavis/python-jose/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-03-02T01:07:48Z", "updated_at": "2016-07-19T18:50:40Z", "closed_at": "2016-03-02T02:24:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems the latest 0.6.0 release broke compatibility with Python 2.7 due to the `from builtins import int` in `jwk.py`. Is there a particular use case that import supports? It seems other parts (e.g. `jwt.py`) are still using the default `int` binding from the global namespace.\n\nI'd like to propose the removal of that import or wrapping it with a try/except if it is indeed needed for Python 3.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/12", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/12/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/12/events", "html_url": "https://github.com/mpdavis/python-jose/issues/12", "id": 128125701, "node_id": "MDU6SXNzdWUxMjgxMjU3MDE=", "number": 12, "title": "six requirement", "user": {"login": "scipioni", "id": 3766283, "node_id": "MDQ6VXNlcjM3NjYyODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3766283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scipioni", "html_url": "https://github.com/scipioni", "followers_url": "https://api.github.com/users/scipioni/followers", "following_url": "https://api.github.com/users/scipioni/following{/other_user}", "gists_url": "https://api.github.com/users/scipioni/gists{/gist_id}", "starred_url": "https://api.github.com/users/scipioni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scipioni/subscriptions", "organizations_url": "https://api.github.com/users/scipioni/orgs", "repos_url": "https://api.github.com/users/scipioni/repos", "events_url": "https://api.github.com/users/scipioni/events{/privacy}", "received_events_url": "https://api.github.com/users/scipioni/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 201996343, "node_id": "MDU6TGFiZWwyMDE5OTYzNDM=", "url": "https://api.github.com/repos/mpdavis/python-jose/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-01-22T10:23:01Z", "updated_at": "2016-07-19T18:50:05Z", "closed_at": "2016-01-22T17:20:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "python-jose depends from six < 1.10.0 as specified in setup.py\n\n```\n    'six >=1.9.0, <1.10.0',\n```\n\nThis behaviour breaks other packages like html5lib and others and it is difficult keep virtualenv clean\nafter an upgrade of packages\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/9", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/9/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/9/events", "html_url": "https://github.com/mpdavis/python-jose/issues/9", "id": 124549620, "node_id": "MDU6SXNzdWUxMjQ1NDk2MjA=", "number": 9, "title": "Unverified Signature Reports Unsupported Algorithm", "user": {"login": "ericbusboom", "id": 2560782, "node_id": "MDQ6VXNlcjI1NjA3ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2560782?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericbusboom", "html_url": "https://github.com/ericbusboom", "followers_url": "https://api.github.com/users/ericbusboom/followers", "following_url": "https://api.github.com/users/ericbusboom/following{/other_user}", "gists_url": "https://api.github.com/users/ericbusboom/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericbusboom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericbusboom/subscriptions", "organizations_url": "https://api.github.com/users/ericbusboom/orgs", "repos_url": "https://api.github.com/users/ericbusboom/repos", "events_url": "https://api.github.com/users/ericbusboom/events{/privacy}", "received_events_url": "https://api.github.com/users/ericbusboom/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 201996341, "node_id": "MDU6TGFiZWwyMDE5OTYzNDE=", "url": "https://api.github.com/repos/mpdavis/python-jose/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-01-01T16:32:28Z", "updated_at": "2016-07-19T18:51:52Z", "closed_at": "2016-01-05T05:25:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/mpdavis/python-jose/blob/master/jose/jws.py#L208\n\nWhen a signature fails to verify in _verify_signture(), it raises a JWSError reporting a verification failure, but then then exception is immediately caught and re-raised as an Invalid Algorithm. This makes verification failures looks like missing algorithms. \n\nSince get_algorithm_object already throws the right exception, it would be better if the outer try/except were just removed. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/6", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/6/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/6/events", "html_url": "https://github.com/mpdavis/python-jose/issues/6", "id": 105149222, "node_id": "MDU6SXNzdWUxMDUxNDkyMjI=", "number": 6, "title": "key.py and test.py unused?", "user": {"login": "crgk", "id": 1093952, "node_id": "MDQ6VXNlcjEwOTM5NTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1093952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crgk", "html_url": "https://github.com/crgk", "followers_url": "https://api.github.com/users/crgk/followers", "following_url": "https://api.github.com/users/crgk/following{/other_user}", "gists_url": "https://api.github.com/users/crgk/gists{/gist_id}", "starred_url": "https://api.github.com/users/crgk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crgk/subscriptions", "organizations_url": "https://api.github.com/users/crgk/orgs", "repos_url": "https://api.github.com/users/crgk/repos", "events_url": "https://api.github.com/users/crgk/events{/privacy}", "received_events_url": "https://api.github.com/users/crgk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 201996343, "node_id": "MDU6TGFiZWwyMDE5OTYzNDM=", "url": "https://api.github.com/repos/mpdavis/python-jose/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-09-07T05:38:09Z", "updated_at": "2016-07-19T18:52:08Z", "closed_at": "2015-09-07T19:08:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Quick look, don't think these files are used. Might be used in local testing, but might not need to be committed.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/3", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/3/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/3/events", "html_url": "https://github.com/mpdavis/python-jose/issues/3", "id": 105125411, "node_id": "MDU6SXNzdWUxMDUxMjU0MTE=", "number": 3, "title": "Import fails on Python 3.4 (and probably earlier versions of Python 3)", "user": {"login": "craigafinch", "id": 13557941, "node_id": "MDQ6VXNlcjEzNTU3OTQx", "avatar_url": "https://avatars1.githubusercontent.com/u/13557941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigafinch", "html_url": "https://github.com/craigafinch", "followers_url": "https://api.github.com/users/craigafinch/followers", "following_url": "https://api.github.com/users/craigafinch/following{/other_user}", "gists_url": "https://api.github.com/users/craigafinch/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigafinch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigafinch/subscriptions", "organizations_url": "https://api.github.com/users/craigafinch/orgs", "repos_url": "https://api.github.com/users/craigafinch/repos", "events_url": "https://api.github.com/users/craigafinch/events{/privacy}", "received_events_url": "https://api.github.com/users/craigafinch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 201996343, "node_id": "MDU6TGFiZWwyMDE5OTYzNDM=", "url": "https://api.github.com/repos/mpdavis/python-jose/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-07T00:32:14Z", "updated_at": "2016-07-19T18:52:20Z", "closed_at": "2015-09-07T04:38:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Steps to reproduce:\n1. Run a python 3.4 interpreter\n2. import jose.jws\n\n```\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python3.4/dist-packages/jose/jws.py\", line 8, in <module>\n    from jose.jwa import get_algorithm_object\n  File \"/usr/local/lib/python3.4/dist-packages/jose/jwa.py\", line 97\n    except Exception, e:\n                    ^\nSyntaxError: invalid syntax\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/2", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/2/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/2/events", "html_url": "https://github.com/mpdavis/python-jose/issues/2", "id": 78100897, "node_id": "MDU6SXNzdWU3ODEwMDg5Nw==", "number": 2, "title": "Use examples from JOSE cookbook in tests", "user": {"login": "mpdavis", "id": 304398, "node_id": "MDQ6VXNlcjMwNDM5OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/304398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpdavis", "html_url": "https://github.com/mpdavis", "followers_url": "https://api.github.com/users/mpdavis/followers", "following_url": "https://api.github.com/users/mpdavis/following{/other_user}", "gists_url": "https://api.github.com/users/mpdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpdavis/subscriptions", "organizations_url": "https://api.github.com/users/mpdavis/orgs", "repos_url": "https://api.github.com/users/mpdavis/repos", "events_url": "https://api.github.com/users/mpdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/mpdavis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 201996343, "node_id": "MDU6TGFiZWwyMDE5OTYzNDM=", "url": "https://api.github.com/repos/mpdavis/python-jose/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-19T14:01:50Z", "updated_at": "2016-07-19T18:48:10Z", "closed_at": "2016-07-05T22:07:11Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The JOSE cookbook has a number of examples.  Use them in testing to verify that we are signing and encrypting correctly. \n\nhttps://tools.ietf.org/html/draft-ietf-jose-cookbook-08#section-3.1\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mpdavis/python-jose/issues/1", "repository_url": "https://api.github.com/repos/mpdavis/python-jose", "labels_url": "https://api.github.com/repos/mpdavis/python-jose/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/mpdavis/python-jose/issues/1/comments", "events_url": "https://api.github.com/repos/mpdavis/python-jose/issues/1/events", "html_url": "https://github.com/mpdavis/python-jose/issues/1", "id": 73921165, "node_id": "MDU6SXNzdWU3MzkyMTE2NQ==", "number": 1, "title": "Multiple JOSE implementations", "user": {"login": "kuba", "id": 106176, "node_id": "MDQ6VXNlcjEwNjE3Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/106176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kuba", "html_url": "https://github.com/kuba", "followers_url": "https://api.github.com/users/kuba/followers", "following_url": "https://api.github.com/users/kuba/following{/other_user}", "gists_url": "https://api.github.com/users/kuba/gists{/gist_id}", "starred_url": "https://api.github.com/users/kuba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kuba/subscriptions", "organizations_url": "https://api.github.com/users/kuba/orgs", "repos_url": "https://api.github.com/users/kuba/repos", "events_url": "https://api.github.com/users/kuba/events{/privacy}", "received_events_url": "https://api.github.com/users/kuba/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 201996347, "node_id": "MDU6TGFiZWwyMDE5OTYzNDc=", "url": "https://api.github.com/repos/mpdavis/python-jose/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-07T09:46:37Z", "updated_at": "2016-07-19T18:48:40Z", "closed_at": "2015-12-15T16:56:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems like at the moment there are at least three different code bases implementing JOSE:\n- this repo ([python-jose@pypi](https://pypi.python.org/pypi/python-jose/0.2.0))\n- https://github.com/Demonware/jose ([jose@pypi](https://pypi.python.org/pypi/jose))\n- I've baked my own solution for the [Let's Encrypt project](https://letsencrypt.org/) at https://github.com/letsencrypt/lets-encrypt-preview/tree/master/letsencrypt/acme/jose\n\nShall we start thinking about a unified solution? :)\n\ncc: @mpdavis, @demianbrecht\n", "performed_via_github_app": null, "score": 1.0}]}