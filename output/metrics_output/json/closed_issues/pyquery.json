{"total_count": 111, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/gawel/pyquery/issues/208", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/208/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/208/events", "html_url": "https://github.com/gawel/pyquery/issues/208", "id": 561034604, "node_id": "MDU6SXNzdWU1NjEwMzQ2MDQ=", "number": 208, "title": "How to get only this element's text except childrens'", "user": {"login": "billsteve", "id": 15674327, "node_id": "MDQ6VXNlcjE1Njc0MzI3", "avatar_url": "https://avatars3.githubusercontent.com/u/15674327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/billsteve", "html_url": "https://github.com/billsteve", "followers_url": "https://api.github.com/users/billsteve/followers", "following_url": "https://api.github.com/users/billsteve/following{/other_user}", "gists_url": "https://api.github.com/users/billsteve/gists{/gist_id}", "starred_url": "https://api.github.com/users/billsteve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/billsteve/subscriptions", "organizations_url": "https://api.github.com/users/billsteve/orgs", "repos_url": "https://api.github.com/users/billsteve/repos", "events_url": "https://api.github.com/users/billsteve/events{/privacy}", "received_events_url": "https://api.github.com/users/billsteve/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-06T14:06:17Z", "updated_at": "2020-02-06T14:34:00Z", "closed_at": "2020-02-06T14:33:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "# eg:\r\n```\r\nfrom pyquery import PyQuery as pq\r\nhtml = \"\"\"\r\n    <h1>\r\n        h1\r\n        <h2>h2</h2>\r\n    </h1>\r\n\"\"\"\r\ndoc =pq(html)\r\n\r\nprint(doc(\"h1\").text())  # h1 h2\r\n```\r\n```\r\n# What I want is     h1\r\n# What should I do?\r\n```\r\n\r\n@gawel ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/206", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/206/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/206/events", "html_url": "https://github.com/gawel/pyquery/issues/206", "id": 541502000, "node_id": "MDU6SXNzdWU1NDE1MDIwMDA=", "number": 206, "title": "Fix simple typo: usefull -> useful", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-22T21:16:56Z", "updated_at": "2019-12-22T21:36:35Z", "closed_at": "2019-12-22T21:36:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a small typo in docs/tips.rst.\nShould read `useful` rather than `usefull`.\n\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/204", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/204/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/204/events", "html_url": "https://github.com/gawel/pyquery/issues/204", "id": 460234747, "node_id": "MDU6SXNzdWU0NjAyMzQ3NDc=", "number": 204, "title": "Why the html node name with colon will be cut from first character to colon? ", "user": {"login": "quanjinzhang", "id": 36722304, "node_id": "MDQ6VXNlcjM2NzIyMzA0", "avatar_url": "https://avatars0.githubusercontent.com/u/36722304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quanjinzhang", "html_url": "https://github.com/quanjinzhang", "followers_url": "https://api.github.com/users/quanjinzhang/followers", "following_url": "https://api.github.com/users/quanjinzhang/following{/other_user}", "gists_url": "https://api.github.com/users/quanjinzhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/quanjinzhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quanjinzhang/subscriptions", "organizations_url": "https://api.github.com/users/quanjinzhang/orgs", "repos_url": "https://api.github.com/users/quanjinzhang/repos", "events_url": "https://api.github.com/users/quanjinzhang/events{/privacy}", "received_events_url": "https://api.github.com/users/quanjinzhang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-25T06:27:58Z", "updated_at": "2019-06-27T01:56:13Z", "closed_at": "2019-06-27T01:56:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is the example of the issue as follows:(I'm using python2.7 now)\r\n\r\n```\r\n>>> from pyquery import PyQuery as py\r\n>>> html=\"<p><ac:node ac:attr='atv1' attr2='atv2'>This is demo text</ac:node></p>\"\r\n>>> p=py(html)\r\n>>> p.html()\r\nu'<node ac:attr=\"atv1\" attr2=\"atv2\">This is demo text</node>'\r\n>>>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/202", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/202/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/202/events", "html_url": "https://github.com/gawel/pyquery/issues/202", "id": 432990626, "node_id": "MDU6SXNzdWU0MzI5OTA2MjY=", "number": 202, "title": "Is there a way to unwrap content?", "user": {"login": "headkit", "id": 359542, "node_id": "MDQ6VXNlcjM1OTU0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/359542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/headkit", "html_url": "https://github.com/headkit", "followers_url": "https://api.github.com/users/headkit/followers", "following_url": "https://api.github.com/users/headkit/following{/other_user}", "gists_url": "https://api.github.com/users/headkit/gists{/gist_id}", "starred_url": "https://api.github.com/users/headkit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/headkit/subscriptions", "organizations_url": "https://api.github.com/users/headkit/orgs", "repos_url": "https://api.github.com/users/headkit/repos", "events_url": "https://api.github.com/users/headkit/events{/privacy}", "received_events_url": "https://api.github.com/users/headkit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-14T15:16:39Z", "updated_at": "2019-04-14T15:22:21Z", "closed_at": "2019-04-14T15:22:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! \r\nThis is a nice framewor, thank you for sharing!\r\nDid anybody write a method to unwrap content from all its wrapping tags to just get the text()-content, like .unwrap() is doing it in jQuery?\r\n\r\nThnx!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/201", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/201/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/201/events", "html_url": "https://github.com/gawel/pyquery/issues/201", "id": 395855059, "node_id": "MDU6SXNzdWUzOTU4NTUwNTk=", "number": 201, "title": "so", "user": {"login": "wxyhcr", "id": 46083258, "node_id": "MDQ6VXNlcjQ2MDgzMjU4", "avatar_url": "https://avatars0.githubusercontent.com/u/46083258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wxyhcr", "html_url": "https://github.com/wxyhcr", "followers_url": "https://api.github.com/users/wxyhcr/followers", "following_url": "https://api.github.com/users/wxyhcr/following{/other_user}", "gists_url": "https://api.github.com/users/wxyhcr/gists{/gist_id}", "starred_url": "https://api.github.com/users/wxyhcr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wxyhcr/subscriptions", "organizations_url": "https://api.github.com/users/wxyhcr/orgs", "repos_url": "https://api.github.com/users/wxyhcr/repos", "events_url": "https://api.github.com/users/wxyhcr/events{/privacy}", "received_events_url": "https://api.github.com/users/wxyhcr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-04T09:08:51Z", "updated_at": "2019-01-04T09:12:59Z", "closed_at": "2019-01-04T09:12:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/197", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/197/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/197/events", "html_url": "https://github.com/gawel/pyquery/issues/197", "id": 354298765, "node_id": "MDU6SXNzdWUzNTQyOTg3NjU=", "number": 197, "title": "Openfile without encoding set will cause UnicodeDecodeError", "user": {"login": "kervinct", "id": 35440208, "node_id": "MDQ6VXNlcjM1NDQwMjA4", "avatar_url": "https://avatars0.githubusercontent.com/u/35440208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kervinct", "html_url": "https://github.com/kervinct", "followers_url": "https://api.github.com/users/kervinct/followers", "following_url": "https://api.github.com/users/kervinct/following{/other_user}", "gists_url": "https://api.github.com/users/kervinct/gists{/gist_id}", "starred_url": "https://api.github.com/users/kervinct/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kervinct/subscriptions", "organizations_url": "https://api.github.com/users/kervinct/orgs", "repos_url": "https://api.github.com/users/kervinct/repos", "events_url": "https://api.github.com/users/kervinct/events{/privacy}", "received_events_url": "https://api.github.com/users/kervinct/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-27T12:28:35Z", "updated_at": "2018-08-29T06:13:37Z", "closed_at": "2018-08-29T06:13:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I attempting to use a file with PyQuery, the code raised\r\n ` UnicodeDecodeError: 'gbk' codec can't decode byte 0xaf in position 755: illegal multibyte sequence`\r\n\r\nSo I changed file `pyquery.py` 216 line code to `html = open(kwargs['filename'], encoding='utf-8')`and the code runs well.\r\n\r\nIs that solution is wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/193", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/193/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/193/events", "html_url": "https://github.com/gawel/pyquery/issues/193", "id": 347629276, "node_id": "MDU6SXNzdWUzNDc2MjkyNzY=", "number": 193, "title": "Performance Comparison", "user": {"login": "dorukcan", "id": 5962538, "node_id": "MDQ6VXNlcjU5NjI1Mzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/5962538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dorukcan", "html_url": "https://github.com/dorukcan", "followers_url": "https://api.github.com/users/dorukcan/followers", "following_url": "https://api.github.com/users/dorukcan/following{/other_user}", "gists_url": "https://api.github.com/users/dorukcan/gists{/gist_id}", "starred_url": "https://api.github.com/users/dorukcan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dorukcan/subscriptions", "organizations_url": "https://api.github.com/users/dorukcan/orgs", "repos_url": "https://api.github.com/users/dorukcan/repos", "events_url": "https://api.github.com/users/dorukcan/events{/privacy}", "received_events_url": "https://api.github.com/users/dorukcan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-04T16:06:37Z", "updated_at": "2018-08-13T15:53:30Z", "closed_at": "2018-08-13T09:35:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any performance measurement reports to compare this library with others like BeautifulSoup, lxml, or ElementTree?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/188", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/188/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/188/events", "html_url": "https://github.com/gawel/pyquery/issues/188", "id": 325747765, "node_id": "MDU6SXNzdWUzMjU3NDc3NjU=", "number": 188, "title": "import pyquery error ", "user": {"login": "AlZero-t", "id": 38751490, "node_id": "MDQ6VXNlcjM4NzUxNDkw", "avatar_url": "https://avatars2.githubusercontent.com/u/38751490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlZero-t", "html_url": "https://github.com/AlZero-t", "followers_url": "https://api.github.com/users/AlZero-t/followers", "following_url": "https://api.github.com/users/AlZero-t/following{/other_user}", "gists_url": "https://api.github.com/users/AlZero-t/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlZero-t/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlZero-t/subscriptions", "organizations_url": "https://api.github.com/users/AlZero-t/orgs", "repos_url": "https://api.github.com/users/AlZero-t/repos", "events_url": "https://api.github.com/users/AlZero-t/events{/privacy}", "received_events_url": "https://api.github.com/users/AlZero-t/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-23T15:02:06Z", "updated_at": "2018-05-23T15:10:00Z", "closed_at": "2018-05-23T15:09:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "operating system:ubuntu 16.04\r\npython verion:python3.5\r\nI run the local file urlchushihua1.py\r\ncat urlchushihua1.py\r\nfrom pyquery import PyQuery as pq\r\ndoc = pq(url='https://cuiqingcai.com')\r\nprint(doc('title'))\r\n~                       \r\nroot@tian:/home/tian/python3# /usr/bin/python3 /home/tian/python3/urlchushihua1.py \r\n1\r\n2\r\n3\r\n4\r\n1\r\n2\r\n3\r\n4\r\n5\r\n[1, 2, 3, 4, 5]\r\nTraceback (most recent call last):\r\n  File \"/home/tian/python3/urlchushihua1.py\", line 2, in <module>\r\n    from pyquery import PyQuery as pq \r\n  File \"/usr/local/lib/python3.5/dist-packages/pyquery/__init__.py\", line 7, in <module>\r\n    from .pyquery import PyQuery  # NOQA\r\n  File \"/usr/local/lib/python3.5/dist-packages/pyquery/pyquery.py\", line 7, in <module>\r\n    from .openers import url_opener\r\n  File \"/usr/local/lib/python3.5/dist-packages/pyquery/openers.py\", line 17, in <module>\r\n    import requests\r\n  File \"/usr/lib/python3/dist-packages/requests/__init__.py\", line 64, in <module>\r\n    from . import utils\r\n  File \"/usr/lib/python3/dist-packages/requests/utils.py\", line 24, in <module>\r\n    from .compat import parse_http_list as _parse_list_header\r\n  File \"/usr/lib/python3/dist-packages/requests/compat.py\", line 25, in <module>\r\n    import simplejson as json\r\n  File \"/usr/lib/python3/dist-packages/simplejson/__init__.py\", line 109, in <module>\r\n    from decimal import Decimal\r\n  File \"/usr/lib/python3.5/decimal.py\", line 3, in <module>\r\n    from _decimal import *\r\nAttributeError: module 'numbers' has no attribute 'Number'\r\n\r\nError reporting as above.\r\nwhen i use root for termainal \r\nPython 3.5.2+ (default, Sep 22 2016, 12:18:14) \r\n[GCC 6.2.0 20160927] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from pyquery import PyQuery as pq \r\n>>> doc = pq(url='https://cuiqingcai.com')\r\n>>> print(doc('title'))\r\n<title>\u9759\u89c5\u4e28\u5d14\u5e86\u624d\u7684\u4e2a\u4eba\u535a\u5ba2</title>&#13;\r\nnormal output\r\n\r\n\r\nwhen is use usr import pyquery is error ,the error message is as follows.\r\ntian@tian:~$ python3\r\nPython 3.5.2+ (default, Sep 22 2016, 12:18:14) \r\n[GCC 6.2.0 20160927] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import pyquery\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.5/dist-packages/pyquery/__init__.py\", line 7, in <module>\r\n    from .pyquery import PyQuery  # NOQA\r\n  File \"/usr/local/lib/python3.5/dist-packages/pyquery/pyquery.py\", line 7, in <module>\r\n    from .openers import url_opener\r\n  File \"/usr/local/lib/python3.5/dist-packages/pyquery/openers.py\", line 7, in <module>\r\n    from urllib.request import urlopen\r\n  File \"/usr/lib/python3.5/urllib/request.py\", line 88, in <module>\r\n    import http.client\r\n  File \"/usr/lib/python3.5/http/client.py\", line 71, in <module>\r\n    import email.parser\r\n  File \"/usr/lib/python3.5/email/parser.py\", line 12, in <module>\r\n    from email.feedparser import FeedParser, BytesFeedParser\r\n  File \"/usr/lib/python3.5/email/feedparser.py\", line 27, in <module>\r\n    from email import message\r\n  File \"/usr/lib/python3.5/email/message.py\", line 16, in <module>\r\n    from email import utils\r\n  File \"/usr/lib/python3.5/email/utils.py\", line 40, in <module>\r\n    from email.charset import Charset\r\n  File \"/usr/lib/python3.5/email/charset.py\", line 15, in <module>\r\n    import email.quoprimime\r\n  File \"/usr/lib/python3.5/email/quoprimime.py\", line 44, in <module>\r\n    from string import ascii_letters, digits, hexdigits\r\n  File \"/home/tian/python/string.py\", line 3, in <module>\r\n    for index,string in enumerate(strings):\r\nNameError: name 'strings' is not defined\r\nError in sys.excepthook:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3/dist-packages/apport_python_hook.py\", line 63, in apport_excepthook\r\n    from apport.fileutils import likely_packaged, get_recent_crashes\r\n  File \"/usr/lib/python3/dist-packages/apport/__init__.py\", line 5, in <module>\r\n    from apport.report import Report\r\n  File \"/usr/lib/python3/dist-packages/apport/report.py\", line 21, in <module>\r\n    from urllib.request import urlopen\r\n  File \"/usr/lib/python3.5/urllib/request.py\", line 88, in <module>\r\n    import http.client\r\n  File \"/usr/lib/python3.5/http/client.py\", line 71, in <module>\r\n    import email.parser\r\n  File \"/usr/lib/python3.5/email/parser.py\", line 12, in <module>\r\n    from email.feedparser import FeedParser, BytesFeedParser\r\n  File \"/usr/lib/python3.5/email/feedparser.py\", line 27, in <module>\r\n    from email import message\r\n  File \"/usr/lib/python3.5/email/message.py\", line 16, in <module>\r\n    from email import utils\r\n  File \"/usr/lib/python3.5/email/utils.py\", line 40, in <module>\r\n    from email.charset import Charset\r\n  File \"/usr/lib/python3.5/email/charset.py\", line 15, in <module>\r\n    import email.quoprimime\r\n  File \"/usr/lib/python3.5/email/quoprimime.py\", line 44, in <module>\r\n    from string import ascii_letters, digits, hexdigits\r\n  File \"/home/tian/python/string.py\", line 3, in <module>\r\n    for index,string in enumerate(strings):\r\nNameError: name 'strings' is not defined\r\n\r\nOriginal exception was:\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.5/dist-packages/pyquery/__init__.py\", line 7, in <module>\r\n    from .pyquery import PyQuery  # NOQA\r\n  File \"/usr/local/lib/python3.5/dist-packages/pyquery/pyquery.py\", line 7, in <module>\r\n    from .openers import url_opener\r\n  File \"/usr/local/lib/python3.5/dist-packages/pyquery/openers.py\", line 7, in <module>\r\n    from urllib.request import urlopen\r\n  File \"/usr/lib/python3.5/urllib/request.py\", line 88, in <module>\r\n    import http.client\r\n  File \"/usr/lib/python3.5/http/client.py\", line 71, in <module>\r\n    import email.parser\r\n  File \"/usr/lib/python3.5/email/parser.py\", line 12, in <module>\r\n    from email.feedparser import FeedParser, BytesFeedParser\r\n  File \"/usr/lib/python3.5/email/feedparser.py\", line 27, in <module>\r\n    from email import message\r\n  File \"/usr/lib/python3.5/email/message.py\", line 16, in <module>\r\n    from email import utils\r\n  File \"/usr/lib/python3.5/email/utils.py\", line 40, in <module>\r\n    from email.charset import Charset\r\n  File \"/usr/lib/python3.5/email/charset.py\", line 15, in <module>\r\n    import email.quoprimime\r\n  File \"/usr/lib/python3.5/email/quoprimime.py\", line 44, in <module>\r\n    from string import ascii_letters, digits, hexdigits\r\n  File \"/home/tian/python/string.py\", line 3, in <module>\r\n    for index,string in enumerate(strings):\r\nNameError: name 'strings' is not defined\r\n>>> \r\nroot@tian:~# python3\r\nPython 3.5.2+ (default, Sep 22 2016, 12:18:14) \r\n[GCC 6.2.0 20160927] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import pyquery\r\n>>> exit()\r\nroot@tian:~# exit\r\nlogout\r\n\r\n\r\nwhen i use root .this ok import pyquery \r\n\r\n\r\nlook over string.py\r\nroot@tian:~# cat /home/tian/python/string.py\r\n#! /usr/bin/env python \r\nindex = 0\r\nfor index,string in enumerate(strings):\r\n    if 'abc' in string:\r\n        strings[index] = '[censored]'\r\nI want to ask why the terminal is ok!but ide is error. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/187", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/187/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/187/events", "html_url": "https://github.com/gawel/pyquery/issues/187", "id": 323051959, "node_id": "MDU6SXNzdWUzMjMwNTE5NTk=", "number": 187, "title": "xmlns attribute breaks pyquery", "user": {"login": "rockkoca", "id": 13160255, "node_id": "MDQ6VXNlcjEzMTYwMjU1", "avatar_url": "https://avatars0.githubusercontent.com/u/13160255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rockkoca", "html_url": "https://github.com/rockkoca", "followers_url": "https://api.github.com/users/rockkoca/followers", "following_url": "https://api.github.com/users/rockkoca/following{/other_user}", "gists_url": "https://api.github.com/users/rockkoca/gists{/gist_id}", "starred_url": "https://api.github.com/users/rockkoca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rockkoca/subscriptions", "organizations_url": "https://api.github.com/users/rockkoca/orgs", "repos_url": "https://api.github.com/users/rockkoca/repos", "events_url": "https://api.github.com/users/rockkoca/events{/privacy}", "received_events_url": "https://api.github.com/users/rockkoca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-15T03:15:04Z", "updated_at": "2018-05-15T07:32:55Z", "closed_at": "2018-05-15T07:32:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "`h = pq('''<html xmlns=\"http://www.w3.org/1999/xhtml\" ><div ><a href=\"/\" target=\"_blank\" >Main</a></div></html>''')`\r\n`logger.critical(h('a'))`\r\n`cannot get the a tag`\r\n\r\nAfter I replace xmlns=\"http://www.w3.org/1999/xhtml\"  to mlns=\"http://www.w3.org/1999/xhtml\" or remove it entirely, above code works.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/184", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/184/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/184/events", "html_url": "https://github.com/gawel/pyquery/issues/184", "id": 311967036, "node_id": "MDU6SXNzdWUzMTE5NjcwMzY=", "number": 184, "title": "Query returns the full HTML and query result", "user": {"login": "andriyor", "id": 11459840, "node_id": "MDQ6VXNlcjExNDU5ODQw", "avatar_url": "https://avatars0.githubusercontent.com/u/11459840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andriyor", "html_url": "https://github.com/andriyor", "followers_url": "https://api.github.com/users/andriyor/followers", "following_url": "https://api.github.com/users/andriyor/following{/other_user}", "gists_url": "https://api.github.com/users/andriyor/gists{/gist_id}", "starred_url": "https://api.github.com/users/andriyor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andriyor/subscriptions", "organizations_url": "https://api.github.com/users/andriyor/orgs", "repos_url": "https://api.github.com/users/andriyor/repos", "events_url": "https://api.github.com/users/andriyor/events{/privacy}", "received_events_url": "https://api.github.com/users/andriyor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-06T13:01:17Z", "updated_at": "2018-06-08T17:52:21Z", "closed_at": "2018-06-08T17:52:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have following HTML [file](https://gist.github.com/andriyor/09aa3b9aa58c7f62c999b00b52c301ad)\r\n\r\nWhen i execute:\r\n```\r\nwith open(\"sto.html\", 'r') as f:\r\n    contents = f.read()\r\n    doc = pq(contents)\r\n    [print(item.html()) for item in doc.items('div')]\r\n```\r\nI get following [result](https://gist.github.com/andriyor/42697776bdbe499dd93f4cbcdac67ef5) which contains full HTML and query result.\r\nHow to get only query result?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/182", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/182/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/182/events", "html_url": "https://github.com/gawel/pyquery/issues/182", "id": 299036327, "node_id": "MDU6SXNzdWUyOTkwMzYzMjc=", "number": 182, "title": "I can't find a class", "user": {"login": "guiwunsch", "id": 7719098, "node_id": "MDQ6VXNlcjc3MTkwOTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7719098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guiwunsch", "html_url": "https://github.com/guiwunsch", "followers_url": "https://api.github.com/users/guiwunsch/followers", "following_url": "https://api.github.com/users/guiwunsch/following{/other_user}", "gists_url": "https://api.github.com/users/guiwunsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/guiwunsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guiwunsch/subscriptions", "organizations_url": "https://api.github.com/users/guiwunsch/orgs", "repos_url": "https://api.github.com/users/guiwunsch/repos", "events_url": "https://api.github.com/users/guiwunsch/events{/privacy}", "received_events_url": "https://api.github.com/users/guiwunsch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-21T16:24:19Z", "updated_at": "2018-02-23T23:40:37Z", "closed_at": "2018-02-23T18:07:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Why the code above dosn't works?\r\n\r\nThanks.\r\n\r\n```\r\nhtml = '<div class=\"highlightSRO\"><div id=\"imagemhidden\">' \\\r\n           '</div><div id=\"somediv\">07/12/2017 08:21 Liberado sem imposto. ' \\\r\n           'Entrega 40d \u00fateis / BR</div></div>'\r\nd = pyquery.PyQuery(html)\r\nstatus = d('.highlightSRO')\r\nprint(status.html())\r\nprint(status.text())\r\n```\r\n\r\nIt prints nothing.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/181", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/181/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/181/events", "html_url": "https://github.com/gawel/pyquery/issues/181", "id": 295125362, "node_id": "MDU6SXNzdWUyOTUxMjUzNjI=", "number": 181, "title": "In new version 1.4.0, when extract text which have newline, the newline character is omitted", "user": {"login": "WindSoilder", "id": 22256154, "node_id": "MDQ6VXNlcjIyMjU2MTU0", "avatar_url": "https://avatars0.githubusercontent.com/u/22256154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WindSoilder", "html_url": "https://github.com/WindSoilder", "followers_url": "https://api.github.com/users/WindSoilder/followers", "following_url": "https://api.github.com/users/WindSoilder/following{/other_user}", "gists_url": "https://api.github.com/users/WindSoilder/gists{/gist_id}", "starred_url": "https://api.github.com/users/WindSoilder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WindSoilder/subscriptions", "organizations_url": "https://api.github.com/users/WindSoilder/orgs", "repos_url": "https://api.github.com/users/WindSoilder/repos", "events_url": "https://api.github.com/users/WindSoilder/events{/privacy}", "received_events_url": "https://api.github.com/users/WindSoilder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-07T12:48:58Z", "updated_at": "2018-02-08T15:58:21Z", "closed_at": "2018-02-08T15:58:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I found there are different behavior between 1.4.0 and previous version 1.3.0\r\nTake the following html code as example:\r\n\r\n    <code>import json\r\n     j = json.loads('{\"one\" : \"1\", \"two\" : \"2\", \"three\" : \"3\"}')\r\n    print j['two']\r\n    </code>\r\n\r\nand given the relative code to output the content text of `code` element (I save the html code into 'test2.html' file):\r\n\r\n    from pyquery import PyQuery as pq\r\n\r\n    with open('test2.html', 'rb') as f:\r\n        c = f.read()\r\n    html = pq(c)\r\n    code = html('code')\r\n    print(code.eq(0).text())\r\n\r\nIn the new version `1.4.0`, the output is compressed without new lines(which is not happened in `1.3.0`):\r\n\r\n    import json j = json.loads('{\"one\" : \"1\", \"two\" : \"2\", \"three\" : \"3\"}') print j['two']\r\n\r\nCan anyone tell me is that the new feature in version `1.4.0`?  Thanks very much :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/177", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/177/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/177/events", "html_url": "https://github.com/gawel/pyquery/issues/177", "id": 285087457, "node_id": "MDU6SXNzdWUyODUwODc0NTc=", "number": 177, "title": "<br> to newline", "user": {"login": "Soaku", "id": 28842854, "node_id": "MDQ6VXNlcjI4ODQyODU0", "avatar_url": "https://avatars3.githubusercontent.com/u/28842854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Soaku", "html_url": "https://github.com/Soaku", "followers_url": "https://api.github.com/users/Soaku/followers", "following_url": "https://api.github.com/users/Soaku/following{/other_user}", "gists_url": "https://api.github.com/users/Soaku/gists{/gist_id}", "starred_url": "https://api.github.com/users/Soaku/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Soaku/subscriptions", "organizations_url": "https://api.github.com/users/Soaku/orgs", "repos_url": "https://api.github.com/users/Soaku/repos", "events_url": "https://api.github.com/users/Soaku/events{/privacy}", "received_events_url": "https://api.github.com/users/Soaku/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-29T12:45:01Z", "updated_at": "2018-01-11T19:25:49Z", "closed_at": "2018-01-11T19:25:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "When parsing string like this:\r\n\r\n```\r\n<p>foo<br />\r\nbar</p>\r\n```\r\n\r\nusing jQuery `$(\"p\").text()` I get:\r\n\r\n```\r\ntest\r\ntest2\r\n```\r\n\r\nbut here, using `pq(\"p\").text()`, I get:\r\n\r\n```\r\ntest test2\r\n```\r\n\r\nCould this be fixed? Is there any workaround for this issue?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/176", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/176/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/176/events", "html_url": "https://github.com/gawel/pyquery/issues/176", "id": 284767251, "node_id": "MDU6SXNzdWUyODQ3NjcyNTE=", "number": 176, "title": "Add .has", "user": {"login": "Soaku", "id": 28842854, "node_id": "MDQ6VXNlcjI4ODQyODU0", "avatar_url": "https://avatars3.githubusercontent.com/u/28842854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Soaku", "html_url": "https://github.com/Soaku", "followers_url": "https://api.github.com/users/Soaku/followers", "following_url": "https://api.github.com/users/Soaku/following{/other_user}", "gists_url": "https://api.github.com/users/Soaku/gists{/gist_id}", "starred_url": "https://api.github.com/users/Soaku/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Soaku/subscriptions", "organizations_url": "https://api.github.com/users/Soaku/orgs", "repos_url": "https://api.github.com/users/Soaku/repos", "events_url": "https://api.github.com/users/Soaku/events{/privacy}", "received_events_url": "https://api.github.com/users/Soaku/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-27T17:46:34Z", "updated_at": "2018-11-21T08:26:31Z", "closed_at": "2018-11-21T08:26:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm missing the `has` method from jQuery. Could you please, add it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/175", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/175/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/175/events", "html_url": "https://github.com/gawel/pyquery/issues/175", "id": 284551396, "node_id": "MDU6SXNzdWUyODQ1NTEzOTY=", "number": 175, "title": "How to select a second element?", "user": {"login": "Andru1999", "id": 15606693, "node_id": "MDQ6VXNlcjE1NjA2Njkz", "avatar_url": "https://avatars3.githubusercontent.com/u/15606693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andru1999", "html_url": "https://github.com/Andru1999", "followers_url": "https://api.github.com/users/Andru1999/followers", "following_url": "https://api.github.com/users/Andru1999/following{/other_user}", "gists_url": "https://api.github.com/users/Andru1999/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andru1999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andru1999/subscriptions", "organizations_url": "https://api.github.com/users/Andru1999/orgs", "repos_url": "https://api.github.com/users/Andru1999/repos", "events_url": "https://api.github.com/users/Andru1999/events{/privacy}", "received_events_url": "https://api.github.com/users/Andru1999/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-26T12:51:54Z", "updated_at": "2017-12-26T12:59:39Z", "closed_at": "2017-12-26T12:59:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I get an object with a specified number? I tried to get the element using the following construct\r\n`page('.w-post-data)[1]` but I got instanse of the HtmlElement. This class I had gotten when I was trying iterated on page('.w-post-data). How I can solf this problem? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/174", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/174/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/174/events", "html_url": "https://github.com/gawel/pyquery/issues/174", "id": 276699487, "node_id": "MDU6SXNzdWUyNzY2OTk0ODc=", "number": 174, "title": "unwrap\uff1f", "user": {"login": "indiboy", "id": 5752024, "node_id": "MDQ6VXNlcjU3NTIwMjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/5752024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/indiboy", "html_url": "https://github.com/indiboy", "followers_url": "https://api.github.com/users/indiboy/followers", "following_url": "https://api.github.com/users/indiboy/following{/other_user}", "gists_url": "https://api.github.com/users/indiboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/indiboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/indiboy/subscriptions", "organizations_url": "https://api.github.com/users/indiboy/orgs", "repos_url": "https://api.github.com/users/indiboy/repos", "events_url": "https://api.github.com/users/indiboy/events{/privacy}", "received_events_url": "https://api.github.com/users/indiboy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-24T21:14:26Z", "updated_at": "2017-12-27T17:53:20Z", "closed_at": "2017-12-27T17:53:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "unwrap", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/173", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/173/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/173/events", "html_url": "https://github.com/gawel/pyquery/issues/173", "id": 254851918, "node_id": "MDU6SXNzdWUyNTQ4NTE5MTg=", "number": 173, "title": ".text() crashes when the text contains non-ASCII characters", "user": {"login": "damangio", "id": 5649401, "node_id": "MDQ6VXNlcjU2NDk0MDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/5649401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/damangio", "html_url": "https://github.com/damangio", "followers_url": "https://api.github.com/users/damangio/followers", "following_url": "https://api.github.com/users/damangio/following{/other_user}", "gists_url": "https://api.github.com/users/damangio/gists{/gist_id}", "starred_url": "https://api.github.com/users/damangio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/damangio/subscriptions", "organizations_url": "https://api.github.com/users/damangio/orgs", "repos_url": "https://api.github.com/users/damangio/repos", "events_url": "https://api.github.com/users/damangio/events{/privacy}", "received_events_url": "https://api.github.com/users/damangio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-03T04:15:33Z", "updated_at": "2017-09-03T04:47:50Z", "closed_at": "2017-09-03T04:36:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using Python 2.7.\r\n\r\nExample HTML file:\r\n```html\r\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML+RDFa 1.0//EN\"\r\n  \"http://www.w3.org/MarkUp/DTD/xhtml-rdfa-1.dtd\">\r\n<html>\r\n    <head>\r\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    </head>\r\n    <body>\r\n        Fran\u00e7ais\r\n    </body>\r\n</html>\r\n```\r\nExample Python file:\r\n```python\r\nfrom pyquery import PyQuery\r\n\r\npq = PyQuery(filename='example.html')\r\nprint pq('body').text()\r\n```\r\nAnother example Python file, attempting to apply [this solution](https://github.com/gawel/pyquery/issues/31#issuecomment-60779459):\r\n```python\r\nfrom lxml.html import HTMLParser\r\nfrom lxml.html import fromstring\r\nfrom pyquery import PyQuery\r\n\r\nUTF8_PARSER = HTMLParser(encoding='utf-8')\r\n\r\nwith open('example.html') as filehandler:\r\n    file_contents = filehandler.read()\r\n\r\npq = PyQuery(fromstring(file_contents, parser=UTF8_PARSER))\r\nprint pq('body').text()\r\n```\r\nBoth examples give this traceback (line number from example 1):\r\n```\r\nTraceback (most recent call last):\r\n  File \"example1.py\", line 4, in <module>\r\n    print pq('body').text()\r\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\xe7' in position 2: ordinal not in range(128)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/172", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/172/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/172/events", "html_url": "https://github.com/gawel/pyquery/issues/172", "id": 250638744, "node_id": "MDU6SXNzdWUyNTA2Mzg3NDQ=", "number": 172, "title": "How to read a local file without Unicode errors?", "user": {"login": "rn4n", "id": 3982052, "node_id": "MDQ6VXNlcjM5ODIwNTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3982052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rn4n", "html_url": "https://github.com/rn4n", "followers_url": "https://api.github.com/users/rn4n/followers", "following_url": "https://api.github.com/users/rn4n/following{/other_user}", "gists_url": "https://api.github.com/users/rn4n/gists{/gist_id}", "starred_url": "https://api.github.com/users/rn4n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rn4n/subscriptions", "organizations_url": "https://api.github.com/users/rn4n/orgs", "repos_url": "https://api.github.com/users/rn4n/repos", "events_url": "https://api.github.com/users/rn4n/events{/privacy}", "received_events_url": "https://api.github.com/users/rn4n/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-16T14:03:20Z", "updated_at": "2017-08-22T17:01:26Z", "closed_at": "2017-08-22T17:00:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have this file:\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"iso-8859-1\" ?>\r\n<tests>\r\n    <test>...</test>\r\n    <test>...</test>\r\n</tests>\r\n```\r\n\r\nAnd I'm getting an unicode error:\r\n> ValueError: Unicode strings with encoding declaration are not supported.\r\n\r\nThe problem is the line `<?xml version=\"1.0\" encoding=\"iso-8859-1\" ?>`, ok.\r\nThere's any way to load the file without read the content, remove the first line and concatenate the rest? Maybe a constructor argument or a method? How can I load this file without unicode errors?\r\n\r\n```python\r\nwith open('myawesomefile.xml') as xml:\r\n    document = pq(xml.read(), parser='xml') # error\r\n    print(document)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/170", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/170/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/170/events", "html_url": "https://github.com/gawel/pyquery/issues/170", "id": 235757997, "node_id": "MDU6SXNzdWUyMzU3NTc5OTc=", "number": 170, "title": "The class type of element is different with that of the element collection", "user": {"login": "sasrazor", "id": 29417960, "node_id": "MDQ6VXNlcjI5NDE3OTYw", "avatar_url": "https://avatars0.githubusercontent.com/u/29417960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sasrazor", "html_url": "https://github.com/sasrazor", "followers_url": "https://api.github.com/users/sasrazor/followers", "following_url": "https://api.github.com/users/sasrazor/following{/other_user}", "gists_url": "https://api.github.com/users/sasrazor/gists{/gist_id}", "starred_url": "https://api.github.com/users/sasrazor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sasrazor/subscriptions", "organizations_url": "https://api.github.com/users/sasrazor/orgs", "repos_url": "https://api.github.com/users/sasrazor/repos", "events_url": "https://api.github.com/users/sasrazor/events{/privacy}", "received_events_url": "https://api.github.com/users/sasrazor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-14T04:14:50Z", "updated_at": "2017-06-15T08:19:12Z", "closed_at": "2017-06-14T07:07:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "**For example:**\r\n`dom=pq(\"<html><body><div id='r1'></div><div id='r2'></div><div id='r3'></div></body></html>\")`\r\n`divnodelist=dom('div')`\r\n`for divnode in divnodelist:`\r\n`       print(\"class of divnode is \"+type(divnode))`\r\n`       print(\"class of divnodelist is \"+type(divnodelist))`\r\n\r\n**The result is as follows:**\r\n_class of divnode is <class 'lxml.etree._Element'>_\r\n_class of divnodelist is <class 'pyquery.pyquery.PyQuery'>_\r\n......\r\n\r\nDue to the class of divnode is not PyQuery, I can not use the jquery related methods, such as:\r\n`divnode.attr('id')`\r\nWhen I use like the above, an error occurs: \r\n\r\n> AttributeError: 'lxml.etree._Element' object has no attribute 'attr'\r\n\r\nAn alternative right way is changing the class type of the divnode into PyQuery as follows:\r\n\r\n`divnode=pq(divnode)`\r\n`divnode.attr('id')`\r\n\r\nThough it's just an additional line, for a lazy guy who  won't write one more letter, it's a trouble and not perfect.  \r\n\r\n**My suggestion is**, since the collection is a PyQuery collection, so for each element in the collection , its class should also be PyQuery. \r\n \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/169", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/169/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/169/events", "html_url": "https://github.com/gawel/pyquery/issues/169", "id": 233619556, "node_id": "MDU6SXNzdWUyMzM2MTk1NTY=", "number": 169, "title": "Get all child-nodes except the last two", "user": {"login": "Sicabol", "id": 214936, "node_id": "MDQ6VXNlcjIxNDkzNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/214936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sicabol", "html_url": "https://github.com/Sicabol", "followers_url": "https://api.github.com/users/Sicabol/followers", "following_url": "https://api.github.com/users/Sicabol/following{/other_user}", "gists_url": "https://api.github.com/users/Sicabol/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sicabol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sicabol/subscriptions", "organizations_url": "https://api.github.com/users/Sicabol/orgs", "repos_url": "https://api.github.com/users/Sicabol/repos", "events_url": "https://api.github.com/users/Sicabol/events{/privacy}", "received_events_url": "https://api.github.com/users/Sicabol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-05T15:09:51Z", "updated_at": "2017-10-21T10:46:22Z", "closed_at": "2017-10-21T10:46:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi !\r\nI was trying to get the child-nodes of a specific node, but getting rid of the last two (used for signature and other generic information). As I don't know how many children are in this node, I've tried this:\r\n`.myclass > *:lt(-3)`\r\nIt works well in the PHP-equivalent of pyquery (phpQuery) - even if I am a bit surprised by the \"-3\" instead of \"-2\" - but apparently it is not possible on pyquery. The result is empty.\r\nIf you have a workaround\u2026 :)\r\nThanks !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/168", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/168/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/168/events", "html_url": "https://github.com/gawel/pyquery/issues/168", "id": 231768910, "node_id": "MDU6SXNzdWUyMzE3Njg5MTA=", "number": 168, "title": "outer_html () returns incorrect value", "user": {"login": "lesssn", "id": 15074298, "node_id": "MDQ6VXNlcjE1MDc0Mjk4", "avatar_url": "https://avatars2.githubusercontent.com/u/15074298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lesssn", "html_url": "https://github.com/lesssn", "followers_url": "https://api.github.com/users/lesssn/followers", "following_url": "https://api.github.com/users/lesssn/following{/other_user}", "gists_url": "https://api.github.com/users/lesssn/gists{/gist_id}", "starred_url": "https://api.github.com/users/lesssn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lesssn/subscriptions", "organizations_url": "https://api.github.com/users/lesssn/orgs", "repos_url": "https://api.github.com/users/lesssn/repos", "events_url": "https://api.github.com/users/lesssn/events{/privacy}", "received_events_url": "https://api.github.com/users/lesssn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-27T02:36:58Z", "updated_at": "2018-01-02T14:48:40Z", "closed_at": "2017-10-21T10:53:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "- When the text of the tag is empty, outer_html () outputs self-closing tag, lead to the browser may parse error.\r\n```\r\n>> PyQuery('<a></a>').outer_html()\r\n>> '<a/>'\r\n```\r\n\r\n- Look from the source code is use of the etree. Tostring () method, the method of parameter \"method\" the default value is \"XML\", when set to 'HTML' can normal parsing\r\n```\r\n return etree.tostring(e0, encoding=unicode)\r\n```\r\n```\r\ndef tostring(element_or_tree, encoding=None, method=\"xml\", xml_declaration=None, pretty_print=False, with_tail=True, standalone=None, doctype=None, exclusive=False, with_comments=True, inclusive_ns_prefixes=None): # real signature unknown; restored from __doc__\r\n```\r\n\r\n- I wonder if there should be add the \"method\" parameter to outer_html() method , used to set the parse format\r\n```\r\n    @with_camel_case_alias\r\n    def outer_html(self, method='html'):\r\n        \"\"\"Get the html representation of the first selected element::\r\n\r\n            >>> d = PyQuery('<div><span class=\"red\">toto</span> rocks</div>')\r\n            >>> print(d('span'))\r\n            <span class=\"red\">toto</span> rocks\r\n            >>> print(d('span').outer_html())\r\n            <span class=\"red\">toto</span>\r\n            >>> print(d('span').outerHtml())\r\n            <span class=\"red\">toto</span>\r\n\r\n            >>> S = PyQuery('<p>Only <b>me</b> & myself</p>')\r\n            >>> print(S('b').outer_html())\r\n            <b>me</b>\r\n\r\n        ..\r\n        \"\"\"\r\n\r\n        if not self:\r\n            return None\r\n        e0 = self[0]\r\n        if e0.tail:\r\n            e0 = deepcopy(e0)\r\n            e0.tail = ''\r\n        return etree.tostring(e0, encoding=unicode, method=method)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/165", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/165/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/165/events", "html_url": "https://github.com/gawel/pyquery/issues/165", "id": 212094857, "node_id": "MDU6SXNzdWUyMTIwOTQ4NTc=", "number": 165, "title": "nextUntil() and andSelf()?", "user": {"login": "sibben", "id": 4610714, "node_id": "MDQ6VXNlcjQ2MTA3MTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4610714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sibben", "html_url": "https://github.com/sibben", "followers_url": "https://api.github.com/users/sibben/followers", "following_url": "https://api.github.com/users/sibben/following{/other_user}", "gists_url": "https://api.github.com/users/sibben/gists{/gist_id}", "starred_url": "https://api.github.com/users/sibben/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sibben/subscriptions", "organizations_url": "https://api.github.com/users/sibben/orgs", "repos_url": "https://api.github.com/users/sibben/repos", "events_url": "https://api.github.com/users/sibben/events{/privacy}", "received_events_url": "https://api.github.com/users/sibben/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-06T11:27:24Z", "updated_at": "2020-04-11T01:47:36Z", "closed_at": "2018-11-21T08:28:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Any support or workarounds for the `nextUntil()` and `andSelf()` jQuery methods?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/164", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/164/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/164/events", "html_url": "https://github.com/gawel/pyquery/issues/164", "id": 195808694, "node_id": "MDU6SXNzdWUxOTU4MDg2OTQ=", "number": 164, "title": "Docker installation issue", "user": {"login": "ipretender", "id": 13842994, "node_id": "MDQ6VXNlcjEzODQyOTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/13842994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ipretender", "html_url": "https://github.com/ipretender", "followers_url": "https://api.github.com/users/ipretender/followers", "following_url": "https://api.github.com/users/ipretender/following{/other_user}", "gists_url": "https://api.github.com/users/ipretender/gists{/gist_id}", "starred_url": "https://api.github.com/users/ipretender/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ipretender/subscriptions", "organizations_url": "https://api.github.com/users/ipretender/orgs", "repos_url": "https://api.github.com/users/ipretender/repos", "events_url": "https://api.github.com/users/ipretender/events{/privacy}", "received_events_url": "https://api.github.com/users/ipretender/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-15T13:44:07Z", "updated_at": "2016-12-15T14:24:49Z", "closed_at": "2016-12-15T14:24:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I cannot install pyquery on brand new docker image from ubuntu:latest\r\ncompilation terminated.\r\n    *********************************************************************************\r\n    Could not find function xmlCheckVersion in library libxml2. Is libxml2 installed?\r\n    *********************************************************************************\r\n    error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\r\n\r\nafter a few attempts to install libxml2 still have diff error messages", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/163", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/163/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/163/events", "html_url": "https://github.com/gawel/pyquery/issues/163", "id": 190648514, "node_id": "MDU6SXNzdWUxOTA2NDg1MTQ=", "number": 163, "title": "Impossible to get an xml tag That have as name html <HR > tag ", "user": {"login": "071792", "id": 23619091, "node_id": "MDQ6VXNlcjIzNjE5MDkx", "avatar_url": "https://avatars1.githubusercontent.com/u/23619091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/071792", "html_url": "https://github.com/071792", "followers_url": "https://api.github.com/users/071792/followers", "following_url": "https://api.github.com/users/071792/following{/other_user}", "gists_url": "https://api.github.com/users/071792/gists{/gist_id}", "starred_url": "https://api.github.com/users/071792/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/071792/subscriptions", "organizations_url": "https://api.github.com/users/071792/orgs", "repos_url": "https://api.github.com/users/071792/repos", "events_url": "https://api.github.com/users/071792/events{/privacy}", "received_events_url": "https://api.github.com/users/071792/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-11-21T08:27:54Z", "updated_at": "2017-10-21T11:00:25Z", "closed_at": "2017-10-21T11:00:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "My xml document is like That : \r\n\r\n......\r\n<product>\r\n   .....\r\n   <HR >\r\n      < value > valuex </value>\r\n   </HR >\r\n</product>\r\n....\r\nAnd when i print my pyquery object the tag <HR > change to < hr />\r\nHow Can i tell pyquery to not use html syntaxe\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/160", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/160/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/160/events", "html_url": "https://github.com/gawel/pyquery/issues/160", "id": 183247377, "node_id": "MDU6SXNzdWUxODMyNDczNzc=", "number": 160, "title": "Why can't I get the contents of a node?", "user": {"login": "prescod", "id": 22091, "node_id": "MDQ6VXNlcjIyMDkx", "avatar_url": "https://avatars1.githubusercontent.com/u/22091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prescod", "html_url": "https://github.com/prescod", "followers_url": "https://api.github.com/users/prescod/followers", "following_url": "https://api.github.com/users/prescod/following{/other_user}", "gists_url": "https://api.github.com/users/prescod/gists{/gist_id}", "starred_url": "https://api.github.com/users/prescod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prescod/subscriptions", "organizations_url": "https://api.github.com/users/prescod/orgs", "repos_url": "https://api.github.com/users/prescod/repos", "events_url": "https://api.github.com/users/prescod/events{/privacy}", "received_events_url": "https://api.github.com/users/prescod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-16T03:52:52Z", "updated_at": "2016-10-16T04:04:45Z", "closed_at": "2016-10-16T04:04:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nhtml=PyQuery(\"<div><p>a<B>b</B>c</p></div>\")\nparas = html(\"p\")\nprint(paras[0].contents())\n```\n\nI've seen:\n\nAttributeError: 'lxml.etree._Element' object has no attribute 'contents'\n\nAnd:\n\nAttributeError: 'HtmlElement' object has no attribute 'contents'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/159", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/159/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/159/events", "html_url": "https://github.com/gawel/pyquery/issues/159", "id": 183246925, "node_id": "MDU6SXNzdWUxODMyNDY5MjU=", "number": 159, "title": "Cannot find equivalent for JQuery .contents method", "user": {"login": "prescod", "id": 22091, "node_id": "MDQ6VXNlcjIyMDkx", "avatar_url": "https://avatars1.githubusercontent.com/u/22091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prescod", "html_url": "https://github.com/prescod", "followers_url": "https://api.github.com/users/prescod/followers", "following_url": "https://api.github.com/users/prescod/following{/other_user}", "gists_url": "https://api.github.com/users/prescod/gists{/gist_id}", "starred_url": "https://api.github.com/users/prescod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prescod/subscriptions", "organizations_url": "https://api.github.com/users/prescod/orgs", "repos_url": "https://api.github.com/users/prescod/repos", "events_url": "https://api.github.com/users/prescod/events{/privacy}", "received_events_url": "https://api.github.com/users/prescod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-10-16T03:37:37Z", "updated_at": "2016-10-16T03:38:50Z", "closed_at": "2016-10-16T03:38:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://api.jquery.com/contents/\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/150", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/150/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/150/events", "html_url": "https://github.com/gawel/pyquery/issues/150", "id": 182338357, "node_id": "MDU6SXNzdWUxODIzMzgzNTc=", "number": 150, "title": "Cannot .attr() an empty string attribute", "user": {"login": "asottile", "id": 1810591, "node_id": "MDQ6VXNlcjE4MTA1OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1810591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asottile", "html_url": "https://github.com/asottile", "followers_url": "https://api.github.com/users/asottile/followers", "following_url": "https://api.github.com/users/asottile/following{/other_user}", "gists_url": "https://api.github.com/users/asottile/gists{/gist_id}", "starred_url": "https://api.github.com/users/asottile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asottile/subscriptions", "organizations_url": "https://api.github.com/users/asottile/orgs", "repos_url": "https://api.github.com/users/asottile/repos", "events_url": "https://api.github.com/users/asottile/events{/privacy}", "received_events_url": "https://api.github.com/users/asottile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-10-11T18:27:55Z", "updated_at": "2016-10-11T19:37:38Z", "closed_at": "2016-10-11T19:37:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## jquery\n\n``` js\n>>> $('<div>').attr('value', '')[0].outerHTML\n'<div value=\"\"></div>'\n```\n## pyquery\n\n``` python\n>>> pyquery.PyQuery('<div>').attr('value', '').outer_html()\nu'<div/>'\n```\n## expected\n\n``` python\npyquery.PyQuery('<div>').attr('value', '').outer_html()\nu'<div value=\"\"/>'\n```\n## triage\n\nSeems to be the second half of the if statement here: https://github.com/gawel/pyquery/blob/834da980b83f91123e5cb1917cb7d8a081064e5b/pyquery/pyquery.py#L772\n\nDo we remove this? (All the tests pass without it)\n## workaround\n\n``` python\nfor el in pyquery_obj:\n    el.attrib['value'] = ''\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/148", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/148/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/148/events", "html_url": "https://github.com/gawel/pyquery/issues/148", "id": 182283580, "node_id": "MDU6SXNzdWUxODIyODM1ODA=", "number": 148, "title": "ImportError: cannot import name PyQuery", "user": {"login": "alxpereira", "id": 447895, "node_id": "MDQ6VXNlcjQ0Nzg5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/447895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alxpereira", "html_url": "https://github.com/alxpereira", "followers_url": "https://api.github.com/users/alxpereira/followers", "following_url": "https://api.github.com/users/alxpereira/following{/other_user}", "gists_url": "https://api.github.com/users/alxpereira/gists{/gist_id}", "starred_url": "https://api.github.com/users/alxpereira/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alxpereira/subscriptions", "organizations_url": "https://api.github.com/users/alxpereira/orgs", "repos_url": "https://api.github.com/users/alxpereira/repos", "events_url": "https://api.github.com/users/alxpereira/events{/privacy}", "received_events_url": "https://api.github.com/users/alxpereira/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-10-11T14:45:15Z", "updated_at": "2017-09-29T08:44:06Z", "closed_at": "2016-10-12T16:46:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey\nI'm trying to import pyquery as I did hundreds on time before, and it's not working. It looks like related to the Mac OS Sierra. (module installed with pip and up-to-date)\n\n> from pyquery import PyQuery as pq\n\nAnd got an error on the namespacing\n\n> ImportError: cannot import name PyQuery\n\nAny idea ? Thx !\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/147", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/147/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/147/events", "html_url": "https://github.com/gawel/pyquery/issues/147", "id": 182233443, "node_id": "MDU6SXNzdWUxODIyMzM0NDM=", "number": 147, "title": "val() on nothing raises exception", "user": {"login": "levkowetz", "id": 2189511, "node_id": "MDQ6VXNlcjIxODk1MTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2189511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/levkowetz", "html_url": "https://github.com/levkowetz", "followers_url": "https://api.github.com/users/levkowetz/followers", "following_url": "https://api.github.com/users/levkowetz/following{/other_user}", "gists_url": "https://api.github.com/users/levkowetz/gists{/gist_id}", "starred_url": "https://api.github.com/users/levkowetz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/levkowetz/subscriptions", "organizations_url": "https://api.github.com/users/levkowetz/orgs", "repos_url": "https://api.github.com/users/levkowetz/repos", "events_url": "https://api.github.com/users/levkowetz/events{/privacy}", "received_events_url": "https://api.github.com/users/levkowetz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-11T10:52:39Z", "updated_at": "2016-10-12T13:36:26Z", "closed_at": "2016-10-11T17:01:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "This returns None under 1.2.13, but raises an exception under 1.2.14.  Should it?\n\n`\nfrom pyquery import PyQuery\n\nd = PyQuery('<form><input attr=\"foo\"/></form>')\nprint(d.find('input[attr=bar]').val())\n`\n\n`\nTraceback (most recent call last):\n  File \"bug.py\", line 4, in <module>\n    print(d.find('input[attr=bar]').val())\n  File \"/home/henrik/src/db/trunk/local/lib/python2.7/site-packages/pyquery/pyquery.py\", line 1002, in val\n    return _get_value(self[0])\nIndexError: list index out of range\n`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/146", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/146/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/146/events", "html_url": "https://github.com/gawel/pyquery/issues/146", "id": 174656943, "node_id": "MDU6SXNzdWUxNzQ2NTY5NDM=", "number": 146, "title": "I can't import pyquery module in scrapy project", "user": {"login": "chengxxxxwang", "id": 14540854, "node_id": "MDQ6VXNlcjE0NTQwODU0", "avatar_url": "https://avatars1.githubusercontent.com/u/14540854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chengxxxxwang", "html_url": "https://github.com/chengxxxxwang", "followers_url": "https://api.github.com/users/chengxxxxwang/followers", "following_url": "https://api.github.com/users/chengxxxxwang/following{/other_user}", "gists_url": "https://api.github.com/users/chengxxxxwang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chengxxxxwang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chengxxxxwang/subscriptions", "organizations_url": "https://api.github.com/users/chengxxxxwang/orgs", "repos_url": "https://api.github.com/users/chengxxxxwang/repos", "events_url": "https://api.github.com/users/chengxxxxwang/events{/privacy}", "received_events_url": "https://api.github.com/users/chengxxxxwang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-02T00:38:15Z", "updated_at": "2016-09-02T01:24:19Z", "closed_at": "2016-09-02T01:24:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't import pyquery module in scrapy project ,however I can use it in other project successfully.\nMy OS is OSX EI Capitan 10.11.4 version\n<img width=\"553\" alt=\"2016-09-02 8 36 33\" src=\"https://cloud.githubusercontent.com/assets/14540854/18188905/84149cb6-70e8-11e6-93f5-e59f439f580d.png\">\n<img width=\"562\" alt=\"2016-09-02 8 36 47\" src=\"https://cloud.githubusercontent.com/assets/14540854/18188910/8b918e4a-70e8-11e6-890b-c24275353222.png\">\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/145", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/145/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/145/events", "html_url": "https://github.com/gawel/pyquery/issues/145", "id": 174317496, "node_id": "MDU6SXNzdWUxNzQzMTc0OTY=", "number": 145, "title": "PEP 396 -- Module Version Numbers", "user": {"login": "velaia", "id": 1515904, "node_id": "MDQ6VXNlcjE1MTU5MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1515904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/velaia", "html_url": "https://github.com/velaia", "followers_url": "https://api.github.com/users/velaia/followers", "following_url": "https://api.github.com/users/velaia/following{/other_user}", "gists_url": "https://api.github.com/users/velaia/gists{/gist_id}", "starred_url": "https://api.github.com/users/velaia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/velaia/subscriptions", "organizations_url": "https://api.github.com/users/velaia/orgs", "repos_url": "https://api.github.com/users/velaia/repos", "events_url": "https://api.github.com/users/velaia/events{/privacy}", "received_events_url": "https://api.github.com/users/velaia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-31T16:22:23Z", "updated_at": "2016-10-10T21:26:12Z", "closed_at": "2016-10-10T21:26:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to find out which version of module is installed on my machine I had a hard time. Usually a simple \n\n```\nimport module\nmodule.__version__\n```\n\ndoes the job.\nhttps://www.python.org/dev/peps/pep-0396/ gives recommendations.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/143", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/143/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/143/events", "html_url": "https://github.com/gawel/pyquery/issues/143", "id": 171827897, "node_id": "MDU6SXNzdWUxNzE4Mjc4OTc=", "number": 143, "title": "extend doesn't return a pq object", "user": {"login": "djay", "id": 41700, "node_id": "MDQ6VXNlcjQxNzAw", "avatar_url": "https://avatars2.githubusercontent.com/u/41700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djay", "html_url": "https://github.com/djay", "followers_url": "https://api.github.com/users/djay/followers", "following_url": "https://api.github.com/users/djay/following{/other_user}", "gists_url": "https://api.github.com/users/djay/gists{/gist_id}", "starred_url": "https://api.github.com/users/djay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djay/subscriptions", "organizations_url": "https://api.github.com/users/djay/orgs", "repos_url": "https://api.github.com/users/djay/repos", "events_url": "https://api.github.com/users/djay/events{/privacy}", "received_events_url": "https://api.github.com/users/djay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-18T06:35:53Z", "updated_at": "2016-10-10T21:30:23Z", "closed_at": "2016-10-10T21:30:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Maybe I misunderstand, but isn't it about including more elements into the current selection so can be used for chaining?\n\nhttps://github.com/gawel/pyquery/blob/master/pyquery/pyquery.py#L283\n\nie shouldn't this work? `pq('#myid').extend(pq('#anotherid')).html(\"<span/>\")`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/142", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/142/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/142/events", "html_url": "https://github.com/gawel/pyquery/issues/142", "id": 168082004, "node_id": "MDU6SXNzdWUxNjgwODIwMDQ=", "number": 142, "title": "inspect.getargspec is deprecated in Python 3", "user": {"login": "cdman", "id": 838250, "node_id": "MDQ6VXNlcjgzODI1MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/838250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdman", "html_url": "https://github.com/cdman", "followers_url": "https://api.github.com/users/cdman/followers", "following_url": "https://api.github.com/users/cdman/following{/other_user}", "gists_url": "https://api.github.com/users/cdman/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdman/subscriptions", "organizations_url": "https://api.github.com/users/cdman/orgs", "repos_url": "https://api.github.com/users/cdman/repos", "events_url": "https://api.github.com/users/cdman/events{/privacy}", "received_events_url": "https://api.github.com/users/cdman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-28T12:20:40Z", "updated_at": "2016-10-22T09:53:35Z", "closed_at": "2016-10-22T09:53:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "With python 3 I get the following warning:\n\n```\n.../site-packages/pyquery/pyquery.py:50: DeprecationWarning: inspect.getargspec() is deprecated, use inspect.signature() instead\n```\n\nThis seems to be the code in question:\n\n``` python\ndef build_camel_case_aliases(PyQuery):\n    \"\"\"add camelcase aliases to PyQuery\"\"\"\n    for alias in _camel_case_aliases:\n        parts = list(alias.split('_'))\n        name = parts[0] + ''.join([p.title() for p in parts[1:]])\n        func = getattr(PyQuery, alias)\n        f = types.FunctionType(func_code(func), func_globals(func),\n                               name, inspect.getargspec(func).defaults) # <-- HERE\n        f.__doc__ = (\n            'Alias for :func:`~pyquery.pyquery.PyQuery.%s`') % func.__name__\n        setattr(PyQuery, name, f.__get__(None, PyQuery))\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/141", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/141/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/141/events", "html_url": "https://github.com/gawel/pyquery/issues/141", "id": 166985002, "node_id": "MDU6SXNzdWUxNjY5ODUwMDI=", "number": 141, "title": "Support for writing XML documents", "user": {"login": "shry15harsh", "id": 3100980, "node_id": "MDQ6VXNlcjMxMDA5ODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3100980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shry15harsh", "html_url": "https://github.com/shry15harsh", "followers_url": "https://api.github.com/users/shry15harsh/followers", "following_url": "https://api.github.com/users/shry15harsh/following{/other_user}", "gists_url": "https://api.github.com/users/shry15harsh/gists{/gist_id}", "starred_url": "https://api.github.com/users/shry15harsh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shry15harsh/subscriptions", "organizations_url": "https://api.github.com/users/shry15harsh/orgs", "repos_url": "https://api.github.com/users/shry15harsh/repos", "events_url": "https://api.github.com/users/shry15harsh/events{/privacy}", "received_events_url": "https://api.github.com/users/shry15harsh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-22T07:19:27Z", "updated_at": "2016-10-22T09:56:09Z", "closed_at": "2016-10-22T09:56:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\n\nlxml supports writing XML documents using ElementTree APIs. Does pyquery also support it? If not, are you planning to do so in future?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/140", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/140/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/140/events", "html_url": "https://github.com/gawel/pyquery/issues/140", "id": 163591746, "node_id": "MDU6SXNzdWUxNjM1OTE3NDY=", "number": 140, "title": "Error in title occurrence when title include symbols such as \"<\" or \">\"", "user": {"login": "lixiuna0908", "id": 12512226, "node_id": "MDQ6VXNlcjEyNTEyMjI2", "avatar_url": "https://avatars2.githubusercontent.com/u/12512226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lixiuna0908", "html_url": "https://github.com/lixiuna0908", "followers_url": "https://api.github.com/users/lixiuna0908/followers", "following_url": "https://api.github.com/users/lixiuna0908/following{/other_user}", "gists_url": "https://api.github.com/users/lixiuna0908/gists{/gist_id}", "starred_url": "https://api.github.com/users/lixiuna0908/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lixiuna0908/subscriptions", "organizations_url": "https://api.github.com/users/lixiuna0908/orgs", "repos_url": "https://api.github.com/users/lixiuna0908/repos", "events_url": "https://api.github.com/users/lixiuna0908/events{/privacy}", "received_events_url": "https://api.github.com/users/lixiuna0908/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-07-04T02:03:03Z", "updated_at": "2016-10-22T10:08:01Z", "closed_at": "2016-10-22T10:08:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Error in title occurrence When I parsed url which title includes \"<\" or \">\" like this url: \nhttps://www.exploit-db.com/exploits/37765/\nerror title value will be:  \"'Zend Framework window._wpemojiSettings = {\"baseUrl\":\"https:\\/\\/s.w.org\\/images\\/core\\/emoji\\/72x72\\/\",\"ext\":\".png\",\"source\"......\"\nBut normal title should be \"Zend Framework <= 2.4.2 - XML eXternal Entity Injection XXE on PHP FPM\"\n\nCould you have any ideas for this issue?\nThank you\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/138", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/138/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/138/events", "html_url": "https://github.com/gawel/pyquery/issues/138", "id": 160324977, "node_id": "MDU6SXNzdWUxNjAzMjQ5Nzc=", "number": 138, "title": "Error when parsing CDATA in XML", "user": {"login": "ethanyoung", "id": 6742999, "node_id": "MDQ6VXNlcjY3NDI5OTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6742999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ethanyoung", "html_url": "https://github.com/ethanyoung", "followers_url": "https://api.github.com/users/ethanyoung/followers", "following_url": "https://api.github.com/users/ethanyoung/following{/other_user}", "gists_url": "https://api.github.com/users/ethanyoung/gists{/gist_id}", "starred_url": "https://api.github.com/users/ethanyoung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ethanyoung/subscriptions", "organizations_url": "https://api.github.com/users/ethanyoung/orgs", "repos_url": "https://api.github.com/users/ethanyoung/repos", "events_url": "https://api.github.com/users/ethanyoung/events{/privacy}", "received_events_url": "https://api.github.com/users/ethanyoung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-15T02:20:30Z", "updated_at": "2017-10-21T11:02:03Z", "closed_at": "2017-10-21T11:02:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a xml content `text` with CDATA like this:\n\n``` xml\n<?xml version=\"1.0\" encoding=\"gbk\"?>\n<root><![CDATA[<h3 class=\"flb\"><em>GBK encoded characters...</em><span><a href=\"javascript:;\" class=\"flbc\" onclick=\"hideWindow('k_refresh');\" title=\"GBK encoded characters...\">GBK encoded characters...</a></span></h3>\n<div class=\"c altw\">\n<div class=\"alert_right\">GBK encoded characters...<script type=\"text/javascript\" reload=\"1\">if(typeof errorhandle_k_refresh=='function') {errorhandle_k_refresh('(GBK encoded characters)', {});}</script></div>\n</div>\n<p class=\"o pns\">\n<button type=\"button\" class=\"pn pnc\" id=\"closebtn\" onclick=\"hideWindow('k_refresh');\"><strong>GBK encoded characters...</strong></button>\n<script type=\"text/javascript\" reload=\"1\">if($('closebtn')) {$('closebtn').focus();}</script>\n</p>\n]]></root>\n```\n\nHowever, when I use `d = pq(text)`, `d` is like this (pay attention to the `&lt;` and `&gt;`):\n\n``` xml\n<root>&lt;h3 class=\"flb\"&gt;&lt;em&gt;&#37819;&#24878;&#12378;&#28103;&#8451;&#20229;&lt;/em&gt;&lt;span&gt;&lt;a href=\"javascript:;\" class=\"flbc\" onclick=\"hideWindow('k_refresh');\" title=\"&#37711;&#25277;&#26868;\"&gt;&#37711;&#25277;&#26868;&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt;\n&lt;div class=\"c altw\"&gt;\n&lt;div class=\"alert_right\"&gt;&#29999;&#26663;&#29913;&#37819;&#24876;&#23820;&#37812;&#24876;&#23003;! &#28051;&#23339;&#57532;&#37819;&#24876;&#23820;&#37827;&#22549;&#26879;6&#37714;&#21979;&#25363;&#28052;&#23338;&#24727;&lt;script type=\"text/javascript\" reload=\"1\"&gt;if(typeof errorhandle_k_refresh=='function') {errorhandle_k_refresh('&#29999;&#26663;&#29913;&#37819;&#24876;&#23820;&#37812;&#24876;&#23003;! &#28051;&#23339;&#57532;&#37819;&#24876;&#23820;&#37827;&#22549;&#26879;6&#37714;&#21979;&#25363;&#28052;&#23338;&#24727;', {});}&lt;/script&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p class=\"o pns\"&gt;\n&lt;button type=\"button\" class=\"pn pnc\" id=\"closebtn\" onclick=\"hideWindow('k_refresh');\"&gt;&lt;strong&gt;&#32429;&#57788;&#30078;&lt;/strong&gt;&lt;/button&gt;\n&lt;script type=\"text/javascript\" reload=\"1\"&gt;if($('closebtn')) {$('closebtn').focus();}&lt;/script&gt;\n&lt;/p&gt;\n</root>\n```\n\nApparently **CDATA was not properly parsed**, resulting in all the following tags broken. I had to strip out `![]` to continue the parsing. Then I got a relatively better result (at least I can start using the dom elements):\n\n``` xml\n<root><cdata class=\"flb\"><em>&#25552;&#31034;&#20449;&#24687;</em><span><a href=\"javascript:;\" class=\"flbc\" onclick=\"hideWindow('k_refresh');\" title=\"&#20851;&#38381;\">&#20851;&#38381;</a></span>\n<div class=\"c altw\">\n<div class=\"alert_right\">&#24086;&#23376;&#25552;&#21319;&#25104;&#21151; &#19979;&#27425;&#25552;&#21319;&#26102;&#38388;29&#20998;&#38047;&#20043;&#21518;</div>\n</div>\n<p class=\"o pns\">\n<button type=\"button\" class=\"pn pnc\" id=\"closebtn\" onclick=\"hideWindow('k_refresh');\"><strong>&#30830;&#23450;</strong></button>\n\n</p>\n&gt;</cdata></root>\n```\n\nDoes anyone have a clue about this? \n\nThank you in advance.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/137", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/137/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/137/events", "html_url": "https://github.com/gawel/pyquery/issues/137", "id": 158307713, "node_id": "MDU6SXNzdWUxNTgzMDc3MTM=", "number": 137, "title": "print empty express too old", "user": {"login": "lozybean", "id": 11271211, "node_id": "MDQ6VXNlcjExMjcxMjEx", "avatar_url": "https://avatars1.githubusercontent.com/u/11271211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lozybean", "html_url": "https://github.com/lozybean", "followers_url": "https://api.github.com/users/lozybean/followers", "following_url": "https://api.github.com/users/lozybean/following{/other_user}", "gists_url": "https://api.github.com/users/lozybean/gists{/gist_id}", "starred_url": "https://api.github.com/users/lozybean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lozybean/subscriptions", "organizations_url": "https://api.github.com/users/lozybean/orgs", "repos_url": "https://api.github.com/users/lozybean/repos", "events_url": "https://api.github.com/users/lozybean/events{/privacy}", "received_events_url": "https://api.github.com/users/lozybean/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-06-03T07:30:46Z", "updated_at": "2016-06-03T07:32:23Z", "closed_at": "2016-06-03T07:32:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "some empty tags like:`<span class='test'></span>`will be express in `<span class='test'/>` which will show not all there in some browser (eg. chrome). this never happened in BeautifulSoup.\n\n```\n>>> from pyquery import PyQuery as pq\n>>> d = pq('<span class=\"test\"></span>')\n>>> print(d)\n<span class=\"test\"/>\n```\n\n```\n>>> from bs4 import BeautifulSoup as bs\n>>> soup = bs('<span class=\"test\"></span>','lxml')\n>>> print(soup)\n<html><body><span class=\"test\"></span></body></html>\n```\n\nI like pyquery's features more, but this should be resolve.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/136", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/136/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/136/events", "html_url": "https://github.com/gawel/pyquery/issues/136", "id": 157104551, "node_id": "MDU6SXNzdWUxNTcxMDQ1NTE=", "number": 136, "title": "Invalid self-closing tags", "user": {"login": "JivanRoquet", "id": 6452675, "node_id": "MDQ6VXNlcjY0NTI2NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6452675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JivanRoquet", "html_url": "https://github.com/JivanRoquet", "followers_url": "https://api.github.com/users/JivanRoquet/followers", "following_url": "https://api.github.com/users/JivanRoquet/following{/other_user}", "gists_url": "https://api.github.com/users/JivanRoquet/gists{/gist_id}", "starred_url": "https://api.github.com/users/JivanRoquet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JivanRoquet/subscriptions", "organizations_url": "https://api.github.com/users/JivanRoquet/orgs", "repos_url": "https://api.github.com/users/JivanRoquet/repos", "events_url": "https://api.github.com/users/JivanRoquet/events{/privacy}", "received_events_url": "https://api.github.com/users/JivanRoquet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-05-27T00:03:40Z", "updated_at": "2016-05-27T00:31:18Z", "closed_at": "2016-05-27T00:31:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\n>>> d = pq('<div></div>')\n>>> d.outerHtml()\n'<div/>'\n```\n\n[You can't do that](https://www.w3.org/TR/html401/struct/global.html#h-7.5.4). It's invalid.\n\nOutput should be `'<div></div>'` instead.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/133", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/133/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/133/events", "html_url": "https://github.com/gawel/pyquery/issues/133", "id": 147800596, "node_id": "MDU6SXNzdWUxNDc4MDA1OTY=", "number": 133, "title": "PyQuery 1.2.12", "user": {"login": "papachoco", "id": 244702, "node_id": "MDQ6VXNlcjI0NDcwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/244702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/papachoco", "html_url": "https://github.com/papachoco", "followers_url": "https://api.github.com/users/papachoco/followers", "following_url": "https://api.github.com/users/papachoco/following{/other_user}", "gists_url": "https://api.github.com/users/papachoco/gists{/gist_id}", "starred_url": "https://api.github.com/users/papachoco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/papachoco/subscriptions", "organizations_url": "https://api.github.com/users/papachoco/orgs", "repos_url": "https://api.github.com/users/papachoco/repos", "events_url": "https://api.github.com/users/papachoco/events{/privacy}", "received_events_url": "https://api.github.com/users/papachoco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-12T16:10:06Z", "updated_at": "2016-04-12T16:57:12Z", "closed_at": "2016-04-12T16:44:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could we provide a sdist (standard distribution) for PyQuery 1.2.12, so legacy buildout installations can work.\n\nthanks\n\nCarlos\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/132", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/132/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/132/events", "html_url": "https://github.com/gawel/pyquery/issues/132", "id": 147795409, "node_id": "MDU6SXNzdWUxNDc3OTU0MDk=", "number": 132, "title": "Missing git tag for 1.2.12 release", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-12T15:53:02Z", "updated_at": "2016-04-12T16:04:51Z", "closed_at": "2016-04-12T16:04:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be nice to keep the git tags and pypi releases in sync :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/130", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/130/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/130/events", "html_url": "https://github.com/gawel/pyquery/issues/130", "id": 146704975, "node_id": "MDU6SXNzdWUxNDY3MDQ5NzU=", "number": 130, "title": "map does not support python3", "user": {"login": "lufeihaidao", "id": 1731864, "node_id": "MDQ6VXNlcjE3MzE4NjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1731864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lufeihaidao", "html_url": "https://github.com/lufeihaidao", "followers_url": "https://api.github.com/users/lufeihaidao/followers", "following_url": "https://api.github.com/users/lufeihaidao/following{/other_user}", "gists_url": "https://api.github.com/users/lufeihaidao/gists{/gist_id}", "starred_url": "https://api.github.com/users/lufeihaidao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lufeihaidao/subscriptions", "organizations_url": "https://api.github.com/users/lufeihaidao/orgs", "repos_url": "https://api.github.com/users/lufeihaidao/repos", "events_url": "https://api.github.com/users/lufeihaidao/events{/privacy}", "received_events_url": "https://api.github.com/users/lufeihaidao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-04-07T18:21:12Z", "updated_at": "2016-10-10T21:32:26Z", "closed_at": "2016-10-10T21:32:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n  File \"src/lxml/lxml.etree.pyx\", line 3350, in lxml.etree.tostring (src/lxml/lxml.etree.c:79228)\nTypeError: Type 'str' cannot be serialized.\n```\n\nI got this error when I try to copy https://pythonhosted.org/pyquery/_modules/pyquery/pyquery.html#PyQuery.map example\n\n``` python\nd('p').map(lambda i, e: PyQuery(e).text())\n# ['Hi there', 'Bye']\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/128", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/128/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/128/events", "html_url": "https://github.com/gawel/pyquery/issues/128", "id": 141538878, "node_id": "MDU6SXNzdWUxNDE1Mzg4Nzg=", "number": 128, "title": "python3.5 Installation failed", "user": {"login": "thinksaas", "id": 659285, "node_id": "MDQ6VXNlcjY1OTI4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/659285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thinksaas", "html_url": "https://github.com/thinksaas", "followers_url": "https://api.github.com/users/thinksaas/followers", "following_url": "https://api.github.com/users/thinksaas/following{/other_user}", "gists_url": "https://api.github.com/users/thinksaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/thinksaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thinksaas/subscriptions", "organizations_url": "https://api.github.com/users/thinksaas/orgs", "repos_url": "https://api.github.com/users/thinksaas/repos", "events_url": "https://api.github.com/users/thinksaas/events{/privacy}", "received_events_url": "https://api.github.com/users/thinksaas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-03-17T10:20:54Z", "updated_at": "2016-03-17T11:09:34Z", "closed_at": "2016-03-17T11:09:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "python3.5 \u5b89\u88c5\u5931\u8d25\u3002\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/126", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/126/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/126/events", "html_url": "https://github.com/gawel/pyquery/issues/126", "id": 139775586, "node_id": "MDU6SXNzdWUxMzk3NzU1ODY=", "number": 126, "title": "modify attr?", "user": {"login": "cxc222", "id": 2092566, "node_id": "MDQ6VXNlcjIwOTI1NjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2092566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cxc222", "html_url": "https://github.com/cxc222", "followers_url": "https://api.github.com/users/cxc222/followers", "following_url": "https://api.github.com/users/cxc222/following{/other_user}", "gists_url": "https://api.github.com/users/cxc222/gists{/gist_id}", "starred_url": "https://api.github.com/users/cxc222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cxc222/subscriptions", "organizations_url": "https://api.github.com/users/cxc222/orgs", "repos_url": "https://api.github.com/users/cxc222/repos", "events_url": "https://api.github.com/users/cxc222/events{/privacy}", "received_events_url": "https://api.github.com/users/cxc222/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-10T03:44:06Z", "updated_at": "2016-03-10T04:58:55Z", "closed_at": "2016-03-10T04:58:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "modify attr?\n\n`d = pq(unicode('<p><span style=\"font-family: \u5b8b\u4f53\">\u00a0<img alt=\"\" src=\"/upload/jfmall/70636.jpg\"></span></p>', 'utf-8'))`\n\nI want output: \n`<p><span style=\"font-family: \u5b8b\u4f53\">\u00a0<img alt=\"\" src=\"/uploads/list/map/jfmall/70636.jpg\"></span></p>`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/124", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/124/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/124/events", "html_url": "https://github.com/gawel/pyquery/issues/124", "id": 137193424, "node_id": "MDU6SXNzdWUxMzcxOTM0MjQ=", "number": 124, "title": "[Question] Doesn't pyquery support Python3?", "user": {"login": "y-ich", "id": 922001, "node_id": "MDQ6VXNlcjkyMjAwMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/922001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/y-ich", "html_url": "https://github.com/y-ich", "followers_url": "https://api.github.com/users/y-ich/followers", "following_url": "https://api.github.com/users/y-ich/following{/other_user}", "gists_url": "https://api.github.com/users/y-ich/gists{/gist_id}", "starred_url": "https://api.github.com/users/y-ich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/y-ich/subscriptions", "organizations_url": "https://api.github.com/users/y-ich/orgs", "repos_url": "https://api.github.com/users/y-ich/repos", "events_url": "https://api.github.com/users/y-ich/events{/privacy}", "received_events_url": "https://api.github.com/users/y-ich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-29T09:05:45Z", "updated_at": "2016-03-01T12:49:01Z", "closed_at": "2016-03-01T12:49:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi.\n\nI tried pyquery on Python3.\nAccessing Japanese pages failed with an error\n\n```\nValueError: Unicode strings with encoding declaration are not supported. Please use bytes input or XML fragments without declaration.\n```\n\nHere is an example.\n\n```\nfrom pyquery import PyQuery as pq\na = pq(url='http://www.asahi.com')\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/123", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/123/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/123/events", "html_url": "https://github.com/gawel/pyquery/issues/123", "id": 134515686, "node_id": "MDU6SXNzdWUxMzQ1MTU2ODY=", "number": 123, "title": "problem in pypy ", "user": {"login": "hsz1273327", "id": 7850148, "node_id": "MDQ6VXNlcjc4NTAxNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7850148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hsz1273327", "html_url": "https://github.com/hsz1273327", "followers_url": "https://api.github.com/users/hsz1273327/followers", "following_url": "https://api.github.com/users/hsz1273327/following{/other_user}", "gists_url": "https://api.github.com/users/hsz1273327/gists{/gist_id}", "starred_url": "https://api.github.com/users/hsz1273327/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hsz1273327/subscriptions", "organizations_url": "https://api.github.com/users/hsz1273327/orgs", "repos_url": "https://api.github.com/users/hsz1273327/repos", "events_url": "https://api.github.com/users/hsz1273327/events{/privacy}", "received_events_url": "https://api.github.com/users/hsz1273327/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-18T08:45:43Z", "updated_at": "2016-02-18T09:19:41Z", "closed_at": "2016-02-18T09:19:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I did try to install pyquery in pypy since lxml-cffi is available now. for installing by pip I failed,but I download it and changed the requirments it worked, and there is just  one bug -- it can not transform unicode to str by BytesIO .so please make a new branch for it.thanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/122", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/122/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/122/events", "html_url": "https://github.com/gawel/pyquery/issues/122", "id": 128944745, "node_id": "MDU6SXNzdWUxMjg5NDQ3NDU=", "number": 122, "title": "PyQuery doesn't recognize a and img but jQuery does", "user": {"login": "capital-G", "id": 8267062, "node_id": "MDQ6VXNlcjgyNjcwNjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/8267062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/capital-G", "html_url": "https://github.com/capital-G", "followers_url": "https://api.github.com/users/capital-G/followers", "following_url": "https://api.github.com/users/capital-G/following{/other_user}", "gists_url": "https://api.github.com/users/capital-G/gists{/gist_id}", "starred_url": "https://api.github.com/users/capital-G/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/capital-G/subscriptions", "organizations_url": "https://api.github.com/users/capital-G/orgs", "repos_url": "https://api.github.com/users/capital-G/repos", "events_url": "https://api.github.com/users/capital-G/events{/privacy}", "received_events_url": "https://api.github.com/users/capital-G/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-26T21:16:55Z", "updated_at": "2016-01-26T23:22:29Z", "closed_at": "2016-01-26T23:07:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\n\nI tried to manipulate this DOM:\n\n``` html\n<a xmlns=\"http://www.w3.org/1999/xhtml\" ui-sref=\"app.vod({id : vod.id})\" href=\"/vod/20150417-041\"><img ng-src=\"http://cdn.ruptly.tv/secure/vod/20150417-041/20150417-041_thumbnail.jpg?e22c5e1cc455327554498fe5df4b53c8fe22a23071c2bed6a628c5bd51e138e255df45fc284be0e611067d66984b6c928288154ab6b81180ef2e1ccc5ed383ef8961d4fad7001760c667bea36548c146b1d6ae8146071c9d52cca14cfc96251f8bb79693d3\" src=\"http://cdn.ruptly.tv/secure/vod/20150417-041/20150417-041_thumbnail.jpg?e22c5e1cc455327554498fe5df4b53c8fe22a23071c2bed6a628c5bd51e138e255df45fc284be0e611067d66984b6c928288154ab6b81180ef2e1ccc5ed383ef8961d4fad7001760c667bea36548c146b1d6ae8146071c9d52cca14cfc96251f8bb79693d3\"/><span class=\"duration ng-binding\">1:37</span>\\n            <p class=\"title ng-binding\">Brazil: It\\'s a dog\\'s life at canine kindergarten in Sao Paulo</p><span class=\"published ng-binding\">2015-04-17 13:03 (GMT)</span><!-- ngIf: vm.isSubscriberOnly(vod) --><!-- ngIf: vm.isFree(vod) --></a>\n```\n\nIn PyQuery (`from pyquery import PyQuery as pq`) I don't get proper results:\n\n``` python\n>>> pq(string)('a').attr('href')  # returns nothing\n>>> pq(string)('img').attr('src')  # returns nothing\n>>> pq(string)('.title').text()\n\"Brazil: It's a dog's life at canine kindergarten in Sao Paulo\"\n```\n\nBut jQuery returns everything properly:\nhttps://jsfiddle.net/d500pqz2/\n\n``` javascript\nconsole.log($('a').attr('href'));  // /vod/20150417-041\nconsole.log($('img').attr('src'));  // http://cdn.ruptly.tv/secure/vod/20150417-041/20150417-041_thumbnail.jpg?e22\u20268961d4fad7001760c667bea36548c146b1d6ae8146071c9d52cca14cfc96251f8bb79693d3\nconsole.log($('.title').text());  // Brazil: It\\'s a dog\\'s life at canine kindergarten in Sao Paulo\n```\n\nHope this is enough help\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/121", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/121/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/121/events", "html_url": "https://github.com/gawel/pyquery/issues/121", "id": 125786842, "node_id": "MDU6SXNzdWUxMjU3ODY4NDI=", "number": 121, "title": "Provide support for pypy", "user": {"login": "ruipacheco", "id": 510703, "node_id": "MDQ6VXNlcjUxMDcwMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/510703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruipacheco", "html_url": "https://github.com/ruipacheco", "followers_url": "https://api.github.com/users/ruipacheco/followers", "following_url": "https://api.github.com/users/ruipacheco/following{/other_user}", "gists_url": "https://api.github.com/users/ruipacheco/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruipacheco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruipacheco/subscriptions", "organizations_url": "https://api.github.com/users/ruipacheco/orgs", "repos_url": "https://api.github.com/users/ruipacheco/repos", "events_url": "https://api.github.com/users/ruipacheco/events{/privacy}", "received_events_url": "https://api.github.com/users/ruipacheco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-01-09T22:55:08Z", "updated_at": "2016-01-10T10:47:54Z", "closed_at": "2016-01-10T10:07:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to install pyquery on pypy and getting a number of errors:\n\n```\nsrc/lxml/lxml.etree.c:4323:15: error: no member named 'tracing' in 'struct _ts'\n          tstate->tracing++;\n          ~~~~~~  ^\n```\n\nI believe this comes from lxml not working well with pypy. There is a fork that apparently works with pypy:\nhttps://github.com/amauryfa/lxml/tree/cffi\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/115", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/115/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/115/events", "html_url": "https://github.com/gawel/pyquery/issues/115", "id": 121611421, "node_id": "MDU6SXNzdWUxMjE2MTE0MjE=", "number": 115, "title": ".text() not exclude <!-- xxxx -->", "user": {"login": "eromoe", "id": 3938751, "node_id": "MDQ6VXNlcjM5Mzg3NTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3938751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eromoe", "html_url": "https://github.com/eromoe", "followers_url": "https://api.github.com/users/eromoe/followers", "following_url": "https://api.github.com/users/eromoe/following{/other_user}", "gists_url": "https://api.github.com/users/eromoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/eromoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eromoe/subscriptions", "organizations_url": "https://api.github.com/users/eromoe/orgs", "repos_url": "https://api.github.com/users/eromoe/repos", "events_url": "https://api.github.com/users/eromoe/events{/privacy}", "received_events_url": "https://api.github.com/users/eromoe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-11T00:51:19Z", "updated_at": "2018-01-11T19:22:52Z", "closed_at": "2018-01-11T19:22:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "http://bbs.jxzx.com.cn/forum.php?mod=viewthread&tid=687799#lastpost\n\n`text = pq('.t_f:first').text()`\n\n```\n<!--\ngoogle_ad_client = \"pub-6353198165019432\";\n/* 120x240, \u521b\u5efa\u4e8e 10-7-26 */\ngoogle_ad_slot = \"0566838523\";\ngoogle_ad_width = 120;\ngoogle_ad_height = 240;\n//--> 7\u670811\u65e5\uff0c\u5e02\u6c11\u5728\u6c5f\u82cf\u8fde\u4e91\u6e2f\u5e02\u535a\u7269\u9986\u6b23\u8d4f\u201c\u660e\u5ba3\u5fb7\u9752\u82b1\u6d77\u6c34\u767d\u9f99\u7eb9\u6241\u74f6\u201d\u3002\u5f53\u65e5\uff0c\u5728\u6c5f\u82cf\u4e07\u8fbe2011\u6625\u5b63\u827a\u672f\u54c1\u62cd\u5356\u4f1a\u4e0a\u62cd\u51fa2.24\u4ebf\u5143\u5929\u4ef7\u7684\u201c\u660e\u5ba3\u5fb7\u9752\u82b1\u6d77\u6c34\u767d\u9f99\u7eb9\u6241\u74f6\u201d\u4eae\u76f8\u6c5f\u82cf\u8fde\u4e91\u6e2f\u5e02\u535a\u7269\u9986\uff0c\u5438\u5f15\u4f17\u591a\u5e02\u6c11\u4e00\u7779\u5176\u201c\u82b3\u5bb9\u201d\u3002\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/114", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/114/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/114/events", "html_url": "https://github.com/gawel/pyquery/issues/114", "id": 118516787, "node_id": "MDU6SXNzdWUxMTg1MTY3ODc=", "number": 114, "title": "Failed installation with gcc error", "user": {"login": "wisetc", "id": 9448115, "node_id": "MDQ6VXNlcjk0NDgxMTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/9448115?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wisetc", "html_url": "https://github.com/wisetc", "followers_url": "https://api.github.com/users/wisetc/followers", "following_url": "https://api.github.com/users/wisetc/following{/other_user}", "gists_url": "https://api.github.com/users/wisetc/gists{/gist_id}", "starred_url": "https://api.github.com/users/wisetc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wisetc/subscriptions", "organizations_url": "https://api.github.com/users/wisetc/orgs", "repos_url": "https://api.github.com/users/wisetc/repos", "events_url": "https://api.github.com/users/wisetc/events{/privacy}", "received_events_url": "https://api.github.com/users/wisetc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-11-24T02:03:30Z", "updated_at": "2015-11-24T09:46:35Z", "closed_at": "2015-11-24T08:35:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "It failed for gcc error when install lxml.\n\n> gcc: error: /usr/lib/rpm/redhat/redhat-hardened-cc1: No such file or directory\n> /tmp/xmlXPathInitJJakmp.c:1:26: fatal error: libxml/xpath.h: No such file or directory\n\nI have libxml2 installed, but it didn't help.\n\n![picture: lxml install error](http://7xk1q0.com1.z0.glb.clouddn.com/bugfix/lxml-bug-install.png)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/113", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/113/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/113/events", "html_url": "https://github.com/gawel/pyquery/issues/113", "id": 109662495, "node_id": "MDU6SXNzdWUxMDk2NjI0OTU=", "number": 113, "title": "PyQuery disregards file-encoding. Reads file in as ISO-8859-1, even if file is encoded as UTF-8", "user": {"login": "vivin", "id": 56094, "node_id": "MDQ6VXNlcjU2MDk0", "avatar_url": "https://avatars2.githubusercontent.com/u/56094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vivin", "html_url": "https://github.com/vivin", "followers_url": "https://api.github.com/users/vivin/followers", "following_url": "https://api.github.com/users/vivin/following{/other_user}", "gists_url": "https://api.github.com/users/vivin/gists{/gist_id}", "starred_url": "https://api.github.com/users/vivin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vivin/subscriptions", "organizations_url": "https://api.github.com/users/vivin/orgs", "repos_url": "https://api.github.com/users/vivin/repos", "events_url": "https://api.github.com/users/vivin/events{/privacy}", "received_events_url": "https://api.github.com/users/vivin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-10-04T04:24:36Z", "updated_at": "2016-04-19T00:48:32Z", "closed_at": "2015-10-05T16:32:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if I'm doing something wrong here, since I don't frequently use Python. I have an HTML file that I downloaded and saved to disk. The encoding is UTF-8:\n\n``` bash\n$ file -i info.html\ninfo.html: text/html; charset=utf-8\n```\n\nWhen I parse the file with PyQuery by passing in a filename, and extract text, I get garbage characters:\n\n``` python\n>>> d = PyQuery(filename=\"file.html\")\n>>> d(\"span#info\").eq(0).text().encode(\"utf-8\")\nb'THE\\xc3\\xa2\\xc2\\x98\\xc2\\x85 STAR\n```\n\nHowever, if I read the file into a string and _then_ pass it to PyQuery, everything turns out fine:\n\n``` python\n>>> with open (\"file.html\", \"r\") as f:\n...     s = f.read()\n... \n>>> d = PyQuery(s)\n>>> d(\"span#info\").eq(0).text().encode(\"utf-8\")\nb'THE\\xe2\\x98\\x85 STAR'\n```\n\nThe actual text when printed, should be `\"THE\u2605STAR\"`, but instead I get garbage on the console because it appears that the file has been decoded into ISO-8859-1. If you decode the UTF-8 byte-sequence into ISO-8859-1 and then encode it back into UTF-8, you get the same, garbled sequences of bytes:\n\n``` python\n>>> b'THE\\xe2\\x98\\x85 STAR'.decode(\"iso-8859-1\").encode(\"utf-8\")\nb'THE\\xc3\\xa2\\xc2\\x98\\xc2\\x85 STAR'\n```\n\nI'm using the workaround for now, but it seems unnecessary. Is there a configuration option I'm missing?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/112", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/112/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/112/events", "html_url": "https://github.com/gawel/pyquery/issues/112", "id": 108523889, "node_id": "MDU6SXNzdWUxMDg1MjM4ODk=", "number": 112, "title": "make_links_absolute doesn't apply to form.attr('action')", "user": {"login": "domenkozar", "id": 126339, "node_id": "MDQ6VXNlcjEyNjMzOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/126339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/domenkozar", "html_url": "https://github.com/domenkozar", "followers_url": "https://api.github.com/users/domenkozar/followers", "following_url": "https://api.github.com/users/domenkozar/following{/other_user}", "gists_url": "https://api.github.com/users/domenkozar/gists{/gist_id}", "starred_url": "https://api.github.com/users/domenkozar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/domenkozar/subscriptions", "organizations_url": "https://api.github.com/users/domenkozar/orgs", "repos_url": "https://api.github.com/users/domenkozar/repos", "events_url": "https://api.github.com/users/domenkozar/events{/privacy}", "received_events_url": "https://api.github.com/users/domenkozar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-09-27T09:10:33Z", "updated_at": "2015-10-02T20:24:43Z", "closed_at": "2015-10-02T20:24:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/111", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/111/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/111/events", "html_url": "https://github.com/gawel/pyquery/issues/111", "id": 107684708, "node_id": "MDU6SXNzdWUxMDc2ODQ3MDg=", "number": 111, "title": ".text() should exclude <script> tags", "user": {"login": "est", "id": 23570, "node_id": "MDQ6VXNlcjIzNTcw", "avatar_url": "https://avatars0.githubusercontent.com/u/23570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est", "html_url": "https://github.com/est", "followers_url": "https://api.github.com/users/est/followers", "following_url": "https://api.github.com/users/est/following{/other_user}", "gists_url": "https://api.github.com/users/est/gists{/gist_id}", "starred_url": "https://api.github.com/users/est/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est/subscriptions", "organizations_url": "https://api.github.com/users/est/orgs", "repos_url": "https://api.github.com/users/est/repos", "events_url": "https://api.github.com/users/est/events{/privacy}", "received_events_url": "https://api.github.com/users/est/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-09-22T10:18:36Z", "updated_at": "2016-04-12T19:55:01Z", "closed_at": "2016-04-12T19:55:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n>>> pyquery.PyQuery('<div>hello<script language=\"javascript\">alert(0)</script>, world</div>').text()\n'hello alert(0) , world'\n```\n\nIs this by design? If so, is there a way to get rid of `<script>` tags during `text()` ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/110", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/110/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/110/events", "html_url": "https://github.com/gawel/pyquery/issues/110", "id": 104711426, "node_id": "MDU6SXNzdWUxMDQ3MTE0MjY=", "number": 110, "title": "docs: serialize a single element", "user": {"login": "guettli", "id": 414336, "node_id": "MDQ6VXNlcjQxNDMzNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/414336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guettli", "html_url": "https://github.com/guettli", "followers_url": "https://api.github.com/users/guettli/followers", "following_url": "https://api.github.com/users/guettli/following{/other_user}", "gists_url": "https://api.github.com/users/guettli/gists{/gist_id}", "starred_url": "https://api.github.com/users/guettli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guettli/subscriptions", "organizations_url": "https://api.github.com/users/guettli/orgs", "repos_url": "https://api.github.com/users/guettli/repos", "events_url": "https://api.github.com/users/guettli/events{/privacy}", "received_events_url": "https://api.github.com/users/guettli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-09-03T14:42:42Z", "updated_at": "2015-09-04T09:18:48Z", "closed_at": "2015-09-03T14:56:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I could not find a way to serialize an element. Maybe it would be good to \nupdate the docs. Or I was blind and should buy me some new glasses :-)\n\nI want to check if the serialized output of an element matches a fixed string.\n\nFor me `etree.tostring(my_div)` looks ugly.\n\nIs there no cleaner way?\n\nMaybe without a second import?\n\n```\nfrom lxml import etree\nimport pyquery\n\ntree=pyquery.PyQuery('<div id=\"foo\">abc</div>')\nmy_div=tree('#foo')[0]\nassert '<div id=\"foo\">abc</div>' == etree.tostring(my_div)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/107", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/107/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/107/events", "html_url": "https://github.com/gawel/pyquery/issues/107", "id": 91333574, "node_id": "MDU6SXNzdWU5MTMzMzU3NA==", "number": 107, "title": "Missing __version__ information", "user": {"login": "mrnfrancesco", "id": 8071136, "node_id": "MDQ6VXNlcjgwNzExMzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/8071136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrnfrancesco", "html_url": "https://github.com/mrnfrancesco", "followers_url": "https://api.github.com/users/mrnfrancesco/followers", "following_url": "https://api.github.com/users/mrnfrancesco/following{/other_user}", "gists_url": "https://api.github.com/users/mrnfrancesco/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrnfrancesco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrnfrancesco/subscriptions", "organizations_url": "https://api.github.com/users/mrnfrancesco/orgs", "repos_url": "https://api.github.com/users/mrnfrancesco/repos", "events_url": "https://api.github.com/users/mrnfrancesco/events{/privacy}", "received_events_url": "https://api.github.com/users/mrnfrancesco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-26T18:57:35Z", "updated_at": "2015-06-26T19:08:31Z", "closed_at": "2015-06-26T19:08:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think it could be useful to have the `__version__` attribute in pyquery module. An example of usage could be to test requirements; something like:\n\n```\nimport unittest\nimport importlib\n\nclass TestRequirements(unittest.TestCase):\n    def test_pyquery(self):\n        try:\n            pyquery = importlib.import_module('pyquery')\n            self.assertGreaterEqual(pyquery.__version__, '1.2.9', \"PyQuery >= 1.2.9 required\")\n        except ImportError:\n            pyquery = None\n\n        self.assertIsNotNone(pyquery, \"Missing PyQuery mandatory requirement\")\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/106", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/106/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/106/events", "html_url": "https://github.com/gawel/pyquery/issues/106", "id": 90828874, "node_id": "MDU6SXNzdWU5MDgyODg3NA==", "number": 106, "title": "install error on Mac", "user": {"login": "Heisenbean", "id": 7660120, "node_id": "MDQ6VXNlcjc2NjAxMjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/7660120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Heisenbean", "html_url": "https://github.com/Heisenbean", "followers_url": "https://api.github.com/users/Heisenbean/followers", "following_url": "https://api.github.com/users/Heisenbean/following{/other_user}", "gists_url": "https://api.github.com/users/Heisenbean/gists{/gist_id}", "starred_url": "https://api.github.com/users/Heisenbean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Heisenbean/subscriptions", "organizations_url": "https://api.github.com/users/Heisenbean/orgs", "repos_url": "https://api.github.com/users/Heisenbean/repos", "events_url": "https://api.github.com/users/Heisenbean/events{/privacy}", "received_events_url": "https://api.github.com/users/Heisenbean/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-25T02:08:47Z", "updated_at": "2015-06-25T07:49:26Z", "closed_at": "2015-06-25T07:49:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "## I install pyquery on my Mac by pip,but in the end,the terminal logs some error:\n\n In file included from src/lxml/lxml.etree.c:239:\n    /private/var/folders/6_/9fft5gzd2l16rnqgbfpcbw0c0000gn/T/pip-build-fIMUQF/lxml/src/lxml/includes/etree_defs.h:14:10: fatal error: 'libxml/xmlversion.h' file not found\n    #include \"libxml/xmlversion.h\"\n             ^\n    1 error generated.\n    error: command 'cc' failed with exit status 1\n\nCommand \"/usr/bin/python -c \"import setuptools, tokenize;**file**='/private/var/folders/6_/9fft5gzd2l16rnqgbfpcbw0c0000gn/T/pip-build-fIMUQF/lxml/setup.py';exec(compile(getattr(tokenize, 'open', open)(**file**).read().replace('\\r\\n', '\\n'), **file**, 'exec'))\" install --record /var/folders/6_/9fft5gzd2l16rnqgbfpcbw0c0000gn/T/pip-6SoLC7-record/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /private/var/folders/6_/9fft5gzd2l16rnqgbfpcbw0c0000gn/T/pip-build-fIMUQF/lxml\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/104", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/104/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/104/events", "html_url": "https://github.com/gawel/pyquery/issues/104", "id": 80045636, "node_id": "MDU6SXNzdWU4MDA0NTYzNg==", "number": 104, "title": "Use chardet to auto-detect encodings?", "user": {"login": "Jorl17", "id": 1668225, "node_id": "MDQ6VXNlcjE2NjgyMjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1668225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jorl17", "html_url": "https://github.com/Jorl17", "followers_url": "https://api.github.com/users/Jorl17/followers", "following_url": "https://api.github.com/users/Jorl17/following{/other_user}", "gists_url": "https://api.github.com/users/Jorl17/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jorl17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jorl17/subscriptions", "organizations_url": "https://api.github.com/users/Jorl17/orgs", "repos_url": "https://api.github.com/users/Jorl17/repos", "events_url": "https://api.github.com/users/Jorl17/events{/privacy}", "received_events_url": "https://api.github.com/users/Jorl17/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-05-24T04:16:09Z", "updated_at": "2016-01-05T15:37:03Z", "closed_at": "2016-01-05T15:34:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Recently I ran with some issues when output wasn't in the expected encoding format (which I see is, by default, utf-8) in the html() method.\n\nMy application could not, a priori, know what the encoding was going to be, and this was a nuisance.\n\nPerhaps using the [chardet](https://pypi.python.org/pypi/chardet) library could help alleviate this issue? It might also be the case that I simply did not correctly understand how html() works. If that was the case, then I'm sorry.\n\nIf indeed you think this fix should be applied, I can chip in and add it myself. Also, thanks for the awesome work!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/103", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/103/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/103/events", "html_url": "https://github.com/gawel/pyquery/issues/103", "id": 78471114, "node_id": "MDU6SXNzdWU3ODQ3MTExNA==", "number": 103, "title": "Self closing script tags with src attribute", "user": {"login": "donuk", "id": 196542, "node_id": "MDQ6VXNlcjE5NjU0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/196542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/donuk", "html_url": "https://github.com/donuk", "followers_url": "https://api.github.com/users/donuk/followers", "following_url": "https://api.github.com/users/donuk/following{/other_user}", "gists_url": "https://api.github.com/users/donuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/donuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/donuk/subscriptions", "organizations_url": "https://api.github.com/users/donuk/orgs", "repos_url": "https://api.github.com/users/donuk/repos", "events_url": "https://api.github.com/users/donuk/events{/privacy}", "received_events_url": "https://api.github.com/users/donuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-20T10:37:40Z", "updated_at": "2015-06-30T16:28:36Z", "closed_at": "2015-06-30T16:28:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a problem in some (maybe all?) browsers where the following is treated differently even though the xml is equivalent:\n\n`<script src='test.js'></script>`\n`<script src='test.js'/>`\n\nThe second form is interpreted by browsers as missing an end tag so in the following:\n\n`<script src='test.js'/><script src='test2.js'/>`\n\ntest2.js would not be loaded (in chrome at least)\n\nIt looks like certain pyquery methods cause the former to be replaced with the latter e.g.:\n\n```\nel = PyQuery(\"<html><head><script src='my-script.js'></script></head></html>\")\nprint el.html()\n#outputs u'<head><script src=\"my-script.js\"/></head>'\n```\n\nI'm not sure there's a neat way around this but thought it was worth mentioning.\n\nFor my purposes I have got round it with the following sub-class (which is less correct but behaves better with browsers):\n\n```\nclass MyPyQuery(PyQuery):\n        def html(self,*args,**kwargs):\n                for tag in self.find('script'):\n                        tag = PyQuery(tag)\n                        if len(tag.text())==0:\n                                tag.html(\"&nbsp;\")\n                html = PyQuery.html(self,*args,**kwargs)\n                return html\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/102", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/102/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/102/events", "html_url": "https://github.com/gawel/pyquery/issues/102", "id": 74319303, "node_id": "MDU6SXNzdWU3NDMxOTMwMw==", "number": 102, "title": "html method replacing text after tag", "user": {"login": "donuk", "id": 196542, "node_id": "MDQ6VXNlcjE5NjU0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/196542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/donuk", "html_url": "https://github.com/donuk", "followers_url": "https://api.github.com/users/donuk/followers", "following_url": "https://api.github.com/users/donuk/following{/other_user}", "gists_url": "https://api.github.com/users/donuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/donuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/donuk/subscriptions", "organizations_url": "https://api.github.com/users/donuk/orgs", "repos_url": "https://api.github.com/users/donuk/repos", "events_url": "https://api.github.com/users/donuk/events{/privacy}", "received_events_url": "https://api.github.com/users/donuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-05-08T10:41:33Z", "updated_at": "2018-03-30T19:05:03Z", "closed_at": "2018-03-30T19:05:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Apologies if I'm mis-understanding the way this should work but I'm running the following:\n\n```\nfrom pyquery import PyQuery\nel = PyQuery(\"<html><span>Replace Me</span>Not Me</html>\")\nel.find('span').html('Replaced')\nprint el.outerHtml()\n```\n\nAnd it outputs the following:\n\n```\n<html><span>Replaced</span></html>\n```\n\nI would expect it to output:\n\n```\n<html><span>Replaced</span>Not Me</html>\n```\n\nI can fix it by removing a line from the html method, but I presume that line was there for a reason?:\n\n```\ndiff --git a/pyquery/pyquery.py b/pyquery/pyquery.py\nindex 628a32d..15a4b2a 100644\n--- a/pyquery/pyquery.py\n+++ b/pyquery/pyquery.py\n@@ -1020,7 +1020,6 @@ class PyQuery(list):\n                 if children:\n                     tag.extend(children)\n                 tag.text = root.text\n-                tag.tail = root.tail\n         return self\n\n     @with_camel_case_alias\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/99", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/99/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/99/events", "html_url": "https://github.com/gawel/pyquery/issues/99", "id": 68131828, "node_id": "MDU6SXNzdWU2ODEzMTgyOA==", "number": 99, "title": "text() method adds whitespace", "user": {"login": "andrelaszlo", "id": 21381, "node_id": "MDQ6VXNlcjIxMzgx", "avatar_url": "https://avatars2.githubusercontent.com/u/21381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrelaszlo", "html_url": "https://github.com/andrelaszlo", "followers_url": "https://api.github.com/users/andrelaszlo/followers", "following_url": "https://api.github.com/users/andrelaszlo/following{/other_user}", "gists_url": "https://api.github.com/users/andrelaszlo/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrelaszlo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrelaszlo/subscriptions", "organizations_url": "https://api.github.com/users/andrelaszlo/orgs", "repos_url": "https://api.github.com/users/andrelaszlo/repos", "events_url": "https://api.github.com/users/andrelaszlo/events{/privacy}", "received_events_url": "https://api.github.com/users/andrelaszlo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2015-04-13T15:53:24Z", "updated_at": "2018-01-11T19:27:11Z", "closed_at": "2018-01-11T19:27:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "After some discussion in [this Stack Overflow question](http://stackoverflow.com/q/29602929/98057) we realized that pyquery's `text` method doesn't match how html usually works. PyQuery inserts spaces in places where you wouldn't expect them.\n\nFor example:\n\n``` python\n>>> pq('<div><span>foo</span><span>bar</span></div>').text()\n'foo bar'\n```\n\nBut this renders as \"foobar\" in most (all?) browsers and jQuery's [`text()`](https://github.com/jquery/jquery/blob/3a0dd5a3d3a23e81dfb32af2871fab6be4619434/src/selector-sizzle.js#L10) (which is just importing Sizzle's /[`getText()`](https://github.com/jquery/sizzle/blob/a6ca3e9919c7a77001bdec01b3579e4bafd73a84/src/sizzle.js#L963)) would also return `\"foobar\"`. Also see [Section 16.6.1 of the CSS2.1 spec](http://www.w3.org/TR/CSS21/text.html#white-space-model) for how browsers are supposed to render whitespace.\n\nI started writing a fix but I realized that this would break a lot of the tests as well as backwards-compatibility, so I'm submitting this issue instead!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/98", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/98/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/98/events", "html_url": "https://github.com/gawel/pyquery/issues/98", "id": 63406866, "node_id": "MDU6SXNzdWU2MzQwNjg2Ng==", "number": 98, "title": "css selector contains not working correctly", "user": {"login": "csch0", "id": 3438979, "node_id": "MDQ6VXNlcjM0Mzg5Nzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3438979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csch0", "html_url": "https://github.com/csch0", "followers_url": "https://api.github.com/users/csch0/followers", "following_url": "https://api.github.com/users/csch0/following{/other_user}", "gists_url": "https://api.github.com/users/csch0/gists{/gist_id}", "starred_url": "https://api.github.com/users/csch0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csch0/subscriptions", "organizations_url": "https://api.github.com/users/csch0/orgs", "repos_url": "https://api.github.com/users/csch0/repos", "events_url": "https://api.github.com/users/csch0/events{/privacy}", "received_events_url": "https://api.github.com/users/csch0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-21T13:57:46Z", "updated_at": "2015-03-21T20:12:36Z", "closed_at": "2015-03-21T20:12:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Tried to use this package with the following example:\n\n```\n<!DOCTYPE html>\n<html>\n<head>\n    <title></title>\n</head>\n<body>\n    <table>\n        <tr>\n            <td>r1 / c1</td>\n            <td>r1 / c2</td>\n        </tr>\n        <tr>\n            <td>r2 / c1</td>\n            <td>r2 / c2</td>\n        </tr>\n    </table>\n</body>\n</html>\n```\n\njQuery $('table:contains(\"r1\")') will clearly return the whole table. pyquery instead returns nothing with q('table:contains(\"r1\")')\n\nam I missing something??\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/95", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/95/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/95/events", "html_url": "https://github.com/gawel/pyquery/issues/95", "id": 56117850, "node_id": "MDU6SXNzdWU1NjExNzg1MA==", "number": 95, "title": "How I get the text?", "user": {"login": "zhao-ji", "id": 4225596, "node_id": "MDQ6VXNlcjQyMjU1OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/4225596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhao-ji", "html_url": "https://github.com/zhao-ji", "followers_url": "https://api.github.com/users/zhao-ji/followers", "following_url": "https://api.github.com/users/zhao-ji/following{/other_user}", "gists_url": "https://api.github.com/users/zhao-ji/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhao-ji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhao-ji/subscriptions", "organizations_url": "https://api.github.com/users/zhao-ji/orgs", "repos_url": "https://api.github.com/users/zhao-ji/repos", "events_url": "https://api.github.com/users/zhao-ji/events{/privacy}", "received_events_url": "https://api.github.com/users/zhao-ji/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-31T08:26:25Z", "updated_at": "2015-03-21T20:13:46Z", "closed_at": "2015-03-21T20:13:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "> > > p.html(\"you know <a href='http://python.org/'>Python</a> rocks\")\n> > > [<p#hello.hello>]\n> > > print(p.html())\n> > > you know <a href=\"http://python.org/\">Python</a> rocks\n> > > print(p.text())\n> > > you know Python rocks\n\nNow I can get the text \"Python\" by p(\"a\").html(), so how can I get the text \"rocks\"?\n\ncan you help me? \n@dowski @yodalee \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/91", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/91/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/91/events", "html_url": "https://github.com/gawel/pyquery/issues/91", "id": 52160751, "node_id": "MDU6SXNzdWU1MjE2MDc1MQ==", "number": 91, "title": "Problem with :first object has no attribute 'add_post_condition'", "user": {"login": "korjavin", "id": 148765, "node_id": "MDQ6VXNlcjE0ODc2NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/148765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/korjavin", "html_url": "https://github.com/korjavin", "followers_url": "https://api.github.com/users/korjavin/followers", "following_url": "https://api.github.com/users/korjavin/following{/other_user}", "gists_url": "https://api.github.com/users/korjavin/gists{/gist_id}", "starred_url": "https://api.github.com/users/korjavin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/korjavin/subscriptions", "organizations_url": "https://api.github.com/users/korjavin/orgs", "repos_url": "https://api.github.com/users/korjavin/repos", "events_url": "https://api.github.com/users/korjavin/events{/privacy}", "received_events_url": "https://api.github.com/users/korjavin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-12-16T20:11:17Z", "updated_at": "2018-11-21T08:29:03Z", "closed_at": "2018-11-21T08:29:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nfrom pyquery import PyQuery as pq\nd = pq(url='http://whatthecommit.com/')\n```\n\n```\nprint d(\"div#content > p:first \").text()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/lib/python2.7/dist-packages/pyquery/pyquery.py\", line 237, in __call__\n    result = self.__class__(*args, parent=self, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/pyquery/pyquery.py\", line 213, in __init__\n    xpath = self._css_to_xpath(selector)\n  File \"/usr/lib/python2.7/dist-packages/pyquery/pyquery.py\", line 223, in _css_to_xpath\n    return self._translator.css_to_xpath(selector, prefix)\n  File \"/usr/lib/python2.7/dist-packages/cssselect/xpath.py\", line 192, in css_to_xpath\n    for selector in parse(css))\n  File \"/usr/lib/python2.7/dist-packages/cssselect/xpath.py\", line 192, in <genexpr>\n    for selector in parse(css))\n  File \"/usr/lib/python2.7/dist-packages/cssselect/xpath.py\", line 219, in selector_to_xpath\n    xpath = self.xpath(tree)\n  File \"/usr/lib/python2.7/dist-packages/cssselect/xpath.py\", line 254, in xpath\n    return method(parsed_selector)\n  File \"/usr/lib/python2.7/dist-packages/cssselect/xpath.py\", line 264, in xpath_combinedselector\n    self.xpath(combined.subselector))\n  File \"/usr/lib/python2.7/dist-packages/cssselect/xpath.py\", line 254, in xpath\n    return method(parsed_selector)\n  File \"/usr/lib/python2.7/dist-packages/cssselect/xpath.py\", line 292, in xpath_pseudo\n    return method(self.xpath(pseudo.selector))\n  File \"/usr/lib/python2.7/dist-packages/pyquery/cssselectpatch.py\", line 19, in xpath_first_pseudo\n    xpath.add_post_condition('position() = 1')\nAttributeError: 'XPathExpr' object has no attribute 'add_post_condition'\n\n```\n\n```\nd(\"div\")(\"p:first\")\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/lib/python2.7/dist-packages/pyquery/pyquery.py\", line 237, in __call__\n    result = self.__class__(*args, parent=self, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/pyquery/pyquery.py\", line 213, in __init__\n    xpath = self._css_to_xpath(selector)\n  File \"/usr/lib/python2.7/dist-packages/pyquery/pyquery.py\", line 223, in _css_to_xpath\n    return self._translator.css_to_xpath(selector, prefix)\n  File \"/usr/lib/python2.7/dist-packages/cssselect/xpath.py\", line 192, in css_to_xpath\n    for selector in parse(css))\n  File \"/usr/lib/python2.7/dist-packages/cssselect/xpath.py\", line 192, in <genexpr>\n    for selector in parse(css))\n  File \"/usr/lib/python2.7/dist-packages/cssselect/xpath.py\", line 219, in selector_to_xpath\n    xpath = self.xpath(tree)\n  File \"/usr/lib/python2.7/dist-packages/cssselect/xpath.py\", line 254, in xpath\n    return method(parsed_selector)\n  File \"/usr/lib/python2.7/dist-packages/cssselect/xpath.py\", line 292, in xpath_pseudo\n    return method(self.xpath(pseudo.selector))\n  File \"/usr/lib/python2.7/dist-packages/pyquery/cssselectpatch.py\", line 19, in xpath_first_pseudo\n    xpath.add_post_condition('position() = 1')\nAttributeError: 'XPathExpr' object has no attribute 'add_post_condition'\n\n```\n\n```\n apt-cache show python-pyquery\nPackage: python-pyquery\nSource: pyquery\nVersion: 1.2.4-1\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/86", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/86/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/86/events", "html_url": "https://github.com/gawel/pyquery/issues/86", "id": 45686752, "node_id": "MDU6SXNzdWU0NTY4Njc1Mg==", "number": 86, "title": "`.attr()` is not documented", "user": {"login": "denilsonsa", "id": 121676, "node_id": "MDQ6VXNlcjEyMTY3Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/121676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denilsonsa", "html_url": "https://github.com/denilsonsa", "followers_url": "https://api.github.com/users/denilsonsa/followers", "following_url": "https://api.github.com/users/denilsonsa/following{/other_user}", "gists_url": "https://api.github.com/users/denilsonsa/gists{/gist_id}", "starred_url": "https://api.github.com/users/denilsonsa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denilsonsa/subscriptions", "organizations_url": "https://api.github.com/users/denilsonsa/orgs", "repos_url": "https://api.github.com/users/denilsonsa/repos", "events_url": "https://api.github.com/users/denilsonsa/events{/privacy}", "received_events_url": "https://api.github.com/users/denilsonsa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-10-13T21:13:54Z", "updated_at": "2018-11-21T08:29:32Z", "closed_at": "2018-11-21T08:29:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the official documentation: http://pyquery.readthedocs.org/en/latest/api.html\n\nThere is `removeAttr()`, but `attr()` is not listed there.\n\nIn other words, the documentation does not explain how to get or set attributes (but it explains how to remove them).\n\nWould be nice to double-check if there are any other undocumented methods.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/79", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/79/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/79/events", "html_url": "https://github.com/gawel/pyquery/issues/79", "id": 40729973, "node_id": "MDU6SXNzdWU0MDcyOTk3Mw==", "number": 79, "title": "Error when install pyquery 1.2.8 in python 3.4", "user": {"login": "cuongdn", "id": 6831916, "node_id": "MDQ6VXNlcjY4MzE5MTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/6831916?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuongdn", "html_url": "https://github.com/cuongdn", "followers_url": "https://api.github.com/users/cuongdn/followers", "following_url": "https://api.github.com/users/cuongdn/following{/other_user}", "gists_url": "https://api.github.com/users/cuongdn/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuongdn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuongdn/subscriptions", "organizations_url": "https://api.github.com/users/cuongdn/orgs", "repos_url": "https://api.github.com/users/cuongdn/repos", "events_url": "https://api.github.com/users/cuongdn/events{/privacy}", "received_events_url": "https://api.github.com/users/cuongdn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-08-20T18:37:48Z", "updated_at": "2014-08-20T18:55:15Z", "closed_at": "2014-08-20T18:55:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I try to install pyquery in python 3.4 but I am getting these errors (it works when installing in python 2.7.8). Here's the error log. Any idea to fix this?\n\npython setup.py install\nrunning install\nrunning bdist_egg\nrunning egg_info\nwriting pyquery.egg-info\\PKG-INFO\nwriting top-level names to pyquery.egg-info\\top_level.txt\nwriting dependency_links to pyquery.egg-info\\dependency_links.txt\nwriting requirements to pyquery.egg-info\\requires.txt\nwriting entry points to pyquery.egg-info\\entry_points.txt\nreading manifest file 'pyquery.egg-info\\SOURCES.txt'\nreading manifest template 'MANIFEST.in'\nno previously-included directories found matching 'docs_build'\nwarning: no previously-included files matching '*.pyc' found anywhere in distrib\nution\nwarning: no previously-included files matching '**pycache**' found anywhere in d\nistribution\nwriting manifest file 'pyquery.egg-info\\SOURCES.txt'\ninstalling library code to build\\bdist.win-amd64\\egg\nrunning install_lib\nrunning build_py\ncreating build\\bdist.win-amd64\\egg\ncreating build\\bdist.win-amd64\\egg\\pyquery\ncopying build\\lib\\pyquery\\ajax.py -> build\\bdist.win-amd64\\egg\\pyquery\ncopying build\\lib\\pyquery\\cssselectpatch.py -> build\\bdist.win-amd64\\egg\\pyquery\n\ncopying build\\lib\\pyquery\\openers.py -> build\\bdist.win-amd64\\egg\\pyquery\ncopying build\\lib\\pyquery\\pyquery.py -> build\\bdist.win-amd64\\egg\\pyquery\ncopying build\\lib\\pyquery\\rules.py -> build\\bdist.win-amd64\\egg\\pyquery\ncopying build\\lib\\pyquery__init__.py -> build\\bdist.win-amd64\\egg\\pyquery\nbyte-compiling build\\bdist.win-amd64\\egg\\pyquery\\ajax.py to ajax.cpython-34.pyc\nbyte-compiling build\\bdist.win-amd64\\egg\\pyquery\\cssselectpatch.py to cssselectp\natch.cpython-34.pyc\nbyte-compiling build\\bdist.win-amd64\\egg\\pyquery\\openers.py to openers.cpython-3\n4.pyc\nbyte-compiling build\\bdist.win-amd64\\egg\\pyquery\\pyquery.py to pyquery.cpython-3\n4.pyc\nbyte-compiling build\\bdist.win-amd64\\egg\\pyquery\\rules.py to rules.cpython-34.py\nc\nbyte-compiling build\\bdist.win-amd64\\egg\\pyquery__init__.py to **init**.cpython\n-34.pyc\ncreating build\\bdist.win-amd64\\egg\\EGG-INFO\ncopying pyquery.egg-info\\PKG-INFO -> build\\bdist.win-amd64\\egg\\EGG-INFO\ncopying pyquery.egg-info\\SOURCES.txt -> build\\bdist.win-amd64\\egg\\EGG-INFO\ncopying pyquery.egg-info\\dependency_links.txt -> build\\bdist.win-amd64\\egg\\EGG-I\nNFO\ncopying pyquery.egg-info\\entry_points.txt -> build\\bdist.win-amd64\\egg\\EGG-INFO\ncopying pyquery.egg-info\\not-zip-safe -> build\\bdist.win-amd64\\egg\\EGG-INFO\ncopying pyquery.egg-info\\requires.txt -> build\\bdist.win-amd64\\egg\\EGG-INFO\ncopying pyquery.egg-info\\top_level.txt -> build\\bdist.win-amd64\\egg\\EGG-INFO\ncreating 'dist\\pyquery-1.2.8-py3.4.egg' and adding 'build\\bdist.win-amd64\\egg' t\no it\nremoving 'build\\bdist.win-amd64\\egg' (and everything under it)\nProcessing pyquery-1.2.8-py3.4.egg\nremoving 'c:\\program files\\python\\lib\\site-packages\\pyquery-1.2.8-py3.4.egg' (an\nd everything under it)\ncreating c:\\program files\\python\\lib\\site-packages\\pyquery-1.2.8-py3.4.egg\nExtracting pyquery-1.2.8-py3.4.egg to c:\\program files\\python\\lib\\site-packages\npyquery 1.2.8 is already the active version in easy-install.pth\n\nInstalled c:\\program files\\python\\lib\\site-packages\\pyquery-1.2.8-py3.4.egg\nProcessing dependencies for pyquery==1.2.8\nSearching for lxml>=2.1\nReading https://pypi.python.org/simple/lxml/\nBest match: lxml 3.3.5\nDownloading https://pypi.python.org/packages/source/l/lxml/lxml-3.3.5.tar.gz#md5\n=88c75f4c73fc8f59c9ebb17495044f2f\nProcessing lxml-3.3.5.tar.gz\nWriting C:\\Users\\Admin\\AppData\\Local\\Temp\\easy_install-tn4yet_9\\lxml-3.3.5\\setup\n.cfg\nRunning lxml-3.3.5\\setup.py -q bdist_egg --dist-dir C:\\Users\\Admin\\AppData\\Local\n\\Temp\\easy_install-tn4yet_9\\lxml-3.3.5\\egg-dist-tmp-vtla5mx8\nBuilding lxml version 3.3.5.\nBuilding without Cython.\nERROR: b\"'xslt-config' is not recognized as an internal or external command,\\r\\n\noperable program or batch file.\\r\\n\"\n*\\* make sure the development packages of libxml2 and libxslt are installed **\n\nUsing build configuration of libxslt\nC:\\Program Files\\Python\\lib\\distutils\\dist.py:260: UserWarning: Unknown distribu\ntion option: 'bugtrack_url'\n  warnings.warn(msg)\nerror: Setup script exited with error: Unable to find vcvarsall.bat\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/78", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/78/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/78/events", "html_url": "https://github.com/gawel/pyquery/issues/78", "id": 40441726, "node_id": "MDU6SXNzdWU0MDQ0MTcyNg==", "number": 78, "title": "items() uses wrong translator on children", "user": {"login": "puetzk", "id": 3821535, "node_id": "MDQ6VXNlcjM4MjE1MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3821535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puetzk", "html_url": "https://github.com/puetzk", "followers_url": "https://api.github.com/users/puetzk/followers", "following_url": "https://api.github.com/users/puetzk/following{/other_user}", "gists_url": "https://api.github.com/users/puetzk/gists{/gist_id}", "starred_url": "https://api.github.com/users/puetzk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puetzk/subscriptions", "organizations_url": "https://api.github.com/users/puetzk/orgs", "repos_url": "https://api.github.com/users/puetzk/repos", "events_url": "https://api.github.com/users/puetzk/events{/privacy}", "received_events_url": "https://api.github.com/users/puetzk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-08-17T19:52:07Z", "updated_at": "2014-08-17T21:06:26Z", "closed_at": "2014-08-17T21:06:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "If using a PyQuery object with customized translator (e.g. [pdfquery](https://github.com/jcushman/pdfquery)'s additional :in_bbox and ovefrlaps_bbox selectors, or [lxml.cssselect](https://pythonhosted.org/cssselect/), the PyQuery objects created when iterating via items() do not inherit this customization.\n\nOther methods that return sub-selects all seem to pass a parent keyword argument to the new instance\n\n```\nself.__class__(elements, **dict(parent=self))\n```\n\nitems() does not do so, and constructs a plain PyQuery object\n\n```\nyield self.__class__(elem)\n```\n\nAdding the parent dict seems to make items() work as expected.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/76", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/76/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/76/events", "html_url": "https://github.com/gawel/pyquery/issues/76", "id": 39374873, "node_id": "MDU6SXNzdWUzOTM3NDg3Mw==", "number": 76, "title": "Google Chrome+Selenium+PyQuery issue", "user": {"login": "stigdescamps", "id": 7765646, "node_id": "MDQ6VXNlcjc3NjU2NDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/7765646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stigdescamps", "html_url": "https://github.com/stigdescamps", "followers_url": "https://api.github.com/users/stigdescamps/followers", "following_url": "https://api.github.com/users/stigdescamps/following{/other_user}", "gists_url": "https://api.github.com/users/stigdescamps/gists{/gist_id}", "starred_url": "https://api.github.com/users/stigdescamps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stigdescamps/subscriptions", "organizations_url": "https://api.github.com/users/stigdescamps/orgs", "repos_url": "https://api.github.com/users/stigdescamps/repos", "events_url": "https://api.github.com/users/stigdescamps/events{/privacy}", "received_events_url": "https://api.github.com/users/stigdescamps/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2014-08-03T17:41:35Z", "updated_at": "2014-08-30T17:27:43Z", "closed_at": "2014-08-04T10:36:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nSince Chrome upgraded, I have issues in the following code:\n\ndriver.get(url_) # Selenium part\n\njQuery = pq(self.driver.page_source) # PyQuery part\n\nfor zone in jQuery(\"table\"):\n    table = jQuery(zone)\n    if table.attr(\"class\") == \"gf-table historical_price\":\n        ... here I read the content ...\n\nUnfortunately, it worked perfectly before Google Chrome upgraded 2 or 3 months ago, and now I read no content at all. I have content in the jQuery variable but it seems impossible to read it as html in the loop.\n\nAs a workaround, I downgraded Chrome but for some reason, Chrome automatically upgrade while I blocked it. Anyway, that is a dirty solution.\n\nDo you see where is the reason for this problem?\n\nRegards,\nSD\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/75", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/75/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/75/events", "html_url": "https://github.com/gawel/pyquery/issues/75", "id": 37910493, "node_id": "MDU6SXNzdWUzNzkxMDQ5Mw==", "number": 75, "title": "attribute startsWith, endsWith and contains selectors do not work", "user": {"login": "Euphorbium", "id": 976661, "node_id": "MDQ6VXNlcjk3NjY2MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/976661?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Euphorbium", "html_url": "https://github.com/Euphorbium", "followers_url": "https://api.github.com/users/Euphorbium/followers", "following_url": "https://api.github.com/users/Euphorbium/following{/other_user}", "gists_url": "https://api.github.com/users/Euphorbium/gists{/gist_id}", "starred_url": "https://api.github.com/users/Euphorbium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Euphorbium/subscriptions", "organizations_url": "https://api.github.com/users/Euphorbium/orgs", "repos_url": "https://api.github.com/users/Euphorbium/repos", "events_url": "https://api.github.com/users/Euphorbium/events{/privacy}", "received_events_url": "https://api.github.com/users/Euphorbium/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-07-15T18:14:18Z", "updated_at": "2014-07-15T20:11:34Z", "closed_at": "2014-07-15T20:11:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Only equals selector works correctly, every other selector does not work. For example:\n\n```\npage(\"[id=^'lmenu_']\") \n```\n\nGives: http://pastebin.com/raw.php?i=WDgGtB6n \nwhen it should return every element with an id that starts with lmenu_\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/74", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/74/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/74/events", "html_url": "https://github.com/gawel/pyquery/issues/74", "id": 37861954, "node_id": "MDU6SXNzdWUzNzg2MTk1NA==", "number": 74, "title": "Behavior of PyQuery.is_() is different from jquery", "user": {"login": "johnjohnlin", "id": 1106799, "node_id": "MDQ6VXNlcjExMDY3OTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1106799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnjohnlin", "html_url": "https://github.com/johnjohnlin", "followers_url": "https://api.github.com/users/johnjohnlin/followers", "following_url": "https://api.github.com/users/johnjohnlin/following{/other_user}", "gists_url": "https://api.github.com/users/johnjohnlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnjohnlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnjohnlin/subscriptions", "organizations_url": "https://api.github.com/users/johnjohnlin/orgs", "repos_url": "https://api.github.com/users/johnjohnlin/repos", "events_url": "https://api.github.com/users/johnjohnlin/events{/privacy}", "received_events_url": "https://api.github.com/users/johnjohnlin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-07-15T08:38:34Z", "updated_at": "2014-08-27T19:45:38Z", "closed_at": "2014-08-27T19:45:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I am using 1.2.4\nWhen using jquery in google chrome console, I get this\n\n```\n    x = $(\"<div></div>\")\n    y = $(\"<div><table></table></div>\")\n    x.is(\"table\")\n    False\n    y.is(\"table\")\n    False\n```\n\nBut using pyquery, I get this\n\n```\n    x = pq(\"<div></div>\")\n    y = pq(\"<div><table></table></div>\")\n    x.is_(\"table\")\n    False\n    y.is_(\"table\")\n    True\n```\n\nI don't know whether it is a bug or the `is_()` function was designed to behave this way?\nThank you very much\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/71", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/71/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/71/events", "html_url": "https://github.com/gawel/pyquery/issues/71", "id": 34653403, "node_id": "MDU6SXNzdWUzNDY1MzQwMw==", "number": 71, "title": "Why I must wait some seconds, the pyquery can return the right result.", "user": {"login": "viquu", "id": 4003817, "node_id": "MDQ6VXNlcjQwMDM4MTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/4003817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viquu", "html_url": "https://github.com/viquu", "followers_url": "https://api.github.com/users/viquu/followers", "following_url": "https://api.github.com/users/viquu/following{/other_user}", "gists_url": "https://api.github.com/users/viquu/gists{/gist_id}", "starred_url": "https://api.github.com/users/viquu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viquu/subscriptions", "organizations_url": "https://api.github.com/users/viquu/orgs", "repos_url": "https://api.github.com/users/viquu/repos", "events_url": "https://api.github.com/users/viquu/events{/privacy}", "received_events_url": "https://api.github.com/users/viquu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-05-30T15:07:51Z", "updated_at": "2014-06-03T08:30:36Z", "closed_at": "2014-06-03T08:30:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want track a Lego at amazon.co.jp.\n\nMy code is : \n\n```\namzJp42009Url = 'http://www.amazon.co.jp/gp/product/B00B0IDCJM/'\nuserAgent = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.114 Safari/537.36'\n\nheaders = {'User-Agent' : userAgent}\n\nr = requests.get(amzJp42009Url, headers=headers)\n\nhtml = r.text\nd = pq(html)\n\nprint d.html()   //something else like: time.sleep(1)\n\nprice = d(\"#actualPriceValue\").html()\n\nprint price\n```\n\nThe this code can get the price.But if I remove the line : \n\n```\nprint d.html()  //something else like: time.sleep(1)\n```\n\nThen the price is None.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/70", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/70/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/70/events", "html_url": "https://github.com/gawel/pyquery/issues/70", "id": 33326368, "node_id": "MDU6SXNzdWUzMzMyNjM2OA==", "number": 70, "title": "`.append` unexpected output", "user": {"login": "BertrandBordage", "id": 1119169, "node_id": "MDQ6VXNlcjExMTkxNjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1119169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BertrandBordage", "html_url": "https://github.com/BertrandBordage", "followers_url": "https://api.github.com/users/BertrandBordage/followers", "following_url": "https://api.github.com/users/BertrandBordage/following{/other_user}", "gists_url": "https://api.github.com/users/BertrandBordage/gists{/gist_id}", "starred_url": "https://api.github.com/users/BertrandBordage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BertrandBordage/subscriptions", "organizations_url": "https://api.github.com/users/BertrandBordage/orgs", "repos_url": "https://api.github.com/users/BertrandBordage/repos", "events_url": "https://api.github.com/users/BertrandBordage/events{/privacy}", "received_events_url": "https://api.github.com/users/BertrandBordage/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-05-12T16:58:02Z", "updated_at": "2014-08-31T06:39:33Z", "closed_at": "2014-08-31T06:39:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all, thanks for this awesome project! It definitely rocks.\n\nHowever, I think I found a bug. Maybe I don\u2019t understand how it\u2019s supposed to work, but I think the `.append` method is not working properly.\n\nWhen I do:\n\n``` python\nfrom pyquery import PyQuery as pq\nd = pq('<p>ab</p>')\nd('p').append('*')\nprint d\n```\n\nI get `<p>ab*</p>` (as expected).\nBut when I do:\n\n``` python\nd = pq('<p>a<p>b</p></p>')\nd('p').append('*')\nprint d\n```\n\nI get `<p>a<p>b*<p>b*</p>*</p>*</p>` when I was expecting `<p>a<p>b*</p>*</p>`!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/68", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/68/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/68/events", "html_url": "https://github.com/gawel/pyquery/issues/68", "id": 33056121, "node_id": "MDU6SXNzdWUzMzA1NjEyMQ==", "number": 68, "title": "PyQuery.replaceWith failed with PyQuery argument", "user": {"login": "hguenot", "id": 2578010, "node_id": "MDQ6VXNlcjI1NzgwMTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2578010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hguenot", "html_url": "https://github.com/hguenot", "followers_url": "https://api.github.com/users/hguenot/followers", "following_url": "https://api.github.com/users/hguenot/following{/other_user}", "gists_url": "https://api.github.com/users/hguenot/gists{/gist_id}", "starred_url": "https://api.github.com/users/hguenot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hguenot/subscriptions", "organizations_url": "https://api.github.com/users/hguenot/orgs", "repos_url": "https://api.github.com/users/hguenot/repos", "events_url": "https://api.github.com/users/hguenot/events{/privacy}", "received_events_url": "https://api.github.com/users/hguenot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-05-08T05:44:20Z", "updated_at": "2014-05-08T05:51:22Z", "closed_at": "2014-05-08T05:51:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \n\nI've made a simple test replacing one node by another in an html content. If replacement node is a PyQuery instance, replacing_with fails : \n\nTest code:\n\n```\nfrom pyquery import PyQuery as pq\nfrom lxml import etree\n\n# Failes\nd = pq('<html><body><input type=\"text\" /></body>')\nres = d('input').replaceWith(pq('<textarea></textarea>'))\nprint d.outerHtml()\n```\n\nAnd the output traceback :\n\n```\n<html><body><textarea></textarea></body></html>\nTraceback (most recent call last):\n  File \"test-pyquery.py\", line 9, in <module>\n    res = d('input').replaceWith(pq('<textarea></textarea>'))\n  File \"/home/herve/dev/python/tmp/TestWebApp/aa/env/local/lib/python2.7/site-packages/pyquery/pyquery.py\", line 1302, in replace_with\n    value(i, element) + (element.tail or ''))\n  File \"/home/herve/dev/python/tmp/TestWebApp/aa/env/local/lib/python2.7/site-packages/pyquery/pyquery.py\", line 264, in __call__\n    result = self.__class__(*args, parent=self, **kwargs)\n  File \"/home/herve/dev/python/tmp/TestWebApp/aa/env/local/lib/python2.7/site-packages/pyquery/pyquery.py\", line 239, in __init__\n    xpath = self._css_to_xpath(selector)\n  File \"/home/herve/dev/python/tmp/TestWebApp/aa/env/local/lib/python2.7/site-packages/pyquery/pyquery.py\", line 248, in _css_to_xpath\n    selector = selector.replace('[@', '[')\nAttributeError: 'int' object has no attribute 'replace'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/67", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/67/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/67/events", "html_url": "https://github.com/gawel/pyquery/issues/67", "id": 32739665, "node_id": "MDU6SXNzdWUzMjczOTY2NQ==", "number": 67, "title": ".gitignore file missing.", "user": {"login": "suhailv", "id": 3763036, "node_id": "MDQ6VXNlcjM3NjMwMzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3763036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suhailv", "html_url": "https://github.com/suhailv", "followers_url": "https://api.github.com/users/suhailv/followers", "following_url": "https://api.github.com/users/suhailv/following{/other_user}", "gists_url": "https://api.github.com/users/suhailv/gists{/gist_id}", "starred_url": "https://api.github.com/users/suhailv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suhailv/subscriptions", "organizations_url": "https://api.github.com/users/suhailv/orgs", "repos_url": "https://api.github.com/users/suhailv/repos", "events_url": "https://api.github.com/users/suhailv/events{/privacy}", "received_events_url": "https://api.github.com/users/suhailv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-05-03T04:29:41Z", "updated_at": "2014-05-14T08:37:25Z", "closed_at": "2014-05-12T12:59:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I found there is a lack of `.gitignore` file. So as a first step i created a `.gitignore` file. Please review it. mail me to suhailvs@gmail.com\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/65", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/65/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/65/events", "html_url": "https://github.com/gawel/pyquery/issues/65", "id": 32527690, "node_id": "MDU6SXNzdWUzMjUyNzY5MA==", "number": 65, "title": "PyQuery.make_links_absolute() creates 'href' attribute when it isn't there", "user": {"login": "tomako", "id": 1412056, "node_id": "MDQ6VXNlcjE0MTIwNTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1412056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomako", "html_url": "https://github.com/tomako", "followers_url": "https://api.github.com/users/tomako/followers", "following_url": "https://api.github.com/users/tomako/following{/other_user}", "gists_url": "https://api.github.com/users/tomako/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomako/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomako/subscriptions", "organizations_url": "https://api.github.com/users/tomako/orgs", "repos_url": "https://api.github.com/users/tomako/repos", "events_url": "https://api.github.com/users/tomako/events{/privacy}", "received_events_url": "https://api.github.com/users/tomako/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-04-30T11:46:44Z", "updated_at": "2014-05-12T15:32:34Z", "closed_at": "2014-05-12T15:32:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is a simple example:\n\n``` python\nfrom pyquery import PyQuery\nd = PyQuery(\"<a>Blah</a>\")\nprint d(\"a\").attr.href is None  # True\nd.make_links_absolute(\"http://blah.org/\")\nprint d(\"a\").attr.href  # 'http://blah.org/'\n```\n\nI'm sure most of the time there is a good reason why an `<a>` is without `href` so I don't think PyQuery should create that attribute in these cases.\nWhat do you think?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/62", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/62/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/62/events", "html_url": "https://github.com/gawel/pyquery/issues/62", "id": 31524756, "node_id": "MDU6SXNzdWUzMTUyNDc1Ng==", "number": 62, "title": "status of tests in -1.2.8; failures=2", "user": {"login": "idella", "id": 1655078, "node_id": "MDQ6VXNlcjE2NTUwNzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1655078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idella", "html_url": "https://github.com/idella", "followers_url": "https://api.github.com/users/idella/followers", "following_url": "https://api.github.com/users/idella/following{/other_user}", "gists_url": "https://api.github.com/users/idella/gists{/gist_id}", "starred_url": "https://api.github.com/users/idella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idella/subscriptions", "organizations_url": "https://api.github.com/users/idella/orgs", "repos_url": "https://api.github.com/users/idella/repos", "events_url": "https://api.github.com/users/idella/events{/privacy}", "received_events_url": "https://api.github.com/users/idella/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-04-15T04:00:33Z", "updated_at": "2014-04-15T16:04:37Z", "closed_at": "2014-04-15T16:04:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "now let's try again with with the right runs. (Sorry for the confusion)\n\nRunning tox as is OR editing tox.ini and running one python at a time;\n\n/path/to/pyquery-1.2.8 $ tox\n\nwe get \n\n``` python\ntest_comment (tests.test_pyquery.TestComment) ... ok\ntest_parser_persistance (tests.test_pyquery.TestHTMLParser) ... ok\ntest_replaceWith (tests.test_pyquery.TestHTMLParser) ... FAIL\ntest_replaceWith_with_function (tests.test_pyquery.TestHTMLParser) ... FAIL\ntest_soup_parser (tests.test_pyquery.TestHTMLParser) ... ok\ntest_class (tests.test_pyquery.TestManipulating) ... ok\ntest_remove (tests.test_pyquery.TestManipulating) ... ok\n----------------------------------------------------------\n==============================================================\nFAIL: test_replaceWith (tests.test_pyquery.TestHTMLParser)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/mnt/gen2/TmpDir/portage/dev-python/pyquery-1.2.8/work/pyquery-1.2.8/tests/test_pyquery.py\", line 413, in test_replaceWith\n    assert val == expected, (repr(val), repr(expected))\nnose.proxy.AssertionError: ('\\'<div class=\"portlet\">\\\\n      <a href=\"/toto\">TestimageMy link text</a>\\\\n      <a href=\"/toto2\">imageMy link\ntext 2</a>\\\\n      Behind you, a three-headed HTML&amp;dash;Entity!\\\\n    </div>\\\\n    \\'', '\\'<div class=\"portlet\">\\\\n      <a\nhref=\"/toto\">TestimageMy link text</a>\\\\n      <a href=\"/toto2\">imageMy link text 2</a>\\\\n      Behind you, a three-headed\nHTML&amp;dash;Entity!\\\\n    </div>\\'')\n    d = pq(self.html)\n    d('img').replace_with('image')\n    '<div class=\"portlet\">\\n      <a href=\"/toto\">TestimageMy link text</a>\\n      <a href=\"/toto2\">imageMy link text 2</a>\\n      Behind you, a\nthree-headed HTML&amp;dash;Entity!\\n    </div>\\n    ' = d.__html__()\n>>  assert '<div class=\"portlet\">\\n      <a href=\"/toto\">TestimageMy link text</a>\\n      <a href=\"/toto2\">imageMy link text 2</a>\\n      Behind\nyou, a three-headed HTML&amp;dash;Entity!\\n    </div>\\n    ' == '<div class=\"portlet\">\\n      <a href=\"/toto\">TestimageMy link text</a>\\n\n<a href=\"/toto2\">imageMy link text 2</a>\\n      Behind you, a three-headed HTML&amp;dash;Entity!\\n    </div>', (repr('<div class=\"portlet\">\\n\n<a href=\"/toto\">TestimageMy link text</a>\\n      <a href=\"/toto2\">imageMy link text 2</a>\\n      Behind you, a three-headed\nHTML&amp;dash;Entity!\\n    </div>\\n    '), repr('<div class=\"portlet\">\\n      <a href=\"/toto\">TestimageMy link text</a>\\n      <a\nhref=\"/toto2\">imageMy link text 2</a>\\n      Behind you, a three-headed HTML&amp;dash;Entity!\\n    </div>'))\n\n\n=========================================================\nFAIL: test_replaceWith_with_function (tests.test_pyquery.TestHTMLParser)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/mnt/gen2/TmpDir/portage/dev-python/pyquery-1.2.8/work/pyquery-1.2.8/tests/test_pyquery.py\", line 424, in test_replaceWith_with_function\n    assert val == expected, (repr(val), repr(expected))\nnose.proxy.AssertionError: ('\\'<div class=\"portlet\">\\\\n      TestimageMy link text\\\\n      imageMy link text 2\\\\n      Behind you, a\nthree-headed HTML&amp;dash;Entity!\\\\n    </div>\\\\n    \\'', '\\'<div class=\"portlet\">\\\\n      TestimageMy link text\\\\n      imageMy link text 2\\\\n\nBehind you, a three-headed HTML&amp;dash;Entity!\\\\n    </div>\\'')\n    d = pq(self.html)\n    d('a').replace_with(lambda i, e: pq(e).html())\n    '<div class=\"portlet\">\\n      TestimageMy link text\\n      imageMy link text 2\\n      Behind you, a three-headed HTML&amp;dash;Entity!\\n\n</div>\\n    ' = d.__html__()\n>>  assert '<div class=\"portlet\">\\n      TestimageMy link text\\n      imageMy link text 2\\n      Behind you, a three-headed\nHTML&amp;dash;Entity!\\n    </div>\\n    ' == '<div class=\"portlet\">\\n      TestimageMy link text\\n      imageMy link text 2\\n      Behind you, a\nthree-headed HTML&amp;dash;Entity!\\n    </div>', (repr('<div class=\"portlet\">\\n      TestimageMy link text\\n      imageMy link text 2\\n\nBehind you, a three-headed HTML&amp;dash;Entity!\\n    </div>\\n    '), repr('<div class=\"portlet\">\\n      TestimageMy link text\\n      imageMy\nlink text 2\\n      Behind you, a three-headed HTML&amp;dash;Entity!\\n    </div>'))\n\n\nName                     Stmts   Miss  Cover   Missing\n------------------------------------------------------\n------------------------------------------------------\npyquery                      6      0   100%\npyquery.ajax                56      4    93%   34, 38, 44, 53\npyquery.cssselectpatch     112     17    85%   23, 73-74, 131-132, 143-144, 149-150, 155-156, 161-162, 189, 200, 211, 223\npyquery.openers             53     10    81%   17-18, 36-37, 42, 58, 64-66, 72\npyquery.pyquery            725     73    90%   80-81, 88, 94, 98, 108, 130-133, 137, 144, 174, 199, 206-207, 220, 227-228, 256, 278-279,\n311-312, 328-329, 393, 430, 436, 441, 671, 713, 716, 750, 753, 761, 794, 799, 892, 985, 998, 1001-1004, 1039, 1097, 1101, 1124, 1133-1134, 1147,\n1149, 1170, 1191-1193, 1200, 1262, 1270-1271, 1276, 1282, 1307-1309, 1316-1320, 1325, 1357, 1396-1397, 1405\npyquery.rules               20     16    20%   4-5, 9-31\n------------------------------------------------------\nTOTAL                      972    120    88%\n----------------------------------------------------------------------\nRan 95 tests in 4.870s\n\nFAILED (failures=2)\nERROR: InvocationError: '/mnt/gen2/TmpDir/portage/dev-python/pyquery-1.2.8/work/pyquery-1.2.8/.tox/py32/bin/nosetests'\n_____________________________summary_________________________\nERROR:   py32: commands failed\n```\n\nERROR:   py32\ncould read;  py27 or py32 or py33.\n\nAll similar outcome.  Given tox.ini states\ncommands =\n    {envbindir}/nosetests []\n\nWith system python set to py 2.7 or 3.2 or py3.3 and double checking by running straight nosetests from the source yields identical results.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/61", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/61/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/61/events", "html_url": "https://github.com/gawel/pyquery/issues/61", "id": 31400074, "node_id": "MDU6SXNzdWUzMTQwMDA3NA==", "number": 61, "title": "status of tests in -1.2.8; failures=7; py3.3", "user": {"login": "idella", "id": 1655078, "node_id": "MDQ6VXNlcjE2NTUwNzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1655078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idella", "html_url": "https://github.com/idella", "followers_url": "https://api.github.com/users/idella/followers", "following_url": "https://api.github.com/users/idella/following{/other_user}", "gists_url": "https://api.github.com/users/idella/gists{/gist_id}", "starred_url": "https://api.github.com/users/idella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idella/subscriptions", "organizations_url": "https://api.github.com/users/idella/orgs", "repos_url": "https://api.github.com/users/idella/repos", "events_url": "https://api.github.com/users/idella/events{/privacy}", "received_events_url": "https://api.github.com/users/idella/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-04-13T09:13:56Z", "updated_at": "2014-04-15T01:50:59Z", "closed_at": "2014-04-15T01:50:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "EDITED;\nIt appears the first run yielded errors from the absence of the new dep.  py3.3 yileds error.\n\nfrom \n/path/to/rdflib-4.1.1/ $\n\nafter building with py3.3, system py3.3 set; (System python is Python 3.3.5)\n\n/path/to/rdflib-4.1.1/build/src $ PYTHON_TARGETS=. ./run_tests.py\n\nyields a very verbose output so I have snipped it;\n\nRan 2313 tests in 76.152s\n\nFAILED (SKIP=78, errors=7)\n\n``` python\nERROR: test.test_dawg.test_dawg(RDFTest(uri=rdflib.term.URIRef('http://www.w3.org/2001/sw/DataAccess/tests/data-r2/basic/manifest#term-1'), name='Basic - Term 1', comment=None, data='file:///mnt/gen2/TmpDir/portage/dev-python/rdflib-4.1.1/work/rdflib-4.1.1-python3_3/build/src/test/DAWG/data-r2/basic/data-4.ttl', graphdata=[], action='file:///mnt/gen2/TmpDir/portage/dev-python/rdflib-4.1.1/work/rdflib-4.1.1-python3_3/build/src/test/DAWG/data-r2/basic/term-1.rq', result=rdflib.term.URIRef('file:///mnt/gen2/TmpDir/portage/dev-python/rdflib-4.1.1/work/rdflib-4.1.1-python3_3/build/src/test/DAWG/data-r2/basic/term-1.srx'), syntax=True),)\n----------------------------------------------------------------------\n\nERROR: test.test_dawg.test_dawg(RDFTest(uri=rdflib.term.URIRef('http://www.w3.org/2001/sw/DataAccess/tests/data-r2/basic/manifest#term-2'), name='Basic - Term 2', comment=None, data='file:///mnt/gen2/TmpDir/portage/dev-python/rdflib-4.1.1/work/rdflib-4.1.1-python3_3/build/src/test/DAWG/data-r2/basic/data-4.ttl', graphdata=[], action='file:///mnt/gen2/TmpDir/portage/dev-python/rdflib-4.1.1/work/rdflib-4.1.1-python3_3/build/src/test/DAWG/data-r2/basic/term-2.rq', result=rdflib.term.URIRef('file:///mnt/gen2/TmpDir/portage/dev-python/rdflib-4.1.1/work/rdflib-4.1.1-python3_3/build/src/test/DAWG/data-r2/basic/term-2.srx'), syntax=True),)\n----------------------------------------------------------------------\n\nERROR: test.test_dawg.test_dawg(RDFTest(uri=rdflib.term.URIRef('http://www.w3.org/2001/sw/DataAccess/tests/data-r2/boolean-effective-value/manifest#dawg-boolean-literal'), name=\"Test literal 'true'\", comment=None, data='file:///mnt/gen2/TmpDir/portage/dev-python/rdflib-4.1.1/work/rdflib-4.1.1-python3_3/build/src/test/DAWG/data-r2/boolean-effective-value/data-1.ttl', graphdata=[], action='file:///mnt/gen2/TmpDir/portage/dev-python/rdflib-4.1.1/work/rdflib-4.1.1-python3_3/build/src/test/DAWG/data-r2/boolean-effective-value/query-boolean-literal.rq', result=rdflib.term.URIRef('file:///mnt/gen2/TmpDir/portage/dev-python/rdflib-4.1.1/work/rdflib-4.1.1-python3_3/build/src/test/DAWG/data-r2/boolean-effective-value/result-boolean-literal.ttl'), syntax=True),)\n----------------------------------------------------------------------\n\nERROR: test.test_dawg.test_dawg(RDFTest(uri=rdflib.term.URIRef('http://www.w3.org/2009/sparql/docs/tests/data-sparql11/functions/manifest#if01'), name='IF()', comment=None, data='file:///mnt/gen2/TmpDir/portage/dev-python/rdflib-4.1.1/work/rdflib-4.1.1-python3_3/build/src/test/DAWG/data-sparql11/functions/data2.ttl', graphdata=[], action='file:///mnt/gen2/TmpDir/portage/dev-python/rdflib-4.1.1/work/rdflib-4.1.1-python3_3/build/src/test/DAWG/data-sparql11/functions/if01.rq', result=rdflib.term.URIRef('file:///mnt/gen2/TmpDir/portage/dev-python/rdflib-4.1.1/work/rdflib-4.1.1-python3_3/build/src/test/DAWG/data-sparql11/functions/if01.srx'), syntax=True),)\n--------------------------------------------------------------------\n\nERROR: test.test_dawg.test_dawg(RDFTest(uri=rdflib.term.URIRef('http://www.w3.org/2009/sparql/docs/tests/data-sparql11/functions/manifest#if02'), name='IF() error propogation', comment=None, data='file:///mnt/gen2/TmpDir/portage/dev-python/rdflib-4.1.1/work/rdflib-4.1.1-python3_3/build/src/test/DAWG/data-sparql11/functions/data2.ttl', graphdata=[], action='file:///mnt/gen2/TmpDir/portage/dev-python/rdflib-4.1.1/work/rdflib-4.1.1-python3_3/build/src/test/DAWG/data-sparql11/functions/if02.rq', result=rdflib.term.URIRef('file:///mnt/gen2/TmpDir/portage/dev-python/rdflib-4.1.1/work/rdflib-4.1.1-python3_3/build/src/test/DAWG/data-sparql11/functions/if02.srx'), syntax=True),)\n----------------------------------------------------------------------\n\nERROR: test.test_dawg.test_dawg(RDFTest(uri=rdflib.term.URIRef('http://www.w3.org/2009/sparql/docs/tests/data-sparql11/syntax-query/manifest#test_26'), name='syntax-not-exists-03.rq', comment=None, data=None, graphdata=None, action='file:///mnt/gen2/TmpDir/portage/dev-python/rdflib-4.1.1/work/rdflib-4.1.1-python3_3/build/src/test/DAWG/data-sparql11/syntax-query/syntax-not-exists-03.rq', result=None, syntax=True),)\n----------------------------------------------------------------------\n```\n\neach yield\n\n``` python\n  File \"/usr/lib64/python3.3/site-packages/pyparsing.py\", line 632, in wrapper\n    return func(*args[limit:])\nTypeError: <lambda>() takes 0 positional arguments but 3 were given\n```\n\nplus\n\n``` python\n======================================================================\nERROR: Failure: TypeError (__class__ assignment: 'UnboundSelf' object layout differs from 'TestStore')\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/failure.py\", line 39, in runTest\n    raise self.exc_val.with_traceback(self.tb)\n  File \"/usr/lib64/python3.3/site-packages/nose/loader.py\", line 516, in makeTest\n    return self._makeTest(obj, parent)\n  File \"/usr/lib64/python3.3/site-packages/nose/loader.py\", line 565, in _makeTest\n    return self.loadTestsFromTestClass(obj)\n  File \"/usr/lib64/python3.3/site-packages/nose/loader.py\", line 509, in loadTestsFromTestClass\n    for case in filter(wanted, dir(cls))]\n  File \"/usr/lib64/python3.3/site-packages/nose/loader.py\", line 508, in <listcomp>\n    cases = [self.makeTest(getattr(cls, case), cls)\n  File \"/usr/lib64/python3.3/site-packages/nose/loader.py\", line 504, in wanted\n    item = unbound_method(cls, item)\n  File \"/usr/lib64/python3.3/site-packages/nose/pyversion.py\", line 131, in unbound_method\n    return UnboundMethod(cls, func)\n  File \"/usr/lib64/python3.3/site-packages/nose/pyversion.py\", line 92, in __init__\n    self.__self__.__class__ = cls\nTypeError: __class__ assignment: 'UnboundSelf' object layout differs from 'TestStore'\n\n----------------------------------------------------------------------\nRan 2313 tests in 76.152s\n\nFAILED (SKIP=78, errors=7)\n```\n\nThe whole log is 481 kb., very verbose.  Can you replicate?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/60", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/60/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/60/events", "html_url": "https://github.com/gawel/pyquery/issues/60", "id": 30928925, "node_id": "MDU6SXNzdWUzMDkyODkyNQ==", "number": 60, "title": "PyQuery(url=_url) got a wrong html", "user": {"login": "Lhfcws", "id": 898272, "node_id": "MDQ6VXNlcjg5ODI3Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/898272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lhfcws", "html_url": "https://github.com/Lhfcws", "followers_url": "https://api.github.com/users/Lhfcws/followers", "following_url": "https://api.github.com/users/Lhfcws/following{/other_user}", "gists_url": "https://api.github.com/users/Lhfcws/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lhfcws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lhfcws/subscriptions", "organizations_url": "https://api.github.com/users/Lhfcws/orgs", "repos_url": "https://api.github.com/users/Lhfcws/repos", "events_url": "https://api.github.com/users/Lhfcws/events{/privacy}", "received_events_url": "https://api.github.com/users/Lhfcws/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-04-06T02:41:10Z", "updated_at": "2014-05-12T16:04:23Z", "closed_at": "2014-05-12T16:04:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "> pyquery (1.2.8, installed from pip) , Python 2.7.5\n\nMy code is just like this:\n\n```\nfrom pyquery import PyQuery\n\npq = PyQuery(url=test_url)\nprint pq(\".breadnav\")\n```\n\n> test_url1 = http://www.autohome.com.cn/265/ \n> test_url2 = http://www.autohome.com.cn/2778/\n\ntest_url1 is fine, but test_url2 is totally wrong. In test_url2, when I printed `pq.html()`, I found that the latter part of `script` tag which was just above tag `div` with `class=\"breadnav\"` was missing or trimmed. And this did not happen in test_url1.  \nIf I use `wget` or browser or `urllib` to get the webpage source, I can get the correct html.  \nAnd test_url2 is not the only one wrong case.\n\nThank u ~ :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/59", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/59/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/59/events", "html_url": "https://github.com/gawel/pyquery/issues/59", "id": 28590011, "node_id": "MDU6SXNzdWUyODU5MDAxMQ==", "number": 59, "title": "Empty text field for HtmlElement", "user": {"login": "iqmaker", "id": 928437, "node_id": "MDQ6VXNlcjkyODQzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/928437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iqmaker", "html_url": "https://github.com/iqmaker", "followers_url": "https://api.github.com/users/iqmaker/followers", "following_url": "https://api.github.com/users/iqmaker/following{/other_user}", "gists_url": "https://api.github.com/users/iqmaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/iqmaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iqmaker/subscriptions", "organizations_url": "https://api.github.com/users/iqmaker/orgs", "repos_url": "https://api.github.com/users/iqmaker/repos", "events_url": "https://api.github.com/users/iqmaker/events{/privacy}", "received_events_url": "https://api.github.com/users/iqmaker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-03-02T22:15:48Z", "updated_at": "2014-03-03T11:09:10Z", "closed_at": "2014-03-03T10:21:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Example: \n\n``` python\nsource =  '<a href=\"/catalogue/Nissan/archive/297/7g330/\" class=\"title\" title=\"Nissan Murano\"><img src=\"http://static.autorambler.ru/35.45/layout/non-foto-archive.jpg\" alt=\"Nissan Murano\" title=\"Nissan Murano\" width=\"230\">I &#1087;&#1086;&#1082;&#1086;&#1083;&#1077;&#1085;&#1080;&#1077; (2002 - 2008)</a>'\n\ntext = PyQuery(source)('a')[0].text\n\n# text is empty, but it's not true\n```\n\ntext is empty, but it's not true\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/56", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/56/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/56/events", "html_url": "https://github.com/gawel/pyquery/issues/56", "id": 23191055, "node_id": "MDU6SXNzdWUyMzE5MTA1NQ==", "number": 56, "title": "QuickStart does not work.", "user": {"login": "BMeridian", "id": 1656188, "node_id": "MDQ6VXNlcjE2NTYxODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1656188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BMeridian", "html_url": "https://github.com/BMeridian", "followers_url": "https://api.github.com/users/BMeridian/followers", "following_url": "https://api.github.com/users/BMeridian/following{/other_user}", "gists_url": "https://api.github.com/users/BMeridian/gists{/gist_id}", "starred_url": "https://api.github.com/users/BMeridian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BMeridian/subscriptions", "organizations_url": "https://api.github.com/users/BMeridian/orgs", "repos_url": "https://api.github.com/users/BMeridian/repos", "events_url": "https://api.github.com/users/BMeridian/events{/privacy}", "received_events_url": "https://api.github.com/users/BMeridian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-11-23T17:54:01Z", "updated_at": "2013-11-23T19:11:56Z", "closed_at": "2013-11-23T18:50:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "The first line:\n\n> > > d(\"#hello\")\n> > > [<p#hello.hello>]\n\nI get this... using python 2.7.5 \nhave requests loaded. \n\n> > > from pyquery import PyQuery as pq\n> > > d = pq('<html> <html> ')\n> > > print d\n> > > <html>  </html>\n> > > print d.html()\n> > > \n> > > d('#hello')\n> > > []\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/54", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/54/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/54/events", "html_url": "https://github.com/gawel/pyquery/issues/54", "id": 20847708, "node_id": "MDU6SXNzdWUyMDg0NzcwOA==", "number": 54, "title": "Doctest failures", "user": {"login": "Arfrever", "id": 656294, "node_id": "MDQ6VXNlcjY1NjI5NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/656294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Arfrever", "html_url": "https://github.com/Arfrever", "followers_url": "https://api.github.com/users/Arfrever/followers", "following_url": "https://api.github.com/users/Arfrever/following{/other_user}", "gists_url": "https://api.github.com/users/Arfrever/gists{/gist_id}", "starred_url": "https://api.github.com/users/Arfrever/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Arfrever/subscriptions", "organizations_url": "https://api.github.com/users/Arfrever/orgs", "repos_url": "https://api.github.com/users/Arfrever/repos", "events_url": "https://api.github.com/users/Arfrever/events{/privacy}", "received_events_url": "https://api.github.com/users/Arfrever/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-10-11T02:45:43Z", "updated_at": "2013-10-11T07:13:36Z", "closed_at": "2013-10-11T07:13:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Doctests in README.rst fail with all versions of Python.\nI use PyQuery 1.2.5.\n\n```\n$ nosetests-3.3\nDoctest: README.rst ... FAIL\n...\n======================================================================\nFAIL: Doctest: README.rst\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/doctest.py\", line 2154, in runTest\n    raise self.failureException(self.format_failure(new.getvalue()))\nnose.proxy.AssertionError: Failed doctest test for README.rst\n  File \"/tmp/pyquery-1.2.5/README.rst\", line 0\n\n----------------------------------------------------------------------\nFile \"/tmp/pyquery-1.2.5/README.rst\", line 34, in README.rst\nFailed example:\n    d = pq(url=your_url)\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib64/python3.3/doctest.py\", line 1287, in __run\n        compileflags, 1), test.globs)\n      File \"<doctest README.rst[5]>\", line 1, in <module>\n        d = pq(url=your_url)\n    NameError: name 'your_url' is not defined\n----------------------------------------------------------------------\nFile \"/tmp/pyquery-1.2.5/README.rst\", line 35, in README.rst\nFailed example:\n    d = pq(url=your_url,\n           opener=lambda url, **kw: urlopen(url).read())\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib64/python3.3/doctest.py\", line 1287, in __run\n        compileflags, 1), test.globs)\n      File \"<doctest README.rst[6]>\", line 1, in <module>\n        d = pq(url=your_url,\n    NameError: name 'your_url' is not defined\n----------------------------------------------------------------------\nFile \"/tmp/pyquery-1.2.5/README.rst\", line 37, in README.rst\nFailed example:\n    d = pq(filename=path_to_html_file)\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib64/python3.3/doctest.py\", line 1287, in __run\n        compileflags, 1), test.globs)\n      File \"<doctest README.rst[7]>\", line 1, in <module>\n        d = pq(filename=path_to_html_file)\n    NameError: name 'path_to_html_file' is not defined\n----------------------------------------------------------------------\nFile \"/tmp/pyquery-1.2.5/README.rst\", line 41, in README.rst\nFailed example:\n    d(\"#hello\")\nExpected:\n    [<p#hello.hello>]\nGot:\n    []\n----------------------------------------------------------------------\nFile \"/tmp/pyquery-1.2.5/README.rst\", line 44, in README.rst\nFailed example:\n    print(p.html())\nExpected:\n    Hello world !\nGot:\n    None\n----------------------------------------------------------------------\nFile \"/tmp/pyquery-1.2.5/README.rst\", line 46, in README.rst\nFailed example:\n    p.html(\"you know <a href='http://python.org/'>Python</a> rocks\")\nExpected:\n    [<p#hello.hello>]\nGot:\n    []\n----------------------------------------------------------------------\nFile \"/tmp/pyquery-1.2.5/README.rst\", line 48, in README.rst\nFailed example:\n    print(p.html())\nExpected:\n    you know <a href=\"http://python.org/\">Python</a> rocks\nGot:\n    None\n----------------------------------------------------------------------\nFile \"/tmp/pyquery-1.2.5/README.rst\", line 50, in README.rst\nFailed example:\n    print(p.text())\nExpected:\n    you know Python rocks\nGot:\n    None\n----------------------------------------------------------------------\nFile \"/tmp/pyquery-1.2.5/README.rst\", line 57, in README.rst\nFailed example:\n    d('p:first')\nExpected:\n    [<p#hello.hello>]\nGot:\n    []\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/53", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/53/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/53/events", "html_url": "https://github.com/gawel/pyquery/issues/53", "id": 20560744, "node_id": "MDU6SXNzdWUyMDU2MDc0NA==", "number": 53, "title": ".siblings() does not return siblings in order", "user": {"login": "gjcourt", "id": 356410, "node_id": "MDQ6VXNlcjM1NjQxMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/356410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gjcourt", "html_url": "https://github.com/gjcourt", "followers_url": "https://api.github.com/users/gjcourt/followers", "following_url": "https://api.github.com/users/gjcourt/following{/other_user}", "gists_url": "https://api.github.com/users/gjcourt/gists{/gist_id}", "starred_url": "https://api.github.com/users/gjcourt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gjcourt/subscriptions", "organizations_url": "https://api.github.com/users/gjcourt/orgs", "repos_url": "https://api.github.com/users/gjcourt/repos", "events_url": "https://api.github.com/users/gjcourt/events{/privacy}", "received_events_url": "https://api.github.com/users/gjcourt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-10-05T06:43:10Z", "updated_at": "2013-10-05T06:44:53Z", "closed_at": "2013-10-05T06:44:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Very frustrating.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/51", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/51/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/51/events", "html_url": "https://github.com/gawel/pyquery/issues/51", "id": 18775220, "node_id": "MDU6SXNzdWUxODc3NTIyMA==", "number": 51, "title": ":contains(\"text\") NOT :contains(text)", "user": {"login": "simonwjackson", "id": 189379, "node_id": "MDQ6VXNlcjE4OTM3OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/189379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonwjackson", "html_url": "https://github.com/simonwjackson", "followers_url": "https://api.github.com/users/simonwjackson/followers", "following_url": "https://api.github.com/users/simonwjackson/following{/other_user}", "gists_url": "https://api.github.com/users/simonwjackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonwjackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonwjackson/subscriptions", "organizations_url": "https://api.github.com/users/simonwjackson/orgs", "repos_url": "https://api.github.com/users/simonwjackson/repos", "events_url": "https://api.github.com/users/simonwjackson/events{/privacy}", "received_events_url": "https://api.github.com/users/simonwjackson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-08-30T07:55:03Z", "updated_at": "2013-08-30T09:19:56Z", "closed_at": "2013-08-30T09:19:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Took me a while to figure this out, but in jquery the quotes are not required. Not sure if this is a bug or a feature :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/50", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/50/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/50/events", "html_url": "https://github.com/gawel/pyquery/issues/50", "id": 18515726, "node_id": "MDU6SXNzdWUxODUxNTcyNg==", "number": 50, "title": "Fails when using unicode string as selector", "user": {"login": "gmljosea", "id": 225694, "node_id": "MDQ6VXNlcjIyNTY5NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/225694?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gmljosea", "html_url": "https://github.com/gmljosea", "followers_url": "https://api.github.com/users/gmljosea/followers", "following_url": "https://api.github.com/users/gmljosea/following{/other_user}", "gists_url": "https://api.github.com/users/gmljosea/gists{/gist_id}", "starred_url": "https://api.github.com/users/gmljosea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gmljosea/subscriptions", "organizations_url": "https://api.github.com/users/gmljosea/orgs", "repos_url": "https://api.github.com/users/gmljosea/repos", "events_url": "https://api.github.com/users/gmljosea/events{/privacy}", "received_events_url": "https://api.github.com/users/gmljosea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-08-25T03:09:38Z", "updated_at": "2013-08-25T03:17:36Z", "closed_at": "2013-08-25T03:17:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "PyQuery fails when the selector is passed as a unicode string. The following example reproduces the bug in my machine:\n\n``` python\n>>> from pyquery import PyQuery\n>>> g = PyQuery(\"http://google.com\")\n>>> g(\"title\").html()\n'Google'\n>>> g(u\"title\").html()\n'title'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/49", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/49/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/49/events", "html_url": "https://github.com/gawel/pyquery/issues/49", "id": 17856056, "node_id": "MDU6SXNzdWUxNzg1NjA1Ng==", "number": 49, "title": "When using .items() with a selector, even if no items can be selected it should not return the current element.", "user": {"login": "scharron", "id": 400720, "node_id": "MDQ6VXNlcjQwMDcyMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/400720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scharron", "html_url": "https://github.com/scharron", "followers_url": "https://api.github.com/users/scharron/followers", "following_url": "https://api.github.com/users/scharron/following{/other_user}", "gists_url": "https://api.github.com/users/scharron/gists{/gist_id}", "starred_url": "https://api.github.com/users/scharron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scharron/subscriptions", "organizations_url": "https://api.github.com/users/scharron/orgs", "repos_url": "https://api.github.com/users/scharron/repos", "events_url": "https://api.github.com/users/scharron/events{/privacy}", "received_events_url": "https://api.github.com/users/scharron/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-08-09T10:24:24Z", "updated_at": "2013-08-09T16:35:26Z", "closed_at": "2013-08-09T16:35:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Example:\n\n```\n>>> from pyquery import PyQuery as pq\n>>> doc = pq(\"<html><body><a></a><a></a></body></html>\")\n>>> \n>>> list(doc(\"a\").items())\n[[<a>], [<a>]]\n>>> list(doc.items(\"a\"))\n[[<a>], [<a>]]\n>>> list(doc.items(\"b\"))\n[[<html>]]\n>>> list(doc(\"b\").items())\n[]\n```\n\nPossible fix : \nReplace\n\n```\nelems = selector and self(selector) or self\n```\n\nBy\n\n```\nif selector:\n    elems = self(selector)\nelse: \n    elems = self \n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/47", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/47/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/47/events", "html_url": "https://github.com/gawel/pyquery/issues/47", "id": 16713100, "node_id": "MDU6SXNzdWUxNjcxMzEwMA==", "number": 47, "title": "why pyquery add some strange characters to my html?", "user": {"login": "yuyang0", "id": 3815993, "node_id": "MDQ6VXNlcjM4MTU5OTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3815993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuyang0", "html_url": "https://github.com/yuyang0", "followers_url": "https://api.github.com/users/yuyang0/followers", "following_url": "https://api.github.com/users/yuyang0/following{/other_user}", "gists_url": "https://api.github.com/users/yuyang0/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuyang0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuyang0/subscriptions", "organizations_url": "https://api.github.com/users/yuyang0/orgs", "repos_url": "https://api.github.com/users/yuyang0/repos", "events_url": "https://api.github.com/users/yuyang0/events{/privacy}", "received_events_url": "https://api.github.com/users/yuyang0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-07-13T09:41:47Z", "updated_at": "2013-07-15T10:38:57Z", "closed_at": "2013-07-15T10:38:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I used pyquery to replace a node, the code is like this:\n\n```\npq = pyquery.PyQuery(html, parser = \"html\")\npq('#header').replaceWith(header)\nfp = open('tmp.html', 'wb')\nfp.write(str(pq))\n```\n\nbut this code add some characters to my html, for example it replace \n\n```\n<!--/*--><![CDATA[/*><!--*/\n```\n\nwith\n\n```\n&amp;amp;amp;amp;amp;lt;!--/*--&amp;amp;amp;amp;amp;gt;&amp;amp;amp;amp;amp;lt![CDATA[/*&amp;amp;amp;amp;amp;gt;&amp;amp;amp;amp;amp;lt;!--*/\n```\n\nis this a  bug of pyquery?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/45", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/45/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/45/events", "html_url": "https://github.com/gawel/pyquery/issues/45", "id": 15555536, "node_id": "MDU6SXNzdWUxNTU1NTUzNg==", "number": 45, "title": "PyQuery([]).text() should return an empty string.", "user": {"login": "mgax", "id": 27617, "node_id": "MDQ6VXNlcjI3NjE3", "avatar_url": "https://avatars2.githubusercontent.com/u/27617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgax", "html_url": "https://github.com/mgax", "followers_url": "https://api.github.com/users/mgax/followers", "following_url": "https://api.github.com/users/mgax/following{/other_user}", "gists_url": "https://api.github.com/users/mgax/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgax/subscriptions", "organizations_url": "https://api.github.com/users/mgax/orgs", "repos_url": "https://api.github.com/users/mgax/repos", "events_url": "https://api.github.com/users/mgax/events{/privacy}", "received_events_url": "https://api.github.com/users/mgax/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-06-14T12:24:10Z", "updated_at": "2013-12-21T00:25:35Z", "closed_at": "2013-12-21T00:25:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Right now `PyQuery([]).text()` (calling .text() on an empty element set) returns `None`. It would make more sense to return an empty string.\n\nThis is annoying because it makes writing checks more complicated: `'foo' in bar.text()` fails with `argument of type 'NoneType' is not iterable` if `bar` is empty, you have to write `'foo' in (bar.text() or '')`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/44", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/44/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/44/events", "html_url": "https://github.com/gawel/pyquery/issues/44", "id": 15455442, "node_id": "MDU6SXNzdWUxNTQ1NTQ0Mg==", "number": 44, "title": "jQuery selector ':hidden' not supported", "user": {"login": "hangtwenty", "id": 2420688, "node_id": "MDQ6VXNlcjI0MjA2ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2420688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hangtwenty", "html_url": "https://github.com/hangtwenty", "followers_url": "https://api.github.com/users/hangtwenty/followers", "following_url": "https://api.github.com/users/hangtwenty/following{/other_user}", "gists_url": "https://api.github.com/users/hangtwenty/gists{/gist_id}", "starred_url": "https://api.github.com/users/hangtwenty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hangtwenty/subscriptions", "organizations_url": "https://api.github.com/users/hangtwenty/orgs", "repos_url": "https://api.github.com/users/hangtwenty/repos", "events_url": "https://api.github.com/users/hangtwenty/events{/privacy}", "received_events_url": "https://api.github.com/users/hangtwenty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-06-12T15:04:43Z", "updated_at": "2013-12-21T00:49:19Z", "closed_at": "2013-12-21T00:49:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [jQuery pseudo-class `:hidden`](http://api.jquery.com/hidden-selector/) is not currently supported. Assuming a PyQuery instance `pq` that has already been initialized with an HTML document, each of these calls will throw the error:\n\n``` python\npq(':input').not_(':button, :submit, :reset, :hidden')\npq(':input').not_(':hidden')\npq(':hidden')\n```\n\n=>\n\n```\nExpressionError: The pseudo-class :hidden is unknown\n```\n\nThere's a way to implement your own logic for this sort of operation, as a workaround. I'll add that as a follow-up once I figure out how to do it accurately, and then maybe that 'workaround' could actually wind up being the implementation.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/43", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/43/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/43/events", "html_url": "https://github.com/gawel/pyquery/issues/43", "id": 15447395, "node_id": "MDU6SXNzdWUxNTQ0NzM5NQ==", "number": 43, "title": "Case sensitivity issues using css selectors", "user": {"login": "karolyi", "id": 987055, "node_id": "MDQ6VXNlcjk4NzA1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/987055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karolyi", "html_url": "https://github.com/karolyi", "followers_url": "https://api.github.com/users/karolyi/followers", "following_url": "https://api.github.com/users/karolyi/following{/other_user}", "gists_url": "https://api.github.com/users/karolyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/karolyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karolyi/subscriptions", "organizations_url": "https://api.github.com/users/karolyi/orgs", "repos_url": "https://api.github.com/users/karolyi/repos", "events_url": "https://api.github.com/users/karolyi/events{/privacy}", "received_events_url": "https://api.github.com/users/karolyi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-06-12T12:09:19Z", "updated_at": "2013-08-09T16:39:12Z", "closed_at": "2013-08-09T16:39:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a valid html where there's a\n\n```\n<link rel=\"SHORTCUT ICON\">\n```\n\nelement, with capital letters in the attribute value.\n\nselecting with .find('link[rel=\"shortcut icon\"]') should find this element. However, it does not:\n\n```\n>>> from pyquery import PyQuery as pq\n>>> a = pq('<html><head><link rel=\"SHORTCUT ICON\"></head></html>')\n>>> a.find('link[rel=\"shortcut icon\"]')\n[]\n```\n\nWith jQuery and JavaScript, it succeeds:\n\n```\na = $('<div><link rel=\"SHORTCUT ICON\"></div>')\n[<div>\u200b\u2026\u200b</div>\u200b]\na.find('link[rel=\"shortcut icon\"]')\n[<link rel=\u200b\"SHORTCUT ICON\">\u200b]\n```\n\nPlease fix this.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/42", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/42/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/42/events", "html_url": "https://github.com/gawel/pyquery/issues/42", "id": 15203121, "node_id": "MDU6SXNzdWUxNTIwMzEyMQ==", "number": 42, "title": "PEP 8 compliance", "user": {"login": "Riamse", "id": 2367611, "node_id": "MDQ6VXNlcjIzNjc2MTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2367611?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Riamse", "html_url": "https://github.com/Riamse", "followers_url": "https://api.github.com/users/Riamse/followers", "following_url": "https://api.github.com/users/Riamse/following{/other_user}", "gists_url": "https://api.github.com/users/Riamse/gists{/gist_id}", "starred_url": "https://api.github.com/users/Riamse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Riamse/subscriptions", "organizations_url": "https://api.github.com/users/Riamse/orgs", "repos_url": "https://api.github.com/users/Riamse/repos", "events_url": "https://api.github.com/users/Riamse/events{/privacy}", "received_events_url": "https://api.github.com/users/Riamse/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 20617951, "node_id": "MDU6TGFiZWwyMDYxNzk1MQ==", "url": "https://api.github.com/repos/gawel/pyquery/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-06-06T02:14:45Z", "updated_at": "2013-06-06T07:50:42Z", "closed_at": "2013-06-06T07:50:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Can we have PEP 8 compliant method name aliases, similar to what is done [here](http://hg.python.org/cpython/file/6b189f29b1e6/Lib/threading.py#l776), but the other way around?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/40", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/40/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/40/events", "html_url": "https://github.com/gawel/pyquery/issues/40", "id": 15047486, "node_id": "MDU6SXNzdWUxNTA0NzQ4Ng==", "number": 40, "title": "PyQuery breaking with cssselect", "user": {"login": "foxx", "id": 651797, "node_id": "MDQ6VXNlcjY1MTc5Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/651797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foxx", "html_url": "https://github.com/foxx", "followers_url": "https://api.github.com/users/foxx/followers", "following_url": "https://api.github.com/users/foxx/following{/other_user}", "gists_url": "https://api.github.com/users/foxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/foxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foxx/subscriptions", "organizations_url": "https://api.github.com/users/foxx/orgs", "repos_url": "https://api.github.com/users/foxx/repos", "events_url": "https://api.github.com/users/foxx/events{/privacy}", "received_events_url": "https://api.github.com/users/foxx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2013-06-03T00:06:54Z", "updated_at": "2013-10-10T16:14:18Z", "closed_at": "2013-10-10T16:14:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nTraceback (most recent call last):\n\n  File \"adapters.py\", line 160, in _update\n    result = j.get()\n\n  File \"/mnt/home1/home/pippaprod/webapps/pippa.prod/deployment/pippa/webapp/libs/rockspawn/rockspawn.py\", line 125, in _spawn\n    result = self.func(*self.args, **self.kwargs)\n\n  File \"/mnt/home1/home/pippaprod/venv/lib/python2.6/site-packages/Django-1.5-py2.6.egg/django/db/transaction.py\", line 223, in inner\n    return func(*args, **kwargs)\n\n  File \"adapters.py\", line 188, in add_update\n    return self._add_update(*args, **kwargs)\n\n  File \"adapters.py\", line 237, in _add_update\n    results = j.get()\n\n  File \"/mnt/home1/home/pippaprod/webapps/pippa.prod/deployment/pippa/webapp/libs/rockspawn/rockspawn.py\", line 125, in _spawn\n    result = self.func(*self.args, **self.kwargs)\n\n  File \"adapters.py\", line 549, in scrape_page\n    content = self.extract_content(data=fdata, url=url)\n\n  File \"adapters.py\", line 730, in extract_content\n    thumb = pq(i)(\"img:first\").attr('src')\n\n  File \"/mnt/home1/home/pippaprod/venv/lib/python2.6/site-packages/pyquery-1.2.4-py2.6.egg/pyquery/pyquery.py\", line 237, in __call__\n    result = self.__class__(*args, parent=self, **kwargs)\n\n  File \"/mnt/home1/home/pippaprod/venv/lib/python2.6/site-packages/pyquery-1.2.4-py2.6.egg/pyquery/pyquery.py\", line 213, in __init__\n    xpath = self._css_to_xpath(selector)\n\n  File \"/mnt/home1/home/pippaprod/venv/lib/python2.6/site-packages/pyquery-1.2.4-py2.6.egg/pyquery/pyquery.py\", line 223, in _css_to_xpath\n    return self._translator.css_to_xpath(selector, prefix)\n\n  File \"/mnt/home1/home/pippaprod/venv/lib/python2.6/site-packages/cssselect-0.8-py2.6.egg/cssselect/xpath.py\", line 188, in css_to_xpath\n    for selector in selectors)\n\n  File \"/mnt/home1/home/pippaprod/venv/lib/python2.6/site-packages/cssselect-0.8-py2.6.egg/cssselect/xpath.py\", line 188, in <genexpr>\n    for selector in selectors)\n\n  File \"/mnt/home1/home/pippaprod/venv/lib/python2.6/site-packages/cssselect-0.8-py2.6.egg/cssselect/xpath.py\", line 208, in selector_to_xpath\n    xpath = self.xpath(tree)\n\n  File \"/mnt/home1/home/pippaprod/venv/lib/python2.6/site-packages/cssselect-0.8-py2.6.egg/cssselect/xpath.py\", line 230, in xpath\n    return method(parsed_selector)\n\n  File \"/mnt/home1/home/pippaprod/venv/lib/python2.6/site-packages/cssselect-0.8-py2.6.egg/cssselect/xpath.py\", line 272, in xpath_pseudo\n    return method(self.xpath(pseudo.selector))\n\n  File \"/mnt/home1/home/pippaprod/venv/lib/python2.6/site-packages/pyquery-1.2.4-py2.6.egg/pyquery/cssselectpatch.py\", line 19, in xpath_first_pseudo\n    xpath.add_post_condition('position() = 1')\n\nAttributeError: 'XPathExpr' object has no attribute 'add_post_condition'\n```\n\nAny ideas?\n\nCal\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/39", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/39/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/39/events", "html_url": "https://github.com/gawel/pyquery/issues/39", "id": 14140480, "node_id": "MDU6SXNzdWUxNDE0MDQ4MA==", "number": 39, "title": "PyQuery dealing with Chinese webpage", "user": {"login": "samuel-liyi", "id": 953100, "node_id": "MDQ6VXNlcjk1MzEwMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/953100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samuel-liyi", "html_url": "https://github.com/samuel-liyi", "followers_url": "https://api.github.com/users/samuel-liyi/followers", "following_url": "https://api.github.com/users/samuel-liyi/following{/other_user}", "gists_url": "https://api.github.com/users/samuel-liyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/samuel-liyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samuel-liyi/subscriptions", "organizations_url": "https://api.github.com/users/samuel-liyi/orgs", "repos_url": "https://api.github.com/users/samuel-liyi/repos", "events_url": "https://api.github.com/users/samuel-liyi/events{/privacy}", "received_events_url": "https://api.github.com/users/samuel-liyi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-05-09T10:02:23Z", "updated_at": "2013-12-21T00:42:06Z", "closed_at": "2013-12-21T00:42:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "When i was using PyQuery to get some Chinese webpage, I stuck at this one page, to be exactly, this page: http://bbs.hupu.com/fyt-27, it turns out that i cannot use PyQuery to get the whole webpage, what I get is a partial content, anyone knows why ?\ntmp=PyQuery(url='http://bbs.hupu.com/fyt-27'),is this because this webpage is chinese,or sth else?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/35", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/35/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/35/events", "html_url": "https://github.com/gawel/pyquery/issues/35", "id": 13576061, "node_id": "MDU6SXNzdWUxMzU3NjA2MQ==", "number": 35, "title": "UnicodeEncodeError", "user": {"login": "flisky", "id": 656711, "node_id": "MDQ6VXNlcjY1NjcxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/656711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flisky", "html_url": "https://github.com/flisky", "followers_url": "https://api.github.com/users/flisky/followers", "following_url": "https://api.github.com/users/flisky/following{/other_user}", "gists_url": "https://api.github.com/users/flisky/gists{/gist_id}", "starred_url": "https://api.github.com/users/flisky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flisky/subscriptions", "organizations_url": "https://api.github.com/users/flisky/orgs", "repos_url": "https://api.github.com/users/flisky/repos", "events_url": "https://api.github.com/users/flisky/events{/privacy}", "received_events_url": "https://api.github.com/users/flisky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2013-04-24T08:35:38Z", "updated_at": "2015-04-17T14:06:20Z", "closed_at": "2013-04-26T10:15:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "python: 2.7.3\npyquery: master\ncssselect: 0.8.0\n\n``` python\nfrom pyquery import PyQuery as pq\ndoc = pq([])\ndoc._css_to_xpath(u'a:contains(\"\u6211\")') \n# => u\"descendant-or-self::a[contains(text(), '\\u6211')]\"\n\ndoc._css_to_xpath(u'a:contains(\"\u6211\") span')\n\nTraceback (most recent call last):\n  File \"test.py\", line 7, in <module>\n    doc._css_to_xpath(u'a:contains(\"\u6211\") span')\n  File \"...pyquery/pyquery.py\", line 227, in _css_to_xpath\n    return self._translator.css_to_xpath(selector, prefix)\n  File \"...cssselect-0.8-py2.7.egg/cssselect/xpath.py\", line 188, in css_to_xpath\n    for selector in selectors)\n  File \"...cssselect-0.8-py2.7.egg/cssselect/xpath.py\", line 188, in <genexpr>\n    for selector in selectors)\n  File \"...cssselect-0.8-py2.7.egg/cssselect/xpath.py\", line 210, in selector_to_xpath\n    return (prefix or '') + _unicode(xpath)\n  File \"...pyquery/cssselectpatch.py\", line 35, in __unicode__\n    return str(self).decode('utf-8')\n  File \"...pyquery/cssselectpatch.py\", line 29, in __str__\n    path = str(path)\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\u6211' in position 20: ordinal not in range(128)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/33", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/33/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/33/events", "html_url": "https://github.com/gawel/pyquery/issues/33", "id": 13277488, "node_id": "MDU6SXNzdWUxMzI3NzQ4OA==", "number": 33, "title": "Python2 and unicode strings cause creation instead of kicking off a .find", "user": {"login": "jessesherlock", "id": 516893, "node_id": "MDQ6VXNlcjUxNjg5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/516893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jessesherlock", "html_url": "https://github.com/jessesherlock", "followers_url": "https://api.github.com/users/jessesherlock/followers", "following_url": "https://api.github.com/users/jessesherlock/following{/other_user}", "gists_url": "https://api.github.com/users/jessesherlock/gists{/gist_id}", "starred_url": "https://api.github.com/users/jessesherlock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jessesherlock/subscriptions", "organizations_url": "https://api.github.com/users/jessesherlock/orgs", "repos_url": "https://api.github.com/users/jessesherlock/repos", "events_url": "https://api.github.com/users/jessesherlock/events{/privacy}", "received_events_url": "https://api.github.com/users/jessesherlock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-04-17T02:02:24Z", "updated_at": "2013-04-17T11:33:54Z", "closed_at": "2013-04-17T11:33:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "To re-use the example from the docs:\n\n``` python\n    >>> d(\"#hello\")\n    [<p#hello.hello>]\n    >>> d(u\"#hello\")\n    [<p>]\n```\n\nIt's a hell of a problem when you use **future**.unicode_literals and the exact same code works differently in your tests than it does in ipython. Had me tearing my hair out for a bit.\n\nFixed in my PR and I also updated the boolean logic in that piece to use grouping parens instead of backslashes for line continuation as was done elsewhere in the file.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/30", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/30/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/30/events", "html_url": "https://github.com/gawel/pyquery/issues/30", "id": 12878929, "node_id": "MDU6SXNzdWUxMjg3ODkyOQ==", "number": 30, "title": "Multiple test suite failures", "user": {"login": "lmacken", "id": 9980, "node_id": "MDQ6VXNlcjk5ODA=", "avatar_url": "https://avatars0.githubusercontent.com/u/9980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lmacken", "html_url": "https://github.com/lmacken", "followers_url": "https://api.github.com/users/lmacken/followers", "following_url": "https://api.github.com/users/lmacken/following{/other_user}", "gists_url": "https://api.github.com/users/lmacken/gists{/gist_id}", "starred_url": "https://api.github.com/users/lmacken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lmacken/subscriptions", "organizations_url": "https://api.github.com/users/lmacken/orgs", "repos_url": "https://api.github.com/users/lmacken/repos", "events_url": "https://api.github.com/users/lmacken/events{/privacy}", "received_events_url": "https://api.github.com/users/lmacken/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2013-04-06T15:11:17Z", "updated_at": "2013-08-09T16:41:10Z", "closed_at": "2013-08-09T16:41:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! In an effort to update pyquery to the latest version in Fedora, I'm trying to get the test suite to fully pass with the following deps:\n\n```\npython-restkit-4.2.1-1.fc20.noarch\npython-socketpool-0.5.2-2.fc20.noarch\npython-cssselect-0.8-1.fc20.noarch\npython-lxml-2.3.5-1.fc18.x86_64\n```\n\nHowever, I'm hitting these errors:\n\n``` python\n======================================================================\nERROR: test_pseudo_classes (pyquery.test.TestAjaxSelector)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/test.py\", line 260, in test_pseudo_classes\n    self.assertEqual(e('div:first').text(), 'node1')\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 237, in __call__\n    result = self.__class__(*args, parent=self, **kwargs)\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/ajax.py\", line 26, in __init__\n    Base.__init__(self, *args, **kwargs)\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 213, in __init__\n    xpath = self._css_to_xpath(selector)\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 223, in _css_to_xpath\n    return self._translator.css_to_xpath(selector, prefix)\n  File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 188, in css_to_xpath\n    for selector in selectors)\n  File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 188, in <genexpr>\n    for selector in selectors)\n  File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 208, in selector_to_xpath\n    xpath = self.xpath(tree)\n  File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 230, in xpath\n    return method(parsed_selector)\n  File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 272, in xpath_pseudo\n    return method(self.xpath(pseudo.selector))\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/cssselectpatch.py\", line 19, in xpath_first_pseudo\n    xpath.add_post_condition('position() = 1')\nAttributeError: 'XPathExpr' object has no attribute 'add_post_condition'\n\n======================================================================\nERROR: test_remove (pyquery.test.TestManipulating)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/test.py\", line 453, in test_remove\n    val = d('a:first').html()\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 237, in __call__\n    result = self.__class__(*args, parent=self, **kwargs)\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 213, in __init__\n    xpath = self._css_to_xpath(selector)\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 223, in _css_to_xpath\n    return self._translator.css_to_xpath(selector, prefix)\n  File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 188, in css_to_xpath\n    for selector in selectors)\n  File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 188, in <genexpr>\n    for selector in selectors)\n  File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 208, in selector_to_xpath\n    xpath = self.xpath(tree)\n  File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 230, in xpath\n    return method(parsed_selector)\n  File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 272, in xpath_pseudo\n    return method(self.xpath(pseudo.selector))\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/cssselectpatch.py\", line 19, in xpath_first_pseudo\n    xpath.add_post_condition('position() = 1')\nAttributeError: 'XPathExpr' object has no attribute 'add_post_condition'\n\n======================================================================\nERROR: test_pseudo_classes (pyquery.test.TestSelector)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/test.py\", line 260, in test_pseudo_classes\n    self.assertEqual(e('div:first').text(), 'node1')\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 237, in __call__\n    result = self.__class__(*args, parent=self, **kwargs)\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 213, in __init__\n    xpath = self._css_to_xpath(selector)\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 223, in _css_to_xpath\n    return self._translator.css_to_xpath(selector, prefix)\n  File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 188, in css_to_xpath\n    for selector in selectors)\n  File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 188, in <genexpr>\n    for selector in selectors)\n  File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 208, in selector_to_xpath\n    xpath = self.xpath(tree)\n  File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 230, in xpath\n    return method(parsed_selector)\n  File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 272, in xpath_pseudo\n    return method(self.xpath(pseudo.selector))\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/cssselectpatch.py\", line 19, in xpath_first_pseudo\n    xpath.add_post_condition('position() = 1')\nAttributeError: 'XPathExpr' object has no attribute 'add_post_condition'\n\n======================================================================\nERROR: test_get (pyquery.test.TestWebScrapping)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/test.py\", line 568, in test_get\n    self.assertEqual(d('input[name=q]:last').val(), 'foo')\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 237, in __call__\n    result = self.__class__(*args, parent=self, **kwargs)\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 213, in __init__\n    xpath = self._css_to_xpath(selector)\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 223, in _css_to_xpath\n    return self._translator.css_to_xpath(selector, prefix)\n  File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 188, in css_to_xpath\n    for selector in selectors)\n  File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 188, in <genexpr>\n    for selector in selectors)\n  File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 208, in selector_to_xpath\n    xpath = self.xpath(tree)\n  File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 230, in xpath\n    return method(parsed_selector)\n  File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 272, in xpath_pseudo\n    return method(self.xpath(pseudo.selector))\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/cssselectpatch.py\", line 25, in xpath_last_pseudo\n    xpath.add_post_condition('position() = last()')\nAttributeError: 'XPathExpr' object has no attribute 'add_post_condition'\n-------------------- >> begin captured stdout << ---------------------\n<html><head><meta name=\"robots\" content=\"noindex,nofollow\"/><meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8;charset=utf-8\"/><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge, chrome=1\"/><title>foo at DuckDuckGo</title><link rel=\"stylesheet\" href=\"/s536.css\" type=\"text/css\"/><style id=\"DDG\" type=\"text/css\"/><link title=\"DuckDuckGo\" type=\"application/opensearchdescription+xml\" rel=\"search\" href=\"/opensearch_ssl.xml\"/><link rel=\"image_src\" href=\"/assets/logo_homepage.normal.v101.png\"/><link rel=\"apple-touch-icon\" href=\"/assets/logo_icon128.v101.png\"/><link rel=\"shortcut icon\" href=\"/favicon.ico\"/><script type=\"text/javascript\">var fd,fq,it,iqa,iqm,iqs,iqq,qw,ra,rv,rad,r1hc,r1c,r2c,r3c,ric,rfq,rq,rds,rs,rt,y,y1,ti,tig,ka,kb,kc,kd,ke,kf,kg,kh,ki,kj,kk,kl,km,kn,ko,kp,kq,kr,ks,kt,ku,kv,kw,kx,ky,kz,k1,k2,k3,k4,k5,k6,k7,k8,k9,kaa,kab,kac,kad,kae,kaf,kag,kah,kai,kaj,kak,kal,kam,kan,kao,kap,kaq,kar,kas,kat,kau,kav,kaw,kax,kay,kaz,iqd,irp,locale;irp=1;fq=0;fd=1;it=0;iqa=0;iqm=0;iqs=0;iqq=0;qw=1;iqd=0;r1hc=0;r1c=0;r2c=4;r3c=0;ric=3;rq='foo';rqd=\"foo\";rfq=0;rt='D';ra='';rv='';rad='';rds=30;rs=0;kl='';kp='';ks='';kw='';ka='';kt='';ky='';kk='';kf='';kc='';ke='';kr='';ko='';kj='';kz='';kg='';kh='';kd='';ki='';kn='';kb='';km='';ku='';kq='';kv='';kx='';k1='';k2='';k3='';k4='';k5='';k6='',k7='',k8='',k9='';kaa='';kab='';kac='';kad='';kae='';kaf='';kag='';kah='';kai='';kaj='';kak='';kal='';kam='';kan='';kao='';kap='';kaq='';kar='';kas='';kat='';kau='';kav='';kaw='';kax='';kay='';kaz='';spice_version='';locale='en_US';</script><meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\"/><meta name=\"HandheldFriendly\" content=\"true\"/><meta name=\"apple-mobile-web-app-capable\" content=\"no\"/></head><body class=\"yui-skin-sam\"><input id=\"state_hidden\" name=\"state_hidden\" type=\"text\" size=\"1\"/><span class=\"hide\">Ignore this box please.</span><div id=\"spacing_hidden_wrapper\"><div id=\"spacing_hidden\"/></div><div id=\"add_to_browser\" class=\"modal grp_modal\"/><div id=\"add_to_browser_homepage\" class=\"modal grp_modal\"/><div id=\"feedback_modal\" class=\"modal grp_modal\"><h4 id=\"feedback_modal_title\">Feedback</h4><a href=\"javascript:;\" id=\"report_bad_query_link\" class=\"icon bad\" onclick=\"\">Report Bad Results</a><span id=\"try_search_on_links\" class=\"icon try\" style=\"display: none;\">Try <a target=\"_bangg\" href=\"/?q=!g+foo\">Google</a>, <a target=\"_bangb\" href=\"/?q=!b+foo\">Bing</a>, <a href=\"/bang.html\" onclick=\"this.href='#';nbc();return false;\">more&#8230;</a></span><a target=\"_help\" href=\"feedback\" class=\"icon ques\">Other Help / Feedback</a></div><script type=\"text/javascript\" src=\"/locales/en_US/LC_MESSAGES/duckduckgo-duckduckgo+sprintf+gettext+locale-simple.20130311.003843.js\"/><script type=\"text/javascript\" src=\"/d946.js\"/><div id=\"header_wrapper\"><div id=\"header\"><div id=\"header_content_wrapper\"><div id=\"header_content\"><div class=\"clear\"/><a tabindex=\"-1\" href=\"/?t=\"><div id=\"header_logo\"/></a><form id=\"search_form\" name=\"x\" action=\"/\" onsubmit=\"return nbr()\"><div id=\"search_elements_hidden\"/><div id=\"search_wrapper\"><input id=\"search_button\" type=\"submit\" tabindex=\"2\" value=\"\"/><a id=\"search_dropdown\" href=\"javascript:;\" tabindex=\"4\" onclick=\"DDG.toggle('newbang');\"/></div><input id=\"search_form_input_clear\" type=\"button\" tabindex=\"3\" value=\"\"/><input type=\"text\" name=\"q\" tabindex=\"1\" autocomplete=\"off\" id=\"search_form_input\" onfocus=\"if ('rc' in window) {nua('nro',rc)};fq=1;\" onblur=\"fq=0\" onclick=\"if (this.value=='put search terms here') {this.value='';this.style.color='#000000';}\" value=\"foo\"/><select id=\"bang\" size=\"2\" onchange=\"if (ip) nbb(this);\" onclick=\"if (!ip) nbb(this);\" onblur=\"nbc(1);\"/></form><div id=\"header_button_wrapper\" onclick=\"DDG.toggle('header_button_menu')\"><ul id=\"header_button\"><li><div id=\"header_button_menu_wrapper\"><a class=\"header_button_menu_item\" id=\"header_button_menu_title\" href=\"javascript:;\">More</a><ul id=\"header_button_menu\" class=\"grp_modal\"><li><a href=\"/settings.html\" tabindex=\"-1\">Settings</a></li><li><a href=\"/about.html\" tabindex=\"-1\">About</a></li><li><a href=\"/goodies/\" tabindex=\"-1\">Goodies</a></li><li><a href=\"/feedback.html\" tabindex=\"-1\">Help</a></li><li class=\"header_button_menu_header\">PRIVACY</li><li><a href=\"/privacy.html\" tabindex=\"-1\">Policy</a></li><li><a href=\"http://donttrack.us/\" tabindex=\"-1\">DontTrack</a></li><li><a href=\"http://dontbubble.us/\" tabindex=\"-1\">DontBubble</a></li><li><a href=\"http://whatisdnt.com/\" tabindex=\"-1\">WhatIsDNT</a></li><li><a href=\"http://fixtracking.com/\" tabindex=\"-1\">FixTracking</a></li><li class=\"header_button_menu_header\">COMMUNITY</li><li><a href=\"http://duckduckhack.com/\" tabindex=\"-1\">Develop</a></li><li><a href=\"https://dukgo.com/\" tabindex=\"-1\">Translate</a></li><li><a href=\"/support.html\" tabindex=\"-1\">Support Us</a></li></ul></div></li></ul></div><div class=\"clear\"/></div></div></div></div><div id=\"content_wrapper\"><div id=\"content\"><div id=\"side_wrapper\"><div id=\"side_wrapper2\"><div id=\"side\"><div class=\"button\"><script type=\"text/JavaScript\">nib(0,'button-link add-to','','&amp;nbsp;',0,0)</script></div><div id=\"feedback_wrapper\"><div class=\"button\"><span id=\"trig_feedback_modal\" class=\"modal_trig\"/><a tabindex=\"-1\" href=\"javascript:;\" rel=\"nofollow\" class=\"button-link\" onclick=\"DDG.mv_elem('feedback_modal','trig_feedback_modal');DDG.toggleall('grp_modal',-1,'feedback_modal');DDG.toggle('feedback_modal');\">Give feedback</a></div></div><div id=\"side_suggestions\" class=\"hide\"/><div id=\"keyboard_shortcuts\" class=\"hide\"><div class=\"spacer_bottom_7\">Keyboard shortcuts</div>h, / &#160; &#160; search box<br/>j, &#8595; &#160; &#160; next result<br/>k, &#8593; &#160; &#160; prev result<br/>l, o, Enter &#160; &#160; go<div id=\"keyboard_shortcuts_more\" class=\"spacer_top_3\"><a tabindex=\"-1\" href=\"javascript:;\" onclick=\"nsh('keyboard_shortcuts_more')\">More...</a></div><div id=\"keyboard_shortcuts_more_hidden\" class=\"hide\"><br/>Ctrl+Enter &#160; &#160; bg<br/>', v &#160; &#160; new tab<br/>d &#160; &#160; domain search<br/>t &#160; &#160; Top<br/>!, 1 &#160; &#160; !bang dropdown<br/>esc &#160; &#160; out of bangs<br/>s &#160; &#160;Did you mean<br/>r &#160; &#160; related topics<br/>m &#160; &#160; main results<br/><a target=\"_blank\" href=\"http://help.duckduckgo.com/customer/portal/articles/300862\"> More explanation...</a></div></div><div id=\"side_powered_by_wrapper\" class=\"hide\"/></div></div></div><div id=\"zero_click_wrapper\"><div id=\"zero_click\"><div id=\"zero_click_wrapper2\"><div id=\"zero_click_abstract\" style=\"display:none;\"/><div id=\"zero_click_header\"><div id=\"zero_click_heading\"><h1>Meanings of Foobar</h1></div><div id=\"zero_click_plus_wrapper\" class=\"icon_zero_click_header\"><a href=\"javascript:;\" onclick=\"nra4()\" id=\"zero_click_plus\">&#160;</a></div><div class=\"icon_zero_click_header\"><a title=\"Definition\" href=\"/?q=define+foo\"><img src=\"/assets/icon_definition.v101.png\" class=\"inline\"/></a></div><div class=\"clear\"/></div><div id=\"zero_click_topics\"><div id=\"r2-0\" class=\"results_disambig\"><div class=\"icon_disambig\"/><div class=\"links_zero_click_disambig highlight_1\"><a href=\"/Foobar\">Foobar</a>, an all-purpose placeholder name commonly used in computing</div></div><div id=\"r2-1\" class=\"results_disambig\"><div class=\"icon_disambig\"><img id=\"i2\" alt=\"\"/></div><div class=\"links_zero_click_disambig highlight_1\"><a href=\"/foobar2000\">foobar2000</a>, an audio player for Microsoft Windows</div></div><div class=\"results_disambig\"><div class=\"links_zero_click_disambig\"><div class=\"zero_click_header_info\">See also <hr class=\"horizontal_line horizontal_line_truncated\"/></div></div></div><div id=\"r2-2\" class=\"results_disambig\"><div class=\"icon_disambig\"/><div class=\"links_zero_click_disambig highlight_1\"><a href=\"/d/FUBAR\">FUBAR Meanings</a></div></div><div id=\"r2-3\" class=\"results_disambig\"><div class=\"icon_disambig\"><img id=\"i3\" alt=\"\" class=\"img_disambig\"/></div><div class=\"links_zero_click_disambig highlight_1\"><a href=\"/flame_fougasse\">Foo gas</a> - A flame fougasse is a type of mine which uses an explosive charge to project burning liquid onto a target.</div></div></div><div class=\"clear\">&#160;</div></div><div id=\"zero_click_abstract_stacked\" class=\"zero_click_snippet\" style=\"display:none;\"/></div></div><div id=\"links_wrapper\"><noscript> &#160; &#160; This page requires Javascript. Get the non-JS version <a href=\"https://duckduckgo.com/html/?q=foo\">here</a>.</noscript><div id=\"did_you_means\"/><div id=\"ads\"/><div id=\"links\"/></div><div id=\"powered_by_wrapper\"/><div id=\"bottom_spacing2\"> </div></div></div><script type=\"text/javascript\">nip();</script><script type=\"text/javascript\">tig=new YAHOO.util.ImageLoader.group('body',null,0.01);nus('',2,ga+'www.foobar2000.org.ico',30,30);nus('',3,ga+'2ebf3f96.jpg');</script><script type=\"text/JavaScript\">function nrji() {nrj('/d.js?q=foo&amp;t=D&amp;l=us-en&amp;p=1&amp;s=0');if (!DDG.is_ad_blocked) nrj('/y.js?s=1&amp;q=foo');};if (ir) window.addEventListener('load', nrji, false);else nrji();</script><div id=\"z2\"> </div><script type=\"text/JavaScript\">if (ip) setTimeout('nuo(1)',500);</script><div id=\"z\"> </div></body></html>\n\n--------------------- >> end captured stdout << ----------------------\n-------------------- >> begin captured logging << --------------------\nurllib3.connectionpool: INFO: Starting new HTTP connection (1): duckduckgo.com\nurllib3.connectionpool: DEBUG: \"GET /?q=foo HTTP/1.1\" 301 178\nurllib3.connectionpool: INFO: Starting new HTTPS connection (1): duckduckgo.com\nurllib3.connectionpool: DEBUG: \"GET /?q=foo HTTP/1.1\" 200 None\n--------------------- >> end captured logging << ---------------------\n\n======================================================================\nERROR: test_post (pyquery.test.TestWebScrapping)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/test.py\", line 574, in test_post\n    self.assertEqual(d('input[name=q]:last').val(), 'foo')\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 237, in __call__\n    result = self.__class__(*args, parent=self, **kwargs)\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 213, in __init__\n    xpath = self._css_to_xpath(selector)\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 223, in _css_to_xpath\n    return self._translator.css_to_xpath(selector, prefix)\n  File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 188, in css_to_xpath\n    for selector in selectors)\n  File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 188, in <genexpr>\n    for selector in selectors)\n  File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 208, in selector_to_xpath\n    xpath = self.xpath(tree)\n  File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 230, in xpath\n    return method(parsed_selector)\n  File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 272, in xpath_pseudo\n    return method(self.xpath(pseudo.selector))\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/cssselectpatch.py\", line 25, in xpath_last_pseudo\n    xpath.add_post_condition('position() = last()')\nAttributeError: 'XPathExpr' object has no attribute 'add_post_condition'\n-------------------- >> begin captured logging << --------------------\nurllib3.connectionpool: INFO: Starting new HTTP connection (1): duckduckgo.com\nurllib3.connectionpool: DEBUG: \"POST / HTTP/1.1\" 301 178\nurllib3.connectionpool: INFO: Starting new HTTPS connection (1): duckduckgo.com\nurllib3.connectionpool: DEBUG: \"GET / HTTP/1.1\" 200 None\n--------------------- >> end captured logging << ---------------------\n\n======================================================================\nFAIL: Doctest: pyquery.pyquery.PyQuery.nextAll\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python2.7/doctest.py\", line 2201, in runTest\n    raise self.failureException(self.format_failure(new.getvalue()))\nAssertionError: Failed doctest test for pyquery.pyquery.PyQuery.nextAll\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 434, in nextAll\n\n----------------------------------------------------------------------\nFile \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 438, in pyquery.pyquery.PyQuery.nextAll\nFailed example:\n    d('p:last').nextAll()\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib64/python2.7/doctest.py\", line 1289, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest pyquery.pyquery.PyQuery.nextAll[2]>\", line 1, in <module>\n        d('p:last').nextAll()\n      File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 237, in __call__\n        result = self.__class__(*args, parent=self, **kwargs)\n      File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 213, in __init__\n        xpath = self._css_to_xpath(selector)\n      File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 223, in _css_to_xpath\n        return self._translator.css_to_xpath(selector, prefix)\n      File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 188, in css_to_xpath\n        for selector in selectors)\n      File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 188, in <genexpr>\n        for selector in selectors)\n      File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 208, in selector_to_xpath\n        xpath = self.xpath(tree)\n      File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 230, in xpath\n        return method(parsed_selector)\n      File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 272, in xpath_pseudo\n        return method(self.xpath(pseudo.selector))\n      File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/cssselectpatch.py\", line 25, in xpath_last_pseudo\n        xpath.add_post_condition('position() = last()')\n    AttributeError: 'XPathExpr' object has no attribute 'add_post_condition'\n\n\n======================================================================\nFAIL: Doctest: pyquery.pyquery.PyQuery.prevAll\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python2.7/doctest.py\", line 2201, in runTest\n    raise self.failureException(self.format_failure(new.getvalue()))\nAssertionError: Failed doctest test for pyquery.pyquery.PyQuery.prevAll\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 446, in prevAll\n\n----------------------------------------------------------------------\nFile \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 450, in pyquery.pyquery.PyQuery.prevAll\nFailed example:\n    d('p:last').prevAll()\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib64/python2.7/doctest.py\", line 1289, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest pyquery.pyquery.PyQuery.prevAll[2]>\", line 1, in <module>\n        d('p:last').prevAll()\n      File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 237, in __call__\n        result = self.__class__(*args, parent=self, **kwargs)\n      File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 213, in __init__\n        xpath = self._css_to_xpath(selector)\n      File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 223, in _css_to_xpath\n        return self._translator.css_to_xpath(selector, prefix)\n      File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 188, in css_to_xpath\n        for selector in selectors)\n      File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 188, in <genexpr>\n        for selector in selectors)\n      File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 208, in selector_to_xpath\n        xpath = self.xpath(tree)\n      File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 230, in xpath\n        return method(parsed_selector)\n      File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 272, in xpath_pseudo\n        return method(self.xpath(pseudo.selector))\n      File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/cssselectpatch.py\", line 25, in xpath_last_pseudo\n        xpath.add_post_condition('position() = last()')\n    AttributeError: 'XPathExpr' object has no attribute 'add_post_condition'\n\n\n======================================================================\nFAIL: Doctest: pyquery.pyquery.PyQuery.remove_namespaces\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python2.7/doctest.py\", line 2201, in runTest\n    raise self.failureException(self.format_failure(new.getvalue()))\nAssertionError: Failed doctest test for pyquery.pyquery.PyQuery.remove_namespaces\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 285, in remove_namespaces\n\n----------------------------------------------------------------------\nFile \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 291, in pyquery.pyquery.PyQuery.remove_namespaces\nFailed example:\n    doc.remove_namespaces()\nExpected:\n    [<foo>]\nGot:\n    [<{http://example.com/foo}foo>]\n\n\n======================================================================\nFAIL: Doctest: pyquery.pyquery.PyQuery.xhtml_to_html\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python2.7/doctest.py\", line 2201, in runTest\n    raise self.failureException(self.format_failure(new.getvalue()))\nAssertionError: Failed doctest test for pyquery.pyquery.PyQuery.xhtml_to_html\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 267, in xhtml_to_html\n\n----------------------------------------------------------------------\nFile \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 274, in pyquery.pyquery.PyQuery.xhtml_to_html\nFailed example:\n    doc.remove_namespaces()\nExpected:\n    [<html>]\nGot:\n    [<{http://www.w3.org/1999/xhtml}html>]\n\n\n======================================================================\nFAIL: Doctest: \n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python2.7/doctest.py\", line 2201, in runTest\n    raise self.failureException(self.format_failure(new.getvalue()))\nAssertionError: Failed doctest test for \n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/docs/ajax.txt\", line 0\n\n----------------------------------------------------------------------\nFile \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/docs/ajax.txt\", line 42, in \nFailed example:\n    print a.response.status\nExpected:\n    200 OK\nGot:\n    301 Moved Permanently\n\n-------------------- >> begin captured logging << --------------------\nrestkit.client: DEBUG: Start to perform request: packages.python.org GET /pyquery/\nrestkit.client: DEBUG: Send headers: ['GET /pyquery/ HTTP/1.1\\r\\n', 'Host: packages.python.org\\r\\n', 'User-Agent: restkit/4.2.1\\r\\n', 'Accept-Encoding: identity\\r\\n', 'Content-Length: 0\\r\\n', 'Content-Type: application/octet-stream\\r\\n']\nrestkit.client: DEBUG: send body (chunked: False)\nrestkit.client: DEBUG: Start to parse response\nrestkit.client: DEBUG: Got response: (1, 1) 301 Moved Permanently\nrestkit.client: DEBUG: headers: [IOrderedDict([('Server', 'nginx/1.1.19'), ('Date', 'Sat, 06 Apr 2013 15:06:23 GMT'), ('Content-Type', 'text/html'), ('Content-Length', '185'), ('Location', 'http://pythonhosted.org/pyquery/')])]\nrestkit.client: DEBUG: return response class\n--------------------- >> end captured logging << ---------------------\n\n======================================================================\nFAIL: test_replaceWith (pyquery.test.TestHTMLParser)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/test.py\", line 492, in test_replaceWith\n    assert val == expected, (repr(val), repr(expected))\nAssertionError: ('u\\'<div class=\"portlet\">\\\\n      <a href=\"/toto\">TestimageMy link text</a>\\\\n      <a href=\"/toto2\">imageMy link text 2</a>\\\\n      Behind you, a three-headed HTML&amp;dash;Entity!\\\\n    </div>\\\\n    \\'', '\\'<div class=\"portlet\">\\\\n      <a href=\"/toto\">TestimageMy link text</a>\\\\n      <a href=\"/toto2\">imageMy link text 2</a>\\\\n      Behind you, a three-headed HTML&amp;dash;Entity!\\\\n    </div>\\'')\n\n======================================================================\nFAIL: test_replaceWith_with_function (pyquery.test.TestHTMLParser)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/test.py\", line 503, in test_replaceWith_with_function\n    assert val == expected, (repr(val), repr(expected))\nAssertionError: ('u\\'<div class=\"portlet\">\\\\n      TestimageMy link text\\\\n      imageMy link text 2\\\\n      Behind you, a three-headed HTML&amp;dash;Entity!\\\\n    </div>\\\\n    \\'', '\\'<div class=\"portlet\">\\\\n      TestimageMy link text\\\\n      imageMy link text 2\\\\n      Behind you, a three-headed HTML&amp;dash;Entity!\\\\n    </div>\\'')\n\n======================================================================\nFAIL: Doctest: \n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python2.7/doctest.py\", line 2201, in runTest\n    raise self.failureException(self.format_failure(new.getvalue()))\nAssertionError: Failed doctest test for \n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/../README.rst\", line 0\n\n----------------------------------------------------------------------\nFile \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/../README.rst\", line 61, in \nFailed example:\n    d('p:first')\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib64/python2.7/doctest.py\", line 1289, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest [13]>\", line 1, in <module>\n      File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 237, in __call__\n        result = self.__class__(*args, parent=self, **kwargs)\n      File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 213, in __init__\n        xpath = self._css_to_xpath(selector)\n      File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/pyquery.py\", line 223, in _css_to_xpath\n        return self._translator.css_to_xpath(selector, prefix)\n      File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 188, in css_to_xpath\n        for selector in selectors)\n      File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 188, in <genexpr>\n        for selector in selectors)\n      File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 208, in selector_to_xpath\n        xpath = self.xpath(tree)\n      File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 230, in xpath\n        return method(parsed_selector)\n      File \"/usr/lib/python2.7/site-packages/cssselect/xpath.py\", line 272, in xpath_pseudo\n        return method(self.xpath(pseudo.selector))\n      File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/cssselectpatch.py\", line 19, in xpath_first_pseudo\n        xpath.add_post_condition('position() = 1')\n    AttributeError: 'XPathExpr' object has no attribute 'add_post_condition'\n\n-------------------- >> begin captured logging << --------------------\nurllib3.connectionpool: INFO: Starting new HTTP connection (1): google.com\nurllib3.connectionpool: DEBUG: \"GET / HTTP/1.1\" 301 219\nurllib3.connectionpool: INFO: Starting new HTTP connection (1): www.google.com\nurllib3.connectionpool: DEBUG: \"GET / HTTP/1.1\" 200 None\n--------------------- >> end captured logging << ---------------------\n\n======================================================================\nFAIL: Doctest: \n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python2.7/doctest.py\", line 2201, in runTest\n    raise self.failureException(self.format_failure(new.getvalue()))\nAssertionError: Failed doctest test for \n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/docs/tips.txt\", line 0\n\n----------------------------------------------------------------------\nFile \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/docs/tips.txt\", line 10, in \nFailed example:\n    d('a[tabindex=\"-1\"]').attr('href')\nExpected:\n    '/about.html'\nGot:\n    '/about'\n----------------------------------------------------------------------\nFile \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/docs/tips.txt\", line 14, in \nFailed example:\n    d('a[tabindex=\"-1\"]').attr('href')\nExpected:\n    'http://duckduckgo.com/about.html'\nGot:\n    'http://duckduckgo.com/about'\n\n-------------------- >> begin captured logging << --------------------\nurllib3.connectionpool: INFO: Starting new HTTP connection (1): duckduckgo.com\nurllib3.connectionpool: DEBUG: \"GET / HTTP/1.1\" 301 178\nurllib3.connectionpool: INFO: Starting new HTTPS connection (1): duckduckgo.com\nurllib3.connectionpool: DEBUG: \"GET / HTTP/1.1\" 200 None\n--------------------- >> end captured logging << ---------------------\n\n======================================================================\nFAIL: test_remove_namespaces (pyquery.test.TestXMLNamespace)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/lmacken/rpmbuild/BUILD/pyquery-1.2.4/pyquery/test.py\", line 558, in test_remove_namespaces\n    self.assertEqual(repr(val), repr(expected))\nAssertionError: 'None' != \"'What'\"\n\n----------------------------------------------------------------------\nRan 97 tests in 2.106s\n\nFAILED (errors=5, failures=10)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/26", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/26/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/26/events", "html_url": "https://github.com/gawel/pyquery/issues/26", "id": 11418361, "node_id": "MDU6SXNzdWUxMTQxODM2MQ==", "number": 26, "title": "Copyright", "user": {"login": "rodo", "id": 85827, "node_id": "MDQ6VXNlcjg1ODI3", "avatar_url": "https://avatars2.githubusercontent.com/u/85827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodo", "html_url": "https://github.com/rodo", "followers_url": "https://api.github.com/users/rodo/followers", "following_url": "https://api.github.com/users/rodo/following{/other_user}", "gists_url": "https://api.github.com/users/rodo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodo/subscriptions", "organizations_url": "https://api.github.com/users/rodo/orgs", "repos_url": "https://api.github.com/users/rodo/repos", "events_url": "https://api.github.com/users/rodo/events{/privacy}", "received_events_url": "https://api.github.com/users/rodo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-02-26T17:11:02Z", "updated_at": "2013-12-21T01:00:15Z", "closed_at": "2013-12-21T01:00:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nThe LICENSE.txt and other headers file contain a copyright for Olivier Lauzanne olauzanne@gmail.com but no one with your name Gawel, is it a missing ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/25", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/25/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/25/events", "html_url": "https://github.com/gawel/pyquery/issues/25", "id": 11347984, "node_id": "MDU6SXNzdWUxMTM0Nzk4NA==", "number": 25, "title": "set encoding has no effect when using requests to fetch non-ascii content", "user": {"login": "cuppster", "id": 565367, "node_id": "MDQ6VXNlcjU2NTM2Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/565367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuppster", "html_url": "https://github.com/cuppster", "followers_url": "https://api.github.com/users/cuppster/followers", "following_url": "https://api.github.com/users/cuppster/following{/other_user}", "gists_url": "https://api.github.com/users/cuppster/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuppster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuppster/subscriptions", "organizations_url": "https://api.github.com/users/cuppster/orgs", "repos_url": "https://api.github.com/users/cuppster/repos", "events_url": "https://api.github.com/users/cuppster/events{/privacy}", "received_events_url": "https://api.github.com/users/cuppster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-02-25T06:02:08Z", "updated_at": "2013-03-09T11:54:51Z", "closed_at": "2013-03-09T11:54:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When using requests to fetch non-ascii content, the returned document is the raw un-encoded content. Setting .encoding has no effect. Recommend using .text instead of .content for the returned content in the openers.py method _requests\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/24", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/24/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/24/events", "html_url": "https://github.com/gawel/pyquery/issues/24", "id": 11237018, "node_id": "MDU6SXNzdWUxMTIzNzAxOA==", "number": 24, "title": "eq(-1) not working", "user": {"login": "kkzhang", "id": 575834, "node_id": "MDQ6VXNlcjU3NTgzNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/575834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kkzhang", "html_url": "https://github.com/kkzhang", "followers_url": "https://api.github.com/users/kkzhang/followers", "following_url": "https://api.github.com/users/kkzhang/following{/other_user}", "gists_url": "https://api.github.com/users/kkzhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/kkzhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kkzhang/subscriptions", "organizations_url": "https://api.github.com/users/kkzhang/orgs", "repos_url": "https://api.github.com/users/kkzhang/repos", "events_url": "https://api.github.com/users/kkzhang/events{/privacy}", "received_events_url": "https://api.github.com/users/kkzhang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-02-21T11:32:41Z", "updated_at": "2014-08-30T16:21:17Z", "closed_at": "2014-08-30T16:21:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "version: 1.2.3\n\n```\n>>> a = '<ul><li>1</li><li>2</li></ul>'\n>>> from pyquery import PyQuery\n>>> doc = PyQuery(a)\n>>> doc('li').eq(-1).text()\n>>> doc('li').eq(-2).text()\n'1'\n```\n\nSo i suppose it maybe a bug.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/23", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/23/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/23/events", "html_url": "https://github.com/gawel/pyquery/issues/23", "id": 10836077, "node_id": "MDU6SXNzdWUxMDgzNjA3Nw==", "number": 23, "title": "removeClass adds class attribute to elements which previously lacked one", "user": {"login": "acdha", "id": 46565, "node_id": "MDQ6VXNlcjQ2NTY1", "avatar_url": "https://avatars3.githubusercontent.com/u/46565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acdha", "html_url": "https://github.com/acdha", "followers_url": "https://api.github.com/users/acdha/followers", "following_url": "https://api.github.com/users/acdha/following{/other_user}", "gists_url": "https://api.github.com/users/acdha/gists{/gist_id}", "starred_url": "https://api.github.com/users/acdha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acdha/subscriptions", "organizations_url": "https://api.github.com/users/acdha/orgs", "repos_url": "https://api.github.com/users/acdha/repos", "events_url": "https://api.github.com/users/acdha/events{/privacy}", "received_events_url": "https://api.github.com/users/acdha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-02-11T01:35:39Z", "updated_at": "2013-12-21T00:25:18Z", "closed_at": "2013-12-21T00:25:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "On Python 3.3:\n\n``` python\ntemplate('title,*[itemprop=\"title\"]').removeClass('placeholder').text(title)\n```\n\nactually adds a new, empty `class` attribute:\n\n``` html\n<title class=\"\">\u2026</title>\n```\n\nand the now empty:\n\n``` html\n<h2 class=\"\" itemprop=\"title\">\u2026</h2>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/22", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/22/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/22/events", "html_url": "https://github.com/gawel/pyquery/issues/22", "id": 10835287, "node_id": "MDU6SXNzdWUxMDgzNTI4Nw==", "number": 22, "title": "Open by filename fails on Python 3", "user": {"login": "acdha", "id": 46565, "node_id": "MDQ6VXNlcjQ2NTY1", "avatar_url": "https://avatars3.githubusercontent.com/u/46565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acdha", "html_url": "https://github.com/acdha", "followers_url": "https://api.github.com/users/acdha/followers", "following_url": "https://api.github.com/users/acdha/following{/other_user}", "gists_url": "https://api.github.com/users/acdha/gists{/gist_id}", "starred_url": "https://api.github.com/users/acdha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acdha/subscriptions", "organizations_url": "https://api.github.com/users/acdha/orgs", "repos_url": "https://api.github.com/users/acdha/repos", "events_url": "https://api.github.com/users/acdha/events{/privacy}", "received_events_url": "https://api.github.com/users/acdha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2013-02-11T01:18:13Z", "updated_at": "2013-12-21T11:45:47Z", "closed_at": "2013-12-21T11:45:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I ran into a problem loading files with PyQuery on Python 3.3 :\n\n```\n$ python\nPython 3.3.0 (default, Oct 22 2012, 11:17:43) \n>>> from pyquery import PyQuery as pq\n>>> pq(filename=\"index.html\")\n[None]\n>>> from lxml.html import parse\n>>> parse(\"index.html\")\n<lxml.etree._ElementTree object at 0x108a72f38>\n>>> pq(parse(\"index.html\").getroot())\n[<html>]\n```\n\nIs `filename` expected to work? I noticed that it's listed on http://pythonhosted.org/pyquery/ in the quickstart but not in the full API listing.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/20", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/20/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/20/events", "html_url": "https://github.com/gawel/pyquery/issues/20", "id": 10374295, "node_id": "MDU6SXNzdWUxMDM3NDI5NQ==", "number": 20, "title": "id selector with dot in the name fails", "user": {"login": "toutpt", "id": 67528, "node_id": "MDQ6VXNlcjY3NTI4", "avatar_url": "https://avatars0.githubusercontent.com/u/67528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toutpt", "html_url": "https://github.com/toutpt", "followers_url": "https://api.github.com/users/toutpt/followers", "following_url": "https://api.github.com/users/toutpt/following{/other_user}", "gists_url": "https://api.github.com/users/toutpt/gists{/gist_id}", "starred_url": "https://api.github.com/users/toutpt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toutpt/subscriptions", "organizations_url": "https://api.github.com/users/toutpt/orgs", "repos_url": "https://api.github.com/users/toutpt/repos", "events_url": "https://api.github.com/users/toutpt/events{/privacy}", "received_events_url": "https://api.github.com/users/toutpt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-01-28T12:55:17Z", "updated_at": "2015-09-26T13:34:16Z", "closed_at": "2013-01-28T15:10:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "(Pdb) pq('.widget select')\n[<select#form.backend>](Pdb) pq('#form.backend')\n[]\n\nThe corresponding HTML:\n\n```\n <!DOCTYPE html><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\">                    <head>    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />            <base href=\"http://localhost:8080/Plone/\" /><!--[if lt IE 7]></base><![endif]-->                <link rel=\"alternate\" data-kss-base-url=\"kss-base-url\" href=\"http://localhost:8080/Plone/\" />      <link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"http://localhost:8080/Plone/portal_css/Sunburst%20Theme/member-cachekey-900c269cf01764a1e096f36a09f25b5f.css\" />    <link rel=\"stylesheet\" type=\"text/css\" href=\"http://localhost:8080/Plone/portal_css/Sunburst%20Theme/base-cachekey-356024a83ac2b2addcb0f329d1d3c239.css\" />    <style type=\"text/css\" media=\"screen\">@import url(http://localhost:8080/Plone/portal_css/Sunburst%20Theme/resourceplone.app.jquerytools.dateinput-cachekey-76c71caca209f279ce8fdad46f0557f9.css);</style>    <link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"http://localhost:8080/Plone/portal_css/Sunburst%20Theme/ploneCustom-cachekey-101b3f5afa9656523a6a16ea1461e56b.css\" />      <link rel=\"stylesheet\" data-rel=\"kinetic-stylesheet\" type=\"text/kss\" href=\"http://localhost:8080/Plone/portal_kss/Sunburst%20Theme/resourcetinymce.ksstinymce-cachekey-5c1d068948e1ac2c198cb51073458d9c.kss\" />    <link rel=\"stylesheet\" data-rel=\"kinetic-stylesheet\" type=\"text/kss\" href=\"http://localhost:8080/Plone/portal_kss/Sunburst%20Theme/at-cachekey-1cb5f7cb67a483dbd9d34d0a476e29eb.kss\" />      <script type=\"text/javascript\" src=\"http://localhost:8080/Plone/portal_javascripts/Sunburst%20Theme/resourceplone.app.jquery-cachekey-72870daa59a3b40bee32e77877067638.js\"></script>    <script type=\"text/javascript\" src=\"http://localhost:8080/Plone/portal_javascripts/Sunburst%20Theme/sarissa-cachekey-323c1bc9929846d51e2da9d475a0b87e.js\"></script>    <script type=\"text/javascript\" src=\"http://localhost:8080/Plone/portal_javascripts/Sunburst%20Theme/table_sorter-cachekey-da182581d1ee6ddbdb12cfc572238895.js\"></script><title>Plone site</title>            <link rel=\"author\" href=\"http://localhost:8080/Plone/author/\" title=\"Author information\" />    <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"http://localhost:8080/Plone/favicon.ico\" />    <link rel=\"apple-touch-icon\" href=\"http://localhost:8080/Plone/touch_icon.png\" />    <link rel=\"search\" href=\"http://localhost:8080/Plone/@@search\" title=\"Search this site\" />                                                                                <meta name=\"viewport\" content=\"width=device-width, initial-scale=0.6666, maximum-scale=1.0, minimum-scale=0.6666\" />        <meta name=\"generator\" content=\"Plone - http://plone.org\" />    </head><body class=\"template-cpc-controlpanel portaltype-plone-site site-plone icons-on\" dir=\"ltr\"><div id=\"visual-portal-wrapper\">        <div id=\"portal-top\" class=\"row\"><div class=\"cell width-full position-0\">            <div id=\"portal-header\">    <p class=\"hiddenStructure\">  <a accesskey=\"2\" href=\"http://nohost#content\">Skip to content.</a> |  <a accesskey=\"6\" href=\"http://nohost#portal-globalnav\">Skip to navigation</a></p><div id=\"portal-personaltools-wrapper\"><p class=\"hiddenStructure\">Personal tools</p><dl class=\"actionMenu deactivated\" id=\"portal-personaltools\">    <dt class=\"actionMenuHeader\">    <a id=\"user-name\" href=\"http://localhost:8080/Plone/useractions\">test_user_1_</a>  </dt>  <dd class=\"actionMenuContent\">    <ul>        <li id=\"personaltools-dashboard\">            <a href=\"http://localhost:8080/Plone/dashboard\">Dashboard</a>        </li>        <li id=\"personaltools-preferences\">            <a href=\"http://localhost:8080/Plone/@@personal-preferences\">Preferences</a>        </li>        <li id=\"personaltools-plone_setup\">            <a href=\"http://localhost:8080/Plone/@@overview-controlpanel\">Site Setup</a>        </li>        <li id=\"personaltools-logout\">            <a href=\"http://localhost:8080/Plone/logout\">Log out</a>        </li>    </ul>  </dd>  </dl></div><div id=\"portal-searchbox\">    <form id=\"searchGadget_form\" action=\"http://localhost:8080/Plone/@@search\">        <div class=\"LSBox\">        <label class=\"hiddenStructure\" for=\"searchGadget\">Search Site</label>        <input name=\"SearchableText\" type=\"text\" size=\"18\" title=\"Search Site\" placeholder=\"Search Site\" accesskey=\"4\" class=\"searchField\" id=\"searchGadget\" />        <input class=\"searchButton\" type=\"submit\" value=\"Search\" />        <div class=\"searchSection\">            <input id=\"searchbox_currentfolder_only\" class=\"noborder\" type=\"checkbox\" name=\"path\" value=\"/plone\" />            <label for=\"searchbox_currentfolder_only\" style=\"cursor: pointer\">                only in current section            </label>        </div>        <div class=\"LSResult\" id=\"LSResult\"><div class=\"LSShadow\" id=\"LSShadow\"></div></div>        </div>    </form>    <div id=\"portal-advanced-search\" class=\"hiddenStructure\">        <a href=\"http://localhost:8080/Plone/@@search\" accesskey=\"5\">            Advanced Search&hellip;        </a>    </div></div><a id=\"portal-logo\" title=\"Plone site\" accesskey=\"1\" href=\"http://localhost:8080/Plone\">    <img src=\"http://localhost:8080/Plone/logo.png\" alt=\"Plone site\" title=\"Plone site\" height=\"56\" width=\"215\" /></a>    <p class=\"hiddenStructure\">Navigation</p>    <ul id=\"portal-globalnav\"><li id=\"portaltab-index_html\" class=\"selected\"><a href=\"http://localhost:8080/Plone\" title=\"\">Home</a></li><li id=\"portaltab-test-folder\" class=\"plain\"><a href=\"http://localhost:8080/Plone/test-folder\" title=\"\">test-folder</a></li></ul></div></div>        </div>    <div id=\"portal-columns\" class=\"row\">        <div id=\"portal-column-content\" class=\"cell width-3:4 position-1:4\">            <div id=\"viewlet-above-content\"><div id=\"portal-breadcrumbs\">    <span id=\"breadcrumbs-you-are-here\">Youare here:</span>    <span id=\"breadcrumbs-home\">        <a href=\"http://localhost:8080/Plone\">Home</a>            </span></div></div>                                          <div class=\"\">                                            <dl class=\"portalMessage info\" id=\"kssPortalMessage\" style=\"display:none\">        <dt>Info</dt>        <dd></dd>    </dl>                                            <div id=\"content\">                                                                                                                    <a href=\"http://localhost:8080/Plone/plone_control_panel\" id=\"setup-link\">                Site Setup            </a> &rsaquo;        <h1 class=\"documentFirstHeading\">Portlet Contact: Select Back-end</h1>                <div id=\"content-core\">            <form action=\"http://nohost\" method=\"post\" class=\"edit-form enableUnloadProtection\" enctype=\"multipart/form-data\" id=\"zc.page.browser_form\">                <input type=\"hidden\" name=\"fieldset.current\" value=\"\" />                                <fieldset>                    <legend>Select Back-end</legend>                                            <div class=\"field\">                            <label for=\"form.backend\">                              Back-end                              <span class=\"fieldRequired\" title=\"Required\">                                  (Required)                              </span>                              <span class=\"formHelp\">Select the back-end for the Contact portlets.</span>                            </label>                                                        <div class=\"widget\"><div><div class=\"value\"><select id=\"form.backend\" name=\"form.backend\" size=\"1\" ><option value=\"\"></option><option selected=\"selected\" value=\"dummy\">dummy</option></select></div><input name=\"form.backend-empty-marker\" type=\"hidden\" value=\"1\" /></div></div>                        </div>                                    </fieldset>                                <div class=\"visualClear\"><!-- --></div>                <div id=\"actionsView\" class=\"formControls\">                    <span class=\"actionButtons\">                        <input type=\"submit\" id=\"form.actions.save\" name=\"form.actions.save\" value=\"Save\" class=\"context\" />                        <input type=\"submit\" id=\"form.actions.cancel\" name=\"form.actions.cancel\" value=\"Cancel\" class=\"context\" />                        <input type=\"submit\" id=\"form.actions.436f6e66696775726520746865206261636b2d656e64\" name=\"form.actions.436f6e66696775726520746865206261636b2d656e64\" value=\"Configure the back-end\" class=\"context\" />                    </span>                </div>                <input type=\"hidden\" name=\"_authenticator\" value=\"362adf7a7bc72182e454037b9362b70dc40bdf05\"/>            </form>                    </div>                                          </div>                                                        </div>                                  <div id=\"viewlet-below-content\"></div>        </div>                <div id=\"portal-column-one\" class=\"cell width-1:4 position-0\">                                <dl class=\"portlet\" id=\"portlet-prefs\">    <dt class=\"portletHeader\">        <span class=\"portletTopLeft\"></span>        <a href=\"http://localhost:8080/Plone/plone_control_panel\">Site Setup</a>        <span class=\"portletTopRight\"></span>    </dt>    <dd class=\"portletItem\">                    <strong>Plone Configuration</strong>            <ul class=\"configlets\">                                <li>                    <a href=\"http://localhost:8080/Plone/prefs_install_products_form\">                                                <img src=\"http://localhost:8080/Plone/product_icon.png\" alt=\"\" />                    Add-ons                    </a>                </li>                                                <li>                    <a href=\"http://localhost:8080/Plone/@@calendar-controlpanel\">                                                <img src=\"http://localhost:8080/Plone/event_icon.png\" alt=\"\" />                    Calendar                    </a>                </li>                                                <li>                    <a href=\"http://localhost:8080/Plone/portal_registry\">                                                <img src=\"http://localhost:8080/Plone/++resource++plone.app.registry/icon.png\" alt=\"\" />                    Configuration Registry                    </a>                </li>                                                <li>                    <a href=\"http://localhost:8080/Plone/@@rules-controlpanel\">                                                <img src=\"http://localhost:8080/Plone/contentrules_icon.png\" alt=\"\" />                    Content Rules                    </a>                </li>                                                <li>                    <a href=\"http://localhost:8080/Plone/@@discussion-settings\">                                                <img src=\"http://localhost:8080/Plone/discussionitem_icon.gif\" alt=\"\" />                    Discussion                    </a>                </li>                                                <li>                    <a href=\"http://localhost:8080/Plone/@@editing-controlpanel\">                                                <img src=\"http://localhost:8080/Plone/cut_icon.png\" alt=\"\" />                    Editing                    </a>                </li>                                                <li>                    <a href=\"http://localhost:8080/Plone/prefs_error_log_form\">                                                <img src=\"http://localhost:8080/Plone/error_log_icon.png\" alt=\"\" />                    Errors                    </a>                </li>                                                <li>                    <a href=\"http://localhost:8080/Plone/@@filter-controlpanel\">                                                <img src=\"http://localhost:8080/Plone/htmlfilter_icon.png\" alt=\"\" />                    HTML Filtering                    </a>                </li>                                                <li>                    <a href=\"http://localhost:8080/Plone/@@imaging-controlpanel\">                                                <img src=\"http://localhost:8080/Plone/image_icon.png\" alt=\"\" />                    Image Handling                    </a>                </li>                                                <li>                    <a href=\"http://localhost:8080/Plone/@@language-controlpanel\">                                                <img src=\"http://localhost:8080/Plone/flag-plone.png\" alt=\"\" />                    Language                    </a>                </li>                                                <li>                    <a href=\"http://localhost:8080/Plone/@@mail-controlpanel\">                                                <img src=\"http://localhost:8080/Plone/mail_icon.png\" alt=\"\" />                    Mail                    </a>                </li>                                                <li>                    <a href=\"http://localhost:8080/Plone/@@maintenance-controlpanel\">                                                <img src=\"http://localhost:8080/Plone/maintenance_icon.png\" alt=\"\" />                    Maintenance                    </a>                </li>                                                <li>                    <a href=\"http://localhost:8080/Plone/@@markup-controlpanel\">                                                <img src=\"http://localhost:8080/Plone/edit.png\" alt=\"\" />                    Markup                    </a>                </li>                                                <li>                    <a href=\"http://localhost:8080/Plone/@@navigation-controlpanel\">                                                <img src=\"http://localhost:8080/Plone/navigation_icon.png\" alt=\"\" />                    Navigation                    </a>                </li>                                                <li>                    <a href=\"http://localhost:8080/Plone/@@search-controlpanel\">                                                <img src=\"http://localhost:8080/Plone/search_icon.png\" alt=\"\" />                    Search                    </a>                </li>                                                <li>                    <a href=\"http://localhost:8080/Plone/@@security-controlpanel\">                                                <img src=\"http://localhost:8080/Plone/lock_icon.png\" alt=\"\" />                    Security                    </a>                </li>                                                <li>                    <a href=\"http://localhost:8080/Plone/@@site-controlpanel\">                                                <img src=\"http://localhost:8080/Plone/logoIcon.png\" alt=\"\" />                    Site                    </a>                </li>                                                <li>                    <a href=\"http://localhost:8080/Plone/@@skins-controlpanel\">                                                <img src=\"http://localhost:8080/Plone/skins_icon.png\" alt=\"\" />                    Themes                    </a>                </li>                                                <li>                    <a href=\"http://localhost:8080/Plone/portal_tinymce/@@tinymce-controlpanel\">                                                <img src=\"http://localhost:8080/Plone/++resource++tinymce.images/tinymce_icon.gif\" alt=\"\" />                    TinyMCE Visual Editor                    </a>                </li>                                                <li>                    <a href=\"http://localhost:8080/Plone/@@types-controlpanel\">                                                <img src=\"http://localhost:8080/Plone/document_icon.png\" alt=\"\" />                    Types                    </a>                </li>                                                <li>                    <a href=\"http://localhost:8080/Plone/@@usergroup-userprefs\">                                                <img src=\"http://localhost:8080/Plone/group.png\" alt=\"\" />                    Users and Groups                    </a>                </li>                                                <li>                    <a href=\"http://localhost:8080/Plone/manage_main\">                                                <img src=\"http://localhost:8080/Plone/zope_icon.png\" alt=\"\" />                    Zope Management Interface                    </a>                </li>                            </ul>                <span class=\"portletBottomLeft\"></span>        <span class=\"portletBottomRight\"></span>    </dd>    <dd class=\"portletItem\">                    <strong>Add-on Configuration</strong>            <ul class=\"configlets\">                                <li>                    <a href=\"http://localhost:8080/Plone/@@cpc-controlpanel\">                                                <img src=\"http://localhost:8080/Plone/++resource++collective-portlet-contact/contact.gif\" alt=\"\" />                    collective.portlet.contact Settings                    </a>                </li>                            </ul>                <span class=\"portletBottomLeft\"></span>        <span class=\"portletBottomRight\"></span>    </dd></dl>                    </div>                    </div>    <div id=\"portal-footer-wrapper\" class=\"row\">        <div class=\"cell width-full position-0\">            <div id=\"portal-footer\">          <p>                              The               <a href=\"http://plone.org\">Plone<sup>&reg;</sup> Open Source CMS/WCM</a>               is               <abbr title=\"Copyright\">&copy;</abbr>               2000-2013               by the               <a href=\"http://plone.org/foundation\">Plone Foundation</a>               and friends.                                             Distributed under the                    <a href=\"http://creativecommons.org/licenses/GPL/2.0/\">GNU GPL license</a>.                         </p></div><div id=\"portal-colophon\"><div class=\"colophonWrapper\"><ul>  <li>    <a href=\"http://plone.org\" title=\"This site was built using the Plone Open Source CMS/WCM.\">      Powered by Plone &amp; Python</a>  </li></ul></div></div><ul id=\"portal-siteactions\">    <li id=\"siteaction-sitemap\"><a href=\"http://localhost:8080/Plone/sitemap\" accesskey=\"3\" title=\"Site Map\">Site Map</a></li>    <li id=\"siteaction-accessibility\"><a href=\"http://localhost:8080/Plone/accessibility-info\" accesskey=\"0\" title=\"Accessibility\">Accessibility</a></li>    <li id=\"siteaction-contact\"><a href=\"http://localhost:8080/Plone/contact-info\" accesskey=\"9\" title=\"Contact\">Contact</a></li></ul>            <div id=\"kss-spinner\">                <img alt=\"\" src=\"http://localhost:8080/Plone/spinner.gif\" />            </div>        </div>    </div></div></body></html>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gawel/pyquery/issues/19", "repository_url": "https://api.github.com/repos/gawel/pyquery", "labels_url": "https://api.github.com/repos/gawel/pyquery/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/gawel/pyquery/issues/19/comments", "events_url": "https://api.github.com/repos/gawel/pyquery/issues/19/events", "html_url": "https://github.com/gawel/pyquery/issues/19", "id": 10189468, "node_id": "MDU6SXNzdWUxMDE4OTQ2OA==", "number": 19, "title": "is_() is broken", "user": {"login": "rafales", "id": 919812, "node_id": "MDQ6VXNlcjkxOTgxMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/919812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rafales", "html_url": "https://github.com/rafales", "followers_url": "https://api.github.com/users/rafales/followers", "following_url": "https://api.github.com/users/rafales/following{/other_user}", "gists_url": "https://api.github.com/users/rafales/gists{/gist_id}", "starred_url": "https://api.github.com/users/rafales/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rafales/subscriptions", "organizations_url": "https://api.github.com/users/rafales/orgs", "repos_url": "https://api.github.com/users/rafales/repos", "events_url": "https://api.github.com/users/rafales/events{/privacy}", "received_events_url": "https://api.github.com/users/rafales/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-01-22T11:58:28Z", "updated_at": "2014-01-03T11:19:08Z", "closed_at": "2014-01-03T11:19:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "is_() method does not work like jQuery one. It seems that it matches both current and child elements. Example:\n\n```\n>>> from pyquery import PyQuery as pq\n>>> html = '<p class=\"one\">hello <span class=\"two\">world</span></p>'\n>>> pq(html).is_('.two')\nTrue\n```\n", "performed_via_github_app": null, "score": 1.0}]}