{"total_count": 7087, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/keras-team/keras/issues/14191", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/14191/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/14191/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/14191/events", "html_url": "https://github.com/keras-team/keras/issues/14191", "id": 679766448, "node_id": "MDU6SXNzdWU2Nzk3NjY0NDg=", "number": 14191, "title": "Unexpected keyword argument 'ragged' in Keras", "user": {"login": "huyhoangle86", "id": 42195775, "node_id": "MDQ6VXNlcjQyMTk1Nzc1", "avatar_url": "https://avatars1.githubusercontent.com/u/42195775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huyhoangle86", "html_url": "https://github.com/huyhoangle86", "followers_url": "https://api.github.com/users/huyhoangle86/followers", "following_url": "https://api.github.com/users/huyhoangle86/following{/other_user}", "gists_url": "https://api.github.com/users/huyhoangle86/gists{/gist_id}", "starred_url": "https://api.github.com/users/huyhoangle86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huyhoangle86/subscriptions", "organizations_url": "https://api.github.com/users/huyhoangle86/orgs", "repos_url": "https://api.github.com/users/huyhoangle86/repos", "events_url": "https://api.github.com/users/huyhoangle86/events{/privacy}", "received_events_url": "https://api.github.com/users/huyhoangle86/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-16T14:42:11Z", "updated_at": "2020-08-16T14:56:06Z", "closed_at": "2020-08-16T14:56:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to run a trained keras model with the following python code:\r\n\r\n`from keras.models import load_model\r\nfrom time import sleep\r\nfrom keras.preprocessing.image import img_to_array\r\nfrom keras.preprocessing import image\r\nimport cv2\r\nimport numpy as np\r\nimport keras.losses\r\n\r\nface_classifier  = cv2.CascadeClassifier(cv2.data.haarcascades +'haarcascade_frontalface_alt.xml')\r\nclassifier = load_model('facial_expression.h5')\r\ncap = cv2.VideoCapture(0)\r\nwhile True:\r\n    ret, frame = cap.read()\r\n    labels = []\r\n    gray = cv2.cvtColor(frame,cv2.COLOR_BGR2GRAY)\r\n    faces = face_classifier.detectMultiScale(gray,1.3,5)\r\n    for (x,y,w,h) in faces:\r\n        cv2.rectangle(frame,(x,y),(x+w,y+h),(255,0,0),2)\r\n        roi_gray = gray[y:y+h,x:x+w]\r\n        roi_gray = cv2.resize(roi_gray,(48,48),interpolation=cv2.INTER_AREA)\r\n        if np.sum([roi_gray])!=0:\r\n            roi = roi_gray.astype('float')/255.0\r\n            roi = img_to_array(roi)\r\n            roi = np.expand_dims(roi,axis=0)\r\n\r\n            preds = classifier.predict(roi)[0]\r\n            label=class_labels[preds.argmax()]\r\n            label_position = (x,y)\r\n            cv2.putText(frame,label,label_position,cv2.FONT_HERSHEY_SIMPLEX,2,(0,255,0),3)\r\n        else:\r\n            cv2.putText(frame,'No Face Found',(20,60),cv2.FONT_HERSHEY_SIMPLEX,2,(0,255,0),3)\r\n    cv2.imshow('Emotion Detector',frame)\r\n    if cv2.waitKey(1) & 0xFF == ord('q'):\r\n        break`\r\nand I got follow error when run the code \r\n`Unexpected keyword argument 'ragged' in Keras`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/14188", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/14188/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/14188/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/14188/events", "html_url": "https://github.com/keras-team/keras/issues/14188", "id": 677155803, "node_id": "MDU6SXNzdWU2NzcxNTU4MDM=", "number": 14188, "title": "Solved: UnknownError: Failed to get convolution algorithm. This is probably because cuDNN failed to initialize, so try looking to see if a warning log message was printed above. [[node model/conv2d/Conv2D (defined at :6) ]] [Op:__inference_distributed_function_7653]", "user": {"login": "ujwalakoriraj", "id": 60289734, "node_id": "MDQ6VXNlcjYwMjg5NzM0", "avatar_url": "https://avatars2.githubusercontent.com/u/60289734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ujwalakoriraj", "html_url": "https://github.com/ujwalakoriraj", "followers_url": "https://api.github.com/users/ujwalakoriraj/followers", "following_url": "https://api.github.com/users/ujwalakoriraj/following{/other_user}", "gists_url": "https://api.github.com/users/ujwalakoriraj/gists{/gist_id}", "starred_url": "https://api.github.com/users/ujwalakoriraj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ujwalakoriraj/subscriptions", "organizations_url": "https://api.github.com/users/ujwalakoriraj/orgs", "repos_url": "https://api.github.com/users/ujwalakoriraj/repos", "events_url": "https://api.github.com/users/ujwalakoriraj/events{/privacy}", "received_events_url": "https://api.github.com/users/ujwalakoriraj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-11T19:55:39Z", "updated_at": "2020-08-13T15:08:58Z", "closed_at": "2020-08-13T14:04:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is my input:\r\n\r\n`history = model.fit(train_images,\r\n                    train_masks/255,\r\n                    validation_split = 0.1,\r\n                    epochs=EPOCHS)`\r\n\r\nThe error is:\r\n\r\n`Train on 6274 samples, validate on 698 samples\r\nEpoch 1/100\r\n  32/6274 [..............................] - ETA: 37s\r\n---------------------------------------------------------------------------\r\nUnknownError                              Traceback (most recent call last)\r\n<ipython-input-21-107e0c8149d7> in <module>\r\n      2                     train_masks/255,\r\n      3                     validation_split = 0.1,\r\n----> 4                     epochs=EPOCHS)\r\n      5 model.save(\"D:/python/building_detection/8_building/building_final.h5\")\r\n\r\n~\\anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow_core\\python\\keras\\engine\\training.py in fit(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_freq, max_queue_size, workers, use_multiprocessing, **kwargs)\r\n    817         max_queue_size=max_queue_size,\r\n    818         workers=workers,\r\n--> 819         use_multiprocessing=use_multiprocessing)\r\n    820 \r\n    821   def evaluate(self,\r\n\r\n~\\anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow_core\\python\\keras\\engine\\training_v2.py in fit(self, model, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_freq, max_queue_size, workers, use_multiprocessing, **kwargs)\r\n    340                 mode=ModeKeys.TRAIN,\r\n    341                 training_context=training_context,\r\n--> 342                 total_epochs=epochs)\r\n    343             cbks.make_logs(model, epoch_logs, training_result, ModeKeys.TRAIN)\r\n    344 \r\n\r\n~\\anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow_core\\python\\keras\\engine\\training_v2.py in run_one_epoch(model, iterator, execution_function, dataset_size, batch_size, strategy, steps_per_epoch, num_samples, mode, training_context, total_epochs)\r\n    126         step=step, mode=mode, size=current_batch_size) as batch_logs:\r\n    127       try:\r\n--> 128         batch_outs = execution_function(iterator)\r\n    129       except (StopIteration, errors.OutOfRangeError):\r\n    130         # TODO(kaftan): File bug about tf function and errors.OutOfRangeError?\r\n\r\n~\\anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow_core\\python\\keras\\engine\\training_v2_utils.py in execution_function(input_fn)\r\n     96     # `numpy` translates Tensors to values in Eager mode.\r\n     97     return nest.map_structure(_non_none_constant_value,\r\n---> 98                               distributed_function(input_fn))\r\n     99 \r\n    100   return execution_function\r\n\r\n~\\anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow_core\\python\\eager\\def_function.py in __call__(self, *args, **kwds)\r\n    566         xla_context.Exit()\r\n    567     else:\r\n--> 568       result = self._call(*args, **kwds)\r\n    569 \r\n    570     if tracing_count == self._get_tracing_count():\r\n\r\n~\\anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow_core\\python\\eager\\def_function.py in _call(self, *args, **kwds)\r\n    597       # In this case we have created variables on the first call, so we run the\r\n    598       # defunned version which is guaranteed to never create variables.\r\n--> 599       return self._stateless_fn(*args, **kwds)  # pylint: disable=not-callable\r\n    600     elif self._stateful_fn is not None:\r\n    601       # Release the lock early so that multiple threads can perform the call\r\n\r\n~\\anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow_core\\python\\eager\\function.py in __call__(self, *args, **kwargs)\r\n   2361     with self._lock:\r\n   2362       graph_function, args, kwargs = self._maybe_define_function(args, kwargs)\r\n-> 2363     return graph_function._filtered_call(args, kwargs)  # pylint: disable=protected-access\r\n   2364 \r\n   2365   @property\r\n\r\n~\\anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow_core\\python\\eager\\function.py in _filtered_call(self, args, kwargs)\r\n   1609          if isinstance(t, (ops.Tensor,\r\n   1610                            resource_variable_ops.BaseResourceVariable))),\r\n-> 1611         self.captured_inputs)\r\n   1612 \r\n   1613   def _call_flat(self, args, captured_inputs, cancellation_manager=None):\r\n\r\n~\\anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow_core\\python\\eager\\function.py in _call_flat(self, args, captured_inputs, cancellation_manager)\r\n   1690       # No tape is watching; skip to running the function.\r\n   1691       return self._build_call_outputs(self._inference_function.call(\r\n-> 1692           ctx, args, cancellation_manager=cancellation_manager))\r\n   1693     forward_backward = self._select_forward_and_backward_functions(\r\n   1694         args,\r\n\r\n~\\anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow_core\\python\\eager\\function.py in call(self, ctx, args, cancellation_manager)\r\n    543               inputs=args,\r\n    544               attrs=(\"executor_type\", executor_type, \"config_proto\", config),\r\n--> 545               ctx=ctx)\r\n    546         else:\r\n    547           outputs = execute.execute_with_cancellation(\r\n\r\n~\\anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow_core\\python\\eager\\execute.py in quick_execute(op_name, num_outputs, inputs, attrs, ctx, name)\r\n     65     else:\r\n     66       message = e.message\r\n---> 67     six.raise_from(core._status_to_exception(e.code, message), None)\r\n     68   except TypeError as e:\r\n     69     keras_symbolic_tensors = [\r\n\r\n~\\anaconda3\\envs\\tensorflow\\lib\\site-packages\\six.py in raise_from(value, from_value)\r\n\r\nUnknownError:  Failed to get convolution algorithm. This is probably because cuDNN failed to initialize, so try looking to see if a warning log message was printed above.\r\n\t [[node model/conv2d/Conv2D (defined at <ipython-input-17-45130942bb4a>:6) ]] [Op:__inference_distributed_function_7653]\r\n\r\nFunction call stack:\r\ndistributed_function`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/14174", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/14174/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/14174/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/14174/events", "html_url": "https://github.com/keras-team/keras/issues/14174", "id": 666832557, "node_id": "MDU6SXNzdWU2NjY4MzI1NTc=", "number": 14174, "title": "keras.models.load_model can not work with Flask service? Keras==2.4.2, Flask==1.1.2", "user": {"login": "ChungNPH", "id": 51313469, "node_id": "MDQ6VXNlcjUxMzEzNDY5", "avatar_url": "https://avatars0.githubusercontent.com/u/51313469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChungNPH", "html_url": "https://github.com/ChungNPH", "followers_url": "https://api.github.com/users/ChungNPH/followers", "following_url": "https://api.github.com/users/ChungNPH/following{/other_user}", "gists_url": "https://api.github.com/users/ChungNPH/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChungNPH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChungNPH/subscriptions", "organizations_url": "https://api.github.com/users/ChungNPH/orgs", "repos_url": "https://api.github.com/users/ChungNPH/repos", "events_url": "https://api.github.com/users/ChungNPH/events{/privacy}", "received_events_url": "https://api.github.com/users/ChungNPH/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-28T07:24:04Z", "updated_at": "2020-07-28T10:12:45Z", "closed_at": "2020-07-28T10:12:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I builded an API to train keras model. It worked if i run normaly (not build as flask service). But when i build as service and call it did not response anything and just stay at keras.models.load_model.\r\n\r\nHere my code:\r\n\r\nserver.py\r\n\r\n```\r\nfrom predictor import Predictor\r\nfrom retrain import retrain\r\nfrom flask import Flask, request, render_template, jsonify, send_file\r\nimport os\r\nimport sys\r\nos.environ[\"CUDA_VISIBLE_DEVICES\"] = \"-1\"\r\n\r\napp = Flask(__name__)\r\n\r\nUPLOAD_FOLDER = 'data_image'\r\nfe = FeatureExtractor(f'models/cls-B0-v0.h5')\r\npredictor = Predictor(fe=fe)\r\n\r\n@app.route('/train', methods=['POST'])\r\ndef train():\r\n    scratch = request.form[\"from_scratch\"]\r\n    loss, acc, f1 = retrain(fe=fe, scratch=scratch)\r\n    return jsonify({'loss': loss, 'accuracy': f1})\r\nif __name__ == \"__main__\":\r\n    app.run(host=\"0.0.0.0\", port=7197, threaded=False, processes=5)\r\n```\r\npredictor.py\r\n\r\n```\r\nclass Predictor:\r\n    def __init__(self, fe):\r\n        with open(f'Labels/labels.json') as json_file:\r\n            self.labels = json.load(json_file)\r\n        if f'linear-v0.h5' not in os.listdir('models'):\r\n            retrain(fe=fe, scratch='False')\r\n        self.model = keras.models.load_model(f'models/linear-v0.h5')\r\n```\r\nretrain.py\r\n\r\n```\r\nif f'linear-v0.h5' not in os.listdir('models/temp'):\r\n    train_model = Sequential([Dense(number_of_class, input_shape=(1280,), activation='softmax')])\r\nelse:\r\n    train_model = keras.models.load_model(f'models/temp/linear-v0.h5')\r\n    if number_of_class != train_model.output.shape[1]:\r\n        train_model = Sequential([Dense(number_of_class, input_shape=(1280,), activation='softmax')])\r\n```\r\nI dont know why line \"train_model = keras.models.load_model(f'models/temp/linear-v0.h5')\" did not work, and if i commend \"predictor = Predictor(fe=fe)\", it worked. Mean that i can load only one model in my code. i have 2 \"linear-v0.h5\" on models and models/temp. Please tell me if u faced with this problem. Thank you so much. In addition, when i debug the problem at keras/engine/sequential.py file, line 399: model.add(layer)\r\n\r\n```\r\n@classmethod\r\n  def from_config(cls, config, custom_objects=None):\r\n    if 'name' in config:\r\n      name = config['name']\r\n      build_input_shape = config.get('build_input_shape')\r\n      layer_configs = config['layers']\r\n    else:\r\n      name = None\r\n      build_input_shape = None\r\n      layer_configs = config\r\n    model = cls(name=name)\r\n    for layer_config in layer_configs:\r\n      layer = layer_module.deserialize(layer_config,\r\n                                       custom_objects=custom_objects)\r\n      model.add(layer)\r\n    if (not model.inputs and build_input_shape and\r\n        isinstance(build_input_shape, (tuple, list))):\r\n      model.build(build_input_shape)\r\n    return model\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/14152", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/14152/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/14152/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/14152/events", "html_url": "https://github.com/keras-team/keras/issues/14152", "id": 653049403, "node_id": "MDU6SXNzdWU2NTMwNDk0MDM=", "number": 14152, "title": "Model.fit does not display train progress bar in tensorflow", "user": {"login": "HokyungLee", "id": 18568487, "node_id": "MDQ6VXNlcjE4NTY4NDg3", "avatar_url": "https://avatars3.githubusercontent.com/u/18568487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HokyungLee", "html_url": "https://github.com/HokyungLee", "followers_url": "https://api.github.com/users/HokyungLee/followers", "following_url": "https://api.github.com/users/HokyungLee/following{/other_user}", "gists_url": "https://api.github.com/users/HokyungLee/gists{/gist_id}", "starred_url": "https://api.github.com/users/HokyungLee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HokyungLee/subscriptions", "organizations_url": "https://api.github.com/users/HokyungLee/orgs", "repos_url": "https://api.github.com/users/HokyungLee/repos", "events_url": "https://api.github.com/users/HokyungLee/events{/privacy}", "received_events_url": "https://api.github.com/users/HokyungLee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}, {"id": 192940628, "node_id": "MDU6TGFiZWwxOTI5NDA2Mjg=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": "User is asking for help / asking an implementation question. Stackoverflow would be better suited."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-08T07:08:19Z", "updated_at": "2020-07-22T02:58:57Z", "closed_at": "2020-07-22T02:58:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "tensorflow version : 2.2.0\r\nusing only cpu\r\nthe size of train data : 23928\r\nbatch size : 32\r\n\r\n`checkpoint = ModelCheckpoint(filename, monitor='val_loss', verbose=1, save_best_only=True, mode='min')\r\nhist = model.fit(train_X, train_Y, epochs = 10, batch_size = 32, validation_data = (val_X, val_Y), callbacks = [checkpoint])`\r\n\r\n![image](https://user-images.githubusercontent.com/18568487/86888421-16502500-c135-11ea-9aef-938e688d4c04.png)\r\n\r\nin above figure\r\nworking just one batch size per one epoch and display not \"train on x samples\"\r\nadditional, not display validation result in train progress bar\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/14149", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/14149/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/14149/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/14149/events", "html_url": "https://github.com/keras-team/keras/issues/14149", "id": 650927068, "node_id": "MDU6SXNzdWU2NTA5MjcwNjg=", "number": 14149, "title": "Keras 2.4.0 or greater requires TensorFlow 2.2 or higher issue", "user": {"login": "TCIII", "id": 1240348, "node_id": "MDQ6VXNlcjEyNDAzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1240348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TCIII", "html_url": "https://github.com/TCIII", "followers_url": "https://api.github.com/users/TCIII/followers", "following_url": "https://api.github.com/users/TCIII/following{/other_user}", "gists_url": "https://api.github.com/users/TCIII/gists{/gist_id}", "starred_url": "https://api.github.com/users/TCIII/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TCIII/subscriptions", "organizations_url": "https://api.github.com/users/TCIII/orgs", "repos_url": "https://api.github.com/users/TCIII/repos", "events_url": "https://api.github.com/users/TCIII/events{/privacy}", "received_events_url": "https://api.github.com/users/TCIII/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-04T17:23:56Z", "updated_at": "2020-07-05T18:41:07Z", "closed_at": "2020-07-05T18:41:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi All,\r\n\r\nI am following this Pyimagesearch (https://www.pyimagesearch.com/2020/03/25/how-to-configure-your-nvidia-jetson-nano-for-computer-vision-and-deep-learning/) tutorial for installing TensorFlow 1.13.1 and Keras 2.3.0 on the Jetpack 4.2 OS on my Jetson Nano.\r\n\r\nBoth TensorFlow and Keras installed successfully, however when I attempt to import Keras with Python, I receive this message:  \"ImportError: Keras requires TensorFlow 2.2 or higher. Install TensorFlow via `pip install tensorflow`\".\r\n\r\nThe Pyimagesearch tutorial (March 25, 2020) claims that Keras will work with older (1.13.1) versions of TensorFlow, but that does not seem to be the case here.\r\n\r\nI have searched the IoT for a solution as Pyimagesearch has not answered my emails (yes, I am a Pyimagesearch customer) concerning this issue and have not found a satisfactory solution.\r\n\r\nCould anyone please provide a solution so that I can continue with my deep learning AI research?\r\n\r\nRegards,\r\nTCIII\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/14143", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/14143/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/14143/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/14143/events", "html_url": "https://github.com/keras-team/keras/issues/14143", "id": 646892311, "node_id": "MDU6SXNzdWU2NDY4OTIzMTE=", "number": 14143, "title": "There seems to be a difference between models trained with fit() and fit_generator()", "user": {"login": "fangqjj", "id": 28710222, "node_id": "MDQ6VXNlcjI4NzEwMjIy", "avatar_url": "https://avatars2.githubusercontent.com/u/28710222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fangqjj", "html_url": "https://github.com/fangqjj", "followers_url": "https://api.github.com/users/fangqjj/followers", "following_url": "https://api.github.com/users/fangqjj/following{/other_user}", "gists_url": "https://api.github.com/users/fangqjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/fangqjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fangqjj/subscriptions", "organizations_url": "https://api.github.com/users/fangqjj/orgs", "repos_url": "https://api.github.com/users/fangqjj/repos", "events_url": "https://api.github.com/users/fangqjj/events{/privacy}", "received_events_url": "https://api.github.com/users/fangqjj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-28T10:45:45Z", "updated_at": "2020-06-30T06:52:26Z", "closed_at": "2020-06-30T06:52:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "i use the fit() method to train my model and save it, then i load the trained model from disk to make predictions, everything is fine.\r\njust like, \r\n```\r\nmodel = ...\r\nfor chunk in pd.read_data_as_iter:\r\n    chunk = prepare(chunk)\r\n    model.fit(chunk, ...)\r\nfor chunk in pd.read_data_as_iter:\r\n    chunk = prepare(chunk)\r\n    model.predict(chunk, ...)\r\n```\r\nor\r\n```\r\nmodel = load_model(...)\r\nfor chunk in pd.read_data_as_iter:\r\n    chunk = prepare(chunk)\r\n    model.predict(chunk, ...)\r\n```\r\nthen i use the fit_generator() method, it also works fine.\r\n```\r\ndef generator():\r\n    ...\r\nmodel = ...\r\nmodel.fit(generator(), ...)\r\nmodel.predict(generator(), ...)\r\n```\r\nbut when i load the trained model, it performs like the model has been never trained before.\r\n```\r\n# load the model trained with fit_generator() or fit()\r\nmodel = load_model(...)\r\nmodel.predict(generator(), ...)\r\n```\r\nalso\r\n```\r\n# load the model trained with fit_generator()\r\nmodel = load_model(...)\r\nfor chunk in pd.read_data_as_iter:\r\n    chunk = prepare(chunk)\r\n    model.predict(chunk, ...)\r\n```\r\ni dont know whether there is something wrong with fit_generator() or predict_generator(), or save/load", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/14135", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/14135/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/14135/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/14135/events", "html_url": "https://github.com/keras-team/keras/issues/14135", "id": 644645632, "node_id": "MDU6SXNzdWU2NDQ2NDU2MzI=", "number": 14135, "title": "TypeError: fit() got an unexpected keyword argument 'nb_epoch'", "user": {"login": "AlexXx-Wu", "id": 62045887, "node_id": "MDQ6VXNlcjYyMDQ1ODg3", "avatar_url": "https://avatars3.githubusercontent.com/u/62045887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexXx-Wu", "html_url": "https://github.com/AlexXx-Wu", "followers_url": "https://api.github.com/users/AlexXx-Wu/followers", "following_url": "https://api.github.com/users/AlexXx-Wu/following{/other_user}", "gists_url": "https://api.github.com/users/AlexXx-Wu/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexXx-Wu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexXx-Wu/subscriptions", "organizations_url": "https://api.github.com/users/AlexXx-Wu/orgs", "repos_url": "https://api.github.com/users/AlexXx-Wu/repos", "events_url": "https://api.github.com/users/AlexXx-Wu/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexXx-Wu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-24T14:08:46Z", "updated_at": "2020-06-25T04:09:02Z", "closed_at": "2020-06-24T22:25:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm training the model using `fit` with parameter `nb_epoch`. However, it shows the error:\r\n`---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-93-8b0da1fd2846> in <module>\r\n      1 #fit model\r\n----> 2 model.fit(X_train, Y_train, batch_size=32, nb_epoch=10, verbose=1)\r\n\r\n/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow/python/keras/engine/training.py in _method_wrapper(self, *args, **kwargs)\r\n     64   def _method_wrapper(self, *args, **kwargs):\r\n     65     if not self._in_multi_worker_mode():  # pylint: disable=protected-access\r\n---> 66       return method(self, *args, **kwargs)\r\n     67 \r\n     68     # Running inside `run_distribute_coordinator` already.\r\n\r\nTypeError: fit() got an unexpected keyword argument 'nb_epoch'`\r\nI wanna know how to fix it?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/14134", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/14134/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/14134/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/14134/events", "html_url": "https://github.com/keras-team/keras/issues/14134", "id": 644606261, "node_id": "MDU6SXNzdWU2NDQ2MDYyNjE=", "number": 14134, "title": "Custom callbacks are broken with Keras 2.4.Z wheels", "user": {"login": "Lothiraldan", "id": 243665, "node_id": "MDQ6VXNlcjI0MzY2NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/243665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lothiraldan", "html_url": "https://github.com/Lothiraldan", "followers_url": "https://api.github.com/users/Lothiraldan/followers", "following_url": "https://api.github.com/users/Lothiraldan/following{/other_user}", "gists_url": "https://api.github.com/users/Lothiraldan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lothiraldan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lothiraldan/subscriptions", "organizations_url": "https://api.github.com/users/Lothiraldan/orgs", "repos_url": "https://api.github.com/users/Lothiraldan/repos", "events_url": "https://api.github.com/users/Lothiraldan/events{/privacy}", "received_events_url": "https://api.github.com/users/Lothiraldan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-24T13:15:40Z", "updated_at": "2020-06-25T08:02:23Z", "closed_at": "2020-06-24T22:42:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "While upgrading to Keras 2.4.Z, I got a weird Traceback when using custom callbacks:\r\n\r\n```\r\nUsing TensorFlow backend.\r\nCallback defined in keras.callbacks.callbacks\r\n60000 train samples\r\n10000 test samples\r\n2020-06-24 15:06:02.820522: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory\r\n2020-06-24 15:06:02.820546: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)\r\nTraceback (most recent call last):\r\n  File \"keras_example.py\", line 74, in <module>\r\n    main()\r\n  File \"keras_example.py\", line 41, in main\r\n    train(x_train, y_train, x_test, y_test)\r\n  File \"keras_example.py\", line 68, in train\r\n    x_train, y_train, batch_size=120, epochs=10, validation_data=(x_test, y_test), callbacks=[MyCallback()]\r\n  File \".../python3.7/site-packages/tensorflow/python/keras/engine/training.py\", line 66, in _method_wrapper\r\n    return method(self, *args, **kwargs)\r\n  File \".../python3.7/site-packages/tensorflow/python/keras/engine/training.py\", line 826, in fit\r\n    steps=data_handler.inferred_steps)\r\n  File \".../python3.7/site-packages/tensorflow/python/keras/callbacks.py\", line 231, in __init__\r\n    cb._implements_train_batch_hooks() for cb in self.callbacks)\r\n  File \".../python3.7/site-packages/tensorflow/python/keras/callbacks.py\", line 231, in <genexpr>\r\n    cb._implements_train_batch_hooks() for cb in self.callbacks)\r\nAttributeError: 'MyCallback' object has no attribute '_implements_train_batch_hooks'\r\n```\r\n\r\nI'm using latest tensorflow version, 2.22.0.\r\n\r\nI digged a bit and found that it's not happening with latest Keras version installed from sdist. I installed it using the following pip command: `pip install --no-binary \":all:\" -U keras`.\r\n\r\n```\r\nCallback defined in tensorflow.python.keras.callbacks\r\n60000 train samples\r\n10000 test samples\r\n2020-06-24 15:08:15.681460: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory\r\n2020-06-24 15:08:15.681477: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)\r\nEpoch 1/10\r\n```\r\n\r\nIt seems that the Keras wheel also includes a `callbacks` package that is imported in place of the new module https://github.com/keras-team/keras/blob/master/keras/callbacks.py.\r\n\r\n```\r\n$> unzip -l Keras-2.4.2-py2.py3-none-any.whl\r\n       41  06-17-2020 23:03   keras/callbacks.py\r\n      714  09-17-2019 17:12   keras/callbacks/__init__.py\r\n    45641  10-07-2019 20:07   keras/callbacks/callbacks.py\r\n    16934  09-17-2019 17:12   keras/callbacks/tensorboard_v1.py\r\n     5447  09-17-2019 17:12   keras/callbacks/tensorboard_v2.py\r\n```\r\n\r\nThis callbacks package doesn't seems present in the sdist package:\r\n\r\n```\r\n$> tar -tvf Keras-2.4.2.tar.gz | grep callbacks\r\n-rw-r--r-- fchollet/primarygroup   41 2020-06-18 01:03 Keras-2.4.2/keras/callbacks.py\r\ndrwxr-xr-x root/primarygroup         0 2020-06-19 06:32 Keras-2.4.2/tests/keras/callbacks/\r\n-rw-r--r-- fchollet/primarygroup 35586 2020-06-18 01:03 Keras-2.4.2/tests/keras/callbacks/callbacks_test.py\r\n-rw-r--r-- fchollet/primarygroup 10186 2020-06-18 01:03 Keras-2.4.2/tests/keras/callbacks/tensorboard_test.py\r\ndrwxr-xr-x root/primarygroup          0 2020-06-19 06:32 Keras-2.4.2/docs/site/callbacks/\r\n-rw-r--r-- fchollet/primarygroup  38830 2019-09-18 00:22 Keras-2.4.2/docs/site/callbacks/index.html\r\n-rw-r--r-- fchollet/primarygroup   18342 2019-09-18 00:17 Keras-2.4.2/docs/sources/callbacks.md\r\n-rw-r--r-- fchollet/primarygroup    2234 2019-08-22 18:24 Keras-2.4.2/docs/templates/callbacks.md\r\n```\r\n\r\nFor the users that might be impacted, you can add replace the keras line in your requirements.txt file by:\r\n```\r\nkeras --no-binary=keras\r\n```\r\n\r\nIt also works with a version specifier:\r\n\r\n```\r\nkeras>2.4.0 --no-binary=keras\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/14133", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/14133/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/14133/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/14133/events", "html_url": "https://github.com/keras-team/keras/issues/14133", "id": 644372465, "node_id": "MDU6SXNzdWU2NDQzNzI0NjU=", "number": 14133, "title": "What is the \"PR\"'s meaning?What's the full name of it?", "user": {"login": "yang-gis", "id": 49702076, "node_id": "MDQ6VXNlcjQ5NzAyMDc2", "avatar_url": "https://avatars2.githubusercontent.com/u/49702076?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yang-gis", "html_url": "https://github.com/yang-gis", "followers_url": "https://api.github.com/users/yang-gis/followers", "following_url": "https://api.github.com/users/yang-gis/following{/other_user}", "gists_url": "https://api.github.com/users/yang-gis/gists{/gist_id}", "starred_url": "https://api.github.com/users/yang-gis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yang-gis/subscriptions", "organizations_url": "https://api.github.com/users/yang-gis/orgs", "repos_url": "https://api.github.com/users/yang-gis/repos", "events_url": "https://api.github.com/users/yang-gis/events{/privacy}", "received_events_url": "https://api.github.com/users/yang-gis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-24T07:03:34Z", "updated_at": "2020-06-24T22:43:20Z", "closed_at": "2020-06-24T22:43:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Important note:** the development of Keras is currently taking place at [`github.com/tensorflow/tensorflow`](https://github.com/tensorflow/tensorflow). Please file your bug report by creating a new issue in the TensorFlow repository.\r\n\r\nPlease note that multi-backend Keras development has been discontinued. Do not report issues about multi-backend Keras (Keras 2.3.1 and lower), only report issues about the TensorFlow implementation of Keras (tf.keras).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/14132", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/14132/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/14132/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/14132/events", "html_url": "https://github.com/keras-team/keras/issues/14132", "id": 642607058, "node_id": "MDU6SXNzdWU2NDI2MDcwNTg=", "number": 14132, "title": "tf.keras.preprocessing.image_dataset_from_directory does not work in Keras 2.4.2", "user": {"login": "garikhgh", "id": 36856954, "node_id": "MDQ6VXNlcjM2ODU2OTU0", "avatar_url": "https://avatars3.githubusercontent.com/u/36856954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garikhgh", "html_url": "https://github.com/garikhgh", "followers_url": "https://api.github.com/users/garikhgh/followers", "following_url": "https://api.github.com/users/garikhgh/following{/other_user}", "gists_url": "https://api.github.com/users/garikhgh/gists{/gist_id}", "starred_url": "https://api.github.com/users/garikhgh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garikhgh/subscriptions", "organizations_url": "https://api.github.com/users/garikhgh/orgs", "repos_url": "https://api.github.com/users/garikhgh/repos", "events_url": "https://api.github.com/users/garikhgh/events{/privacy}", "received_events_url": "https://api.github.com/users/garikhgh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-21T17:35:10Z", "updated_at": "2020-06-21T19:58:20Z", "closed_at": "2020-06-21T19:58:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, could you explain.\r\n\r\n\r\nthis does not work\r\n\r\ntf.keras.preprocessing.image_dataset_from_directory(\r\n    directory,\r\n    labels=\"inferred\",\r\n    label_mode=\"int\",\r\n    class_names=None,\r\n    color_mode=\"rgb\",\r\n    batch_size=32,\r\n    image_size=(256, 256),\r\n    shuffle=True,\r\n    seed=None,\r\n    validation_split=None,\r\n    subset=None,\r\n    interpolation=\"bilinear\",\r\n    follow_links=False,\r\n)\r\n\r\nthis is taken from keras webpage", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/14129", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/14129/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/14129/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/14129/events", "html_url": "https://github.com/keras-team/keras/issues/14129", "id": 641469567, "node_id": "MDU6SXNzdWU2NDE0Njk1Njc=", "number": 14129, "title": "Keras 2.4 release adds dependency on tensorflow>=2.2.0, which breaks earlier installs", "user": {"login": "cliffwoolley", "id": 9682398, "node_id": "MDQ6VXNlcjk2ODIzOTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/9682398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cliffwoolley", "html_url": "https://github.com/cliffwoolley", "followers_url": "https://api.github.com/users/cliffwoolley/followers", "following_url": "https://api.github.com/users/cliffwoolley/following{/other_user}", "gists_url": "https://api.github.com/users/cliffwoolley/gists{/gist_id}", "starred_url": "https://api.github.com/users/cliffwoolley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cliffwoolley/subscriptions", "organizations_url": "https://api.github.com/users/cliffwoolley/orgs", "repos_url": "https://api.github.com/users/cliffwoolley/repos", "events_url": "https://api.github.com/users/cliffwoolley/events{/privacy}", "received_events_url": "https://api.github.com/users/cliffwoolley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-06-18T18:41:55Z", "updated_at": "2020-08-13T12:53:10Z", "closed_at": "2020-06-19T22:52:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Yesterday, June 17, Keras 2.4.0 was released.  This is the first numbered release since last October (which was 2.3.1).\r\n\r\nKeras 2.4 now [brings in tensorflow>=2.2 as a dependency](https://github.com/keras-team/keras/blame/master/setup.py#L35) (starting from https://github.com/keras-team/keras/pull/14121 , which was merged yesterday).  It looks like this is because Keras 2.4 basically now redirects to tf.keras.\r\n\r\nThe problem, however, is one of compatibility: any user workflow that had `pip install keras` or packages that have `keras` in their requirements.txt/setup.py (without pinning to `'keras<2.4'` or to some specific earlier version, at least) will now end up replacing existing TensorFlow 1.15 or TensorFlow 2.1 installations (which are the LTS versions as far as I'm aware) with TF 2.2.\r\n\r\nI'm not quite sure what to suggest should be done as a corrective action at this point; even if this had been numbered as for example, \"Keras 3.0\" then still packages that don't pin to a particular maximum Keras version would have fallen into this trap.\r\n\r\nAlready some NVIDIA customers have started hitting this, so I wanted to open the discussion, at least.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/14128", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/14128/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/14128/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/14128/events", "html_url": "https://github.com/keras-team/keras/issues/14128", "id": 641157632, "node_id": "MDU6SXNzdWU2NDExNTc2MzI=", "number": 14128, "title": "Latest Keras version is not compatible with Python 2.7 anymore", "user": {"login": "Lothiraldan", "id": 243665, "node_id": "MDQ6VXNlcjI0MzY2NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/243665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lothiraldan", "html_url": "https://github.com/Lothiraldan", "followers_url": "https://api.github.com/users/Lothiraldan/followers", "following_url": "https://api.github.com/users/Lothiraldan/following{/other_user}", "gists_url": "https://api.github.com/users/Lothiraldan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lothiraldan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lothiraldan/subscriptions", "organizations_url": "https://api.github.com/users/Lothiraldan/orgs", "repos_url": "https://api.github.com/users/Lothiraldan/repos", "events_url": "https://api.github.com/users/Lothiraldan/events{/privacy}", "received_events_url": "https://api.github.com/users/Lothiraldan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}, {"id": 192940623, "node_id": "MDU6TGFiZWwxOTI5NDA2MjM=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-18T12:12:59Z", "updated_at": "2020-06-24T13:18:11Z", "closed_at": "2020-06-22T18:12:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Latest Keras version requires tensorflow >= 2.2.0 but tensorflow 2.2.0 only has wheels for Python 3.5+. This means that trying to install keras in Python 2.7 or Python 3.4 leads to the following traceback:\r\n\r\n```\r\nDEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support\r\nCollecting keras\r\n  Using cached Keras-2.4.0-py2.py3-none-any.whl (170 kB)\r\nCollecting scipy>=0.14\r\n  Using cached scipy-1.2.3-cp27-cp27mu-manylinux1_x86_64.whl (24.8 MB)\r\nProcessing /home/lothiraldan/.cache/pip/wheels/d1/d5/a0/3c27cdc8b0209c5fc1385afeee936cf8a71e13d885388b4be2/PyYAML-5.3.1-cp27-cp27mu-linux_x86_64.whl\r\nCollecting numpy>=1.9.1\r\n  Using cached numpy-1.16.6-cp27-cp27mu-manylinux1_x86_64.whl (17.0 MB)\r\nERROR: Could not find a version that satisfies the requirement tensorflow>=2.2.0 (from keras) (from versions: 0.12.0rc0, 0.12.0rc1, 0.12.0, 0.12.1, 1.0.0, 1.0.1, 1.1.0rc0, 1.1.0rc1, 1.1.0rc2, 1.1.0, 1.2.0rc0, 1.2.0rc1, 1.2.0rc2, 1.2.0, 1.2.1, 1.3.0rc0, 1.3.0rc1, 1.3.0rc2, 1.3.0, 1.4.0rc0, 1.4.0rc1, 1.4.0, 1.4.1, 1.5.0rc0, 1.5.0rc1, 1.5.0, 1.5.1, 1.6.0rc0, 1.6.0rc1, 1.6.0, 1.7.0rc0, 1.7.0rc1, 1.7.0, 1.7.1, 1.8.0rc0, 1.8.0rc1, 1.8.0, 1.9.0rc0, 1.9.0rc1, 1.9.0rc2, 1.9.0, 1.10.0rc0, 1.10.0rc1, 1.10.0, 1.10.1, 1.11.0rc0, 1.11.0rc1, 1.11.0rc2, 1.11.0, 1.12.0rc0, 1.12.0rc1, 1.12.0rc2, 1.12.0, 1.12.2, 1.12.3, 1.13.0rc0, 1.13.0rc1, 1.13.0rc2, 1.13.1, 1.13.2, 1.14.0rc0, 1.14.0rc1, 1.14.0, 1.15.0rc0, 1.15.0rc1, 1.15.0rc2, 1.15.0rc3, 1.15.0, 2.0.0a0, 2.0.0b0, 2.0.0b1, 2.0.0rc0, 2.0.0rc1, 2.0.0rc2, 2.0.0, 2.1.0rc0, 2.1.0rc1, 2.1.0rc2, 2.1.0)\r\nERROR: No matching distribution found for tensorflow>=2.2.0 (from keras)\r\n```\r\n\r\nIf that was planned, I would suggest to update the setup.py file with the correct https://packaging.python.org/guides/distributing-packages-using-setuptools/#python-requires so pip can takes Keras 2.3.1 on incompatible Python versions.\r\n\r\nI would also recommend yanking the release 2.4.0 as pip will try to get the 2.4.0 release if a 2.4.1 is released with the correct metadata.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/14101", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/14101/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/14101/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/14101/events", "html_url": "https://github.com/keras-team/keras/issues/14101", "id": 633189683, "node_id": "MDU6SXNzdWU2MzMxODk2ODM=", "number": 14101, "title": "While installing tensorflow background in the backend in ubuntu should I install it in virtual enviornment or in main python files?", "user": {"login": "siddharth87", "id": 52824410, "node_id": "MDQ6VXNlcjUyODI0NDEw", "avatar_url": "https://avatars3.githubusercontent.com/u/52824410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siddharth87", "html_url": "https://github.com/siddharth87", "followers_url": "https://api.github.com/users/siddharth87/followers", "following_url": "https://api.github.com/users/siddharth87/following{/other_user}", "gists_url": "https://api.github.com/users/siddharth87/gists{/gist_id}", "starred_url": "https://api.github.com/users/siddharth87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siddharth87/subscriptions", "organizations_url": "https://api.github.com/users/siddharth87/orgs", "repos_url": "https://api.github.com/users/siddharth87/repos", "events_url": "https://api.github.com/users/siddharth87/events{/privacy}", "received_events_url": "https://api.github.com/users/siddharth87/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-07T08:26:35Z", "updated_at": "2020-06-07T08:27:32Z", "closed_at": "2020-06-07T08:27:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "<em>Please make sure that this is a Bug or a Feature Request and provide all applicable information asked by the template.\r\nIf your issue is an **implementation question**, please ask your question on [StackOverflow](http://stackoverflow.com/questions/tagged/keras) or [on the Keras Slack channel](https://keras-slack-autojoin.herokuapp.com/) instead of opening a GitHub issue.</em>  \r\n\r\n**System information**  \r\n- Have I written custom code (as opposed to using example directory):  \r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  \r\n- TensorFlow backend (yes / no):  \r\n- TensorFlow version:  \r\n- Keras version:  \r\n- Python version:  \r\n- CUDA/cuDNN version:  \r\n- GPU model and memory:  \r\n\r\nYou can obtain the TensorFlow version with:  \r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"  \r\nYou can obtain the Keras version with:  \r\npython -c 'import keras as k; print(k.__version__)'  \r\n\r\n**Describe the current behavior**  \r\n\r\n**Describe the expected behavior**  \r\n\r\n**Code to reproduce the issue**  \r\nProvide a reproducible test case that is the bare minimum necessary to generate the problem.  \r\n\r\n**Other info / logs**  \r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.  \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/14092", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/14092/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/14092/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/14092/events", "html_url": "https://github.com/keras-team/keras/issues/14092", "id": 630859789, "node_id": "MDU6SXNzdWU2MzA4NTk3ODk=", "number": 14092, "title": "Are there any source than I can use to detect handwritten digit on webcam?", "user": {"login": "MuongKimhong", "id": 57164237, "node_id": "MDQ6VXNlcjU3MTY0MjM3", "avatar_url": "https://avatars2.githubusercontent.com/u/57164237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MuongKimhong", "html_url": "https://github.com/MuongKimhong", "followers_url": "https://api.github.com/users/MuongKimhong/followers", "following_url": "https://api.github.com/users/MuongKimhong/following{/other_user}", "gists_url": "https://api.github.com/users/MuongKimhong/gists{/gist_id}", "starred_url": "https://api.github.com/users/MuongKimhong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MuongKimhong/subscriptions", "organizations_url": "https://api.github.com/users/MuongKimhong/orgs", "repos_url": "https://api.github.com/users/MuongKimhong/repos", "events_url": "https://api.github.com/users/MuongKimhong/events{/privacy}", "received_events_url": "https://api.github.com/users/MuongKimhong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 192940628, "node_id": "MDU6TGFiZWwxOTI5NDA2Mjg=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": "User is asking for help / asking an implementation question. Stackoverflow would be better suited."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-04T14:09:55Z", "updated_at": "2020-06-27T07:08:29Z", "closed_at": "2020-06-27T07:08:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello everyone! I have a question. Are there any source that I can use for handwritten digit detection on webcam? I already trained the model with mnist dataset but now I want to apply that model into real time detection example like it will draw the bounding box around the digit that will be written by my hand on paper.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/14089", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/14089/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/14089/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/14089/events", "html_url": "https://github.com/keras-team/keras/issues/14089", "id": 630482620, "node_id": "MDU6SXNzdWU2MzA0ODI2MjA=", "number": 14089, "title": "Why I can't load mnist dataset using load_data() method?", "user": {"login": "MuongKimhong", "id": 57164237, "node_id": "MDQ6VXNlcjU3MTY0MjM3", "avatar_url": "https://avatars2.githubusercontent.com/u/57164237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MuongKimhong", "html_url": "https://github.com/MuongKimhong", "followers_url": "https://api.github.com/users/MuongKimhong/followers", "following_url": "https://api.github.com/users/MuongKimhong/following{/other_user}", "gists_url": "https://api.github.com/users/MuongKimhong/gists{/gist_id}", "starred_url": "https://api.github.com/users/MuongKimhong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MuongKimhong/subscriptions", "organizations_url": "https://api.github.com/users/MuongKimhong/orgs", "repos_url": "https://api.github.com/users/MuongKimhong/repos", "events_url": "https://api.github.com/users/MuongKimhong/events{/privacy}", "received_events_url": "https://api.github.com/users/MuongKimhong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-04T03:27:43Z", "updated_at": "2020-06-04T13:53:40Z", "closed_at": "2020-06-04T13:53:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I used this line of code to load mnist dataset and I got it from tensorflow documentation\r\n`(trainX, trainY), (testX, testY) = load_data(path='mnist.npz')`\r\n\r\nBut when I executed the file it gave me an error on  certificate \r\nhere is the error i got\r\n`Traceback (most recent call last):\r\n  File \"mnist_degit.py\", line 18, in <module>\r\n    (trainX, trainY), (testX, testY) = load_data(path='mnist.npz')\r\n  File \"/Users/muongkimhong/Desktop/ComputerVision_project/DigitRecognize/digit_recognize_env/lib/python3.7/site-packages/tensorflow/python/keras/datasets/mnist.py\", line 62, in load_data\r\n    '731c5ac602752760c8e48fbffcf8c3b850d9dc2a2aedcf2cc48468fc17b673d1')\r\n  File \"/Users/muongkimhong/Desktop/ComputerVision_project/DigitRecognize/digit_recognize_env/lib/python3.7/site-packages/tensorflow/python/keras/utils/data_utils.py\", line 267, in get_file\r\n    raise Exception(error_msg.format(origin, e.errno, e.reason))\r\nException: URL fetch failure on https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz: None -- [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1076)`\r\n\r\nPlease help  Thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/14081", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/14081/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/14081/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/14081/events", "html_url": "https://github.com/keras-team/keras/issues/14081", "id": 628413558, "node_id": "MDU6SXNzdWU2Mjg0MTM1NTg=", "number": 14081, "title": "I got new error when tried the given code ", "user": {"login": "sulhicader", "id": 24394967, "node_id": "MDQ6VXNlcjI0Mzk0OTY3", "avatar_url": "https://avatars1.githubusercontent.com/u/24394967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sulhicader", "html_url": "https://github.com/sulhicader", "followers_url": "https://api.github.com/users/sulhicader/followers", "following_url": "https://api.github.com/users/sulhicader/following{/other_user}", "gists_url": "https://api.github.com/users/sulhicader/gists{/gist_id}", "starred_url": "https://api.github.com/users/sulhicader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sulhicader/subscriptions", "organizations_url": "https://api.github.com/users/sulhicader/orgs", "repos_url": "https://api.github.com/users/sulhicader/repos", "events_url": "https://api.github.com/users/sulhicader/events{/privacy}", "received_events_url": "https://api.github.com/users/sulhicader/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-01T12:48:34Z", "updated_at": "2020-06-01T12:48:54Z", "closed_at": "2020-06-01T12:48:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried the above solution. then i got  a new error.\r\n\r\ntensorflow.python.framework.errors_impl.FailedPreconditionError: Error while reading resource variable dense_2/bias from Container: localhost. This could mean that the variable was uninitialized. Not found: Container localhost does not exist. (Could not find resource: localhost/dense_2/bias)\r\n\t [[{{node dense_2/BiasAdd/ReadVariableOp}}]]", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/14072", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/14072/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/14072/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/14072/events", "html_url": "https://github.com/keras-team/keras/issues/14072", "id": 626425528, "node_id": "MDU6SXNzdWU2MjY0MjU1Mjg=", "number": 14072, "title": "Could I Update pre-trained model or not ?", "user": {"login": "PonraJS-21", "id": 57620618, "node_id": "MDQ6VXNlcjU3NjIwNjE4", "avatar_url": "https://avatars0.githubusercontent.com/u/57620618?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PonraJS-21", "html_url": "https://github.com/PonraJS-21", "followers_url": "https://api.github.com/users/PonraJS-21/followers", "following_url": "https://api.github.com/users/PonraJS-21/following{/other_user}", "gists_url": "https://api.github.com/users/PonraJS-21/gists{/gist_id}", "starred_url": "https://api.github.com/users/PonraJS-21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PonraJS-21/subscriptions", "organizations_url": "https://api.github.com/users/PonraJS-21/orgs", "repos_url": "https://api.github.com/users/PonraJS-21/repos", "events_url": "https://api.github.com/users/PonraJS-21/events{/privacy}", "received_events_url": "https://api.github.com/users/PonraJS-21/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 192940628, "node_id": "MDU6TGFiZWwxOTI5NDA2Mjg=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": "User is asking for help / asking an implementation question. Stackoverflow would be better suited."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-28T11:13:35Z", "updated_at": "2020-06-02T06:33:56Z", "closed_at": "2020-06-02T04:50:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to update the pre-trained model in keras, it resetting the model old weights and fitting the new model weights.\r\n\r\nCode: \r\n\r\n```\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\n\r\n\r\n# keras imports for the dataset and building our neural network\r\nfrom keras.datasets import mnist\r\nfrom keras.models import Sequential\r\nfrom keras.layers import Conv2D, Flatten, Dense, Dropout, MaxPooling2D\r\nfrom keras.utils import to_categorical\r\nfrom keras.models import load_model\r\n\r\n\r\n# In[2]:\r\n\r\n\r\n(X_train, y_train), (X_test, y_test) = mnist.load_data()\r\n\r\n\r\n# In[27]:\r\n\r\n\r\ndef create_dataset(mnist_img_num, tot_img = 10):\r\n    x_arr = []\r\n    y_arr = []\r\n    for i in range(len(X_test)):\r\n        if(y_train[i] == mnist_img_num[0] or y_train[i] == mnist_img_num[1]):\r\n            x_arr.append(X_train[i])\r\n            y_arr.append(y_train[i])\r\n            tot_img-=1\r\n        if(tot_img == 0):\r\n            break\r\n    return np.asarray(x_arr), np.asarray(y_arr)\r\n\r\n\r\n# ## Initially Training a model with 1 and 2 handwritten digits\r\n\r\nx, y = create_dataset([1 , 2], 100)\r\n\r\n\r\n# In[6]:\r\n\r\n\r\ny = to_categorical(y)\r\n\r\n\r\n# In[7]:\r\n\r\n\r\nfor i in range(1):\r\n    plt.imshow(x[i])\r\n    plt.show()\r\n\r\n\r\n# In[8]:\r\n\r\n\r\nmodel = Sequential()\r\nmodel.add(Conv2D(32, (3, 3), activation='relu', input_shape=(28, 28, 1)))\r\nmodel.add(MaxPooling2D((2, 2)))\r\nmodel.add(Conv2D(64, (3, 3), activation='relu'))\r\nmodel.add(MaxPooling2D((2, 2)))\r\nmodel.add(Conv2D(64, (3, 3), activation='relu'))\r\nmodel.add(Flatten())\r\nmodel.add(Dense(64, activation='relu'))\r\nmodel.add(Dense(3, activation='softmax'))\r\n\r\n\r\n# In[9]:\r\n\r\n\r\nmodel.compile(optimizer='rmsprop', loss='categorical_crossentropy', metrics=['accuracy'])\r\n\r\nx = x.reshape((len(y), 28, 28, 1))\r\n\r\n\r\nhistory = model.fit(x,y, epochs=25)\r\n\r\n\r\nmodel.save('partially_trained.h5')\r\n\r\n\r\n# ## Prediction for 2\r\n\r\n# In[14]:\r\n\r\n\r\ntest = np.expand_dims(x[5], axis=0)\r\nprint('Prediction: ',np.argmax(model.predict(test)[0]))\r\nprint('Actual: ', np.argmax(y[5]))\r\nprint(y[5])\r\n\r\n\r\n# ## Prediction for 1\r\n\r\n# In[15]:\r\n\r\n\r\ntest = np.expand_dims(x[0], axis=0)\r\nprint('Prediction: ',np.argmax(model.predict(test)[0]))\r\nprint('Actual: ',np.argmax(y[0]))\r\nprint(y[0])\r\n\r\n\r\n# ## Deleting old model and loading new model\r\n\r\n# In[16]:\r\n\r\n\r\ndel model\r\nloaded_model = load_model('partially_trained.h5', compile=False)\r\n\r\n\r\n# # Re-Training with 0 and 2 digits\r\n\r\n# In[17]:\r\n\r\n\r\nx, y = create_dataset([0 , 2], 100)\r\ny = to_categorical(y)\r\nx = x.reshape((len(y), 28, 28, 1))\r\nprint(x.shape)\r\n\r\n\r\n# In[19]:\r\n\r\n\r\nloaded_model.compile(optimizer='rmsprop', loss='categorical_crossentropy', metrics=['accuracy'])\r\n\r\n\r\n# In[20]:\r\n\r\n\r\nloaded_model.fit(x,y, epochs=25)\r\n\r\n\r\n# ## Prediction for 0\r\n\r\n# In[28]:\r\n\r\n\r\ntestx, testy = create_dataset([1 , 0], 5)\r\nprint(testy)\r\ntestx = testx.reshape((len(testy), 28, 28, 1))\r\nprint(testx.shape)\r\ntest = np.expand_dims(testx[0], axis=0)\r\nprint(test.shape)\r\nprint('predicted: ', np.argmax(loaded_model.predict(test)))\r\nprint('actual: ',testy[0])\r\n\r\n\r\n# In[29]:\r\n\r\n\r\nplt.imshow(test[0].reshape((28,28)))\r\n# plt.suptitle(y[i])\r\nplt.show()\r\n\r\n\r\n# ## Prediction for 1\r\n\r\n# In[30]:\r\n\r\n\r\ntestx, testy = create_dataset([1 , 2], 5)\r\nprint(testy)\r\ntestx = testx.reshape((len(testy), 28, 28, 1))\r\nprint(testx.shape)\r\ntest = np.expand_dims(testx[0], axis=0)\r\nprint(test.shape)\r\nprint('predicted: ', np.argmax(loaded_model.predict(test)))\r\nprint('actual: ',testy[0])\r\n\r\n\r\n# In[31]:\r\n\r\n\r\nplt.imshow(test[0].reshape((28,28)))\r\n# plt.suptitle(y[i])\r\nplt.show()\r\n\r\n\r\n# ## Prediction for 2\r\n\r\n# In[32]:\r\n\r\n\r\ntestx, testy = create_dataset([1 , 2], 5)\r\nprint(testy)\r\ntestx = testx.reshape((len(testy), 28, 28, 1))\r\nprint(testx.shape)\r\ntest = np.expand_dims(testx[1], axis=0)\r\nprint(test.shape)\r\nprint('predicted: ', np.argmax(loaded_model.predict(test)))\r\nprint('actual: ',testy[1])\r\n\r\nplt.imshow(test[0].reshape((28,28)))\r\nplt.show()\r\n\r\n```\r\n\r\nwhen I run the above code the results are:\r\n\r\n[0 1 1 1 1]\r\n(5, 28, 28, 1)\r\n(1, 28, 28, 1)\r\npredicted:  0\r\nactual:  0\r\n\r\n[1 2 1 1 1]\r\n(5, 28, 28, 1)\r\n(1, 28, 28, 1)\r\npredicted:  2\r\nactual:  1\r\n\r\n[1 2 1 1 1]\r\n(5, 28, 28, 1)\r\n(1, 28, 28, 1)\r\npredicted:  2\r\nactual:  2\r\n\r\nPrediction for 1 is telling 2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/14068", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/14068/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/14068/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/14068/events", "html_url": "https://github.com/keras-team/keras/issues/14068", "id": 625363134, "node_id": "MDU6SXNzdWU2MjUzNjMxMzQ=", "number": 14068, "title": "Update custom layer arguments during training and testing with callbacks in Keras ", "user": {"login": "KTTrev", "id": 47731576, "node_id": "MDQ6VXNlcjQ3NzMxNTc2", "avatar_url": "https://avatars1.githubusercontent.com/u/47731576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KTTrev", "html_url": "https://github.com/KTTrev", "followers_url": "https://api.github.com/users/KTTrev/followers", "following_url": "https://api.github.com/users/KTTrev/following{/other_user}", "gists_url": "https://api.github.com/users/KTTrev/gists{/gist_id}", "starred_url": "https://api.github.com/users/KTTrev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KTTrev/subscriptions", "organizations_url": "https://api.github.com/users/KTTrev/orgs", "repos_url": "https://api.github.com/users/KTTrev/repos", "events_url": "https://api.github.com/users/KTTrev/events{/privacy}", "received_events_url": "https://api.github.com/users/KTTrev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-27T04:17:07Z", "updated_at": "2020-06-23T05:15:11Z", "closed_at": "2020-06-23T05:15:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've implemented a CNN in which I've added a customized layer. However, this layer contains other data that need to be changed as the images fed in the network change. That's why I need to update these data during training and testing. I've tried to use Callbacks, but I don't know how to update a layer with it. Please, do you have any solution for that? Thanks in advance for your help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/14063", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/14063/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/14063/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/14063/events", "html_url": "https://github.com/keras-team/keras/issues/14063", "id": 624462375, "node_id": "MDU6SXNzdWU2MjQ0NjIzNzU=", "number": 14063, "title": "Different predictions in binary classification on the same data but different input size.", "user": {"login": "vahidAK", "id": 46334063, "node_id": "MDQ6VXNlcjQ2MzM0MDYz", "avatar_url": "https://avatars1.githubusercontent.com/u/46334063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vahidAK", "html_url": "https://github.com/vahidAK", "followers_url": "https://api.github.com/users/vahidAK/followers", "following_url": "https://api.github.com/users/vahidAK/following{/other_user}", "gists_url": "https://api.github.com/users/vahidAK/gists{/gist_id}", "starred_url": "https://api.github.com/users/vahidAK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vahidAK/subscriptions", "organizations_url": "https://api.github.com/users/vahidAK/orgs", "repos_url": "https://api.github.com/users/vahidAK/repos", "events_url": "https://api.github.com/users/vahidAK/events{/privacy}", "received_events_url": "https://api.github.com/users/vahidAK/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-25T19:54:06Z", "updated_at": "2020-05-26T08:19:18Z", "closed_at": "2020-05-26T08:19:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @bmabey, @smgt, @moustaki ,  and @edsonmedina \r\nI am using Keras sequential model to do binary classification. I noticed every time the number of rows differs in input data for model.predict, the predictions differ.\r\nBasically, I am extracting features for the model through a multiprocessing step and store them in a numpy array. Then do prediction on that array (prediction step is not multiprocess). Every time I use a different number of threads (which results in different Numpy array size as input for the model) the predictions is different.  \r\nHere is my training codes:  \r\n```\r\nimport os  \r\nos.environ['PYTHONHASHSEED'] = '0'  \r\nimport numpy as np  \r\nimport random as rn  \r\nimport tensorflow as tf  \r\nrn.seed(1)  \r\nnp.random.seed(1)  \r\ntf.random.set_seed(1) \r\nimport pandas as pd\r\nfrom matplotlib import pyplot as plt\r\nfrom sklearn.preprocessing import StandardScaler , OneHotEncoder\r\nfrom keras.models import Sequential, load_model\r\nfrom keras.layers import Dense\r\nfrom keras import backend as K\r\nfrom keras.utils import plot_model\r\nfrom keras.callbacks import ModelCheckpoint\r\ntf.keras.backend.set_floatx('float64') \r\n\r\ndef recall(y_true, y_pred):\r\n        true_positives = K.sum(K.round(K.clip(y_true * y_pred, 0, 1)))\r\n        possible_positives = K.sum(K.round(K.clip(y_true, 0, 1)))\r\n        recall_m = true_positives / (possible_positives + K.epsilon())\r\n        return recall_m\r\ndef precision(y_true, y_pred):\r\n        true_positives = K.sum(K.round(K.clip(y_true * y_pred, 0, 1)))\r\n        predicted_positives = K.sum(K.round(K.clip(y_pred, 0, 1)))\r\n        precision_m = true_positives / (predicted_positives + K.epsilon())\r\n        return precision_m\r\ndef F1(y_true, y_pred):\r\n    precision_m = precision(y_true, y_pred)\r\n    recall_m = recall(y_true, y_pred)\r\n    return 2*((precision_m*recall_m)/(precision_m+recall_m+K.epsilon()))\r\ntrain = pd.read_csv(train_data, header= None)\r\ntest= pd.read_csv(test_data, header= None)\r\nX_train= (train.iloc[:, 9:-1].values).astype('float64')\r\nX_label = train.iloc[:, -1].values\r\ntest_val= (test.iloc[:, 9:-1].values).astype('float64')\r\ntest_label= test.iloc[:, -1].values\r\nsc = StandardScaler()\r\nX_train = (sc.fit_transform(X_train)).astype('float64')\r\ntest_val= (sc.fit_transform(test_val)).astype('float64')\r\ninputdim= X_train.shape[1]\r\nclassifier = Sequential()\r\nclassifier.add(Dense(activation=\"relu\", input_dim=inputdim, units=inputdim, kernel_initializer=\"uniform\"))\r\nclassifier.add(Dense(activation=\"relu\", units=inputdim * 2, kernel_initializer=\"uniform\"))\r\nclassifier.add(Dense(activation=\"relu\", units=inputdim, kernel_initializer=\"uniform\"))\r\nclassifier.add(Dense(activation=\"relu\", units=round(inputdim/2), kernel_initializer=\"uniform\"))\r\n\r\nclassifier.add(Dense(activation=\"sigmoid\", units=1, kernel_initializer=\"uniform\"))\r\nsgd = keras.optimizers.SGD(lr=0.1, decay= 1e-6, momentum= 0.9, nesterov=True)\r\nclassifier.compile(optimizer = sgd, loss = 'binary_crossentropy', metrics = ['accuracy',F1,precision, recall]) \r\ncheckpointer = ModelCheckpoint(filepath=outmodel,\r\n                               monitor='val_loss', \r\n                               save_best_only=True,\r\n                               verbose=1)\r\n\r\nhistory= classifier.fit(X_train, y_train, validation_data= (test_val, test_label), \r\n    batch_size = 400, epochs = epoch_num,callbacks=[checkpointer],shuffle=False,verbose=1)\r\n```  \r\nAnd here is my code for predictions on new data using the trained model from above code:  \r\n```\r\nimport os  \r\nos.environ['PYTHONHASHSEED'] = '0'  \r\nimport numpy as np  \r\nimport random as rn  \r\nimport tensorflow as tf  \r\nrn.seed(1)  \r\nnp.random.seed(1)  \r\ntf.random.set_seed(1) \r\nimport pandas as pd\r\nfrom matplotlib import pyplot as plt\r\nfrom sklearn.preprocessing import StandardScaler , OneHotEncoder\r\nfrom keras.models import Sequential, load_model\r\nfrom keras.layers import Dense\r\nfrom keras import backend as K\r\nfrom keras.utils import plot_model\r\nfrom keras.callbacks import ModelCheckpoint\r\ntf.keras.backend.set_floatx('float64') \r\nmodel = load_model(model_file, custom_objects={'F1': F1,'precision':precision,\r\n                                                   'recall':recall})\r\nsc = StandardScaler()\r\nfile= open(input_file)\r\ninpt_data_list= []\r\nfor i in file:\r\n    inpt_data_list.append(i.rstrip())\r\nfeed_list= [inpt_data_list[x:x+50]\r\n                         for x in range(0, len(inpt_data_list), 50)]\r\nfeed_list = [feed_list[x:x+threads]\r\n                         for x in range(0, len(feed_list), threads)]\r\n\r\nfor read_list in feed_list:\r\n    model_input= []\r\n    info_input= []\r\n    p = mp.Pool(threads)\r\n    results = p.map(featurExtractor,read_list)\r\n    p.close()\r\n    p.join()\r\n    for result in results:\r\n        if result is not None:\r\n            for key,val in result.items():\r\n                info_input.append(key)\r\n                model_input.append(val)\r\n    model_input= np.asarray(model_input, dtype= np.float64)\r\n    model_input= sc.fit_transform(model_input)\r\n    predictions= model.predict(model_input,batch_size=400)\r\n    for i in range(len(predictions)):\r\n        pred= round(float(predictions[i]),3)\r\n        print('\\t'.join(map(str,info_input[i]))\r\n                        +'\\t'+str(pred))\r\n```  \r\nI would really appreciate it if you could help me.  \r\n\r\nThanks,  \r\nVahid.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/14055", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/14055/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/14055/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/14055/events", "html_url": "https://github.com/keras-team/keras/issues/14055", "id": 623222807, "node_id": "MDU6SXNzdWU2MjMyMjI4MDc=", "number": 14055, "title": "KerasClassifier .fit() returns type Sequential not type KerasClassifier to object property", "user": {"login": "rossls-cmyk", "id": 9281087, "node_id": "MDQ6VXNlcjkyODEwODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/9281087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rossls-cmyk", "html_url": "https://github.com/rossls-cmyk", "followers_url": "https://api.github.com/users/rossls-cmyk/followers", "following_url": "https://api.github.com/users/rossls-cmyk/following{/other_user}", "gists_url": "https://api.github.com/users/rossls-cmyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/rossls-cmyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rossls-cmyk/subscriptions", "organizations_url": "https://api.github.com/users/rossls-cmyk/orgs", "repos_url": "https://api.github.com/users/rossls-cmyk/repos", "events_url": "https://api.github.com/users/rossls-cmyk/events{/privacy}", "received_events_url": "https://api.github.com/users/rossls-cmyk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-22T13:52:23Z", "updated_at": "2020-05-26T19:46:34Z", "closed_at": "2020-05-26T19:46:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "- Have I written custom code (as opposed to using example directory):  Yes\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  macOS Catalina 10.15.4\r\n- TensorFlow backend (yes / no):  Yes\r\n- TensorFlow version:  2.2.0\r\n- Keras version:  2.3.1\r\n- Python version:  3.7.7\r\n- CUDA/cuDNN version:  N/A\r\n- GPU model and memory:  N/A\r\n\r\nI am using KerasClassifier to create a NN, usually, after using .fit() the object will still retain type of wrappers.scikit_learn.KerasClassifier and then further functions such as cross_val_score and GridSearchCV work perfectly. I am now trying to fit my code into a format that I have been given for a project which has a predefined class to hold the NN. When trying to assign either this new class or a property of the class with the KerasClassifier wrapper type the return from .fit() is instead of type engine.sequential.Sequential meaning the further functions will not operate.\r\n\r\nI would expect the .fit() function to return an item of type KerasClassifier.\r\n\r\nThe code below is passed preprocessed training data.\r\n```\r\nclass Module4_Model:\r\n    \r\n    def __init__(self):\r\n        self.my_model = None\r\n    \r\n    def init_classifier(self):\r\n        self.my_model = KerasClassifier(build_fn = self.build_classifier,\r\n                             optimizer = 'adam',\r\n                             n_units = 7,\r\n                             batch_size = 32,\r\n                             epochs = 100)\r\n        return self.my_model\r\n\r\n    def build_classifier(self, optimizer, n_units):\r\n        self.my_model = Sequential()\r\n        self.my_model.add(Dense(units = n_units, kernel_initializer = 'uniform', activation = 'relu', input_dim = 15))\r\n        self.my_model.add(Dense(units = n_units, kernel_initializer = 'uniform', activation = 'relu'))\r\n        self.my_model.add(Dense(units = 1, kernel_initializer = 'uniform', activation = 'sigmoid'))\r\n        self.my_model.compile(optimizer = optimizer, loss = 'binary_crossentropy', metrics = ['accuracy'])\r\n        return self.my_model\r\n    \r\n    def train_model(self, X_train, y_train):\r\n        history = self.my_model.fit(X_train, y_train, validation_split = 0.1)\r\n        print(type(self.my_model))\r\n        return history\r\n\r\nmy_model = Module4_Model()\r\n\r\nmy_model.init_classifier()\r\n\r\nhistory = my_model.train_model(x_train_processed, y_train_processed)\r\n\r\n```\r\n\r\nThe same code moved outside of a class works as expected.\r\n\r\nThanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/14054", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/14054/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/14054/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/14054/events", "html_url": "https://github.com/keras-team/keras/issues/14054", "id": 622242143, "node_id": "MDU6SXNzdWU2MjIyNDIxNDM=", "number": 14054, "title": "TypeError while compiling Keras model with custom loss function", "user": {"login": "bhomaidan1990", "id": 55383642, "node_id": "MDQ6VXNlcjU1MzgzNjQy", "avatar_url": "https://avatars2.githubusercontent.com/u/55383642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhomaidan1990", "html_url": "https://github.com/bhomaidan1990", "followers_url": "https://api.github.com/users/bhomaidan1990/followers", "following_url": "https://api.github.com/users/bhomaidan1990/following{/other_user}", "gists_url": "https://api.github.com/users/bhomaidan1990/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhomaidan1990/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhomaidan1990/subscriptions", "organizations_url": "https://api.github.com/users/bhomaidan1990/orgs", "repos_url": "https://api.github.com/users/bhomaidan1990/repos", "events_url": "https://api.github.com/users/bhomaidan1990/events{/privacy}", "received_events_url": "https://api.github.com/users/bhomaidan1990/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 192940628, "node_id": "MDU6TGFiZWwxOTI5NDA2Mjg=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": "User is asking for help / asking an implementation question. Stackoverflow would be better suited."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-21T04:42:17Z", "updated_at": "2020-05-31T18:03:28Z", "closed_at": "2020-05-31T18:03:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have trained a model with custom loss function BinaryCrossEntropy, with Jaccard, using segmentation models library, when I tried to load and compile the model in order to start prediction, I have got this Error:\r\n`    model = compile(optimizer='adam', loss=bce_jaccard_loss, metrics=['iou_score'])\r\nTypeError: compile() missing required argument 'source' (pos 1)`\r\n\r\nHow can I solve that, please?\r\n\r\n```\r\nimport keras\r\nimport segmentation_models as sm\r\nfrom segmentation_models.losses import bce_jaccard_loss\r\nfrom segmentation_models.metrics import iou_score\r\n    \r\nmodel = keras.models.load_model(\"ResNet_34_Aug.h5\", compile = False)\r\nmodel = compile(optimizer='adam', loss=bce_jaccard_loss, metrics=['iou_score'])\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/14045", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/14045/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/14045/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/14045/events", "html_url": "https://github.com/keras-team/keras/issues/14045", "id": 616626325, "node_id": "MDU6SXNzdWU2MTY2MjYzMjU=", "number": 14045, "title": "return_dict in evaluate() method doesn't work", "user": {"login": "Akronix", "id": 2631430, "node_id": "MDQ6VXNlcjI2MzE0MzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2631430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Akronix", "html_url": "https://github.com/Akronix", "followers_url": "https://api.github.com/users/Akronix/followers", "following_url": "https://api.github.com/users/Akronix/following{/other_user}", "gists_url": "https://api.github.com/users/Akronix/gists{/gist_id}", "starred_url": "https://api.github.com/users/Akronix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Akronix/subscriptions", "organizations_url": "https://api.github.com/users/Akronix/orgs", "repos_url": "https://api.github.com/users/Akronix/repos", "events_url": "https://api.github.com/users/Akronix/events{/privacy}", "received_events_url": "https://api.github.com/users/Akronix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}, {"id": 192940623, "node_id": "MDU6TGFiZWwxOTI5NDA2MjM=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-12T12:44:26Z", "updated_at": "2020-08-13T14:26:31Z", "closed_at": "2020-08-13T14:26:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if this is a bug, is a documentation incoherence or it's just an issue with the keras version that kaggle uses.\r\n\r\n**System information**  \r\n- Have I written custom code (as opposed to using example directory): Yes\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  Docker container for kaggle\r\n- TensorFlow backend (yes / no):  yes\r\n- TensorFlow version:  2.1.0\r\n- Keras version:  2.3.1\r\n- Python version:  3.7.6.\r\n\r\n**Describe the current behavior**  \r\n\r\n[In the docs for the model.evaluate method](https://keras.io/api/models/model_training_apis/#evaluate-method) it says you can use the argument \"return_dict\" to get a dictionary instead of a list for the output. However, I get an error when I specify such argument:\r\n```\r\nTypeError: evaluate() got an unexpected keyword argument 'return_dict'\r\n```\r\n\r\n**Describe the expected behavior**  \r\nNo error an dict with the output of the evaluation.\r\n\r\n**Code to reproduce the issue**  \r\n`results = model.evaluate(X_test, y_test, batch_size=24, return_dict=True)`\r\n\r\nsame thing if I use `return_dict = False`.\r\n\r\n**Other info / logs**  \r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.  \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/14042", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/14042/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/14042/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/14042/events", "html_url": "https://github.com/keras-team/keras/issues/14042", "id": 615562954, "node_id": "MDU6SXNzdWU2MTU1NjI5NTQ=", "number": 14042, "title": "It shows 3 classes by flow_from_directory when there are only two classes in the destination path.", "user": {"login": "anmol1812", "id": 33112745, "node_id": "MDQ6VXNlcjMzMTEyNzQ1", "avatar_url": "https://avatars1.githubusercontent.com/u/33112745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anmol1812", "html_url": "https://github.com/anmol1812", "followers_url": "https://api.github.com/users/anmol1812/followers", "following_url": "https://api.github.com/users/anmol1812/following{/other_user}", "gists_url": "https://api.github.com/users/anmol1812/gists{/gist_id}", "starred_url": "https://api.github.com/users/anmol1812/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anmol1812/subscriptions", "organizations_url": "https://api.github.com/users/anmol1812/orgs", "repos_url": "https://api.github.com/users/anmol1812/repos", "events_url": "https://api.github.com/users/anmol1812/events{/privacy}", "received_events_url": "https://api.github.com/users/anmol1812/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 192940628, "node_id": "MDU6TGFiZWwxOTI5NDA2Mjg=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": "User is asking for help / asking an implementation question. Stackoverflow would be better suited."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-11T03:33:44Z", "updated_at": "2020-07-23T13:35:46Z", "closed_at": "2020-07-23T13:35:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using jypyter notebook in ubuntu and facing the problem in reading directories by 'flow_from_directory' from 'ImageDataGenerator'. It shows 3 classes for two folders in the path.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/14037", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/14037/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/14037/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/14037/events", "html_url": "https://github.com/keras-team/keras/issues/14037", "id": 614848279, "node_id": "MDU6SXNzdWU2MTQ4NDgyNzk=", "number": 14037, "title": "Memory Leak when using keras.layers.Lambda and tf.map_fn", "user": {"login": "Volker-Weissmann", "id": 39418860, "node_id": "MDQ6VXNlcjM5NDE4ODYw", "avatar_url": "https://avatars3.githubusercontent.com/u/39418860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Volker-Weissmann", "html_url": "https://github.com/Volker-Weissmann", "followers_url": "https://api.github.com/users/Volker-Weissmann/followers", "following_url": "https://api.github.com/users/Volker-Weissmann/following{/other_user}", "gists_url": "https://api.github.com/users/Volker-Weissmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/Volker-Weissmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Volker-Weissmann/subscriptions", "organizations_url": "https://api.github.com/users/Volker-Weissmann/orgs", "repos_url": "https://api.github.com/users/Volker-Weissmann/repos", "events_url": "https://api.github.com/users/Volker-Weissmann/events{/privacy}", "received_events_url": "https://api.github.com/users/Volker-Weissmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}, {"id": 192940623, "node_id": "MDU6TGFiZWwxOTI5NDA2MjM=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-08T16:31:13Z", "updated_at": "2020-07-17T17:03:50Z", "closed_at": "2020-07-17T17:03:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "**System information**  \r\n- Have I written custom code (as opposed to using example directory):  Yes, see below\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  Arch Linux\r\n- TensorFlow backend (yes / no):  yes\r\n- TensorFlow version:  2.2.0-rc3\r\n- Keras version:   2.3.1\r\n- Python version:  3.8.2\r\n- CUDA/cuDNN version:   V10.2.89\r\n- GPU model and memory:  GeForce GTX 1060 6GB\r\n\r\n\r\nThe following program produces a memory leak.\r\n\r\n```\r\n#!/usr/bin/env python\r\nimport keras\r\nimport numpy as np\r\nimport tensorflow as tf\r\nimport gc\r\nimport os\r\n\r\n@tf.function\r\ndef extractVector(inp):\r\n\treturn tf.stack([inp[0]]*40, axis=0)\r\n\r\nx_train = np.random.rand(3200, 40)\r\ny_train = np.random.rand(3200, 40, 40)\r\nembedding_vecs = np.random.rand(4592, 300)\r\n\r\ninput_layer = keras.layers.Input(shape=(40,))\r\nembedding_layer = keras.layers.Embedding(4592, 300, weights=[embedding_vecs], input_length=40, trainable=False)(input_layer)\r\nlstm_layer = keras.layers.LSTM(40, return_sequences=True)(embedding_layer)\r\nlambda_layer = keras.layers.Lambda(lambda inp: tf.map_fn(extractVector, inp))(lstm_layer)\r\noutput_layer = lambda_layer\r\n\r\nmodel = keras.models.Model(inputs=input_layer, outputs=output_layer)\r\nmodel.compile(loss=\"categorical_crossentropy\", optimizer=\"adam\")\r\n\r\nclass GarbageCollectorCallback(tf.keras.callbacks.Callback):\r\n    def on_epoch_end(self, epoch, logs=None):\r\n        gc.collect()\r\n\r\nclass PrintRamCallback(tf.keras.callbacks.Callback):\r\n    def on_epoch_end(self, epoch, logs=None):\r\n        os.system(\"pmap -x \"+str(os.getpid())+\" | tail -n 1\")\r\n\r\nmodel.fit(x_train, y_train, batch_size=128, epochs=100, callbacks=[GarbageCollectorCallback(), PrintRamCallback()], verbose=0)\r\n\r\n```\r\n\r\nThe output of the program above is:\r\n\r\n> 2020-05-08 18:09:00.187454: I tensorflow/core/platform/cpu_feature_guard.cc:143] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE3 SSE4.1 SSE4.2 AVX AVX2 FMA\r\n> 2020-05-08 18:09:00.218519: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 3300655000 Hz\r\n> 2020-05-08 18:09:00.218983: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x5594d82c4200 initialized for platform Host (this does not guarantee that XLA will be used). Devices:\r\n> 2020-05-08 18:09:00.219023: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version\r\n> 2020-05-08 18:09:00.220331: I tensorflow/core/common_runtime/process_util.cc:147] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance.\r\n> Using TensorFlow backend.\r\n> WARNING:tensorflow:AutoGraph could not transform <function extractVector at 0x7f74044ca310> and will run it as-is.\r\n> Please report this to the TensorFlow team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output.\r\n> Cause: module 'gast' has no attribute 'Constant'\r\n> To silence this warning, decorate the function with @tf.autograph.experimental.do_not_convert\r\n> total kB         3554580  613100  429920\r\n> total kB         3685652  753188  570008\r\n> total kB         3816724  893884  710704\r\n> total kB         3947796 1034252  851072\r\n> total kB         4078868 1174528  991348\r\n> total kB         4209940 1314880 1131700\r\n> total kB         4341012 1455372 1272192\r\n> total kB         4472084 1595540 1412360\r\n> total kB         4603156 1741396 1558216\r\n> total kB         4734228 1881492 1698312\r\n> total kB         4865300 2021600 1838420\r\n> total kB         4996372 2163068 1979888\r\n> total kB         5192980 2303140 2119960\r\n> total kB         5389588 2443292 2260112\r\n> total kB         5520660 2583584 2400404\r\n> total kB         5651732 2723784 2540604\r\n> total kB         5782804 2863836 2680656\r\n> total kB         5913876 3004144 2820964\r\n> total kB         6044948 3144256 2961076\r\n> total kB         6176020 3284412 3101232\r\n> total kB         6307092 3424500 3241320\r\n> total kB         6438164 3564720 3381540\r\n> total kB         6569236 3705064 3521884\r\n> total kB         6700308 3845276 3662096\r\n> total kB         6831380 3985636 3802456\r\n> total kB         7027988 4125896 3942716\r\n> total kB         7159060 4266096 4082916\r\n> total kB         7290132 4406160 4222980\r\n> total kB         7421204 4546380 4363200\r\n> total kB         7552276 4686528 4503348\r\n> total kB         7683348 4826604 4643424\r\n> total kB         7879956 4966828 4783648\r\n> total kB         8011028 5106936 4923756\r\n> total kB         8142100 5247296 5064116\r\n> total kB         8273172 5383988 5204424\r\n> total kB         8404244 5492128 5344856\r\n> total kB         8535316 5494272 5485284\r\n> total kB         8731924 5633596 5625676\r\n> total kB         8862996 5772616 5765768\r\n> total kB         8994068 5912720 5905752\r\n> total kB         9125140 6052912 6045960\r\n> total kB         9256212 6192840 6186032\r\n> total kB         9387284 6236800 6226492\r\n> total kB         9518356 6332196 6321296\r\n> total kB         9649428 6379904 6369476\r\n> total kB         9780500 6442764 6432232\r\n> total kB         9977108 6490412 6480072\r\n> total kB         10108180 6518504 6508008\r\n\r\nYou can see that it uses 430 MB to complete the first epoch, but 6500 MB for the 48'th Epoch .", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/14033", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/14033/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/14033/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/14033/events", "html_url": "https://github.com/keras-team/keras/issues/14033", "id": 614319592, "node_id": "MDU6SXNzdWU2MTQzMTk1OTI=", "number": 14033, "title": "Size of a Keras model increases after new models are instantiated", "user": {"login": "leandrocouto", "id": 24583872, "node_id": "MDQ6VXNlcjI0NTgzODcy", "avatar_url": "https://avatars1.githubusercontent.com/u/24583872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leandrocouto", "html_url": "https://github.com/leandrocouto", "followers_url": "https://api.github.com/users/leandrocouto/followers", "following_url": "https://api.github.com/users/leandrocouto/following{/other_user}", "gists_url": "https://api.github.com/users/leandrocouto/gists{/gist_id}", "starred_url": "https://api.github.com/users/leandrocouto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leandrocouto/subscriptions", "organizations_url": "https://api.github.com/users/leandrocouto/orgs", "repos_url": "https://api.github.com/users/leandrocouto/repos", "events_url": "https://api.github.com/users/leandrocouto/events{/privacy}", "received_events_url": "https://api.github.com/users/leandrocouto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-07T20:21:03Z", "updated_at": "2020-05-07T20:26:31Z", "closed_at": "2020-05-07T20:26:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "**System information**  \r\n- Have I written custom code (as opposed to using example directory):  yes\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  Windows 10\r\n- TensorFlow backend (yes / no):  yes\r\n- TensorFlow version:  2.1.0\r\n- Keras version:   2.3.1\r\n- Python version:  3.6.8\r\n- CUDA/cuDNN version:  N/A\r\n- GPU model and memory:  N/A\r\n\r\n**Describe the current behavior**  \r\n\r\nKeras models sizes increases as new models are instantiated.\r\n\r\n**Describe the expected behavior**  \r\n\r\nNew instantiated Keras model should not interfere with the size allocated to others.\r\n\r\n**Code to reproduce the issue**  \r\n```\r\nfrom pympler import asizeof \r\nfrom keras.models import Sequential\r\nfrom keras.layers import Dense\r\n\r\nmodel_1 = Sequential([\r\n  Dense(1, activation='relu', input_shape=(10,)),\r\n])\r\n\r\nprint('Model 1 size = ', asizeof.asizeof(model_1))\r\n\r\nmodel_2 = Sequential([\r\n  Dense(1, activation='relu', input_shape=(10,)),\r\n])\r\n\r\nprint('Model 1 size = ', asizeof.asizeof(model_1))\r\nprint('Model 2 size = ', asizeof.asizeof(model_2))\r\n\r\nmodel_3 = Sequential([\r\n  Dense(1, activation='relu', input_shape=(10,)),\r\n])\r\n\r\nprint('Model 1 size = ', asizeof.asizeof(model_1))\r\nprint('Model 2 size = ', asizeof.asizeof(model_2))\r\nprint('Model 3 size = ', asizeof.asizeof(model_3))\r\n\r\n#Current output\r\n#Model 1 size =  68624\r\n#Model 1 size =  92728\r\n#Model 2 size =  92728\r\n#Model 1 size =  118208\r\n#Model 2 size =  118208\r\n#Model 3 size =  118208\r\n\r\n#Expected output\r\n#Model 1 size =  68624\r\n#Model 1 size =  68624\r\n#Model 2 size =  68624\r\n#Model 1 size =  68624\r\n#Model 2 size =  68624\r\n#Model 3 size =  68624 \r\n``` \r\n\r\n**Other info / logs**  \r\nI am using Pympler in order to measure the size of an object.  asizeof returns the size of an object in bytes.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/14032", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/14032/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/14032/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/14032/events", "html_url": "https://github.com/keras-team/keras/issues/14032", "id": 614282471, "node_id": "MDU6SXNzdWU2MTQyODI0NzE=", "number": 14032, "title": "ResourceExhaustedError when instantiating model", "user": {"login": "tjdurant", "id": 9451958, "node_id": "MDQ6VXNlcjk0NTE5NTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/9451958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tjdurant", "html_url": "https://github.com/tjdurant", "followers_url": "https://api.github.com/users/tjdurant/followers", "following_url": "https://api.github.com/users/tjdurant/following{/other_user}", "gists_url": "https://api.github.com/users/tjdurant/gists{/gist_id}", "starred_url": "https://api.github.com/users/tjdurant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tjdurant/subscriptions", "organizations_url": "https://api.github.com/users/tjdurant/orgs", "repos_url": "https://api.github.com/users/tjdurant/repos", "events_url": "https://api.github.com/users/tjdurant/events{/privacy}", "received_events_url": "https://api.github.com/users/tjdurant/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-07T19:13:15Z", "updated_at": "2020-05-08T15:32:00Z", "closed_at": "2020-05-08T15:30:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello, \r\n\r\nRunning Keras (2.3.1) with TF (2.0.0) backend within a docker container. \r\n\r\nRunning this block in Jupyter:\r\n\r\n```\r\nmodel = keras.applications.resnet.ResNet50(\r\n    include_top=True, \r\n    weights=None, \r\n    input_tensor=None, \r\n    input_shape=(70,70,3), \r\n    pooling=None, \r\n    classes=2\r\n)\r\n```\r\n\r\nGives me the OOM error:\r\n\r\n```\r\nResourceExhaustedError                    Traceback (most recent call last)\r\n<ipython-input-35-1a3bbd5216b5> in <module>\r\n      5     input_shape=(70,70,3),\r\n      6     pooling=None,\r\n----> 7     classes=2\r\n      8 )\r\n\r\n/usr/local/lib/python3.6/dist-packages/keras/applications/__init__.py in wrapper(*args, **kwargs)\r\n     18         kwargs['models'] = models\r\n     19         kwargs['utils'] = utils\r\n---> 20         return base_fun(*args, **kwargs)\r\n     21 \r\n     22     return wrapper\r\n\r\n/usr/local/lib/python3.6/dist-packages/keras/applications/resnet.py in ResNet50(*args, **kwargs)\r\n     12 @keras_modules_injection\r\n     13 def ResNet50(*args, **kwargs):\r\n---> 14     return resnet.ResNet50(*args, **kwargs)\r\n     15 \r\n     16 \r\n\r\n/usr/local/lib/python3.6/dist-packages/keras_applications/resnet_common.py in ResNet50(include_top, weights, input_tensor, input_shape, pooling, classes, **kwargs)\r\n    433                   input_tensor, input_shape,\r\n    434                   pooling, classes,\r\n--> 435                   **kwargs)\r\n    436 \r\n    437 \r\n\r\n/usr/local/lib/python3.6/dist-packages/keras_applications/resnet_common.py in ResNet(stack_fn, preact, use_bias, model_name, include_top, weights, input_tensor, input_shape, pooling, classes, **kwargs)\r\n    371     x = layers.MaxPooling2D(3, strides=2, name='pool1_pool')(x)\r\n    372 \r\n--> 373     x = stack_fn(x)\r\n    374 \r\n    375     if preact is True:\r\n\r\n/usr/local/lib/python3.6/dist-packages/keras_applications/resnet_common.py in stack_fn(x)\r\n    427         x = stack1(x, 128, 4, name='conv3')\r\n    428         x = stack1(x, 256, 6, name='conv4')\r\n--> 429         x = stack1(x, 512, 3, name='conv5')\r\n    430         return x\r\n    431     return ResNet(stack_fn, False, True, 'resnet50',\r\n\r\n/usr/local/lib/python3.6/dist-packages/keras_applications/resnet_common.py in stack1(x, filters, blocks, stride1, name)\r\n    122     x = block1(x, filters, stride=stride1, name=name + '_block1')\r\n    123     for i in range(2, blocks + 1):\r\n--> 124         x = block1(x, filters, conv_shortcut=False, name=name + '_block' + str(i))\r\n    125     return x\r\n    126 \r\n\r\n/usr/local/lib/python3.6/dist-packages/keras_applications/resnet_common.py in block1(x, filters, kernel_size, stride, conv_shortcut, name)\r\n     93 \r\n     94     x = layers.Conv2D(filters, kernel_size, padding='SAME',\r\n---> 95                       name=name + '_2_conv')(x)\r\n     96     x = layers.BatchNormalization(axis=bn_axis, epsilon=1.001e-5,\r\n     97                                   name=name + '_2_bn')(x)\r\n\r\n/usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py in symbolic_fn_wrapper(*args, **kwargs)\r\n     73         if _SYMBOLIC_SCOPE.value:\r\n     74             with get_graph().as_default():\r\n---> 75                 return func(*args, **kwargs)\r\n     76         else:\r\n     77             return func(*args, **kwargs)\r\n\r\n/usr/local/lib/python3.6/dist-packages/keras/engine/base_layer.py in __call__(self, inputs, **kwargs)\r\n    461                                          'You can build it manually via: '\r\n    462                                          '`layer.build(batch_input_shape)`')\r\n--> 463                 self.build(unpack_singleton(input_shapes))\r\n    464                 self.built = True\r\n    465 \r\n\r\n/usr/local/lib/python3.6/dist-packages/keras/layers/convolutional.py in build(self, input_shape)\r\n    139                                       name='kernel',\r\n    140                                       regularizer=self.kernel_regularizer,\r\n--> 141                                       constraint=self.kernel_constraint)\r\n    142         if self.use_bias:\r\n    143             self.bias = self.add_weight(shape=(self.filters,),\r\n\r\n/usr/local/lib/python3.6/dist-packages/keras/engine/base_layer.py in add_weight(self, name, shape, dtype, initializer, regularizer, trainable, constraint)\r\n    277         if dtype is None:\r\n    278             dtype = self.dtype\r\n--> 279         weight = K.variable(initializer(shape, dtype=dtype),\r\n    280                             dtype=dtype,\r\n    281                             name=name,\r\n\r\n/usr/local/lib/python3.6/dist-packages/keras/initializers.py in __call__(self, shape, dtype)\r\n    225             limit = np.sqrt(3. * scale)\r\n    226             x = K.random_uniform(shape, -limit, limit,\r\n--> 227                                  dtype=dtype, seed=self.seed)\r\n    228         if self.seed is not None:\r\n    229             self.seed += 1\r\n\r\n/usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py in random_uniform(shape, minval, maxval, dtype, seed)\r\n   4355     with tf_ops.init_scope():\r\n   4356         return tf_keras_backend.random_uniform(\r\n-> 4357             shape, minval=minval, maxval=maxval, dtype=dtype, seed=seed)\r\n   4358 \r\n   4359 \r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/keras/backend.py in random_uniform(shape, minval, maxval, dtype, seed)\r\n   5596     seed = np.random.randint(10e6)\r\n   5597   return random_ops.random_uniform(\r\n-> 5598       shape, minval=minval, maxval=maxval, dtype=dtype, seed=seed)\r\n   5599 \r\n   5600 \r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/ops/random_ops.py in random_uniform(shape, minval, maxval, dtype, seed, name)\r\n    244     else:\r\n    245       rnd = gen_random_ops.random_uniform(shape, dtype, seed=seed1, seed2=seed2)\r\n--> 246       result = math_ops.add(rnd * (maxval - minval), minval, name=name)\r\n    247     # TODO(b/132092188): C++ shape inference inside functional ops does not\r\n    248     # cross FuncGraph boundaries since that information is only available in\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/ops/math_ops.py in binary_op_wrapper(x, y)\r\n    897     with ops.name_scope(None, op_name, [x, y]) as name:\r\n    898       if isinstance(x, ops.Tensor) and isinstance(y, ops.Tensor):\r\n--> 899         return func(x, y, name=name)\r\n    900       elif not isinstance(y, sparse_tensor.SparseTensor):\r\n    901         try:\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/ops/math_ops.py in _mul_dispatch(x, y, name)\r\n   1204   is_tensor_y = isinstance(y, ops.Tensor)\r\n   1205   if is_tensor_y:\r\n-> 1206     return gen_math_ops.mul(x, y, name=name)\r\n   1207   else:\r\n   1208     assert isinstance(y, sparse_tensor.SparseTensor)  # Case: Dense * Sparse.\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/ops/gen_math_ops.py in mul(x, y, name)\r\n   6696       else:\r\n   6697         message = e.message\r\n-> 6698       _six.raise_from(_core._status_to_exception(e.code, message), None)\r\n   6699   # Add nodes to the TensorFlow graph.\r\n   6700   _, _, _op = _op_def_lib._apply_op_helper(\r\n\r\n/usr/lib/python3/dist-packages/six.py in raise_from(value, from_value)\r\n\r\nResourceExhaustedError: OOM when allocating tensor with shape[3,3,512,512] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc [Op:Mul] name: conv5_block2_2_conv/random_uniform/mul/\r\n```\r\n\r\nI know there are a lot of issues reported on the OOM error but most of them that I see are during the training phase and can be resolved by decreasing batch size or tweaking some parameters of the network to make it smaller. But, I haven't seen any reports of OOM for this operation. \r\n\r\nAny thoughts are welcome. \r\n\r\nThank you. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/14021", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/14021/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/14021/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/14021/events", "html_url": "https://github.com/keras-team/keras/issues/14021", "id": 611121701, "node_id": "MDU6SXNzdWU2MTExMjE3MDE=", "number": 14021, "title": ".argmax(axis = -1) not working propperly", "user": {"login": "weiserhase", "id": 44242102, "node_id": "MDQ6VXNlcjQ0MjQyMTAy", "avatar_url": "https://avatars1.githubusercontent.com/u/44242102?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiserhase", "html_url": "https://github.com/weiserhase", "followers_url": "https://api.github.com/users/weiserhase/followers", "following_url": "https://api.github.com/users/weiserhase/following{/other_user}", "gists_url": "https://api.github.com/users/weiserhase/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiserhase/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiserhase/subscriptions", "organizations_url": "https://api.github.com/users/weiserhase/orgs", "repos_url": "https://api.github.com/users/weiserhase/repos", "events_url": "https://api.github.com/users/weiserhase/events{/privacy}", "received_events_url": "https://api.github.com/users/weiserhase/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-02T06:53:11Z", "updated_at": "2020-05-02T12:15:01Z", "closed_at": "2020-05-02T12:15:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "**System information**  \r\n- Have I written custom code (as opposed to using example directory):  yes\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  Windows 10\r\n- TensorFlow backend (yes / no):  yes\r\n- TensorFlow version:  2.2.0\r\n- Keras version:  2.3.1\r\n- Python version:  3.8.2\r\n- CUDA/cuDNN version:  10.1.105\r\n- GPU model and memory: Geforce Rtx 2060 Super 8Gb gddr5\r\n\r\n**Describe the current behavior**  \r\nim actualy trying to build a working face recognition using keras i got the moddel training and learing so i tried to integrate the prediction feature so i started with building the generator everythging worked well but when i wanted to extract the classes from the result i start to get Problems with this code:\r\n\r\n`\r\ntest_generator = test_datagen.flow_from_directory(\r\n    directory=test_dir,\r\n    target_size=(img_width, img_height),\r\n    color_mode=\"rgb\",\r\n    batch_size=1,\r\n    class_mode=None,\r\n    shuffle=False\r\n)\r\n\r\ntest_generator.reset()\r\npred = (model.predict_generator(test_generator, verbose=1,steps=len(test_generator)))\r\nprint(pred)\r\npredicted_class_indices = np.argmax(pred, axis=-1)\r\nlabels = (train_generator.class_indices)\r\nprint(predicted_class_indices)\r\nlabels = dict((v,k) for k,v in labels.items())\r\nprint(labels)\r\npredictions = [labels[k] for k in predicted_class_indices]\r\nfilenames=test_generator.filenames\r\nresult = [predictions,filenames]\r\nprint(convert_to_class(pred))\r\nprint(result)\r\n`\r\n\r\n\r\nand thats what i get out\r\n\r\n>  3/3 [==============================] - 0s 44ms/step\r\n\r\n>[[0.933246  ]\r\n >[0.6150473 ]\r\n >[0.95384455]]\r\n>[0 0 0]\r\n>{0: 'angela merkel', 1: 'donald trump', 2: 'xxxxx'}\r\n>[['angela merkel', 'angela merkel', 'angela merkel'], ['1\\\\000_1qk858.jpg', '1\\\\1-format430.jpg', '1\\\\IMG_20200501_045550.jpg']]\r\n\r\nLike you see the tensor is [0,0,0] so all pictures are the same class \r\nIm now wondering what i messed up, even with some other ways suggested by people on stackoverflow etc. I got wrong results\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/14005", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/14005/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/14005/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/14005/events", "html_url": "https://github.com/keras-team/keras/issues/14005", "id": 606703146, "node_id": "MDU6SXNzdWU2MDY3MDMxNDY=", "number": 14005, "title": "PR #34911 not being included in releases", "user": {"login": "ShaneSmiskol", "id": 25857203, "node_id": "MDQ6VXNlcjI1ODU3MjAz", "avatar_url": "https://avatars2.githubusercontent.com/u/25857203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShaneSmiskol", "html_url": "https://github.com/ShaneSmiskol", "followers_url": "https://api.github.com/users/ShaneSmiskol/followers", "following_url": "https://api.github.com/users/ShaneSmiskol/following{/other_user}", "gists_url": "https://api.github.com/users/ShaneSmiskol/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShaneSmiskol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShaneSmiskol/subscriptions", "organizations_url": "https://api.github.com/users/ShaneSmiskol/orgs", "repos_url": "https://api.github.com/users/ShaneSmiskol/repos", "events_url": "https://api.github.com/users/ShaneSmiskol/events{/privacy}", "received_events_url": "https://api.github.com/users/ShaneSmiskol/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-25T06:30:59Z", "updated_at": "2020-04-25T06:37:20Z", "closed_at": "2020-04-25T06:37:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "**System information**\r\n- Have I written custom code (as opposed to using example directory):  Nope\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  Windows 10 x64\r\n- TensorFlow backend (yes / no):  Yes\r\n- TensorFlow version:  2.1.0\r\n- Keras version:  2.2.4-tf (using tf.keras)\r\n- Python version:  3.7.5\r\n- CUDA/cuDNN version:  11\r\n- GPU model and memory:  1070 with 8GB\r\n\r\n**Describe the current behavior**\r\nIn `site-packages/tensorflow_core/python/keras/utils/generic_utils.py`, the PR I made [here](https://github.com/tensorflow/tensorflow/pull/34911) on December 6, 2019 isn't being applied to PyPi releases of TensorFLow, specifically TF 2.1.0 in my case. The code in that file when cleanly installing TensorFlow is as follows:\r\n```python\r\nself._dynamic_display = ((hasattr(sys.stdout, 'isatty') and\r\n                          sys.stdout.isatty()) or\r\n                         'ipykernel' in sys.modules or\r\n                         'posix' in sys.modules)\r\n```\r\n\r\n**Describe the expected behavior**\r\nWhen it should be:\r\n```python\r\nself._dynamic_display = ((hasattr(sys.stdout, 'isatty') and\r\n                          sys.stdout.isatty()) or\r\n                         'ipykernel' in sys.modules or\r\n                         'posix' in sys.modules or\r\n                         'PYCHARM_HOSTED' in os.environ)\r\n```\r\nas changed in the PR. Is there some other place I need to create a PR for this change to take effect in the releases?\r\n\r\n**Code to reproduce the issue**  \r\nInstall TensorFlow 2.1.0 on Windows 10, Python 3.7.5\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/14001", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/14001/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/14001/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/14001/events", "html_url": "https://github.com/keras-team/keras/issues/14001", "id": 606276083, "node_id": "MDU6SXNzdWU2MDYyNzYwODM=", "number": 14001, "title": "Neural net not working", "user": {"login": "weiserhase", "id": 44242102, "node_id": "MDQ6VXNlcjQ0MjQyMTAy", "avatar_url": "https://avatars1.githubusercontent.com/u/44242102?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiserhase", "html_url": "https://github.com/weiserhase", "followers_url": "https://api.github.com/users/weiserhase/followers", "following_url": "https://api.github.com/users/weiserhase/following{/other_user}", "gists_url": "https://api.github.com/users/weiserhase/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiserhase/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiserhase/subscriptions", "organizations_url": "https://api.github.com/users/weiserhase/orgs", "repos_url": "https://api.github.com/users/weiserhase/repos", "events_url": "https://api.github.com/users/weiserhase/events{/privacy}", "received_events_url": "https://api.github.com/users/weiserhase/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}, {"id": 192940628, "node_id": "MDU6TGFiZWwxOTI5NDA2Mjg=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": "User is asking for help / asking an implementation question. Stackoverflow would be better suited."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-24T12:27:00Z", "updated_at": "2020-05-11T13:21:27Z", "closed_at": "2020-05-11T13:21:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "**System information**  \r\n- Have I written custom code (as opposed to using example directory):  yes\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  Windows 10\r\n- TensorFlow backend (yes / no):  yes\r\n- TensorFlow version:  2.3.1\r\n- Keras version:  2.3.1\r\n- Python version:  3.8.2\r\n\r\n\r\n**Describe the current behavior**  \r\nImn trying to predict a cars MPG by its horsepower i get the data from a json file the data is imported and given to the neuralNet but the neural net just returns a straight line as prediction its simply 0.\r\nThe Neural net is also showing up corectly in nodel.summary().\r\n I think this is a issue with my code but im not getting the problem .\r\n\r\n`import keras as k\r\nimport keras\r\nfrom keras.models import Sequential\r\nfrom keras.optimizers import SGD\r\nfrom keras.layers import Dense, Activation, Dropout\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt \r\nfrom random import randint\r\nimport json\r\nx = list()\r\ny = list()\r\ndef f(x):\r\n    y = x*randint(0,10)\r\n    return y \r\nwith open('r.json') as myfile:\r\n    data=myfile.read()\r\ndata = json.loads(data)\r\n# parse file\r\nx = []\r\ny = []\r\nfor i in range(len(data)):\r\n    #car = json.loads(data[i])\r\n    car = data[i]\r\n    if(car[\"Miles_per_Gallon\"] is'None' or car[\"Miles_per_Gallon\"] is None):\r\n        continue\r\n    if(car[\"Horsepower\"] is None or car[\"Horsepower\"] is 'null' or car[\"Cylinders\"]  is None or car['Acceleration'] is None or car['Weight_in_lbs'] is None ):\r\n        continue\r\n    if(car[\"Horsepower\"] != None or car[\"Horsepower\"] != 'null' or car[\"Cylinders\"] !=None or car['Acceleration'] != None or car['Weight_in_lbs'] != None ):\r\n        x.append([ car[\"Horsepower\"]])\r\n        if(car[\"Miles_per_Gallon\"] != 'None' or car[\"Miles_per_Gallon\"] != None):\r\n            print(car )\r\n            y.append(car[\"Miles_per_Gallon\"])\r\ndata = x\r\nprint((x))\r\nprint((y))\r\nmodel = Sequential()\r\nmodel.add(Dense(1, input_dim=1, use_bias=False, activation='sigmoid'))\r\nmodel.add(Dense(100, activation='tanh',))\r\nmodel.add(Dense(50, activation='tanh',))\r\nmodel.add(Dense(25, activation='tanh',))\r\nmodel.add(Dense(25, activation='tanh',))\r\nmodel.add(Dense(25, activation='tanh',))\r\nmodel.add(Dense(25, activation='tanh',))\r\nmodel.add(Dense(1, activation='relu',))\r\nsgd = SGD(lr=0.01, momentum=0.9, nesterov=True)\r\nmodel.compile( loss = \"mean_squared_error\", \r\n               optimizer = sgd, \r\n               metrics=['accuracy']\r\n             )\r\n\r\nweights = model.layers[0].get_weights()\r\nprint(weights)\r\n\r\nmodel.fit(np.array(x), np.array(y),\r\n          batch_size=int(len(x)*0.9),epochs=5000,\r\n          )\r\n\r\nweights = model.layers[0].get_weights()\r\nprint(weights)\r\n\r\n\r\npredict = model.predict([data])\r\n\r\nfor i in range (10):\r\n    t = randint(0,len(data))\r\n    print(y[t])\r\n    testData = x[i]\r\n    print(model.predict( np.array([testData])))\r\n    \r\nplt.plot(data, predict, 'b', data , y, 'k.')\r\nplt.show()\r\nmodel.summary()` \r\n\r\n\r\n[test2.zip](https://github.com/keras-team/keras/files/4528799/test2.zip)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13987", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13987/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13987/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13987/events", "html_url": "https://github.com/keras-team/keras/issues/13987", "id": 602920216, "node_id": "MDU6SXNzdWU2MDI5MjAyMTY=", "number": 13987, "title": "Resource localhost/_AnonymousVar409/class tensorflow::Var does not exist.", "user": {"login": "kevinn888", "id": 35769683, "node_id": "MDQ6VXNlcjM1NzY5Njgz", "avatar_url": "https://avatars1.githubusercontent.com/u/35769683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinn888", "html_url": "https://github.com/kevinn888", "followers_url": "https://api.github.com/users/kevinn888/followers", "following_url": "https://api.github.com/users/kevinn888/following{/other_user}", "gists_url": "https://api.github.com/users/kevinn888/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinn888/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinn888/subscriptions", "organizations_url": "https://api.github.com/users/kevinn888/orgs", "repos_url": "https://api.github.com/users/kevinn888/repos", "events_url": "https://api.github.com/users/kevinn888/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinn888/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}, {"id": 192940628, "node_id": "MDU6TGFiZWwxOTI5NDA2Mjg=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": "User is asking for help / asking an implementation question. Stackoverflow would be better suited."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-20T03:58:00Z", "updated_at": "2020-04-28T10:23:41Z", "closed_at": "2020-04-28T10:23:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI've got an error like this\r\n\r\n```\r\ntensorflow.python.framework.errors_impl.FailedPreconditionError: 2 root error(s) found.\r\n  (0) Failed precondition:  Error while reading resource variable _AnonymousVar409 from Container: localhost. This could mean that the variable was uninitialized. Not found: Resource localhost/_AnonymousVar409/class tensorflow::Var does not exist.\r\n         [[node regr_vote/GatherV2_8/ReadVariableOp (defined at C:\\Users\\kevin\\anaconda3\\envs\\tf-gpu\\lib\\site-packages\\keras\\backend\\tensorflow_backend.py:3009) ]]\r\n         [[classify_vote/crop_to_bounding_box/ReadVariableOp_1/_122]]\r\n  (1) Failed precondition:  Error while reading resource variable _AnonymousVar409 from Container: localhost. This could mean that the variable was uninitialized. Not found: Resource localhost/_AnonymousVar409/class tensorflow::Var does not exist.\r\n         [[node regr_vote/GatherV2_8/ReadVariableOp (defined at C:\\Users\\kevin\\anaconda3\\envs\\tf-gpu\\lib\\site-packages\\keras\\backend\\tensorflow_backend.py:3009) ]]\r\n```\r\nand i know that the error pointed to my custom layer for vote pooling\r\nand this the code that has crop to bouonding box in my custom layer\r\n ```\r\nscore_map_bins = []\r\n        for channel_step in range(self.k*self.k):\r\n            bin_x = K.variable(int(channel_step % self.k) *\r\n                               self.pool_shape, dtype='int32')\r\n            bin_y = K.variable(int(channel_step / self.k) *\r\n                               self.pool_shape, dtype='int32')\r\n            channel_indices = K.variable(list(range(\r\n                channel_step*self.channel_num, (channel_step+1)*self.channel_num)), dtype='int32')\r\n            croped = tf.image.crop_to_bounding_box(\r\n                tf.gather(pooled, indices=channel_indices, axis=-1), bin_y, bin_x, self.pool_shape, self.pool_shape)\r\n            # [pool_shape, pool_shape, channel_num] ==> [1,1,channel_num] ==> [1, channel_num]\r\n            croped_mean = K.pool2d(croped, (self.pool_shape, self.pool_shape), strides=(\r\n                1, 1), padding='valid', data_format=\"channels_last\", pool_mode='avg')\r\n            # [batch * num_rois, 1,1,channel_num] ==> [batch * num_rois, 1, channel_num]\r\n            croped_mean = K.squeeze(croped_mean, axis=1)\r\n            score_map_bins.append(croped_mean)\r\n```\r\ni tried this solution from #13550 but it didn't fix my problem, any solution for this problem..??\r\ni'm using tensorflow-GPU 2.1.0 and keras 2.3.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13982", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13982/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13982/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13982/events", "html_url": "https://github.com/keras-team/keras/issues/13982", "id": 602060666, "node_id": "MDU6SXNzdWU2MDIwNjA2NjY=", "number": 13982, "title": "Adding attention to a simple CNN for crowd density ", "user": {"login": "DanyaAlfageh", "id": 45977199, "node_id": "MDQ6VXNlcjQ1OTc3MTk5", "avatar_url": "https://avatars2.githubusercontent.com/u/45977199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DanyaAlfageh", "html_url": "https://github.com/DanyaAlfageh", "followers_url": "https://api.github.com/users/DanyaAlfageh/followers", "following_url": "https://api.github.com/users/DanyaAlfageh/following{/other_user}", "gists_url": "https://api.github.com/users/DanyaAlfageh/gists{/gist_id}", "starred_url": "https://api.github.com/users/DanyaAlfageh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DanyaAlfageh/subscriptions", "organizations_url": "https://api.github.com/users/DanyaAlfageh/orgs", "repos_url": "https://api.github.com/users/DanyaAlfageh/repos", "events_url": "https://api.github.com/users/DanyaAlfageh/events{/privacy}", "received_events_url": "https://api.github.com/users/DanyaAlfageh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-17T15:33:35Z", "updated_at": "2020-04-22T15:43:22Z", "closed_at": "2020-04-22T15:43:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, this is not an issue per say but I am attempting to add attention to a https://github.com/Neerajj9/CSRNet-keras I am looking for something like this https://github.com/keras-team/keras/issues/4962  but the example here uses LTSM and my current code does not. \r\n```\r\n# Neural network model : VGG + Conv\r\nimport keras\r\nfrom keras_self_attention import SeqSelfAttention\r\ndef CrowdNet():  \r\n            #Variable Input Size\r\n            rows = None\r\n            cols = None\r\n            \r\n            #Batch Normalisation option\r\n            \r\n            batch_norm = 0\r\n            kernel = (3, 3)\r\n            init = RandomNormal(stddev=0.01)\r\n            model = Sequential() \r\n            \r\n            #custom VGG:\r\n            \r\n            if(batch_norm):\r\n                model.add(Conv2D(64, kernel_size = kernel, input_shape = (rows,cols,3),activation = 'relu', padding='same'))\r\n                model.add(BatchNormalization())\r\n                model.add(Conv2D(64, kernel_size = kernel,activation = 'relu', padding='same'))\r\n                model.add(BatchNormalization())\r\n                model.add(MaxPooling2D(strides=2))\r\n                model.add(Conv2D(128,kernel_size = kernel, activation = 'relu', padding='same'))\r\n                model.add(BatchNormalization())\r\n                model.add(Conv2D(128,kernel_size = kernel, activation = 'relu', padding='same'))\r\n                model.add(BatchNormalization())\r\n                model.add(MaxPooling2D(strides=2))\r\n                model.add(Conv2D(256,kernel_size = kernel, activation = 'relu', padding='same'))\r\n                model.add(BatchNormalization())\r\n                model.add(Conv2D(256,kernel_size = kernel, activation = 'relu', padding='same'))\r\n                model.add(BatchNormalization())\r\n                model.add(Conv2D(256,kernel_size = kernel, activation = 'relu', padding='same'))\r\n                model.add(BatchNormalization())\r\n                model.add(MaxPooling2D(strides=2))            \r\n                model.add(Conv2D(512, kernel_size = kernel,activation = 'relu', padding='same'))\r\n                model.add(BatchNormalization())\r\n                model.add(Conv2D(512, kernel_size = kernel,activation = 'relu', padding='same'))\r\n                model.add(BatchNormalization())\r\n                model.add(Conv2D(512, kernel_size = kernel,activation = 'relu', padding='same'))\r\n                model.add(BatchNormalization())\r\n                \r\n            else:\r\n                model.add(Conv2D(64, kernel_size = kernel,activation = 'relu', padding='same',input_shape = (rows, cols, 3), kernel_initializer = init))\r\n                model.add(Conv2D(64, kernel_size = kernel,activation = 'relu', padding='same', kernel_initializer = init))\r\n                model.add(MaxPooling2D(strides=2))\r\n                model.add(Conv2D(128,kernel_size = kernel, activation = 'relu', padding='same', kernel_initializer = init))\r\n                model.add(Conv2D(128,kernel_size = kernel, activation = 'relu', padding='same', kernel_initializer = init))\r\n                model.add(MaxPooling2D(strides=2))\r\n                model.add(Conv2D(256,kernel_size = kernel, activation = 'relu', padding='same', kernel_initializer = init))\r\n                model.add(Conv2D(256,kernel_size = kernel, activation = 'relu', padding='same', kernel_initializer = init))\r\n                model.add(Conv2D(256,kernel_size = kernel, activation = 'relu', padding='same', kernel_initializer = init))\r\n                model.add(MaxPooling2D(strides=2))            \r\n                model.add(Conv2D(512, kernel_size = kernel,activation = 'relu', padding='same', kernel_initializer = init))\r\n                model.add(Conv2D(512, kernel_size = kernel,activation = 'relu', padding='same', kernel_initializer = init))\r\n                model.add(Conv2D(512, kernel_size = kernel,activation = 'relu', padding='same', kernel_initializer = init))\r\n                \r\n                \r\n            #Attention\r\n            model.add(Activation('softmax')) \r\n            #model.add(Dense(128, use_bias=False, activation='tanh', name='attention_vector'))\r\n            #model.add(Conv2D(64,(1,1), padding = 'same', activation = 'softmax', kernel_initializer = init))\r\n            #model.add(Conv2D(128,(1,1), padding = 'same', activation = 'softmax', kernel_initializer = init))\r\n            \r\n            #Conv2D\r\n            model.add(Conv2D(512, (3, 3), activation='relu', dilation_rate = 2, kernel_initializer = init, padding = 'same'))\r\n            model.add(Conv2D(512, (3, 3), activation='relu', dilation_rate = 2, kernel_initializer = init, padding = 'same'))\r\n            model.add(Conv2D(512, (3, 3), activation='relu', dilation_rate = 2, kernel_initializer = init, padding = 'same'))\r\n            model.add(Conv2D(256, (3, 3), activation='relu', dilation_rate = 2, kernel_initializer = init, padding = 'same'))\r\n            model.add(Conv2D(128, (3, 3), activation='relu', dilation_rate = 2, kernel_initializer = init, padding = 'same'))\r\n            model.add(Conv2D(64, (3, 3), activation='relu', dilation_rate = 2, kernel_initializer = init, padding = 'same'))\r\n            model.add(Conv2D(1, (1, 1), activation='relu', dilation_rate = 1, kernel_initializer = init, padding = 'same'))\r\n        \r\n            sgd = adam(lr = 1e-6, decay = (5*1e-4))\r\n            model.compile(loss='binary_crossentropy',optimizer=sgd,metrics=['mse'])\r\n            \r\n            model = init_weights_vgg(model)\r\n            \r\n            return model\r\n```\r\nMy attempts are under attention. I am very very new to these types of projects hence I am unable to create a solution from the previous ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13971", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13971/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13971/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13971/events", "html_url": "https://github.com/keras-team/keras/issues/13971", "id": 600721222, "node_id": "MDU6SXNzdWU2MDA3MjEyMjI=", "number": 13971, "title": "Confused about momentum in SGD", "user": {"login": "darylchang123", "id": 60639205, "node_id": "MDQ6VXNlcjYwNjM5MjA1", "avatar_url": "https://avatars0.githubusercontent.com/u/60639205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darylchang123", "html_url": "https://github.com/darylchang123", "followers_url": "https://api.github.com/users/darylchang123/followers", "following_url": "https://api.github.com/users/darylchang123/following{/other_user}", "gists_url": "https://api.github.com/users/darylchang123/gists{/gist_id}", "starred_url": "https://api.github.com/users/darylchang123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darylchang123/subscriptions", "organizations_url": "https://api.github.com/users/darylchang123/orgs", "repos_url": "https://api.github.com/users/darylchang123/repos", "events_url": "https://api.github.com/users/darylchang123/events{/privacy}", "received_events_url": "https://api.github.com/users/darylchang123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-16T03:30:02Z", "updated_at": "2020-04-16T03:41:16Z", "closed_at": "2020-04-16T03:41:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am somewhat confused about the implementation of momentum in the SGD optimizer, specifically line 205.\r\nMy understanding of momentum is that it operates according to the following equations:\r\n\r\nv_dw := beta * v_dw + (1 - beta) * dw\r\nw := w - alpha * v_dw\r\n\r\nHowever, that does not seem to be in line with what I see here. Would anyone be able to provide an explanation?\r\n\r\nhttps://github.com/keras-team/keras/blob/7a39b6c62d43c25472b2c2476bd2a8983ae4f682/keras/optimizers.py#L205", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13969", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13969/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13969/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13969/events", "html_url": "https://github.com/keras-team/keras/issues/13969", "id": 600100070, "node_id": "MDU6SXNzdWU2MDAxMDAwNzA=", "number": 13969, "title": "Image augmentation: does it increase samples or make it different?", "user": {"login": "Lincoln93", "id": 57633792, "node_id": "MDQ6VXNlcjU3NjMzNzky", "avatar_url": "https://avatars0.githubusercontent.com/u/57633792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lincoln93", "html_url": "https://github.com/Lincoln93", "followers_url": "https://api.github.com/users/Lincoln93/followers", "following_url": "https://api.github.com/users/Lincoln93/following{/other_user}", "gists_url": "https://api.github.com/users/Lincoln93/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lincoln93/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lincoln93/subscriptions", "organizations_url": "https://api.github.com/users/Lincoln93/orgs", "repos_url": "https://api.github.com/users/Lincoln93/repos", "events_url": "https://api.github.com/users/Lincoln93/events{/privacy}", "received_events_url": "https://api.github.com/users/Lincoln93/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-15T07:59:07Z", "updated_at": "2020-04-18T17:10:59Z", "closed_at": "2020-04-18T17:10:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "As far as I know, image augmentation increases the samples. But I think I'm missing out something. It makes a different look at the samples by interpolating different image processing techniques, confusing though. If it increases the number of samples, how much it does in ImageDataGenerator? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13967", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13967/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13967/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13967/events", "html_url": "https://github.com/keras-team/keras/issues/13967", "id": 599381197, "node_id": "MDU6SXNzdWU1OTkzODExOTc=", "number": 13967, "title": "Fail to load self-defined attention layer, because I create two attention layers with different sequence length in my model", "user": {"login": "YoungXu06", "id": 14051806, "node_id": "MDQ6VXNlcjE0MDUxODA2", "avatar_url": "https://avatars3.githubusercontent.com/u/14051806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YoungXu06", "html_url": "https://github.com/YoungXu06", "followers_url": "https://api.github.com/users/YoungXu06/followers", "following_url": "https://api.github.com/users/YoungXu06/following{/other_user}", "gists_url": "https://api.github.com/users/YoungXu06/gists{/gist_id}", "starred_url": "https://api.github.com/users/YoungXu06/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YoungXu06/subscriptions", "organizations_url": "https://api.github.com/users/YoungXu06/orgs", "repos_url": "https://api.github.com/users/YoungXu06/repos", "events_url": "https://api.github.com/users/YoungXu06/events{/privacy}", "received_events_url": "https://api.github.com/users/YoungXu06/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 192940628, "node_id": "MDU6TGFiZWwxOTI5NDA2Mjg=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": "User is asking for help / asking an implementation question. Stackoverflow would be better suited."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-14T08:12:53Z", "updated_at": "2020-04-21T08:55:08Z", "closed_at": "2020-04-21T08:55:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI met this problem when I try to load a trained model, which contains a self-defined attention layer\r\n`\r\nclass Attention(Layer):\r\n    def __init__(self, step_dim=100, W_regularizer=None, b_regularizer=None, W_constraint=None, b_constraint=None, bias=True, **kwargs):\r\n        self.supports_masking = True\r\n        self.init = initializers.get('glorot_uniform')\r\n\r\n        self.W_regularizer = regularizers.get(W_regularizer)\r\n        self.b_regularizer = regularizers.get(b_regularizer)\r\n\r\n        self.W_constraint = constraints.get(W_constraint)\r\n        self.b_constraint = constraints.get(b_constraint)\r\n\r\n        self.bias = bias\r\n        self.step_dim = step_dim\r\n        self.feature_dim = 0\r\n        super(Attention, self).__init__(**kwargs)\r\n\r\n    def build(self, input_shape):\r\n        assert len(input_shape) == 3\r\n\r\n        self.W = self.add_weight((input_shape[-1],),\r\n                                initializer=self.init,\r\n                                name='{}_w'.format(self.name),\r\n                                regularizer=self.W_regularizer,\r\n                                constraint=self.W_constraint)\r\n        self.feature_dim = input_shape[-1]\r\n\r\n        if self.bias:\r\n            self.b = self.add_weight((input_shape[1],),\r\n                                    initializer='zero',\r\n                                    name='{}_b'.format(self.name),\r\n                                    regularizer=self.b_regularizer,\r\n                                    constraint=self.b_constraint)\r\n        else:\r\n            self.b = None\r\n\r\n        self.built = True\r\n\r\n    def compute_mask(self, input, input_mask=None):\r\n        return None\r\n\r\n    def call(self, x, mask=None):\r\n        feature_dim = self.feature_dim\r\n        step_dim = self.step_dim\r\n\r\n        eij = K.reshape(K.dot(K.reshape(x, (-1, feature_dim)), K.reshape(self.W, (feature_dim, 1))), (-1, step_dim))\r\n\r\n        if self.bias:\r\n            eij += self.b\r\n\r\n        eij = K.tanh(eij)\r\n\r\n        a = K.exp(eij)\r\n\r\n        if mask is not None:\r\n            a *= K.cast(mask, K.floatx())\r\n\r\n        a /= K.cast(K.sum(a, axis=1, keepdims=True) + K.epsilon(), K.floatx())\r\n\r\n        a = K.expand_dims(a)\r\n        weighted_input = x * a\r\n\r\n        return K.sum(weighted_input, axis=1)\r\n\r\n    def compute_output_shape(self, input_shape):\r\n        return input_shape[0], self.feature_dim`\r\n\r\nAnd I create two attention layers with different step_dim(Attention(JD_MAX_LEN) and Attention(RESUME_MAX_LEN)) in my model for sentimental matching task.\r\n\r\n`\r\ndef LSTM_DSSM_model(jd_max_len, resume_max_len, emb_dim, lstm_dim=100, dense_dims=[100, 50], lr=1e-3, cnn_dropout=1, dense_dropout=1):\r\n    # Input\r\n    w_j_input = Input(shape=(jd_max_len, emb_dim), dtype='float32', name='jd_seq')\r\n    w_r_input = Input(shape=(resume_max_len, emb_dim), dtype='float32', name='resume_seq')\r\n    \r\n    topic_j_input = Input(shape=(topic_num*2,), dtype='float32', name='jd_topic')\r\n    topic_r_input = Input(shape=(topic_num*2,), dtype='float32', name='resume_topic')\r\n    \r\n    # BN\r\n    w_bn = BatchNormalization()\r\n    w_j_vector = w_bn(w_j_input)\r\n    w_r_vector = w_bn(w_r_input)    \r\n    # LSTM\r\n    j_lstm = Bidirectional(CuDNNLSTM(lstm_dim, return_sequences=True))(w_j_vector)\r\n    j_att = Attention(JD_MAX_LEN)(j_lstm)\r\n    \r\n    r_lstm = Bidirectional(CuDNNLSTM(lstm_dim, return_sequences=True))(w_r_vector)\r\n    r_att = Attention(RESUME_MAX_LEN)(r_lstm)\r\n    \r\n    # Concate\r\n    all_feat = concatenate([j_att, r_att, topic_j_input, topic_r_input], axis=-1)\r\n    \r\n    # ------- Classifier \r\n    merged = BatchNormalization()(all_feat)\r\n    dense = Dense(dense_dims[0], activation='relu')(merged)\r\n    dense = BatchNormalization()(dense)\r\n    dense = Dropout(dense_dropout)(dense)\r\n    dense = Dense(dense_dims[1], activation='relu')(dense)\r\n    dense = BatchNormalization()(dense)\r\n    dense = Dropout(dense_dropout)(dense)\r\n    \r\n    output = Dense(1, activation='sigmoid')(dense)\r\n    \r\n    # Model\r\n    model = Model(inputs=[w_j_input, w_r_input, topic_j_input, topic_r_input], outputs=output)\r\n    model.compile(optimizer=Adam(lr=lr), loss='binary_crossentropy', metrics=['accuracy'])\r\n    print(model.summary())\r\n    return model`\r\n\r\nAfter training, I load the model with `dssm_model = load_model('xxx.model', custom_objects={'Attention': Attention})`\r\nIt throws the error: `ValueError: Dimensions must be equal, but are 100 and 700 for 'attention_4_2/add' (op: 'Add') with input shapes: [?,100], [700]`. Because two attention layers' step_dim in my model are 100 and 700, initial step_dim set to 100 or 700 don't work here. \r\nAnd if don't initialize step_dim with any value, it throws this error: `TypeError: __init__() missing 1 required positional argument: 'step_dim'`.\r\nHow can I solve this problem? THX! ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13940", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13940/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13940/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13940/events", "html_url": "https://github.com/keras-team/keras/issues/13940", "id": 595018630, "node_id": "MDU6SXNzdWU1OTUwMTg2MzA=", "number": 13940, "title": "ValueError: Failed to convert a NumPy array to a Tensor (Unsupported object type list).", "user": {"login": "bigboy32", "id": 34939884, "node_id": "MDQ6VXNlcjM0OTM5ODg0", "avatar_url": "https://avatars0.githubusercontent.com/u/34939884?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bigboy32", "html_url": "https://github.com/bigboy32", "followers_url": "https://api.github.com/users/bigboy32/followers", "following_url": "https://api.github.com/users/bigboy32/following{/other_user}", "gists_url": "https://api.github.com/users/bigboy32/gists{/gist_id}", "starred_url": "https://api.github.com/users/bigboy32/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bigboy32/subscriptions", "organizations_url": "https://api.github.com/users/bigboy32/orgs", "repos_url": "https://api.github.com/users/bigboy32/repos", "events_url": "https://api.github.com/users/bigboy32/events{/privacy}", "received_events_url": "https://api.github.com/users/bigboy32/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}, {"id": 192940628, "node_id": "MDU6TGFiZWwxOTI5NDA2Mjg=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": "User is asking for help / asking an implementation question. Stackoverflow would be better suited."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-06T11:04:23Z", "updated_at": "2020-08-17T18:29:42Z", "closed_at": "2020-08-17T18:29:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "<em>Hello, I have problems using Tensorflow:</em>  \r\n\r\n**System info: **  \r\n- Windows 10\r\n- Tensorflow 2.1.0\r\n- Keras 2.3.1\r\n- Python 3\r\n- CUDNN version: 10.1\r\n- Nvidia RTX 2080 with 8 or 6 GB VRAM\r\n\r\nI was using a text file and got data out of it.\r\nThe data was a text for a chatbot.\r\nI then created a Dictionary with all the words of the text and gave them numbers.\r\nThen i replaced the words with numbers.\r\n\r\nIt gave me an error saying : ValueError: Failed to convert a NumPy array to a Tensor (Unsupported object type list).\r\n\r\nOf course, i converted the Labels (X) and the features (Y) to np.arrays() \r\n\r\nMy code:\r\n\r\n`import nltk\r\n\r\nfrom tensorflow.keras.layers import *\r\nfrom tensorflow.keras.models import Sequential\r\n\r\nfrom nltk.tokenize import word_tokenize\r\n\r\nfrom sklearn.preprocessing import StandardScaler\r\n\r\nimport tensorflow as tf\r\n\r\nimport csv\r\n\r\nimport tqdm\r\n\r\nimport pickle\r\n\r\nX = []\r\nY = []\r\n\r\nrn = 0\r\n\r\nLearnedWords = {}\r\n\r\n\r\nLearnedWordsIndex = 0\r\n\r\ndef CreateLearnedWords(X, Y, outWordDict, outWordIndex):\r\n\r\n    for sent in X:\r\n\r\n        for word in sent:\r\n\r\n            outWordDict[word] = outWordIndex\r\n            outWordIndex += 1\r\n\r\n    for sent in Y:\r\n\r\n        for word in sent:\r\n\r\n            outWordDict[word] = outWordIndex\r\n            outWordIndex += 1\r\n\r\n\r\ntry:\r\n\r\n    X = pickle.load(open(\"X.pkl\", \"rb\").read())\r\n    Y = pickle.load(open(\"Y.pkl\", \"rb\").read())\r\n\r\n    Z = pickle.sayhello\r\n\r\nexcept:\r\n\r\n    with open(\"Datasets/conversation1.txt\", 'r') as file:\r\n\r\n        for item in file:\r\n\r\n            if item == \"\" or item == \"\\n\":\r\n\r\n                pass\r\n            elif \":\" not in item and rn == 1:\r\n\r\n                Y.append(item)\r\n            elif rn == 0:\r\n                X.append(item.split(': '))\r\n                rn = 1\r\n            else:\r\n                Y.append(item.split(\": \"))\r\n                rn = 0\r\n\r\n    if rn == 1:\r\n\r\n        rn = 0\r\n    with open(\"Datasets/conversation2.txt\", 'r') as file:\r\n\r\n        for item in file:\r\n\r\n\r\n\r\n            if item == \"\" or item == \"\\n\":\r\n\r\n                pass\r\n            elif \":\" not in item and rn == 1:\r\n\r\n                Y.append(item)\r\n            elif rn == 0:\r\n                X.append(item.split(': '))\r\n                rn = 1\r\n            else:\r\n                Y.append(item.split(\": \"))\r\n                rn = 0\r\n\r\n    if rn == 1:\r\n\r\n        rn = 0\r\n\r\n    with open(\"Datasets/conversation3.txt\", 'r') as file:\r\n\r\n        for item in file:\r\n\r\n\r\n\r\n            if item == \"\" or item == \"\\n\":\r\n\r\n                pass\r\n            elif \":\" not in item and rn == 1:\r\n\r\n                Y.append(item)\r\n            elif rn == 0:\r\n                X.append(item.split(': '))\r\n                rn = 1\r\n            else:\r\n                Y.append(item.split(\": \"))\r\n                rn = 0\r\n\r\n    del(rn)\r\n\r\n    TokenizedY = []\r\n    TokenizedX = []\r\n\r\n\r\n    for item in Y:\r\n        tokY = word_tokenize(str(item))\r\n\r\n        words = [word for word in tokY if word.isalpha()]\r\n\r\n        TokenizedY.append(words)\r\n\r\n    for item in X:\r\n\r\n        tokX = word_tokenize(str(item))\r\n\r\n        words = [word for word in tokX if word.isalpha()]\r\n\r\n        TokenizedX.append(words)\r\n\r\n    Y = TokenizedY\r\n    X = TokenizedX\r\n\r\n    CreateLearnedWords(X, Y, LearnedWords, LearnedWordsIndex)\r\n\r\n    for sent in X:\r\n\r\n        for word in sent:\r\n\r\n            sent[sent.index(word)] = LearnedWords[word]\r\n\r\n    for sent in Y:\r\n\r\n        for word in sent:\r\n\r\n            sent[sent.index(word)] = LearnedWords[word]\r\n\r\n    print(X)\r\n\r\n    pickle.dump(X, open(\"X.pkl\", \"wb\"))\r\n    pickle.dump(Y, open(\"Y.pkl\", \"wb\"))\r\n\r\n\r\n\r\ntb = tf.keras.callbacks.TensorBoard(log_dir=\"logs/\")\r\n\r\nimport numpy as np\r\n\r\nmodel = Sequential()\r\n\r\nmodel.add(Embedding(1000, 10))\r\n\r\nmodel.add(GlobalAveragePooling1D())\r\n\r\nmodel.add(Dense(16))\r\nmodel.add(Activation(\"relu\"))\r\n\r\nmodel.add(Dense(1))\r\nmodel.add(Activation(\"sigmoid\"))\r\n\r\n\r\nmodel.compile(loss=\"categorical_hinge\", optimizer=\"rmsprop\")\r\n\r\nY = Y[:len(Y)-4]\r\n\r\nX = np.asarray(X)\r\n\r\nY = np.asarray(Y)\r\n\r\nprint(type(Y))\r\n\r\nmodel.fit(X,Y , epochs=1000)\r\n\r\ntb = tf.keras.callbacks.TensorBoard(logdir=\"logs/\")`\r\n\r\nSorry if the code is long, i really don't know where the error is coming from.\r\n\r\nThanks for all answers!!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13931", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13931/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13931/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13931/events", "html_url": "https://github.com/keras-team/keras/issues/13931", "id": 592389788, "node_id": "MDU6SXNzdWU1OTIzODk3ODg=", "number": 13931, "title": "Weighted Sample Loss ", "user": {"login": "Arktius", "id": 31614164, "node_id": "MDQ6VXNlcjMxNjE0MTY0", "avatar_url": "https://avatars3.githubusercontent.com/u/31614164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Arktius", "html_url": "https://github.com/Arktius", "followers_url": "https://api.github.com/users/Arktius/followers", "following_url": "https://api.github.com/users/Arktius/following{/other_user}", "gists_url": "https://api.github.com/users/Arktius/gists{/gist_id}", "starred_url": "https://api.github.com/users/Arktius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Arktius/subscriptions", "organizations_url": "https://api.github.com/users/Arktius/orgs", "repos_url": "https://api.github.com/users/Arktius/repos", "events_url": "https://api.github.com/users/Arktius/events{/privacy}", "received_events_url": "https://api.github.com/users/Arktius/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-02T06:28:12Z", "updated_at": "2020-04-05T05:47:43Z", "closed_at": "2020-04-05T05:47:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to build a loss that puts individual weights to each sample and works not only during training. It should also work for validation and test set.\r\n\r\nWhat I've tried so far:\r\n\r\n```\r\n    def MMSE2(targets, preds,sample_weight): \r\n        #some calculations...       \r\n        return loss\r\n\r\n\r\n    input_dim = Input(shape = (dim, ),name='rating_in')\r\n    weights_tensor = Input(shape=(dim,),name='weights')\r\n    \r\n    encoder,decoder = AddLayers(neurons,setup['AFunction'],\r\n                                 setup['BatchNorm'],setup['Dropout'],setup['Layers'],dim,setup['Noise'])\r\n    \r\n    encoded = encoder(input_dim)    \r\n    decoded = decoder(encoded)\r\n\r\n    autoencoder = Model([input_dim,weights_tensor], decoded)\r\n    autoencoder.add_loss(MMSE2(input_dim,decoded,weights_tensor))\r\n    autoencoder.compile(optimizer='adam')\r\n    \r\n    \r\n    history = autoencoder.fit(x=[helper.trainx,helper.trainy,helper.trainm],\r\n                              validation_data= [helper.valx,helper.valy,helper.valm],\r\n                              epochs = setup['Epochs'], batch_size = setup['BatchSize'])\r\n```\r\n\r\nIt works without validation data.\r\n\r\nError with validation data:\r\n\r\n```\r\n\r\n  File \"<ipython-input-11-fe466c688bcd>\", line 3, in <module>\r\n    epochs = setup['Epochs'], batch_size = setup['BatchSize'])\r\n\r\n  File \"C:\\Users\\Admin\\Anaconda3\\envs\\tf21\\lib\\site-packages\\tensorflow_core\\python\\keras\\engine\\training.py\", line 819, in fit\r\n    use_multiprocessing=use_multiprocessing)\r\n\r\n  File \"C:\\Users\\Admin\\Anaconda3\\envs\\tf21\\lib\\site-packages\\tensorflow_core\\python\\keras\\engine\\training_v2.py\", line 235, in fit\r\n    use_multiprocessing=use_multiprocessing)\r\n\r\n  File \"C:\\Users\\Admin\\Anaconda3\\envs\\tf21\\lib\\site-packages\\tensorflow_core\\python\\keras\\engine\\training_v2.py\", line 614, in _process_training_inputs\r\n    distribution_strategy=distribution_strategy)\r\n\r\n  File \"C:\\Users\\Admin\\Anaconda3\\envs\\tf21\\lib\\site-packages\\tensorflow_core\\python\\keras\\engine\\training_v2.py\", line 646, in _process_inputs\r\n    x, y, sample_weight=sample_weights)\r\n\r\n  File \"C:\\Users\\Admin\\Anaconda3\\envs\\tf21\\lib\\site-packages\\tensorflow_core\\python\\keras\\engine\\training.py\", line 2383, in _standardize_user_data\r\n    batch_size=batch_size)\r\n\r\n  File \"C:\\Users\\Admin\\Anaconda3\\envs\\tf21\\lib\\site-packages\\tensorflow_core\\python\\keras\\engine\\training.py\", line 2410, in _standardize_tensors\r\n    exception_prefix='input')\r\n\r\n  File \"C:\\Users\\Admin\\Anaconda3\\envs\\tf21\\lib\\site-packages\\tensorflow_core\\python\\keras\\engine\\training_utils.py\", line 539, in standardize_input_data\r\n    str(data)[:200] + '...')\r\n\r\nValueError: Error when checking model input: \r\nthe list of Numpy arrays that you are passing to your model is not the size the model expected. \r\nExpected to see 2 array(s), for inputs ['rating_in', 'weights'] \r\nbut instead got the following list of 1 arrays: [array([[0., 0., 0., ..., 0., 0., 0.],\r\n       [0., 0., 0., ..., 0., 0., 0.],\r\n       [0., 0., 0., ..., 0., 0., 0.],\r\n       ...,\r\n       [0., 0., 0., ..., 0., 0., 0.],\r\n       [0., 0., 0., ..., 0., 0., 5....\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13930", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13930/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13930/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13930/events", "html_url": "https://github.com/keras-team/keras/issues/13930", "id": 592098434, "node_id": "MDU6SXNzdWU1OTIwOTg0MzQ=", "number": 13930, "title": "tensorflow testing", "user": {"login": "rthadur", "id": 43972606, "node_id": "MDQ6VXNlcjQzOTcyNjA2", "avatar_url": "https://avatars2.githubusercontent.com/u/43972606?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rthadur", "html_url": "https://github.com/rthadur", "followers_url": "https://api.github.com/users/rthadur/followers", "following_url": "https://api.github.com/users/rthadur/following{/other_user}", "gists_url": "https://api.github.com/users/rthadur/gists{/gist_id}", "starred_url": "https://api.github.com/users/rthadur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rthadur/subscriptions", "organizations_url": "https://api.github.com/users/rthadur/orgs", "repos_url": "https://api.github.com/users/rthadur/repos", "events_url": "https://api.github.com/users/rthadur/events{/privacy}", "received_events_url": "https://api.github.com/users/rthadur/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-01T17:55:54Z", "updated_at": "2020-04-01T17:56:20Z", "closed_at": "2020-04-01T17:56:20Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "<em>Please make sure that this is a Bug or a Feature Request and provide all applicable information asked by the template.tensorflow\r\nIf your issue is an **implementation question**, please ask your question on [StackOverflow](http://stackoverflow.com/questions/tagged/keras) or [on the Keras Slack channel](https://keras-slack-autojoin.herokuapp.com/) instead of opening a GitHub issue.</em>  \r\n\r\n**System information**  \r\n- Have I written custom code (as opposed to using example directory):  \r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  \r\n- TensorFlow backend (yes / no):  \r\n- TensorFlow version:  \r\n- Keras version:  \r\n- Python version:  \r\n- CUDA/cuDNN version:  \r\n- GPU model and memory:  \r\n\r\nYou can obtain the TensorFlow version with:  \r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"  \r\nYou can obtain the Keras version with:  \r\npython -c 'import keras as k; print(k.__version__)'  \r\n\r\n**Describe the current behavior**  \r\n\r\n**Describe the expected behavior**  \r\n\r\n**Code to reproduce the issue**  \r\nProvide a reproducible test case that is the bare minimum necessary to generate the problem.  \r\n\r\n**Other info / logs**  \r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.  \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13927", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13927/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13927/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13927/events", "html_url": "https://github.com/keras-team/keras/issues/13927", "id": 591445238, "node_id": "MDU6SXNzdWU1OTE0NDUyMzg=", "number": 13927, "title": "Adaptive dropout rate", "user": {"login": "dervishson", "id": 32873956, "node_id": "MDQ6VXNlcjMyODczOTU2", "avatar_url": "https://avatars3.githubusercontent.com/u/32873956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dervishson", "html_url": "https://github.com/dervishson", "followers_url": "https://api.github.com/users/dervishson/followers", "following_url": "https://api.github.com/users/dervishson/following{/other_user}", "gists_url": "https://api.github.com/users/dervishson/gists{/gist_id}", "starred_url": "https://api.github.com/users/dervishson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dervishson/subscriptions", "organizations_url": "https://api.github.com/users/dervishson/orgs", "repos_url": "https://api.github.com/users/dervishson/repos", "events_url": "https://api.github.com/users/dervishson/events{/privacy}", "received_events_url": "https://api.github.com/users/dervishson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 192940628, "node_id": "MDU6TGFiZWwxOTI5NDA2Mjg=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": "User is asking for help / asking an implementation question. Stackoverflow would be better suited."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-31T21:33:48Z", "updated_at": "2020-04-13T03:03:19Z", "closed_at": "2020-04-13T03:03:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\nI would like to create my own custom callback for dropout rate. And my code is seen below:\r\n\r\nfrom keras import backend\r\nfrom keras.callbacks import Callback\r\n\r\nclass MyDropCallback(Callback):\r\ndef init(self,dropping_rate):\r\nself.dropping_rate=dropping_rate\r\n\r\ndef updating_mydroprate(self,epoch,dropping_rate):\r\n    if epoch==35:\r\n        dropping_rate=0.65\r\n    elif epoch==60:\r\n        dropping_rate=0.75\r\n    elif epoch==80:\r\n        dropping_rate=0.8\r\n\r\ndef on_epoch_begin(self,epoch,logs=None):\r\n    dropping_rate=self.updating_mydroprate(epoch,self.dropping_rate)\r\n    backend.set_value(self.model.layers[-3].rate, dropping_rate)\r\n\r\nIt returns the error:\r\n    679     {{np_implementation}}\r\n    680     \"\"\"\r\n--> 681     return x.dtype.base_dtype.name\r\n    682 \r\n    683 \r\n\r\n**AttributeError: 'float' object has no attribute 'dtype'**\r\nHow can i fix the problem?\r\n@mvaldenegro\r\n@the-moliver\r\n@bobchennan\r\n\r\nThanks for helps.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13921", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13921/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13921/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13921/events", "html_url": "https://github.com/keras-team/keras/issues/13921", "id": 590077717, "node_id": "MDU6SXNzdWU1OTAwNzc3MTc=", "number": 13921, "title": "Results are not reproducible with adam / rmsprop optimizer", "user": {"login": "Arktius", "id": 31614164, "node_id": "MDQ6VXNlcjMxNjE0MTY0", "avatar_url": "https://avatars3.githubusercontent.com/u/31614164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Arktius", "html_url": "https://github.com/Arktius", "followers_url": "https://api.github.com/users/Arktius/followers", "following_url": "https://api.github.com/users/Arktius/following{/other_user}", "gists_url": "https://api.github.com/users/Arktius/gists{/gist_id}", "starred_url": "https://api.github.com/users/Arktius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Arktius/subscriptions", "organizations_url": "https://api.github.com/users/Arktius/orgs", "repos_url": "https://api.github.com/users/Arktius/repos", "events_url": "https://api.github.com/users/Arktius/events{/privacy}", "received_events_url": "https://api.github.com/users/Arktius/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}, {"id": 192940628, "node_id": "MDU6TGFiZWwxOTI5NDA2Mjg=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": "User is asking for help / asking an implementation question. Stackoverflow would be better suited."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-30T08:03:13Z", "updated_at": "2020-04-19T11:55:54Z", "closed_at": "2020-04-19T11:55:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi folks, I'm training lots of models and try to optimize certain hyperparameters. After running the code several times, I noticed that I get different results(RMSE accuracy) when using the adam or rmsprop optimizer. The RMSE usually lies between 0 and 1. The model is a deep Autoencoder which tries to fill missing values. Missing values are represented by zeros. I've mapped 20% of my data to zero. So it's job is to reconstruct the 20%.\r\n\r\n**System information**  \r\nWindows 10 Microsoft Windows [Version 10.0.18362.418]\r\n- TensorFlow backend (yes / no):  yes\r\n- TensorFlow version:  2.1\r\n- Keras version:  \r\n-- keras-applications        1.0.8                      py_0\r\n-- keras-preprocessing       1.1.0                      py_1\r\n- Python version:  3.7.6\r\n- CUDA/cuDNN version:   Cuda compilation tools, release 10.0, V10.0.130\r\n- GPU model and memory: NVIDIA 2060 Super 8GB\r\n\r\n**Describe the current behavior**  \r\nWhen I train a model with either the adam or rmsprop optimizer, I get different results with each run. Random seed is set exactly before creating the model. **Other optimizers work flawlessly** .\r\n\r\nWhat I've tested so far:\r\n\r\n- Cast input data to float64\r\n- Set tf.keras.mixed_precision.experimental.Policy('float64')\r\n- Increasing tf.keras.backend.set_epsilon() up to 1e-3\r\n- **I've also set the parameter epsilon of the optimizer to 1, 10 or even 50 and this seemed to solve this issue often, but I don't understand why. The parameter helps to avoid divisions by zero. Does it mean that my gradients are really close to zero because most of the data is zero?**\r\n- Set tf.keras.backend.set_floatx('float64')\r\n- Batch Normalization on or off\r\n\r\nFurther information:\r\n\r\n- Data are highly sparse (>90% is zero)\r\n- Data lie between 0 and 5 in steps of 0.5 or 1\r\n- Activation functions: 'elu','relu','selu','sigmoid','softplus','softsign','tanh'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13913", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13913/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13913/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13913/events", "html_url": "https://github.com/keras-team/keras/issues/13913", "id": 588804980, "node_id": "MDU6SXNzdWU1ODg4MDQ5ODA=", "number": 13913, "title": "tensorflow test", "user": {"login": "tensorflowbutler", "id": 28546240, "node_id": "MDQ6VXNlcjI4NTQ2MjQw", "avatar_url": "https://avatars2.githubusercontent.com/u/28546240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tensorflowbutler", "html_url": "https://github.com/tensorflowbutler", "followers_url": "https://api.github.com/users/tensorflowbutler/followers", "following_url": "https://api.github.com/users/tensorflowbutler/following{/other_user}", "gists_url": "https://api.github.com/users/tensorflowbutler/gists{/gist_id}", "starred_url": "https://api.github.com/users/tensorflowbutler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tensorflowbutler/subscriptions", "organizations_url": "https://api.github.com/users/tensorflowbutler/orgs", "repos_url": "https://api.github.com/users/tensorflowbutler/repos", "events_url": "https://api.github.com/users/tensorflowbutler/events{/privacy}", "received_events_url": "https://api.github.com/users/tensorflowbutler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-27T00:19:42Z", "updated_at": "2020-03-27T00:20:00Z", "closed_at": "2020-03-27T00:20:00Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "<em>Please make sure that this is a Bug or a Feature Request and provide all applicable information asked by the template.\r\nIf your issue is an **implementation question**, please ask your question on [StackOverflow](http://stackoverflow.com/questions/tagged/keras) or [on the Keras Slack channel](https://keras-slack-autojoin.herokuapp.com/) instead of opening a GitHub issue.</em>  \r\n\r\n**System information**  \r\n- Have I written custom code (as opposed to using example directory):  \r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  \r\n- TensorFlow backend (yes / no):  \r\n- TensorFlow version:  \r\n- Keras version:  \r\n- Python version:  \r\n- CUDA/cuDNN version:  \r\n- GPU model and memory:  \r\n\r\nYou can obtain the TensorFlow version with:  \r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"  \r\nYou can obtain the Keras version with:  \r\npython -c 'import keras as k; print(k.__version__)'  \r\n\r\n**Describe the current behavior**  \r\n\r\n**Describe the expected behavior**  \r\n\r\n**Code to reproduce the issue**  \r\nProvide a reproducible test case that is the bare minimum necessary to generate the problem.  \r\n\r\n**Other info / logs**  \r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.  \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13912", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13912/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13912/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13912/events", "html_url": "https://github.com/keras-team/keras/issues/13912", "id": 588742105, "node_id": "MDU6SXNzdWU1ODg3NDIxMDU=", "number": 13912, "title": "tensorflow", "user": {"login": "tensorflowbutler", "id": 28546240, "node_id": "MDQ6VXNlcjI4NTQ2MjQw", "avatar_url": "https://avatars2.githubusercontent.com/u/28546240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tensorflowbutler", "html_url": "https://github.com/tensorflowbutler", "followers_url": "https://api.github.com/users/tensorflowbutler/followers", "following_url": "https://api.github.com/users/tensorflowbutler/following{/other_user}", "gists_url": "https://api.github.com/users/tensorflowbutler/gists{/gist_id}", "starred_url": "https://api.github.com/users/tensorflowbutler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tensorflowbutler/subscriptions", "organizations_url": "https://api.github.com/users/tensorflowbutler/orgs", "repos_url": "https://api.github.com/users/tensorflowbutler/repos", "events_url": "https://api.github.com/users/tensorflowbutler/events{/privacy}", "received_events_url": "https://api.github.com/users/tensorflowbutler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-26T21:31:07Z", "updated_at": "2020-03-26T21:32:10Z", "closed_at": "2020-03-26T21:32:10Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "<em>Please make sure that this is a Bug or a Feature Request and provide all applicable information asked by the template.\r\nIf your issue is an **implementation question**, please ask your question on [StackOverflow](http://stackoverflow.com/questions/tagged/keras) or [on the Keras Slack channel](https://keras-slack-autojoin.herokuapp.com/) instead of opening a GitHub issue.</em>  \r\n\r\n**System information**  \r\n- Have I written custom code (as opposed to using example directory):  \r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  \r\n- TensorFlow backend (yes / no):  \r\n- TensorFlow version:  \r\n- Keras version:  \r\n- Python version:  \r\n- CUDA/cuDNN version:  \r\n- GPU model and memory:  \r\n\r\nYou can obtain the TensorFlow version with:  \r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"  \r\nYou can obtain the Keras version with:  \r\npython -c 'import keras as k; print(k.__version__)'  \r\n\r\n**Describe the current behavior**  \r\n\r\n**Describe the expected behavior**  \r\n\r\n**Code to reproduce the issue**  \r\nProvide a reproducible test case that is the bare minimum necessary to generate the problem.  \r\n\r\n**Other info / logs**  \r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.  \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13909", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13909/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13909/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13909/events", "html_url": "https://github.com/keras-team/keras/issues/13909", "id": 586479310, "node_id": "MDU6SXNzdWU1ODY0NzkzMTA=", "number": 13909, "title": "Switch Keras backend to Numpy", "user": {"login": "raselldev", "id": 29136223, "node_id": "MDQ6VXNlcjI5MTM2MjIz", "avatar_url": "https://avatars0.githubusercontent.com/u/29136223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raselldev", "html_url": "https://github.com/raselldev", "followers_url": "https://api.github.com/users/raselldev/followers", "following_url": "https://api.github.com/users/raselldev/following{/other_user}", "gists_url": "https://api.github.com/users/raselldev/gists{/gist_id}", "starred_url": "https://api.github.com/users/raselldev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raselldev/subscriptions", "organizations_url": "https://api.github.com/users/raselldev/orgs", "repos_url": "https://api.github.com/users/raselldev/repos", "events_url": "https://api.github.com/users/raselldev/events{/privacy}", "received_events_url": "https://api.github.com/users/raselldev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 192940628, "node_id": "MDU6TGFiZWwxOTI5NDA2Mjg=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": "User is asking for help / asking an implementation question. Stackoverflow would be better suited."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-23T19:54:24Z", "updated_at": "2020-04-05T12:31:01Z", "closed_at": "2020-04-05T12:31:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nCan i switch Numpy for Keras backend?\r\nbecause i need learn numpy backend without tf, theano, or cntk.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13901", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13901/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13901/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13901/events", "html_url": "https://github.com/keras-team/keras/issues/13901", "id": 584580899, "node_id": "MDU6SXNzdWU1ODQ1ODA4OTk=", "number": 13901, "title": "tensorflow.python.framework.errors_impl.InvalidArgumentError: Tensor conv2d_1_input:0, specified in either feed_devices or fetch_devices was not found in the Graph", "user": {"login": "Ananthan4451", "id": 53935566, "node_id": "MDQ6VXNlcjUzOTM1NTY2", "avatar_url": "https://avatars0.githubusercontent.com/u/53935566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ananthan4451", "html_url": "https://github.com/Ananthan4451", "followers_url": "https://api.github.com/users/Ananthan4451/followers", "following_url": "https://api.github.com/users/Ananthan4451/following{/other_user}", "gists_url": "https://api.github.com/users/Ananthan4451/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ananthan4451/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ananthan4451/subscriptions", "organizations_url": "https://api.github.com/users/Ananthan4451/orgs", "repos_url": "https://api.github.com/users/Ananthan4451/repos", "events_url": "https://api.github.com/users/Ananthan4451/events{/privacy}", "received_events_url": "https://api.github.com/users/Ananthan4451/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-19T17:33:04Z", "updated_at": "2020-03-19T18:23:58Z", "closed_at": "2020-03-19T18:23:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, i'm using keras and tensorflow for this code\r\n```\r\nfrom flask import Flask, request, jsonify, render_template\r\nimport numpy\r\nfrom PIL import Image\r\nimport os\r\nimport tensorflow.keras\r\nfrom werkzeug.utils import secure_filename\r\nfrom keras.models import load_model\r\n\r\napp = Flask(__name__)\r\n\r\nmodel = load_model('traffic_classifier.h5')\r\nmodel._make_predict_function()\r\nclasses = { 1:'Speed limit (20km/h)',\r\n            2:'Speed limit (30km/h)',      \r\n            3:'Speed limit (50km/h)',       \r\n            4:'Speed limit (60km/h)',      \r\n            5:'Speed limit (70km/h)',    \r\n            6:'Speed limit (80km/h)',      \r\n            7:'End of speed limit (80km/h)',     \r\n            8:'Speed limit (100km/h)',    \r\n            9:'Speed limit (120km/h)',     \r\n           10:'No passing',   \r\n           11:'No passing veh over 3.5 tons',     \r\n           12:'Right-of-way at intersection',     \r\n           13:'Priority road',    \r\n           14:'Yield',     \r\n           15:'Stop',       \r\n           16:'No vehicles',       \r\n           17:'Veh > 3.5 tons prohibited',       \r\n           18:'No entry',       \r\n           19:'General caution',     \r\n           20:'Dangerous curve left',      \r\n           21:'Dangerous curve right',   \r\n           22:'Double curve',      \r\n           23:'Bumpy road',     \r\n           24:'Slippery road',       \r\n           25:'Road narrows on the right',  \r\n           26:'Road work',    \r\n           27:'Traffic signals',      \r\n           28:'Pedestrians',     \r\n           29:'Children crossing',     \r\n           30:'Bicycles crossing',       \r\n           31:'Beware of ice/snow',\r\n           32:'Wild animals crossing',      \r\n           33:'End speed + passing limits',      \r\n           34:'Turn right ahead',     \r\n           35:'Turn left ahead',       \r\n           36:'Ahead only',      \r\n           37:'Go straight or right',      \r\n           38:'Go straight or left',      \r\n           39:'Keep right',     \r\n           40:'Keep left',      \r\n           41:'Roundabout mandatory',     \r\n           42:'End of no passing',      \r\n           43:'End no passing veh > 3.5 tons' }\r\n\r\n@app.route('/')\r\ndef index():\r\n    # Main page\r\n    return render_template('index.html')\r\n\r\n@app.route('/traffic')\r\ndef traffic():\r\n    # Main page\r\n    return render_template('traffic.html')\r\n\r\n@app.route('/sleep')\r\ndef sleep():\r\n    # Main page\r\n    return render_template('sleep.html')\r\n\r\n@app.route('/predict',methods=['POST'])\r\ndef predict():\r\n    '''\r\n    For rendering results on HTML GUI\r\n    '''\r\n    if request. method == \"POST\":\r\n        #image=request. form[\"fileupload\"]\r\n    \r\n        f = request.files['file']\r\n\r\n        # Save the file to ./uploads\r\n        basepath = os.path.dirname(__file__)\r\n        file_path = os.path.join(\r\n            basepath, 'uploads', secure_filename(f.filename))\r\n        f.save(file_path)  \r\n    \r\n   \r\n    image = Image.open(file_path)\r\n    image = image.resize((30,30))\r\n    image = numpy.expand_dims(image, axis=0)\r\n    image = numpy.array(image)\r\n\r\n    pred = model.predict_classes([image])[0]\r\n   \r\n    sign = classes[pred+1]\r\n\r\n\r\n    \r\n    \r\n\r\n    return render_template('traffic.html', prediction_text='This sign represents {}'.format(sign))\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    app.run(debug=True)\r\n```\r\n\r\n\r\nit shows the error \r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Tensor conv2d_1_input:0, specified in either feed_devices or fetch_devices was not found in the Graph\r\n\r\nplease help me on this\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13888", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13888/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13888/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13888/events", "html_url": "https://github.com/keras-team/keras/issues/13888", "id": 579551393, "node_id": "MDU6SXNzdWU1Nzk1NTEzOTM=", "number": 13888, "title": "Hi ", "user": {"login": "sumannelli", "id": 32793480, "node_id": "MDQ6VXNlcjMyNzkzNDgw", "avatar_url": "https://avatars2.githubusercontent.com/u/32793480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumannelli", "html_url": "https://github.com/sumannelli", "followers_url": "https://api.github.com/users/sumannelli/followers", "following_url": "https://api.github.com/users/sumannelli/following{/other_user}", "gists_url": "https://api.github.com/users/sumannelli/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumannelli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumannelli/subscriptions", "organizations_url": "https://api.github.com/users/sumannelli/orgs", "repos_url": "https://api.github.com/users/sumannelli/repos", "events_url": "https://api.github.com/users/sumannelli/events{/privacy}", "received_events_url": "https://api.github.com/users/sumannelli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-11T21:18:46Z", "updated_at": "2020-03-12T14:35:46Z", "closed_at": "2020-03-12T14:35:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "<em>Please make sure that this is a Bug or a Feature Request and provide all applicable information asked by the template.\r\nIf your issue is an **implementation question**, please ask your question on [StackOverflow](http://stackoverflow.com/questions/tagged/keras) or [on the Keras Slack channel](https://keras-slack-autojoin.herokuapp.com/) instead of opening a GitHub issue.</em>  \r\n\r\n**System information**  \r\n- Have I written custom code (as opposed to using example directory):  \r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  \r\n- TensorFlow backend (yes / no):  \r\n- TensorFlow version:  \r\n- Keras version:  \r\n- Python version:  \r\n- CUDA/cuDNN version:  \r\n- GPU model and memory:  \r\n\r\nYou can obtain the TensorFlow version with:  \r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"  \r\nYou can obtain the Keras version with:  \r\npython -c 'import keras as k; print(k.__version__)'  \r\n\r\n**Describe the current behavior**  \r\n\r\n**Describe the expected behavior**  \r\n\r\n**Code to reproduce the issue**  \r\nProvide a reproducible test case that is the bare minimum necessary to generate the problem.  \r\n\r\n**Other info / logs**  \r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.  \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13875", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13875/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13875/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13875/events", "html_url": "https://github.com/keras-team/keras/issues/13875", "id": 577757586, "node_id": "MDU6SXNzdWU1Nzc3NTc1ODY=", "number": 13875, "title": "Problem extracting features from pooling layer of fine-tuned VGG16 model", "user": {"login": "csitaula", "id": 35831018, "node_id": "MDQ6VXNlcjM1ODMxMDE4", "avatar_url": "https://avatars1.githubusercontent.com/u/35831018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csitaula", "html_url": "https://github.com/csitaula", "followers_url": "https://api.github.com/users/csitaula/followers", "following_url": "https://api.github.com/users/csitaula/following{/other_user}", "gists_url": "https://api.github.com/users/csitaula/gists{/gist_id}", "starred_url": "https://api.github.com/users/csitaula/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csitaula/subscriptions", "organizations_url": "https://api.github.com/users/csitaula/orgs", "repos_url": "https://api.github.com/users/csitaula/repos", "events_url": "https://api.github.com/users/csitaula/events{/privacy}", "received_events_url": "https://api.github.com/users/csitaula/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-09T09:09:28Z", "updated_at": "2020-03-09T10:02:02Z", "closed_at": "2020-03-09T10:02:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13871", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13871/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13871/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13871/events", "html_url": "https://github.com/keras-team/keras/issues/13871", "id": 577400550, "node_id": "MDU6SXNzdWU1Nzc0MDA1NTA=", "number": 13871, "title": "Evaluate_generator always returns the same value - all digits (even with models trained on different datasets)", "user": {"login": "dusa2", "id": 57438569, "node_id": "MDQ6VXNlcjU3NDM4NTY5", "avatar_url": "https://avatars2.githubusercontent.com/u/57438569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dusa2", "html_url": "https://github.com/dusa2", "followers_url": "https://api.github.com/users/dusa2/followers", "following_url": "https://api.github.com/users/dusa2/following{/other_user}", "gists_url": "https://api.github.com/users/dusa2/gists{/gist_id}", "starred_url": "https://api.github.com/users/dusa2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dusa2/subscriptions", "organizations_url": "https://api.github.com/users/dusa2/orgs", "repos_url": "https://api.github.com/users/dusa2/repos", "events_url": "https://api.github.com/users/dusa2/events{/privacy}", "received_events_url": "https://api.github.com/users/dusa2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-07T21:07:23Z", "updated_at": "2020-03-08T09:30:57Z", "closed_at": "2020-03-08T09:30:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13865", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13865/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13865/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13865/events", "html_url": "https://github.com/keras-team/keras/issues/13865", "id": 575518024, "node_id": "MDU6SXNzdWU1NzU1MTgwMjQ=", "number": 13865, "title": "Keras iterator with augmented images and other features", "user": {"login": "lamba92", "id": 10994011, "node_id": "MDQ6VXNlcjEwOTk0MDEx", "avatar_url": "https://avatars1.githubusercontent.com/u/10994011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lamba92", "html_url": "https://github.com/lamba92", "followers_url": "https://api.github.com/users/lamba92/followers", "following_url": "https://api.github.com/users/lamba92/following{/other_user}", "gists_url": "https://api.github.com/users/lamba92/gists{/gist_id}", "starred_url": "https://api.github.com/users/lamba92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lamba92/subscriptions", "organizations_url": "https://api.github.com/users/lamba92/orgs", "repos_url": "https://api.github.com/users/lamba92/repos", "events_url": "https://api.github.com/users/lamba92/events{/privacy}", "received_events_url": "https://api.github.com/users/lamba92/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-04T15:45:01Z", "updated_at": "2020-03-06T18:20:19Z", "closed_at": "2020-03-06T18:20:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Say you have a dataset that has images and some data in a `.csv` for each image. \r\nYour goal is to create a NN that has a convolution branch and an other one (in my case an MLP).\r\n\r\nNow, there are plenty of guides ([one here](https://heartbeat.fritz.ai/building-a-mixed-data-neural-network-in-keras-to-predict-accident-locations-d51a63b738cf), [another one](https://www.pyimagesearch.com/2019/02/04/keras-multiple-inputs-and-mixed-data/)) on how to create the network, that's not the problem.\r\n\r\nThe issue here is how do I create an iterator in the form of `[[convolution_input, other_features], target]` when the `convolution_input` is from a Keras [`ImageDataGenerator`](https://keras.io/preprocessing/image/) [flow](https://keras.io/preprocessing/image/#flow) that adds augmented images. \r\n\r\nMore specifically, when the nth image (that may be an augmented one or not) is fed to the NN, I want it's original features inside `other_features`.\r\n\r\nI found few attempts ([here](https://gist.github.com/L-Lewis/a34845b596c15dbb41ed34b9f3ff729b#file-traffic-model3-preparing-data-py) and [here](https://github.com/keras-team/keras/issues/3386), the second one looked promising but I wasn't able to figure out how to handle augmented images) in doing exactly that but they do not seems to take into account the possible dataset manipulation that the Keras generator does.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13848", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13848/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13848/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13848/events", "html_url": "https://github.com/keras-team/keras/issues/13848", "id": 573543914, "node_id": "MDU6SXNzdWU1NzM1NDM5MTQ=", "number": 13848, "title": "ValueError: Invalid input_shape argument (None, 13): model has 0 tensor inputs.", "user": {"login": "lazarkrstic", "id": 19471493, "node_id": "MDQ6VXNlcjE5NDcxNDkz", "avatar_url": "https://avatars0.githubusercontent.com/u/19471493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lazarkrstic", "html_url": "https://github.com/lazarkrstic", "followers_url": "https://api.github.com/users/lazarkrstic/followers", "following_url": "https://api.github.com/users/lazarkrstic/following{/other_user}", "gists_url": "https://api.github.com/users/lazarkrstic/gists{/gist_id}", "starred_url": "https://api.github.com/users/lazarkrstic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lazarkrstic/subscriptions", "organizations_url": "https://api.github.com/users/lazarkrstic/orgs", "repos_url": "https://api.github.com/users/lazarkrstic/repos", "events_url": "https://api.github.com/users/lazarkrstic/events{/privacy}", "received_events_url": "https://api.github.com/users/lazarkrstic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 192940623, "node_id": "MDU6TGFiZWwxOTI5NDA2MjM=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-01T13:10:10Z", "updated_at": "2020-04-01T15:37:36Z", "closed_at": "2020-04-01T15:37:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Ensemble model not working after loading from h5**\r\nI'm building ensemble model with Keras and Tensorflow as backend. I have a couple pretrained ANN models saved in .h5 format - all works well. Then I create ensemble as follow:\r\n\r\nFor each network\r\n - First remove `Input` with `model.pop(0)`. \r\n - Next create `Lambda layer` as firs layer of network\r\n - Create new `Input layer`  for netwok and crete new model from new Input layer and existing model\r\n\r\nThen buidl ensemble model with following code:\r\n```\r\nmodel_input = Input(shape=(input_count, ))\r\nfor i in range(len(self.networks)):\r\n    model = self.networks[i]\r\n    for _layer in model.layers:\r\n        _layer.trainable = False\r\n        _layer.name = 'ensemble_' + str(i) + '_' + _layer.name\r\n\r\nyModels=[model(model_input) for model in self.networks]\r\n\r\nconcatenated = Concatenate()(yModels)\r\n\r\ndef weighted_sum(x, w):\r\n    \"\"\" weights from formula 7 \"\"\"\r\n    w = K.variable(w)\r\n    tensor = K.sum(x * w, axis= -1)\r\n    return tensor\r\n        \r\nargs = {\"w\": self.w}\r\nens_output = Lambda(weighted_sum, arguments=args)(concatenated)\r\n        \r\n# build model\r\nself.ensemble_model = Model(inputs=model_input, outputs=ens_output, name='ensemble')\r\nself.ensemble_model.compile(loss='mean_absolute_error', optimizer = 'adam', metrics=['accuracy'])\r\n```\r\n`esemble_model` predict  OK results. After saving model to .h5 and loading back I get error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"test_laod_models.py\", line 8, in <module>\r\n    model = load_model('ensemble_1.h5')\r\n  File \"C:\\Users\\krstic\\AppData\\Local\\conda\\conda\\envs\\tensorflow\\lib\\site-packages\\keras\\engine\\saving.py\", line 419, in load_model\r\n    model = _deserialize_model(f, custom_objects, compile)\r\n  File \"C:\\Users\\krstic\\AppData\\Local\\conda\\conda\\envs\\tensorflow\\lib\\site-packages\\keras\\engine\\saving.py\", line 225, in _deserialize_model\r\n    model = model_from_config(model_config, custom_objects=custom_objects)\r\n  File \"C:\\Users\\krstic\\AppData\\Local\\conda\\conda\\envs\\tensorflow\\lib\\site-packages\\keras\\engine\\saving.py\", line 458, in model_from_config\r\n    return deserialize(config, custom_objects=custom_objects)\r\n  File \"C:\\Users\\krstic\\AppData\\Local\\conda\\conda\\envs\\tensorflow\\lib\\site-packages\\keras\\layers\\__init__.py\", line 55, in deserialize\r\n    printable_module_name='layer')\r\n  File \"C:\\Users\\krstic\\AppData\\Local\\conda\\conda\\envs\\tensorflow\\lib\\site-packages\\keras\\utils\\generic_utils.py\", line 145, in deserialize_keras_object\r\n    list(custom_objects.items())))\r\n  File \"C:\\Users\\krstic\\AppData\\Local\\conda\\conda\\envs\\tensorflow\\lib\\site-packages\\keras\\engine\\network.py\", line 1032, in from_config\r\n    process_node(layer, node_data)\r\n  File \"C:\\Users\\krstic\\AppData\\Local\\conda\\conda\\envs\\tensorflow\\lib\\site-packages\\keras\\engine\\network.py\", line 991, in process_node\r\n    layer(unpack_singleton(input_tensors), **kwargs)\r\n  File \"C:\\Users\\krstic\\AppData\\Local\\conda\\conda\\envs\\tensorflow\\lib\\site-packages\\keras\\engine\\base_layer.py\", line 474, in __call__\r\n    output_shape = self.compute_output_shape(input_shape)\r\n  File \"C:\\Users\\krstic\\AppData\\Local\\conda\\conda\\envs\\tensorflow\\lib\\site-packages\\keras\\engine\\network.py\", line 593, in compute_output_shape\r\n    str(len(self._input_layers)) + ' tensor inputs.')\r\nValueError: Invalid input_shape argument (None, 13): model has 0 tensor inputs.\r\n```\r\n\r\nIn short:\r\n - enseble_model - works OK\r\n - save_model() - OK\r\n - load _model() - raise error", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13836", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13836/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13836/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13836/events", "html_url": "https://github.com/keras-team/keras/issues/13836", "id": 572454394, "node_id": "MDU6SXNzdWU1NzI0NTQzOTQ=", "number": 13836, "title": "Calling get_weights in a loop slows down over time but clearing the session creates too many threads", "user": {"login": "kaknikhil", "id": 11729207, "node_id": "MDQ6VXNlcjExNzI5MjA3", "avatar_url": "https://avatars2.githubusercontent.com/u/11729207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaknikhil", "html_url": "https://github.com/kaknikhil", "followers_url": "https://api.github.com/users/kaknikhil/followers", "following_url": "https://api.github.com/users/kaknikhil/following{/other_user}", "gists_url": "https://api.github.com/users/kaknikhil/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaknikhil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaknikhil/subscriptions", "organizations_url": "https://api.github.com/users/kaknikhil/orgs", "repos_url": "https://api.github.com/users/kaknikhil/repos", "events_url": "https://api.github.com/users/kaknikhil/events{/privacy}", "received_events_url": "https://api.github.com/users/kaknikhil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-28T01:02:31Z", "updated_at": "2020-03-03T23:19:04Z", "closed_at": "2020-03-03T23:19:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am running into a problem where calling model.get_weights in a for loop slows down the execution per iteration and leaks memory.\r\nI understand that a workaround for this is to clear the keras session inside the for loop. The drawback of this approach is that the thread count of the python process goes up and eventually hits the system limit (ulimit -u) and errors out with\r\n```\r\nwhat(): Resource temporarily unavailable\r\n```\r\n\r\n**Code to reproduce the issue**  \r\n```\r\nimport keras\r\nfrom keras.models import *\r\nfrom keras.layers import *\r\nfrom keras.optimizers import *\r\nimport tensorflow as tf\r\nimport time\r\nimport sys\r\nfrom keras import backend as K\r\n\r\n\r\nnum_classes = 10\r\ndef get_model():\r\n    model1 = Sequential()\r\n    model1.add(Conv2D(32, (3, 3), padding='same',\r\n                     input_shape=(32,32,3)))\r\n    model1.add(Activation('relu'))\r\n    model1.add(Conv2D(32, (3, 3)))\r\n    model1.add(Activation('relu'))\r\n    model1.add(MaxPooling2D(pool_size=(2, 2)))\r\n    model1.add(Dropout(0.25))\r\n\r\n    model1.add(Conv2D(64, (3, 3), padding='same'))\r\n    model1.add(Activation('relu'))\r\n    model1.add(Conv2D(64, (3, 3)))\r\n    model1.add(Activation('relu'))\r\n    model1.add(MaxPooling2D(pool_size=(2, 2)))\r\n    model1.add(Dropout(0.25))\r\n\r\n    model1.add(Flatten())\r\n    model1.add(Dense(512))\r\n    model1.add(Activation('relu'))\r\n    model1.add(Dropout(0.5))\r\n    model1.add(Dense(num_classes))\r\n    model1.add(Activation('softmax'))\r\n\r\n    return model1\r\n\r\ndef reuse_session(): # slows down and leaks memory with each iteration\r\n    for i in range(1,30):\r\n        start_time = time.time()\r\n        model1 = get_model()\r\n        model1.get_weights()\r\n        print('elapsed time for i= {}: {}'.format(i, time.time() - start_time))\r\n\r\ndef clear_session_in_for_loop(): # creates too many threads\r\n    for i in range(1,30):\r\n        start_time = time.time()\r\n        model1 = get_model()\r\n        model1.get_weights()\r\n        K.clear_session()\r\n        print('elapsed time for i= {}: {}'.format(i, time.time() - start_time))\r\n```\r\n**Actual behavior when calling reuse_session()**\r\n`The good`: Thread count of the python process is constant at 25\r\n`The bad`: Each iteration gets slower over time and also leaks memory.\r\n```\r\nelapsed time for i= 1: 0.170170068741\r\nelapsed time for i= 2: 0.159043073654\r\nelapsed time for i= 3: 0.163691997528\r\nelapsed time for i= 4: 0.211891174316\r\nelapsed time for i= 5: 0.199024200439\r\nelapsed time for i= 6: 0.186309099197\r\nelapsed time for i= 7: 0.223390102386\r\nelapsed time for i= 8: 0.277227878571\r\nelapsed time for i= 9: 0.21210193634\r\nelapsed time for i= 10: 0.270597934723\r\nelapsed time for i= 11: 0.227971076965\r\nelapsed time for i= 12: 0.244792938232\r\nelapsed time for i= 13: 0.25564289093\r\nelapsed time for i= 14: 0.257274150848\r\nelapsed time for i= 15: 0.288394927979\r\nelapsed time for i= 16: 0.295608043671\r\nelapsed time for i= 17: 0.294360876083\r\nelapsed time for i= 18: 0.291459083557\r\nelapsed time for i= 19: 0.302357912064\r\nelapsed time for i= 20: 0.306931018829\r\nelapsed time for i= 21: 0.393155813217\r\nelapsed time for i= 22: 0.308648109436\r\nelapsed time for i= 23: 0.331094026566\r\nelapsed time for i= 24: 0.326943159103\r\nelapsed time for i= 25: 0.356817960739\r\nelapsed time for i= 26: 0.345247030258\r\nelapsed time for i= 27: 0.374604940414\r\nelapsed time for i= 28: 0.362639188766\r\nelapsed time for i= 29: 0.391816139221\r\n```\r\n\r\n\r\n**Actual behavior when calling clear_session_in_for_loop()**\r\n`The good`: No memory leak and the execution time does not slow down with each iteration.\r\n`The bad`: thread count of the python process fluctuates between 25 and 35. This gets worse when a similar code is run in a distributed environment with a big model. With a big enough model it goes all the way up to the system limit and errors out.\r\n```\r\nelapsed time for i= 1: 0.160080909729\r\nelapsed time for i= 2: 0.151993989944\r\nelapsed time for i= 3: 0.156336069107\r\nelapsed time for i= 4: 0.147713899612\r\nelapsed time for i= 5: 0.150010824203\r\nelapsed time for i= 6: 0.140612125397\r\nelapsed time for i= 7: 0.147132158279\r\nelapsed time for i= 8: 0.225372076035\r\nelapsed time for i= 9: 0.136553049088\r\nelapsed time for i= 10: 0.134692907333\r\nelapsed time for i= 11: 0.137485027313\r\nelapsed time for i= 12: 0.153803825378\r\nelapsed time for i= 13: 0.136773824692\r\nelapsed time for i= 14: 0.137237071991\r\nelapsed time for i= 15: 0.140908956528\r\nelapsed time for i= 16: 0.15660405159\r\nelapsed time for i= 17: 0.155498027802\r\nelapsed time for i= 18: 0.145832061768\r\nelapsed time for i= 19: 0.14745593071\r\nelapsed time for i= 20: 0.154036998749\r\nelapsed time for i= 21: 0.246683120728\r\nelapsed time for i= 22: 0.137120008469\r\nelapsed time for i= 23: 0.135478973389\r\nelapsed time for i= 24: 0.147134065628\r\nelapsed time for i= 25: 0.153743982315\r\nelapsed time for i= 26: 0.13486790657\r\nelapsed time for i= 27: 0.138788938522\r\nelapsed time for i= 28: 0.142264842987\r\nelapsed time for i= 29: 0.152796983719\r\n```\r\n\r\n**System information**  \r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  macOS High Sierra 10.13.6 \r\n- TensorFlow backend (yes / no):  yes\r\n- TensorFlow version:  1.13.0\r\n- Keras version:  2.2.4\r\n- Python version:  2.7.10\r\n- CUDA/cuDNN version: N/A  \r\n- GPU model and memory:  N/A\r\n\r\nAny suggestions on how to make either of the approaches work would be really appreciated", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13834", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13834/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13834/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13834/events", "html_url": "https://github.com/keras-team/keras/issues/13834", "id": 572286451, "node_id": "MDU6SXNzdWU1NzIyODY0NTE=", "number": 13834, "title": "Access an original intermediate layer after using multi_gpu_model", "user": {"login": "JivanRoquet", "id": 6452675, "node_id": "MDQ6VXNlcjY0NTI2NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6452675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JivanRoquet", "html_url": "https://github.com/JivanRoquet", "followers_url": "https://api.github.com/users/JivanRoquet/followers", "following_url": "https://api.github.com/users/JivanRoquet/following{/other_user}", "gists_url": "https://api.github.com/users/JivanRoquet/gists{/gist_id}", "starred_url": "https://api.github.com/users/JivanRoquet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JivanRoquet/subscriptions", "organizations_url": "https://api.github.com/users/JivanRoquet/orgs", "repos_url": "https://api.github.com/users/JivanRoquet/repos", "events_url": "https://api.github.com/users/JivanRoquet/events{/privacy}", "received_events_url": "https://api.github.com/users/JivanRoquet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-27T18:55:54Z", "updated_at": "2020-02-27T19:22:25Z", "closed_at": "2020-02-27T19:22:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using `keras.multi_gpu_model()` on a model, the layer structure is altered and we can't access the original layers anymore.\r\n\r\nWhat can be done to access the output from an intermediate layer from the original model, AFTER this model has been trained using multiple GPUs?\r\n\r\nsee this issue for reference: https://github.com/keras-team/keras/issues/11929\r\n\r\nExample: with the model below, I want to do the following things:\r\n1. train on multiple GPUs\r\n2. use the output from maxpool_2\r\n\r\n```python\r\n>>> my_model = foo.make_some_model()\r\n\r\n>>> [l.name for l in my_model.layers]\r\n[input, conv2d_1, conv2d_2, maxpool_1, conv2d_3, maxpool_2, dense_1, dense_2, dense_3]\r\n\r\n>>> my_model = multi_gpu_model(my_model)\r\n>>> my_model.fit(...)\r\n\r\n>>> [l.name for l in my_model.layers]\r\n[input, lamba_1, lambda_2, lambda_3, lambda_3, model_1, dense_3]\r\n\r\n>>> new_model = Model(inputs=my_model.input, outputs=my_model.get_layer('maxpool_2'))\r\nValueError: no such layer: maxpool_2\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13833", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13833/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13833/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13833/events", "html_url": "https://github.com/keras-team/keras/issues/13833", "id": 572248255, "node_id": "MDU6SXNzdWU1NzIyNDgyNTU=", "number": 13833, "title": "How to access an original intermediate layer after using multi_gpu_model", "user": {"login": "JivanRoquet", "id": 6452675, "node_id": "MDQ6VXNlcjY0NTI2NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6452675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JivanRoquet", "html_url": "https://github.com/JivanRoquet", "followers_url": "https://api.github.com/users/JivanRoquet/followers", "following_url": "https://api.github.com/users/JivanRoquet/following{/other_user}", "gists_url": "https://api.github.com/users/JivanRoquet/gists{/gist_id}", "starred_url": "https://api.github.com/users/JivanRoquet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JivanRoquet/subscriptions", "organizations_url": "https://api.github.com/users/JivanRoquet/orgs", "repos_url": "https://api.github.com/users/JivanRoquet/repos", "events_url": "https://api.github.com/users/JivanRoquet/events{/privacy}", "received_events_url": "https://api.github.com/users/JivanRoquet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-27T17:46:27Z", "updated_at": "2020-02-27T18:53:37Z", "closed_at": "2020-02-27T18:53:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "**System information**  \r\n- Have I written custom code (as opposed to using example directory):  yes\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  Ubuntu 16.04\r\n- TensorFlow backend (yes / no):  yes\r\n- TensorFlow version:  1.13.4\r\n- Keras version:  2.2.4\r\n- Python version:  3.6\r\n- CUDA/cuDNN version:  10.1\r\n- GPU model and memory:  Tesla K80\r\n\r\n**Describe the current behavior** \r\n\r\nWhen I save a model with `model.save()`, and then later I load it with `load_model()`, the layers seems to have been \"re-organised\" and the output printed by `model.summary()` is very different.\r\n\r\n**TL;DR**\r\n\r\n```python\r\n>>> model = my_model()\r\n>>> model.summary()\r\n# output a certain layer structure\r\n\r\n>>> model.save('file.h5')\r\n>>> new_model = load_model('file.h5')\r\n>>> new_model.summary()\r\n# structure is COMPLETELY different\r\n```\r\n\r\n**Code to reproduce the issue**  \r\n\r\nThe exact code I'm using is the following, and is in the context of doing transfer learning on a pre-trained InceptionV3 model from keras.applications.\r\n\r\n```python\r\nfrom keras.applications.inception_v3 import InceptionV3\r\npretrained_model = InceptionV3(weights='imagenet', include_top=False)\r\n\r\n# add some layers on top of the existing pre-trained model\r\nx = GlobalAveragePooling2D(name='gap_final')(x)\r\nx = Dense(1024, activation='relu', kernel_regularizer=regularizers.l2(0.005))(x)\r\nx = Dropout(0.2)(x)\r\npreds = Dense(len(config.classes),activation='sigmoid')(x)\r\n\r\n#\u00a0compile the new augmented model\r\nmodel = Model(inputs=pretrained_model.input, outputs=preds)\r\nmodel = multi_gpu_model(model, gpus=16)\r\nmodel.compile(optimizer='Adam', loss='categorical_crossentropy', metrics=['accuracy'])\r\n\r\n# train with some data\r\nmodel.fit_generator(...)\r\n\r\n# now save into an h5 file\r\nmodel.save('model.h5')\r\n```\r\n\r\nAt this point, here is the bottom part of the output from `model.summary()`:\r\n```\r\n... many, many other previous layers before this point\r\n__________________________________________________________________________________________________\r\nactivation_93 (Activation)      (None, None, None, 3 0           batch_normalization_93[0][0]     \r\n__________________________________________________________________________________________________\r\nbatch_normalization_94 (BatchNo (None, None, None, 1 576         conv2d_94[0][0]                  \r\n__________________________________________________________________________________________________\r\nactivation_86 (Activation)      (None, None, None, 3 0           batch_normalization_86[0][0]     \r\n__________________________________________________________________________________________________\r\nmixed9_1 (Concatenate)          (None, None, None, 7 0           activation_88[0][0]              \r\n                                                                 activation_89[0][0]              \r\n__________________________________________________________________________________________________\r\nconcatenate_2 (Concatenate)     (None, None, None, 7 0           activation_92[0][0]              \r\n                                                                 activation_93[0][0]              \r\n__________________________________________________________________________________________________\r\nactivation_94 (Activation)      (None, None, None, 1 0           batch_normalization_94[0][0]     \r\n__________________________________________________________________________________________________\r\nmixed10 (Concatenate)           (None, None, None, 2 0           activation_86[0][0]              \r\n                                                                 mixed9_1[0][0]                   \r\n                                                                 concatenate_2[0][0]              \r\n                                                                 activation_94[0][0]              \r\n__________________________________________________________________________________________________\r\ngap_final (GlobalAveragePooling (None, 2048)         0           mixed10[0][0]                    \r\n__________________________________________________________________________________________________\r\ndense_9 (Dense)                 (None, 1024)         2098176     gap_final[0][0]                  \r\n__________________________________________________________________________________________________\r\ndropout_5 (Dropout)             (None, 1024)         0           dense_9[0][0]                    \r\n__________________________________________________________________________________________________\r\ndense_10 (Dense)                (None, 28)           28700       dropout_5[0][0]                  \r\n==================================================================================================\r\nTotal params: 23,929,660\r\nTrainable params: 23,895,228\r\nNon-trainable params: 34,432\r\n__________________________________________________________________________________________________\r\n```\r\n\r\nAll is good so far, and you can see the `gap_final` layer.\r\n\r\nBut in a different part of the code, I want to load this model and use the output from `gap_final` layer, to which I will connect a series of fully connected layers to obtain `new_model`:\r\n\r\n```python\r\nbase_model = load_model('model.h5')\r\nnew_model = Model(inputs=base_model.input, outputs=base_model.get_layer('gap_final').output)\r\n```\r\nWhich triggers a: **ValueError: No such layer: gap_final**\r\n\r\nThe output of `base_model.summary()` is, surprisingly, as follows:\r\n\r\n```\r\n__________________________________________________________________________________________________\r\nLayer (type)                    Output Shape         Param #     Connected to                     \r\n==================================================================================================\r\ninput_1 (InputLayer)            (None, None, None, 3 0                                            \r\n__________________________________________________________________________________________________\r\nlambda_1 (Lambda)               (None, None, None, 3 0           input_1[0][0]                    \r\n__________________________________________________________________________________________________\r\nlambda_2 (Lambda)               (None, None, None, 3 0           input_1[0][0]                    \r\n__________________________________________________________________________________________________\r\nlambda_3 (Lambda)               (None, None, None, 3 0           input_1[0][0]                    \r\n__________________________________________________________________________________________________\r\nlambda_4 (Lambda)               (None, None, None, 3 0           input_1[0][0]                    \r\n__________________________________________________________________________________________________\r\nlambda_5 (Lambda)               (None, None, None, 3 0           input_1[0][0]                    \r\n__________________________________________________________________________________________________\r\nlambda_6 (Lambda)               (None, None, None, 3 0           input_1[0][0]                    \r\n__________________________________________________________________________________________________\r\nlambda_7 (Lambda)               (None, None, None, 3 0           input_1[0][0]                    \r\n__________________________________________________________________________________________________\r\nlambda_8 (Lambda)               (None, None, None, 3 0           input_1[0][0]                    \r\n__________________________________________________________________________________________________\r\nlambda_9 (Lambda)               (None, None, None, 3 0           input_1[0][0]                    \r\n__________________________________________________________________________________________________\r\nlambda_10 (Lambda)              (None, None, None, 3 0           input_1[0][0]                    \r\n__________________________________________________________________________________________________\r\nlambda_11 (Lambda)              (None, None, None, 3 0           input_1[0][0]                    \r\n__________________________________________________________________________________________________\r\nlambda_12 (Lambda)              (None, None, None, 3 0           input_1[0][0]                    \r\n__________________________________________________________________________________________________\r\nlambda_13 (Lambda)              (None, None, None, 3 0           input_1[0][0]                    \r\n__________________________________________________________________________________________________\r\nlambda_14 (Lambda)              (None, None, None, 3 0           input_1[0][0]                    \r\n__________________________________________________________________________________________________\r\nlambda_15 (Lambda)              (None, None, None, 3 0           input_1[0][0]                    \r\n__________________________________________________________________________________________________\r\nlambda_16 (Lambda)              (None, None, None, 3 0           input_1[0][0]                    \r\n__________________________________________________________________________________________________\r\nmodel_1 (Model)                 (None, 28)           23929660    lambda_1[0][0]                   \r\n                                                                 lambda_2[0][0]                   \r\n                                                                 lambda_3[0][0]                   \r\n                                                                 lambda_4[0][0]                   \r\n                                                                 lambda_5[0][0]                   \r\n                                                                 lambda_6[0][0]                   \r\n                                                                 lambda_7[0][0]                   \r\n                                                                 lambda_8[0][0]                   \r\n                                                                 lambda_9[0][0]                   \r\n                                                                 lambda_10[0][0]                  \r\n                                                                 lambda_11[0][0]                  \r\n                                                                 lambda_12[0][0]                  \r\n                                                                 lambda_13[0][0]                  \r\n                                                                 lambda_14[0][0]                  \r\n                                                                 lambda_15[0][0]                  \r\n                                                                 lambda_16[0][0]                  \r\n__________________________________________________________________________________________________\r\ndense_2 (Concatenate)           (None, 28)           0           model_1[1][0]                    \r\n                                                                 model_1[2][0]                    \r\n                                                                 model_1[3][0]                    \r\n                                                                 model_1[4][0]                    \r\n                                                                 model_1[5][0]                    \r\n                                                                 model_1[6][0]                    \r\n                                                                 model_1[7][0]                    \r\n                                                                 model_1[8][0]                    \r\n                                                                 model_1[9][0]                    \r\n                                                                 model_1[10][0]                   \r\n                                                                 model_1[11][0]                   \r\n                                                                 model_1[12][0]                   \r\n                                                                 model_1[13][0]                   \r\n                                                                 model_1[14][0]                   \r\n                                                                 model_1[15][0]                   \r\n                                                                 model_1[16][0]                   \r\n==================================================================================================\r\nTotal params: 23,929,660\r\nTrainable params: 23,895,228\r\nNon-trainable params: 34,432\r\n__________________________________________________________________________________________________\r\n```\r\n\r\nWhich corresponds in no way to the `model.summary()` call that I was doing before saving the model. In particular, where has my `gap_final` layer gone? And how comes all these Lambda layers (which I never asked for) suddenly appear?\r\n\r\nWhat must be done to save/load the model to/from an hdf5 file *while keeping the same model structure*?\r\n\r\n**Describe the expected behavior**  \r\n\r\nWhen I save a model with `model.save()`, and then later I load it with `load_model()`, I would expect the output from `model.summary()` to be the same. Is it normal that it doesn't happen in the above example?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13816", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13816/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13816/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13816/events", "html_url": "https://github.com/keras-team/keras/issues/13816", "id": 568830109, "node_id": "MDU6SXNzdWU1Njg4MzAxMDk=", "number": 13816, "title": "val_loss missing from logs (but computed correctly at epoch end)", "user": {"login": "pj1989", "id": 7668531, "node_id": "MDQ6VXNlcjc2Njg1MzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/7668531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pj1989", "html_url": "https://github.com/pj1989", "followers_url": "https://api.github.com/users/pj1989/followers", "following_url": "https://api.github.com/users/pj1989/following{/other_user}", "gists_url": "https://api.github.com/users/pj1989/gists{/gist_id}", "starred_url": "https://api.github.com/users/pj1989/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pj1989/subscriptions", "organizations_url": "https://api.github.com/users/pj1989/orgs", "repos_url": "https://api.github.com/users/pj1989/repos", "events_url": "https://api.github.com/users/pj1989/events{/privacy}", "received_events_url": "https://api.github.com/users/pj1989/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 192940623, "node_id": "MDU6TGFiZWwxOTI5NDA2MjM=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-21T09:16:18Z", "updated_at": "2020-03-01T12:28:36Z", "closed_at": "2020-03-01T12:28:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "**System information**\r\n\r\n- OS Platform and Distribution: Windows 10 Enterprise 1803 (build 17134.1246)\r\n- TensorFlow backend: yes\r\n- TensorFlow version: 2.0.0\r\n- Keras version: '2.2.4-tf' (called from tensorflow.keras)\r\n- Python version: 3.7\r\n- CUDA/cuDNN version: -\r\n- GPU model and memory: -\r\n\r\nI'm trying to use the `ModelCheckpoint` callback in keras. However, it keeps saying to me that `val_loss` is not available. I added a print statement in the code of `ModelCheckpoint` to check the content of the `logs` variable passed to the callback. You can indeed see below that `val_loss` is not present in the dictionary.\r\n\r\nThe weird thing is that `val_loss` is correctly reported at the end of each epoch and it is present in the `history` object generated by `model.fit`. Clearly I provide validation data (otherwise val_loss could not be evaluated at the end of each epoch).\r\n\r\n```\r\n...\r\n3/3 - 65s - loss: 0.2053 - val_loss: 0.1153\r\nEpoch 2/45\r\nlogs={'batch': 0, 'size': 30000, 'loss': 0.20355584}\r\nWARNING:tensorflow:Can save best model only with val_loss available, skipping.\r\n...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13813", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13813/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13813/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13813/events", "html_url": "https://github.com/keras-team/keras/issues/13813", "id": 568451336, "node_id": "MDU6SXNzdWU1Njg0NTEzMzY=", "number": 13813, "title": "num_states = len(self.cell.state_size) TypeError: object of type 'numpy.int64' has no len() when using CuDNNGRU", "user": {"login": "zzstefan", "id": 3351283, "node_id": "MDQ6VXNlcjMzNTEyODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/3351283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zzstefan", "html_url": "https://github.com/zzstefan", "followers_url": "https://api.github.com/users/zzstefan/followers", "following_url": "https://api.github.com/users/zzstefan/following{/other_user}", "gists_url": "https://api.github.com/users/zzstefan/gists{/gist_id}", "starred_url": "https://api.github.com/users/zzstefan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zzstefan/subscriptions", "organizations_url": "https://api.github.com/users/zzstefan/orgs", "repos_url": "https://api.github.com/users/zzstefan/repos", "events_url": "https://api.github.com/users/zzstefan/events{/privacy}", "received_events_url": "https://api.github.com/users/zzstefan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-20T17:16:01Z", "updated_at": "2020-02-20T22:23:45Z", "closed_at": "2020-02-20T22:23:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "**System information**  \r\n- Have I written custom code (as opposed to using example directory):   Yes\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  Ubuntu 16.04\r\n- TensorFlow backend (yes / no):  yes\r\n- TensorFlow version:  1.13.1\r\n- Keras version:  2.3.1\r\n- Python version:  3.6\r\n- CUDA/cuDNN version:  10.0\r\n- GPU model and memory:  1080Ti, 11GB\r\n\r\n\r\n**Describe the current behavior**  \r\nI used the CuDNNGRU to implement the GRU, and the code is shown as below. And it gave me this error as shown below. I have searched online and found someone ran into similar problems but I didn't find any solutions. I am not sure if it's a bug or a implementation problem. However, the same code work fine with CuDNNLSTM. I just can't figure out where the problem is. The error is shown as below:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/zz/anaconda3/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2963, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-2-e007a89c7bef>\", line 1, in <module>\r\n    runfile('/media/zz/data/all_process_test_GRU.py', wdir='/media/zz/data/')\r\n  File \"/snap/pycharm-professional/183/plugins/python/helpers/pydev/_pydev_bundle/pydev_umd.py\", line 197, in runfile\r\n    pydev_imports.execfile(filename, global_vars, local_vars)  # execute the script\r\n  File \"/snap/pycharm-professional/183/plugins/python/helpers/pydev/_pydev_imps/_pydev_execfile.py\", line 18, in execfile\r\n    exec(compile(contents+\"\\n\", file, 'exec'), glob, loc)\r\n  File \"/media/zz/data/.py\", line 409, in <module>\r\n    main()\r\n  File \"/media/zz/data/all_process_test_GRU.py\", line 346, in main\r\n    train_model(new_train_data, y_train, new_vali_data, y_vali, result_path_1st, hidden_nodes[j])\r\n  File \"/media/zz/data/all_process_test_GRU.py\", line 206, in train_model\r\n    dropout_rate=dropout_rate, learning_rate=learning_rate)\r\n  File \"/media/zz/data/all_process_test_GRU.py\", line 143, in build_model_GRU\r\n    lstm1 = CuDNNGRU(units,  stateful=False, return_sequences=True)(inputs1)\r\n  File \"/home/zz/anaconda3/lib/python3.6/site-packages/keras/layers/recurrent.py\", line 541, in __call__\r\n    return super(RNN, self).__call__(inputs, **kwargs)\r\n  File \"/home/zz/anaconda3/lib/python3.6/site-packages/keras/engine/base_layer.py\", line 489, in __call__\r\n    output = self.call(inputs, **kwargs)\r\n  File \"/home/zz/anaconda3/lib/python3.6/site-packages/keras/layers/cudnn_recurrent.py\", line 81, in call\r\n    if len(initial_state) != len(self.states):\r\n  File \"/home/zz/anaconda3/lib/python3.6/site-packages/keras/layers/recurrent.py\", line 438, in states\r\n    num_states = len(self.cell.state_size)\r\nTypeError: object of type 'numpy.int64' has no len()\r\n\r\n\r\n**Code to reproduce the issue**  \r\n```\r\ndef build_model_GRU(timesteps, features, units, dropout_rate, learning_rate):\r\n    inputs1 = Input(shape=(timesteps, features[0]))\r\n    lstm1 = CuDNNGRU(units,  stateful=False, return_sequences=True)(inputs1)\r\n    drop_layer1 = Dropout(dropout_rate)(lstm1)\r\n    dense_1 = Dense(units, activation='relu')(drop_layer1)\r\n    average_pooling1 = GlobalAveragePooling1D()(dense_1)\r\n\r\n    inputs2 = Input(shape=(timesteps, features[1]))\r\n    lstm2 = CuDNNGRU(units,  stateful=False, return_sequences=True)(inputs2)\r\n    drop_layer2 = Dropout(dropout_rate)(lstm2)\r\n    dense_2 = Dense(units, activation='relu')(drop_layer2)\r\n    average_pooling2 = GlobalAveragePooling1D()(dense_2)\r\n\r\n    inputs3 = Input(shape=(timesteps, features[2]))\r\n    lstm3 = CuDNNGRU(units,  stateful=False, return_sequences=True)(inputs3)\r\n    drop_layer3 = Dropout(dropout_rate)(lstm3)\r\n    dense_3 = Dense(units, activation='relu')(drop_layer3)\r\n    average_pooling3 = GlobalAveragePooling1D()(dense_3)\r\n\r\n    merged = concatenate([average_pooling1, average_pooling2, average_pooling3])\r\n    dense_all = Dense(10, activation='relu')(merged)\r\n    output = Dense(2, activation='sigmoid')(dense_all)\r\n    model = Model(inputs=[inputs1, inputs2, inputs3], outputs=output)\r\n    opt = keras.optimizers.Adam(learning_rate, decay=1e-5)\r\n    model.compile(loss=[focal_loss(alpha=0.25, gamma=2)], optimizer=opt,\r\n                  metrics=['acc'])\r\n    return model\r\n\r\nn_timesteps=100\r\nn_features=np.array([10,40,80])\r\nn_units=32\r\ndropout_rate=0.5\r\nlearning_rate=0.00001\r\nmodel = build_model_GRU(timesteps=n_timesteps, features=n_features, units=n_units, dropout_rate=dropout_rate, learning_rate=learning_rate)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13789", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13789/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13789/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13789/events", "html_url": "https://github.com/keras-team/keras/issues/13789", "id": 566206671, "node_id": "MDU6SXNzdWU1NjYyMDY2NzE=", "number": 13789, "title": "Keras fit generator - ValueError: Failed to find data adapter that can handle input", "user": {"login": "castilho25", "id": 23001822, "node_id": "MDQ6VXNlcjIzMDAxODIy", "avatar_url": "https://avatars0.githubusercontent.com/u/23001822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/castilho25", "html_url": "https://github.com/castilho25", "followers_url": "https://api.github.com/users/castilho25/followers", "following_url": "https://api.github.com/users/castilho25/following{/other_user}", "gists_url": "https://api.github.com/users/castilho25/gists{/gist_id}", "starred_url": "https://api.github.com/users/castilho25/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/castilho25/subscriptions", "organizations_url": "https://api.github.com/users/castilho25/orgs", "repos_url": "https://api.github.com/users/castilho25/repos", "events_url": "https://api.github.com/users/castilho25/events{/privacy}", "received_events_url": "https://api.github.com/users/castilho25/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 192940628, "node_id": "MDU6TGFiZWwxOTI5NDA2Mjg=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": "User is asking for help / asking an implementation question. Stackoverflow would be better suited."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-17T10:35:58Z", "updated_at": "2020-02-28T12:31:11Z", "closed_at": "2020-02-28T12:31:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, I'm trying to fit my deep learning model with a custom generator.\r\n\r\nWhen i fit the model, it shows me this error:\r\n`Traceback (most recent call last):\r\n  File \"/home/castilho/PycharmProjects/Chargrid/Chargrid/main.py\", line 201, in <module>\r\n    target_path=target_path, prefix=prefix_splits, make_new_representation=False, train=True)\r\n  File \"/home/castilho/PycharmProjects/Chargrid/Chargrid/main.py\", line 117, in main\r\n    nn.train(representations_path=representations_path, target_path=target_path, training_filenames = data['train_imgs'], validation_filenames=data['val_imgs'])\r\n  File \"/home/castilho/PycharmProjects/Chargrid/Chargrid/neural_network.py\", line 150, in train\r\n    validation_steps=int(len(validation_filenames) // batch_size))\r\n  File \"/home/castilho/PycharmProjects/Chargrid/venv/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/training.py\", line 819, in fit\r\n    use_multiprocessing=use_multiprocessing)\r\n  File \"/home/castilho/PycharmProjects/Chargrid/venv/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/training_v2.py\", line 235, in fit\r\n    use_multiprocessing=use_multiprocessing)\r\n  File \"/home/castilho/PycharmProjects/Chargrid/venv/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/training_v2.py\", line 533, in _process_training_inputs\r\n    adapter_cls = data_adapter.select_data_adapter(x, y)\r\n  File \"/home/castilho/PycharmProjects/Chargrid/venv/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/data_adapter.py\", line 998, in select_data_adapter\r\n    _type_name(x), _type_name(y)))\r\nValueError: Failed to find data adapter that can handle input: <class 'Chargrid.dataset_generator.RepresentationGenerator'>, <class 'NoneType'>\r\n\r\nProcess finished with exit code 1\r\n`\r\n\r\n\r\n\r\nI this this a bug in Keras. Below, is a part of the code when i fit the model.\r\n`       def train(self, representations_path: str, target_path: str, training_filenames: list, validation_filenames: list,\r\n              batch_size: int = 7):\r\n        \r\n        train_generator = RepresentationGenerator(representation_path=representations_path, target_path=target_path,\r\n                                                  filenames=training_filenames, batch_size=batch_size)\r\n        val_generator = RepresentationGenerator(representation_path=representations_path, target_path=target_path,\r\n                                                filenames=validation_filenames, batch_size=batch_size)\r\n        self.model_semantic.fit(x=train_generator, batch_size=7,\r\n                                steps_per_epoch=int(len(training_filenames) // batch_size),\r\n                                epochs=10,\r\n                                verbose=1,\r\n                                validation_data=val_generator,\r\n                                validation_steps=int(len(validation_filenames) // batch_size))\r\n        return 0`\r\n\r\n\r\nMy class RepresentationGenerator is:\r\n\r\n`from tensorflow_core.python.keras.utils.data_utils import Sequence\r\n\r\n\r\nclass RepresentationGenerator(Sequence):\r\n\r\n    def __init__(self, representation_path, target_path, filenames, batch_size):\r\n        self.filenames = np.array(filenames)\r\n        self.batch_size = batch_size\r\n        self.representation_path = representation_path\r\n        self.target_path = target_path\r\n\r\n    def __len__(self):\r\n        return (np.ceil(len(self.filenames) / float(self.batch_size))).astype(np.int)\r\n\r\n    def __getitem__(self, idx):\r\n        files_to_batch = self.filenames[idx * self.batch_size: (idx + 1) * self.batch_size]\r\n        batch_x, batch_y = [], []\r\n        for file in files_to_batch:\r\n            batch_x.append(np.load(self.representation_path + file + \".npy\", allow_pickle=True))\r\n            batch_y.append(np.load(self.target_path + file + \".npy\", allow_pickle=True))\r\n\r\n        return np.array(batch_x), np.array(batch_y)\r\n`\r\n\r\n\r\nWhen i fit the model with a generator, the variable Y assume as None and it shows the error above. How can i fix that?\r\n\r\n**System information**  \r\n- Have I written custom code (as opposed to using example directory):  Yes\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  Linux Ubuntu 18.04\r\n- TensorFlow backend (yes / no):  Yes\r\n- TensorFlow version:  2.1.0\r\n- Keras version:  2.3.1\r\n- Python version:  3.6\r\n- GPU model and memory:  NVIDIA Corporation GP108M [GeForce MX250]\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13768", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13768/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13768/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13768/events", "html_url": "https://github.com/keras-team/keras/issues/13768", "id": 564567963, "node_id": "MDU6SXNzdWU1NjQ1Njc5NjM=", "number": 13768, "title": "MaxPooling2D input format and shape", "user": {"login": "katoabc123", "id": 48769555, "node_id": "MDQ6VXNlcjQ4NzY5NTU1", "avatar_url": "https://avatars2.githubusercontent.com/u/48769555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/katoabc123", "html_url": "https://github.com/katoabc123", "followers_url": "https://api.github.com/users/katoabc123/followers", "following_url": "https://api.github.com/users/katoabc123/following{/other_user}", "gists_url": "https://api.github.com/users/katoabc123/gists{/gist_id}", "starred_url": "https://api.github.com/users/katoabc123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/katoabc123/subscriptions", "organizations_url": "https://api.github.com/users/katoabc123/orgs", "repos_url": "https://api.github.com/users/katoabc123/repos", "events_url": "https://api.github.com/users/katoabc123/events{/privacy}", "received_events_url": "https://api.github.com/users/katoabc123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-13T10:00:31Z", "updated_at": "2020-02-17T04:11:40Z", "closed_at": "2020-02-17T04:11:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to test the MaxPooling2D layer for understanding how it work.\r\nHere is the problem:\r\nI test the input np.array and get the unexpected result:\r\n\r\nHere is my testing code:\r\nInput=np.array([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16])\r\nInput=Input.reshape(1,4,4,2)\r\nmodel = Sequential([\r\n    MaxPooling2D(pool_size=(2, 2),padding=\"same\"),\r\n    ])\r\nprint(model.predict(Input)[0])\r\n\r\nThe output is:\r\n[[[11. 12.]\r\n  [15. 16.]]\r\n\r\n [[11. 12.]\r\n  [15. 16.]]]\r\n\r\nI expect the result should be :\r\n\r\n [[[6. 8.]\r\n  [14. 16.]]\r\n\r\n [[6. 8.]\r\n  [14. 16.]]]\r\n\r\nWhat should I change the code If I want my expected result?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13762", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13762/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13762/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13762/events", "html_url": "https://github.com/keras-team/keras/issues/13762", "id": 563210700, "node_id": "MDU6SXNzdWU1NjMyMTA3MDA=", "number": 13762, "title": "model.predict() gives different results when batch_size =1 using Batch Norm", "user": {"login": "sameervk", "id": 16178000, "node_id": "MDQ6VXNlcjE2MTc4MDAw", "avatar_url": "https://avatars2.githubusercontent.com/u/16178000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sameervk", "html_url": "https://github.com/sameervk", "followers_url": "https://api.github.com/users/sameervk/followers", "following_url": "https://api.github.com/users/sameervk/following{/other_user}", "gists_url": "https://api.github.com/users/sameervk/gists{/gist_id}", "starred_url": "https://api.github.com/users/sameervk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sameervk/subscriptions", "organizations_url": "https://api.github.com/users/sameervk/orgs", "repos_url": "https://api.github.com/users/sameervk/repos", "events_url": "https://api.github.com/users/sameervk/events{/privacy}", "received_events_url": "https://api.github.com/users/sameervk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-11T13:35:23Z", "updated_at": "2020-02-11T16:43:42Z", "closed_at": "2020-02-11T16:43:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "<em>Please make sure that this is a Bug or a Feature Request and provide all applicable information asked by the template.\r\nIf your issue is an **implementation question**, please ask your question on [StackOverflow](http://stackoverflow.com/questions/tagged/keras) or [on the Keras Slack channel](https://keras-slack-autojoin.herokuapp.com/) instead of opening a GitHub issue.</em>  \r\n\r\n**System information**  \r\n- Have I written custom code (as opposed to using example directory):  No\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  Ubuntu 18.04 LTS\r\n- TensorFlow backend (yes / no):  yes\r\n- TensorFlow version:  2.1.0\r\n- Keras version:  2.2.4-tf\r\n- Python version:  3.6.7\r\n- CUDA/cuDNN version:  \r\n- GPU model and memory:  \r\n\r\nYou can obtain the TensorFlow version with:  \r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"  \r\nYou can obtain the Keras version with:  \r\npython -c 'import keras as k; print(k.__version__)'  \r\n\r\n**Describe the current behavior**  \r\nRunning model.predict() on a batch gives accurate values. However, when run on a single sample, i.e. batch size 1 gives same output [8] on every individual sample of the original batch. \r\n**Describe the expected behavior**  \r\nRunning predict() on batch_size = 1 should not result in the above behavior\r\n**Code to reproduce the issue**  \r\nTesting the behaviour of batch norm layer in keras using MNIST number dataset using the model from the original BatchNorm paper. Using 3 dense layers (100 units each) with 3 adjacent bnorm layers and a final dense layer with 10 units; input flattened from 28*28 to 784; batch size = 60; no activation for the final layer. Please find attached is .h5 (fmt: model_{epoch}-{val_loss}) file for the model\r\n[model_10-0.119.zip](https://github.com/keras-team/keras/files/4185898/model_10-0.119.zip)\r\n\r\n\r\n**Other info / logs**  \r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.  \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13742", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13742/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13742/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13742/events", "html_url": "https://github.com/keras-team/keras/issues/13742", "id": 559767796, "node_id": "MDU6SXNzdWU1NTk3Njc3OTY=", "number": 13742, "title": "Incorrect archive link provided for missing cudart64_100.dll", "user": {"login": "Hyperclaw79", "id": 29298411, "node_id": "MDQ6VXNlcjI5Mjk4NDEx", "avatar_url": "https://avatars3.githubusercontent.com/u/29298411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hyperclaw79", "html_url": "https://github.com/Hyperclaw79", "followers_url": "https://api.github.com/users/Hyperclaw79/followers", "following_url": "https://api.github.com/users/Hyperclaw79/following{/other_user}", "gists_url": "https://api.github.com/users/Hyperclaw79/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hyperclaw79/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hyperclaw79/subscriptions", "organizations_url": "https://api.github.com/users/Hyperclaw79/orgs", "repos_url": "https://api.github.com/users/Hyperclaw79/repos", "events_url": "https://api.github.com/users/Hyperclaw79/events{/privacy}", "received_events_url": "https://api.github.com/users/Hyperclaw79/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 192940623, "node_id": "MDU6TGFiZWwxOTI5NDA2MjM=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-04T14:46:56Z", "updated_at": "2020-02-20T15:54:06Z", "closed_at": "2020-02-20T15:54:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "<em>Please make sure that this is a Bug or a Feature Request and provide all applicable information asked by the template.\r\nIf your issue is an **implementation question**, please ask your question on [StackOverflow](http://stackoverflow.com/questions/tagged/keras) or [on the Keras Slack channel](https://keras-slack-autojoin.herokuapp.com/) instead of opening a GitHub issue.</em>  \r\n\r\n**System information**  \r\n- Have I written custom code (as opposed to using example directory):  No\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  Windows 10 v1809 Build \r\n- TensorFlow backend (yes / no):  yes\r\n- TensorFlow version:  1.14.0\r\n- Keras version:  2.2.5\r\n- Python version:  3.7.4\r\n- CUDA/cuDNN version:  9\r\n- GPU model and memory:  Nvidia Geforce GTX 1050Ti - 4GB\r\n\r\nYou can obtain the TensorFlow version with:  \r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"  \r\nYou can obtain the Keras version with:  \r\npython -c 'import keras as k; print(k.__version__)'  \r\n\r\n**Describe the current behavior**  \r\nThe archive link provided for cuda point to 9.0\r\nhttps://developer.nvidia.com/cuda-90-download-archive\r\n\r\n**Describe the expected behavior**  \r\nThe download link should currently point to 10:\r\nhttps://developer.nvidia.com/cuda-10.1-download-archive-update2\r\n\r\n**Code to reproduce the issue**  \r\nProvide a reproducible test case that is the bare minimum necessary to generate the problem.  \r\n\r\n**Other info / logs**  \r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.  \r\n\r\n```py\r\n>>> import keras\r\nUsing TensorFlow backend.\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\drago\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\tensorflow\\python\\platform\\self_check.py\", line 75, in preload_check\r\n    ctypes.WinDLL(build_info.cudart_dll_name)\r\n  File \"C:\\Users\\drago\\AppData\\Local\\Programs\\Python\\Python37\\lib\\ctypes\\__init__.py\", line 364, in __init__\r\n    self._handle = _dlopen(self._name, mode)\r\nOSError: [WinError 126] The specified module could not be found\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Users\\drago\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\keras\\__init__.py\", line 3, in <module>\r\n    from . import utils\r\n  File \"C:\\Users\\drago\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\keras\\utils\\__init__.py\", line 6, in <module>\r\n    from . import conv_utils\r\n  File \"C:\\Users\\drago\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\keras\\utils\\conv_utils.py\", line 9, in <module>\r\n    from .. import backend as K\r\n  File \"C:\\Users\\drago\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\keras\\backend\\__init__.py\", line 1, in <module>\r\n    from .load_backend import epsilon\r\n  File \"C:\\Users\\drago\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\keras\\backend\\load_backend.py\", line 89, in <module>\r\n    from .tensorflow_backend import *\r\n  File \"C:\\Users\\drago\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\keras\\backend\\tensorflow_backend.py\", line 5, in <module>\r\n    import tensorflow as tf\r\n  File \"C:\\Users\\drago\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\tensorflow\\__init__.py\", line 28, in <module>\r\n    from tensorflow.python import pywrap_tensorflow  # pylint: disable=unused-import\r\n  File \"C:\\Users\\drago\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\tensorflow\\python\\__init__.py\", line 49, in <module>\r\n    from tensorflow.python import pywrap_tensorflow\r\n  File \"C:\\Users\\drago\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow.py\", line 30, in <module>\r\n    self_check.preload_check()\r\n  File \"C:\\Users\\drago\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\tensorflow\\python\\platform\\self_check.py\", line 82, in preload_check\r\n    % (build_info.cudart_dll_name, build_info.cuda_version_number))\r\nImportError: Could not find 'cudart64_100.dll'. TensorFlow requires that this DLL be installed in a directory that is named in your %PATH% environment variable. Download and install CUDA 10.0 from this URL: https://developer.nvidia.com/cuda-90-download-archive\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13737", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13737/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13737/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13737/events", "html_url": "https://github.com/keras-team/keras/issues/13737", "id": 558584854, "node_id": "MDU6SXNzdWU1NTg1ODQ4NTQ=", "number": 13737, "title": "Custom keras optimizer - learning rate changes each epoch", "user": {"login": "rohanmohapatra", "id": 31756343, "node_id": "MDQ6VXNlcjMxNzU2MzQz", "avatar_url": "https://avatars2.githubusercontent.com/u/31756343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohanmohapatra", "html_url": "https://github.com/rohanmohapatra", "followers_url": "https://api.github.com/users/rohanmohapatra/followers", "following_url": "https://api.github.com/users/rohanmohapatra/following{/other_user}", "gists_url": "https://api.github.com/users/rohanmohapatra/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohanmohapatra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohanmohapatra/subscriptions", "organizations_url": "https://api.github.com/users/rohanmohapatra/orgs", "repos_url": "https://api.github.com/users/rohanmohapatra/repos", "events_url": "https://api.github.com/users/rohanmohapatra/events{/privacy}", "received_events_url": "https://api.github.com/users/rohanmohapatra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 192940628, "node_id": "MDU6TGFiZWwxOTI5NDA2Mjg=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": "User is asking for help / asking an implementation question. Stackoverflow would be better suited."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-01T19:22:14Z", "updated_at": "2020-02-13T06:22:30Z", "closed_at": "2020-02-13T06:22:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm writing a custom optimizer where the learning rate changes on runtime for each epoch,  is there a way to pass changing `lr` to the Optimizer class on runtime?\r\n\r\nIs there a way I can do it?\r\n```\r\ndef get_updates(self, loss, params):\r\n        grads = self.get_gradients(loss, params)\r\n        self.updates = [K.update_add(self.iterations, 1)]\r\n        \r\n        lr = self.lr\r\n        # momentum\r\n        shapes = [K.int_shape(p) for p in params]\r\n        moments = [K.zeros(shape) for shape in shapes]\r\n        self.weights = [self.iterations] + moments\r\n        for p, g, m in zip(params, grads, moments):\r\n            v = self.momentum * m - lr * g  # velocity\r\n            print(lr, g)\r\n            self.updates.append(K.update(m, v))\r\n\r\n        return self.updates\r\n```\r\n\r\nA custom l_r for each epoch? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13722", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13722/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13722/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13722/events", "html_url": "https://github.com/keras-team/keras/issues/13722", "id": 554045742, "node_id": "MDU6SXNzdWU1NTQwNDU3NDI=", "number": 13722, "title": "ValueError: Graph disconnected: cannot obtain value for tensor Tensor(\"input_6:0\", shape=(?, 224, 224, 3), dtype=float32) at layer \"input_6\". The following previous layers were accessed without issue: [] #3", "user": {"login": "StudentRepresentative", "id": 42467645, "node_id": "MDQ6VXNlcjQyNDY3NjQ1", "avatar_url": "https://avatars3.githubusercontent.com/u/42467645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/StudentRepresentative", "html_url": "https://github.com/StudentRepresentative", "followers_url": "https://api.github.com/users/StudentRepresentative/followers", "following_url": "https://api.github.com/users/StudentRepresentative/following{/other_user}", "gists_url": "https://api.github.com/users/StudentRepresentative/gists{/gist_id}", "starred_url": "https://api.github.com/users/StudentRepresentative/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/StudentRepresentative/subscriptions", "organizations_url": "https://api.github.com/users/StudentRepresentative/orgs", "repos_url": "https://api.github.com/users/StudentRepresentative/repos", "events_url": "https://api.github.com/users/StudentRepresentative/events{/privacy}", "received_events_url": "https://api.github.com/users/StudentRepresentative/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-23T09:45:38Z", "updated_at": "2020-01-24T16:03:41Z", "closed_at": "2020-01-24T16:03:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I run the program in the google colab. If i want to  add one more layer in the code using resnet50. but i got the below error. why?\r\n---------------------------------------------------------\r\nValueError Traceback (most recent call last)\r\nin ()\r\n----> 1 model = Model(inputs = vgg.input,outputs=preds)\r\n2 model = Model(inputs = base_model.input,outputs=preds)\r\n\r\n4 frames\r\n/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/keras/engine/network.py in _map_graph_network(inputs, outputs)\r\n1819 'The following previous layers '\r\n1820 'were accessed without issue: ' +\r\n-> 1821 str(layers_with_complete_input))\r\n1822 for x in nest.flatten(node.output_tensors):\r\n1823 computable_tensors.add(x)\r\n\r\nValueError: Graph disconnected: cannot obtain value for tensor Tensor(\"input_6:0\", shape=(?, 224, 224, 3), dtype=float32) at layer \"input_6\". The following previous layers were accessed without issue: []", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13710", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13710/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13710/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13710/events", "html_url": "https://github.com/keras-team/keras/issues/13710", "id": 552293183, "node_id": "MDU6SXNzdWU1NTIyOTMxODM=", "number": 13710, "title": "Incremental training gets slower after each fit call of keras model", "user": {"login": "dhatraknilam", "id": 36941042, "node_id": "MDQ6VXNlcjM2OTQxMDQy", "avatar_url": "https://avatars1.githubusercontent.com/u/36941042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhatraknilam", "html_url": "https://github.com/dhatraknilam", "followers_url": "https://api.github.com/users/dhatraknilam/followers", "following_url": "https://api.github.com/users/dhatraknilam/following{/other_user}", "gists_url": "https://api.github.com/users/dhatraknilam/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhatraknilam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhatraknilam/subscriptions", "organizations_url": "https://api.github.com/users/dhatraknilam/orgs", "repos_url": "https://api.github.com/users/dhatraknilam/repos", "events_url": "https://api.github.com/users/dhatraknilam/events{/privacy}", "received_events_url": "https://api.github.com/users/dhatraknilam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-20T13:16:25Z", "updated_at": "2020-01-21T09:28:19Z", "closed_at": "2020-01-21T09:28:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I am training autoencoder model with real time data by calling fit method of keras model on each occurance of the sample data. To understand the scenario, please refer https://github.com/keras-team/keras/issues/4446, which says we can call fit multiple times.\r\nRaw code for my implementation is:\r\n`for each_occurance_of_the_sample:\r\nmodel.fit(the_training_sample,the_training_sample)`\r\n\r\nAs I am using autoencoders input and outputs are the same(mentioning to avoid confusion).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13709", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13709/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13709/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13709/events", "html_url": "https://github.com/keras-team/keras/issues/13709", "id": 552202260, "node_id": "MDU6SXNzdWU1NTIyMDIyNjA=", "number": 13709, "title": "ValueError: Error when checking input: expected input_1 to have 5 dimensions, but got array with shape (1221, 50, 50, 1)", "user": {"login": "rustombhesania", "id": 59666958, "node_id": "MDQ6VXNlcjU5NjY2OTU4", "avatar_url": "https://avatars2.githubusercontent.com/u/59666958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rustombhesania", "html_url": "https://github.com/rustombhesania", "followers_url": "https://api.github.com/users/rustombhesania/followers", "following_url": "https://api.github.com/users/rustombhesania/following{/other_user}", "gists_url": "https://api.github.com/users/rustombhesania/gists{/gist_id}", "starred_url": "https://api.github.com/users/rustombhesania/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rustombhesania/subscriptions", "organizations_url": "https://api.github.com/users/rustombhesania/orgs", "repos_url": "https://api.github.com/users/rustombhesania/repos", "events_url": "https://api.github.com/users/rustombhesania/events{/privacy}", "received_events_url": "https://api.github.com/users/rustombhesania/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}, {"id": 192940628, "node_id": "MDU6TGFiZWwxOTI5NDA2Mjg=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": "User is asking for help / asking an implementation question. Stackoverflow would be better suited."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-20T10:16:59Z", "updated_at": "2020-02-04T07:58:27Z", "closed_at": "2020-02-04T07:58:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "<em>Please make sure that this is a Bug or a Feature Request and provide all applicable information asked by the template.\r\nIf your issue is an **implementation question**, please ask your question on [StackOverflow](http://stackoverflow.com/questions/tagged/keras) or [on the Keras Slack channel](https://keras-slack-autojoin.herokuapp.com/) instead of opening a GitHub issue.</em>  \r\n\r\n**System information**  \r\n- Have I written custom code (as opposed to using example directory):  \r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  \r\n- TensorFlow backend (yes / no):  \r\n- TensorFlow version:  \r\n- Keras version:  \r\n- Python version:  \r\n- CUDA/cuDNN version:  \r\n- GPU model and memory:  \r\n\r\nYou can obtain the TensorFlow version with:  \r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"  \r\nYou can obtain the Keras version with:  \r\npython -c 'import keras as k; print(k.__version__)'  \r\n\r\n**Describe the current behavior**  \r\n\r\n**Describe the expected behavior**  \r\n\r\n**Code to reproduce the issue**  \r\nProvide a reproducible test case that is the bare minimum necessary to generate the problem.  \r\n\r\n**Other info / logs**  \r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.  \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13707", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13707/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13707/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13707/events", "html_url": "https://github.com/keras-team/keras/issues/13707", "id": 552038056, "node_id": "MDU6SXNzdWU1NTIwMzgwNTY=", "number": 13707, "title": "What does keras mean?", "user": {"login": "zzj0402", "id": 15345547, "node_id": "MDQ6VXNlcjE1MzQ1NTQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/15345547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zzj0402", "html_url": "https://github.com/zzj0402", "followers_url": "https://api.github.com/users/zzj0402/followers", "following_url": "https://api.github.com/users/zzj0402/following{/other_user}", "gists_url": "https://api.github.com/users/zzj0402/gists{/gist_id}", "starred_url": "https://api.github.com/users/zzj0402/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zzj0402/subscriptions", "organizations_url": "https://api.github.com/users/zzj0402/orgs", "repos_url": "https://api.github.com/users/zzj0402/repos", "events_url": "https://api.github.com/users/zzj0402/events{/privacy}", "received_events_url": "https://api.github.com/users/zzj0402/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 192940628, "node_id": "MDU6TGFiZWwxOTI5NDA2Mjg=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": "User is asking for help / asking an implementation question. Stackoverflow would be better suited."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-01-20T02:52:27Z", "updated_at": "2020-02-12T07:21:36Z", "closed_at": "2020-02-12T07:21:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Why calls this library keras? \r\n\r\n> Keras (\u03ba\u03ad\u03c1\u03b1\u03c2) means horn in Greek. K\u1ebdras means sorcery in Lithuanian", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13687", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13687/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13687/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13687/events", "html_url": "https://github.com/keras-team/keras/issues/13687", "id": 548403834, "node_id": "MDU6SXNzdWU1NDg0MDM4MzQ=", "number": 13687, "title": "write multiple input loss function error", "user": {"login": "viet24dung", "id": 29888435, "node_id": "MDQ6VXNlcjI5ODg4NDM1", "avatar_url": "https://avatars2.githubusercontent.com/u/29888435?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viet24dung", "html_url": "https://github.com/viet24dung", "followers_url": "https://api.github.com/users/viet24dung/followers", "following_url": "https://api.github.com/users/viet24dung/following{/other_user}", "gists_url": "https://api.github.com/users/viet24dung/gists{/gist_id}", "starred_url": "https://api.github.com/users/viet24dung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viet24dung/subscriptions", "organizations_url": "https://api.github.com/users/viet24dung/orgs", "repos_url": "https://api.github.com/users/viet24dung/repos", "events_url": "https://api.github.com/users/viet24dung/events{/privacy}", "received_events_url": "https://api.github.com/users/viet24dung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-11T09:00:44Z", "updated_at": "2020-01-12T10:29:15Z", "closed_at": "2020-01-12T10:29:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello everybody!!\r\nI just write Model test with multiple output and I want take it all and put it into loss function.\r\nBut when I write model code with \r\n`\r\nmodel = Model([model.input, *y_true], [predic_label,L_loss])\r\n`\r\npredic_label and L_loss is output of lambda layer\r\nshape:\r\n   predic_label : (None,10)\r\n   L_loss           : (None,1)\r\nAnd I compile with \r\n`\r\ndef custom_Loss(y_true, y_pred):\r\n    return y_pred\r\nmodel.compile(optimizer=optimizer ,loss={\"L_loss\": custom_Loss})\r\n`\r\nI put breakpoint into \"custom_Loss\" function and I receive two times break in function \"custom_Loss\"\r\n\r\npls help me !!!!!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13679", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13679/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13679/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13679/events", "html_url": "https://github.com/keras-team/keras/issues/13679", "id": 547440496, "node_id": "MDU6SXNzdWU1NDc0NDA0OTY=", "number": 13679, "title": "Training Script failed with no Error Stack \"exit code 1073740791 0xc0000409\"", "user": {"login": "OisinWatkins", "id": 49038398, "node_id": "MDQ6VXNlcjQ5MDM4Mzk4", "avatar_url": "https://avatars2.githubusercontent.com/u/49038398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OisinWatkins", "html_url": "https://github.com/OisinWatkins", "followers_url": "https://api.github.com/users/OisinWatkins/followers", "following_url": "https://api.github.com/users/OisinWatkins/following{/other_user}", "gists_url": "https://api.github.com/users/OisinWatkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/OisinWatkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OisinWatkins/subscriptions", "organizations_url": "https://api.github.com/users/OisinWatkins/orgs", "repos_url": "https://api.github.com/users/OisinWatkins/repos", "events_url": "https://api.github.com/users/OisinWatkins/events{/privacy}", "received_events_url": "https://api.github.com/users/OisinWatkins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}, {"id": 192940623, "node_id": "MDU6TGFiZWwxOTI5NDA2MjM=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-09T12:11:12Z", "updated_at": "2020-02-06T10:56:01Z", "closed_at": "2020-02-06T10:56:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "-Keras Version: 2.3.1\r\n-Tensorflow Version: 2.0\r\n-OS: Windows 10\r\n-Running on: CPU Processor\tIntel(R) Core(TM) i7-8850H\r\n-Developed in: PyCharm\r\n\r\nI'm attempting to build a novel model using an implementation of a highway layer (implementation found at: https://gist.github.com/iskandr/a874e4cf358697037d14a17020304535). There was a typo listed on this page which is corrected in my copy of the code.\r\n\r\nI have a simplified version of the code I'm using below:\r\n\r\n```python\r\nimport scipy.io as io\r\nimport os\r\nimport numpy as np\r\nfrom keras import layers, losses, Input\r\nfrom keras.models import Model\r\nfrom keras2_highway_network import highway_layers\r\n\r\ndef simple_generator(dim1, dim2, dim3, batch_size=5):\r\n    while True:\r\n        samples = np.random.random_sample((batch_size, dim1, dim2, dim3))\r\n        targets = np.random.random_sample((batch_size, 3))\r\n        yield samples, targets\r\n\r\nexample_shape = (1100, 4096, 2)\r\n\r\ntrain_gen = simple_generator(example_shape[0], example_shape[1], example_shape[2], batch_size=10)\r\nval_gen = simple_generator(example_shape[0], example_shape[1], example_shape[2])\r\ntest_gen = simple_generator(example_shape[0], example_shape[1], example_shape[2])\r\n\r\ninput_tensor = Input(shape=example_shape)\r\nx = layers.Conv2D(32, 3, activation='relu')(input_tensor)\r\nx = layers.MaxPool2D(pool_size=(3, 3), strides=3)(x)\r\nx = layers.Dense(32, activation='relu')(x)\r\nx = highway_layers(x, 32, activation='relu')\r\nx = highway_layers(x, 32, activation='relu')\r\nx = highway_layers(x, 32, activation='relu')\r\nx = layers.Conv2D(32, 3, activation='relu')(x)\r\nx = layers.MaxPool2D(pool_size=(3, 3), strides=3)(x)\r\nx = layers.Dense(16, activation='relu')(x)\r\nx = highway_layers(x, 16, activation='relu')\r\nx = highway_layers(x, 16, activation='relu')\r\nx = highway_layers(x, 16, activation='relu')\r\nx = layers.Flatten()(x)\r\noutput_tensor = layers.Dense(3)(x)\r\n\r\nmodel = Model(input_tensor, output_tensor)\r\n\r\nmodel.compile(loss=losses.mean_absolute_error, optimizer='sgd')\r\nmodel.summary()\r\n\r\nhistory = model.fit_generator(generator=train_gen, steps_per_epoch=25, epochs=12, validation_data=val_gen, validation_steps=10, verbose=True)\r\n```\r\n\r\nThe resulting network has around 2.5 million parameters, which despite the warnings my machine prints it can handle no problem. Once training begins I get a warning about the amount of memory I'm using, which I expect, and then the script simply stops running. The only stack trace I get is: \"exit code 1073740791 0xc0000409\"\r\n\r\nI have seen this is one other issue that was raised in this git, however it has been tagged as \"stale\" with no answer posted, so I thought I'd ask again.\r\n\r\nThanks in advance for your time!\r\nAll the best,\r\nOis\u00edn.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13678", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13678/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13678/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13678/events", "html_url": "https://github.com/keras-team/keras/issues/13678", "id": 547398637, "node_id": "MDU6SXNzdWU1NDczOTg2Mzc=", "number": 13678, "title": "Patch size for fit_generator and validation_generator", "user": {"login": "majd1988shahin", "id": 19611740, "node_id": "MDQ6VXNlcjE5NjExNzQw", "avatar_url": "https://avatars0.githubusercontent.com/u/19611740?v=4", "gravatar_id": "", "url": "https://api.github.com/users/majd1988shahin", "html_url": "https://github.com/majd1988shahin", "followers_url": "https://api.github.com/users/majd1988shahin/followers", "following_url": "https://api.github.com/users/majd1988shahin/following{/other_user}", "gists_url": "https://api.github.com/users/majd1988shahin/gists{/gist_id}", "starred_url": "https://api.github.com/users/majd1988shahin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/majd1988shahin/subscriptions", "organizations_url": "https://api.github.com/users/majd1988shahin/orgs", "repos_url": "https://api.github.com/users/majd1988shahin/repos", "events_url": "https://api.github.com/users/majd1988shahin/events{/privacy}", "received_events_url": "https://api.github.com/users/majd1988shahin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-09T10:45:53Z", "updated_at": "2020-01-09T11:17:38Z", "closed_at": "2020-01-09T10:53:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13676", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13676/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13676/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13676/events", "html_url": "https://github.com/keras-team/keras/issues/13676", "id": 547261224, "node_id": "MDU6SXNzdWU1NDcyNjEyMjQ=", "number": 13676, "title": "doing tensor indexing but got AssertionError: Expected all args to be Tensors or Variables; but got CompositeTensor", "user": {"login": "XzwHan", "id": 16746926, "node_id": "MDQ6VXNlcjE2NzQ2OTI2", "avatar_url": "https://avatars2.githubusercontent.com/u/16746926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XzwHan", "html_url": "https://github.com/XzwHan", "followers_url": "https://api.github.com/users/XzwHan/followers", "following_url": "https://api.github.com/users/XzwHan/following{/other_user}", "gists_url": "https://api.github.com/users/XzwHan/gists{/gist_id}", "starred_url": "https://api.github.com/users/XzwHan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XzwHan/subscriptions", "organizations_url": "https://api.github.com/users/XzwHan/orgs", "repos_url": "https://api.github.com/users/XzwHan/repos", "events_url": "https://api.github.com/users/XzwHan/events{/privacy}", "received_events_url": "https://api.github.com/users/XzwHan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}, {"id": 192940628, "node_id": "MDU6TGFiZWwxOTI5NDA2Mjg=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": "User is asking for help / asking an implementation question. Stackoverflow would be better suited."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-09T05:37:20Z", "updated_at": "2020-01-13T19:20:31Z", "closed_at": "2020-01-13T19:20:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm implementing a model for multi-class classification task, and the code runs when I call Model.fit() method. However, .fit() requires the entire dataset to be generated at once, which is too big in my case. Therefore, I'm trying .train_on_batch() and .fit_generator(). However, they both would give me the following error:\r\n```\r\nAssertionError: Expected all args to be Tensors or Variables; but got CompositeTensor: [<tensorflow.python.framework.indexed_slices.IndexedSlices object at 0x63d16c910>]\r\n```\r\n\r\nI'm able to identify the part of model that caused this error: at this step I need to aggregate the input data by their labels, and take the mean for the data belonging to each distinct class. Such step requires some tensor indexing, thus I applied multiple ways of coding (including the application of tf.boolean_mask, tf.gather, tf.where). Based on the error message, it seems to me that .train_on_batch() and .fit_generator() wouldn't accept such tensor indexing; however, this is a crucial step suggested by a published research paper that I need to keep.\r\n\r\nAny suggestions on how to make tensor indexing work for .train_on_batch() and/or .fit_generator()? The complete error message is attached as follows:\r\n```\r\n---------------------------------------------------------------------------\r\nAssertionError                            Traceback (most recent call last)\r\n<ipython-input-32-0ed5374101bd> in <module>\r\n      5                          # Here number of steps is the number of training tasks.\r\n      6 vanilla_model.fit_generator(generator=model.single_task_generator(), steps_per_epoch=steps_per_epoch, epochs=1, verbose=1, \\\r\n----> 7                         use_multiprocessing=False, shuffle=False)\r\n      8 \r\n      9 elapsed = time.time() - t\r\n\r\n/opt/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/training.py in fit_generator(self, generator, steps_per_epoch, epochs, verbose, callbacks, validation_data, validation_steps, validation_freq, class_weight, max_queue_size, workers, use_multiprocessing, shuffle, initial_epoch)\r\n   1295         shuffle=shuffle,\r\n   1296         initial_epoch=initial_epoch,\r\n-> 1297         steps_name='steps_per_epoch')\r\n   1298 \r\n   1299   def evaluate_generator(self,\r\n\r\n/opt/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/training_generator.py in model_iteration(model, data, steps_per_epoch, epochs, verbose, callbacks, validation_data, validation_steps, validation_freq, class_weight, max_queue_size, workers, use_multiprocessing, shuffle, initial_epoch, mode, batch_size, steps_name, **kwargs)\r\n    263 \r\n    264       is_deferred = not model._is_compiled\r\n--> 265       batch_outs = batch_function(*batch_data)\r\n    266       if not isinstance(batch_outs, list):\r\n    267         batch_outs = [batch_outs]\r\n\r\n/opt/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/training.py in train_on_batch(self, x, y, sample_weight, class_weight, reset_metrics)\r\n    971       outputs = training_v2_utils.train_on_batch(\r\n    972           self, x, y=y, sample_weight=sample_weight,\r\n--> 973           class_weight=class_weight, reset_metrics=reset_metrics)\r\n    974       outputs = (outputs['total_loss'] + outputs['output_losses'] +\r\n    975                  outputs['metrics'])\r\n\r\n/opt/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/training_v2_utils.py in train_on_batch(model, x, y, sample_weight, class_weight, reset_metrics)\r\n    262       y,\r\n    263       sample_weights=sample_weights,\r\n--> 264       output_loss_metrics=model._output_loss_metrics)\r\n    265 \r\n    266   if reset_metrics:\r\n\r\n/opt/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/training_eager.py in train_on_batch(model, inputs, targets, sample_weights, output_loss_metrics)\r\n    309           sample_weights=sample_weights,\r\n    310           training=True,\r\n--> 311           output_loss_metrics=output_loss_metrics))\r\n    312   if not isinstance(outs, list):\r\n    313     outs = [outs]\r\n\r\n/opt/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/training_eager.py in _process_single_batch(model, inputs, targets, output_loss_metrics, sample_weights, training)\r\n    266           model._backwards(tape, scaled_total_loss)\r\n    267         else:\r\n--> 268           grads = tape.gradient(scaled_total_loss, trainable_weights)\r\n    269           if isinstance(model.optimizer,\r\n    270                         loss_scale_optimizer.LossScaleOptimizer):\r\n\r\n/opt/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/eager/backprop.py in gradient(self, target, sources, output_gradients, unconnected_gradients)\r\n   1012         output_gradients=output_gradients,\r\n   1013         sources_raw=flat_sources_raw,\r\n-> 1014         unconnected_gradients=unconnected_gradients)\r\n   1015 \r\n   1016     if not self._persistent:\r\n\r\n/opt/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/eager/imperative_grad.py in imperative_grad(tape, target, sources, output_gradients, sources_raw, unconnected_gradients)\r\n     74       output_gradients,\r\n     75       sources_raw,\r\n---> 76       compat.as_str(unconnected_gradients.value))\r\n\r\n/opt/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/eager/function.py in _backward_function_wrapper(*args)\r\n    909           break\r\n    910       return self._backward._call_flat(  # pylint: disable=protected-access\r\n--> 911           processed_args, remapped_captures)\r\n    912 \r\n    913     return _backward_function_wrapper, recorded_outputs\r\n\r\n/opt/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/eager/function.py in _call_flat(self, args, captured_inputs, cancellation_manager)\r\n   1169     if any(isinstance(a, composite_tensor.CompositeTensor) for a in args):\r\n   1170       raise AssertionError(\"Expected all args to be Tensors or Variables; \"\r\n-> 1171                            \"but got CompositeTensor: %r\" % args)\r\n   1172 \r\n   1173     if (tape.could_possibly_record() or\r\n\r\nAssertionError: Expected all args to be Tensors or Variables; but got CompositeTensor: [<tensorflow.python.framework.indexed_slices.IndexedSlices object at 0x63d16c910>]\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13657", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13657/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13657/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13657/events", "html_url": "https://github.com/keras-team/keras/issues/13657", "id": 543232224, "node_id": "MDU6SXNzdWU1NDMyMzIyMjQ=", "number": 13657, "title": "Keras 2.3.1 PyQt5 QThread '_thread._local' object has no attribute 'value'", "user": {"login": "tinyms", "id": 331649, "node_id": "MDQ6VXNlcjMzMTY0OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/331649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tinyms", "html_url": "https://github.com/tinyms", "followers_url": "https://api.github.com/users/tinyms/followers", "following_url": "https://api.github.com/users/tinyms/following{/other_user}", "gists_url": "https://api.github.com/users/tinyms/gists{/gist_id}", "starred_url": "https://api.github.com/users/tinyms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tinyms/subscriptions", "organizations_url": "https://api.github.com/users/tinyms/orgs", "repos_url": "https://api.github.com/users/tinyms/repos", "events_url": "https://api.github.com/users/tinyms/events{/privacy}", "received_events_url": "https://api.github.com/users/tinyms/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}, {"id": 192940623, "node_id": "MDU6TGFiZWwxOTI5NDA2MjM=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-28T16:29:22Z", "updated_at": "2020-01-06T08:25:16Z", "closed_at": "2020-01-06T08:25:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "`tensorflow==2.1.0\r\nKeras==2.3.1`\r\n\r\nself.model.add(Dense(units=128, input_dim=input_dim, kernel_initializer=self.init, activation='relu'))\r\n\r\nthrow:\r\n\r\n`if _SYMBOLIC_SCOPE.value:\r\nAttributeError: '_thread._local' object has no attribute 'value'\r\n`\r\n\r\nbut\r\n\r\n`tensorflow==1.14\r\nKeras==2.2.5`\r\n\r\nOK", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13654", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13654/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13654/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13654/events", "html_url": "https://github.com/keras-team/keras/issues/13654", "id": 542382340, "node_id": "MDU6SXNzdWU1NDIzODIzNDA=", "number": 13654, "title": "customize loss function for Model.compile() loss argument", "user": {"login": "XzwHan", "id": 16746926, "node_id": "MDQ6VXNlcjE2NzQ2OTI2", "avatar_url": "https://avatars2.githubusercontent.com/u/16746926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XzwHan", "html_url": "https://github.com/XzwHan", "followers_url": "https://api.github.com/users/XzwHan/followers", "following_url": "https://api.github.com/users/XzwHan/following{/other_user}", "gists_url": "https://api.github.com/users/XzwHan/gists{/gist_id}", "starred_url": "https://api.github.com/users/XzwHan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XzwHan/subscriptions", "organizations_url": "https://api.github.com/users/XzwHan/orgs", "repos_url": "https://api.github.com/users/XzwHan/repos", "events_url": "https://api.github.com/users/XzwHan/events{/privacy}", "received_events_url": "https://api.github.com/users/XzwHan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}, {"id": 192940628, "node_id": "MDU6TGFiZWwxOTI5NDA2Mjg=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": "User is asking for help / asking an implementation question. Stackoverflow would be better suited."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-25T20:23:53Z", "updated_at": "2020-01-13T19:53:27Z", "closed_at": "2020-01-13T19:53:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I plan to use the sum of the negative log-likelihood from two distinct networks with two distinct dataset as my loss function, i.e. it would look something like\r\n```\r\ncustom_loss = - (network1_output.log_prob(Y_1)+network2_output.log_prob(Y_2))\r\n```\r\nbut as I ran \r\n```\r\nmodel.compile(loss=custom_loss...)\r\n```\r\nI came across the following error:\r\n```\r\nOperatorNotAllowedInGraphError: using a `tf.Tensor` as a Python `bool` is not allowed in Graph execution. Use Eager execution or decorate this function with @tf.function.\r\n```\r\nI'm able to see that the output of custom_loss is a tf.Tensor object with shape=(None,), however the loss argument in Model.compile() function expects a function; but how do I customize a loss function that computes the log_prob from a distribution? The posts I found online pointed me to use Keras.backend.function() to construct custom loss function, and I tried something like\r\n```\r\ncustom_loss_func = tfk.backend.function((network1_output, Y_1, network2_output, Y_2), custom_loss)\r\nmodel.compile(loss=custom_loss_func...)\r\n```\r\nbut received \r\n```\r\nAttributeError: 'Independent' object has no attribute 'op'\r\n```\r\nfrom the first line of code above.\r\n\r\nSo this is what I've tried so far; any suggestions on how to make custom loss function with above mentioned pattern?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13647", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13647/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13647/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13647/events", "html_url": "https://github.com/keras-team/keras/issues/13647", "id": 541559409, "node_id": "MDU6SXNzdWU1NDE1NTk0MDk=", "number": 13647, "title": "ValueError: Error when checking target: expected activation_16 to have shape (2,) but got array with shape (1,)", "user": {"login": "jyotihirak11", "id": 57318356, "node_id": "MDQ6VXNlcjU3MzE4MzU2", "avatar_url": "https://avatars0.githubusercontent.com/u/57318356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyotihirak11", "html_url": "https://github.com/jyotihirak11", "followers_url": "https://api.github.com/users/jyotihirak11/followers", "following_url": "https://api.github.com/users/jyotihirak11/following{/other_user}", "gists_url": "https://api.github.com/users/jyotihirak11/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyotihirak11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyotihirak11/subscriptions", "organizations_url": "https://api.github.com/users/jyotihirak11/orgs", "repos_url": "https://api.github.com/users/jyotihirak11/repos", "events_url": "https://api.github.com/users/jyotihirak11/events{/privacy}", "received_events_url": "https://api.github.com/users/jyotihirak11/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-23T03:52:43Z", "updated_at": "2020-02-24T13:05:48Z", "closed_at": "2020-02-24T13:05:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "model = Sequential()\r\ninput_shape=(128,128,1)\r\nmodel.add(Conv2D(24,(5,5), strides=(1,1), input_shape=input_shape))\r\nmodel.add(MaxPooling2D ((4,2), strides= (4,2)))\r\nmodel.add(Activation('relu'))\r\nmodel.add(Conv2D (48, (5,5), padding = 'valid'))\r\nmodel.add(MaxPooling2D ((4,2), strides = (4,2)))\r\nmodel.add(Activation('relu'))\r\n\r\nmodel.add(Conv2D (48, (5,5), padding = 'valid'))\r\nmodel.add(Activation('relu'))\r\nmodel.add(Flatten())\r\nmodel.add(Dropout( rate = 0.5))\r\n\r\nmodel.add(Dense(64))\r\nmodel.add(Activation('relu'))\r\nmodel.add(Dropout(rate= 0.5))\r\n\r\n\r\nmodel.add(Dense(2))\r\nmodel.add(Activation('softmax'))\r\n\r\nmodel.compile(\r\n    optimizer=\"Adam\",\r\n    loss = \"categorical_crossentropy\",\r\n    metrics=['accuracy'])\r\n\r\nmodel.fit(\r\n    x = X_train,\r\n    y = Y_train,\r\n    epochs = 10,\r\n    batch_size = 20,\r\n    validation_data = (X_test, Y_test))\r\n\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-40-1409f39ed0f1> in <module>\r\n      4     epochs = 10,\r\n      5     batch_size = 20,\r\n----> 6     validation_data = (X_test, Y_test))\r\n\r\nc:\\users\\admin\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\keras\\engine\\training.py in fit(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_freq, max_queue_size, workers, use_multiprocessing, **kwargs)\r\n   1108                 val_x, val_y,\r\n   1109                 sample_weight=val_sample_weight,\r\n-> 1110                 batch_size=batch_size)\r\n   1111             if self._uses_dynamic_learning_phase():\r\n   1112                 val_inputs = val_x + val_y + val_sample_weights + [0.]\r\n\r\nc:\\users\\admin\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\keras\\engine\\training.py in _standardize_user_data(self, x, y, sample_weight, class_weight, check_array_lengths, batch_size)\r\n    793                 feed_output_shapes,\r\n    794                 check_batch_axis=False,  # Don't enforce the batch size.\r\n--> 795                 exception_prefix='target')\r\n    796 \r\n    797             # Generate sample-wise weight values given the `sample_weight` and\r\nc:\\users\\admin\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\keras\\engine\\training_utils.py in standardize_input_data(data, names, shapes, check_batch_axis, exception_prefix)\r\n    139                             ': expected ' + names[i] + ' to have shape ' +\r\n    140                             str(shape) + ' but got array with shape ' +\r\n--> 141                             str(data_shape))\r\n    142     return data\r\n    143 \r\n\r\nValueError: Error when checking target: expected activation_16 to have shape (2,) but got array with shape(1,)\r\n#Unable to solve\r\n\u00a0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13646", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13646/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13646/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13646/events", "html_url": "https://github.com/keras-team/keras/issues/13646", "id": 541509250, "node_id": "MDU6SXNzdWU1NDE1MDkyNTA=", "number": 13646, "title": "Keras Model.predict for multiple inputs with different numbers of first dimension", "user": {"login": "XzwHan", "id": 16746926, "node_id": "MDQ6VXNlcjE2NzQ2OTI2", "avatar_url": "https://avatars2.githubusercontent.com/u/16746926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XzwHan", "html_url": "https://github.com/XzwHan", "followers_url": "https://api.github.com/users/XzwHan/followers", "following_url": "https://api.github.com/users/XzwHan/following{/other_user}", "gists_url": "https://api.github.com/users/XzwHan/gists{/gist_id}", "starred_url": "https://api.github.com/users/XzwHan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XzwHan/subscriptions", "organizations_url": "https://api.github.com/users/XzwHan/orgs", "repos_url": "https://api.github.com/users/XzwHan/repos", "events_url": "https://api.github.com/users/XzwHan/events{/privacy}", "received_events_url": "https://api.github.com/users/XzwHan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 820705121, "node_id": "MDU6TGFiZWw4MjA3MDUxMjE=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": "The user is asking for a new feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-22T22:34:41Z", "updated_at": "2020-07-20T15:01:25Z", "closed_at": "2020-01-13T19:23:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are able to use Model.predict(x=[input1, input2],...) to have multiple inputs for the model by putting them into a list; however, by entering input1 and input2 with different number of rows, I encountered the following error:\r\n\r\n```\r\nValueError: Data cardinality is ambiguous:\r\n  x sizes: 10, 200\r\nPlease provide data which shares the same first dimension.\r\n```\r\n\r\nMy understanding is that the model treats each row as a individual datapoint, and the same row for input1 and input2 belongs to the same datapoint, therefore the first dimension must match; however, here I plan to use aggregate input1 altogether to form **one representation**, and concatenate this one output with **each individual row of input2** as the input the the next network.\r\n\r\nIn other words, my goal is to make a prediction for **each datapoint from input2**, and I want to **use input1 as a whole**.\r\n\r\nI'm able to build the computational graph and train the model; as long as the first dimension of input1 and input2 matches there's no issue. But here I plan to have input2 with arbitrary number of datapoints. I'm thus wondering if in Keras we can relax such requirements for multiple inputs?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13644", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13644/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13644/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13644/events", "html_url": "https://github.com/keras-team/keras/issues/13644", "id": 540796985, "node_id": "MDU6SXNzdWU1NDA3OTY5ODU=", "number": 13644, "title": "ValueError: Error when checking input: expected input_1 to have shape (3, 224, 224) but got array with shape (3, 224, 244)", "user": {"login": "kahaseg", "id": 57523975, "node_id": "MDQ6VXNlcjU3NTIzOTc1", "avatar_url": "https://avatars1.githubusercontent.com/u/57523975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kahaseg", "html_url": "https://github.com/kahaseg", "followers_url": "https://api.github.com/users/kahaseg/followers", "following_url": "https://api.github.com/users/kahaseg/following{/other_user}", "gists_url": "https://api.github.com/users/kahaseg/gists{/gist_id}", "starred_url": "https://api.github.com/users/kahaseg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kahaseg/subscriptions", "organizations_url": "https://api.github.com/users/kahaseg/orgs", "repos_url": "https://api.github.com/users/kahaseg/repos", "events_url": "https://api.github.com/users/kahaseg/events{/privacy}", "received_events_url": "https://api.github.com/users/kahaseg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1289335565, "node_id": "MDU6TGFiZWwxMjg5MzM1NTY1", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:theano", "name": "backend:theano", "color": "e89537", "default": false, "description": "The user is using the Theano backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-20T06:30:18Z", "updated_at": "2019-12-20T07:02:27Z", "closed_at": "2019-12-20T07:02:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please make sure that the boxes below are checked before you submit your issue.\r\nIf your issue is an **implementation question**, please ask your question on [StackOverflow](http://stackoverflow.com/questions/tagged/keras) or [on the Keras Slack channel](https://keras-slack-autojoin.herokuapp.com/) instead of opening a GitHub issue.\r\n\r\nThank you!\r\n\r\n- [x] Check that you are up-to-date with the master branch of Keras. You can update with:\r\n`pip install git+git://github.com/keras-team/keras.git --upgrade --no-deps`\r\n\r\n- [x] Check that you are up-to-date with the master branch of Theano. You can update with:\r\n`pip install git+git://github.com/Theano/Theano.git --upgrade --no-deps`\r\n\r\n- [x] Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13628", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13628/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13628/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13628/events", "html_url": "https://github.com/keras-team/keras/issues/13628", "id": 536738373, "node_id": "MDU6SXNzdWU1MzY3MzgzNzM=", "number": 13628, "title": "Trouble building Autoencoder with multiple loss functions and outputs.", "user": {"login": "apaz-cli", "id": 47389403, "node_id": "MDQ6VXNlcjQ3Mzg5NDAz", "avatar_url": "https://avatars3.githubusercontent.com/u/47389403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaz-cli", "html_url": "https://github.com/apaz-cli", "followers_url": "https://api.github.com/users/apaz-cli/followers", "following_url": "https://api.github.com/users/apaz-cli/following{/other_user}", "gists_url": "https://api.github.com/users/apaz-cli/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaz-cli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaz-cli/subscriptions", "organizations_url": "https://api.github.com/users/apaz-cli/orgs", "repos_url": "https://api.github.com/users/apaz-cli/repos", "events_url": "https://api.github.com/users/apaz-cli/events{/privacy}", "received_events_url": "https://api.github.com/users/apaz-cli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 192940628, "node_id": "MDU6TGFiZWwxOTI5NDA2Mjg=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": "User is asking for help / asking an implementation question. Stackoverflow would be better suited."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-12T03:38:19Z", "updated_at": "2020-06-22T22:29:46Z", "closed_at": "2020-06-22T22:29:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I whipped up a diagram in MS Paint to illustrate my current issue.\r\n<img src=\"https://cdn.discordapp.com/attachments/472924293593038858/654466119167508481/Keras_Problem.png\">\r\n\r\nI'm trying to implement the architecture shown above, but I can't get the inputs, outputs, and loss functions to line up. A simple Encoder/Decoder is easy, and I have it working. But I want a week of fiddling later, I still can't get it set up the way illustrated above, and have to ask for help.\r\n\r\nWhat I had goes something like:\r\n```\r\ncombined_input_layer = Input(shape=i_shape)\r\nnoised_input = noise_layer(combined_input_layer)\r\n\r\nvec1 = encoder(combined_input_layer)\r\nvec2 = encoder(noised_input)\r\n\r\n\r\nunencoded_original = decoder(vec1)\r\n\r\n\r\ncombined_model = Model(input=combined_input_layer, outputs=[unencoded_original, ??])\r\n\r\ncombined_model.compile(loss=[mean_squared_error, ???], output=[decoded, ???])\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13627", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13627/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13627/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13627/events", "html_url": "https://github.com/keras-team/keras/issues/13627", "id": 536588863, "node_id": "MDU6SXNzdWU1MzY1ODg4NjM=", "number": 13627, "title": "assert num_words % self.minibatch_size == 0 AssertionError", "user": {"login": "saiful79", "id": 25613839, "node_id": "MDQ6VXNlcjI1NjEzODM5", "avatar_url": "https://avatars2.githubusercontent.com/u/25613839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saiful79", "html_url": "https://github.com/saiful79", "followers_url": "https://api.github.com/users/saiful79/followers", "following_url": "https://api.github.com/users/saiful79/following{/other_user}", "gists_url": "https://api.github.com/users/saiful79/gists{/gist_id}", "starred_url": "https://api.github.com/users/saiful79/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saiful79/subscriptions", "organizations_url": "https://api.github.com/users/saiful79/orgs", "repos_url": "https://api.github.com/users/saiful79/repos", "events_url": "https://api.github.com/users/saiful79/events{/privacy}", "received_events_url": "https://api.github.com/users/saiful79/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 192940628, "node_id": "MDU6TGFiZWwxOTI5NDA2Mjg=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": "User is asking for help / asking an implementation question. Stackoverflow would be better suited."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-11T20:10:51Z", "updated_at": "2020-02-18T20:35:10Z", "closed_at": "2020-02-18T20:35:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for your great job image_ocr.py keras implementation.Here this project was train wordlists mono and bi clean txt file with 16000 and 32000 word pre epoch. Could you please talk me what this value assign instead of 16000 or 32000 for my custom dataset.\r\nI have 7017 image file but i do not understand which value assign ```words_per_epoch``` instead of 16000. please give me a clear understanding when change my dataset image number. \r\n\r\n \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13622", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13622/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13622/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13622/events", "html_url": "https://github.com/keras-team/keras/issues/13622", "id": 536078173, "node_id": "MDU6SXNzdWU1MzYwNzgxNzM=", "number": 13622, "title": "Travis CI inconsistencies", "user": {"login": "ns3284", "id": 43015596, "node_id": "MDQ6VXNlcjQzMDE1NTk2", "avatar_url": "https://avatars2.githubusercontent.com/u/43015596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ns3284", "html_url": "https://github.com/ns3284", "followers_url": "https://api.github.com/users/ns3284/followers", "following_url": "https://api.github.com/users/ns3284/following{/other_user}", "gists_url": "https://api.github.com/users/ns3284/gists{/gist_id}", "starred_url": "https://api.github.com/users/ns3284/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ns3284/subscriptions", "organizations_url": "https://api.github.com/users/ns3284/orgs", "repos_url": "https://api.github.com/users/ns3284/repos", "events_url": "https://api.github.com/users/ns3284/events{/privacy}", "received_events_url": "https://api.github.com/users/ns3284/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-11T00:54:39Z", "updated_at": "2019-12-11T04:08:33Z", "closed_at": "2019-12-11T04:08:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Two failures randomly occured on different pull requests, due to randomness.\r\n\r\nhttps://travis-ci.org/keras-team/keras/jobs/623449629?utm_medium=notification&utm_source=github_status\r\n\r\nhttps://travis-ci.org/keras-team/keras/jobs/623121361?utm_medium=notification&utm_source=github_status\r\n\r\nBoth of these failed for issues unrelated to the pull request. One failed because shuffle of [0,1,2] ended up == [0,1,2] by chance\r\n\r\n```\r\n            for x, y in generator.flow(images, np.arange(num_samples),\r\n                                       shuffle=True, save_to_dir=str(tmpdir),\r\n                                       batch_size=3):\r\n                assert x.shape == images[:3].shape\r\n                # Check that the sequence is shuffled.\r\n>               assert list(y) != [0, 1, 2]\r\nE               assert [0, 1, 2] != [0, 1, 2]\r\nE                +  where [0, 1, 2] = list(array([0, 1, 2]))\r\n```\r\n\r\nAnother failed a backend check, but passed when ran again..\r\n\r\n```\r\n    def test_truncated_normal(self):\r\n        mean = 0.\r\n        std = 1.\r\n        min_val = -2.\r\n        max_val = 2.\r\n        rand = K.eval(K.truncated_normal((200, 200),\r\n                                         mean=mean,\r\n                                         stddev=std))\r\n        assert rand.shape == (200, 200)\r\n        assert np.abs(np.mean(rand) - mean) < 0.016\r\n        assert np.max(rand) <= max_val\r\n        assert np.min(rand) >= min_val\r\n    \r\n        # assumption in initializers.VarianceScaling\r\n>       assert np.abs(np.std(rand) - std * 0.87962) < 0.015\r\nE       AssertionError: assert 0.017673031215667767 < 0.015\r\nE        +  where 0.017673031215667767 = <ufunc 'absolute'>((0.89729303 - (1.0 * 0.87962)))\r\nE        +    where <ufunc 'absolute'> = np.abs\r\nE        +    and   0.89729303 = <function std at 0x7f3ce0228510>(array([[-0.77773714,  0.28669906, -1.0967847 , ..., -0.09991404,\\n         0.7957054 ,  0.14015007],\\n       [ 0.1125192... ],\\n       [ 1.5262163 ,  1.1386384 , -0.6881737 , ..., -1.332398  ,\\n         0.62963486, -1.4315474 ]], dtype=float32))\r\nE        +      where <function std at 0x7f3ce0228510> = np.std\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13621", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13621/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13621/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13621/events", "html_url": "https://github.com/keras-team/keras/issues/13621", "id": 535812922, "node_id": "MDU6SXNzdWU1MzU4MTI5MjI=", "number": 13621, "title": "Using output as a separate acitvation layer causing very poor accuracy.", "user": {"login": "Ehsan1997", "id": 18682992, "node_id": "MDQ6VXNlcjE4NjgyOTky", "avatar_url": "https://avatars3.githubusercontent.com/u/18682992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ehsan1997", "html_url": "https://github.com/Ehsan1997", "followers_url": "https://api.github.com/users/Ehsan1997/followers", "following_url": "https://api.github.com/users/Ehsan1997/following{/other_user}", "gists_url": "https://api.github.com/users/Ehsan1997/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ehsan1997/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ehsan1997/subscriptions", "organizations_url": "https://api.github.com/users/Ehsan1997/orgs", "repos_url": "https://api.github.com/users/Ehsan1997/repos", "events_url": "https://api.github.com/users/Ehsan1997/events{/privacy}", "received_events_url": "https://api.github.com/users/Ehsan1997/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-10T15:43:09Z", "updated_at": "2019-12-11T10:29:00Z", "closed_at": "2019-12-11T10:29:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Following are the last two lines of my model:\r\n```\r\noutputs = Dense(4)(act_fc1)\r\npredictions = Activation(activation='softmax')(outputs)\r\n```\r\n\r\nIf I use predictions as the model output, the model does not learn anything, but if I remove the predictions layer and add the activations parameter to outputs Dense layer, it works fine. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13608", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13608/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13608/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13608/events", "html_url": "https://github.com/keras-team/keras/issues/13608", "id": 534003751, "node_id": "MDU6SXNzdWU1MzQwMDM3NTE=", "number": 13608, "title": "Keras.backend", "user": {"login": "PEE8", "id": 14888010, "node_id": "MDQ6VXNlcjE0ODg4MDEw", "avatar_url": "https://avatars1.githubusercontent.com/u/14888010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PEE8", "html_url": "https://github.com/PEE8", "followers_url": "https://api.github.com/users/PEE8/followers", "following_url": "https://api.github.com/users/PEE8/following{/other_user}", "gists_url": "https://api.github.com/users/PEE8/gists{/gist_id}", "starred_url": "https://api.github.com/users/PEE8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PEE8/subscriptions", "organizations_url": "https://api.github.com/users/PEE8/orgs", "repos_url": "https://api.github.com/users/PEE8/repos", "events_url": "https://api.github.com/users/PEE8/events{/privacy}", "received_events_url": "https://api.github.com/users/PEE8/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-06T13:57:06Z", "updated_at": "2019-12-06T17:23:56Z", "closed_at": "2019-12-06T17:23:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "When i am running this library _init_.py .\r\nThe error is shown and reset_uids is not found in load_backend.py\r\n\r\n  File \"C:/Users/Prisilla/Anaconda3/Lib/site-packages/keras/backend/__init__.py\", line 8, in <module>\r\n    from .load_backend import reset_uids\r\n\r\nModuleNotFoundError: No module named '__main__.load_backend'; '__main__' is not a package\r\n\r\nfrom .load_backend import reset_uids\r\nfrom .load_backend import get_uid\r\nfrom .load_backend import learning_phase\r\nfrom .load_backend import set_learning_phase\r\nfrom .load_backend import is_sparse\r\nfrom .load_backend import to_dense\r\nfrom .load_backend import variable\r\nfrom .load_backend import is_variable\r\nfrom .load_backend import constant\r\nfrom .load_backend import is_keras_tensor\r\nfrom .load_backend import is_tensor\r\nfrom .load_backend import placeholder\r\nfrom .load_backend import is_placeholder\r\nfrom .load_backend import shape\r\nfrom .load_backend import int_shape\r\nfrom .load_backend import ndim\r\nfrom .load_backend import dtype\r\nfrom .load_backend import eval\r\nfrom .load_backend import zeros\r\nCan i change .load_backend as the following modules are not present in load_backend\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13607", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13607/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13607/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13607/events", "html_url": "https://github.com/keras-team/keras/issues/13607", "id": 533828893, "node_id": "MDU6SXNzdWU1MzM4Mjg4OTM=", "number": 13607, "title": "AttributeError: 'tensorflow.python.framework.ops.EagerTensor' object has no attribute 'assign' when using model as layer", "user": {"login": "markusforster", "id": 5700767, "node_id": "MDQ6VXNlcjU3MDA3Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5700767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markusforster", "html_url": "https://github.com/markusforster", "followers_url": "https://api.github.com/users/markusforster/followers", "following_url": "https://api.github.com/users/markusforster/following{/other_user}", "gists_url": "https://api.github.com/users/markusforster/gists{/gist_id}", "starred_url": "https://api.github.com/users/markusforster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markusforster/subscriptions", "organizations_url": "https://api.github.com/users/markusforster/orgs", "repos_url": "https://api.github.com/users/markusforster/repos", "events_url": "https://api.github.com/users/markusforster/events{/privacy}", "received_events_url": "https://api.github.com/users/markusforster/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}, {"id": 192940628, "node_id": "MDU6TGFiZWwxOTI5NDA2Mjg=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": "User is asking for help / asking an implementation question. Stackoverflow would be better suited."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-06T08:55:03Z", "updated_at": "2020-04-28T19:32:04Z", "closed_at": "2019-12-11T13:59:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "**System information**  \r\n- Have I written custom code (as opposed to using example directory):  no\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  Linux Ubuntu 18.04\r\n- TensorFlow backend (yes / no):  yes\r\n- TensorFlow version:  tensorflow-gpu 2.0.0\r\n- Keras version:  2.3.0\r\n- Python version:  3.6.8\r\n- CUDA/cuDNN version:  10.2\r\n- GPU model and memory:   GeForce RTX 2080 8GB\r\n\r\nI created the following model for testing:\r\n\r\n```python\r\ninputLayer1 = Input(shape=(maxWordLen,),name='wordInput')\r\nembedding1 = Embedding(self.numOfChar, 16, input_length=maxWordLen,embeddings_initializer='random_uniform')(inputLayer1)\r\noutput1 = Conv1D(4,3,activation='relu',kernel_initializer='random_uniform')(embedding1)\r\noutput1 = MaxPooling1D(2)(output1)\r\noutput1 = GlobalMaxPooling1D()(output1)\r\n            \r\nwordEncoder = Model(inputLayer1,output1,name='wordEncoder')\r\n            \r\ninputLayer2 = Input(shape=(maxWordCount,maxWordLen),name='mainInput')\r\nlstmIn = TimeDistributed(wordEncoder)(inputLayer2)\r\n            \r\nlstm1 = Bidirectional(LSTM(32, return_sequences=True,  dropout=dropout,recurrent_dropout=dropout))(lstmIn)\r\nlstm2 = Bidirectional(LSTM(32, return_sequences=True,  dropout=dropout,recurrent_dropout=dropout))(lstmIn)\r\n\r\noutputLayer2 = add([lstm1,lstm2])\r\noutputLayer2 = TimeDistributed(Dense(numOfLabel, activation='softmax'))(outputLayer2)\r\nsentEncoder = Model(inputLayer2,outputLayer2)\r\n\r\nsentEncoder.compile(loss=loss,optimizer=optimizer,metrics=metrics)\r\n```\r\n\r\nWhen running `.fit` on this model I receive the following error:\r\n```python\r\nAttributeError: 'tensorflow.python.framework.ops.EagerTensor' object has no attribute 'assign'\r\n```\r\n\r\nNot sure if I'm doing it wrong or if it's a problem with tensorflow 2.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13596", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13596/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13596/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13596/events", "html_url": "https://github.com/keras-team/keras/issues/13596", "id": 530933702, "node_id": "MDU6SXNzdWU1MzA5MzM3MDI=", "number": 13596, "title": "texts_to_sequences() got an unexpected keyword argument 'text'", "user": {"login": "yananchen1989", "id": 26405281, "node_id": "MDQ6VXNlcjI2NDA1Mjgx", "avatar_url": "https://avatars2.githubusercontent.com/u/26405281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yananchen1989", "html_url": "https://github.com/yananchen1989", "followers_url": "https://api.github.com/users/yananchen1989/followers", "following_url": "https://api.github.com/users/yananchen1989/following{/other_user}", "gists_url": "https://api.github.com/users/yananchen1989/gists{/gist_id}", "starred_url": "https://api.github.com/users/yananchen1989/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yananchen1989/subscriptions", "organizations_url": "https://api.github.com/users/yananchen1989/orgs", "repos_url": "https://api.github.com/users/yananchen1989/repos", "events_url": "https://api.github.com/users/yananchen1989/events{/privacy}", "received_events_url": "https://api.github.com/users/yananchen1989/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-02T07:07:02Z", "updated_at": "2019-12-02T07:09:12Z", "closed_at": "2019-12-02T07:09:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to transfer text to a list of word ids. I tend to use `texts_to_sequences` for convenience without any keyword argument before. But now I want to pass in a new char filters which do not consist of , . ? !  etc.  \r\nHowever, I encountered with this type of error:\r\n`TypeError: texts_to_sequences() got an unexpected keyword argument 'filters'`\r\n\r\nThis is my code:\r\n`tok.texts_to_sequences([tt], filters='\"#$%&()*+-/<=>@[\\]^_`{|}~ ')`\r\n\r\n\r\ntt is a string of sentence. \r\nIt is Ok when I run:\r\n`tok.texts_to_sequences([tt])`\r\n\r\nSo what's wrong with this ?\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13588", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13588/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13588/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13588/events", "html_url": "https://github.com/keras-team/keras/issues/13588", "id": 529984503, "node_id": "MDU6SXNzdWU1Mjk5ODQ1MDM=", "number": 13588, "title": "Keras fit_generator accumulates too much memory when used with Sequence Generator", "user": {"login": "AlexVaith", "id": 57894920, "node_id": "MDQ6VXNlcjU3ODk0OTIw", "avatar_url": "https://avatars2.githubusercontent.com/u/57894920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexVaith", "html_url": "https://github.com/AlexVaith", "followers_url": "https://api.github.com/users/AlexVaith/followers", "following_url": "https://api.github.com/users/AlexVaith/following{/other_user}", "gists_url": "https://api.github.com/users/AlexVaith/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexVaith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexVaith/subscriptions", "organizations_url": "https://api.github.com/users/AlexVaith/orgs", "repos_url": "https://api.github.com/users/AlexVaith/repos", "events_url": "https://api.github.com/users/AlexVaith/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexVaith/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-28T15:49:26Z", "updated_at": "2019-11-28T17:24:53Z", "closed_at": "2019-11-28T17:24:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "**System information**  \r\n- Have I written custom code (as opposed to using example directory):  yes\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  mac OS 10.15.1\r\n- TensorFlow backend (yes / no):  yes\r\n- TensorFlow version:  2.0.0\r\n- Keras version:  2.3.0\r\n- Python version:  3.7\r\n- CUDA/cuDNN version:  \r\n- GPU model and memory:  \r\n\r\nI want to build a data generator based on the keras.utils.Sequence class to avoid memory issued when dealing with very big datasets. The generator looks like the following \r\n\r\n```\r\nclass DataGenerator(Sequence):\r\n    def __init__(self, batch_size, id_list, dim, shuffle=True):\r\n        # batch_size: batch_size at each iteration\r\n        self.batch_size = batch_size\r\n        self.id_list = id_list\r\n        self.dim = dim\r\n        self.batch_size = batch_size\r\n        self.shuffle = shuffle\r\n        self.on_epoch_end()\r\n\r\n    def __len__(self):\r\n        # Denotes the number of batches per epoch\r\n        return int(np.floor(len(self.id_list)/self.batch_size))\r\n\r\n    def __getitem__(self, index):\r\n        '''''\r\n        MAIN function:\r\n        - index tells the number of batches that have already been processed\r\n        :return: X and y with shape [batch_size, window_size, features]        \r\n        '''''\r\n        # check if the cache holds enough values to feed the model with shape [batch_size, *dims]\r\n        X, y = self.__data_generation(self.id_list[index])\r\n        return X, y\r\n\r\n    def on_epoch_end(self):\r\n        if self.shuffle:\r\n            random.shuffle(self.id_list)\r\n\r\n    def __data_generation(self, fname):\r\n        # 1. load data from specified path\r\n        data = self.__load_data(fname)\r\n        return np.squeeze(data[0, 0]), np.squeeze(data[1, 0])\r\n\r\n        # --------------------------------------- utility functions data loading\r\n    def __load_data(self, filename):\r\n        # load data from the filename\r\n        return np.load(filename, allow_pickle=True)\r\n\r\n```\r\n\r\nIt is called with the fit_generator like this:\r\n```\r\ntrain_gen = DataGenerator(batch_size=1,\r\n                              id_list=train_files,\r\n                              dim=(256, 6),\r\n                              shuffle=True)\r\n\r\nmodel.fit_generator(generator=train_gen,\r\n                        validation_data=val_gen,\r\n                        epochs=20,\r\n                        verbose=1,\r\n                        use_multiprocessing=False,\r\n                        workers=4,\r\n                        max_queue_size=10)\r\n```\r\n\r\nevery batch has the shape of [64, 256, 6] and is a float array\r\nWith every batch the memory rises. In total I have 298 training batches. Why does the memory rise to 18gb after 4 epochs. A single batch has the a size of 791kb.\r\nIt still happens with multi_processing=False, workers=1 and max_q_size=1. \r\n\r\nI also tried it with keras 2.2.4 and tensorflow 1.14.0. The result is the same\r\nThanks for help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13587", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13587/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13587/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13587/events", "html_url": "https://github.com/keras-team/keras/issues/13587", "id": 529923573, "node_id": "MDU6SXNzdWU1Mjk5MjM1NzM=", "number": 13587, "title": "trainable=True, trainable params doesn't change", "user": {"login": "konstantin-frolov", "id": 44438924, "node_id": "MDQ6VXNlcjQ0NDM4OTI0", "avatar_url": "https://avatars3.githubusercontent.com/u/44438924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/konstantin-frolov", "html_url": "https://github.com/konstantin-frolov", "followers_url": "https://api.github.com/users/konstantin-frolov/followers", "following_url": "https://api.github.com/users/konstantin-frolov/following{/other_user}", "gists_url": "https://api.github.com/users/konstantin-frolov/gists{/gist_id}", "starred_url": "https://api.github.com/users/konstantin-frolov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/konstantin-frolov/subscriptions", "organizations_url": "https://api.github.com/users/konstantin-frolov/orgs", "repos_url": "https://api.github.com/users/konstantin-frolov/repos", "events_url": "https://api.github.com/users/konstantin-frolov/events{/privacy}", "received_events_url": "https://api.github.com/users/konstantin-frolov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-28T13:48:56Z", "updated_at": "2019-11-28T13:51:37Z", "closed_at": "2019-11-28T13:50:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi people. I have some problems with transfer learning. I use the facenet model and load the model and weights from * .h5 files.\r\nI want to transfer learning of this model for my classifier. Then I change the weight value of some layers to True. I change it, but after compiling a new model with my classifier, the number of trained parameters does not change, all loaded models weights in an untrained state.\r\n`Layer (type)                 Output Shape              Param #   `\r\n`inception_resnet_v1 (Model)  (None, 128)               22808144  `\r\n`dense_1 (Dense)                     (None, 256)               33024     `\r\n`activation_50 (Activation)   (None, 256)               0         `\r\n`dropout_1 (Dropout)          (None, 256)               0         `\r\n`dense_2 (Dense)              (None, 3)                 771       `\r\n`activation_51 (Activation)   (None, 3)                 0         `\r\n\r\n`Total params: 22,841,939`\r\n`Trainable params: 33,795`\r\n`Non-trainable params: 22,808,144`\r\n\r\nThank you!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13581", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13581/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13581/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13581/events", "html_url": "https://github.com/keras-team/keras/issues/13581", "id": 527813383, "node_id": "MDU6SXNzdWU1Mjc4MTMzODM=", "number": 13581, "title": "How to set `monitor` in `keras.callbacks` according to my loss?", "user": {"login": "igo312", "id": 28484395, "node_id": "MDQ6VXNlcjI4NDg0Mzk1", "avatar_url": "https://avatars3.githubusercontent.com/u/28484395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igo312", "html_url": "https://github.com/igo312", "followers_url": "https://api.github.com/users/igo312/followers", "following_url": "https://api.github.com/users/igo312/following{/other_user}", "gists_url": "https://api.github.com/users/igo312/gists{/gist_id}", "starred_url": "https://api.github.com/users/igo312/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igo312/subscriptions", "organizations_url": "https://api.github.com/users/igo312/orgs", "repos_url": "https://api.github.com/users/igo312/repos", "events_url": "https://api.github.com/users/igo312/events{/privacy}", "received_events_url": "https://api.github.com/users/igo312/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-25T02:55:11Z", "updated_at": "2019-11-25T10:33:02Z", "closed_at": "2019-11-25T10:33:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using `keras.callbacks.ModelCheckpoint` to save the result. Cause I get three outputs, I worry about there may be error feedback if I set `monitor = 'val_loss'`.\r\nI know I can set `monitor` as 'val_loss', 'accuracy' and so on, but how to set `monitor` according to my ouput?\r\nAnd my output is following \r\n```python\r\n[<tf.Tensor 'a/Softmax:0' shape=(\uff1f, 2) dtype=float32>,\r\n <tf.Tensor 'a/Softmax:0' shape=(\uff1f, 118) dtype=float32>,\r\n <tf.Tensor 'a/Softmax:0' shape=(\uff1f, 315) dtype=float32>]\r\n```\r\nOr the function will just work according to overall loss? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13570", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13570/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13570/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13570/events", "html_url": "https://github.com/keras-team/keras/issues/13570", "id": 526961857, "node_id": "MDU6SXNzdWU1MjY5NjE4NTc=", "number": 13570, "title": "what is the difference between TimeDistributed(Dense) and Dense when input is 3D tensor ", "user": {"login": "lan2720", "id": 5330101, "node_id": "MDQ6VXNlcjUzMzAxMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5330101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lan2720", "html_url": "https://github.com/lan2720", "followers_url": "https://api.github.com/users/lan2720/followers", "following_url": "https://api.github.com/users/lan2720/following{/other_user}", "gists_url": "https://api.github.com/users/lan2720/gists{/gist_id}", "starred_url": "https://api.github.com/users/lan2720/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lan2720/subscriptions", "organizations_url": "https://api.github.com/users/lan2720/orgs", "repos_url": "https://api.github.com/users/lan2720/repos", "events_url": "https://api.github.com/users/lan2720/events{/privacy}", "received_events_url": "https://api.github.com/users/lan2720/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 192940628, "node_id": "MDU6TGFiZWwxOTI5NDA2Mjg=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": "User is asking for help / asking an implementation question. Stackoverflow would be better suited."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-22T03:13:42Z", "updated_at": "2019-12-02T01:55:14Z", "closed_at": "2019-12-02T01:55:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nfrom keras.layers import *\r\nfrom keras.models import *\r\n\r\nmodel1 = Sequential()\r\nmodel1.add(TimeDistributed(Dense(4, use_bias=False), input_shape=(10, 8)))\r\nmodel1.summary()\r\n\r\nmodel2 = Sequential()\r\nmodel2.add(Dense(4, use_bias=False, input_shape=(10, 8)))\r\nmodel2.summary()\r\n```\r\nI got the output is:\r\n\r\n```\r\nModel: \"sequential_1\"\r\n_________________________________________________________________\r\nLayer (type)                 Output Shape              Param #   \r\n=================================================================\r\ntime_distributed_1 (TimeDist (None, 10, 4)             32        \r\n=================================================================\r\nTotal params: 32\r\nTrainable params: 32\r\nNon-trainable params: 0\r\n_________________________________________________________________\r\nModel: \"sequential_2\"\r\n_________________________________________________________________\r\nLayer (type)                 Output Shape              Param #   \r\n=================================================================\r\ndense_2 (Dense)              (None, 10, 4)             32        \r\n=================================================================\r\nTotal params: 32\r\nTrainable params: 32\r\nNon-trainable params: 0\r\n_________________________________________________________________\r\n```\r\nThe amount of parameters is the same for these two usage. But I wonder know is there any difference?\r\nAccording to the [doc](https://keras.io/layers/wrappers/), \r\n\r\n> You can then use TimeDistributed to apply a Dense layer to each of the 10 timesteps, independently\r\n\r\nIf the Dense layer is independent by each timestep, the parameters should be 10*32=320 instead of 32?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13569", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13569/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13569/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13569/events", "html_url": "https://github.com/keras-team/keras/issues/13569", "id": 526831626, "node_id": "MDU6SXNzdWU1MjY4MzE2MjY=", "number": 13569, "title": "OOM error when continuing training on saved model.", "user": {"login": "Mahi-Mai", "id": 17129394, "node_id": "MDQ6VXNlcjE3MTI5Mzk0", "avatar_url": "https://avatars2.githubusercontent.com/u/17129394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mahi-Mai", "html_url": "https://github.com/Mahi-Mai", "followers_url": "https://api.github.com/users/Mahi-Mai/followers", "following_url": "https://api.github.com/users/Mahi-Mai/following{/other_user}", "gists_url": "https://api.github.com/users/Mahi-Mai/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mahi-Mai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mahi-Mai/subscriptions", "organizations_url": "https://api.github.com/users/Mahi-Mai/orgs", "repos_url": "https://api.github.com/users/Mahi-Mai/repos", "events_url": "https://api.github.com/users/Mahi-Mai/events{/privacy}", "received_events_url": "https://api.github.com/users/Mahi-Mai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-21T20:44:22Z", "updated_at": "2019-11-21T21:47:38Z", "closed_at": "2019-11-21T21:47:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "**System information**  \r\n- Have I written custom code (as opposed to using example directory):   yes\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  Ubuntu Linux\r\n- TensorFlow backend (yes / no):  yes\r\n- TensorFlow version:  tensorflow-gpu, 1.9.0\r\n- Keras version:  2.2.4\r\n- Python version:  3.6\r\n- CUDA/cuDNN version:  V9.0.176\r\n- GPU model and memory:  8xGPUs\r\n\r\n**Describe the current behavior**  \r\nI have a model and a dataset.  I've trained the model for 10 epochs.  I load the saved model and-  using the same exact dataset, hardware, environment, hyperparameters, code, and settings that I used to train the model the first time- attempt to continue training with model.fit_generator().  The script crashes with an OOM error.  I've also attempted to reinitialize the model architecture and only load the weights with the same results.\r\n\r\nIn both the initial and subsequent training sessions I am using multi_gpu_model() to take advantage of the 8 given GPUs.\r\n\r\n**Describe the expected behavior**\r\n\r\nModel should continue training without an OOM error.  Ideally, I would load the trained weights from subsequent epochs and manually adjust the learning rate.  (I don't want to use reduce LR on plateau.)\r\n\r\n**Code to reproduce the issue**  \r\nThis is the repo I've used as a base: https://github.com/zhixuhao/unet\r\nOtherwise,  it's difficult to produce a simple example of this.  Here's what I can offer:\r\n```\r\nfrom zhixuhao_tools import trainGenerator\r\n\r\nfrom keras import models\r\nfrom keras.callbacks import CSVLogger, ModelCheckpoint\r\n\r\n\r\n### ======== SET UP TRAINING DATA GENERATOR ======== ###\r\n\r\n# GET NUMBER OF TRAINING SAMPLES\r\n\r\nnb_train_samples = 52273\r\n\r\n# DEFINE UNET GENERATOR\r\nimage_datagen_args = dict(brightness_range=(0.3,1.35))\r\nmask_datagen_args = dict()\r\n\r\n#  BATCH_SIZE OPTIONS POOR\r\nbatch_size = 63\r\n\r\ntrGen = trainGenerator(batch_size=batch_size,\r\n                       train_path='dir/train',\r\n                       image_folder='images',\r\n                       mask_folder='labels',\r\n                       image_aug_dict=image_datagen_args,\r\n                       mask_aug_dict=mask_datagen_args,\r\n                       image_color_mode = 'rgb',\r\n                       mask_color_mode = 'grayscale',\r\n                       save_to_dir = None)\r\n\r\n### ======== SET UP VALIDATION DATA GENERATOR ======== ###\r\n\r\n# GET NUMBER OF VALIDATION SAMPLES\r\nnb_val_samples = 20350\r\n\r\n# DEFINE UNET GENERATOR\r\nimage_datagen_args = dict()\r\nmask_datagen_args = dict()\r\n\r\n#  BATCH_SIZE\r\nval_batch_size = 74\r\n\r\nvalGen = trainGenerator(batch_size=val_batch_size,\r\n                       train_path='dir/val',\r\n                       image_folder='images',\r\n                       mask_folder='labels',\r\n                       image_aug_dict=image_datagen_args,\r\n                       mask_aug_dict=mask_datagen_args,\r\n                       image_color_mode = 'rgb',\r\n                       mask_color_mode = 'grayscale',\r\n                       save_to_dir = None)\r\n\r\n### ======== SET UP MODEL ======== ###\r\n\r\n# LOAD PREVIOUS CHECKPOINT\r\nchk_pt = models.load_model(f'{tmp_dir}/chk_pt.hdf5')\r\n\r\n# SAVE WEIGHTS\r\nchk_pt.save_weights(f'{tmp_dir}/chk_pt.h5')\r\n\r\n# INITIALIZE MODEL\r\nmodel = unet(optimizer=Adam(1e-5), pretrained_weights=f'{tmp_dir}/chk_pt.h5')\r\n\r\nmodel = models.load_model(f'{tmp_dir}/chk_pt.hdf5')\r\n\r\n# INITIALIZE CHECKPOINTS\r\nchk = ModelCheckpoint(tmp_dir + '/model.hdf5', monitor='loss',verbose=1, save_best_only=True)\r\nlogger = CSVLogger(tmp_dir + '/training_log.csv', separator = ',', append=False)\r\n\r\n# TRAIN MODEL\r\nmodel.fit_generator(generator=trGen,\r\n                    validation_data=valGen,\r\n                    steps_per_epoch=int(nb_train_samples/batch_size),\r\n                    validation_steps=int(nb_val_samples/val_batch_size),\r\n                    epochs=110,\r\n                    callbacks=[chk, logger])\r\n\r\nprint('Training complete!')\r\n```\r\n\r\n**Other info / logs**  \r\n```2019-11-21 18:13:42.330496: W tensorflow/core/framework/op_kernel.cc:1318] OP_REQUIRES failed at image_resizer_state.h:115 : Resource exhausted: OOM when allocating tensor with shape[14,128,128,256] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\r\nTraceback (most recent call last):\r\n  File \"Project/U-Net/Training/continue_training_val_weights.py\", line 128, in <module>\r\n    callbacks=[chk, logger])\r\n  File \"/usr/local/anaconda/lib/python3.6/site-packages/keras/legacy/interfaces.py\", line 91, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"/usr/local/anaconda/lib/python3.6/site-packages/keras/engine/training.py\", line 1418, in fit_generator\r\n    initial_epoch=initial_epoch)\r\n  File \"/usr/local/anaconda/lib/python3.6/site-packages/keras/engine/training_generator.py\", line 217, in fit_generator\r\n    class_weight=class_weight)\r\n  File \"/usr/local/anaconda/lib/python3.6/site-packages/keras/engine/training.py\", line 1217, in train_on_batch\r\n    outputs = self.train_function(ins)\r\n  File \"/usr/local/anaconda/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py\", line 2715, in __call__\r\n    return self._call(inputs)\r\n  File \"/usr/local/anaconda/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py\", line 2675, in _call\r\n    fetched = self._callable_fn(*array_vals)\r\n  File \"/usr/local/anaconda/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1454, in __call__\r\n    self._session._session, self._handle, args, status, None)\r\n  File \"/usr/local/anaconda/lib/python3.6/site-packages/tensorflow/python/framework/errors_impl.py\", line 519, in __exit__\r\n    c_api.TF_GetCode(self.status.status))\r\ntensorflow.python.framework.errors_impl.ResourceExhaustedError: OOM when allocating tensor with shape[7,128,128,256] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\r\n\t [[Node: model_1_8/up_sampling2d_3/ResizeNearestNeighbor = ResizeNearestNeighbor[T=DT_FLOAT, _class=[\"loc:@train...ighborGrad\"], align_corners=false, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](model_1_8/conv2d_16/Relu-0-0-TransposeNCHWToNHWC-LayoutOptimizer, model_1_8/up_sampling2d_3/mul)]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\r\n\t [[Node: metrics_2/acc/Mean_1/_3357 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device_incarnation=1, tensor_name=\"edge_8613_metrics_2/acc/Mean_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"]()]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\r\nFailed with exit code: 1\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13553", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13553/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13553/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13553/events", "html_url": "https://github.com/keras-team/keras/issues/13553", "id": 522233561, "node_id": "MDU6SXNzdWU1MjIyMzM1NjE=", "number": 13553, "title": "get_output_at issue", "user": {"login": "pokecheater", "id": 20928617, "node_id": "MDQ6VXNlcjIwOTI4NjE3", "avatar_url": "https://avatars1.githubusercontent.com/u/20928617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pokecheater", "html_url": "https://github.com/pokecheater", "followers_url": "https://api.github.com/users/pokecheater/followers", "following_url": "https://api.github.com/users/pokecheater/following{/other_user}", "gists_url": "https://api.github.com/users/pokecheater/gists{/gist_id}", "starred_url": "https://api.github.com/users/pokecheater/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pokecheater/subscriptions", "organizations_url": "https://api.github.com/users/pokecheater/orgs", "repos_url": "https://api.github.com/users/pokecheater/repos", "events_url": "https://api.github.com/users/pokecheater/events{/privacy}", "received_events_url": "https://api.github.com/users/pokecheater/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-13T13:46:08Z", "updated_at": "2019-11-15T09:03:00Z", "closed_at": "2019-11-15T09:03:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey Keras-Team :).\r\nOn your page : https://keras.io/getting-started/functional-api-guide/#the-concept-of-layer-node\r\nyou show how to use multiple outputs when the error: \r\n>> AttributeError: Layer lstm_1 has multiple inbound nodes,\r\nhence the notion of \"layer output\" is ill-defined.\r\nUse `get_output_at(node_index)` instead.\r\n\r\nis thrown. \r\n\r\nI assume this happens because I am using a dense layer with a softmax function so I can access with the get_output_at function two tensors:\r\n\r\n\r\nCode:\r\n----------------------\r\nlayer.get_output_at(0)\r\nlayer.get_output_at(1)\r\n\r\nOutput.\r\n---------------\r\nTensor(\"dense_3/Softmax:0\", shape=(?, 7), dtype=float32)\r\nTensor(\"test/dense_3/Softmax:0\", shape=(?, 7), dtype=float32)\r\n\r\n\r\nSince I want to use a different models on transfer learning I wrote a simple parser for this. But here is my bottleleck: I want to use the last output of the trained model-layer and connect it to the next inputs of the layer outside of the already trained model. But for this I need to know what is the exact size of the outputs so I can get the latest output by get_output_at method. Sadly it seems not be described in the tutorial (or I am to stupid to find it) how to get the size of the outputs. Note I dont want the shape, rather than the output itself. \r\n\r\nSo question 1:\r\n How can I know the output size of a layer (that are accessable by get_output_at)\r\n\r\nquestion 2:\r\n  Is there a method to determine if there exist multiple outputs for a layer?\r\n\r\n\r\nThanks in advance :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13551", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13551/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13551/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13551/events", "html_url": "https://github.com/keras-team/keras/issues/13551", "id": 522147966, "node_id": "MDU6SXNzdWU1MjIxNDc5NjY=", "number": 13551, "title": "1D signal/time series data augmentation", "user": {"login": "dervishson", "id": 32873956, "node_id": "MDQ6VXNlcjMyODczOTU2", "avatar_url": "https://avatars3.githubusercontent.com/u/32873956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dervishson", "html_url": "https://github.com/dervishson", "followers_url": "https://api.github.com/users/dervishson/followers", "following_url": "https://api.github.com/users/dervishson/following{/other_user}", "gists_url": "https://api.github.com/users/dervishson/gists{/gist_id}", "starred_url": "https://api.github.com/users/dervishson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dervishson/subscriptions", "organizations_url": "https://api.github.com/users/dervishson/orgs", "repos_url": "https://api.github.com/users/dervishson/repos", "events_url": "https://api.github.com/users/dervishson/events{/privacy}", "received_events_url": "https://api.github.com/users/dervishson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-13T11:32:27Z", "updated_at": "2019-11-20T13:17:51Z", "closed_at": "2019-11-20T13:17:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\nI wonder if I do data augmentation for time series prediction w/wo keras image_data_generator?\r\n\r\nThank you!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13544", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13544/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13544/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13544/events", "html_url": "https://github.com/keras-team/keras/issues/13544", "id": 521313090, "node_id": "MDU6SXNzdWU1MjEzMTMwOTA=", "number": 13544, "title": "ValueError: Failed to convert a NumPy array to a Tensor (Unsupported numpy type: NPY_LONGDOUBLE)", "user": {"login": "NaSed", "id": 12778931, "node_id": "MDQ6VXNlcjEyNzc4OTMx", "avatar_url": "https://avatars2.githubusercontent.com/u/12778931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NaSed", "html_url": "https://github.com/NaSed", "followers_url": "https://api.github.com/users/NaSed/followers", "following_url": "https://api.github.com/users/NaSed/following{/other_user}", "gists_url": "https://api.github.com/users/NaSed/gists{/gist_id}", "starred_url": "https://api.github.com/users/NaSed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NaSed/subscriptions", "organizations_url": "https://api.github.com/users/NaSed/orgs", "repos_url": "https://api.github.com/users/NaSed/repos", "events_url": "https://api.github.com/users/NaSed/events{/privacy}", "received_events_url": "https://api.github.com/users/NaSed/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-12T03:54:24Z", "updated_at": "2019-11-13T01:18:23Z", "closed_at": "2019-11-13T01:18:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have just updated the tensorflow-gpu package from 1.13.0 to 2.0.0 and now I get this error:\r\n\r\n`    return model._make_execution_function(mode)\r\n  File \"/project/6004228/sedaghat/DR_Project/Code/DNN_36/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/training.py\", line 2184, in _make_execution_function\r\n    self._make_train_function()\r\n  File \"/project/6004228/sedaghat/DR_Project/Code/DNN_36/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/training.py\", line 2116, in _make_train_function\r\n    params=self._collected_trainable_weights, loss=self.total_loss)\r\n  File \"/project/6004228/sedaghat/DR_Project/Code/DNN_36/lib/python3.6/site-packages/tensorflow_core/python/keras/optimizer_v2/optimizer_v2.py\", line 506, in get_updates\r\n    return [self.apply_gradients(grads_and_vars)]\r\n  File \"/project/6004228/sedaghat/DR_Project/Code/DNN_36/lib/python3.6/site-packages/tensorflow_core/python/keras/optimizer_v2/optimizer_v2.py\", line 434, in apply_gradients\r\n    self._create_hypers()\r\n  File \"/project/6004228/sedaghat/DR_Project/Code/DNN_36/lib/python3.6/site-packages/tensorflow_core/python/keras/optimizer_v2/optimizer_v2.py\", line 643, in _create_hypers\r\n    aggregation=tf_variables.VariableAggregation.ONLY_FIRST_REPLICA)\r\n  File \"/project/6004228/sedaghat/DR_Project/Code/DNN_36/lib/python3.6/site-packages/tensorflow_core/python/keras/optimizer_v2/optimizer_v2.py\", line 805, in add_weight\r\n    aggregation=aggregation)\r\n  File \"/project/6004228/sedaghat/DR_Project/Code/DNN_36/lib/python3.6/site-packages/tensorflow_core/python/training/tracking/base.py\", line 744, in _add_variable_with_custom_getter\r\n    **kwargs_for_getter)\r\n  File \"/project/6004228/sedaghat/DR_Project/Code/DNN_36/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/base_layer_utils.py\", line 139, in make_variable\r\n    shape=variable_shape if variable_shape else None)\r\n  File \"/project/6004228/sedaghat/DR_Project/Code/DNN_36/lib/python3.6/site-packages/tensorflow_core/python/ops/variables.py\", line 258, in __call__\r\n    return cls._variable_v1_call(*args, **kwargs)\r\n  File \"/project/6004228/sedaghat/DR_Project/Code/DNN_36/lib/python3.6/site-packages/tensorflow_core/python/ops/variables.py\", line 219, in _variable_v1_call\r\n    shape=shape)\r\n  File \"/project/6004228/sedaghat/DR_Project/Code/DNN_36/lib/python3.6/site-packages/tensorflow_core/python/ops/variables.py\", line 197, in <lambda>\r\n    previous_getter = lambda **kwargs: default_variable_creator(None, **kwargs)\r\n  File \"/project/6004228/sedaghat/DR_Project/Code/DNN_36/lib/python3.6/site-packages/tensorflow_core/python/ops/variable_scope.py\", line 2507, in default_variable_creator\r\n    shape=shape)\r\n  File \"/project/6004228/sedaghat/DR_Project/Code/DNN_36/lib/python3.6/site-packages/tensorflow_core/python/ops/variables.py\", line 262, in __call__\r\n    return super(VariableMetaclass, cls).__call__(*args, **kwargs)\r\n  File \"/project/6004228/sedaghat/DR_Project/Code/DNN_36/lib/python3.6/site-packages/tensorflow_core/python/ops/resource_variable_ops.py\", line 1406, in __init__\r\n    distribute_strategy=distribute_strategy)\r\n  File \"/project/6004228/sedaghat/DR_Project/Code/DNN_36/lib/python3.6/site-packages/tensorflow_core/python/ops/resource_variable_ops.py\", line 1538, in _init_from_args\r\n    name=\"initial_value\", dtype=dtype)\r\n  File \"/project/6004228/sedaghat/DR_Project/Code/DNN_36/lib/python3.6/site-packages/tensorflow_core/python/framework/ops.py\", line 1184, in convert_to_tensor\r\n    return convert_to_tensor_v2(value, dtype, preferred_dtype, name)\r\n  File \"/project/6004228/sedaghat/DR_Project/Code/DNN_36/lib/python3.6/site-packages/tensorflow_core/python/framework/ops.py\", line 1242, in convert_to_tensor_v2\r\n    as_ref=False)\r\n  File \"/project/6004228/sedaghat/DR_Project/Code/DNN_36/lib/python3.6/site-packages/tensorflow_core/python/framework/ops.py\", line 1296, in internal_convert_to_tensor\r\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n  File \"/project/6004228/sedaghat/DR_Project/Code/DNN_36/lib/python3.6/site-packages/tensorflow_core/python/framework/tensor_conversion_registry.py\", line 52, in _default_conversion_function\r\n    return constant_op.constant(value, dtype, name=name)\r\n  File \"/project/6004228/sedaghat/DR_Project/Code/DNN_36/lib/python3.6/site-packages/tensorflow_core/python/framework/constant_op.py\", line 227, in constant\r\n    allow_broadcast=True)\r\n  File \"/project/6004228/sedaghat/DR_Project/Code/DNN_36/lib/python3.6/site-packages/tensorflow_core/python/framework/constant_op.py\", line 235, in _constant_impl\r\n    t = convert_to_eager_tensor(value, ctx, dtype)\r\n  File \"/project/6004228/sedaghat/DR_Project/Code/DNN_36/lib/python3.6/site-packages/tensorflow_core/python/framework/constant_op.py\", line 96, in convert_to_eager_tensor\r\n    return ops.EagerTensor(value, ctx.device_name, dtype)\r\nValueError: Failed to convert a NumPy array to a Tensor (Unsupported numpy type: NPY_LONGDOUBLE).`\r\n\r\nI should mention that the input data and labels are pandas data frame where type of values are float32. I cannot figure out where it finds `np.longdouble` to generate the error.\r\n\r\nI would really appreciate any help.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13543", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13543/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13543/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13543/events", "html_url": "https://github.com/keras-team/keras/issues/13543", "id": 521304288, "node_id": "MDU6SXNzdWU1MjEzMDQyODg=", "number": 13543, "title": "Confusion on the API keras.layers.PReLU -- the shape of the parameter: alpha", "user": {"login": "TMaysGGS", "id": 31966022, "node_id": "MDQ6VXNlcjMxOTY2MDIy", "avatar_url": "https://avatars0.githubusercontent.com/u/31966022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TMaysGGS", "html_url": "https://github.com/TMaysGGS", "followers_url": "https://api.github.com/users/TMaysGGS/followers", "following_url": "https://api.github.com/users/TMaysGGS/following{/other_user}", "gists_url": "https://api.github.com/users/TMaysGGS/gists{/gist_id}", "starred_url": "https://api.github.com/users/TMaysGGS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TMaysGGS/subscriptions", "organizations_url": "https://api.github.com/users/TMaysGGS/orgs", "repos_url": "https://api.github.com/users/TMaysGGS/repos", "events_url": "https://api.github.com/users/TMaysGGS/events{/privacy}", "received_events_url": "https://api.github.com/users/TMaysGGS/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-12T03:20:03Z", "updated_at": "2019-11-12T07:34:08Z", "closed_at": "2019-11-12T07:34:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "**System information**  \r\n- Have I written custom code (as opposed to using example directory):  No. https://github.com/keras-team/keras/blob/master/keras/layers/advanced_activations.py\r\n- OS Platform and Distribution :  Windows 10\r\n- TensorFlow backend :  yes\r\n- TensorFlow version:  1.15.0\r\n- Keras version:  2.2.4-tf\r\n- Python version:  3.7.4\r\n- CUDA/cuDNN version:  \r\n- GPU model and memory:  \r\n\r\n**Describe the current behavior**  \r\nHi everyone, \r\n\r\nRecently I checked the paper and the tensorflow definition of PReLU (Paramatic ReLU) function as well as some other DL frameworks. I think when using PReLU, the parameter \"alpha\" should be the of the shape (channel, ) where the channel means the number of channels of the PReLU layer input feature map. However, the keras.layers.PReLU API defines the alpha has the same shape as the input (and it does implement this way), which introduces a lot more paramters to this layer. \r\n\r\nIn Keras API, it says \"where `alpha` is a learned array with the same shape as x.\", while in the original paper, it says \"The subscript i in ai indicates that we allow the nonlinear activation to vary on different channels.\" (ai means alpha here). So I am wondering if there is any difference between the Keras PReLU & the original PReLU. \r\n\r\nThe most important things is, the reason to introduce PReLU is to use a very small number of extra parameters to get a better classification performance, while using Keras API PReLU, it will add a lot of parameters that are even far more than paramters in convolutional layers. \r\n\r\nPS: I just checked the TensorFlow 2.0 tf.keras.layers.PReLU class, it has the same implementation as Keras API does. \r\n\r\n**Describe the expected behavior**  \r\nIf I happen to be right, I wonder if there will be some corrections on this; if I am wrong, I wonder if someone can help me with this confusion. \r\n\r\nThanks. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13542", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13542/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13542/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13542/events", "html_url": "https://github.com/keras-team/keras/issues/13542", "id": 520955363, "node_id": "MDU6SXNzdWU1MjA5NTUzNjM=", "number": 13542, "title": "InvalidArgumentError: output dimensions must be positive?", "user": {"login": "cui-xiaoang96", "id": 41711907, "node_id": "MDQ6VXNlcjQxNzExOTA3", "avatar_url": "https://avatars0.githubusercontent.com/u/41711907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cui-xiaoang96", "html_url": "https://github.com/cui-xiaoang96", "followers_url": "https://api.github.com/users/cui-xiaoang96/followers", "following_url": "https://api.github.com/users/cui-xiaoang96/following{/other_user}", "gists_url": "https://api.github.com/users/cui-xiaoang96/gists{/gist_id}", "starred_url": "https://api.github.com/users/cui-xiaoang96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cui-xiaoang96/subscriptions", "organizations_url": "https://api.github.com/users/cui-xiaoang96/orgs", "repos_url": "https://api.github.com/users/cui-xiaoang96/repos", "events_url": "https://api.github.com/users/cui-xiaoang96/events{/privacy}", "received_events_url": "https://api.github.com/users/cui-xiaoang96/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-11T13:13:33Z", "updated_at": "2019-11-11T13:34:59Z", "closed_at": "2019-11-11T13:34:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "**System information**  \r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  Windows 10\r\n- TensorFlow backend (yes / no):  yes\r\n- TensorFlow version:  1.10.0\r\n- Keras version:  2.1.6\r\n- Python version:  3.6\r\n- CUDA/cuDNN version: 9.0/ v7.6\r\n- GPU model and memory:  navida geforce gtx 965M / 16G\r\n\r\nYou can obtain the TensorFlow version with:  \r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"  \r\nYou can obtain the Keras version with:  \r\npython -c 'import keras as k; print(k.__version__)'  \r\n\r\n**Describe the current behavior**  \r\nthis is the neural network model.\r\n\r\ndef CommonModel(input_size = (384, 30, 1), af = 'relu', cs = 5, ki = 'he_normal', bi = 'he_normal', sd = 1, verbose = 0):\r\n    \r\n    # \u8f93\u5165\u5c42\r\n    inputs = Input(input_size)\r\n    print(inputs.shape)\r\n    \r\n    # \u7b2c\u4e00\u5c42\r\n    conv1_01 = Conv2D(filters = 16, kernel_size = cs, strides = sd, padding = 'same', activation = af, kernel_initializer = ki, bias_initializer = bi)(inputs)\r\n    conv1_b1 = BatchNormalization()(conv1_01)\r\n    conv1_02 = Conv2D(filters = 16, kernel_size = cs, strides = sd, padding = 'same', activation = af, kernel_initializer = ki, bias_initializer = bi)(conv1_b1)\r\n    conv1_b2 = BatchNormalization()(conv1_02)\r\n    \r\n    conv1_p1 = MaxPooling2D(pool_size=(2, 1))(conv1_b2)\r\n    print(conv1_p1.shape)\r\n    \r\n    # \u7b2c\u4e8c\u5c42\r\n    conv2_01 = Conv2D(filters = 16, kernel_size = cs, strides = sd, padding = 'same', activation = af, kernel_initializer = ki, bias_initializer = bi)(conv1_p1)\r\n    conv2_b1 = BatchNormalization()(conv2_01)\r\n    conv2_02 = Conv2D(filters = 16, kernel_size = cs, strides = sd, padding = 'same', activation = af, kernel_initializer = ki, bias_initializer = bi)(conv2_b1)\r\n    conv2_b2 = BatchNormalization()(conv2_02)\r\n    \r\n    conv2_p1 = MaxPooling2D(pool_size=(2, 2))(conv2_b2)\r\n    print(conv2_p1.shape)\r\n    \r\n    # \u7b2c\u4e09\u5c42\r\n    conv3_01 = Conv2D(filters = 16, kernel_size = cs, strides = sd, padding = 'same', activation = af, kernel_initializer = ki, bias_initializer = bi)(conv2_p1)\r\n    conv3_b1 = BatchNormalization()(conv3_01)\r\n    conv3_02 = Conv2D(filters = 16, kernel_size = cs, strides = sd, padding = 'same', activation = af, kernel_initializer = ki, bias_initializer = bi)(conv3_b1)\r\n    conv3_b2 = BatchNormalization()(conv3_02)\r\n    print(conv3_b2.shape)\r\n    \r\n    # \u7b2c\u56db\u5c42\r\n    conv4_u1 = Conv2D(filters = 16, kernel_size = cs, strides = sd, padding = 'same', activation = af, kernel_initializer = ki, bias_initializer = bi)(UpSampling2D(size = (2, 2))(conv3_b2))\r\n    conv4_m1 = concatenate([conv4_u1, conv2_b2], axis = 3)\r\n    \r\n    conv4_01 = Conv2D(filters = 16, kernel_size = cs, strides = sd, padding = 'same', activation = af, kernel_initializer = ki, bias_initializer = bi)(conv4_m1)\r\n    conv4_b1 = BatchNormalization()(conv4_01)\r\n    conv4_02 = Conv2D(filters = 16, kernel_size = cs, strides = sd, padding = 'same', activation = af, kernel_initializer = ki, bias_initializer = bi)(conv4_b1)\r\n    conv4_b2 = BatchNormalization()(conv4_02)\r\n    print(conv4_b2.shape)\r\n    \r\n    # \u7b2c\u4e94\u5c42\r\n    conv5_u1 = Conv2D(filters = 16, kernel_size = cs, strides = sd, padding = 'same', activation = af, kernel_initializer = ki, bias_initializer = bi)(UpSampling2D(size = (2, 0))(conv4_b2))\r\n    conv5_m1 = concatenate([conv5_u1, conv1_b2], axis = 2)\r\n    \r\n    conv5_01 = Conv2D(filters = 16, kernel_size = cs, strides = sd, padding = 'same', activation = af, kernel_initializer = ki, bias_initializer = bi)(conv5_m1)\r\n    conv5_b1 = BatchNormalization()(conv5_01)\r\n    conv5_02 = Conv2D(filters = 16, kernel_size = cs, strides = sd, padding = 'same', activation = af, kernel_initializer = ki, bias_initializer = bi)(conv5_b1)\r\n    conv5_b2 = BatchNormalization()(conv5_02)\r\n    print(conv5_b2.shape)\r\n    \r\n    # \u8f93\u51fa\u5c42\r\n    conv6_01 = Conv2D(filters = 4, kernel_size = 3, strides = sd, padding = 'same', activation = 'tanh', kernel_initializer = ki, bias_initializer = bi)(conv5_b2)\r\n    conv6_b1 = BatchNormalization()(conv6_01)\r\n    conv6_02 = Conv2D(filters = 4, kernel_size = 3, strides = sd, padding = 'same', activation = 'tanh', kernel_initializer = ki, bias_initializer = bi)(conv6_b1)\r\n    conv6_b2 = BatchNormalization()(conv6_02)\r\n    print(conv6_b2.shape)\r\n    \r\n    conv6_03 = Conv2D(filters = 1, kernel_size = 1, strides = sd, padding = 'same', activation = 'tanh', kernel_initializer = ki, bias_initializer = bi)(conv6_b2)\r\n    conv6_04 = Conv2D(filters = 1, kernel_size = 1, strides = sd, padding = 'same', activation = 'tanh', kernel_initializer = ki, bias_initializer = bi)(conv6_03)\r\n    print(conv6_04.shape)\r\n    \r\n    model = Model(input = inputs, output = conv6_04)\r\n    \r\n    if verbose == 1:\r\n        model.summary()\r\n    \r\n    return model\r\n\r\n\r\ndef mse_8mae_2scc(y_true, y_pred, e=0.00003):\r\n    \r\n    return mean_squared_error(y_true, y_pred) + 2 * binary_crossentropy(y_true, y_pred) + 8 * mean_absolute_error(y_true, y_pred)\r\n\r\n\r\ninput_size = (384,30, 1)\r\nverbose = 0 \r\naf = 'relu'\r\ncs = 5\r\nki = 'he_normal'\r\nbi = 'he_normal'\r\n\r\nprint('\\n### Noise Model')\r\nnoise_model = CommonModel(input_size = input_size, af = af, cs = cs, ki = ki, bi = bi, verbose = verbose)\r\nnoise_model.compile(loss = mse_8mae_2scc, optimizer = Adam(lr = 0.0001), metrics = ['mae'])\r\n\r\n# The error :\r\nprint(train_x.shape)\r\n(1359, 384, 30, 1)\r\n\r\nprint(train_y.shape)\r\n(1359, 384, 30, 1)\r\n\r\nWhen I run the code \"noise_model.train_on_batch(train_x, train_y)\", the error is : \r\n\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-2-6befb884cc73>\", line 1, in <module>\r\n    runfile('D:/2019\u4e0b\u534a\u5b66\u671f/AvoDenoise/GenerateTrainingDataset2D.py', wdir='D:/2019\u4e0b\u534a\u5b66\u671f/AvoDenoise')\r\n\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\spyder_kernels\\customize\\spydercustomize.py\", line 827, in runfile\r\n    execfile(filename, namespace)\r\n\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\spyder_kernels\\customize\\spydercustomize.py\", line 110, in execfile\r\n    exec(compile(f.read(), filename, 'exec'), namespace)\r\n\r\n  File \"D:/2019\u4e0b\u534a\u5b66\u671f/AvoDenoise/GenerateTrainingDataset2D.py\", line 253, in <module>\r\n    noise_loss = noise_model.train_on_batch(batch_x, batch_y)\r\n\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\keras\\engine\\training.py\", line 1883, in train_on_batch\r\n    outputs = self.train_function(ins)\r\n\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\keras\\backend\\tensorflow_backend.py\", line 2482, in __call__\r\n    **self.session_kwargs)\r\n\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 877, in run\r\n    run_metadata_ptr)\r\n\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1100, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1272, in _do_run\r\n    run_metadata)\r\n\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1291, in _do_call\r\n    raise type(e)(node_def, op, message)\r\n\r\nInvalidArgumentError: output dimensions must be positive\r\n\t [[Node: up_sampling2d_2/ResizeNearestNeighbor = ResizeNearestNeighbor[T=DT_FLOAT, _class=[\"loc:@training/Adam/gradients/batch_normalization_38/cond/Merge_grad/cond_grad\"], align_corners=false, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](batch_normalization_38/cond/Merge-0-0-TransposeNCHWToNHWC-LayoutOptimizer, up_sampling2d_2/mul)]]\r\n\t [[Node: metrics_1/mean_absolute_error/Mean_1/_1777 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device_incarnation=1, tensor_name=\"edge_5708_metrics_1/mean_absolute_error/Mean_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"]()]]\r\n\r\nCaused by op 'up_sampling2d_2/ResizeNearestNeighbor', defined at:\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\spyder_kernels\\console\\__main__.py\", line 11, in <module>\r\n    start.main()\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\spyder_kernels\\console\\start.py\", line 318, in main\r\n    kernel.start()\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\ipykernel\\kernelapp.py\", line 563, in start\r\n    self.io_loop.start()\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\tornado\\platform\\asyncio.py\", line 148, in start\r\n    self.asyncio_loop.run_forever()\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\asyncio\\base_events.py\", line 438, in run_forever\r\n    self._run_once()\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\asyncio\\base_events.py\", line 1451, in _run_once\r\n    handle._run()\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\asyncio\\events.py\", line 145, in _run\r\n    self._callback(*self._args)\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\tornado\\ioloop.py\", line 690, in <lambda>\r\n    lambda f: self._run_callback(functools.partial(callback, future))\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\tornado\\ioloop.py\", line 743, in _run_callback\r\n    ret = callback()\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\tornado\\gen.py\", line 787, in inner\r\n    self.run()\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\tornado\\gen.py\", line 748, in run\r\n    yielded = self.gen.send(value)\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\ipykernel\\kernelbase.py\", line 365, in process_one\r\n    yield gen.maybe_future(dispatch(*args))\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\tornado\\gen.py\", line 209, in wrapper\r\n    yielded = next(result)\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\ipykernel\\kernelbase.py\", line 272, in dispatch_shell\r\n    yield gen.maybe_future(handler(stream, idents, msg))\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\tornado\\gen.py\", line 209, in wrapper\r\n    yielded = next(result)\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\ipykernel\\kernelbase.py\", line 542, in execute_request\r\n    user_expressions, allow_stdin,\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\tornado\\gen.py\", line 209, in wrapper\r\n    yielded = next(result)\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\ipykernel\\ipkernel.py\", line 294, in do_execute\r\n    res = shell.run_cell(code, store_history=store_history, silent=silent)\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\ipykernel\\zmqshell.py\", line 536, in run_cell\r\n    return super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 2855, in run_cell\r\n    raw_cell, store_history, silent, shell_futures)\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 2881, in _run_cell\r\n    return runner(coro)\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\IPython\\core\\async_helpers.py\", line 68, in _pseudo_sync_runner\r\n    coro.send(None)\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 3058, in run_cell_async\r\n    interactivity=interactivity, compiler=compiler, result=result)\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 3249, in run_ast_nodes\r\n    if (await self.run_code(code, result,  async_=asy)):\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 3326, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-2-6befb884cc73>\", line 1, in <module>\r\n    runfile('D:/2019\u4e0b\u534a\u5b66\u671f/AvoDenoise/GenerateTrainingDataset2D.py', wdir='D:/2019\u4e0b\u534a\u5b66\u671f/AvoDenoise')\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\spyder_kernels\\customize\\spydercustomize.py\", line 827, in runfile\r\n    execfile(filename, namespace)\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\spyder_kernels\\customize\\spydercustomize.py\", line 110, in execfile\r\n    exec(compile(f.read(), filename, 'exec'), namespace)\r\n  File \"D:/2019\u4e0b\u534a\u5b66\u671f/AvoDenoise/GenerateTrainingDataset2D.py\", line 187, in <module>\r\n    noise_model = CommonModel(input_size = input_size, af = af, cs = cs, ki = ki, bi = bi, verbose = verbose)\r\n  File \"D:/2019\u4e0b\u534a\u5b66\u671f/AvoDenoise/GenerateTrainingDataset2D.py\", line 129, in CommonModel\r\n    conv5_u1 = Conv2D(filters = 16, kernel_size = cs, strides = sd, padding = 'same', activation = af, kernel_initializer = ki, bias_initializer = bi)(UpSampling2D(size = (2, 0))(conv4_b2))\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\keras\\engine\\topology.py\", line 619, in __call__\r\n    output = self.call(inputs, **kwargs)\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\keras\\layers\\convolutional.py\", line 1829, in call\r\n    self.data_format)\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\keras\\backend\\tensorflow_backend.py\", line 1944, in resize_images\r\n    x = tf.image.resize_nearest_neighbor(x, new_shape)\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\tensorflow\\python\\ops\\gen_image_ops.py\", line 3040, in resize_nearest_neighbor\r\n    align_corners=align_corners, name=name)\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 787, in _apply_op_helper\r\n    op_def=op_def)\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\tensorflow\\python\\util\\deprecation.py\", line 454, in new_func\r\n    return func(*args, **kwargs)\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 3155, in create_op\r\n    op_def=op_def)\r\n  File \"E:\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1717, in __init__\r\n    self._traceback = tf_stack.extract_stack()\r\n\r\nInvalidArgumentError (see above for traceback): output dimensions must be positive\r\n\t [[Node: up_sampling2d_2/ResizeNearestNeighbor = ResizeNearestNeighbor[T=DT_FLOAT, _class=[\"loc:@training/Adam/gradients/batch_normalization_38/cond/Merge_grad/cond_grad\"], align_corners=false, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](batch_normalization_38/cond/Merge-0-0-TransposeNCHWToNHWC-LayoutOptimizer, up_sampling2d_2/mul)]]\r\n\t [[Node: metrics_1/mean_absolute_error/Mean_1/_1777 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device_incarnation=1, tensor_name=\"edge_5708_metrics_1/mean_absolute_error/Mean_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"]()]]\r\n\r\nAnd should I do what to remove the error?\r\n\r\nThanks for your replying! Thank you so much. \r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13538", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13538/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13538/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13538/events", "html_url": "https://github.com/keras-team/keras/issues/13538", "id": 520581844, "node_id": "MDU6SXNzdWU1MjA1ODE4NDQ=", "number": 13538, "title": "Slow import of Keras array_to_img", "user": {"login": "sivi29y", "id": 535881, "node_id": "MDQ6VXNlcjUzNTg4MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/535881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sivi29y", "html_url": "https://github.com/sivi29y", "followers_url": "https://api.github.com/users/sivi29y/followers", "following_url": "https://api.github.com/users/sivi29y/following{/other_user}", "gists_url": "https://api.github.com/users/sivi29y/gists{/gist_id}", "starred_url": "https://api.github.com/users/sivi29y/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sivi29y/subscriptions", "organizations_url": "https://api.github.com/users/sivi29y/orgs", "repos_url": "https://api.github.com/users/sivi29y/repos", "events_url": "https://api.github.com/users/sivi29y/events{/privacy}", "received_events_url": "https://api.github.com/users/sivi29y/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}, {"id": 192940623, "node_id": "MDU6TGFiZWwxOTI5NDA2MjM=", "url": "https://api.github.com/repos/keras-team/keras/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-10T10:23:39Z", "updated_at": "2019-12-17T09:11:59Z", "closed_at": "2019-12-17T09:11:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "trying upload just one function from eras take me considerable time \r\nthis is on ubuntu 18.04 under aws \r\nother functions such as bumpy are ok \r\nthis is the only line of code I expect it to be much faster maybe 0.2 sec not 1+ why is it like so and is it solvable? how ? \r\nI hope this is a legit question I looked on the internet and did not find any hint of what to do.\r\n\r\n<from keras.preprocessing.image import array_to_img > \r\n\r\n2019-11-10 10:09:51,380 - root - DEBUG - np 1 1573380591.3805187\r\n2019-11-10 10:09:52,989 - root - DEBUG - tf 1 1573380592.9898841\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13525", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13525/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13525/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13525/events", "html_url": "https://github.com/keras-team/keras/issues/13525", "id": 519154107, "node_id": "MDU6SXNzdWU1MTkxNTQxMDc=", "number": 13525, "title": "Does multi-gpu env supports self-defined lambda layers", "user": {"login": "Ao-Lee", "id": 26970695, "node_id": "MDQ6VXNlcjI2OTcwNjk1", "avatar_url": "https://avatars1.githubusercontent.com/u/26970695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ao-Lee", "html_url": "https://github.com/Ao-Lee", "followers_url": "https://api.github.com/users/Ao-Lee/followers", "following_url": "https://api.github.com/users/Ao-Lee/following{/other_user}", "gists_url": "https://api.github.com/users/Ao-Lee/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ao-Lee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ao-Lee/subscriptions", "organizations_url": "https://api.github.com/users/Ao-Lee/orgs", "repos_url": "https://api.github.com/users/Ao-Lee/repos", "events_url": "https://api.github.com/users/Ao-Lee/events{/privacy}", "received_events_url": "https://api.github.com/users/Ao-Lee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-07T09:47:08Z", "updated_at": "2019-11-08T02:19:09Z", "closed_at": "2019-11-08T01:57:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does multi-gpu env supports self-defined lambda layers\r\nI use tf.image.resize_bilinear in a segmentation network, It seems this function does not support by multi-gpu model. The following code shows the simplified situation: (which can be run directly)\r\n\r\n```\r\nimport os\r\nos.environ[\"CUDA_VISIBLE_DEVICES\"] = '0, 1'\r\nfrom keras.backend.tensorflow_backend import set_session\r\nfrom keras import backend as K\r\nfrom keras.utils import multi_gpu_model\r\nfrom keras.applications.mobilenet_v2 import preprocess_input\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nconfig = tf.ConfigProto()\r\nconfig.gpu_options.allow_growth = True  \r\nconfig.allow_soft_placement = True         \r\nsess = tf.Session(config=config)\r\nset_session(sess)\r\n\r\nbatch = 4\r\nnum_classes = 2\r\nsize = 128\r\nK.clear_session()\r\n\r\ndef _GetRandomImg():\r\n    shape = (batch, size, size, 3)\r\n    img = np.random.randint(low=0, high=256, size=shape)\r\n    return preprocess_input(img)\r\n\r\ndef _GetRandomLabel():\r\n    shape = (batch, size, size, num_classes)\r\n    label = np.random.randint(low=0, high=num_classes, size=shape)\r\n    label = np.exp(label)\r\n    label = label/ np.sum(label, axis=-1, keepdims=True)\r\n    return label\r\n\r\ndef DataGen():\r\n    while True:\r\n        x = _GetRandomImg()\r\n        y = _GetRandomLabel()\r\n        yield x, y\r\n\t\t\r\nfrom keras.layers import Input, Conv2D, Lambda\r\nfrom keras import Model\r\n\r\ndef GetModel():\r\n    inputs = Input(shape=(size, size, 3))\r\n    f = lambda x: tf.image.resize_bilinear(inputs, (size, size), align_corners=True)\r\n    x = Lambda(f, output_shape=(size, size, 3))(inputs)\r\n    outputs = Conv2D(num_classes, kernel_size=3, padding='same')(x)\r\n    model = Model(inputs=[inputs], outputs=[outputs])\r\n    return model\r\n\t\r\ngen = DataGen()\r\nwith tf.device('/cpu:0'):\r\n    model = GetModel() \r\nmodel = multi_gpu_model(model, gpus=2)\r\nmodel.compile(loss='categorical_crossentropy', optimizer='sgd')\r\nresult = model.fit_generator(gen, epochs=2, verbose = 1, steps_per_epoch = 100)\r\n```\r\n\r\nit works fine with single gpu environment, but in multi-gpu environment, I got the following error:\r\n\r\n```\r\nInvalidArgumentError: Incompatible shapes: [4,128,128,2] vs. [8,128,128,2]\r\n\t [[{{node loss/conv2d_1_loss/categorical_crossentropy/mul}}]]\r\n\t [[{{node training/SGD/gradients/conv2d_1_1/concat_grad/Slice_1}}]]\r\n```\r\n\r\nby the way, my environment is:\r\nmy environment is:\r\nkeras version: '2.3.1'\r\ntensorflow version: '1.13.1'\r\nnumber of gpus: Geforce1080 * 4\r\nos version: Ubuntu 16.04\r\nPython version: 3.7\r\nGPU memory: 10G * 4\r\nTensorFlow backend: yes\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13523", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13523/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13523/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13523/events", "html_url": "https://github.com/keras-team/keras/issues/13523", "id": 519120456, "node_id": "MDU6SXNzdWU1MTkxMjA0NTY=", "number": 13523, "title": "ConvGRU ValueError: The two structures don't have the same nested structure.", "user": {"login": "qihuanwuqi", "id": 45473633, "node_id": "MDQ6VXNlcjQ1NDczNjMz", "avatar_url": "https://avatars1.githubusercontent.com/u/45473633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qihuanwuqi", "html_url": "https://github.com/qihuanwuqi", "followers_url": "https://api.github.com/users/qihuanwuqi/followers", "following_url": "https://api.github.com/users/qihuanwuqi/following{/other_user}", "gists_url": "https://api.github.com/users/qihuanwuqi/gists{/gist_id}", "starred_url": "https://api.github.com/users/qihuanwuqi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qihuanwuqi/subscriptions", "organizations_url": "https://api.github.com/users/qihuanwuqi/orgs", "repos_url": "https://api.github.com/users/qihuanwuqi/repos", "events_url": "https://api.github.com/users/qihuanwuqi/events{/privacy}", "received_events_url": "https://api.github.com/users/qihuanwuqi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-07T08:41:16Z", "updated_at": "2019-11-07T08:43:53Z", "closed_at": "2019-11-07T08:43:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "First structure: type=list str=[<tf.Tensor 'conv_gr_u2d_1/while/Identity:0' shape=() dtype=int32>, <tensorflow.python.ops.tensor_array_ops.TensorArray object at 0x7f858471e978>, <tf.Tensor 'conv_gr_u2d_1/while/Identity_2:0' shape=(?, 64, 64, 40) dtype=float32>, <tf.Tensor 'conv_gr_u2d_1/while/Identity_3:0' shape=(?, 64, 64, 40) dtype=float32>]\r\n\r\nSecond structure: type=list str=[<tf.Tensor 'conv_gr_u2d_1/while/add_6:0' shape=() dtype=int32>, <tensorflow.python.ops.tensor_array_ops.TensorArray object at 0x7f85846fccc0>, <tf.Tensor 'conv_gr_u2d_1/while/add_5:0' shape=(?, 64, 64, 40) dtype=float32>]\r\n\r\nMore specifically: The two structures don't have the same number of elements.\r\n First structure: type=list str=[<tf.Tensor 'conv_gr_u2d_1/while/Identity:0' shape=() dtype=int32>, <tensorflow.python.ops.tensor_array_ops.TensorArray object at 0x7f858471e978>, <tf.Tensor 'conv_gr_u2d_1/while/Identity_2:0' shape=(?, 64, 64, 40) dtype=float32>, <tf.Tensor 'conv_gr_u2d_1/while/Identity_3:0' shape=(?, 64, 64, 40) dtype=float32>]. \r\nSecond structure: type=list str=[<tf.Tensor 'conv_gr_u2d_1/while/add_6:0' shape=() dtype=int32>, <tensorflow.python.ops.tensor_array_ops.TensorArray object at 0x7f85846fccc0>, <tf.Tensor 'conv_gr_u2d_1/while/add_5:0'  shape=(?, 64, 64, 40)  dtype=float32>]\r\nEntire first structure:\r\n[., ., ., .]\r\nEntire second structure:\r\n[., ., .]  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13518", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13518/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13518/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13518/events", "html_url": "https://github.com/keras-team/keras/issues/13518", "id": 516904740, "node_id": "MDU6SXNzdWU1MTY5MDQ3NDA=", "number": 13518, "title": "How to convert/load tensorflow saved model to keras?", "user": {"login": "avarf", "id": 14043737, "node_id": "MDQ6VXNlcjE0MDQzNzM3", "avatar_url": "https://avatars2.githubusercontent.com/u/14043737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avarf", "html_url": "https://github.com/avarf", "followers_url": "https://api.github.com/users/avarf/followers", "following_url": "https://api.github.com/users/avarf/following{/other_user}", "gists_url": "https://api.github.com/users/avarf/gists{/gist_id}", "starred_url": "https://api.github.com/users/avarf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avarf/subscriptions", "organizations_url": "https://api.github.com/users/avarf/orgs", "repos_url": "https://api.github.com/users/avarf/repos", "events_url": "https://api.github.com/users/avarf/events{/privacy}", "received_events_url": "https://api.github.com/users/avarf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-03T23:11:16Z", "updated_at": "2019-11-04T09:57:49Z", "closed_at": "2019-11-04T09:57:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have saved my model during training via callback and `tensorflow.keras.callbacks.ModelCheckpoint` but it saved my model as `.pb` which is a TF format and not a keras format (`h5`).  I want to know how I can convert the `pb` format to keras or load it directly to keras.\r\n\r\nMy saved model structure:\r\n```\r\nsaved_trained_10_epochs\r\n    \u251c\u2500\u2500 assets\r\n    \u251c\u2500\u2500 saved_model.pb\r\n    \u2514\u2500\u2500 variables\r\n        \u251c\u2500\u2500 variables.data-00000-of-00001\r\n        \u2514\u2500\u2500 variables.index\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13515", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13515/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13515/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13515/events", "html_url": "https://github.com/keras-team/keras/issues/13515", "id": 516569295, "node_id": "MDU6SXNzdWU1MTY1NjkyOTU=", "number": 13515, "title": "close", "user": {"login": "germayneng", "id": 22788747, "node_id": "MDQ6VXNlcjIyNzg4NzQ3", "avatar_url": "https://avatars2.githubusercontent.com/u/22788747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/germayneng", "html_url": "https://github.com/germayneng", "followers_url": "https://api.github.com/users/germayneng/followers", "following_url": "https://api.github.com/users/germayneng/following{/other_user}", "gists_url": "https://api.github.com/users/germayneng/gists{/gist_id}", "starred_url": "https://api.github.com/users/germayneng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/germayneng/subscriptions", "organizations_url": "https://api.github.com/users/germayneng/orgs", "repos_url": "https://api.github.com/users/germayneng/repos", "events_url": "https://api.github.com/users/germayneng/events{/privacy}", "received_events_url": "https://api.github.com/users/germayneng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-02T11:43:59Z", "updated_at": "2019-11-06T03:21:16Z", "closed_at": "2019-11-06T03:21:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "deleted", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13512", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13512/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13512/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13512/events", "html_url": "https://github.com/keras-team/keras/issues/13512", "id": 516149241, "node_id": "MDU6SXNzdWU1MTYxNDkyNDE=", "number": 13512, "title": "module 'tensorflow' has no attribute 'placeholder'", "user": {"login": "aysayparcasi", "id": 45831099, "node_id": "MDQ6VXNlcjQ1ODMxMDk5", "avatar_url": "https://avatars3.githubusercontent.com/u/45831099?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aysayparcasi", "html_url": "https://github.com/aysayparcasi", "followers_url": "https://api.github.com/users/aysayparcasi/followers", "following_url": "https://api.github.com/users/aysayparcasi/following{/other_user}", "gists_url": "https://api.github.com/users/aysayparcasi/gists{/gist_id}", "starred_url": "https://api.github.com/users/aysayparcasi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aysayparcasi/subscriptions", "organizations_url": "https://api.github.com/users/aysayparcasi/orgs", "repos_url": "https://api.github.com/users/aysayparcasi/repos", "events_url": "https://api.github.com/users/aysayparcasi/events{/privacy}", "received_events_url": "https://api.github.com/users/aysayparcasi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-01T14:32:36Z", "updated_at": "2019-11-28T09:46:26Z", "closed_at": "2019-11-02T13:47:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "  File \"C:\\Users\\User\\Anaconda3\\lib\\site-packages\\keras\\backend\\tensorflow_backend.py\", line 517, in placeholder\r\n    x = tf.placeholder(dtype, shape=shape, name=none)\r\n\r\nAttributeError: module 'tensorflow' has no attribute 'placeholder'\r\n\r\nHow can I get rid of this kind of error?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13498", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13498/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13498/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13498/events", "html_url": "https://github.com/keras-team/keras/issues/13498", "id": 513658877, "node_id": "MDU6SXNzdWU1MTM2NTg4Nzc=", "number": 13498, "title": "AttributeError: 'module' object has no attribute 'Optimizer'", "user": {"login": "Sakuralbj", "id": 42128207, "node_id": "MDQ6VXNlcjQyMTI4MjA3", "avatar_url": "https://avatars2.githubusercontent.com/u/42128207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sakuralbj", "html_url": "https://github.com/Sakuralbj", "followers_url": "https://api.github.com/users/Sakuralbj/followers", "following_url": "https://api.github.com/users/Sakuralbj/following{/other_user}", "gists_url": "https://api.github.com/users/Sakuralbj/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sakuralbj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sakuralbj/subscriptions", "organizations_url": "https://api.github.com/users/Sakuralbj/orgs", "repos_url": "https://api.github.com/users/Sakuralbj/repos", "events_url": "https://api.github.com/users/Sakuralbj/events{/privacy}", "received_events_url": "https://api.github.com/users/Sakuralbj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-29T02:40:36Z", "updated_at": "2019-10-30T06:12:28Z", "closed_at": "2019-10-30T06:11:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\n**System information**  \r\n- Have I written custom code (as opposed to using example directory):  example [VAE](https://github.com/keras-team/keras/blob/master/examples/variational_autoencoder.py)\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  macOS High Sierra 10.13.6\r\n- TensorFlow backend (yes / no):  yes\r\n- TensorFlow version:  2.0.0-beta2\r\n- Keras version:  2.2.4\r\n- Python version:  2.7.15\r\n- CUDA/cuDNN version:  \r\n- GPU model and memory:  cpu\r\n\r\nYou can obtain the TensorFlow version with:  \r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"  \r\nYou can obtain the Keras version with:  \r\npython -c 'import keras as k; print(k.__version__)'  \r\n\r\n**Describe the current behavior**  \r\nI want to run the code to do a simple demo, I find the problem when I run it.\r\n``\r\nRuntimeError: tf.placeholder() is not compatible with eager execution.\r\n``\r\nThen I add tf.compat.v1.disable_eager_execution() and run it again.\r\nThe result:\r\n``\r\nWARNING: Logging before flag parsing goes to stderr.\r\nW1029 10:33:53.465769 140735584514944 deprecation.py:323] From /Users/majianbo/anaconda3/envs/tensorflow/lib/python2.7/site-packages/tensorflow/python/ops/nn_impl.py:182: where (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nUse tf.where in 2.0, which has the same broadcast rule as np.where\r\nTraceback (most recent call last):\r\n  File \"/Users/majianbo/PycharmProjects/DetectionTest/test1.py\", line 175, in <module>\r\n    vae.compile(optimizer='adam')\r\n  File \"/Users/majianbo/anaconda3/envs/tensorflow/lib/python2.7/site-packages/keras/engine/training.py\", line 96, in compile\r\n    self.optimizer = optimizers.get(optimizer)\r\n  File \"/Users/majianbo/anaconda3/envs/tensorflow/lib/python2.7/site-packages/keras/optimizers.py\", line 790, in get\r\n    if isinstance(identifier, tf.train.Optimizer):\r\nAttributeError: 'module' object has no attribute 'Optimizer'\r\n``\r\n**Describe the expected behavior**  \r\nI want to run the code and I wonder if it is caused by tensorflow-version?\r\n\r\n**Code to reproduce the issue**  \r\n[VAE](https://github.com/keras-team/keras/blob/master/examples/variational_autoencoder.py)  \r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13487", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13487/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13487/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13487/events", "html_url": "https://github.com/keras-team/keras/issues/13487", "id": 511406265, "node_id": "MDU6SXNzdWU1MTE0MDYyNjU=", "number": 13487, "title": "AttributeError: 'ProgbarLogger' object has no attribute 'log_values'", "user": {"login": "ktfth", "id": 44123854, "node_id": "MDQ6VXNlcjQ0MTIzODU0", "avatar_url": "https://avatars2.githubusercontent.com/u/44123854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktfth", "html_url": "https://github.com/ktfth", "followers_url": "https://api.github.com/users/ktfth/followers", "following_url": "https://api.github.com/users/ktfth/following{/other_user}", "gists_url": "https://api.github.com/users/ktfth/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktfth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktfth/subscriptions", "organizations_url": "https://api.github.com/users/ktfth/orgs", "repos_url": "https://api.github.com/users/ktfth/repos", "events_url": "https://api.github.com/users/ktfth/events{/privacy}", "received_events_url": "https://api.github.com/users/ktfth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-23T15:32:00Z", "updated_at": "2019-10-24T11:53:41Z", "closed_at": "2019-10-24T11:53:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "from keras.applications.inception_v3 import InceptionV3\r\nfrom keras.preprocessing import image\r\nfrom keras.models import Model\r\nfrom keras.layers import Dense, GlobalAveragePooling2D\r\nfrom keras import backend as K\r\nfrom keras.preprocessing.image import ImageDataGenerator\r\nimport os\r\n\r\nbase_model = InceptionV3(weights='imagenet', include_top=False)\r\n\r\nx = base_model.output\r\nx = GlobalAveragePooling2D()(x)\r\nx = Dense(1024, activation='relu')(x)\r\npredictions = Dense(200, activation='softmax')(x)\r\n\r\nmodel = Model(inputs=base_model.input, outputs=predictions)\r\n\r\nfor layer in base_model.layers:\r\n    layer.trainable = False\r\n\r\nmodel.compile(optimizer='rmsprop', loss='categorical_crossentropy')\r\n\r\ntrain_datagen = ImageDataGenerator(rescale=1./255)\r\n\r\ntrain_generator = train_datagen.flow_from_directory(\r\n    '%s\\\\data' % (os.getcwd()),\r\n    class_mode=None,\r\n    seed=1)\r\n\r\nmodel.fit_generator(train_generator,\r\n                    epochs=10)\r\n\r\nfor i, layer in enumerate(base_model.layers):\r\n   print(i, layer.name)\r\n\r\nfor layer in model.layers[:249]:\r\n   layer.trainable = False\r\nfor layer in model.layers[249:]:\r\n   layer.trainable = True\r\n\r\nfrom keras.optimizers import SGD\r\nmodel.compile(optimizer=SGD(lr=0.0001, momentum=0.9), loss='categorical_crossentropy')\r\n\r\nmodel.fit_generator(train_generator,\r\n                    epochs=10)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13486", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13486/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13486/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13486/events", "html_url": "https://github.com/keras-team/keras/issues/13486", "id": 511259694, "node_id": "MDU6SXNzdWU1MTEyNTk2OTQ=", "number": 13486, "title": "Tensorflow model returns past values for predictions on subsequent calls.", "user": {"login": "damianj", "id": 1448588, "node_id": "MDQ6VXNlcjE0NDg1ODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1448588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/damianj", "html_url": "https://github.com/damianj", "followers_url": "https://api.github.com/users/damianj/followers", "following_url": "https://api.github.com/users/damianj/following{/other_user}", "gists_url": "https://api.github.com/users/damianj/gists{/gist_id}", "starred_url": "https://api.github.com/users/damianj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/damianj/subscriptions", "organizations_url": "https://api.github.com/users/damianj/orgs", "repos_url": "https://api.github.com/users/damianj/repos", "events_url": "https://api.github.com/users/damianj/events{/privacy}", "received_events_url": "https://api.github.com/users/damianj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-23T11:27:08Z", "updated_at": "2019-10-23T20:02:20Z", "closed_at": "2019-10-23T20:02:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure how I ended up posting here. Apologies.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13480", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13480/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13480/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13480/events", "html_url": "https://github.com/keras-team/keras/issues/13480", "id": 510253018, "node_id": "MDU6SXNzdWU1MTAyNTMwMTg=", "number": 13480, "title": "missing module error", "user": {"login": "kelvinwop", "id": 30770221, "node_id": "MDQ6VXNlcjMwNzcwMjIx", "avatar_url": "https://avatars2.githubusercontent.com/u/30770221?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kelvinwop", "html_url": "https://github.com/kelvinwop", "followers_url": "https://api.github.com/users/kelvinwop/followers", "following_url": "https://api.github.com/users/kelvinwop/following{/other_user}", "gists_url": "https://api.github.com/users/kelvinwop/gists{/gist_id}", "starred_url": "https://api.github.com/users/kelvinwop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kelvinwop/subscriptions", "organizations_url": "https://api.github.com/users/kelvinwop/orgs", "repos_url": "https://api.github.com/users/kelvinwop/repos", "events_url": "https://api.github.com/users/kelvinwop/events{/privacy}", "received_events_url": "https://api.github.com/users/kelvinwop/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 888049569, "node_id": "MDU6TGFiZWw4ODgwNDk1Njk=", "url": "https://api.github.com/repos/keras-team/keras/labels/backend:tensorflow", "name": "backend:tensorflow", "color": "e89537", "default": false, "description": "The user is using the TensorFlow backend."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-21T20:02:17Z", "updated_at": "2019-10-24T23:40:16Z", "closed_at": "2019-10-22T16:09:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "**System information**  \r\n- custom code \r\n- win 10\r\n- TensorFlow backend: yes\r\n- TensorFlow version:  `(__version__)` 2.0.0\r\n- Keras version:  `(__version__)` 2.3.1\r\n- Python version:  3.7.1\r\n- CUDA/cuDNN version:  n/a\r\n- GPU model and memory:  n/a\r\n\r\n**Describe the current behavior**  \r\n![image](https://user-images.githubusercontent.com/30770221/67238664-2c854c00-f413-11e9-9528-32265653e494.png)\r\n\r\n**Describe the expected behavior**  \r\nnot that\r\n\r\n**Code to reproduce the issue**  \r\n```python\r\ndef cnn_gru_model(data):\r\n    #input layer\r\n    input_x = keras.Input(shape=(np.shape(data['x_train'])[1], 1), name=\"x_input\")\r\n    print(input_x)\r\n    \r\n    conv = (Conv1D(64, 1, activation='relu'))(input_x)\r\n    conv = BatchNormalization()(conv)\r\n    conv = (Conv1D(64, 2, activation='relu'))(conv)\r\n    conv = BatchNormalization()(conv)\r\n    \r\n    gru = (CuDNNGRU(64, return_sequences=True))(conv)\r\n    gru = (CuDNNGRU(32, return_sequences=True))(gru)\r\n    gru = (CuDNNGRU(16, return_sequences=False))(gru)\r\n    \r\n    gru = layers.Dense(64, activation='sigmoid')(gru)\r\n    gru = layers.Dense(32, activation='sigmoid')(gru)\r\n    y = layers.Dense(1, activation='sigmoid')(gru)\r\n    \r\n    #model\r\n    #classifier = Model([input_x, input_xd], y)\r\n\r\n    classifier = Model([input_x], y)\r\n    classifier.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])\r\n    return classifier\r\n\r\ndef train_model(model, t_in, v_in, t_out, v_out, MODEL_NAME, class_weight=None):\r\n    callbacks = [EarlyStopping(monitor='val_loss', patience=PATIENCE),\r\n             ModelCheckpoint(filepath=MODEL_PATH+\"/\"+MODEL_NAME+\".h5\", monitor='val_loss', verbose=2, save_best_only=True)]\r\n    model.summary()\r\n    model.fit(x={\"x_input\": t_in}, y=t_out, shuffle=True, epochs=EPOCHS, callbacks=callbacks, batch_size=BATCH_SIZE,\r\n              verbose=1, validation_data=([v_in], v_out), class_weight=class_weight)\r\n    return model\r\n\r\nnetwork = cnn_gru_model({'x_train': t_in})\r\nmodel = train_model(network)\r\n\r\n```\r\n\r\n**Other info / logs**  \r\n\r\nmore code at\r\nhttps://github.com/kelvinwop/classifiers/blob/master/circles.ipynb", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13479", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13479/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13479/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13479/events", "html_url": "https://github.com/keras-team/keras/issues/13479", "id": 510117211, "node_id": "MDU6SXNzdWU1MTAxMTcyMTE=", "number": 13479, "title": "InvalidArgumentError:  Incompatible shapes: [19] vs. [30] \t [[node gradients/loss_3/dense_4_loss/mean_squared_error/weighted_loss/mul_grad/Mul_1 (defined at C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow_core\\python\\framework\\ops.py:1751) ]]", "user": {"login": "RenatoWolf", "id": 51379534, "node_id": "MDQ6VXNlcjUxMzc5NTM0", "avatar_url": "https://avatars0.githubusercontent.com/u/51379534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RenatoWolf", "html_url": "https://github.com/RenatoWolf", "followers_url": "https://api.github.com/users/RenatoWolf/followers", "following_url": "https://api.github.com/users/RenatoWolf/following{/other_user}", "gists_url": "https://api.github.com/users/RenatoWolf/gists{/gist_id}", "starred_url": "https://api.github.com/users/RenatoWolf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RenatoWolf/subscriptions", "organizations_url": "https://api.github.com/users/RenatoWolf/orgs", "repos_url": "https://api.github.com/users/RenatoWolf/repos", "events_url": "https://api.github.com/users/RenatoWolf/events{/privacy}", "received_events_url": "https://api.github.com/users/RenatoWolf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-21T16:54:22Z", "updated_at": "2019-10-21T17:09:43Z", "closed_at": "2019-10-21T17:08:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras/issues/13459", "repository_url": "https://api.github.com/repos/keras-team/keras", "labels_url": "https://api.github.com/repos/keras-team/keras/issues/13459/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras/issues/13459/comments", "events_url": "https://api.github.com/repos/keras-team/keras/issues/13459/events", "html_url": "https://github.com/keras-team/keras/issues/13459", "id": 509242494, "node_id": "MDU6SXNzdWU1MDkyNDI0OTQ=", "number": 13459, "title": "model.test_on_batch returns total loss instead of average - Keras 2.2.4 ", "user": {"login": "gowthamkpr", "id": 47574994, "node_id": "MDQ6VXNlcjQ3NTc0OTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/47574994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gowthamkpr", "html_url": "https://github.com/gowthamkpr", "followers_url": "https://api.github.com/users/gowthamkpr/followers", "following_url": "https://api.github.com/users/gowthamkpr/following{/other_user}", "gists_url": "https://api.github.com/users/gowthamkpr/gists{/gist_id}", "starred_url": "https://api.github.com/users/gowthamkpr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gowthamkpr/subscriptions", "organizations_url": "https://api.github.com/users/gowthamkpr/orgs", "repos_url": "https://api.github.com/users/gowthamkpr/repos", "events_url": "https://api.github.com/users/gowthamkpr/events{/privacy}", "received_events_url": "https://api.github.com/users/gowthamkpr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-18T18:24:33Z", "updated_at": "2019-10-18T18:25:29Z", "closed_at": "2019-10-18T18:25:29Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "model.test_on_batch returns total loss instead of average - Keras 2.2.4 \r\n\r\nTensorflow is the issue and it can be fixed using this", "performed_via_github_app": null, "score": 1.0}]}