{"total_count": 103, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/228", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/228/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/228/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/228", "id": 563116478, "node_id": "MDU6SXNzdWU1NjMxMTY0Nzg=", "number": 228, "title": "Fix simple typo: sream -> stream", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-11T10:42:36Z", "updated_at": "2020-05-27T01:24:54Z", "closed_at": "2020-05-27T01:24:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a small typo in doc/protocol.md.\nShould read `stream` rather than `sream`.\n\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/225", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/225/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/225/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/225", "id": 535051678, "node_id": "MDU6SXNzdWU1MzUwNTE2Nzg=", "number": 225, "title": "Cannot close server using .close() or .stop() or exit(), server keep running in the background", "user": {"login": "AlmoGSIntel", "id": 44981409, "node_id": "MDQ6VXNlcjQ0OTgxNDA5", "avatar_url": "https://avatars3.githubusercontent.com/u/44981409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlmoGSIntel", "html_url": "https://github.com/AlmoGSIntel", "followers_url": "https://api.github.com/users/AlmoGSIntel/followers", "following_url": "https://api.github.com/users/AlmoGSIntel/following{/other_user}", "gists_url": "https://api.github.com/users/AlmoGSIntel/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlmoGSIntel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlmoGSIntel/subscriptions", "organizations_url": "https://api.github.com/users/AlmoGSIntel/orgs", "repos_url": "https://api.github.com/users/AlmoGSIntel/repos", "events_url": "https://api.github.com/users/AlmoGSIntel/events{/privacy}", "received_events_url": "https://api.github.com/users/AlmoGSIntel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-09T16:44:04Z", "updated_at": "2019-12-16T22:13:05Z", "closed_at": "2019-12-16T22:13:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using zeroRPC to comunicate between an electron app and python.\r\neverything is working greate, but I can't manage to close the server after the program is closed.\r\nI currently trying to send an .invoke() command that does ServerName.close().\r\nI tried exit() stop() and nothing happend.\r\nwhen close() is called after a momment this pops up in the python console but stayes up:\r\n```\r\nTraceback (most recent call last):\r\n  File \"X:/Electron/Sorti/SortiServer.py\", line 58, in <module>\r\n    sortiMind.run()\r\n  File \"X:\\Electron\\Sorti\\SortiPyVenv\\lib\\site-packages\\zerorpc\\core.py\", line 179, in run\r\n    self._task_pool.join(raise_error=True)\r\n  File \"X:\\Electron\\Sorti\\SortiPyVenv\\lib\\site-packages\\gevent\\pool.py\", line 428, in join\r\n    result = self._empty_event.wait(timeout=timeout)\r\n  File \"src/gevent/event.py\", line 127, in gevent._event.Event.wait\r\n  File \"src/gevent/_abstract_linkable.py\", line 192, in gevent.__abstract_linkable.AbstractLinkable._wait\r\n  File \"src/gevent/_abstract_linkable.py\", line 165, in gevent.__abstract_linkable.AbstractLinkable._wait_core\r\n  File \"src/gevent/_abstract_linkable.py\", line 169, in gevent.__abstract_linkable.AbstractLinkable._wait_core\r\n  File \"src/gevent/_greenlet_primitives.py\", line 60, in gevent.__greenlet_primitives.SwitchOutGreenletWithLoop.switch\r\n  File \"src/gevent/_greenlet_primitives.py\", line 60, in gevent.__greenlet_primitives.SwitchOutGreenletWithLoop.switch\r\n  File \"src/gevent/_greenlet_primitives.py\", line 64, in gevent.__greenlet_primitives.SwitchOutGreenletWithLoop.switch\r\n  File \"src/gevent/__greenlet_primitives.pxd\", line 35, in gevent.__greenlet_primitives._greenlet_switch\r\ngevent.exceptions.LoopExit: This operation would block forever\r\n\tHub: <Hub '' at 0x1fcce63ebf0 default default pending=0 ref=0 thread_ident=0x20f0>\r\n\tHandles:\r\n[HandleState(handle=<cdata 'struct uv_handle_s *' 0x000001FCCBDFAD48>, type=b'check', watcher=<loop at 0x1fcce68caf0 default default pending=0 ref=0>, ref=0, active=1, closing=0),\r\n HandleState(handle=<cdata 'struct uv_handle_s *' 0x000001FCCBDDD538>, type=b'timer', watcher=<loop at 0x1fcce68caf0 default default pending=0 ref=0>, ref=0, active=1, closing=0),\r\n HandleState(handle=<cdata 'struct uv_handle_s *' 0x000001FCCBDFA668>, type=b'prepare', watcher=<loop at 0x1fcce68caf0 default default pending=0 ref=0>, ref=0, active=1, closing=0),\r\n HandleState(handle=<cdata 'struct uv_handle_s *' 0x000001FCCBDF9F88>, type=b'check', watcher=<loop at 0x1fcce68caf0 default default pending=0 ref=0>, ref=1, active=0, closing=0),\r\n HandleState(handle=<cdata 'struct uv_handle_s *' 0x000001FCCBD6C278>, type=b'poll', watcher=None, ref=1, active=0, closing=0)]\r\n```\r\nAfter 10 seconds in the node.js console this pops up and the server is not responding anymore:\r\n```\r\nError [HeartbeatError]: Lost remote after 10000ms\r\n    at Object.createErrorResponse (X:\\Electron\\Sorti\\node_modules\\zerorpc\\lib\\util.js:53:10)\r\n    at ClientChannel.<anonymous> (X:\\Electron\\Sorti\\node_modules\\zerorpc\\lib\\client.js:163:26)\r\n    at ClientChannel.emit (events.js:203:13)\r\n    at Timeout._onTimeout (X:\\Electron\\Sorti\\node_modules\\zerorpc\\lib\\channel.js:198:18)\r\n    at listOnTimeout (internal/timers.js:531:17)\r\n    at processTimers (internal/timers.js:475:7) {\r\n  name: 'HeartbeatError'\r\n}\r\n```\r\nMy setup is this:\r\nI have two clients connected to the server using the connect command and the server is using the bind command.\r\none client is used for all the data transections and the other one is only to invoke the close command.\r\nserver is :\r\n```\r\nserverName = zerorpc.Server(SortiMind())\r\nserverName .bind(\"tcp://127.0.0.1:27997\")\r\nserverName .run()\r\n```\r\nclient one:\r\n```\r\nconst zerorpc = require(\"zerorpc\");\r\nconst client = new zerorpc.Client();\r\nclient.connect(\"tcp://127.0.0.1:27997\");\r\n```\r\n\r\nclient two:\r\n```\r\nserverName = zerorpc.Server(SortiMind())\r\nserverName .bind(\"tcp://127.0.0.1:27997\")\r\nserverName .run()\r\n\r\n```\r\n\r\nclose command on client:\r\n```\r\nclient.invoke(\"close_program\", (error, res, more) => {\r\n                    console.log(error);\r\n                });\r\n```\r\n\r\nclose command on server(it is one of the class methods):\r\n```\r\n    def close_program(self):\r\n        serverName .close()\r\n```\r\nPlease help me.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/222", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/222/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/222/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/222", "id": 511031744, "node_id": "MDU6SXNzdWU1MTEwMzE3NDQ=", "number": 222, "title": "How to monitor my RPC service based on zeroRPC", "user": {"login": "litaotao", "id": 4660350, "node_id": "MDQ6VXNlcjQ2NjAzNTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4660350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/litaotao", "html_url": "https://github.com/litaotao", "followers_url": "https://api.github.com/users/litaotao/followers", "following_url": "https://api.github.com/users/litaotao/following{/other_user}", "gists_url": "https://api.github.com/users/litaotao/gists{/gist_id}", "starred_url": "https://api.github.com/users/litaotao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/litaotao/subscriptions", "organizations_url": "https://api.github.com/users/litaotao/orgs", "repos_url": "https://api.github.com/users/litaotao/repos", "events_url": "https://api.github.com/users/litaotao/events{/privacy}", "received_events_url": "https://api.github.com/users/litaotao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-10-23T02:26:08Z", "updated_at": "2019-10-26T01:56:07Z", "closed_at": "2019-10-26T01:56:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "thanks for building zeroRPC, it's so elegant and simple to use. But in our system, we have many services and each service has different clients which send different calls.\r\n\r\nAnd we want to monitor our rpc services, such as how many calls it has handled, how many calls it is processing, for each call, we want to know it's source, current status and time consumed and other useful indicators.\r\n\r\nso to put is simply, how do we can monitor our rpc services based on zeroRPC. \r\n\r\nthanks a lot ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/216", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/216/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/216/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/216", "id": 455054048, "node_id": "MDU6SXNzdWU0NTUwNTQwNDg=", "number": 216, "title": "Server shutdown timeout", "user": {"login": "Evidlo", "id": 5455841, "node_id": "MDQ6VXNlcjU0NTU4NDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5455841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Evidlo", "html_url": "https://github.com/Evidlo", "followers_url": "https://api.github.com/users/Evidlo/followers", "following_url": "https://api.github.com/users/Evidlo/following{/other_user}", "gists_url": "https://api.github.com/users/Evidlo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Evidlo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Evidlo/subscriptions", "organizations_url": "https://api.github.com/users/Evidlo/orgs", "repos_url": "https://api.github.com/users/Evidlo/repos", "events_url": "https://api.github.com/users/Evidlo/events{/privacy}", "received_events_url": "https://api.github.com/users/Evidlo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-12T07:29:41Z", "updated_at": "2019-06-12T22:14:40Z", "closed_at": "2019-06-12T22:14:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like my server to shut down after N seconds of no client activity. Is there a way to do this?\r\n\r\nMy application is a CLI program for accessing an encrypted database. Database decryption is slow, so I fork a server process to keep the database open and communicate with it through a unix socket. The server should shut down 5 minutes after no contact from the client.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/215", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/215/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/215/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/215", "id": 454776719, "node_id": "MDU6SXNzdWU0NTQ3NzY3MTk=", "number": 215, "title": "Memory leak when using async calls", "user": {"login": "aleksa2808", "id": 7463511, "node_id": "MDQ6VXNlcjc0NjM1MTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/7463511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aleksa2808", "html_url": "https://github.com/aleksa2808", "followers_url": "https://api.github.com/users/aleksa2808/followers", "following_url": "https://api.github.com/users/aleksa2808/following{/other_user}", "gists_url": "https://api.github.com/users/aleksa2808/gists{/gist_id}", "starred_url": "https://api.github.com/users/aleksa2808/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aleksa2808/subscriptions", "organizations_url": "https://api.github.com/users/aleksa2808/orgs", "repos_url": "https://api.github.com/users/aleksa2808/repos", "events_url": "https://api.github.com/users/aleksa2808/events{/privacy}", "received_events_url": "https://api.github.com/users/aleksa2808/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-11T16:02:43Z", "updated_at": "2019-06-12T12:00:26Z", "closed_at": "2019-06-12T12:00:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, I've been using this library for a bit and I came upon an issue where, if I call the remote methods with the 'async' argument enabled, the client script starts consuming about 200MB per second, releasing them only when I interrupt it.\r\n\r\nWhen I call methods without the async argument, the memory that the script consumes is constant.\r\n\r\nI'm using Python 3.6.7 with `pip freeze` giving:  \r\n\r\n```\r\nfuture==0.17.1\r\ngevent==1.5a1\r\ngreenlet==0.4.15\r\nmsgpack-python==0.5.6\r\npyzmq==18.0.1\r\nzerorpc==0.6.1\r\n```\r\n\r\nThe client and server scripts that are causing the issue on my machine are:\r\n\r\n```python\r\n# client.py\r\nimport zerorpc\r\n\r\nclient = zerorpc.Client()\r\nclient.connect(\"tcp://127.0.0.1:1234\")\r\n\r\nwhile True:\r\n    client.async_method(async=True)\r\n\r\n# server.py\r\nimport zerorpc\r\n\r\nclass API():\r\n    def async_method(self):\r\n        pass\r\n\r\ns = zerorpc.Server(API())\r\ns.bind(\"tcp://0.0.0.0:1234\")\r\ns.run()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/209", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/209/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/209/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/209/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/209", "id": 409277334, "node_id": "MDU6SXNzdWU0MDkyNzczMzQ=", "number": 209, "title": "zerorpc last release on PyPi is 2 years old", "user": {"login": "littlebrat", "id": 9057382, "node_id": "MDQ6VXNlcjkwNTczODI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9057382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/littlebrat", "html_url": "https://github.com/littlebrat", "followers_url": "https://api.github.com/users/littlebrat/followers", "following_url": "https://api.github.com/users/littlebrat/following{/other_user}", "gists_url": "https://api.github.com/users/littlebrat/gists{/gist_id}", "starred_url": "https://api.github.com/users/littlebrat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/littlebrat/subscriptions", "organizations_url": "https://api.github.com/users/littlebrat/orgs", "repos_url": "https://api.github.com/users/littlebrat/repos", "events_url": "https://api.github.com/users/littlebrat/events{/privacy}", "received_events_url": "https://api.github.com/users/littlebrat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-12T12:37:28Z", "updated_at": "2019-07-09T07:25:38Z", "closed_at": "2019-07-09T07:25:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "There have been some new commits which would be useful on a new release on PyPi.\r\n\r\nWould there be any issue against this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/208", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/208/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/208/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/208", "id": 409217295, "node_id": "MDU6SXNzdWU0MDkyMTcyOTU=", "number": 208, "title": "recreate server object bind fails", "user": {"login": "tiagocoutinho", "id": 2684070, "node_id": "MDQ6VXNlcjI2ODQwNzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2684070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiagocoutinho", "html_url": "https://github.com/tiagocoutinho", "followers_url": "https://api.github.com/users/tiagocoutinho/followers", "following_url": "https://api.github.com/users/tiagocoutinho/following{/other_user}", "gists_url": "https://api.github.com/users/tiagocoutinho/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiagocoutinho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiagocoutinho/subscriptions", "organizations_url": "https://api.github.com/users/tiagocoutinho/orgs", "repos_url": "https://api.github.com/users/tiagocoutinho/repos", "events_url": "https://api.github.com/users/tiagocoutinho/events{/privacy}", "received_events_url": "https://api.github.com/users/tiagocoutinho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-12T10:08:12Z", "updated_at": "2019-02-13T14:07:24Z", "closed_at": "2019-02-12T21:25:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Problem\r\nI am running the following zerorpc server:\r\n\r\n```python\r\nimport zerorpc\r\nimport gevent\r\n\r\ndef run(server):\r\n    print('started 0RPC server')\r\n    server.run()\r\n    print('finished 0RPC server')\r\n\r\ndef start():\r\n    global PORT\r\n    bind = \"tcp://*:4242\"\r\n    server = zerorpc.Server(gevent)\r\n    server.bind(bind)\r\n    task = gevent.spawn(run, server)\r\n    task.server = server\r\n    return task\r\n\r\nwhile True:\r\n    try:\r\n        task = start()\r\n        while True:\r\n            gevent.sleep(1)\r\n    except KeyboardInterrupt:\r\n        print('Stopping...')\r\n        task.server.stop()\r\n        task.join()\r\n```\r\nWhen I hit Ctrl-C I get the following error:\r\n```\r\nstarted 0RPC server\r\n^CKeyboardInterrupt\r\n2019-02-12T09:46:46Z\r\nStopping...\r\nfinished 0RPC server\r\nTraceback (most recent call last):\r\n  File \"zrpc_test3.py\", line 22, in <module>\r\n    task = start()\r\n  File \"zrpc_test3.py\", line 14, in start\r\n    server.bind(bind)\r\n  File \"/usr/lib/python2.7/site-packages/zerorpc/socket.py\", line 43, in bind\r\n    return self._events.bind(endpoint, resolve)\r\n  File \"/usr/lib/python2.7/site-packages/zerorpc/events.py\", line 325, in bind\r\n    r.append(self._socket.bind(endpoint_))\r\n  File \"zmq/backend/cython/socket.pyx\", line 547, in zmq.backend.cython.socket.Socket.bind\r\n  File \"zmq/backend/cython/checkrc.pxd\", line 25, in zmq.backend.cython.checkrc._check_rc\r\nzmq.error.ZMQError: Address already in use\r\n```\r\n## Expected behaviour\r\n\r\nAfter hitting Ctrl-C the server should restart properly\r\n\r\n## Context\r\n\r\nI am writting an RPC extension to [supervisor](https://github.com/Supervisor/supervisor) called [multivisor](https://github.com/tiagocoutinho/multivisor). \r\n\r\nWhen supervisor daemon is asked to restart, multivisor is supposed to restart the ZeroRPC server from scratch. \r\nThe actual scenario is more complex since I need to spawn a dedicated thread to handle ZeroRPC server and communicate with it using [gevent.hub.Watcher](http://www.gevent.org/api/gevent.hub.html#gevent._interfaces.IWatcher). This is because supervisor runs a [asyncore](https://docs.python.org/2/library/asyncore.html) based I/O loop.\r\nThe output I see in supervisord after a restart is:\r\n```\r\n...\r\nRPCServer WARNING 2019-02-12 08:38:02,140 MVRPC: noticed that supervisor is dying\r\n2019-02-12 08:38:02,139 INFO waiting for vacuum_OH1 to die\r\n2019-02-12 08:38:02,141 INFO stopped: vacuum_OH1 (terminated by SIGTERM)\r\n2019-02-12 08:38:02,159 INFO RPC interface 'supervisor' initialized\r\n2019-02-12 08:38:02,159 INFO RPC interface 'multivisor' initialized\r\n2019-02-12 08:38:02,159 CRIT Server 'inet_http_server' running without any HTTP authentication checking\r\n2019-02-12 08:38:02,159 INFO supervisord started with pid 29369\r\nRPCServer INFO 2019-02-12 08:38:02,159 MVRPC: 0RPC: spawn server on 29369...\r\nAssertion failed: nbytes == sizeof dummy (src/signaler.cpp:236)\r\nAborted (core dumped)\r\n```\r\n\r\nIn trying to reproduce the problem with the server above I came across the problem I explained.\r\nI believe it to be the source of my problems.\r\n\r\nIf anyone is interested, the multivisor RPC is [here](https://github.com/tiagocoutinho/multivisor/blob/master/multivisor/rpc.py)\r\n\r\nThanks in advance for all the help", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/207", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/207/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/207/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/207", "id": 392428869, "node_id": "MDU6SXNzdWUzOTI0Mjg4Njk=", "number": 207, "title": "Are there API docs?", "user": {"login": "KeithTt", "id": 15189954, "node_id": "MDQ6VXNlcjE1MTg5OTU0", "avatar_url": "https://avatars0.githubusercontent.com/u/15189954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KeithTt", "html_url": "https://github.com/KeithTt", "followers_url": "https://api.github.com/users/KeithTt/followers", "following_url": "https://api.github.com/users/KeithTt/following{/other_user}", "gists_url": "https://api.github.com/users/KeithTt/gists{/gist_id}", "starred_url": "https://api.github.com/users/KeithTt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KeithTt/subscriptions", "organizations_url": "https://api.github.com/users/KeithTt/orgs", "repos_url": "https://api.github.com/users/KeithTt/repos", "events_url": "https://api.github.com/users/KeithTt/events{/privacy}", "received_events_url": "https://api.github.com/users/KeithTt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-12-19T03:44:00Z", "updated_at": "2018-12-23T20:15:41Z", "closed_at": "2018-12-21T17:08:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Are there API docs besides the examples on the official website?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/205", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/205/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/205/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/205", "id": 384448915, "node_id": "MDU6SXNzdWUzODQ0NDg5MTU=", "number": 205, "title": "Segfaulting on Windows", "user": {"login": "axfelix", "id": 252047, "node_id": "MDQ6VXNlcjI1MjA0Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/252047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/axfelix", "html_url": "https://github.com/axfelix", "followers_url": "https://api.github.com/users/axfelix/followers", "following_url": "https://api.github.com/users/axfelix/following{/other_user}", "gists_url": "https://api.github.com/users/axfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/axfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/axfelix/subscriptions", "organizations_url": "https://api.github.com/users/axfelix/orgs", "repos_url": "https://api.github.com/users/axfelix/repos", "events_url": "https://api.github.com/users/axfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/axfelix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-11-26T18:08:17Z", "updated_at": "2019-01-07T17:30:46Z", "closed_at": "2019-01-07T17:30:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI installed this normally via pip on Windows under Python 3.5.2 and trying to run ./zerorpc by itself or `import zerorpc` is segfaulting. I'm not sure if you're directly supporting Windows yourself but https://github.com/leo-editor/leo-editor/issues/701 suggests it should work...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/203", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/203/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/203/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/203", "id": 371428502, "node_id": "MDU6SXNzdWUzNzE0Mjg1MDI=", "number": 203, "title": "Namespaces", "user": {"login": "adrianschneider94", "id": 17550019, "node_id": "MDQ6VXNlcjE3NTUwMDE5", "avatar_url": "https://avatars3.githubusercontent.com/u/17550019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adrianschneider94", "html_url": "https://github.com/adrianschneider94", "followers_url": "https://api.github.com/users/adrianschneider94/followers", "following_url": "https://api.github.com/users/adrianschneider94/following{/other_user}", "gists_url": "https://api.github.com/users/adrianschneider94/gists{/gist_id}", "starred_url": "https://api.github.com/users/adrianschneider94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adrianschneider94/subscriptions", "organizations_url": "https://api.github.com/users/adrianschneider94/orgs", "repos_url": "https://api.github.com/users/adrianschneider94/repos", "events_url": "https://api.github.com/users/adrianschneider94/events{/privacy}", "received_events_url": "https://api.github.com/users/adrianschneider94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 250736, "node_id": "MDU6TGFiZWwyNTA3MzY=", "url": "https://api.github.com/repos/0rpc/zerorpc-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-18T09:00:40Z", "updated_at": "2018-12-12T19:04:50Z", "closed_at": "2018-12-12T19:04:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI would like to use namespaces for my ZeroRPC Server. So that I can structure the functions. https://github.com/kmanley/zerorpc/ implements this. Is this possible with zerorpc-python?\r\n\r\nBest wishes,\r\nAdrian Schneider", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/201", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/201/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/201/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/201", "id": 365230048, "node_id": "MDU6SXNzdWUzNjUyMzAwNDg=", "number": 201, "title": "Can I stay connected to a server and continously read for input?", "user": {"login": "lcukerd", "id": 16819113, "node_id": "MDQ6VXNlcjE2ODE5MTEz", "avatar_url": "https://avatars1.githubusercontent.com/u/16819113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcukerd", "html_url": "https://github.com/lcukerd", "followers_url": "https://api.github.com/users/lcukerd/followers", "following_url": "https://api.github.com/users/lcukerd/following{/other_user}", "gists_url": "https://api.github.com/users/lcukerd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcukerd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcukerd/subscriptions", "organizations_url": "https://api.github.com/users/lcukerd/orgs", "repos_url": "https://api.github.com/users/lcukerd/repos", "events_url": "https://api.github.com/users/lcukerd/events{/privacy}", "received_events_url": "https://api.github.com/users/lcukerd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-30T14:41:03Z", "updated_at": "2018-09-30T20:06:17Z", "closed_at": "2018-09-30T20:06:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to do this to save time required to connect with server by always staying connected with it and reading all inputs? If so how can I achieve this? If not then are you planning to include something similar?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/198", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/198/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/198/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/198", "id": 327587694, "node_id": "MDU6SXNzdWUzMjc1ODc2OTQ=", "number": 198, "title": "How to support messagepack extended types, such as DataFrame?", "user": {"login": "markqiu", "id": 1124637, "node_id": "MDQ6VXNlcjExMjQ2Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1124637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markqiu", "html_url": "https://github.com/markqiu", "followers_url": "https://api.github.com/users/markqiu/followers", "following_url": "https://api.github.com/users/markqiu/following{/other_user}", "gists_url": "https://api.github.com/users/markqiu/gists{/gist_id}", "starred_url": "https://api.github.com/users/markqiu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markqiu/subscriptions", "organizations_url": "https://api.github.com/users/markqiu/orgs", "repos_url": "https://api.github.com/users/markqiu/repos", "events_url": "https://api.github.com/users/markqiu/events{/privacy}", "received_events_url": "https://api.github.com/users/markqiu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-30T06:17:07Z", "updated_at": "2018-07-19T04:07:12Z", "closed_at": "2018-07-19T04:07:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/194", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/194/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/194/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/194", "id": 313855732, "node_id": "MDU6SXNzdWUzMTM4NTU3MzI=", "number": 194, "title": "zerorpc server fails to receive on CentOS 7", "user": {"login": "drsuser", "id": 21683817, "node_id": "MDQ6VXNlcjIxNjgzODE3", "avatar_url": "https://avatars1.githubusercontent.com/u/21683817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drsuser", "html_url": "https://github.com/drsuser", "followers_url": "https://api.github.com/users/drsuser/followers", "following_url": "https://api.github.com/users/drsuser/following{/other_user}", "gists_url": "https://api.github.com/users/drsuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/drsuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drsuser/subscriptions", "organizations_url": "https://api.github.com/users/drsuser/orgs", "repos_url": "https://api.github.com/users/drsuser/repos", "events_url": "https://api.github.com/users/drsuser/events{/privacy}", "received_events_url": "https://api.github.com/users/drsuser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-12T19:23:32Z", "updated_at": "2018-04-13T13:55:01Z", "closed_at": "2018-04-13T13:53:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Testing zerorpc on CentOS 7 as: `zerorpc --server --bind tcp://0.0.0.0:1234 urllib`\r\nTrying to connect to it from a client machine with: `zerorpc tcp://10.200.120.10:1234 quote \"hello\"`\r\n\r\nThe server hangs on receive and the client eventually times out. \r\nI can see the data coming in over the wire with tcpdump.\r\nI installed zerorpc on both machines with `pip install zerorpc` and the versions of zerorpc, pyzmq, msgpack-python and gevent between the two machines match exactly.\r\nDoing the same thing on Fedora 28 as client (all module versions also match) works fine.\r\nSo the issue seems specific to CentOS 7, at least from my perspective. What could it be and how do I go about working around it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/189", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/189/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/189/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/189", "id": 303664925, "node_id": "MDU6SXNzdWUzMDM2NjQ5MjU=", "number": 189, "title": "Is this project still under active development?", "user": {"login": "inventionlabsSydney", "id": 2543079, "node_id": "MDQ6VXNlcjI1NDMwNzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2543079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inventionlabsSydney", "html_url": "https://github.com/inventionlabsSydney", "followers_url": "https://api.github.com/users/inventionlabsSydney/followers", "following_url": "https://api.github.com/users/inventionlabsSydney/following{/other_user}", "gists_url": "https://api.github.com/users/inventionlabsSydney/gists{/gist_id}", "starred_url": "https://api.github.com/users/inventionlabsSydney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inventionlabsSydney/subscriptions", "organizations_url": "https://api.github.com/users/inventionlabsSydney/orgs", "repos_url": "https://api.github.com/users/inventionlabsSydney/repos", "events_url": "https://api.github.com/users/inventionlabsSydney/events{/privacy}", "received_events_url": "https://api.github.com/users/inventionlabsSydney/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-08T23:03:55Z", "updated_at": "2018-03-11T00:41:42Z", "closed_at": "2018-03-11T00:41:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/188", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/188/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/188/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/188", "id": 303640658, "node_id": "MDU6SXNzdWUzMDM2NDA2NTg=", "number": 188, "title": "Invalid argument error when trying example ", "user": {"login": "mentaal", "id": 3391774, "node_id": "MDQ6VXNlcjMzOTE3NzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3391774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mentaal", "html_url": "https://github.com/mentaal", "followers_url": "https://api.github.com/users/mentaal/followers", "following_url": "https://api.github.com/users/mentaal/following{/other_user}", "gists_url": "https://api.github.com/users/mentaal/gists{/gist_id}", "starred_url": "https://api.github.com/users/mentaal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mentaal/subscriptions", "organizations_url": "https://api.github.com/users/mentaal/orgs", "repos_url": "https://api.github.com/users/mentaal/repos", "events_url": "https://api.github.com/users/mentaal/events{/privacy}", "received_events_url": "https://api.github.com/users/mentaal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-08T21:35:51Z", "updated_at": "2018-03-11T00:09:15Z", "closed_at": "2018-03-11T00:09:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, when I try the command line examples, I get the following error:\r\n\r\n(zerorpc_venv) C:\\Users\\gkuhn\\python_envs>zerorpc tcp://127.0.0.1://1234\r\nconnecting to \"tcp://127.0.0.1://1234\"\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\gkuhn\\python_envs\\zerorpc_venv\\Scripts\\zerorpc-script.py\", line 11, in <module>\r\n    load_entry_point('zerorpc==0.6.1', 'console_scripts', 'zerorpc')()\r\n  File \"c:\\users\\gkuhn\\python_envs\\zerorpc_venv\\lib\\site-packages\\zerorpc\\cli.py\", line 310, in main\r\n    return run_client(args)\r\n  File \"c:\\users\\gkuhn\\python_envs\\zerorpc_venv\\lib\\site-packages\\zerorpc\\cli.py\", line 244, in run_client\r\n    setup_links(args, client)\r\n  File \"c:\\users\\gkuhn\\python_envs\\zerorpc_venv\\lib\\site-packages\\zerorpc\\cli.py\", line 104, in setup_links\r\n    socket.connect(endpoint)\r\n  File \"c:\\users\\gkuhn\\python_envs\\zerorpc_venv\\lib\\site-packages\\zerorpc\\socket.py\", line 40, in connect\r\n    return self._events.connect(endpoint, resolve)\r\n  File \"c:\\users\\gkuhn\\python_envs\\zerorpc_venv\\lib\\site-packages\\zerorpc\\events.py\", line 318, in connect\r\n    r.append(self._socket.connect(endpoint_))\r\n  File \"c:\\users\\gkuhn\\python_envs\\zerorpc_venv\\lib\\site-packages\\zerorpc\\gevent_zmq.py\", line 105, in connect\r\n    return super(Socket, self).connect(*args, **kwargs)\r\n  File \"zmq\\backend\\cython\\socket.pyx\", line 580, in zmq.backend.cython.socket.Socket.connect\r\n  File \"zmq\\backend\\cython\\checkrc.pxd\", line 25, in zmq.backend.cython.checkrc._check_rc\r\nzmq.error.ZMQError: Invalid argument\r\n\r\n\r\nEnvironment:\r\n(zerorpc_venv) C:\\Users\\gkuhn\\python_envs>pip freeze\r\nfuture==0.16.0\r\ngevent==1.3a2\r\ngreenlet==0.4.13\r\nmsgpack-python==0.5.5\r\npyzmq==17.0.0\r\nzerorpc==0.6.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/185", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/185/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/185/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/185", "id": 294019648, "node_id": "MDU6SXNzdWUyOTQwMTk2NDg=", "number": 185, "title": "msgpack-python is deprecated.  msgpack is the new name.", "user": {"login": "kc64", "id": 847151, "node_id": "MDQ6VXNlcjg0NzE1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/847151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kc64", "html_url": "https://github.com/kc64", "followers_url": "https://api.github.com/users/kc64/followers", "following_url": "https://api.github.com/users/kc64/following{/other_user}", "gists_url": "https://api.github.com/users/kc64/gists{/gist_id}", "starred_url": "https://api.github.com/users/kc64/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kc64/subscriptions", "organizations_url": "https://api.github.com/users/kc64/orgs", "repos_url": "https://api.github.com/users/kc64/repos", "events_url": "https://api.github.com/users/kc64/events{/privacy}", "received_events_url": "https://api.github.com/users/kc64/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-02T20:52:22Z", "updated_at": "2018-02-02T21:03:39Z", "closed_at": "2018-02-02T21:03:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "The owner of the msgpack-python package decided to rename the project.\r\n\r\nAccording to pyPI regarding msgpack-python, \"This package is deprecated. Install msgpack instead.\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/183", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/183/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/183/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/183", "id": 282184634, "node_id": "MDU6SXNzdWUyODIxODQ2MzQ=", "number": 183, "title": "Compatibility with other RPC libs", "user": {"login": "sasmaster", "id": 438400, "node_id": "MDQ6VXNlcjQzODQwMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/438400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sasmaster", "html_url": "https://github.com/sasmaster", "followers_url": "https://api.github.com/users/sasmaster/followers", "following_url": "https://api.github.com/users/sasmaster/following{/other_user}", "gists_url": "https://api.github.com/users/sasmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/sasmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sasmaster/subscriptions", "organizations_url": "https://api.github.com/users/sasmaster/orgs", "repos_url": "https://api.github.com/users/sasmaster/repos", "events_url": "https://api.github.com/users/sasmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/sasmaster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-14T17:45:42Z", "updated_at": "2018-01-09T23:19:33Z", "closed_at": "2018-01-09T23:19:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. Is this lib supposed to work with https://github.com/rpclib/rpclib  ?\r\n\r\nBoth implement the same rpc standard.But it doesn't work.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/180", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/180/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/180/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/180", "id": 270872426, "node_id": "MDU6SXNzdWUyNzA4NzI0MjY=", "number": 180, "title": "Meet Problem with Pyinstaller", "user": {"login": "friddle", "id": 2897690, "node_id": "MDQ6VXNlcjI4OTc2OTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2897690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/friddle", "html_url": "https://github.com/friddle", "followers_url": "https://api.github.com/users/friddle/followers", "following_url": "https://api.github.com/users/friddle/following{/other_user}", "gists_url": "https://api.github.com/users/friddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/friddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/friddle/subscriptions", "organizations_url": "https://api.github.com/users/friddle/orgs", "repos_url": "https://api.github.com/users/friddle/repos", "events_url": "https://api.github.com/users/friddle/events{/privacy}", "received_events_url": "https://api.github.com/users/friddle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-03T03:48:21Z", "updated_at": "2018-08-08T17:08:27Z", "closed_at": "2017-11-03T08:53:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I pack python file include zerorpc,but meet the problem like that \r\n\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/2897690/32359922-5476e39c-c01f-11e7-99d5-2bbefcbfaf9f.png)\r\n\r\n\r\nI found this issues:https://github.com/zeromq/pyzmq/issues/999\r\ncopy all python file to zmq\\backend\\cython\\\r\nbut throw other exception:\r\n\r\ncython not found.\r\n\r\n\r\npip 9.0.1 from /usr/local/lib/python2.7/site-packages (python 2.7)\r\npyinstaller 3.3\r\nDarwin sckMacBook-Pro.local 16.7.0 Darwin Kernel Version 16.7.0: Thu Jun 15 17:36:27 PDT 2017; root:xnu-3789.70.16~2/RELEASE_X86_64 x86_64\r\n\r\nPlease Helo to fix this problem\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/179", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/179/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/179/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/179", "id": 270637769, "node_id": "MDU6SXNzdWUyNzA2Mzc3Njk=", "number": 179, "title": "zerorpc.ChannelMultiplexer, unable to route event", "user": {"login": "romanesko", "id": 1404610, "node_id": "MDQ6VXNlcjE0MDQ2MTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1404610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/romanesko", "html_url": "https://github.com/romanesko", "followers_url": "https://api.github.com/users/romanesko/followers", "following_url": "https://api.github.com/users/romanesko/following{/other_user}", "gists_url": "https://api.github.com/users/romanesko/gists{/gist_id}", "starred_url": "https://api.github.com/users/romanesko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/romanesko/subscriptions", "organizations_url": "https://api.github.com/users/romanesko/orgs", "repos_url": "https://api.github.com/users/romanesko/repos", "events_url": "https://api.github.com/users/romanesko/events{/privacy}", "received_events_url": "https://api.github.com/users/romanesko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 673522053, "node_id": "MDU6TGFiZWw2NzM1MjIwNTM=", "url": "https://api.github.com/repos/0rpc/zerorpc-python/labels/faq", "name": "faq", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-02T12:36:28Z", "updated_at": "2018-01-09T23:35:27Z", "closed_at": "2018-01-09T23:35:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nzerorpc.ChannelMultiplexer, unable to route event: <b'\\x00\\x92r\\xc4\\xe2'> _zpc_hb {'response_to': b'd79c7130db9447a4aad01c4f1ecef0ff', 'v': 3, 'message_id': b'd79c7131db9447a4aad01c4f1ecef0ff'} [...]\r\n```\r\non the server after the same client disconnects and connects again", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/172", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/172/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/172/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/172", "id": 258012311, "node_id": "MDU6SXNzdWUyNTgwMTIzMTE=", "number": 172, "title": "Multiple nodes (workers) scheme", "user": {"login": "histrio", "id": 650369, "node_id": "MDQ6VXNlcjY1MDM2OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/650369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/histrio", "html_url": "https://github.com/histrio", "followers_url": "https://api.github.com/users/histrio/followers", "following_url": "https://api.github.com/users/histrio/following{/other_user}", "gists_url": "https://api.github.com/users/histrio/gists{/gist_id}", "starred_url": "https://api.github.com/users/histrio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/histrio/subscriptions", "organizations_url": "https://api.github.com/users/histrio/orgs", "repos_url": "https://api.github.com/users/histrio/repos", "events_url": "https://api.github.com/users/histrio/events{/privacy}", "received_events_url": "https://api.github.com/users/histrio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-15T11:41:44Z", "updated_at": "2017-10-11T05:13:11Z", "closed_at": "2017-10-11T05:13:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it implementable on this library when one master send an RPC call and first free worker (node) get this job?\r\n\r\nAll my attempts fail. For example, with below implementation, when two nodes are running, a master freezes and node shows\r\n`WARNING:zerorpc.channel:zerorpc.ChannelMultiplexer, unable to route event: <'\\x00k\\x8bEg'> _zpc_hb {u'response_to': '0b53d186990a47d68f723219b8e15389', u'message_id': '0b53d194990a47d68f723219b8e15389', u'v': 3} [...]` \r\n\r\nIn the case, when the node is only one _or_ `stream` not used _or_ range is not big - all works fine.\r\n  \r\nnode.py\r\n```\r\nimport zerorpc\r\n\r\nimport logging\r\nlogging.basicConfig()\r\n\r\n\r\nclass StreamingRPC(object):\r\n    @zerorpc.stream\r\n    def streaming_range(self, fr, to, step):\r\n        return xrange(fr, to, step)\r\n\r\n\r\ns = zerorpc.Server(StreamingRPC())\r\ns.debug = True\r\ns.connect(\"tcp://127.0.0.1:4242\")\r\ns.run()\r\n```\r\nmaster.py\r\n```\r\nimport zerorpc\r\n\r\nimport logging\r\nlogging.basicConfig()\r\n\r\nc = zerorpc.Client()\r\nc.debug = True\r\nc.bind(\"tcp://0.0.0.0:4242\")\r\n\r\nfor item in c.streaming_range(10, 2000, 2):\r\n    print item\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/164", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/164/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/164/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/164", "id": 231781312, "node_id": "MDU6SXNzdWUyMzE3ODEzMTI=", "number": 164, "title": "Server.stop() triggers gevent.hub.BlockingSwitchOutError", "user": {"login": "daemotron", "id": 461745, "node_id": "MDQ6VXNlcjQ2MTc0NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/461745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daemotron", "html_url": "https://github.com/daemotron", "followers_url": "https://api.github.com/users/daemotron/followers", "following_url": "https://api.github.com/users/daemotron/following{/other_user}", "gists_url": "https://api.github.com/users/daemotron/gists{/gist_id}", "starred_url": "https://api.github.com/users/daemotron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daemotron/subscriptions", "organizations_url": "https://api.github.com/users/daemotron/orgs", "repos_url": "https://api.github.com/users/daemotron/repos", "events_url": "https://api.github.com/users/daemotron/events{/privacy}", "received_events_url": "https://api.github.com/users/daemotron/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-27T06:55:43Z", "updated_at": "2017-05-27T11:16:06Z", "closed_at": "2017-05-27T11:16:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "When implementing a backend based on ZeroRPC, I noticed that implementing a signal handler catching SIGINT and then gracefully shutting down the server triggers a BlockingSwitchOutError.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"server.py\", line 19, in handle_sigint\r\n    Server.close()\r\n  File \"virtualenv/test/lib/python3.6/site-packages/zerorpc/core.py\", line 295, in close\r\n    ServerBase.close(self)\r\n  File \"virtualenv/test/lib/python3.6/site-packages/zerorpc/core.py\", line 92, in close\r\n    self.stop()\r\n  File \"virtualenv/test/lib/python3.6/site-packages/zerorpc/core.py\", line 183, in stop\r\n    self._acceptor_task.kill()\r\n  File \"virtualenv/test/lib/python3.6/site-packages/gevent/greenlet.py\", line 441, in kill\r\n    waiter.get()\r\n  File \"virtualenv/test/lib/python3.6/site-packages/gevent/hub.py\", line 899, in get\r\n    return self.hub.switch()\r\n  File \"virtualenv/test/lib/python3.6/site-packages/gevent/hub.py\", line 629, in switch\r\n    switch_out()\r\n  File \"virtualenv/test/lib/python3.6/site-packages/gevent/hub.py\", line 633, in switch_out\r\n    raise BlockingSwitchOutError('Impossible to call blocking function in the event loop callback')\r\ngevent.hub.BlockingSwitchOutError: Impossible to call blocking function in the event loop callback\r\nSat May 27 08:34:46 2017\r\nTraceback (most recent call last):\r\n  File \"server.py\", line 34, in <module>\r\n    main()\r\n  File \"server.py\", line 31, in main\r\n    Server.run()\r\n  File \"virtualenv/test/lib/python3.6/site-packages/zerorpc/core.py\", line 176, in run\r\n    self._acceptor_task.get()\r\n  File \"virtualenv/test/lib/python3.6/site-packages/gevent/greenlet.py\", line 465, in get\r\n    result = self.parent.switch()\r\n  File \"virtualenv/test/lib/python3.6/site-packages/gevent/hub.py\", line 630, in switch\r\n    return RawGreenlet.switch(self)\r\ngevent.hub.BlockingSwitchOutError: Impossible to call blocking function in the event loop callback\r\n```\r\n\r\nMy sample code to reproduce the issue can be found here:\r\nhttps://gist.github.com/daemotron/ec2b58011fa2f008178a1e2c5a331cd5\r\n\r\nI'm not 100% I'm using the ZeroRPC Server() implementation correctly; as it's mostly undocumented I just sticked with what I understood from looking at the code.\r\n\r\nEnvironment:\r\n* Python 3.6.1\r\n* macOS Sierra (10.12.3)\r\n* Python package versions:\r\n  * gevent==1.2.1\r\n  * greenlet==0.4.12\r\n  * zerorpc==0.6.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/161", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/161/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/161/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/161", "id": 214936333, "node_id": "MDU6SXNzdWUyMTQ5MzYzMzM=", "number": 161, "title": "How I can daemonizer zerorpc with python?", "user": {"login": "yxxhero", "id": 11087727, "node_id": "MDQ6VXNlcjExMDg3NzI3", "avatar_url": "https://avatars3.githubusercontent.com/u/11087727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yxxhero", "html_url": "https://github.com/yxxhero", "followers_url": "https://api.github.com/users/yxxhero/followers", "following_url": "https://api.github.com/users/yxxhero/following{/other_user}", "gists_url": "https://api.github.com/users/yxxhero/gists{/gist_id}", "starred_url": "https://api.github.com/users/yxxhero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yxxhero/subscriptions", "organizations_url": "https://api.github.com/users/yxxhero/orgs", "repos_url": "https://api.github.com/users/yxxhero/repos", "events_url": "https://api.github.com/users/yxxhero/events{/privacy}", "received_events_url": "https://api.github.com/users/yxxhero/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-03-17T08:25:17Z", "updated_at": "2018-07-11T04:40:52Z", "closed_at": "2017-03-20T02:41:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "How I can daemonizer zerorpc with python? thanks!!!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/157", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/157/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/157/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/157", "id": 198735799, "node_id": "MDU6SXNzdWUxOTg3MzU3OTk=", "number": 157, "title": "Support keyword arguments", "user": {"login": "petr-motejlek", "id": 369610, "node_id": "MDQ6VXNlcjM2OTYxMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/369610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petr-motejlek", "html_url": "https://github.com/petr-motejlek", "followers_url": "https://api.github.com/users/petr-motejlek/followers", "following_url": "https://api.github.com/users/petr-motejlek/following{/other_user}", "gists_url": "https://api.github.com/users/petr-motejlek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petr-motejlek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petr-motejlek/subscriptions", "organizations_url": "https://api.github.com/users/petr-motejlek/orgs", "repos_url": "https://api.github.com/users/petr-motejlek/repos", "events_url": "https://api.github.com/users/petr-motejlek/events{/privacy}", "received_events_url": "https://api.github.com/users/petr-motejlek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-04T15:35:20Z", "updated_at": "2017-01-18T18:01:23Z", "closed_at": "2017-01-18T18:01:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Seems like passing keyword arguments using zerorpc is not supported. This should either be fixed or at least documented. On either side it's very strange that such a foundation feature of Python has been neglected.\r\n\r\nThis fails on Python 3.5\r\n\r\n# client\r\n    import zerorpc\r\n\r\n    c = zerorpc.Client()\r\n    c.connect(\"tcp://127.0.0.1:4242\")\r\n\r\n    c.test(i=10)\r\n\r\n# server\r\n    import zerorpc\r\n\r\n    class MyRPC:\r\n        def test(self, i):\r\n            return i\r\n\r\n    s = zerorpc.Server(MyRPC())\r\n    s.bind(\"tcp://0.0.0.0:4242\")\r\n    s.run()", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/156", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/156/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/156/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/156", "id": 197454558, "node_id": "MDU6SXNzdWUxOTc0NTQ1NTg=", "number": 156, "title": "Not an issue", "user": {"login": "wavic", "id": 6449106, "node_id": "MDQ6VXNlcjY0NDkxMDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/6449106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wavic", "html_url": "https://github.com/wavic", "followers_url": "https://api.github.com/users/wavic/followers", "following_url": "https://api.github.com/users/wavic/following{/other_user}", "gists_url": "https://api.github.com/users/wavic/gists{/gist_id}", "starred_url": "https://api.github.com/users/wavic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wavic/subscriptions", "organizations_url": "https://api.github.com/users/wavic/orgs", "repos_url": "https://api.github.com/users/wavic/repos", "events_url": "https://api.github.com/users/wavic/events{/privacy}", "received_events_url": "https://api.github.com/users/wavic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 250738, "node_id": "MDU6TGFiZWwyNTA3Mzg=", "url": "https://api.github.com/repos/0rpc/zerorpc-python/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-24T08:33:27Z", "updated_at": "2017-01-18T18:02:35Z", "closed_at": "2017-01-18T18:02:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! \r\nHow to get the sender's IP and port? Where are stored?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/155", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/155/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/155/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/155", "id": 195466567, "node_id": "MDU6SXNzdWUxOTU0NjY1Njc=", "number": 155, "title": "Passing an instantiated object or initializing a class variable through a class method causes error in running server ZeroRPC", "user": {"login": "angelosembrano", "id": 22093912, "node_id": "MDQ6VXNlcjIyMDkzOTEy", "avatar_url": "https://avatars0.githubusercontent.com/u/22093912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/angelosembrano", "html_url": "https://github.com/angelosembrano", "followers_url": "https://api.github.com/users/angelosembrano/followers", "following_url": "https://api.github.com/users/angelosembrano/following{/other_user}", "gists_url": "https://api.github.com/users/angelosembrano/gists{/gist_id}", "starred_url": "https://api.github.com/users/angelosembrano/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/angelosembrano/subscriptions", "organizations_url": "https://api.github.com/users/angelosembrano/orgs", "repos_url": "https://api.github.com/users/angelosembrano/repos", "events_url": "https://api.github.com/users/angelosembrano/events{/privacy}", "received_events_url": "https://api.github.com/users/angelosembrano/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-14T08:15:43Z", "updated_at": "2017-01-18T18:12:59Z", "closed_at": "2017-01-18T18:12:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "So I have this setup for my back-end, Python handling data-mining and communicates with the database (MongoDB through PyMongo), and Node.js/Restify invoking the Python methods through ZeroRPC.\r\n\r\nI have the following classes with functions as follows:\r\n\r\n- `Importer` - imports, transforms, and cleans the data from the csv to json data.\r\n- `Database` - the database object, contains the MongoClient and handles the inserting of the imported data from `Importer`.\r\n- `Analytics` - the object that contains the data mining methods; the one to be passed to the `zerorpc.Server`. Needs to be passed an instance or the `Database` class instead to have access to the database.\r\n\r\nSo here's how my `app.py` looks like.\r\n\r\n    import os\r\n    import zerorpc\r\n    \r\n    from scripts.database import Database\r\n    from scripts.importer import Importer\r\n    from scripts.analytics import Analytics\r\n    \r\n    from utils.timer import time_function\r\n    \r\n    ROOT = os.path.dirname(__file__)\r\n    \r\n    \r\n    if __name__ == \"__main__\":\r\n        importer = Importer()\r\n    \r\n        db = Database(data=importer.data)\r\n    \r\n        services = Analytics(db)\r\n    \r\n        server = zerorpc.Server(services)\r\n        server.bind(\"tcp://0.0.0.0:1234\")\r\n        server.run()\r\n\r\nYet it shows this error:\r\n\r\n    Traceback (most recent call last):\r\n      File \"D:/Projects/Dashboards/app/app.py\", line 28, in <module>\r\n        server = zerorpc.Server(Analytics())\r\n      File \"D:\\Projects\\Dashboards\\env\\lib\\site-packages\\zerorpc\\core.py\", line 292, in __init__\r\n        pool_size, heartbeat)\r\n      File \"D:\\Projects\\Dashboards\\env\\lib\\site-packages\\zerorpc\\core.py\", line 72, in __init__\r\n        self._methods[k] = rep(functor)\r\n      File \"D:\\Projects\\Dashboards\\env\\lib\\site-packages\\zerorpc\\decorators.py\", line 36, in __init__\r\n        self.__name__ = functor.__name__\r\n      File \"D:\\Projects\\Dashboards\\env\\lib\\site-packages\\pymongo\\collection.py\", line 262, in __getattr__\r\n        name, full_name, full_name))\r\n    AttributeError: Collection has no attribute '__name__'. To access the sales.__name__ collection, use database['sales.__name__'].\r\n    \r\n    Process finished with exit code 1\r\n\r\n**So at this point I realized, \"maybe because I passed an instance of the object and not the object itself.\"**\r\n\r\nSo I transformed my `Analytics` into this:\r\n\r\n    from bson.son import SON\r\n    import datetime\r\n    \r\n    class Analytics(object):\r\n        # def __init__(self, database):\r\n        #     self.db = database.db\r\n        #     self.sales = database.tb_sales\r\n    \r\n        @classmethod\r\n        def connect_db(cls, database):\r\n            cls.db = database.db\r\n            cls.sales = database.tb_sales\r\n\r\n        ...other methods here...\r\n\r\nWhere the class method `connect_db` was once the `__init__` of `Analytics`. And thus my `app.py` is changed to:\r\n\r\n    import os\r\n    import zerorpc\r\n    \r\n    from scripts.database import Database\r\n    from scripts.importer import Importer\r\n    from scripts.analytics import Analytics\r\n    \r\n    from utils.timer import time_function\r\n    \r\n    ROOT = os.path.dirname(__file__)\r\n    \r\n    if __name__ == \"__main__\":\r\n        importer = Importer()\r\n    \r\n        db = Database(data=importer.data)\r\n \r\n        Analytics.connect_db(database=db)\r\n    \r\n        server = zerorpc.Server(Analytics())\r\n        server.bind(\"tcp://0.0.0.0:1234\")\r\n        server.run()\r\n\r\n**But still it shows THE SAME ERROR.**\r\n\r\nWhy is that? Any ideas?\r\nSomehow I think it has something to do of `zerorpc`'s nature of getting the `__name__` of functions so that it can be invoked by the client? Just my two cents.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/154", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/154/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/154/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/154", "id": 187654411, "node_id": "MDU6SXNzdWUxODc2NTQ0MTE=", "number": 154, "title": "Serialize error on error", "user": {"login": "magnusbj", "id": 7837926, "node_id": "MDQ6VXNlcjc4Mzc5MjY=", "avatar_url": "https://avatars0.githubusercontent.com/u/7837926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magnusbj", "html_url": "https://github.com/magnusbj", "followers_url": "https://api.github.com/users/magnusbj/followers", "following_url": "https://api.github.com/users/magnusbj/following{/other_user}", "gists_url": "https://api.github.com/users/magnusbj/gists{/gist_id}", "starred_url": "https://api.github.com/users/magnusbj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magnusbj/subscriptions", "organizations_url": "https://api.github.com/users/magnusbj/orgs", "repos_url": "https://api.github.com/users/magnusbj/repos", "events_url": "https://api.github.com/users/magnusbj/events{/privacy}", "received_events_url": "https://api.github.com/users/magnusbj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-07T08:48:57Z", "updated_at": "2017-03-16T07:35:27Z", "closed_at": "2017-03-16T07:35:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, thanks for a great tool\r\nI use zerorpc to communicate between node and python.\r\nIn my python code, I raise errors to return unfinished work to node\r\nWhen python errors occur, I get another error from zerorpc:\r\n```\r\n\r\n 4324ERROR:zerorpc.core:\r\nTraceback (most recent call last):\r\nFile \"/usr/local/lib/python2.7/site-packages/zerorpc/core.py\", line 149, in _async_task\r\nfunctor.pattern.process_call(self._context, bufchan, event, functor)\r\nFile \"/usr/local/lib/python2.7/site-packages/zerorpc/patterns.py\", line 34, in process_call\r\nchannel.emit_event(rep_event)\r\nFile \"/usr/local/lib/python2.7/site-packages/zerorpc/channel.py\", line 235, in emit_event\r\nself._channel.emit_event(event)\r\nFile \"/usr/local/lib/python2.7/site-packages/zerorpc/heartbeat.py\", line 116, in emit_event\r\nself._channel.emit_event(event, timeout)\r\nFile \"/usr/local/lib/python2.7/site-packages/zerorpc/channel.py\", line 155, in emit_event\r\nself._multiplexer.emit_event(event, timeout)\r\nFile \"/usr/local/lib/python2.7/site-packages/zerorpc/channel.py\", line 67, in emit_event\r\nreturn self._events.emit_event(event, timeout)\r\nFile \"/usr/local/lib/python2.7/site-packages/zerorpc/events.py\", line 323, in emit_event\r\nparts.extend(['', event.pack()])\r\nFile \"/usr/local/lib/python2.7/site-packages/zerorpc/events.py\", line 192, in pack\r\nreturn msgpack.Packer().pack((self._header, self._name, self._args))\r\nFile \"msgpack/_packer.pyx\", line 231, in msgpack._packer.Packer.pack (msgpack/_packer.cpp:3661)\r\nFile \"msgpack/_packer.pyx\", line 233, in msgpack._packer.Packer.pack (msgpack/_packer.cpp:3503)\r\nFile \"msgpack/_packer.pyx\", line 221, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:3230)\r\nFile \"msgpack/_packer.pyx\", line 221, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:3230)\r\nFile \"msgpack/_packer.pyx\", line 192, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:2657)\r\nFile \"msgpack/_packer.pyx\", line 228, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:3382)\r\nTypeError: can't serialize AssertionError('My error description)\r\n```\r\n\r\nI run zerorpc from the python app with:\r\n\r\n```\r\ns = zerorpc.Server(Densities())\r\ns.bind(\"tcp://0.0.0.0:5000\")\r\ns.run()\r\nprint 'zerorpc connected'\r\n```\r\nAnd the flow is going through Docker.\r\nFor normal returns everything is good.\r\n\r\nWhat am I doing wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/152", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/152/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/152/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/152", "id": 185687366, "node_id": "MDU6SXNzdWUxODU2ODczNjY=", "number": 152, "title": "how to not block  python + nodejs ?", "user": {"login": "Olmer1st", "id": 14262067, "node_id": "MDQ6VXNlcjE0MjYyMDY3", "avatar_url": "https://avatars2.githubusercontent.com/u/14262067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Olmer1st", "html_url": "https://github.com/Olmer1st", "followers_url": "https://api.github.com/users/Olmer1st/followers", "following_url": "https://api.github.com/users/Olmer1st/following{/other_user}", "gists_url": "https://api.github.com/users/Olmer1st/gists{/gist_id}", "starred_url": "https://api.github.com/users/Olmer1st/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Olmer1st/subscriptions", "organizations_url": "https://api.github.com/users/Olmer1st/orgs", "repos_url": "https://api.github.com/users/Olmer1st/repos", "events_url": "https://api.github.com/users/Olmer1st/events{/privacy}", "received_events_url": "https://api.github.com/users/Olmer1st/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-27T14:38:01Z", "updated_at": "2017-04-14T03:21:02Z", "closed_at": "2017-04-14T03:21:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nWe started to use this library several months ago and when we started to do massive tests we saw that sometime the server blocked for other requests.\nFor example (server in python, client in nodejs):\n**server**\n\n```\n#!/usr/bin/python\nimport signal\nimport sys\nimport zerorpc\nimport wget\nfrom datetime import datetime\n\ndef getDateTimeNowString():\n    string = datetime.now().strftime(\"%Y%m%d%H%M%S%f\")\n    return string\n\n\ndef exit_handler(signal, frame):\n    print \"You are now leaving the Python sector.\"\n    sys.exit(0)\n\n\nclass todo(object):\n    def __init__(self):\n        pass\n\n    def executeCommand(self):\n        print datetime.now()\n        filename = wget.download('some url to xml',\n                                 out=\"{0}_{1}.xml\".format(\"test\", getDateTimeNowString()))\n        return filename\n\nsignal.signal(signal.SIGINT, exit_handler)\n\ntry:\n    server = zerorpc.Server(todo(), heartbeat=360)\n    bindingData = \"{0}:{1}\".format(\"tcp://0.0.0.0\", 1234)\n    server.bind(bindingData)\n    print \"RPC Channels Server bound to {0}\".format(bindingData)\n    server.run()\nexcept Exception as e:\n    print str(e)\n```\n\n**client**\n\n```\nconst times = x => f => {\n    if (x > 0) {\n        f()\n        times(x - 1)(f)\n    }\n};\nconst callbackFunction = function(err, result, start) {\n    const end = new Date() - start;\n    console.log('Download finished, took: ', end + \" ms\", \"\\r\\nresult: \", result);\n}\nconst zerorpc = require('zerorpc');\nconst client = new zerorpc.Client({\n        timeout: 360,\n        heartbeatInterval: 360000\n    });\nconst uri = \"tcp://127.0.0.1:1234\";\nconsole.log(\"Connecting to rpc with URI \", uri);\nclient.connect(uri);\nconst start = new Date();\nconsole.log(\"Started download, please wait\");\ntimes(5)(()=>{\nclient.invoke(\"executeCommand\", function(error, res, more) {\n        callbackFunction(error,res, start);\n});\n});\n```\n\nIf to execute, you will see:\nConnecting to rpc with URI  tcp://127.0.0.1:1234\nStarted download, please wait\nStarted download, please wait\nStarted download, please wait\nStarted download, please wait\nStarted download, please wait\nDownload finished, took:  5054 ms\nresult:  {\"type\":\"Buffer\",\"data\":[116,101,115,116,95,50,48,49,54,49,48,50,55,49,55,51,52,48,49,57,57,50,56,51,53,46,120,109,108]}\nDownload finished, took:  15640 ms\nresult:  {\"type\":\"Buffer\",\"data\":[116,101,115,116,95,50,48,49,54,49,48,50,55,49,55,51,52,48,55,48,52,49,52,55,56,46,120,109,108]}\nDownload finished, took:  15640 ms\nresult:  {\"type\":\"Buffer\",\"data\":[116,101,115,116,95,50,48,49,54,49,48,50,55,49,55,51,52,49,51,48,49,51,50,50,52,46,120,109,108]}\nDownload finished, took:  29956 ms\nresult:  {\"type\":\"Buffer\",\"data\":[116,101,115,116,95,50,48,49,54,49,48,50,55,49,55,51,52,49,55,54,51,48,57,52,55,46,120,109,108]}\nDownload finished, took:  29956 ms\nresult:  {\"type\":\"Buffer\",\"data\":[116,101,115,116,95,50,48,49,54,49,48,50,55,49,55,51,52,50,53,56,49,55,57,48,51,46,120,109,108]}\n\nAs you see each invoke wait until previous done.\nHow to prevent this blocking?\n\nAnd, why instead string (name of file) we see buffer in nodejs?\nIn python you can see:\n2016-10-27 17:34:01.992810\n2016-10-27 17:34:07.041445\n2016-10-27 17:34:13.013206\n2016-10-27 17:34:17.630839\n2016-10-27 17:34:25.817877\nAll requests started not the same time....\nPlease help, we currently stuck with this problems.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/151", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/151/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/151/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/151", "id": 177638902, "node_id": "MDU6SXNzdWUxNzc2Mzg5MDI=", "number": 151, "title": "TypeError: ord() expected string of length 1 on clear windows install", "user": {"login": "y666", "id": 22272083, "node_id": "MDQ6VXNlcjIyMjcyMDgz", "avatar_url": "https://avatars2.githubusercontent.com/u/22272083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/y666", "html_url": "https://github.com/y666", "followers_url": "https://api.github.com/users/y666/followers", "following_url": "https://api.github.com/users/y666/following{/other_user}", "gists_url": "https://api.github.com/users/y666/gists{/gist_id}", "starred_url": "https://api.github.com/users/y666/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/y666/subscriptions", "organizations_url": "https://api.github.com/users/y666/orgs", "repos_url": "https://api.github.com/users/y666/repos", "events_url": "https://api.github.com/users/y666/events{/privacy}", "received_events_url": "https://api.github.com/users/y666/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-09-18T08:35:03Z", "updated_at": "2017-07-27T11:08:19Z", "closed_at": "2017-04-14T03:21:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've reinstalled clean python (2.7.12) and installed zerorpc via pip\nScripts/pip.exe install zerorpc\n\nTrying to run an example gives:\nTraceback (most recent call last):\n  File \"C:\\Python27\\lib\\site-packages\\zerorpc\\channel.py\", line 78, in _channel_dispatcher\n    event = self._events.recv()\n  File \"C:\\Python27\\lib\\site-packages\\zerorpc\\events.py\", line 365, in recv\n    event = Event.unpack(get_pyzmq_frame_buffer(blob))\n  File \"C:\\Python27\\lib\\site-packages\\zerorpc\\events.py\", line 215, in unpack\n    unpacked_msg = unpacker.unpack()\n  File \"C:\\Python27\\lib\\site-packages\\msgpack\\fallback.py\", line 570, in unpack\n    ret = self._fb_unpack(EX_CONSTRUCT, write_bytes)\n  File \"C:\\Python27\\lib\\site-packages\\msgpack\\fallback.py\", line 498, in _fb_unpack\n    typ, n, obj = self._read_header(execute, write_bytes)\n  File \"C:\\Python27\\lib\\site-packages\\msgpack\\fallback.py\", line 347, in _read_header\n    b = ord(c)\nTypeError: ord() expected string of length 1, but memoryview found\n\nI've zerorpc version 0.6.0, msgpack version 0.4.8.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/149", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/149/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/149/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/149", "id": 174422510, "node_id": "MDU6SXNzdWUxNzQ0MjI1MTA=", "number": 149, "title": "zerorpc.exceptions.LostRemote: Lost remote after 10s heartbeat", "user": {"login": "ligangbin117", "id": 10057882, "node_id": "MDQ6VXNlcjEwMDU3ODgy", "avatar_url": "https://avatars3.githubusercontent.com/u/10057882?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ligangbin117", "html_url": "https://github.com/ligangbin117", "followers_url": "https://api.github.com/users/ligangbin117/followers", "following_url": "https://api.github.com/users/ligangbin117/following{/other_user}", "gists_url": "https://api.github.com/users/ligangbin117/gists{/gist_id}", "starred_url": "https://api.github.com/users/ligangbin117/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ligangbin117/subscriptions", "organizations_url": "https://api.github.com/users/ligangbin117/orgs", "repos_url": "https://api.github.com/users/ligangbin117/repos", "events_url": "https://api.github.com/users/ligangbin117/events{/privacy}", "received_events_url": "https://api.github.com/users/ligangbin117/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-01T02:29:45Z", "updated_at": "2017-12-31T14:57:08Z", "closed_at": "2016-09-04T15:46:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n[root@node46 zerorpc]# cat server.py \nimport zerorpc\n\nclass HelloRPC(object):\n    def hello(self, name):\n        return \"Hello, %s\" % name\n\n    def add(self, a, b):\n        return a + b\n\ns = zerorpc.Server(HelloRPC())\ns.bind(\"tcp://0.0.0.0:4242\")\ns.run()\n\n[root@node46 zerorpc]# python server.py \nNo handlers could be found for logger \"zerorpc.channel\"\n^CKeyboardInterrupt\nTraceback (most recent call last):\n  File \"server.py\", line 12, in <module>\n    s.run()\n  File \"/usr/lib/python2.7/site-packages/zerorpc-0.5.2-py2.7.egg/zerorpc/core.py\", line 171, in run\n    self._acceptor_task.get()\n  File \"/usr/lib/python2.7/site-packages/gevent-1.1.2-py2.7-linux-x86_64.egg/gevent/greenlet.py\", line 463, in get\n    result = self.parent.switch()\n  File \"/usr/lib/python2.7/site-packages/gevent-1.1.2-py2.7-linux-x86_64.egg/gevent/hub.py\", line 609, in switch\n    return greenlet.switch(self)\nKeyboardInterrupt\n\n\n[root@node46 zerorpc]# cat client.py \nimport zerorpc\n\nc = zerorpc.Client()\nc.connect(\"tcp://127.0.0.1:4242\")\nprint c.hello(\"RPC\")\nprint c.add(3, 5)\n\n[root@node46 zerorpc]# python client.py \nTraceback (most recent call last):\n  File \"client.py\", line 5, in <module>\n    print c.hello(\"RPC\")\n  File \"/usr/lib/python2.7/site-packages/zerorpc-0.5.2-py2.7.egg/zerorpc/core.py\", line 256, in <lambda>\n    return lambda *args, **kargs: self(method, *args, **kargs)\n  File \"/usr/lib/python2.7/site-packages/zerorpc-0.5.2-py2.7.egg/zerorpc/core.py\", line 248, in __call__\n    return self._process_response(request_event, bufchan, timeout)\n  File \"/usr/lib/python2.7/site-packages/zerorpc-0.5.2-py2.7.egg/zerorpc/core.py\", line 222, in _process_response\n    reply_event = bufchan.recv(timeout=timeout)\n  File \"/usr/lib/python2.7/site-packages/zerorpc-0.5.2-py2.7.egg/zerorpc/channel.py\", line 255, in recv\n    event = self._input_queue.get(timeout=timeout)\n  File \"/usr/lib/python2.7/site-packages/gevent-1.1.2-py2.7-linux-x86_64.egg/gevent/queue.py\", line 284, in get\n    return self.__get_or_peek(self._get, block, timeout)\n  File \"/usr/lib/python2.7/site-packages/gevent-1.1.2-py2.7-linux-x86_64.egg/gevent/queue.py\", line 261, in __get_or_peek\n    result = waiter.get()\n  File \"/usr/lib/python2.7/site-packages/gevent-1.1.2-py2.7-linux-x86_64.egg/gevent/hub.py\", line 878, in get\n    return self.hub.switch()\n  File \"/usr/lib/python2.7/site-packages/gevent-1.1.2-py2.7-linux-x86_64.egg/gevent/hub.py\", line 609, in switch\n    return greenlet.switch(self)\nzerorpc.exceptions.LostRemote: Lost remote after 10s heartbeat\n\n\n\n[root@node46 zerorpc]# lsb_release -a\nLSB Version:    :core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch\nDistributor ID: CentOS\nDescription:    CentOS Linux release 7.2.1511 (Core) \nRelease:    7.2.1511\nCodename:   Core\n\n[root@node46 zerorpc]# rpm -qa | grep zero\nzeromq-4.1.4-5.el7.x86_64\nzeromq-devel-4.1.4-5.el7.x86_64\n[root@node46 zerorpc]# python -c \"import gevent; print gevent.__version__\"\n1.1.2\n\nInstalled /usr/lib/python2.7/site-packages/zerorpc-0.5.2-py2.7.egg\nProcessing dependencies for zerorpc==0.5.2\nSearching for pyzmq==15.4.0\nBest match: pyzmq 15.4.0\nProcessing pyzmq-15.4.0-py2.7-linux-x86_64.egg\npyzmq 15.4.0 is already the active version in easy-install.pth\n\nUsing /usr/lib/python2.7/site-packages/pyzmq-15.4.0-py2.7-linux-x86_64.egg\nSearching for msgpack-python==0.4.8\nBest match: msgpack-python 0.4.8\nProcessing msgpack_python-0.4.8-py2.7-linux-x86_64.egg\nmsgpack-python 0.4.8 is already the active version in easy-install.pth\n\nUsing /usr/lib/python2.7/site-packages/msgpack_python-0.4.8-py2.7-linux-x86_64.egg\nSearching for gevent==1.1.2\nBest match: gevent 1.1.2\nProcessing gevent-1.1.2-py2.7-linux-x86_64.egg\ngevent 1.1.2 is already the active version in easy-install.pth\n\nUsing /usr/lib/python2.7/site-packages/gevent-1.1.2-py2.7-linux-x86_64.egg\nSearching for greenlet==0.4.10\nBest match: greenlet 0.4.10\nProcessing greenlet-0.4.10-py2.7-linux-x86_64.egg\ngreenlet 0.4.10 is already the active version in easy-install.pth\n\nUsing /usr/lib/python2.7/site-packages/greenlet-0.4.10-py2.7-linux-x86_64.egg\n\n```\n\ncould you help me fix this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/147", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/147/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/147/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/147", "id": 173284806, "node_id": "MDU6SXNzdWUxNzMyODQ4MDY=", "number": 147, "title": "Add multiple classes to same server", "user": {"login": "mrlarssen", "id": 5980467, "node_id": "MDQ6VXNlcjU5ODA0Njc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5980467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrlarssen", "html_url": "https://github.com/mrlarssen", "followers_url": "https://api.github.com/users/mrlarssen/followers", "following_url": "https://api.github.com/users/mrlarssen/following{/other_user}", "gists_url": "https://api.github.com/users/mrlarssen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrlarssen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrlarssen/subscriptions", "organizations_url": "https://api.github.com/users/mrlarssen/orgs", "repos_url": "https://api.github.com/users/mrlarssen/repos", "events_url": "https://api.github.com/users/mrlarssen/events{/privacy}", "received_events_url": "https://api.github.com/users/mrlarssen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-25T19:08:36Z", "updated_at": "2016-08-25T20:16:34Z", "closed_at": "2016-08-25T20:16:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to add multiple classes to the same server? Or how is communication with python server done when a project contains multiple classes?\n\nIs this a possible solution?\n\ns1 = zerorpc.Server(Class1())\ns1.bind(\"tcp://0.0.0.0:4242\")\ns1.run()\n\ns2 = zerorpc.Server(Class2())\ns2.bind(\"tcp://0.0.0.0:4242\")\ns2.run()\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/145", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/145/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/145/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/145", "id": 158540679, "node_id": "MDU6SXNzdWUxNTg1NDA2Nzk=", "number": 145, "title": "Allow handing events without blocking", "user": {"login": "hmeine", "id": 462802, "node_id": "MDQ6VXNlcjQ2MjgwMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/462802?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hmeine", "html_url": "https://github.com/hmeine", "followers_url": "https://api.github.com/users/hmeine/followers", "following_url": "https://api.github.com/users/hmeine/following{/other_user}", "gists_url": "https://api.github.com/users/hmeine/gists{/gist_id}", "starred_url": "https://api.github.com/users/hmeine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hmeine/subscriptions", "organizations_url": "https://api.github.com/users/hmeine/orgs", "repos_url": "https://api.github.com/users/hmeine/repos", "events_url": "https://api.github.com/users/hmeine/events{/privacy}", "received_events_url": "https://api.github.com/users/hmeine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-06-05T06:40:51Z", "updated_at": "2016-09-04T15:44:12Z", "closed_at": "2016-09-04T15:44:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to use zerorpc instead of my own, hand-made (and inferior) 0MQ-based RPC system.\n\nHowever, I need a (non-blocking) `handle_events()`-like API instead of just the `run()` method, which I can use in a polling-like fashion within a different main loop.\n\nI had a look at how `run()` is implemented, but I know nothing about gevents yet, so it is not easy to achieve my goal myself.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/142", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/142/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/142/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/142", "id": 154098392, "node_id": "MDU6SXNzdWUxNTQwOTgzOTI=", "number": 142, "title": "Cross-programming language doesn't quite work", "user": {"login": "mikroskeem", "id": 3490861, "node_id": "MDQ6VXNlcjM0OTA4NjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3490861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikroskeem", "html_url": "https://github.com/mikroskeem", "followers_url": "https://api.github.com/users/mikroskeem/followers", "following_url": "https://api.github.com/users/mikroskeem/following{/other_user}", "gists_url": "https://api.github.com/users/mikroskeem/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikroskeem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikroskeem/subscriptions", "organizations_url": "https://api.github.com/users/mikroskeem/orgs", "repos_url": "https://api.github.com/users/mikroskeem/repos", "events_url": "https://api.github.com/users/mikroskeem/events{/privacy}", "received_events_url": "https://api.github.com/users/mikroskeem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2016-05-10T20:24:58Z", "updated_at": "2016-09-04T15:38:55Z", "closed_at": "2016-09-04T15:38:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've got backend written in Python (3.4) and frontend written in Node.js.\nBut I've got problem with my python backend since it starts immediately throwing errors when Node.js client connects:\n\n```\n>>> Try now: 'zerorpc --client --connect tcp://127.0.0.1:9998 get_all_cont_ips'\nTraceback (most recent call last):\n  File \"/home/mark/tmp/scratch-1462829713/virtualenv/lib/python3.5/site-packages/gevent/greenlet.py\", line 534, in run\n    result = self._run(*self.args, **self.kwargs)\n  File \"/home/mark/tmp/scratch-1462829713/virtualenv/lib/python3.5/site-packages/zerorpc/core.py\", line 142, in _async_task\n    channel = self._multiplexer.channel(initial_event)\n  File \"/home/mark/tmp/scratch-1462829713/virtualenv/lib/python3.5/site-packages/zerorpc/channel.py\", line 103, in channel\n    return Channel(self, from_event)\n  File \"/home/mark/tmp/scratch-1462829713/virtualenv/lib/python3.5/site-packages/zerorpc/channel.py\", line 122, in __init__\n    self._channel_id = from_event.header[b'message_id']\nKeyError: b'message_id'\n<Greenlet at 0x7f12b0894c28: <bound method ServerBase._async_task of <zerorpc.core.Server object at 0x7f12af1266a0>>(<zerorpc.events.Event object at 0x7f12acb9b750>)> failed with KeyError\n```\n\nAnd Node.js client throws error after 10 seconds:\n\n```\n{ HeartbeatError: Lost remote after 10000ms\n    at Error (native)\n    at Object.createErrorResponse (/home/mark/tmp/scratch-1462829713/RedPowder/server-management/node_modules/zerorpc/lib/util.js:53:10)\n    at ClientChannel.<anonymous> (/home/mark/tmp/scratch-1462829713/RedPowder/server-management/node_modules/zerorpc/lib/client.js:147:26)\n    at emitOne (events.js:96:13)\n    at ClientChannel.emit (events.js:188:7)\n    at Timeout._repeat (/home/mark/tmp/scratch-1462829713/RedPowder/server-management/node_modules/zerorpc/lib/channel.js:198:18)\n    at Timeout.wrapper [as _onTimeout] (timers.js:417:11)\n    at tryOnTimeout (timers.js:224:11)\n    at Timer.listOnTimeout (timers.js:198:5) name: 'HeartbeatError' } undefined false\n```\n\nIs this because Node.js and Python zerorpc API got out-of-sync or they weren't meant to work together at all? Or just Python3.4 version of ZeroRPC is incompatible?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/141", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/141/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/141/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/141", "id": 153601834, "node_id": "MDU6SXNzdWUxNTM2MDE4MzQ=", "number": 141, "title": "Unable to import 'gevent_zmq'", "user": {"login": "mikroskeem", "id": 3490861, "node_id": "MDQ6VXNlcjM0OTA4NjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3490861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikroskeem", "html_url": "https://github.com/mikroskeem", "followers_url": "https://api.github.com/users/mikroskeem/followers", "following_url": "https://api.github.com/users/mikroskeem/following{/other_user}", "gists_url": "https://api.github.com/users/mikroskeem/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikroskeem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikroskeem/subscriptions", "organizations_url": "https://api.github.com/users/mikroskeem/orgs", "repos_url": "https://api.github.com/users/mikroskeem/repos", "events_url": "https://api.github.com/users/mikroskeem/events{/privacy}", "received_events_url": "https://api.github.com/users/mikroskeem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-07T16:00:32Z", "updated_at": "2016-05-08T00:23:28Z", "closed_at": "2016-05-08T00:23:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nPython 3.5.1 (default, Mar  3 2016, 09:29:07) \n[GCC 5.3.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import zerorpc\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/lib/python3.5/site-packages/zerorpc/__init__.py\", line 29, in <module>\n    from .context import *\n  File \"/usr/lib/python3.5/site-packages/zerorpc/context.py\", line 29, in <module>\n    import gevent_zmq as zmq\nImportError: No module named 'gevent_zmq'\n```\n\nArch Linux, zerorpc was installed with `pip install zerorpc`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/138", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/138/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/138/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/138", "id": 136115483, "node_id": "MDU6SXNzdWUxMzYxMTU0ODM=", "number": 138, "title": "TypeError in zerorpc.events.Events __del__", "user": {"login": "pigmej", "id": 496754, "node_id": "MDQ6VXNlcjQ5Njc1NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/496754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pigmej", "html_url": "https://github.com/pigmej", "followers_url": "https://api.github.com/users/pigmej/followers", "following_url": "https://api.github.com/users/pigmej/following{/other_user}", "gists_url": "https://api.github.com/users/pigmej/gists{/gist_id}", "starred_url": "https://api.github.com/users/pigmej/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pigmej/subscriptions", "organizations_url": "https://api.github.com/users/pigmej/orgs", "repos_url": "https://api.github.com/users/pigmej/repos", "events_url": "https://api.github.com/users/pigmej/events{/privacy}", "received_events_url": "https://api.github.com/users/pigmej/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-02-24T16:39:15Z", "updated_at": "2016-03-21T02:37:48Z", "closed_at": "2016-03-21T02:37:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On interpreter shutdown you may hit\n```Exception TypeError: TypeError(\"'NoneType' object is not callable\",) in <bound method Events.__del__ of <zerorpc.events.Events object at 0x7f1108e1fe50>> ignored\n\n```\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/137", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/137/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/137/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/137", "id": 136055852, "node_id": "MDU6SXNzdWUxMzYwNTU4NTI=", "number": 137, "title": "Zerorpc errors/hangs when used in gevent environment AND pyzmq > 13.0.2", "user": {"login": "pigmej", "id": 496754, "node_id": "MDQ6VXNlcjQ5Njc1NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/496754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pigmej", "html_url": "https://github.com/pigmej", "followers_url": "https://api.github.com/users/pigmej/followers", "following_url": "https://api.github.com/users/pigmej/following{/other_user}", "gists_url": "https://api.github.com/users/pigmej/gists{/gist_id}", "starred_url": "https://api.github.com/users/pigmej/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pigmej/subscriptions", "organizations_url": "https://api.github.com/users/pigmej/orgs", "repos_url": "https://api.github.com/users/pigmej/repos", "events_url": "https://api.github.com/users/pigmej/events{/privacy}", "received_events_url": "https://api.github.com/users/pigmej/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-24T13:01:46Z", "updated_at": "2016-09-04T15:44:55Z", "closed_at": "2016-09-04T15:44:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Install recent gevent and recent pyzmq (15.x let's say).\n\n```\nfrom gevent import monkey\nmonkey.patch_all()\n\n\nimport zmq.green as zmq\nimport zerorpc\n\nclass Blah(object):\n\n    def blah(self):\n        return \"foo bar\"\n\n\ns = zerorpc.Server(Blah())\ns.bind(\"tcp://0.0.0.0:1234\")\ns.run()\n```\n\nRun this file, then `zerorpc --client --connect tcp://localhost:1234 blah` and it will hang \"forever\", but when you stop server, you will receive the message.\n\nAlso when you try to stop the server then you will see errors like that:\n\n```\n^CException in thread Thread-1:\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/threading.py\", line 810, in __bootstrap_inner\n    self.run()\n  File \"/usr/local/lib/python2.7/dist-packages/zmq/utils/garbage.py\", line 47, in run\n    msg = s.recv()\n  File \"zmq/backend/cython/socket.pyx\", line 674, in zmq.backend.cython.socket.Socket.recv (zmq/backend/cython/socket.c:6971)\n  File \"zmq/backend/cython/socket.pyx\", line 708, in zmq.backend.cython.socket.Socket.recv (zmq/backend/cython/socket.c:6763)\n  File \"zmq/backend/cython/socket.pyx\", line 145, in zmq.backend.cython.socket._recv_copy (zmq/backend/cython/socket.c:1931)\n  File \"zmq/backend/cython/checkrc.pxd\", line 12, in zmq.backend.cython.checkrc._check_rc (zmq/backend/cython/socket.c:7222)\n    PyErr_CheckSignals()\nKeyboardInterrupt\n\n^CException in thread Thread-3:\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/threading.py\", line 810, in __bootstrap_inner\n    self.run()\n  File \"/usr/local/lib/python2.7/dist-packages/zmq/utils/garbage.py\", line 47, in run\n    msg = s.recv()\n  File \"zmq/backend/cython/socket.pyx\", line 674, in zmq.backend.cython.socket.Socket.recv (zmq/backend/cython/socket.c:6971)\n  File \"zmq/backend/cython/socket.pyx\", line 708, in zmq.backend.cython.socket.Socket.recv (zmq/backend/cython/socket.c:6763)\n  File \"zmq/backend/cython/socket.pyx\", line 145, in zmq.backend.cython.socket._recv_copy (zmq/backend/cython/socket.c:1931)\n  File \"zmq/backend/cython/checkrc.pxd\", line 12, in zmq.backend.cython.checkrc._check_rc (zmq/backend/cython/socket.c:7222)\n    PyErr_CheckSignals()\nKeyboardInterrupt\n\n^CKeyboardInterrupt\nTraceback (most recent call last):\n  File \"cooler.py\", line 13, in <module>\n    s.run()\n  File \"/usr/local/lib/python2.7/dist-packages/zerorpc/core.py\", line 172, in run\n    self._acceptor_task.get()\n  File \"/usr/local/lib/python2.7/dist-packages/gevent/greenlet.py\", line 451, in get\n    result = self.parent.switch()\n  File \"/usr/local/lib/python2.7/dist-packages/gevent/hub.py\", line 602, in switch\n    return greenlet.switch(self)\nKeyboardInterrupt\n```\n\nWhen you comment out first 2 lines (which is gevent monkey patch) everything will work fine.\n\nThe failure is obviously related to some issue in gevent_zmq code (bundled with zerorpc-python).\n\nThe \"solution\" is rather simple. Just add \n\n```\nimport zmq.green as zmq\nimport sys\nsys.modules['zmq'] = zmq\n```\n\nafter monkey patch into test file and zerorpc will work again. So the final working file looks like:\n\n```\nfrom gevent import monkey\nmonkey.patch_all()\n\nimport zmq.green as zmq\nimport sys\nsys.modules['zmq'] = zmq\n\n\nimport zerorpc\n\n\nclass Blah(object):\n\n    def blah(self):\n        return \"foo bar\"\n\ns = zerorpc.Server(Blah())\ns.bind(\"tcp://0.0.0.0:1234\")\ns.run()\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/136", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/136/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/136/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/136", "id": 131805294, "node_id": "MDU6SXNzdWUxMzE4MDUyOTQ=", "number": 136, "title": "Server response periodically blocks?", "user": {"login": "lordnynex", "id": 1108594, "node_id": "MDQ6VXNlcjExMDg1OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1108594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lordnynex", "html_url": "https://github.com/lordnynex", "followers_url": "https://api.github.com/users/lordnynex/followers", "following_url": "https://api.github.com/users/lordnynex/following{/other_user}", "gists_url": "https://api.github.com/users/lordnynex/gists{/gist_id}", "starred_url": "https://api.github.com/users/lordnynex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lordnynex/subscriptions", "organizations_url": "https://api.github.com/users/lordnynex/orgs", "repos_url": "https://api.github.com/users/lordnynex/repos", "events_url": "https://api.github.com/users/lordnynex/events{/privacy}", "received_events_url": "https://api.github.com/users/lordnynex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2016-02-06T01:41:30Z", "updated_at": "2016-02-08T21:29:10Z", "closed_at": "2016-02-08T04:17:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI will provide a reproduction example, but first, I am aware that what I'm doing isn't normal. I believe technically, this should be able to work. \n\nIt seems that sending return values is periodically blocking indefinitely. I'm not sure why this is occuring. \n\nIf you run the below example and run \n\n``` bash\nfor i in {1..100} ; do zerorpc --timeout 1 tcp://localhost:5559 lolita ; done\n```\n\nYou'll notice that ever 5th or so request results in a timeout. But from the debug output in the server, you can see that the rpc method is executed and only appears to block while sending the response to the broker. \n\nIs there a better way to do this?\n\n``` python\n# main.py \n# A lot of debugging junk in here\nimport gevent\nfrom gevent import monkey\n\nmonkey.patch_all()\n\nimport gipc\n\nfrom zmq import green as zmq\n\nimport zerorpc\nimport logging\nimport multiprocessing as mp\n\nfrom zerorpc.socket import SocketBase\nfrom zerorpc.core import ServerBase\nfrom .util import zhelpers as zhelpers\n\nclass SrvBase(ServerBase, SocketBase):\n    def __init__(self, methods=None, name=None, context=None, pool_size=1000, heartbeat=5):\n        SocketBase.__init__(self, zmq.XREP, context)\n        if methods is None:\n            methods = self\n\n        name = name or ServerBase._extract_name(methods)\n        methods = ServerBase._filter_methods(SrvBase, self, methods)\n        ServerBase.__init__(self, self._events, methods, name, context, pool_size, heartbeat)\n\n        # print \"DEBUG TEST\"\n        # print self.__dict__\n\n    def close(self):\n        ServerBase.close(self)\n        SocketBase.close(self)\n\nclass RPCWorker(SrvBase):\n    def lolita(self):\n        return 42\n\n    def add(self, a, b):\n        return a + b\n\ndef initializer(url=\"tcp://127.0.0.1:5560\"):\n    def do_work():\n        class MySrv(SrvBase):\n            def lolita(self):\n                print \"ME\"\n                return 42\n\n            def add(self, a, b):\n                return a + b\n\n        srv = MySrv()\n        print \"BREAK\"\n        srv.connect(url)\n        print \"BREAK1\"\n        gevent.spawn(srv.run)\n        print \"BREAK2\"\n        while True:\n            gevent.sleep(0.50)\n\n    monkey.patch_all()\n\n    THREADPOOL = gevent.get_hub().threadpool\n    threads = []\n    for i in range(5):\n        t = THREADPOOL.spawn(do_work)\n        threads.append( t )\n\n    print threads\n\n    while True:\n        # print \"TICK\"\n        gevent.sleep(0.50)\n\nclass DataPool:\n    def __init__(self):\n        self.ctx = zmq.Context.instance()\n        try:\n            # Socket facing clients\n            self.frontend = self.ctx.socket(zmq.XREP)\n            self.frontend.bind(\"tcp://127.0.0.1:5559\")\n\n            # Socket facing services\n            self.backend = self.ctx.socket(zmq.XREQ)\n            self.backend.bind(\"tcp://127.0.0.1:5560\")\n\n            # Socket poller\n            self.poller = zmq.Poller()\n            self.poller.register(self.frontend, zmq.POLLIN)\n            self.poller.register(self.backend, zmq.POLLIN)\n\n            # Start pool\n            # self.pool = mp.Pool(processes=4, initializer=initializer)\n            procs = []\n            for i in xrange(10):\n                p = gipc.start_process(initializer)\n                procs.append(p)\n            # p = mp.Process(target=initializer)\n            # p.start()\n        except Exception, e:\n            raise\n\n    def run(self, *args, **kwargs):\n        gevent.spawn(self.run_loop)\n\n    def run_loop(self):\n        try:\n            while True:\n                # print \"TICK\"\n                socks = dict(self.poller.poll(100))\n\n                gevent.sleep(0)\n                if socks.get(self.frontend) == zmq.POLLIN:\n                    message = self.frontend.recv(zmq.NOBLOCK)\n                    more = self.frontend.getsockopt(zmq.RCVMORE)\n                    if more:\n                        print \"Rtr<<\",\n                        gevent.spawn(zhelpers.dump_part, message)\n                        self.backend.send(message, zmq.SNDMORE)\n                        print \"SENDMORE\"\n                        gevent.sleep(0)\n                    else:\n                        print \"Rtr<.\",\n                        gevent.spawn(zhelpers.dump_part, message)\n                        self.backend.send(message, zmq.NOBLOCK)\n\n                gevent.sleep(0)\n                if socks.get(self.backend) == zmq.POLLIN:\n                    message = self.backend.recv(zmq.NOBLOCK)\n                    more = self.backend.getsockopt(zmq.RCVMORE)\n                    if more:\n                        print \"Rtr>>\",\n                        gevent.spawn(zhelpers.dump_part, message)\n                        self.frontend.send(message, zmq.SNDMORE)\n                        print \"RECEIVEMORE\"\n                        gevent.sleep(0)\n                    else:\n                        print \"Rtr>.\",\n                        gevent.spawn(zhelpers.dump_part, message)\n                        self.frontend.send(message, zmq.NOBLOCK)\n                gevent.sleep(0)\n        except Exception, e:\n            print e\n            print \"bringing down zmq device\"\n        finally:\n            pass\n            self.frontend.close()\n            self.backend.close()\n            self.ctx.term()\n```\n\n``` python\n# util.zhelpers\nfrom random import randint\n\nimport zmq\nimport msgpack\n\n\n# Receives all message parts from socket, prints neatly\ndef dump(zsocket):\n    print \"----------------------------------------\"\n    for part in zsocket.recv_multipart():\n        dump_part(part)\n\ndef dump_part(part):\n    # print part\n    try:\n        # dec_part = format_part( part )\n        # dec_part = msgpack.unpackb(part)\n        unpacker = msgpack.Unpacker(encoding='utf-8')\n        unpacker.feed(part)\n        dec_part = unpacker.unpack()\n    except Exception, e:\n        print \"Can't unpack %s\" % e\n        dec_part = format_part( part )\n    finally:\n        print \"[%03d]\" % len(part), dec_part\n    # print \"[%03d]\" % len(part), format_part( part )\n\ndef format_part(part):\n    if all(31 < ord(c) < 128 for c in part):\n        return \"'\" + part + \"'\"\n    else:\n        return \"0x\" + \"\".join(\"%x\" % ord(c) for c in part)\n\n# Set simple random printable identity on socket\ndef set_id(zsocket):\n    identity = \"%04x-%04x\" % (randint(0, 0x10000), randint(0, 0x10000))\n    zsocket.setsockopt(zmq.IDENTITY, identity)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/134", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/134/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/134/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/134", "id": 119854527, "node_id": "MDU6SXNzdWUxMTk4NTQ1Mjc=", "number": 134, "title": "Work with msgpack fallback.", "user": {"login": "bombela", "id": 216204, "node_id": "MDQ6VXNlcjIxNjIwNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/216204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bombela", "html_url": "https://github.com/bombela", "followers_url": "https://api.github.com/users/bombela/followers", "following_url": "https://api.github.com/users/bombela/following{/other_user}", "gists_url": "https://api.github.com/users/bombela/gists{/gist_id}", "starred_url": "https://api.github.com/users/bombela/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bombela/subscriptions", "organizations_url": "https://api.github.com/users/bombela/orgs", "repos_url": "https://api.github.com/users/bombela/repos", "events_url": "https://api.github.com/users/bombela/events{/privacy}", "received_events_url": "https://api.github.com/users/bombela/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-02T02:42:49Z", "updated_at": "2016-03-21T04:08:34Z", "closed_at": "2016-03-21T04:08:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Its better to work with the msgpack pure python fallback than not at all. Example of why it sucks when it doesn't work: #133.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/133", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/133/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/133/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/133", "id": 119458213, "node_id": "MDU6SXNzdWUxMTk0NTgyMTM=", "number": 133, "title": "zerorpc not working on CentOs7", "user": {"login": "Olmer1st", "id": 14262067, "node_id": "MDQ6VXNlcjE0MjYyMDY3", "avatar_url": "https://avatars2.githubusercontent.com/u/14262067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Olmer1st", "html_url": "https://github.com/Olmer1st", "followers_url": "https://api.github.com/users/Olmer1st/followers", "following_url": "https://api.github.com/users/Olmer1st/following{/other_user}", "gists_url": "https://api.github.com/users/Olmer1st/gists{/gist_id}", "starred_url": "https://api.github.com/users/Olmer1st/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Olmer1st/subscriptions", "organizations_url": "https://api.github.com/users/Olmer1st/orgs", "repos_url": "https://api.github.com/users/Olmer1st/repos", "events_url": "https://api.github.com/users/Olmer1st/events{/privacy}", "received_events_url": "https://api.github.com/users/Olmer1st/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2015-11-30T10:01:07Z", "updated_at": "2015-12-02T09:18:06Z", "closed_at": "2015-12-01T12:50:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nI'm new user and try to use zerorpc on CentOS7.\nOn Ubuntu same code work great.\n\npython2.7 -V: Python 2.7.9\nMetadata-Version: 2.0\nName: zerorpc\nVersion: 0.5.2\nSummary: zerorpc is a flexible RPC based on zeromq.\nHome-page: https://github.com/0rpc/zerorpc-python\nAuthor: Fran\u00e7ois-Xavier Bourlet <bombela+zerorpc@gmail.com>.\nAuthor-email: UNKNOWN\nLicense: MIT\nLocation: /usr/local/lib/python2.7/site-packages\n\nMetadata-Version: 2.0\nName: gevent\nVersion: 1.0.2\nSummary: Coroutine-based network library\nHome-page: http://www.gevent.org/\nAuthor: Denis Bilenko\nAuthor-email: denis.bilenko@gmail.com\nLicense: UNKNOWN\nLocation: /usr/local/lib/python2.7/site-packages\n\nMetadata-Version: 2.0\nName: pyzmq\nVersion: 15.1.0\nSummary: Python bindings for 0MQ\nHome-page: https://pyzmq.readthedocs.org\nAuthor: Brian E. Granger, Min Ragan-Kelley\nAuthor-email: zeromq-dev@lists.zeromq.org\nLicense: LGPL+BSD\nLocation: /usr/local/lib/python2.7/site-packages\n\nMetadata-Version: 2.0\nName: msgpack-python\nVersion: 0.4.6\nSummary: MessagePack (de)serializer.\nHome-page: http://msgpack.org/\nAuthor: INADA Naoki\nAuthor-email: songofacandy@gmail.com\nLicense: UNKNOWN\nLocation: /usr/local/lib/python2.7/site-packages\n\nCode Server: \nclass channelRPCServer(object):\n     def test(self, name):\n         return \"Test done. Received text, %s\" % name\n\nserver = zerorpc.Server(channelRPCServer())\nserver.bind(\"tcp://0.0.0.0:4242\")\nprint \"RPC Server binded\" \nserver.run()\n\nClient cli: zerorpc tcp://127.0.0.1:4242 test RPC\n\nPlease help.\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/131", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/131/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/131/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/131", "id": 118575456, "node_id": "MDU6SXNzdWUxMTg1NzU0NTY=", "number": 131, "title": "How does server send messages to client?", "user": {"login": "quantwizard", "id": 9456493, "node_id": "MDQ6VXNlcjk0NTY0OTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/9456493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quantwizard", "html_url": "https://github.com/quantwizard", "followers_url": "https://api.github.com/users/quantwizard/followers", "following_url": "https://api.github.com/users/quantwizard/following{/other_user}", "gists_url": "https://api.github.com/users/quantwizard/gists{/gist_id}", "starred_url": "https://api.github.com/users/quantwizard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quantwizard/subscriptions", "organizations_url": "https://api.github.com/users/quantwizard/orgs", "repos_url": "https://api.github.com/users/quantwizard/repos", "events_url": "https://api.github.com/users/quantwizard/events{/privacy}", "received_events_url": "https://api.github.com/users/quantwizard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-24T10:21:27Z", "updated_at": "2016-03-21T04:07:02Z", "closed_at": "2016-03-21T04:07:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "now, I know client can send message to server by calling server's method, but how does server send message to client actively or call method of client?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/128", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/128/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/128/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/128", "id": 109784085, "node_id": "MDU6SXNzdWUxMDk3ODQwODU=", "number": 128, "title": "Client Fails with LostRemote in 0.5.2", "user": {"login": "JohnLunzer", "id": 8135795, "node_id": "MDQ6VXNlcjgxMzU3OTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8135795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnLunzer", "html_url": "https://github.com/JohnLunzer", "followers_url": "https://api.github.com/users/JohnLunzer/followers", "following_url": "https://api.github.com/users/JohnLunzer/following{/other_user}", "gists_url": "https://api.github.com/users/JohnLunzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnLunzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnLunzer/subscriptions", "organizations_url": "https://api.github.com/users/JohnLunzer/orgs", "repos_url": "https://api.github.com/users/JohnLunzer/repos", "events_url": "https://api.github.com/users/JohnLunzer/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnLunzer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-10-05T12:17:48Z", "updated_at": "2016-03-21T04:06:49Z", "closed_at": "2016-03-21T04:06:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just as the title states and the tracebacks support. After attempting to connect to the server via zClient.registerClient() I'm timing out. Additionally my server will not take any new clients after the time out. \n\nThis same issue does not occur in 0.4.4, from which I upgraded. I did a fresh install of Anaconda as well. Zerorpc was installed with pip install --no-deps so gevent/greenlet/pyzmq weren't installed over Anaconda's installations. Downgrading to 0.4.4 from 0.5.2 made the problem disappear.\n\nAny help would be appreciated. All necessary details below.\n\nLibrary Versions:\n\n```\nanaconda                  2.3.0                np19py27_0\ngevent                    1.0.1                    py27_0\ngreenlet                  0.4.9                    py27_0\npython                    2.7.10                        1\npyzmq                     14.7.0                   py27_0\nzeromq                    4.0.5                         0  \nzerorpc                   0.5.2                     <pip>\n```\n\nClient Side Traceback:\n\n```\n07:29:53:root:DEBUG:connected to tcp://10.36.162.1:4243 (status=None)\n07:29:53:Client:INFO:G Client started C0\n07:29:53:Client:INFO:Kicking off _runClient loop\n07:29:53:root:DEBUG:--> new channel dd61696d-e828-47a1-94cc-6533914253d9\n07:30:08:Client:CRITICAL:Unable to communicate with server, exiting...\nTraceback (most recent call last):\n  File \"/anaconda/lib/python2.7/site-packages/gevent/greenlet.py\", line 327, in run\n    result = self._run(*self.args, **self.kwargs)\n  File \"/tortoise/Software/Tools/stopGap/gClient.py\", line 71, in startClientService\n    self._runClient()\n  File \"/tortoise/Software/Tools/stopGap/gClient.py\", line 82, in _runClient\n    self.zClient.registerClient(self.name)\n  File \"/anaconda/lib/python2.7/site-packages/zerorpc/core.py\", line 257, in <lambda>\n    return lambda *args, **kargs: self(method, *args, **kargs)\n  File \"/anaconda/lib/python2.7/site-packages/zerorpc/core.py\", line 249, in __call__\n    return self._process_response(request_event, bufchan, timeout)\n  File \"/anaconda/lib/python2.7/site-packages/zerorpc/core.py\", line 223, in _process_response\n    reply_event = bufchan.recv(timeout=timeout)\n  File \"/anaconda/lib/python2.7/site-packages/zerorpc/channel.py\", line 253, in recv\n    event = self._input_queue.get(timeout=timeout)\n  File \"/anaconda/lib/python2.7/site-packages/gevent/queue.py\", line 200, in get\n    result = waiter.get()\n  File \"/anaconda/lib/python2.7/site-packages/gevent/hub.py\", line 568, in get\n    return self.hub.switch()\n  File \"/anaconda/lib/python2.7/site-packages/gevent/hub.py\", line 331, in switch\n    return greenlet.switch(self)\nLostRemote: Lost remote after 10s heartbeat\n<Greenlet at 0x7f102d548870: <bound method GClient.startClientService of <gClient.Client object at 0x7f102dbc57d0>>> failed with LostRemote\n```\n\nServer Side Traceback when attempting a KeyboardInterrupt:\n\n```\n07:29:50:gServer:INFO:G Server started\n07:29:50:root:DEBUG:bound to tcp://10.36.162.1:4243 (status=None)\n07:29:53:root:DEBUG:<-- new channel dd61696d-e828-47a1-94cc-6533914253d9\n07:29:53:clientManager:DEBUG:New client registered C0\n^CException in thread Thread-2:\nTraceback (most recent call last):\n  File \"/anaconda/lib/python2.7/threading.py\", line 810, in __bootstrap_inner\n    self.run()\n  File \"/anaconda/lib/python2.7/site-packages/zmq/utils/garbage.py\", line 47, in run\n    msg = s.recv()\n  File \"zmq/backend/cython/socket.pyx\", line 676, in zmq.backend.cython.socket.Socket.recv (zmq/backend/cython/socket.c:6507)\n  File \"zmq/backend/cython/socket.pyx\", line 710, in zmq.backend.cython.socket.Socket.recv (zmq/backend/cython/socket.c:6307)\n  File \"zmq/backend/cython/socket.pyx\", line 147, in zmq.backend.cython.socket._recv_copy (zmq/backend/cython/socket.c:1877)\n  File \"zmq/backend/cython/checkrc.pxd\", line 12, in zmq.backend.cython.checkrc._check_rc (zmq/backend/cython/socket.c:6758)\n    PyErr_CheckSignals()\nKeyboardInterrupt\n\n^CException in thread Thread-4:\nTraceback (most recent call last):\n  File \"/anaconda/lib/python2.7/threading.py\", line 810, in __bootstrap_inner\n    self.run()\n  File \"/anaconda/lib/python2.7/site-packages/zmq/utils/garbage.py\", line 47, in run\n    msg = s.recv()\n  File \"zmq/backend/cython/socket.pyx\", line 676, in zmq.backend.cython.socket.Socket.recv (zmq/backend/cython/socket.c:6507)\n  File \"zmq/backend/cython/socket.pyx\", line 710, in zmq.backend.cython.socket.Socket.recv (zmq/backend/cython/socket.c:6307)\n  File \"zmq/backend/cython/socket.pyx\", line 147, in zmq.backend.cython.socket._recv_copy (zmq/backend/cython/socket.c:1877)\n  File \"zmq/backend/cython/checkrc.pxd\", line 12, in zmq.backend.cython.checkrc._check_rc (zmq/backend/cython/socket.c:6758)\n    PyErr_CheckSignals()\nKeyboardInterrupt\n\n07:32:52:root:DEBUG:-x- closed channel dd61696d-e828-47a1-94cc-6533914253d9\n07:32:52:zerorpc.channel:WARNING:zerorpc.ChannelMultiplexer, unable to route event: <\"\\x00'\\x9b\\xa9\\xd2\"> _zpc_hb {'response_to': 'dd61696d-e828-47a1-94cc-6533914253d9', 'message_id': 'dd61696e-e828-47a1-94cc-6533914253d9', 'v': 3} [...]\n07:32:52:zerorpc.channel:WARNING:zerorpc.ChannelMultiplexer, unable to route event: <\"\\x00'\\x9b\\xa9\\xd2\"> _zpc_hb {'response_to': 'dd61696d-e828-47a1-94cc-6533914253d9', 'message_id': 'dd61696f-e828-47a1-94cc-6533914253d9', 'v': 3} [...]\n^CKeyboardInterrupt\n07:37:41:gServer:INFO:G Server received shutdown\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/127", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/127/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/127/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/127", "id": 108250495, "node_id": "MDU6SXNzdWUxMDgyNTA0OTU=", "number": 127, "title": "How to check 0rpc client connection status when 0rpc server in shutdown", "user": {"login": "superalsrk", "id": 1984063, "node_id": "MDQ6VXNlcjE5ODQwNjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1984063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/superalsrk", "html_url": "https://github.com/superalsrk", "followers_url": "https://api.github.com/users/superalsrk/followers", "following_url": "https://api.github.com/users/superalsrk/following{/other_user}", "gists_url": "https://api.github.com/users/superalsrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/superalsrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/superalsrk/subscriptions", "organizations_url": "https://api.github.com/users/superalsrk/orgs", "repos_url": "https://api.github.com/users/superalsrk/repos", "events_url": "https://api.github.com/users/superalsrk/events{/privacy}", "received_events_url": "https://api.github.com/users/superalsrk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-25T02:27:16Z", "updated_at": "2015-09-27T12:56:29Z", "closed_at": "2015-09-27T12:56:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/125", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/125/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/125/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/125", "id": 105010514, "node_id": "MDU6SXNzdWUxMDUwMTA1MTQ=", "number": 125, "title": "msgpack Error", "user": {"login": "liuyangc3", "id": 6705844, "node_id": "MDQ6VXNlcjY3MDU4NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6705844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liuyangc3", "html_url": "https://github.com/liuyangc3", "followers_url": "https://api.github.com/users/liuyangc3/followers", "following_url": "https://api.github.com/users/liuyangc3/following{/other_user}", "gists_url": "https://api.github.com/users/liuyangc3/gists{/gist_id}", "starred_url": "https://api.github.com/users/liuyangc3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liuyangc3/subscriptions", "organizations_url": "https://api.github.com/users/liuyangc3/orgs", "repos_url": "https://api.github.com/users/liuyangc3/repos", "events_url": "https://api.github.com/users/liuyangc3/events{/privacy}", "received_events_url": "https://api.github.com/users/liuyangc3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bombela", "id": 216204, "node_id": "MDQ6VXNlcjIxNjIwNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/216204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bombela", "html_url": "https://github.com/bombela", "followers_url": "https://api.github.com/users/bombela/followers", "following_url": "https://api.github.com/users/bombela/following{/other_user}", "gists_url": "https://api.github.com/users/bombela/gists{/gist_id}", "starred_url": "https://api.github.com/users/bombela/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bombela/subscriptions", "organizations_url": "https://api.github.com/users/bombela/orgs", "repos_url": "https://api.github.com/users/bombela/repos", "events_url": "https://api.github.com/users/bombela/events{/privacy}", "received_events_url": "https://api.github.com/users/bombela/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bombela", "id": 216204, "node_id": "MDQ6VXNlcjIxNjIwNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/216204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bombela", "html_url": "https://github.com/bombela", "followers_url": "https://api.github.com/users/bombela/followers", "following_url": "https://api.github.com/users/bombela/following{/other_user}", "gists_url": "https://api.github.com/users/bombela/gists{/gist_id}", "starred_url": "https://api.github.com/users/bombela/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bombela/subscriptions", "organizations_url": "https://api.github.com/users/bombela/orgs", "repos_url": "https://api.github.com/users/bombela/repos", "events_url": "https://api.github.com/users/bombela/events{/privacy}", "received_events_url": "https://api.github.com/users/bombela/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2015-09-05T07:06:07Z", "updated_at": "2015-11-30T12:17:06Z", "closed_at": "2015-09-11T06:29:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nI followed the doc from http://www.zerorpc.io/\n\nafter pip install zererpc,I wrote the 'Hello World' Server and Client  example  on two different Linux Server.\n\nand I got this from Server\n\n```\n# python s.py \nERROR:zerorpc.channel:zerorpc.ChannelMultiplexer ignoring error on recv\nTraceback (most recent call last):\n  File \"/usr/lib/python2.6/site-packages/zerorpc/channel.py\", line 79, in _channel_dispatcher\n    event = self._events.recv()\n  File \"/usr/lib/python2.6/site-packages/zerorpc/events.py\", line 332, in recv\n    event = Event.unpack(blob)\n  File \"/usr/lib/python2.6/site-packages/zerorpc/events.py\", line 188, in unpack\n    unpacker.feed(blob)\n  File \"msgpack/_unpacker.pyx\", line 318, in msgpack._unpacker.Unpacker.feed (msgpack/_unpacker.cpp:318)\nTypeError: 'Frame' does not have the buffer interface\nERROR:zerorpc.channel:zerorpc.ChannelMultiplexer ignoring error on recv\n```\n\nhere is the code:\n\n```\n#Server\nimport zerorpc\n\nclass HelloRPC(object):\n    def hello(self, name):\n        return \"Hello, %s\" % name\n\ns = zerorpc.Server(HelloRPC())\ns.bind(\"tcp://0.0.0.0:1234\")\ns.run()\n```\n\n```\n#Client\nimport zerorpc\n\nclient = zerorpc.Client()\nclient.connect(\"tcp://172.16.200.84:1234\")\nprint(client.hello(\"World\"))\n```\n\nI'am a new user,What did I miss?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/124", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/124/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/124/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/124", "id": 100712633, "node_id": "MDU6SXNzdWUxMDA3MTI2MzM=", "number": 124, "title": "Segmentation fault (core dumped)", "user": {"login": "marcellobarile", "id": 1809476, "node_id": "MDQ6VXNlcjE4MDk0NzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1809476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcellobarile", "html_url": "https://github.com/marcellobarile", "followers_url": "https://api.github.com/users/marcellobarile/followers", "following_url": "https://api.github.com/users/marcellobarile/following{/other_user}", "gists_url": "https://api.github.com/users/marcellobarile/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcellobarile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcellobarile/subscriptions", "organizations_url": "https://api.github.com/users/marcellobarile/orgs", "repos_url": "https://api.github.com/users/marcellobarile/repos", "events_url": "https://api.github.com/users/marcellobarile/events{/privacy}", "received_events_url": "https://api.github.com/users/marcellobarile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-13T08:17:37Z", "updated_at": "2016-03-21T04:06:24Z", "closed_at": "2016-03-21T04:06:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nI'm trying to use zerorpc in a Node.js project; the Node.js application should talk with a Python script but, as soon as I call the \"invoke\" method from Node.js, I get \"Segmentation fault (core dumped)\" back from the Python script. I'm trying to figure out what's causing it but I've no idea at the moment. Any help or hint will be appreciated :-)\nEdit: I've a Python 2.7.9 version installed and a Ubuntu 15.04\nEdit 2:\nI've run the program with gdb and that's what I've got:\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\n[New Thread 0x7fffdd993700 (LWP 24781)]\n[New Thread 0x7fffde194700 (LWP 24780)]\n[New Thread 0x7fffdee8f700 (LWP 24779)]\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x00000000004a9d20 in ?? ()\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/123", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/123/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/123/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/123", "id": 99443653, "node_id": "MDU6SXNzdWU5OTQ0MzY1Mw==", "number": 123, "title": "Client cannot send with gunicorn gevent worker", "user": {"login": "faith0811", "id": 3837762, "node_id": "MDQ6VXNlcjM4Mzc3NjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3837762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faith0811", "html_url": "https://github.com/faith0811", "followers_url": "https://api.github.com/users/faith0811/followers", "following_url": "https://api.github.com/users/faith0811/following{/other_user}", "gists_url": "https://api.github.com/users/faith0811/gists{/gist_id}", "starred_url": "https://api.github.com/users/faith0811/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faith0811/subscriptions", "organizations_url": "https://api.github.com/users/faith0811/orgs", "repos_url": "https://api.github.com/users/faith0811/repos", "events_url": "https://api.github.com/users/faith0811/events{/privacy}", "received_events_url": "https://api.github.com/users/faith0811/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-08-06T14:11:28Z", "updated_at": "2016-02-08T04:14:54Z", "closed_at": "2016-02-08T04:14:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using latest version of zerorpc, I cannot send message to zerorpc server. The client is hosted in a web server (flask) running upon gunicorn with gevent worker.\nIt looks like that the thread is just blocked, and there is no response at all.\nThe client works after I change to gunicorn sync worker ( with no `-k gevent` ).\nis this a problem of zerorpc(i saw zerorpc has implemented a gevent version of zeromq) or it is something wrong with gunicorn or i messed up with something?\n\nMerci! \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/122", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/122/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/122/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/122", "id": 98268748, "node_id": "MDU6SXNzdWU5ODI2ODc0OA==", "number": 122, "title": "Use ZRPC-specific logger for logging", "user": {"login": "pixelbombs", "id": 3370746, "node_id": "MDQ6VXNlcjMzNzA3NDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3370746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pixelbombs", "html_url": "https://github.com/pixelbombs", "followers_url": "https://api.github.com/users/pixelbombs/followers", "following_url": "https://api.github.com/users/pixelbombs/following{/other_user}", "gists_url": "https://api.github.com/users/pixelbombs/gists{/gist_id}", "starred_url": "https://api.github.com/users/pixelbombs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pixelbombs/subscriptions", "organizations_url": "https://api.github.com/users/pixelbombs/orgs", "repos_url": "https://api.github.com/users/pixelbombs/repos", "events_url": "https://api.github.com/users/pixelbombs/events{/privacy}", "received_events_url": "https://api.github.com/users/pixelbombs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-07-30T21:26:27Z", "updated_at": "2016-08-03T09:29:48Z", "closed_at": "2015-11-24T22:23:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey guys,\n\nFirst and foremost, thanks for this library, it is super sweet and has saved us a ton of time in building client/server models.\nMy issue here is that because ZeroRPC is not implemented with a ZeroRPC-specific logger, the debug messages can't be squelched:\n\n```\nDEBUG - 2015-07-30 17:18:51,044 [148]: --> new channel 104d9442-6bd3-41c4-9703-a9f29182232e\nDEBUG - 2015-07-30 17:18:51,049 [140]: -x- closed channel 104d941a-6bd3-41c4-9703-a9f29182232e\nfio-2.1.10\nDEBUG - 2015-07-30 17:18:51,049 [148]: --> new channel 104d9443-6bd3-41c4-9703-a9f29182232e\nDEBUG - 2015-07-30 17:18:51,051 [140]: -x- closed channel 104d941b-6bd3-41c4-9703-a9f29182232e\nfio-2.1.10\n```\n\nAnd there's a ton of it. Everywhere. So much noise. Obviously I could modify the ZeroRPC code locally, but that's unideal since we'd have to then redistribute our own version of it.\n\nI think the fix here is to use a ZeroRPC logger instead of the root logger. Is anyone else interested in this feature? It's probably easy enough that I could fork the repo and merge back based on popular demand.\n\nThanks again guys,\n--Eddie\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/121", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/121/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/121/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/121", "id": 97891116, "node_id": "MDU6SXNzdWU5Nzg5MTExNg==", "number": 121, "title": "Flush timed-out messages", "user": {"login": "kmcheung12", "id": 5036695, "node_id": "MDQ6VXNlcjUwMzY2OTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/5036695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcheung12", "html_url": "https://github.com/kmcheung12", "followers_url": "https://api.github.com/users/kmcheung12/followers", "following_url": "https://api.github.com/users/kmcheung12/following{/other_user}", "gists_url": "https://api.github.com/users/kmcheung12/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcheung12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcheung12/subscriptions", "organizations_url": "https://api.github.com/users/kmcheung12/orgs", "repos_url": "https://api.github.com/users/kmcheung12/repos", "events_url": "https://api.github.com/users/kmcheung12/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcheung12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-29T09:05:14Z", "updated_at": "2016-03-21T03:41:05Z", "closed_at": "2016-03-21T03:41:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI am following https://github.com/0rpc/zerorpc-node/issues/19\n\nI'm encountering same situation. \n\nHow to cancel client requests, which are sent during server downtime, when my server is brought back to live? Right now we are relying on timestamp. But I think simply dropping the message would be a more elegant way of handling.\n\nYou mentioned it can be done with \"hooks\". Can you elaborate more on this?\n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/120", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/120/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/120/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/120", "id": 97626526, "node_id": "MDU6SXNzdWU5NzYyNjUyNg==", "number": 120, "title": "Security issue", "user": {"login": "Losiara", "id": 5796819, "node_id": "MDQ6VXNlcjU3OTY4MTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5796819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Losiara", "html_url": "https://github.com/Losiara", "followers_url": "https://api.github.com/users/Losiara/followers", "following_url": "https://api.github.com/users/Losiara/following{/other_user}", "gists_url": "https://api.github.com/users/Losiara/gists{/gist_id}", "starred_url": "https://api.github.com/users/Losiara/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Losiara/subscriptions", "organizations_url": "https://api.github.com/users/Losiara/orgs", "repos_url": "https://api.github.com/users/Losiara/repos", "events_url": "https://api.github.com/users/Losiara/events{/privacy}", "received_events_url": "https://api.github.com/users/Losiara/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-28T06:25:42Z", "updated_at": "2016-03-21T03:35:40Z", "closed_at": "2016-03-21T03:35:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Are there any security features in zerorpc? \nIs it compatible \"out of the box\" with native zmq security layer?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/119", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/119/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/119/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/119", "id": 88947796, "node_id": "MDU6SXNzdWU4ODk0Nzc5Ng==", "number": 119, "title": "add benchmark", "user": {"login": "nautilus28", "id": 4472857, "node_id": "MDQ6VXNlcjQ0NzI4NTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/4472857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nautilus28", "html_url": "https://github.com/nautilus28", "followers_url": "https://api.github.com/users/nautilus28/followers", "following_url": "https://api.github.com/users/nautilus28/following{/other_user}", "gists_url": "https://api.github.com/users/nautilus28/gists{/gist_id}", "starred_url": "https://api.github.com/users/nautilus28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nautilus28/subscriptions", "organizations_url": "https://api.github.com/users/nautilus28/orgs", "repos_url": "https://api.github.com/users/nautilus28/repos", "events_url": "https://api.github.com/users/nautilus28/events{/privacy}", "received_events_url": "https://api.github.com/users/nautilus28/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-06-17T08:01:53Z", "updated_at": "2015-08-11T17:23:38Z", "closed_at": "2015-08-11T17:23:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nis there any benchmark script to evaluate the performance of zerorpc-python?\n\nThanks,\nCanh\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/117", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/117/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/117/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/117", "id": 81387831, "node_id": "MDU6SXNzdWU4MTM4NzgzMQ==", "number": 117, "title": "Possible to call function on client", "user": {"login": "eoinmurray", "id": 1448368, "node_id": "MDQ6VXNlcjE0NDgzNjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1448368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eoinmurray", "html_url": "https://github.com/eoinmurray", "followers_url": "https://api.github.com/users/eoinmurray/followers", "following_url": "https://api.github.com/users/eoinmurray/following{/other_user}", "gists_url": "https://api.github.com/users/eoinmurray/gists{/gist_id}", "starred_url": "https://api.github.com/users/eoinmurray/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eoinmurray/subscriptions", "organizations_url": "https://api.github.com/users/eoinmurray/orgs", "repos_url": "https://api.github.com/users/eoinmurray/repos", "events_url": "https://api.github.com/users/eoinmurray/events{/privacy}", "received_events_url": "https://api.github.com/users/eoinmurray/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-05-27T10:25:30Z", "updated_at": "2015-05-27T17:07:36Z", "closed_at": "2015-05-27T17:07:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Say you have zerorpc connected between a raspberry pi and a server. The raspberry pi is connected to the internet but is in some unknown location so you don't have the option of binding an IP address or port to it.\n\nIs it possible to do a remote call to the raspberry pi using zero rpc; something like the following:\n\n```\n# server.py\nimport zerorpc\n\ns = zerorpc.Server()\ns.bind(\"tcp://0.0.0.0:4242\")\ns.run()\ns.HelloRPC()\n```\n\nand the client:\n\n```\n# client.py\nimport zerorpc\n\nclass HelloRPC(object):\n    def hello(self):\n        return \"Hello from client\"\n\nc = zerorpc.Client(HelloRPC())\nc.connect(\"tcp://127.0.0.1:4242\")\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/114", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/114/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/114/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/114", "id": 59879948, "node_id": "MDU6SXNzdWU1OTg3OTk0OA==", "number": 114, "title": "Recover from error after return", "user": {"login": "grantjenks", "id": 118304, "node_id": "MDQ6VXNlcjExODMwNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/118304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grantjenks", "html_url": "https://github.com/grantjenks", "followers_url": "https://api.github.com/users/grantjenks/followers", "following_url": "https://api.github.com/users/grantjenks/following{/other_user}", "gists_url": "https://api.github.com/users/grantjenks/gists{/gist_id}", "starred_url": "https://api.github.com/users/grantjenks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grantjenks/subscriptions", "organizations_url": "https://api.github.com/users/grantjenks/orgs", "repos_url": "https://api.github.com/users/grantjenks/repos", "events_url": "https://api.github.com/users/grantjenks/events{/privacy}", "received_events_url": "https://api.github.com/users/grantjenks/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-03-04T23:27:58Z", "updated_at": "2015-06-16T09:59:08Z", "closed_at": "2015-06-16T09:59:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wrote a simple message queue server using ZeroRPC:\n\n```\nimport zerorpc\nimport argparse\nfrom daemon import runner\nfrom collections import deque\n\nclass Queue(object):\n    def __init__(self):\n        self._queue = deque()\n    def get(self):\n        return self._queue.popleft()\n    def put(self, value):\n        self._queue.append(value)\n    def len(self):\n        return len(self._queue)\n\nclass Application(object):\n    def __init__(self):\n        self.stdin_path = '/dev/null'\n        self.stdout_path = self.stderr_path = args.logfile\n        self.pidfile_path = args.pidfile\n        self.pidfile_timeout = 5\n\n    def run(self):\n        server = zerorpc.Server(Queue())\n        server.bind('tcp://{0}:{1}'.format(args.host, args.port))\n        server.run()\n\nif __name__ == '__main__':\n    parser = argparse.ArgumentParser()\n    parser.add_argument('action')\n    parser.add_argument('--pidfile', default='/tmp/queued.pid')\n    parser.add_argument('--logfile', default='/tmp/queued.log')\n    parser.add_argument('--host', default='127.0.0.1')\n    parser.add_argument('--port', default='8080')\n    args = parser.parse_args()\n\n    app = Application()\n    app_runner = runner.DaemonRunner(app)\n    app_runner.do_action()\n```\n\nThe problem with this design is: what happens if, after `Queue.get` returns, the network dies and the message isn't delivered? I'd like to be able to recover the message in that case. So I imagine doing something like:\n\n```\ndef get(self):\n    value = self._queue.popleft()\n    try:\n        self.return(value)\n    except NetworkError:\n        self._queue.appendleft(value)\n```\n\nDoes that make sense? How do you cope with this in your own APIs?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/113", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/113/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/113/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/113", "id": 56350272, "node_id": "MDU6SXNzdWU1NjM1MDI3Mg==", "number": 113, "title": "Is Client connection threadsafe?", "user": {"login": "mengzhuo", "id": 885662, "node_id": "MDQ6VXNlcjg4NTY2Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/885662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mengzhuo", "html_url": "https://github.com/mengzhuo", "followers_url": "https://api.github.com/users/mengzhuo/followers", "following_url": "https://api.github.com/users/mengzhuo/following{/other_user}", "gists_url": "https://api.github.com/users/mengzhuo/gists{/gist_id}", "starred_url": "https://api.github.com/users/mengzhuo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mengzhuo/subscriptions", "organizations_url": "https://api.github.com/users/mengzhuo/orgs", "repos_url": "https://api.github.com/users/mengzhuo/repos", "events_url": "https://api.github.com/users/mengzhuo/events{/privacy}", "received_events_url": "https://api.github.com/users/mengzhuo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-03T08:58:40Z", "updated_at": "2015-02-04T02:15:03Z", "closed_at": "2015-02-04T02:15:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I had test on 1000 coroutines  sharing one client,  after all clients connected it will raise RemoteError: Lost heartbeat 10s.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/111", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/111/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/111/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/111", "id": 51960381, "node_id": "MDU6SXNzdWU1MTk2MDM4MQ==", "number": 111, "title": "u-msgpack-python vs msgpack-python", "user": {"login": "arnoutaertgeerts", "id": 3048965, "node_id": "MDQ6VXNlcjMwNDg5NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3048965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arnoutaertgeerts", "html_url": "https://github.com/arnoutaertgeerts", "followers_url": "https://api.github.com/users/arnoutaertgeerts/followers", "following_url": "https://api.github.com/users/arnoutaertgeerts/following{/other_user}", "gists_url": "https://api.github.com/users/arnoutaertgeerts/gists{/gist_id}", "starred_url": "https://api.github.com/users/arnoutaertgeerts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arnoutaertgeerts/subscriptions", "organizations_url": "https://api.github.com/users/arnoutaertgeerts/orgs", "repos_url": "https://api.github.com/users/arnoutaertgeerts/repos", "events_url": "https://api.github.com/users/arnoutaertgeerts/events{/privacy}", "received_events_url": "https://api.github.com/users/arnoutaertgeerts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-15T08:34:03Z", "updated_at": "2015-06-16T10:00:33Z", "closed_at": "2015-06-16T10:00:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting errors installing the msgpack-python dependecy and was wondering if the software would work using the [u-msgpack-python](https://github.com/vsergeev/u-msgpack-python) module as an alternative?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/108", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/108/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/108/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/108", "id": 42946550, "node_id": "MDU6SXNzdWU0Mjk0NjU1MA==", "number": 108, "title": "Python 3 support", "user": {"login": "wmayner", "id": 1775632, "node_id": "MDQ6VXNlcjE3NzU2MzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1775632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wmayner", "html_url": "https://github.com/wmayner", "followers_url": "https://api.github.com/users/wmayner/followers", "following_url": "https://api.github.com/users/wmayner/following{/other_user}", "gists_url": "https://api.github.com/users/wmayner/gists{/gist_id}", "starred_url": "https://api.github.com/users/wmayner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wmayner/subscriptions", "organizations_url": "https://api.github.com/users/wmayner/orgs", "repos_url": "https://api.github.com/users/wmayner/repos", "events_url": "https://api.github.com/users/wmayner/events{/privacy}", "received_events_url": "https://api.github.com/users/wmayner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 250736, "node_id": "MDU6TGFiZWwyNTA3MzY=", "url": "https://api.github.com/repos/0rpc/zerorpc-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 28, "created_at": "2014-09-16T23:37:00Z", "updated_at": "2016-09-04T16:01:15Z", "closed_at": "2016-09-04T16:01:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "This library looks awesome. Any chance of it being updated to work with Python 3? \n\nHappy to help if I can! :smiley: \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/106", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/106/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/106/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/106", "id": 40660083, "node_id": "MDU6SXNzdWU0MDY2MDA4Mw==", "number": 106, "title": "Support pyzmq \u2265 14.0", "user": {"login": "heri16", "id": 527101, "node_id": "MDQ6VXNlcjUyNzEwMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/527101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heri16", "html_url": "https://github.com/heri16", "followers_url": "https://api.github.com/users/heri16/followers", "following_url": "https://api.github.com/users/heri16/following{/other_user}", "gists_url": "https://api.github.com/users/heri16/gists{/gist_id}", "starred_url": "https://api.github.com/users/heri16/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heri16/subscriptions", "organizations_url": "https://api.github.com/users/heri16/orgs", "repos_url": "https://api.github.com/users/heri16/repos", "events_url": "https://api.github.com/users/heri16/events{/privacy}", "received_events_url": "https://api.github.com/users/heri16/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-08-20T03:20:49Z", "updated_at": "2015-06-16T10:02:07Z", "closed_at": "2015-06-16T10:02:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Support for new pyzmq versions for encrypted transport.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/102", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/102/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/102/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/102", "id": 33548614, "node_id": "MDU6SXNzdWUzMzU0ODYxNA==", "number": 102, "title": "Question for the performance of zerorpc", "user": {"login": "mzhang-code", "id": 5080397, "node_id": "MDQ6VXNlcjUwODAzOTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5080397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mzhang-code", "html_url": "https://github.com/mzhang-code", "followers_url": "https://api.github.com/users/mzhang-code/followers", "following_url": "https://api.github.com/users/mzhang-code/following{/other_user}", "gists_url": "https://api.github.com/users/mzhang-code/gists{/gist_id}", "starred_url": "https://api.github.com/users/mzhang-code/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mzhang-code/subscriptions", "organizations_url": "https://api.github.com/users/mzhang-code/orgs", "repos_url": "https://api.github.com/users/mzhang-code/repos", "events_url": "https://api.github.com/users/mzhang-code/events{/privacy}", "received_events_url": "https://api.github.com/users/mzhang-code/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-05-15T01:39:18Z", "updated_at": "2014-05-20T11:26:17Z", "closed_at": "2014-05-20T11:26:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "When working on a service which processes large mount of \"short running calls\", I find that performance of zerorpc is far less than expected. There's the experiment report I wrote about this. \n\nhttp://my-zhang.github.io/blog/2014/05/12/experiments-with-zerorpc/\n\nI think there's significant optimization could be done. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/98", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/98/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/98/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/98", "id": 31697331, "node_id": "MDU6SXNzdWUzMTY5NzMzMQ==", "number": 98, "title": "msgpack can not pack my custom class", "user": {"login": "ceremcem", "id": 6639874, "node_id": "MDQ6VXNlcjY2Mzk4NzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/6639874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ceremcem", "html_url": "https://github.com/ceremcem", "followers_url": "https://api.github.com/users/ceremcem/followers", "following_url": "https://api.github.com/users/ceremcem/following{/other_user}", "gists_url": "https://api.github.com/users/ceremcem/gists{/gist_id}", "starred_url": "https://api.github.com/users/ceremcem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ceremcem/subscriptions", "organizations_url": "https://api.github.com/users/ceremcem/orgs", "repos_url": "https://api.github.com/users/ceremcem/repos", "events_url": "https://api.github.com/users/ceremcem/events{/privacy}", "received_events_url": "https://api.github.com/users/ceremcem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-04-17T02:50:58Z", "updated_at": "2015-06-16T10:02:25Z", "closed_at": "2015-06-16T10:02:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \n\nI tried to switch to Pyro4 with zerorpc but one of my custom class instance can not be packed by msgpack. Here is the issue link: https://github.com/msgpack/msgpack-python/issues/96\n\nCould we tell zerorpc to use pickle instead of msgpack? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/97", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/97/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/97/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/97", "id": 30422895, "node_id": "MDU6SXNzdWUzMDQyMjg5NQ==", "number": 97, "title": "HTTP to ZeroRPC code", "user": {"login": "andresriancho", "id": 865200, "node_id": "MDQ6VXNlcjg2NTIwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/865200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andresriancho", "html_url": "https://github.com/andresriancho", "followers_url": "https://api.github.com/users/andresriancho/followers", "following_url": "https://api.github.com/users/andresriancho/following{/other_user}", "gists_url": "https://api.github.com/users/andresriancho/gists{/gist_id}", "starred_url": "https://api.github.com/users/andresriancho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andresriancho/subscriptions", "organizations_url": "https://api.github.com/users/andresriancho/orgs", "repos_url": "https://api.github.com/users/andresriancho/repos", "events_url": "https://api.github.com/users/andresriancho/events{/privacy}", "received_events_url": "https://api.github.com/users/andresriancho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-03-28T21:10:43Z", "updated_at": "2015-06-16T10:02:39Z", "closed_at": "2015-06-16T10:02:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is the code mentioned in @jpetazzo 's [talk at PyCon](https://www.youtube.com/watch?v=9G6-GksU7Ko) about the dotcloud API cli which uses HTTP-> ZeroRPC available somewhere?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/96", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/96/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/96/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/96", "id": 30016133, "node_id": "MDU6SXNzdWUzMDAxNjEzMw==", "number": 96, "title": "zerorpc and dbus", "user": {"login": "timofurrer", "id": 1008252, "node_id": "MDQ6VXNlcjEwMDgyNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1008252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timofurrer", "html_url": "https://github.com/timofurrer", "followers_url": "https://api.github.com/users/timofurrer/followers", "following_url": "https://api.github.com/users/timofurrer/following{/other_user}", "gists_url": "https://api.github.com/users/timofurrer/gists{/gist_id}", "starred_url": "https://api.github.com/users/timofurrer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timofurrer/subscriptions", "organizations_url": "https://api.github.com/users/timofurrer/orgs", "repos_url": "https://api.github.com/users/timofurrer/repos", "events_url": "https://api.github.com/users/timofurrer/events{/privacy}", "received_events_url": "https://api.github.com/users/timofurrer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-03-24T08:35:14Z", "updated_at": "2015-06-16T10:02:58Z", "closed_at": "2015-06-16T10:02:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an application for Avahi like: http://avahi.org/wiki/PythonBrowseExample\n\nAnd I want zeroRPC in the same application. But when I start the server with the `run` method. There is an exception \"LoopExit: This operation would block forever\".\n\nI assume this is because of mutliple main loops or something. I am very new to gevent etc.\n\nHow can I combine those two loops?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/95", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/95/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/95/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/95", "id": 29668322, "node_id": "MDU6SXNzdWUyOTY2ODMyMg==", "number": 95, "title": "How keep alive a client?", "user": {"login": "mamcx", "id": 238983, "node_id": "MDQ6VXNlcjIzODk4Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/238983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mamcx", "html_url": "https://github.com/mamcx", "followers_url": "https://api.github.com/users/mamcx/followers", "following_url": "https://api.github.com/users/mamcx/following{/other_user}", "gists_url": "https://api.github.com/users/mamcx/gists{/gist_id}", "starred_url": "https://api.github.com/users/mamcx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mamcx/subscriptions", "organizations_url": "https://api.github.com/users/mamcx/orgs", "repos_url": "https://api.github.com/users/mamcx/repos", "events_url": "https://api.github.com/users/mamcx/events{/privacy}", "received_events_url": "https://api.github.com/users/mamcx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2014-03-18T17:52:30Z", "updated_at": "2015-06-16T10:20:28Z", "closed_at": "2015-06-16T10:20:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm building a service that (crons) that could take hours/day before activate a client. So for the majority of the time, the client(s) will be waiting for a job.\n\nHow can I keep alive the client, and still get new task for a server when ready?\n\nThink in something like pubnub.com\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/90", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/90/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/90/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/90", "id": 25861603, "node_id": "MDU6SXNzdWUyNTg2MTYwMw==", "number": 90, "title": "Bidirectional ZeroRPC example", "user": {"login": "btgoodwin", "id": 5419083, "node_id": "MDQ6VXNlcjU0MTkwODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/5419083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/btgoodwin", "html_url": "https://github.com/btgoodwin", "followers_url": "https://api.github.com/users/btgoodwin/followers", "following_url": "https://api.github.com/users/btgoodwin/following{/other_user}", "gists_url": "https://api.github.com/users/btgoodwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/btgoodwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/btgoodwin/subscriptions", "organizations_url": "https://api.github.com/users/btgoodwin/orgs", "repos_url": "https://api.github.com/users/btgoodwin/repos", "events_url": "https://api.github.com/users/btgoodwin/events{/privacy}", "received_events_url": "https://api.github.com/users/btgoodwin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-01-18T14:59:38Z", "updated_at": "2014-01-21T19:41:35Z", "closed_at": "2014-01-21T19:41:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a situation whereby my server also needs to make calls as a client on another server.  One half of the design is a Node.js child, and the other is a bit of a gateway written in Python.  The Python side receives external events and needs to asynchronously issue ZeroRPC calls to the Node.js child.  \n\nAt this point, the call does execute (the messages all pass, etc.) but a short time later several exceptions occur indicating there is a problem with gevent.  \n\nI've tried spawning the client using gevent, but the exceptions still occur.  Ultimately, these exceptions crash ZeroRPC which takes down the Node.js child which then forces the Node.js server to shutdown.\n\nI've posted the additional details to stack overflow as well: \n\nhttp://stackoverflow.com/questions/21192078/bidirectional-zerorpc-in-python-client-invoke-causes-assertionerror\n\nIs there an example available somewhere that details how to establish a two-way connection?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/89", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/89/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/89/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/89", "id": 25656791, "node_id": "MDU6SXNzdWUyNTY1Njc5MQ==", "number": 89, "title": "Calling stop() or close() on a running server throws exceptions", "user": {"login": "btgoodwin", "id": 5419083, "node_id": "MDQ6VXNlcjU0MTkwODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/5419083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/btgoodwin", "html_url": "https://github.com/btgoodwin", "followers_url": "https://api.github.com/users/btgoodwin/followers", "following_url": "https://api.github.com/users/btgoodwin/following{/other_user}", "gists_url": "https://api.github.com/users/btgoodwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/btgoodwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/btgoodwin/subscriptions", "organizations_url": "https://api.github.com/users/btgoodwin/orgs", "repos_url": "https://api.github.com/users/btgoodwin/repos", "events_url": "https://api.github.com/users/btgoodwin/events{/privacy}", "received_events_url": "https://api.github.com/users/btgoodwin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-01-15T15:50:31Z", "updated_at": "2014-01-17T15:08:48Z", "closed_at": "2014-01-17T15:08:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using Node.js's spawn(), I create a ZeroRPC server as an IPC.  Later when the client times out, my Node sends kill() (SIGTERM) to the child process which is captured by the python script.  From the handler, I call stop() on the server which promptly crashes with exceptions.  The same set of exceptions occurs if calling close() on the server.  What's the appropriate way to ensure a clean shutdown and closing of a python ZeroRPC server?\n\nSee the following link for more details: http://stackoverflow.com/questions/21140384/zerorpc-python-server-exceptions-when-attempting-to-stop-or-close\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/88", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/88/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/88/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/88", "id": 25452069, "node_id": "MDU6SXNzdWUyNTQ1MjA2OQ==", "number": 88, "title": "Remoting list subclasses fail (or really any class that has built-in so unhashable methods)", "user": {"login": "pramukta", "id": 61136, "node_id": "MDQ6VXNlcjYxMTM2", "avatar_url": "https://avatars0.githubusercontent.com/u/61136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pramukta", "html_url": "https://github.com/pramukta", "followers_url": "https://api.github.com/users/pramukta/followers", "following_url": "https://api.github.com/users/pramukta/following{/other_user}", "gists_url": "https://api.github.com/users/pramukta/gists{/gist_id}", "starred_url": "https://api.github.com/users/pramukta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pramukta/subscriptions", "organizations_url": "https://api.github.com/users/pramukta/orgs", "repos_url": "https://api.github.com/users/pramukta/repos", "events_url": "https://api.github.com/users/pramukta/events{/privacy}", "received_events_url": "https://api.github.com/users/pramukta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-01-11T22:14:45Z", "updated_at": "2015-06-16T10:18:05Z", "closed_at": "2015-06-16T10:18:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all, thanks very much for this library.  It's really useful and works nicely most of the time.  However, I did encounter an issue when trying to expose a list subclass as a zeroservice.  The initial exception was:\n\n```\nFile \"/Users/prak/code/venv/twola/lib/python2.7/site-packages/zerorpc/core.py\", line 109, in _inject_builtins\nself._methods['_zerorpc_list'] = lambda: [m for m in self._methods\nTypeError: list indices must be integers, not str\n```\n\nHowever, this was just a symptom caused by the fact that ServerBase._filter_methods (core.py:71) seems to try and check if its methods argument is a dict by seeing if it has a __getitem__ method.  I was able to get by this explicitly doing isinstance(dict).\n\nNext there was an issue with the dict comprehension in the return statement (core.py:76) in that checking whether a method is \"not in server_methods\" requires that thing to be hashable which means built in functions break it.  A fix is to replace the return call with:\n\n```\n    return dict((k, getattr(methods, k))\n            for k in dir(methods)\n            if callable(getattr(methods, k))\n            and not k.startswith('_')\n            and (inspect.isbuiltin(getattr(methods, k)) or\n                 getattr(methods, k) not in server_methods)\n            )\n```\n\nwhich requires importing the inspect module.  I'm not sure if this solution is worthwhile though because remoting dict subclasses will remain an issue and it really seems like it's the multiple calls to ServerBase._filter_methods from zerorpc.Server that are a bit awkward.\n\nA test to reproduce the error (I put it in test_server.py):\n\n```\ndef test_server_can_wrap_list():\n    endpoint = random_ipc_endpoint()\n\n    l = list()\n    srv = zerorpc.Server(list)\n    srv.bind(endpoint)\n```\n\nThe test is pretty weak but I'm not familiar enough with the codebase yet to do much more. If you guys are ok with this solution, I'd be happy to go through the fork, commit, pull request process.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/85", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/85/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/85/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/85", "id": 24878465, "node_id": "MDU6SXNzdWUyNDg3ODQ2NQ==", "number": 85, "title": "Why don't you use kombu under the hoods?", "user": {"login": "thedrow", "id": 48936, "node_id": "MDQ6VXNlcjQ4OTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/48936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thedrow", "html_url": "https://github.com/thedrow", "followers_url": "https://api.github.com/users/thedrow/followers", "following_url": "https://api.github.com/users/thedrow/following{/other_user}", "gists_url": "https://api.github.com/users/thedrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/thedrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thedrow/subscriptions", "organizations_url": "https://api.github.com/users/thedrow/orgs", "repos_url": "https://api.github.com/users/thedrow/repos", "events_url": "https://api.github.com/users/thedrow/events{/privacy}", "received_events_url": "https://api.github.com/users/thedrow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-12-30T09:42:28Z", "updated_at": "2014-01-15T21:28:13Z", "closed_at": "2014-01-15T21:28:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It will make implementation much easier and lower the brier for contributions.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/82", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/82/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/82/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/82", "id": 24309931, "node_id": "MDU6SXNzdWUyNDMwOTkzMQ==", "number": 82, "title": "Please update the pypi package", "user": {"login": "medecau", "id": 59870, "node_id": "MDQ6VXNlcjU5ODcw", "avatar_url": "https://avatars1.githubusercontent.com/u/59870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medecau", "html_url": "https://github.com/medecau", "followers_url": "https://api.github.com/users/medecau/followers", "following_url": "https://api.github.com/users/medecau/following{/other_user}", "gists_url": "https://api.github.com/users/medecau/gists{/gist_id}", "starred_url": "https://api.github.com/users/medecau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medecau/subscriptions", "organizations_url": "https://api.github.com/users/medecau/orgs", "repos_url": "https://api.github.com/users/medecau/repos", "events_url": "https://api.github.com/users/medecau/events{/privacy}", "received_events_url": "https://api.github.com/users/medecau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2013-12-15T11:57:40Z", "updated_at": "2015-06-17T07:12:04Z", "closed_at": "2015-06-16T09:56:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I spent most part of the last two days trying to figure out why the Publisher/Subscriber pattern wasn't working.\n\nAfter running pip install -I <the github zip> it worked on the first run.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/81", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/81/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/81/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/81", "id": 23902004, "node_id": "MDU6SXNzdWUyMzkwMjAwNA==", "number": 81, "title": "Dynamically change the init class ?", "user": {"login": "LeHibou", "id": 1833410, "node_id": "MDQ6VXNlcjE4MzM0MTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1833410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeHibou", "html_url": "https://github.com/LeHibou", "followers_url": "https://api.github.com/users/LeHibou/followers", "following_url": "https://api.github.com/users/LeHibou/following{/other_user}", "gists_url": "https://api.github.com/users/LeHibou/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeHibou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeHibou/subscriptions", "organizations_url": "https://api.github.com/users/LeHibou/orgs", "repos_url": "https://api.github.com/users/LeHibou/repos", "events_url": "https://api.github.com/users/LeHibou/events{/privacy}", "received_events_url": "https://api.github.com/users/LeHibou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-12-07T08:33:25Z", "updated_at": "2015-06-16T10:17:34Z", "closed_at": "2015-06-16T10:17:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, in your example :\n\n---\n\n/_Python server_/\ns = zerorpc.Server(HelloRPC())\ns.bind(\"tcp://0.0.0.0:4242\")\ns.run()\n\n---\n\nCould we have say two classes in the server code ? :\n\n---\n\n/_Idea for python server_/\nimport zerorpc\n\nclass HelloRPC(object):\n    def hello(self, name):\n        return \"Hello, %s\" % name\n\nclass HelloRPC2(object):\n    def hello(self, name):\n        return \"Hello, %s\" % name\n\ns = zerorpc.Server()\ns.bind(\"tcp://0.0.0.0:4242\")\ns.run()\n\n---\n\nand choose dynamically which class to execute thanks to a parameter sent by the client  ?\n\n---\n\n/_Python Client_/\nimport zerorpc\n\nc = zerorpc.Client()\nc.connect(\"tcp://127.0.0.1:4242\")\nprint c.HelloRPC2.hello(\"RPC\")\n\n---\n\nSame question for nodejs..\n\nThanks !\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/79", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/79/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/79/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/79", "id": 22933247, "node_id": "MDU6SXNzdWUyMjkzMzI0Nw==", "number": 79, "title": "problem with 3rd example on dotcloud.com", "user": {"login": "schaefer0", "id": 468851, "node_id": "MDQ6VXNlcjQ2ODg1MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/468851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schaefer0", "html_url": "https://github.com/schaefer0", "followers_url": "https://api.github.com/users/schaefer0/followers", "following_url": "https://api.github.com/users/schaefer0/following{/other_user}", "gists_url": "https://api.github.com/users/schaefer0/gists{/gist_id}", "starred_url": "https://api.github.com/users/schaefer0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schaefer0/subscriptions", "organizations_url": "https://api.github.com/users/schaefer0/orgs", "repos_url": "https://api.github.com/users/schaefer0/repos", "events_url": "https://api.github.com/users/schaefer0/events{/privacy}", "received_events_url": "https://api.github.com/users/schaefer0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2013-11-19T18:03:30Z", "updated_at": "2015-06-16T10:16:14Z", "closed_at": "2015-06-16T10:16:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "this is the example where the server defines an exception class and\nthe client calls the exception.\n\nrunning ubuntu, client blows up with this error:\n\nAn error occurred: Traceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/zerorpc-0.4.4-py2.7.egg/zerorpc/core.py\", line 148, in _async_task\n    functor.pattern.process_call(self._context, bufchan, event, functor)\n  File \"/usr/local/lib/python2.7/dist-packages/zerorpc-0.4.4-py2.7.egg/zerorpc/patterns.py\", line 30, in process_call\n    result = functor(*req_event.args)\n  File \"/usr/local/lib/python2.7/dist-packages/zerorpc-0.4.4-py2.7.egg/zerorpc/decorators.py\", line 44, in __call__\n    return self._functor(_args, *_kargs)\n  File \"zerorpc_server3.py\", line 5, in bad\n    raise Exception(\":P\")\nException: :P\n\nthe server reports the error below, but does not blow up:\n\nNo handlers could be found for logger \"zerorpc.core\"\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/77", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/77/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/77/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/77", "id": 22182284, "node_id": "MDU6SXNzdWUyMjE4MjI4NA==", "number": 77, "title": "dependency (==) on pyzmq", "user": {"login": "wiggin15", "id": 1686212, "node_id": "MDQ6VXNlcjE2ODYyMTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1686212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wiggin15", "html_url": "https://github.com/wiggin15", "followers_url": "https://api.github.com/users/wiggin15/followers", "following_url": "https://api.github.com/users/wiggin15/following{/other_user}", "gists_url": "https://api.github.com/users/wiggin15/gists{/gist_id}", "starred_url": "https://api.github.com/users/wiggin15/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wiggin15/subscriptions", "organizations_url": "https://api.github.com/users/wiggin15/orgs", "repos_url": "https://api.github.com/users/wiggin15/repos", "events_url": "https://api.github.com/users/wiggin15/events{/privacy}", "received_events_url": "https://api.github.com/users/wiggin15/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2013-11-06T09:31:02Z", "updated_at": "2015-06-16T10:14:32Z", "closed_at": "2015-06-16T10:14:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "ZeroRPC 0.4.4 depends on pyzmq==13.1.0. Python/setuptools don't handle \"==\" dependencies well - if a project depends on both pyzmq and zerorpc, and setuptools decides to download pyzmq first, it will install the newest pyzmq, and then fail when it reaches the installation of zerorpc...\nI understand that the newest pyzmq breaks zerorpc, but I'm not sure what's the problem. Is it possible to adapt zerorpc and/or open an issue for pyzmq to fix their issues?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/74", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/74/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/74/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/74", "id": 20673464, "node_id": "MDU6SXNzdWUyMDY3MzQ2NA==", "number": 74, "title": "More uhnandled cases of EINTR", "user": {"login": "grzn", "id": 175126, "node_id": "MDQ6VXNlcjE3NTEyNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/175126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grzn", "html_url": "https://github.com/grzn", "followers_url": "https://api.github.com/users/grzn/followers", "following_url": "https://api.github.com/users/grzn/following{/other_user}", "gists_url": "https://api.github.com/users/grzn/gists{/gist_id}", "starred_url": "https://api.github.com/users/grzn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grzn/subscriptions", "organizations_url": "https://api.github.com/users/grzn/orgs", "repos_url": "https://api.github.com/users/grzn/repos", "events_url": "https://api.github.com/users/grzn/events{/privacy}", "received_events_url": "https://api.github.com/users/grzn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-10-08T11:43:55Z", "updated_at": "2013-11-06T15:14:44Z", "closed_at": "2013-11-06T15:14:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We've seen a few more cases in which ZMQError(EINTR) is raised and not handled in zerorpc.\n\nUnfortunately, these show up in our production systems and not in tests, so I don't have anything else but Tracebacks.\n\nI'll comment the Tracebacks and send a PR with the changes that deal with these exceptions\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/73", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/73/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/73/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/73", "id": 20513399, "node_id": "MDU6SXNzdWUyMDUxMzM5OQ==", "number": 73, "title": "Use of zmq.green", "user": {"login": "mahendra", "id": 115988, "node_id": "MDQ6VXNlcjExNTk4OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/115988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahendra", "html_url": "https://github.com/mahendra", "followers_url": "https://api.github.com/users/mahendra/followers", "following_url": "https://api.github.com/users/mahendra/following{/other_user}", "gists_url": "https://api.github.com/users/mahendra/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahendra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahendra/subscriptions", "organizations_url": "https://api.github.com/users/mahendra/orgs", "repos_url": "https://api.github.com/users/mahendra/repos", "events_url": "https://api.github.com/users/mahendra/events{/privacy}", "received_events_url": "https://api.github.com/users/mahendra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 250735, "node_id": "MDU6TGFiZWwyNTA3MzU=", "url": "https://api.github.com/repos/0rpc/zerorpc-python/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-10-04T10:13:33Z", "updated_at": "2015-08-11T17:24:37Z", "closed_at": "2015-08-11T17:24:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Was wondering why zerorpc uses it's own implementation of Socket() instead of using zmq.green.*\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/71", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/71/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/71/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/71", "id": 19365609, "node_id": "MDU6SXNzdWUxOTM2NTYwOQ==", "number": 71, "title": "Distributing tasks to multiple workers", "user": {"login": "carlskii", "id": 555399, "node_id": "MDQ6VXNlcjU1NTM5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/555399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlskii", "html_url": "https://github.com/carlskii", "followers_url": "https://api.github.com/users/carlskii/followers", "following_url": "https://api.github.com/users/carlskii/following{/other_user}", "gists_url": "https://api.github.com/users/carlskii/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlskii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlskii/subscriptions", "organizations_url": "https://api.github.com/users/carlskii/orgs", "repos_url": "https://api.github.com/users/carlskii/repos", "events_url": "https://api.github.com/users/carlskii/events{/privacy}", "received_events_url": "https://api.github.com/users/carlskii/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-09-12T07:21:36Z", "updated_at": "2015-06-16T10:17:39Z", "closed_at": "2015-06-16T10:17:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \n\nIs it possible to configure multiple workers (pool) with ZeroRPC and have requests distributed across the pool based on the availability the workers?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/70", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/70/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/70/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/70", "id": 18965028, "node_id": "MDU6SXNzdWUxODk2NTAyOA==", "number": 70, "title": "OverflowError", "user": {"login": "grzn", "id": 175126, "node_id": "MDQ6VXNlcjE3NTEyNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/175126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grzn", "html_url": "https://github.com/grzn", "followers_url": "https://api.github.com/users/grzn/followers", "following_url": "https://api.github.com/users/grzn/following{/other_user}", "gists_url": "https://api.github.com/users/grzn/gists{/gist_id}", "starred_url": "https://api.github.com/users/grzn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grzn/subscriptions", "organizations_url": "https://api.github.com/users/grzn/orgs", "repos_url": "https://api.github.com/users/grzn/repos", "events_url": "https://api.github.com/users/grzn/events{/privacy}", "received_events_url": "https://api.github.com/users/grzn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-09-04T10:58:04Z", "updated_at": "2013-09-04T21:25:46Z", "closed_at": "2013-09-04T19:25:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\nTraceback (most recent call last):\n  File \"/var/tmp/izbox/mock/izbox-mainline/eggs/zerorpc-0.4.3.1-py2.7.egg/zerorpc/core.py\", line 148, in _async_task\n    functor.pattern.process_call(self._context, bufchan, event, functor)\n  Local variables:\n    'initial_event': <zerorpc.events.Event object at 0x14912cf8>\n    'exc_infos': <repr truncated: <list object at 0x154cf638>>\n    'self': <izbox.events.processor.EventsProcessorServer object at 0x388ec10>\n    'bufchan': <zerorpc.channel.BufferedChannel object at 0x13624690>\n    'functor': <zerorpc.decorators.rep object at 0x3891790>\n    'protocol_v1': False\n    'hbchan': <zerorpc.heartbeat.HeartBeatOnChannel object at 0x145315d0>\n    'event': <zerorpc.events.Event object at 0x14912cf8>\n    'channel': <zerorpc.channel.Channel object at 0x14757210>\n  File \"/var/tmp/izbox/mock/izbox-mainline/eggs/zerorpc-0.4.3.1-py2.7.egg/zerorpc/patterns.py\", line 34, in process_call\n    bufchan.emit_event(rep_event)\n  Local variables:\n    'rep_event': <zerorpc.events.Event object at 0x13be6680>\n    'self': <zerorpc.patterns.ReqRep instance at 0x22b84d0>\n    'bufchan': <zerorpc.channel.BufferedChannel object at 0x13624690>\n    'functor': <zerorpc.decorators.rep object at 0x3891790>\n    'result': <repr truncated: <dict object at 0x163103f0>>\n    'context': <zerorpc.context.Context object at 0x28ea668>\n    'req_event': <zerorpc.events.Event object at 0x14912cf8>\n  File \"/var/tmp/izbox/mock/izbox-mainline/eggs/zerorpc-0.4.3.1-py2.7.egg/zerorpc/channel.py\", line 244, in emit_event\n    self._channel.emit_event(event)\n  Local variables:\n    'self': <zerorpc.channel.BufferedChannel object at 0x13624690>\n    'block': True\n    'timeout': None\n    'event': <zerorpc.events.Event object at 0x13be6680>\n  File \"/var/tmp/izbox/mock/izbox-mainline/eggs/zerorpc-0.4.3.1-py2.7.egg/zerorpc/heartbeat.py\", line 111, in emit_event\n    self._channel.emit_event(event)\n  Local variables:\n    'self': <zerorpc.heartbeat.HeartBeatOnChannel object at 0x145315d0>\n    'event': <zerorpc.events.Event object at 0x13be6680>\n  File \"/var/tmp/izbox/mock/izbox-mainline/eggs/zerorpc-0.4.3.1-py2.7.egg/zerorpc/channel.py\", line 160, in emit_event\n    self._multiplexer.emit_event(event, self._zmqid)\n  Local variables:\n    'self': <zerorpc.channel.Channel object at 0x14757210>\n    'event': <zerorpc.events.Event object at 0x13be6680>\n  File \"/var/tmp/izbox/mock/izbox-mainline/eggs/zerorpc-0.4.3.1-py2.7.egg/zerorpc/channel.py\", line 67, in emit_event\n    return self._events.emit_event(event, identity)\n  Local variables:\n    'self': <zerorpc.channel.ChannelMultiplexer object at 0x388e050>\n    'event': <zerorpc.events.Event object at 0x13be6680>\n    'identity': ['\\x00h\\x9d\\xe5h']\n  File \"/var/tmp/izbox/mock/izbox-mainline/eggs/zerorpc-0.4.3.1-py2.7.egg/zerorpc/events.py\", line 240, in emit_event\n    parts.extend(['', event.pack()])\n  Local variables:\n    'self': <zerorpc.events.Events object at 0x3869ad0>\n    'parts': ['\\x00h\\x9d\\xe5h']\n    'event': <zerorpc.events.Event object at 0x13be6680>\n    'identity': ['\\x00h\\x9d\\xe5h']\n  File \"/var/tmp/izbox/mock/izbox-mainline/eggs/zerorpc-0.4.3.1-py2.7.egg/zerorpc/events.py\", line 140, in pack\n    return msgpack.Packer().pack((self._header, self._name, self._args))\n  Local variables:\n    'self': <zerorpc.events.Event object at 0x13be6680>\n  File \"_packer.pyx\", line 182, in msgpack._packer.Packer.pack (msgpack/_packer.cpp:182)\n  Local variables:\n    'PackValueError': <class 'msgpack.exceptions.PackValueError'>\n    '__builtins__': <module '__builtin__' (built-in)>\n    '__file__': <repr truncated: <str object at 0x222e930>>\n    '__package__': 'msgpack'\n    'Packer': <type 'msgpack._packer.Packer'>\n    '__test__': {}\n    'packb': <built-in function packb>\n    '__name__': 'msgpack._packer'\n    '__doc__': None\n    'pack': <built-in function pack>\n  File \"_packer.pyx\", line 184, in msgpack._packer.Packer.pack (msgpack/_packer.cpp:184)\n  Local variables:\n    'PackValueError': <class 'msgpack.exceptions.PackValueError'>\n    '__builtins__': <module '__builtin__' (built-in)>\n    '__file__': <repr truncated: <str object at 0x222e930>>\n    '__package__': 'msgpack'\n    'Packer': <type 'msgpack._packer.Packer'>\n    '__test__': {}\n    'packb': <built-in function packb>\n    '__name__': 'msgpack._packer'\n    '__doc__': None\n    'pack': <built-in function pack>\n  File \"_packer.pyx\", line 173, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:173)\n  Local variables:\n    'PackValueError': <class 'msgpack.exceptions.PackValueError'>\n    '__builtins__': <module '__builtin__' (built-in)>\n    '__file__': <repr truncated: <str object at 0x222e930>>\n    '__package__': 'msgpack'\n    'Packer': <type 'msgpack._packer.Packer'>\n    '__test__': {}\n    'packb': <built-in function packb>\n    '__name__': 'msgpack._packer'\n    '__doc__': None\n    'pack': <built-in function pack>\n  File \"_packer.pyx\", line 173, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:173)\n  Local variables:\n    'PackValueError': <class 'msgpack.exceptions.PackValueError'>\n    '__builtins__': <module '__builtin__' (built-in)>\n    '__file__': <repr truncated: <str object at 0x222e930>>\n    '__package__': 'msgpack'\n    'Packer': <type 'msgpack._packer.Packer'>\n    '__test__': {}\n    'packb': <built-in function packb>\n    '__name__': 'msgpack._packer'\n    '__doc__': None\n    'pack': <built-in function pack>\n  File \"_packer.pyx\", line 159, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:159)\n  Local variables:\n    'PackValueError': <class 'msgpack.exceptions.PackValueError'>\n    '__builtins__': <module '__builtin__' (built-in)>\n    '__file__': <repr truncated: <str object at 0x222e930>>\n    '__package__': 'msgpack'\n    'Packer': <type 'msgpack._packer.Packer'>\n    '__test__': {}\n    'packb': <built-in function packb>\n    '__name__': 'msgpack._packer'\n    '__doc__': None\n    'pack': <built-in function pack>\n  File \"_packer.pyx\", line 173, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:173)\n  Local variables:\n    'PackValueError': <class 'msgpack.exceptions.PackValueError'>\n    '__builtins__': <module '__builtin__' (built-in)>\n    '__file__': <repr truncated: <str object at 0x222e930>>\n    '__package__': 'msgpack'\n    'Packer': <type 'msgpack._packer.Packer'>\n    '__test__': {}\n    'packb': <built-in function packb>\n    '__name__': 'msgpack._packer'\n    '__doc__': None\n    'pack': <built-in function pack>\n  File \"_packer.pyx\", line 167, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:167)\n  Local variables:\n    'PackValueError': <class 'msgpack.exceptions.PackValueError'>\n    '__builtins__': <module '__builtin__' (built-in)>\n    '__file__': <repr truncated: <str object at 0x222e930>>\n    '__package__': 'msgpack'\n    'Packer': <type 'msgpack._packer.Packer'>\n    '__test__': {}\n    'packb': <built-in function packb>\n    '__name__': 'msgpack._packer'\n    '__doc__': None\n    'pack': <built-in function pack>\n  File \"_packer.pyx\", line 173, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:173)\n  Local variables:\n    'PackValueError': <class 'msgpack.exceptions.PackValueError'>\n    '__builtins__': <module '__builtin__' (built-in)>\n    '__file__': <repr truncated: <str object at 0x222e930>>\n    '__package__': 'msgpack'\n    'Packer': <type 'msgpack._packer.Packer'>\n    '__test__': {}\n    'packb': <built-in function packb>\n    '__name__': 'msgpack._packer'\n    '__doc__': None\n    'pack': <built-in function pack>\n  File \"_packer.pyx\", line 159, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:159)\n  Local variables:\n    'PackValueError': <class 'msgpack.exceptions.PackValueError'>\n    '__builtins__': <module '__builtin__' (built-in)>\n    '__file__': <repr truncated: <str object at 0x222e930>>\n    '__package__': 'msgpack'\n    'Packer': <type 'msgpack._packer.Packer'>\n    '__test__': {}\n    'packb': <built-in function packb>\n    '__name__': 'msgpack._packer'\n    '__doc__': None\n    'pack': <built-in function pack>\n  File \"_packer.pyx\", line 173, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:173)\n  Local variables:\n    'PackValueError': <class 'msgpack.exceptions.PackValueError'>\n    '__builtins__': <module '__builtin__' (built-in)>\n    '__file__': <repr truncated: <str object at 0x222e930>>\n    '__package__': 'msgpack'\n    'Packer': <type 'msgpack._packer.Packer'>\n    '__test__': {}\n    'packb': <built-in function packb>\n    '__name__': 'msgpack._packer'\n    '__doc__': None\n    'pack': <built-in function pack>\n  File \"_packer.pyx\", line 159, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:159)\n  Local variables:\n    'PackValueError': <class 'msgpack.exceptions.PackValueError'>\n    '__builtins__': <module '__builtin__' (built-in)>\n    '__file__': <repr truncated: <str object at 0x222e930>>\n    '__package__': 'msgpack'\n    'Packer': <type 'msgpack._packer.Packer'>\n    '__test__': {}\n    'packb': <built-in function packb>\n    '__name__': 'msgpack._packer'\n    '__doc__': None\n    'pack': <built-in function pack>\n  File \"_packer.pyx\", line 159, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:159)\n  Local variables:\n    'PackValueError': <class 'msgpack.exceptions.PackValueError'>\n    '__builtins__': <module '__builtin__' (built-in)>\n    '__file__': <repr truncated: <str object at 0x222e930>>\n    '__package__': 'msgpack'\n    'Packer': <type 'msgpack._packer.Packer'>\n    '__test__': {}\n    'packb': <built-in function packb>\n    '__name__': 'msgpack._packer'\n    '__doc__': None\n    'pack': <built-in function pack>\n  File \"_packer.pyx\", line 159, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:159)\n  Local variables:\n    'PackValueError': <class 'msgpack.exceptions.PackValueError'>\n    '__builtins__': <module '__builtin__' (built-in)>\n    '__file__': <repr truncated: <str object at 0x222e930>>\n    '__package__': 'msgpack'\n    'Packer': <type 'msgpack._packer.Packer'>\n    '__test__': {}\n    'packb': <built-in function packb>\n    '__name__': 'msgpack._packer'\n    '__doc__': None\n    'pack': <built-in function pack>\n  File \"_packer.pyx\", line 124, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:124)\n  Local variables:\n    'PackValueError': <class 'msgpack.exceptions.PackValueError'>\n    '__builtins__': <module '__builtin__' (built-in)>\n    '__file__': <repr truncated: <str object at 0x222e930>>\n    '__package__': 'msgpack'\n    'Packer': <type 'msgpack._packer.Packer'>\n    '__test__': {}\n    'packb': <built-in function packb>\n    '__name__': 'msgpack._packer'\n    '__doc__': None\n    'pack': <built-in function pack>\nOverflowError: long too big to convert\n```\n\nThe traceback is thrown by gevent, and there's no wait to tell what exactly caused the exception. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/69", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/69/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/69/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/69", "id": 17591176, "node_id": "MDU6SXNzdWUxNzU5MTE3Ng==", "number": 69, "title": "Zerorpc crashes immediately with msg_id_counter error", "user": {"login": "cholcombe973", "id": 3058195, "node_id": "MDQ6VXNlcjMwNTgxOTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/3058195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cholcombe973", "html_url": "https://github.com/cholcombe973", "followers_url": "https://api.github.com/users/cholcombe973/followers", "following_url": "https://api.github.com/users/cholcombe973/following{/other_user}", "gists_url": "https://api.github.com/users/cholcombe973/gists{/gist_id}", "starred_url": "https://api.github.com/users/cholcombe973/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cholcombe973/subscriptions", "organizations_url": "https://api.github.com/users/cholcombe973/orgs", "repos_url": "https://api.github.com/users/cholcombe973/repos", "events_url": "https://api.github.com/users/cholcombe973/events{/privacy}", "received_events_url": "https://api.github.com/users/cholcombe973/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-08-03T05:04:13Z", "updated_at": "2015-06-16T10:13:32Z", "closed_at": "2015-06-16T10:13:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "After installing zerorpc on linux mint I get this error when trying to use the test server:\n\npython zerorpc --server tcp://_:1234 time\nTraceback (most recent call last):\n  File \"zerorpc\", line 33, in <module>\n    exit(cli.main())\n  File \"/usr/local/lib/python2.7/dist-packages/zerorpc-0.4.3-py2.7.egg/zerorpc/cli.py\", line 271, in main\n    return run_server(args)\n  File \"/usr/local/lib/python2.7/dist-packages/zerorpc-0.4.3-py2.7.egg/zerorpc/cli.py\", line 111, in run_server\n    server = zerorpc.Server(server_obj, heartbeat=args.heartbeat)\n  File \"/usr/local/lib/python2.7/dist-packages/zerorpc-0.4.3-py2.7.egg/zerorpc/core.py\", line 263, in **init**\n    SocketBase.**init**(self, zmq.ROUTER, context)\n  File \"/usr/local/lib/python2.7/dist-packages/zerorpc-0.4.3-py2.7.egg/zerorpc/socket.py\", line 33, in **init**\n    self._context = context or Context.get_instance()\n  File \"/usr/local/lib/python2.7/dist-packages/zerorpc-0.4.3-py2.7.egg/zerorpc/context.py\", line 98, in get_instance\n    Context._instance = Context()\n  File \"/usr/local/lib/python2.7/dist-packages/zerorpc-0.4.3-py2.7.egg/zerorpc/context.py\", line 49, in __init__\n    self._reset_msgid()\n  File \"/usr/local/lib/python2.7/dist-packages/zerorpc-0.4.3-py2.7.egg/zerorpc/context.py\", line 104, in _reset_msgid\n    self._msg_id_counter_stop = random.randrange(self._msg_id_counter, 2_*32)\n  File \"/usr/local/lib/python2.7/dist-packages/zerorpc-0.4.3-py2.7.egg/zerorpc/context.py\", line 81, in _msg_id_counter\n    return self.__dict__['_msg_id_counter']\nKeyError: '_msg_id_counter'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/66", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/66/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/66/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/66", "id": 16334149, "node_id": "MDU6SXNzdWUxNjMzNDE0OQ==", "number": 66, "title": "Attribute error __name__", "user": {"login": "octaviordz", "id": 348729, "node_id": "MDQ6VXNlcjM0ODcyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/348729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/octaviordz", "html_url": "https://github.com/octaviordz", "followers_url": "https://api.github.com/users/octaviordz/followers", "following_url": "https://api.github.com/users/octaviordz/following{/other_user}", "gists_url": "https://api.github.com/users/octaviordz/gists{/gist_id}", "starred_url": "https://api.github.com/users/octaviordz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/octaviordz/subscriptions", "organizations_url": "https://api.github.com/users/octaviordz/orgs", "repos_url": "https://api.github.com/users/octaviordz/repos", "events_url": "https://api.github.com/users/octaviordz/events{/privacy}", "received_events_url": "https://api.github.com/users/octaviordz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-07-03T18:41:08Z", "updated_at": "2015-06-16T10:13:17Z", "closed_at": "2015-06-16T10:13:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\nI'm a trying to expose an object. (that I didn't build) but zerorpc fails with an AttributeError complaining about __name__.\n\nAs I have looked at the code I know that the problem is caused because my object's super class has a code like this (simplified):\n\n``` python\ndef get_connection(self):\n        if self.con is None:\n            self.con = sqlite.connect()\n        return self.con\n\nconnection = property(get_connection, None)\n```\n\nSo I wonder, zerorpc can only expose objects that only have methods. \nIf that is the case I know that I can wrap my object in other that only has the methods so zerorpc can work. \nWant to know what is common practice in zerorpc.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/65", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/65/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/65/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/65", "id": 16247602, "node_id": "MDU6SXNzdWUxNjI0NzYwMg==", "number": 65, "title": "Auto-configuration with zerorpc helper", "user": {"login": "jpetazzo", "id": 171481, "node_id": "MDQ6VXNlcjE3MTQ4MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/171481?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpetazzo", "html_url": "https://github.com/jpetazzo", "followers_url": "https://api.github.com/users/jpetazzo/followers", "following_url": "https://api.github.com/users/jpetazzo/following{/other_user}", "gists_url": "https://api.github.com/users/jpetazzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpetazzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpetazzo/subscriptions", "organizations_url": "https://api.github.com/users/jpetazzo/orgs", "repos_url": "https://api.github.com/users/jpetazzo/repos", "events_url": "https://api.github.com/users/jpetazzo/events{/privacy}", "received_events_url": "https://api.github.com/users/jpetazzo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-07-02T04:22:37Z", "updated_at": "2015-06-16T10:12:12Z", "closed_at": "2015-06-16T10:12:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `zerorpc` helper is very helpful (eh!), and actually, I start 99% of the ZeroRPC servers that I write with `zerorpc --server`, rather than writing a custom script.\n\nHowever, I also want to do the following:\n- enable a specific middleware;\n- configure `logging`.\n\nI currently work around the problem by enabling middlewares and setting up logging within the module loaded by `zerorpc --server`; but this leads to code repetition, and is therefore a Bad Thing.\n\nI would love to have (at least) one of the following options:\n- the `zerorpc` helper would automatically try to import a module named `zerorpc_settings` (and fail silently if this raises an `ImportError`);\n- the `zerorpc` helper would automatically try to import the module indicated by the environment variable `ZERORPC_SETTINGS_MODULE` (if it is set);\n- the `zerorpc` helper would allow an optional command-line flag, `--settings`, indicating the name of the module to import;\n- if just importing a module feels weak, we could specify a callable instead (and the environment variable would become `ZERORPC_SETTINGS_CALLABLE`).\n\nI'm willing to implement any of those, as long as I know that it has a chance to be merged (provided that the implementation isn't ugly nor kill baby seals).\n\nWhat do you think, @bombela ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/63", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/63/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/63/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/63", "id": 15262278, "node_id": "MDU6SXNzdWUxNTI2MjI3OA==", "number": 63, "title": "Heartbeat trying to emit on None object", "user": {"login": "maxekman", "id": 821518, "node_id": "MDQ6VXNlcjgyMTUxOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/821518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxekman", "html_url": "https://github.com/maxekman", "followers_url": "https://api.github.com/users/maxekman/followers", "following_url": "https://api.github.com/users/maxekman/following{/other_user}", "gists_url": "https://api.github.com/users/maxekman/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxekman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxekman/subscriptions", "organizations_url": "https://api.github.com/users/maxekman/orgs", "repos_url": "https://api.github.com/users/maxekman/repos", "events_url": "https://api.github.com/users/maxekman/events{/privacy}", "received_events_url": "https://api.github.com/users/maxekman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2013-06-07T08:30:20Z", "updated_at": "2015-06-16T10:11:46Z", "closed_at": "2015-06-16T10:11:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "This happens from time to time with 40+ clients that all have a lot of network and cpu load. I  have no idea it this causes the request to fail, but I'm sure it crashes the current (heartbeat?) greenlet, which is never a good thing.\n\n```\nTraceback (most recent call last):\n  File \"/madcrew/applications/software/virtualenvs/otis_v0_1_0-linux/lib/python2.7/site-packages/gevent/greenl\net.py\", line 328, in run\n    result = self._run(*self.args, **self.kwargs)\n  File \"/madcrew/applications/software/virtualenvs/otis_v0_1_0-linux/lib/python2.7/site-packages/zerorpc/heart\nbeat.py\", line 79, in _heartbeat\n    self._channel.emit('_zpc_hb', (0,))  # 0 -> compat with protocol v2\nAttributeError: 'NoneType' object has no attribute 'emit'\n<Greenlet at 0x70a7370: <bound method HeartBeatOnChannel._heartbeat of <zerorpc.heartbeat.HeartBeatOnChannel o\nbject at 0x88c4c90>>> failed with AttributeError\n```\n\nWe also get a lot of these, but I suspect we are to aggressive calling combined with a high network load, which makes it acceptable:\n\n```\n/!\\ gevent_zeromq BUG /!\\ catching up after missing event (RECV) /!\\\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/62", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/62/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/62/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/62", "id": 15137777, "node_id": "MDU6SXNzdWUxNTEzNzc3Nw==", "number": 62, "title": "LostRemote exceptions while using gevent.zeorpc", "user": {"login": "grzn", "id": 175126, "node_id": "MDQ6VXNlcjE3NTEyNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/175126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grzn", "html_url": "https://github.com/grzn", "followers_url": "https://api.github.com/users/grzn/followers", "following_url": "https://api.github.com/users/grzn/following{/other_user}", "gists_url": "https://api.github.com/users/grzn/gists{/gist_id}", "starred_url": "https://api.github.com/users/grzn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grzn/subscriptions", "organizations_url": "https://api.github.com/users/grzn/orgs", "repos_url": "https://api.github.com/users/grzn/repos", "events_url": "https://api.github.com/users/grzn/events{/privacy}", "received_events_url": "https://api.github.com/users/grzn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2013-06-04T19:56:34Z", "updated_at": "2013-06-11T03:25:48Z", "closed_at": "2013-06-10T07:46:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We've been experiencing issues with zerorpc and gevent.subprocess.\n\nConsider the following test:\n\n```\nfrom unittest import TestCase\nfrom time import time\nfrom gevent import spawn, sleep, event\nfrom gevent.subprocess import Popen\nfrom zerorpc import Server, Client\n\n\nclass Service(object):\n    def get_nothing(self):\n        pass\n\n\nclass BackgroundJobTestCase(TestCase):\n    def setUp(self):\n        self.stop_event = event.Event()\n        self.background_job = spawn(self._start_job)\n\n    def _start_job(self):\n        while not self.stop_event.is_set():\n            Popen(\"sleep 1\", shell=True).wait()  # this does not work\n            # sleep(1)  # this works\n\n    def tearDown(self):\n        self.stop_event.set()\n        self.background_job = self.background_job.join()\n\n    def test_rpc_with_background_job_for_longer_periods(self, duration_in_seconds=600):\n        server = Server(Service())\n        server.bind(\"tcp://0.0.0.0:7001\")\n        server._acceptor_task = spawn(server._acceptor)  # do not worry about teardown - the test fails in the middle\n        client = Client()\n        client.connect(\"tcp://0.0.0.0:7001\")\n        start_time = time()\n        while abs(time() - start_time) <= duration_in_seconds:\n            client.get_nothing()\n```\n\nRunning this on CentOS 6.4 fails with:\n\n```\nbin/nosetests tests/long_tests/zerorpc_and_subprocess.py                   13-06-04 19:50\nTraceback (most recent call last):\n  File \"/root/mainline/eggs/gevent-1.0rc2-py2.7-linux-x86_64.egg/gevent/greenlet.py\", line 328, in run\n    result = self._run(*self.args, **self.kwargs)\n  File \"/root/mainline/eggs/zerorpc-0.4.1.2-py2.7.egg/zerorpc/events.py\", line 63, in _sender\n    self._socket.send(parts[-1])\n  File \"/root/mainline/eggs/zerorpc-0.4.1.2-py2.7.egg/zerorpc/gevent_zmq.py\", line 104, in send\n    self._on_state_changed()\n  File \"/root/mainline/eggs/zerorpc-0.4.1.2-py2.7.egg/zerorpc/gevent_zmq.py\", line 72, in _on_state_changed\n    events = self.getsockopt(_zmq.EVENTS)\n  File \"socket.pyx\", line 388, in zmq.core.socket.Socket.get (zmq/core/socket.c:3713)\n  File \"checkrc.pxd\", line 21, in zmq.core.checkrc._check_rc (zmq/core/socket.c:5859)\nZMQError: Interrupted system call\n<Greenlet at 0x284c5f0: <bound method Sender._sender of <zerorpc.events.Sender object at 0x2864a50>>> failed with ZMQError\n\nE\n======================================================================\nERROR: test_rpc_with_background_job_for_longer_periods (zerorpc_and_subprocess.BackgroundJobTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/root/mainline/tests/long_tests/zerorpc_and_subprocess.py\", line 37, in test_rpc_with_background_job_for_longer_periods\n    client.get_nothing()\n  File \"/root/mainline/eggs/zerorpc-0.4.1.2-py2.7.egg/zerorpc/core.py\", line 256, in <lambda>\n    return lambda *args, **kargs: self(method, *args, **kargs)\n  File \"/root/mainline/eggs/zerorpc-0.4.1.2-py2.7.egg/zerorpc/core.py\", line 241, in __call__\n    return self._process_response(request_event, bufchan, timeout)\n  File \"/root/mainline/eggs/zerorpc-0.4.1.2-py2.7.egg/zerorpc/core.py\", line 213, in _process_response\n    reply_event = bufchan.recv(timeout)\n  File \"/root/mainline/eggs/zerorpc-0.4.1.2-py2.7.egg/zerorpc/channel.py\", line 262, in recv\n    event = self._input_queue.get(timeout=timeout)\n  File \"/root/mainline/eggs/gevent-1.0rc2-py2.7-linux-x86_64.egg/gevent/queue.py\", line 200, in get\n    result = waiter.get()\n  File \"/root/mainline/eggs/gevent-1.0rc2-py2.7-linux-x86_64.egg/gevent/hub.py\", line 568, in get\n    return self.hub.switch()\n  File \"/root/mainline/eggs/gevent-1.0rc2-py2.7-linux-x86_64.egg/gevent/hub.py\", line 331, in switch\n    return greenlet.switch(self)\nLostRemote: Lost remote after 10s heartbeat\n\n----------------------------------------------------------------------\nRan 1 test in 102.469s\n\nFAILED (errors=1)\n```\n\nwith gevent-1.0rc2 and zerorpc-0.4.1\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/60", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/60/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/60/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/60", "id": 12858551, "node_id": "MDU6SXNzdWUxMjg1ODU1MQ==", "number": 60, "title": "Perl implementation", "user": {"login": "robinsmidsrod", "id": 92816, "node_id": "MDQ6VXNlcjkyODE2", "avatar_url": "https://avatars2.githubusercontent.com/u/92816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robinsmidsrod", "html_url": "https://github.com/robinsmidsrod", "followers_url": "https://api.github.com/users/robinsmidsrod/followers", "following_url": "https://api.github.com/users/robinsmidsrod/following{/other_user}", "gists_url": "https://api.github.com/users/robinsmidsrod/gists{/gist_id}", "starred_url": "https://api.github.com/users/robinsmidsrod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robinsmidsrod/subscriptions", "organizations_url": "https://api.github.com/users/robinsmidsrod/orgs", "repos_url": "https://api.github.com/users/robinsmidsrod/repos", "events_url": "https://api.github.com/users/robinsmidsrod/events{/privacy}", "received_events_url": "https://api.github.com/users/robinsmidsrod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-04-05T18:42:43Z", "updated_at": "2015-06-16T10:11:07Z", "closed_at": "2015-06-16T10:11:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm considering to create a Perl implementation of ZeroRPC.\n\nWhere can I find documentation on how ZeroMQ and MessagePack is wired together to create ZeroRPC?\n\nIs there a formal protocol definition documented anywhere?\n\nHow do you handle encryption and authentication between the endpoints, or is that outside the scope of the protocol?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/58", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/58/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/58/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/58", "id": 11475157, "node_id": "MDU6SXNzdWUxMTQ3NTE1Nw==", "number": 58, "title": "No documentation for installation issue with latest pyzmq", "user": {"login": "yotommy", "id": 1391583, "node_id": "MDQ6VXNlcjEzOTE1ODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1391583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yotommy", "html_url": "https://github.com/yotommy", "followers_url": "https://api.github.com/users/yotommy/followers", "following_url": "https://api.github.com/users/yotommy/following{/other_user}", "gists_url": "https://api.github.com/users/yotommy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yotommy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yotommy/subscriptions", "organizations_url": "https://api.github.com/users/yotommy/orgs", "repos_url": "https://api.github.com/users/yotommy/repos", "events_url": "https://api.github.com/users/yotommy/events{/privacy}", "received_events_url": "https://api.github.com/users/yotommy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-02-27T21:18:22Z", "updated_at": "2013-06-10T04:36:08Z", "closed_at": "2013-06-10T04:36:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I followed the instructions to install zerorpc, but when I ran the Hello World examples, I encountered issue 56.  Would have helped to have some documented warning.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/56", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/56/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/56/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/56", "id": 11292254, "node_id": "MDU6SXNzdWUxMTI5MjI1NA==", "number": 56, "title": "zerorpc not working now with pyzmq-13.0.0 released", "user": {"login": "grzn", "id": 175126, "node_id": "MDQ6VXNlcjE3NTEyNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/175126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grzn", "html_url": "https://github.com/grzn", "followers_url": "https://api.github.com/users/grzn/followers", "following_url": "https://api.github.com/users/grzn/following{/other_user}", "gists_url": "https://api.github.com/users/grzn/gists{/gist_id}", "starred_url": "https://api.github.com/users/grzn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grzn/subscriptions", "organizations_url": "https://api.github.com/users/grzn/orgs", "repos_url": "https://api.github.com/users/grzn/repos", "events_url": "https://api.github.com/users/grzn/events{/privacy}", "received_events_url": "https://api.github.com/users/grzn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2013-02-22T16:24:02Z", "updated_at": "2013-10-16T23:12:41Z", "closed_at": "2013-06-10T04:36:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Just created a virtualenv, and easy_install'ed zeropc and tried running the server code from the project's homepage\nIt doesn't work:\n\n```\nzerorpc-with-zmq-13.0.0 \u2b80 18:17:33 \u2b80 guyr-air \u2b80 ...tmp/zeorpc-test \u2b80 python server.py\nTraceback (most recent call last):\n  File \"server.py\", line 7, in <module>\n    s = zerorpc.Server(HelloRPC())\n  File \"/usr/local/virtualenvs/zerorpc-with-zmq-13.0.0/lib/python2.7/site-packages/zerorpc-0.4.1-py2.7.egg/zerorpc/core    .py\", line 263, in __init__    \n    SocketBase.__init__(self, zmq.XREP, context)\nAttributeError: 'module' object has no attribute 'XREP'\n```\n\nThis started happening today, after pyzmq uploaded 0.13.0.0\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/53", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/53/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/53/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/53", "id": 10340276, "node_id": "MDU6SXNzdWUxMDM0MDI3Ng==", "number": 53, "title": "Async doesn't return timeout exception.", "user": {"login": "jvangael", "id": 95922, "node_id": "MDQ6VXNlcjk1OTIy", "avatar_url": "https://avatars1.githubusercontent.com/u/95922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvangael", "html_url": "https://github.com/jvangael", "followers_url": "https://api.github.com/users/jvangael/followers", "following_url": "https://api.github.com/users/jvangael/following{/other_user}", "gists_url": "https://api.github.com/users/jvangael/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvangael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvangael/subscriptions", "organizations_url": "https://api.github.com/users/jvangael/orgs", "repos_url": "https://api.github.com/users/jvangael/repos", "events_url": "https://api.github.com/users/jvangael/events{/privacy}", "received_events_url": "https://api.github.com/users/jvangael/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-01-26T17:08:28Z", "updated_at": "2013-01-28T14:55:10Z", "closed_at": "2013-01-27T02:12:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running a very simple server as such:\n\n```\nimport zerorpc\nimport gevent\n\n\nclass TestServer:\n    def test(self, sentence):\n        gevent.sleep(31)\n        return sentence + \"done\"\n\ns = zerorpc.Server(TestServer())\ns.bind(\"tcp://0.0.0.0:8003\")\ns.run()\n```\n\nwhen I connect with a client\n    oc = zerorpc.Client(connect_to=\"tcp://127.0.0.1:8003\")\n    oc.test('whats up')\n\nI get a TimeoutExpired exception as I was expecting. However, when I use the following code\n    oc = zerorpc.Client(connect_to=\"tcp://127.0.0.1:8003\")\n    oc.test('whats up', async=True).wait()\n\nI get the error \"AttributeError: 'str' object has no attribute 'name'\" in core.py line 220. This was a bit unexpected and I was wondering whether anyone else is seeing the same?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/51", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/51/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/51/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/51", "id": 10059403, "node_id": "MDU6SXNzdWUxMDA1OTQwMw==", "number": 51, "title": "Only require argparse if python < 2.7", "user": {"login": "maxekman", "id": 821518, "node_id": "MDQ6VXNlcjgyMTUxOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/821518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxekman", "html_url": "https://github.com/maxekman", "followers_url": "https://api.github.com/users/maxekman/followers", "following_url": "https://api.github.com/users/maxekman/following{/other_user}", "gists_url": "https://api.github.com/users/maxekman/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxekman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxekman/subscriptions", "organizations_url": "https://api.github.com/users/maxekman/orgs", "repos_url": "https://api.github.com/users/maxekman/repos", "events_url": "https://api.github.com/users/maxekman/events{/privacy}", "received_events_url": "https://api.github.com/users/maxekman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-01-17T14:10:24Z", "updated_at": "2013-01-27T02:14:33Z", "closed_at": "2013-01-27T02:14:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems unnecessary to require argparse for python 2.7 and above as that is included in the standard libraries. Or is there another reason for always having it as a dependency?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/48", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/48/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/48/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/48", "id": 9302450, "node_id": "MDU6SXNzdWU5MzAyNDUw", "number": 48, "title": "ZeroRPC crashes when msgpack tries to unpack wrong/corrupted messages", "user": {"login": "lopter", "id": 152398, "node_id": "MDQ6VXNlcjE1MjM5OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/152398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lopter", "html_url": "https://github.com/lopter", "followers_url": "https://api.github.com/users/lopter/followers", "following_url": "https://api.github.com/users/lopter/following{/other_user}", "gists_url": "https://api.github.com/users/lopter/gists{/gist_id}", "starred_url": "https://api.github.com/users/lopter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lopter/subscriptions", "organizations_url": "https://api.github.com/users/lopter/orgs", "repos_url": "https://api.github.com/users/lopter/repos", "events_url": "https://api.github.com/users/lopter/events{/privacy}", "received_events_url": "https://api.github.com/users/lopter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 250734, "node_id": "MDU6TGFiZWwyNTA3MzQ=", "url": "https://api.github.com/repos/0rpc/zerorpc-python/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-12-15T01:11:00Z", "updated_at": "2013-01-27T02:36:01Z", "closed_at": "2013-01-27T02:36:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We had a few zeroservice crashing on this recently:\n\n```\nTraceback (most recent call last):\n  File \"/home/dotcloud/env/lib/python2.6/site-packages/gevent/greenlet.py\", line 390, in run\n    result = self._run(*self.args, **self.kwargs)\n  File \"/home/dotcloud/env/lib/python2.6/site-packages/gevent_zerorpc/zerorpc/channel.py\", line 76, in _channel_dispatcher\n    event = self._events.recv()\n  File \"/home/dotcloud/env/lib/python2.6/site-packages/gevent_zerorpc/zerorpc/events.py\", line 252, in recv\n    event = Event.unpack(blob)\n  File \"/home/dotcloud/env/lib/python2.6/site-packages/gevent_zerorpc/zerorpc/events.py\", line 147, in unpack\n    (header, name, args) = unpacker.unpack()\nTypeError: 'int' object is not iterable\n<Greenlet at 0x136b690: <bound method ChannelMultiplexer._channel_dispatcher of <gevent_zerorpc.zerorpc.channel.ChannelMultiplexer object at 0x1477810>>> failed with TypeError\n```\n\nI don't know how it exactly happened, but ZeroRPC shouldn't crash on bad input here.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/47", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/47/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/47/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/47", "id": 9270959, "node_id": "MDU6SXNzdWU5MjcwOTU5", "number": 47, "title": "Add pub/sub sample to the documentation page: http://zerorpc.dotcloud.com", "user": {"login": "deckarep", "id": 200686, "node_id": "MDQ6VXNlcjIwMDY4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/200686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deckarep", "html_url": "https://github.com/deckarep", "followers_url": "https://api.github.com/users/deckarep/followers", "following_url": "https://api.github.com/users/deckarep/following{/other_user}", "gists_url": "https://api.github.com/users/deckarep/gists{/gist_id}", "starred_url": "https://api.github.com/users/deckarep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deckarep/subscriptions", "organizations_url": "https://api.github.com/users/deckarep/orgs", "repos_url": "https://api.github.com/users/deckarep/repos", "events_url": "https://api.github.com/users/deckarep/events{/privacy}", "received_events_url": "https://api.github.com/users/deckarep/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-12-13T23:34:29Z", "updated_at": "2015-06-16T10:07:04Z", "closed_at": "2015-06-16T10:07:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI think this library is amazing and am very impressed with the idea behind zerorpc.  The problem is I'm trying to understand how to properly implement the pub/sub pattern with zerorpc. \n\nI know there are tests that illustrate this, but I can't figure out how to take the test and separate the logic into a real world example like the examples you have on http://zerorpc.dotcloud.com page.\n\nI would submit a patch of documentation if I understand the way it works myself but so far I can't figure it out.\n\nAlso, how can I safely release or close a a zerorpc connection?  If I Ctrl-Z the app while it's running the address doesn't get release and I get Address In Use errors from ZMQ.   At this point, I can't restart the process.  I see how you guys deal with it in the test documents by creating a random ipc channel each time the test is run but how is the deal with, when tcp addresses are dedicated and you need to restart or recover from a crash.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/42", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/42/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/42/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/42", "id": 7076035, "node_id": "MDU6SXNzdWU3MDc2MDM1", "number": 42, "title": "As of pyzmq 2.2.0.1 pyzmq-static is deprecated", "user": {"login": "dobrite", "id": 1541631, "node_id": "MDQ6VXNlcjE1NDE2MzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1541631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dobrite", "html_url": "https://github.com/dobrite", "followers_url": "https://api.github.com/users/dobrite/followers", "following_url": "https://api.github.com/users/dobrite/following{/other_user}", "gists_url": "https://api.github.com/users/dobrite/gists{/gist_id}", "starred_url": "https://api.github.com/users/dobrite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dobrite/subscriptions", "organizations_url": "https://api.github.com/users/dobrite/orgs", "repos_url": "https://api.github.com/users/dobrite/repos", "events_url": "https://api.github.com/users/dobrite/events{/privacy}", "received_events_url": "https://api.github.com/users/dobrite/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-09-23T23:44:44Z", "updated_at": "2012-11-22T22:51:16Z", "closed_at": "2012-11-22T22:51:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "pyzmq rolled pyzmq-static into itself meaning pyzmq will look for an installed version of zmq and compile if needed.\n\nhttps://github.com/zeromq/pyzmq/pull/205\n\nThis fixes #6 and maybe #7.\n\nI ran the zerorpc's test suite with pyzmq 2.2.0.1 in a fresh virtualenv and it passed (but don't take my word).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/41", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/41/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/41/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/41", "id": 7072918, "node_id": "MDU6SXNzdWU3MDcyOTE4", "number": 41, "title": "Fix first example in README", "user": {"login": "trey0", "id": 190582, "node_id": "MDQ6VXNlcjE5MDU4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/190582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trey0", "html_url": "https://github.com/trey0", "followers_url": "https://api.github.com/users/trey0/followers", "following_url": "https://api.github.com/users/trey0/following{/other_user}", "gists_url": "https://api.github.com/users/trey0/gists{/gist_id}", "starred_url": "https://api.github.com/users/trey0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trey0/subscriptions", "organizations_url": "https://api.github.com/users/trey0/orgs", "repos_url": "https://api.github.com/users/trey0/repos", "events_url": "https://api.github.com/users/trey0/events{/privacy}", "received_events_url": "https://api.github.com/users/trey0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-09-23T17:01:23Z", "updated_at": "2013-11-11T16:28:48Z", "closed_at": "2012-09-23T20:39:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "In my environment this command from the first example in the README fails:\n\nzerorpc --client --connect tcp://*:1234 strftime %Y/%m/%d\n\nIt works fine if the \"*\" is replaced with \"localhost\".\n\nEnvironment:\n  Mac OS X 10.6.8\n  Python 2.7.3 (MacPorts)\n  zerorpc 0.3.0\n  pyzmq_static 2.2\n\nTraceback:\n\nconnecting to \"tcp://*:1234\"\nTraceback (most recent call last):\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/bin/zerorpc\", line 274, in <module>\n    exit(main())\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/bin/zerorpc\", line 265, in main\n    return run_client(args)\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/bin/zerorpc\", line 207, in run_client\n    setup_links(args, client)\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/bin/zerorpc\", line 94, in setup_links\n    socket.connect(endpoint)\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/zerorpc/socket.py\", line 40, in connect\n    return self._events.connect(endpoint, resolve)\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/zerorpc/events.py\", line 212, in connect\n    r.append(self._socket.connect(endpoint_))\n  File \"socket.pyx\", line 475, in zmq.core.socket.Socket.connect (zmq/core/socket.c:4508)\nzmq.core.error.ZMQError: Invalid argument\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/39", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/39/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/39/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/39", "id": 6048048, "node_id": "MDU6SXNzdWU2MDQ4MDQ4", "number": 39, "title": "question about recv function in gevent_zmq.py", "user": {"login": "Jeff17Robbins", "id": 2102919, "node_id": "MDQ6VXNlcjIxMDI5MTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2102919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jeff17Robbins", "html_url": "https://github.com/Jeff17Robbins", "followers_url": "https://api.github.com/users/Jeff17Robbins/followers", "following_url": "https://api.github.com/users/Jeff17Robbins/following{/other_user}", "gists_url": "https://api.github.com/users/Jeff17Robbins/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jeff17Robbins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jeff17Robbins/subscriptions", "organizations_url": "https://api.github.com/users/Jeff17Robbins/orgs", "repos_url": "https://api.github.com/users/Jeff17Robbins/repos", "events_url": "https://api.github.com/users/Jeff17Robbins/events{/privacy}", "received_events_url": "https://api.github.com/users/Jeff17Robbins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2012-08-06T11:38:37Z", "updated_at": "2012-08-06T20:03:23Z", "closed_at": "2012-08-06T19:48:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was wondering what this bit of code is for at the end of the recv function in gevent_zmq.py:\n\n```\n        self._readable.clear()\n        while not self._readable.wait(timeout=0.5):\n            events = self.getsockopt(_zmq.EVENTS)\n            if bool(events & _zmq.POLLIN):\n                print \"/!\\\\ gevent_zeromq BUG /!\\\\ \" \\\n                    \"catching after missing event /!\\\\\"\n                break\n```\n\nIn testing with a couple of sample apps, I hit the print statement once (not reproducible so far...)  I was testing making and breaking client tcp connections from a server.  I'm running on Windows Vista. \n\nWhat does \"catching after missing event\" mean?  What conditions/assumptions are being violated here?\n\nThanks,\nJeff\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/38", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/38/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/38/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/38", "id": 5327947, "node_id": "MDU6SXNzdWU1MzI3OTQ3", "number": 38, "title": "New _zerorpc_inspect should not include self as an argument", "user": {"login": "ysimonson", "id": 127386, "node_id": "MDQ6VXNlcjEyNzM4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/127386?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ysimonson", "html_url": "https://github.com/ysimonson", "followers_url": "https://api.github.com/users/ysimonson/followers", "following_url": "https://api.github.com/users/ysimonson/following{/other_user}", "gists_url": "https://api.github.com/users/ysimonson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ysimonson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ysimonson/subscriptions", "organizations_url": "https://api.github.com/users/ysimonson/orgs", "repos_url": "https://api.github.com/users/ysimonson/repos", "events_url": "https://api.github.com/users/ysimonson/events{/privacy}", "received_events_url": "https://api.github.com/users/ysimonson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-06-28T17:49:57Z", "updated_at": "2018-03-11T00:57:33Z", "closed_at": "2018-03-11T00:57:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "self should not be one of the arguments since it's implicitly provided. This will be more consistent with the behavior of zerorpc-node.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/37", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/37/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/37/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/37", "id": 5312480, "node_id": "MDU6SXNzdWU1MzEyNDgw", "number": 37, "title": "Issues with long-lasting RPC calls", "user": {"login": "makmanalp", "id": 161965, "node_id": "MDQ6VXNlcjE2MTk2NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/161965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/makmanalp", "html_url": "https://github.com/makmanalp", "followers_url": "https://api.github.com/users/makmanalp/followers", "following_url": "https://api.github.com/users/makmanalp/following{/other_user}", "gists_url": "https://api.github.com/users/makmanalp/gists{/gist_id}", "starred_url": "https://api.github.com/users/makmanalp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/makmanalp/subscriptions", "organizations_url": "https://api.github.com/users/makmanalp/orgs", "repos_url": "https://api.github.com/users/makmanalp/repos", "events_url": "https://api.github.com/users/makmanalp/events{/privacy}", "received_events_url": "https://api.github.com/users/makmanalp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2012-06-28T05:01:33Z", "updated_at": "2015-06-16T10:05:48Z", "closed_at": "2015-06-16T10:05:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Test case for Reproduction:\n\n``` python\nimport zerorpc\n\nimport time\nfrom gevent import monkey; monkey.patch_all()                                                                                                                                                           \n\nclass Foo(object):\n\n    def wait(self):\n        print \"Start waitin\"\n        time.sleep(15)\n        print \"End waitin\"\n        return \"derp\"\n\ns = zerorpc.Server(Foo())\ns.bind(\"tcp://0.0.0.0:3333\")\ns.run()\n```\n\nand the client:\n\n``` python\nimport zerorpc\n\ns = zerorpc.Client(\"tcp://0.0.0.0:3333\", timeout=3000)                                                                                                                                                      \nprint s.wait()\n```\n\nThe result for me on the server is:\n\n> /!\\ gevent_zeromq BUG /!\\ catching after missing event /!\\\n> zerorpc.ChannelMultiplexer,  unable to route event: _zpc_hb {'response_to': 'e09d15b1-6599-495b-a54d-031e6e7b4039', 'zmqid': ['\\x00\\xa9\\x15J\\x94\\x8b|O\\xf1\\xae\\x17\\xb3M\\x82\\x8b\\xee\\x17'], 'message_id': 'e09d15b4-6599-495b-a54d-031e6e7b4039', 'v': 3} [...]\n\nwhile on the client I get \"derp\" fine. Without the monkey patch, predictably, the connection is lost due to lack of heartbeat because sleep blocks.\n\nThis is a simplification of a larger bug I've been having when dealing with a bunch of workers that all call subprocess to spawn an external executable and do something that takes a while. (With the newest gevent from trunk, there is a subprocess monkey patch).\n\nAny ideas? Zerorpc 0.2.1, gevent 1.0.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/35", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/35/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/35/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/35", "id": 5232556, "node_id": "MDU6SXNzdWU1MjMyNTU2", "number": 35, "title": "Support for HTTP server/client", "user": {"login": "mamcx", "id": 238983, "node_id": "MDQ6VXNlcjIzODk4Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/238983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mamcx", "html_url": "https://github.com/mamcx", "followers_url": "https://api.github.com/users/mamcx/followers", "following_url": "https://api.github.com/users/mamcx/following{/other_user}", "gists_url": "https://api.github.com/users/mamcx/gists{/gist_id}", "starred_url": "https://api.github.com/users/mamcx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mamcx/subscriptions", "organizations_url": "https://api.github.com/users/mamcx/orgs", "repos_url": "https://api.github.com/users/mamcx/repos", "events_url": "https://api.github.com/users/mamcx/events{/privacy}", "received_events_url": "https://api.github.com/users/mamcx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-06-23T22:42:16Z", "updated_at": "2015-06-16T10:04:40Z", "closed_at": "2015-06-16T10:04:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "This look very neat, but for develop client the requirements of install 0mq and the rest become complicated. A http/rest interface could be the thing that open this to the world.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/34", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/34/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/34/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/34", "id": 5198602, "node_id": "MDU6SXNzdWU1MTk4NjAy", "number": 34, "title": "Import error when trying to expose python time module", "user": {"login": "vijaykatam", "id": 237636, "node_id": "MDQ6VXNlcjIzNzYzNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/237636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vijaykatam", "html_url": "https://github.com/vijaykatam", "followers_url": "https://api.github.com/users/vijaykatam/followers", "following_url": "https://api.github.com/users/vijaykatam/following{/other_user}", "gists_url": "https://api.github.com/users/vijaykatam/gists{/gist_id}", "starred_url": "https://api.github.com/users/vijaykatam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vijaykatam/subscriptions", "organizations_url": "https://api.github.com/users/vijaykatam/orgs", "repos_url": "https://api.github.com/users/vijaykatam/repos", "events_url": "https://api.github.com/users/vijaykatam/events{/privacy}", "received_events_url": "https://api.github.com/users/vijaykatam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-06-21T16:59:42Z", "updated_at": "2012-06-22T20:13:02Z", "closed_at": "2012-06-22T20:13:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying out zerorpc python first time gave me the following error\n\n<pre>\n$ zerorpc --server --bind tcp://127.0.0.1:1234 timeTraceback (most recent call last):\n  File \"/Users/zzz/virtualenvs/zrpc/bin/zerorpc\", line 34, in <module>\n    import zerorpc\n  File \"/Users/zzz/virtualenvs/zrpc/lib/python2.7/site-packages/zerorpc/__init__.py\", line 27, in <module>\n    from .context import *\n  File \"/Users/zzz/virtualenvs/zrpc/lib/python2.7/site-packages/zerorpc/context.py\", line 30, in <module>\n    import gevent_zmq as zmq\n  File \"/Users/zzz/virtualenvs/zrpc/lib/python2.7/site-packages/zerorpc/gevent_zmq.py\", line 33, in <module>\n    import gevent.event\n  File \"/Users/zzz/virtualenvs/zrpc/lib/python2.7/site-packages/gevent/__init__.py\", line 41, in <module>\n    from gevent import core\nImportError: dlopen(/Users/zzz/virtualenvs/zrpc/lib/python2.7/site-packages/gevent/core.so, 2): Symbol not found: _event_global_current_base_\n  Referenced from: /Users/zzz/virtualenvs/zrpc/lib/python2.7/site-packages/gevent/core.so\n  Expected in: flat namespace\n in /Users/zzz/virtualenvs/zrpc/lib/python2.7/site-packages/gevent/core.so\n</pre>\n\n\nzerorpc version: 0.2.1 \noperating system: OS X 10.7.4 \npython: 2.7\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/32", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/32/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/32/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/32", "id": 5151500, "node_id": "MDU6SXNzdWU1MTUxNTAw", "number": 32, "title": "Support the new _zpc_inspect", "user": {"login": "ysimonson", "id": 127386, "node_id": "MDQ6VXNlcjEyNzM4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/127386?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ysimonson", "html_url": "https://github.com/ysimonson", "followers_url": "https://api.github.com/users/ysimonson/followers", "following_url": "https://api.github.com/users/ysimonson/following{/other_user}", "gists_url": "https://api.github.com/users/ysimonson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ysimonson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ysimonson/subscriptions", "organizations_url": "https://api.github.com/users/ysimonson/orgs", "repos_url": "https://api.github.com/users/ysimonson/repos", "events_url": "https://api.github.com/users/ysimonson/events{/privacy}", "received_events_url": "https://api.github.com/users/ysimonson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2012-06-19T17:15:33Z", "updated_at": "2012-06-28T02:12:30Z", "closed_at": "2012-06-28T02:12:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "zerorpc-node introduces a new introspection method that removes some of the legacy issues, called `_zpc_inspect`. The python version should support this as well.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/31", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/31/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/31/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/31", "id": 5151472, "node_id": "MDU6SXNzdWU1MTUxNDcy", "number": 31, "title": "Separate the CLI interface", "user": {"login": "ysimonson", "id": 127386, "node_id": "MDQ6VXNlcjEyNzM4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/127386?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ysimonson", "html_url": "https://github.com/ysimonson", "followers_url": "https://api.github.com/users/ysimonson/followers", "following_url": "https://api.github.com/users/ysimonson/following{/other_user}", "gists_url": "https://api.github.com/users/ysimonson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ysimonson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ysimonson/subscriptions", "organizations_url": "https://api.github.com/users/ysimonson/orgs", "repos_url": "https://api.github.com/users/ysimonson/repos", "events_url": "https://api.github.com/users/ysimonson/events{/privacy}", "received_events_url": "https://api.github.com/users/ysimonson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-06-19T17:14:00Z", "updated_at": "2015-06-16T10:03:58Z", "closed_at": "2015-06-16T10:03:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Now that we have ZeroRPC bindings in multiple languages, it would make sense for the CLI to be put in a separate repo\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/30", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/30/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/30/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/30", "id": 5151460, "node_id": "MDU6SXNzdWU1MTUxNDYw", "number": 30, "title": "Add documentation on how to use clients programmatically", "user": {"login": "ysimonson", "id": 127386, "node_id": "MDQ6VXNlcjEyNzM4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/127386?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ysimonson", "html_url": "https://github.com/ysimonson", "followers_url": "https://api.github.com/users/ysimonson/followers", "following_url": "https://api.github.com/users/ysimonson/following{/other_user}", "gists_url": "https://api.github.com/users/ysimonson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ysimonson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ysimonson/subscriptions", "organizations_url": "https://api.github.com/users/ysimonson/orgs", "repos_url": "https://api.github.com/users/ysimonson/repos", "events_url": "https://api.github.com/users/ysimonson/events{/privacy}", "received_events_url": "https://api.github.com/users/ysimonson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-06-19T17:13:30Z", "updated_at": "2015-06-16T10:03:41Z", "closed_at": "2015-06-16T10:03:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Servers are documented, but clients aren't.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/29", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/29/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/29/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/29", "id": 5104912, "node_id": "MDU6SXNzdWU1MTA0OTEy", "number": 29, "title": "rpc call with kwargs", "user": {"login": "fortunado", "id": 1151469, "node_id": "MDQ6VXNlcjExNTE0Njk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1151469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fortunado", "html_url": "https://github.com/fortunado", "followers_url": "https://api.github.com/users/fortunado/followers", "following_url": "https://api.github.com/users/fortunado/following{/other_user}", "gists_url": "https://api.github.com/users/fortunado/gists{/gist_id}", "starred_url": "https://api.github.com/users/fortunado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fortunado/subscriptions", "organizations_url": "https://api.github.com/users/fortunado/orgs", "repos_url": "https://api.github.com/users/fortunado/repos", "events_url": "https://api.github.com/users/fortunado/events{/privacy}", "received_events_url": "https://api.github.com/users/fortunado/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2012-06-16T07:53:00Z", "updated_at": "2012-06-19T18:45:29Z", "closed_at": "2012-06-17T11:35:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I've just started using zerorpc, and got stuck trying to use kwargs.\nIt seems to me that sending remote procedure parameters in kwargs is not possible, but supposed to be:\nin ClientBase there is available kwargs:\n\n```\ndef __call__(self, method, *args, **kargs):\n```\n\nbut further:\n\n```\n    bufchan = BufferedChannel(hbchan, inqueue_size=kargs.get('slots', 100))\n    ...\n    bufchan.emit(method, args, xheader)\n```\n\ntransmitting kwargs just disappeared.\nWhy ? Did I miss something ? Are kwargs used for something special ?\n\nThanks in advance.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/28", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/28/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/28/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/28", "id": 4958391, "node_id": "MDU6SXNzdWU0OTU4Mzkx", "number": 28, "title": "Configuring ZMQ Socket Options Not Supported", "user": {"login": "kbourgoin", "id": 136574, "node_id": "MDQ6VXNlcjEzNjU3NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/136574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kbourgoin", "html_url": "https://github.com/kbourgoin", "followers_url": "https://api.github.com/users/kbourgoin/followers", "following_url": "https://api.github.com/users/kbourgoin/following{/other_user}", "gists_url": "https://api.github.com/users/kbourgoin/gists{/gist_id}", "starred_url": "https://api.github.com/users/kbourgoin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kbourgoin/subscriptions", "organizations_url": "https://api.github.com/users/kbourgoin/orgs", "repos_url": "https://api.github.com/users/kbourgoin/repos", "events_url": "https://api.github.com/users/kbourgoin/events{/privacy}", "received_events_url": "https://api.github.com/users/kbourgoin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2012-06-07T20:16:07Z", "updated_at": "2012-06-19T01:43:12Z", "closed_at": "2012-06-12T05:47:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm working with zerorpc, but need to be able to set some zmq socket options.  It don't see a way of doing this without reaching into `SocketBase._events._socket` to call `setsockopt`.  I'd rather not do that in case the non-public members are changed in future versions.\n\nI'd be happy to implement this, but need a little guidance since I'm a bit new to zmq.  This could be implemented as either part of SocketBase or as part of the context.  If part of the context, it would ensure that all subsequent sockets are created with these options.  Looking at the context implementation, maybe a `create_socket` middleware, combined with an override of `Conext.socket()`, could work.\n\nLike I said, I'm fairly new to the project and zmq. I'm going to fork and start hacking on the middleware, but please let me know what makes the most sense.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/26", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/26/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/26/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/26", "id": 4547403, "node_id": "MDU6SXNzdWU0NTQ3NDAz", "number": 26, "title": "Auto discovery", "user": {"login": "maxekman", "id": 821518, "node_id": "MDQ6VXNlcjgyMTUxOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/821518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxekman", "html_url": "https://github.com/maxekman", "followers_url": "https://api.github.com/users/maxekman/followers", "following_url": "https://api.github.com/users/maxekman/following{/other_user}", "gists_url": "https://api.github.com/users/maxekman/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxekman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxekman/subscriptions", "organizations_url": "https://api.github.com/users/maxekman/orgs", "repos_url": "https://api.github.com/users/maxekman/repos", "events_url": "https://api.github.com/users/maxekman/events{/privacy}", "received_events_url": "https://api.github.com/users/maxekman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-05-12T14:52:46Z", "updated_at": "2012-05-17T21:55:20Z", "closed_at": "2012-05-17T21:55:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noted in your PyCon talk that you have looked at auto discovery functionality.\n\nWhen I looked for something similar to use in the meantime I found this, which might be of interest to you:\n\nhttp://code.google.com/p/minusconf/\n\nSeems to be a very minimalistic and robust approach without any dependencies.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/24", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/24/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/24/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/24", "id": 4467786, "node_id": "MDU6SXNzdWU0NDY3Nzg2", "number": 24, "title": "Test failure with msgpack-python==0.1.13", "user": {"login": "msabramo", "id": 305268, "node_id": "MDQ6VXNlcjMwNTI2OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/305268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msabramo", "html_url": "https://github.com/msabramo", "followers_url": "https://api.github.com/users/msabramo/followers", "following_url": "https://api.github.com/users/msabramo/following{/other_user}", "gists_url": "https://api.github.com/users/msabramo/gists{/gist_id}", "starred_url": "https://api.github.com/users/msabramo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msabramo/subscriptions", "organizations_url": "https://api.github.com/users/msabramo/orgs", "repos_url": "https://api.github.com/users/msabramo/repos", "events_url": "https://api.github.com/users/msabramo/events{/privacy}", "received_events_url": "https://api.github.com/users/msabramo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bombela", "id": 216204, "node_id": "MDQ6VXNlcjIxNjIwNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/216204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bombela", "html_url": "https://github.com/bombela", "followers_url": "https://api.github.com/users/bombela/followers", "following_url": "https://api.github.com/users/bombela/following{/other_user}", "gists_url": "https://api.github.com/users/bombela/gists{/gist_id}", "starred_url": "https://api.github.com/users/bombela/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bombela/subscriptions", "organizations_url": "https://api.github.com/users/bombela/orgs", "repos_url": "https://api.github.com/users/bombela/repos", "events_url": "https://api.github.com/users/bombela/events{/privacy}", "received_events_url": "https://api.github.com/users/bombela/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bombela", "id": 216204, "node_id": "MDQ6VXNlcjIxNjIwNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/216204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bombela", "html_url": "https://github.com/bombela", "followers_url": "https://api.github.com/users/bombela/followers", "following_url": "https://api.github.com/users/bombela/following{/other_user}", "gists_url": "https://api.github.com/users/bombela/gists{/gist_id}", "starred_url": "https://api.github.com/users/bombela/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bombela/subscriptions", "organizations_url": "https://api.github.com/users/bombela/orgs", "repos_url": "https://api.github.com/users/bombela/repos", "events_url": "https://api.github.com/users/bombela/events{/privacy}", "received_events_url": "https://api.github.com/users/bombela/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2012-05-08T06:37:09Z", "updated_at": "2012-05-12T05:28:31Z", "closed_at": "2012-05-12T05:28:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "(tests.test_reqstream.test_rcp_streaming) fails for me (TypeError: can't serialize xrange(10)) with msgpack-python==0.1.13.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/20", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/20/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/20/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/20", "id": 4338420, "node_id": "MDU6SXNzdWU0MzM4NDIw", "number": 20, "title": "Deployment", "user": {"login": "gane5h", "id": 182680, "node_id": "MDQ6VXNlcjE4MjY4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/182680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gane5h", "html_url": "https://github.com/gane5h", "followers_url": "https://api.github.com/users/gane5h/followers", "following_url": "https://api.github.com/users/gane5h/following{/other_user}", "gists_url": "https://api.github.com/users/gane5h/gists{/gist_id}", "starred_url": "https://api.github.com/users/gane5h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gane5h/subscriptions", "organizations_url": "https://api.github.com/users/gane5h/orgs", "repos_url": "https://api.github.com/users/gane5h/repos", "events_url": "https://api.github.com/users/gane5h/events{/privacy}", "received_events_url": "https://api.github.com/users/gane5h/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2012-04-29T00:46:31Z", "updated_at": "2012-05-01T19:03:08Z", "closed_at": "2012-05-01T19:03:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "How are you guys deploying these services? I'm wondering about configuration, start/stop/reload and monitoring. Thanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/19", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/19/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/19/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/19", "id": 4226394, "node_id": "MDU6SXNzdWU0MjI2Mzk0", "number": 19, "title": "Distracting print output in pypi release", "user": {"login": "maxekman", "id": 821518, "node_id": "MDQ6VXNlcjgyMTUxOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/821518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxekman", "html_url": "https://github.com/maxekman", "followers_url": "https://api.github.com/users/maxekman/followers", "following_url": "https://api.github.com/users/maxekman/following{/other_user}", "gists_url": "https://api.github.com/users/maxekman/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxekman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxekman/subscriptions", "organizations_url": "https://api.github.com/users/maxekman/orgs", "repos_url": "https://api.github.com/users/maxekman/repos", "events_url": "https://api.github.com/users/maxekman/events{/privacy}", "received_events_url": "https://api.github.com/users/maxekman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-04-21T22:40:25Z", "updated_at": "2012-04-22T03:50:31Z", "closed_at": "2012-04-22T03:50:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed that the pypi version has some stray print statements which are removed in the repo code. They are very distracting and clutters up the output in the console. I have located them in zerorpc/core.py:148, but as you have removed in the repo them you probably already know about it. Could you release a new pypi verison without them?\n\n``` python\ndef _acceptor(self):\n        try:\n            while True:\n                print '_acceptor read...'\n                initial_event = self._multiplexer.recv()\n                print '_acceptor read:', initial_event\n                self._task_pool.spawn(self._async_task, initial_event)\n        except BaseException as e:\n            print '_acceptor', e\n            raise\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/11", "repository_url": "https://api.github.com/repos/0rpc/zerorpc-python", "labels_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/11/comments", "events_url": "https://api.github.com/repos/0rpc/zerorpc-python/issues/11/events", "html_url": "https://github.com/0rpc/zerorpc-python/issues/11", "id": 3740691, "node_id": "MDU6SXNzdWUzNzQwNjkx", "number": 11, "title": "Timeout message prints {0} instead of the number of seconds", "user": {"login": "msabramo", "id": 305268, "node_id": "MDQ6VXNlcjMwNTI2OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/305268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msabramo", "html_url": "https://github.com/msabramo", "followers_url": "https://api.github.com/users/msabramo/followers", "following_url": "https://api.github.com/users/msabramo/following{/other_user}", "gists_url": "https://api.github.com/users/msabramo/gists{/gist_id}", "starred_url": "https://api.github.com/users/msabramo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msabramo/subscriptions", "organizations_url": "https://api.github.com/users/msabramo/orgs", "repos_url": "https://api.github.com/users/msabramo/repos", "events_url": "https://api.github.com/users/msabramo/events{/privacy}", "received_events_url": "https://api.github.com/users/msabramo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-03-21T05:35:06Z", "updated_at": "2012-03-21T05:54:55Z", "closed_at": "2012-03-21T05:54:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\n(zerorpc)[last: 30] marca@SCML-MarcA:~/python$ zerorpc-client tcp://localhost:1234 quote \"hello world\"\nconnecting to \"tcp://localhost:1234\"\nTraceback (most recent call last):\n  File \"/Users/marca/python/zerorpc/bin/zerorpc-client\", line 7, in <module>\n    execfile(__file__)\n  File \"/Users/marca/dev/git-repos/zerorpc-python/bin/zerorpc-client\", line 222, in <module>\n    exit(main())\n  File \"/Users/marca/dev/git-repos/zerorpc-python/bin/zerorpc-client\", line 218, in main\n    return run_client(args)\n  File \"/Users/marca/dev/git-repos/zerorpc-python/bin/zerorpc-client\", line 187, in run_client\n    results = client(args.command, *call_args)\n  File \"/Users/marca/dev/git-repos/zerorpc-python/zerorpc/core.py\", line 304, in __call__\n    return self._process_response(method, socket, timeout)\n  File \"/Users/marca/dev/git-repos/zerorpc-python/zerorpc/core.py\", line 291, in _process_response\n    raise\nzerorpc.exceptions.TimeoutExpired: timeout after {0}s, when calling remote method quote\n```\n", "performed_via_github_app": null, "score": 1.0}]}