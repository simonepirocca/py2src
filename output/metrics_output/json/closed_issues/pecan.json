{"total_count": 33, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/pecan/pecan/issues/121", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/121/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/121/events", "html_url": "https://github.com/pecan/pecan/issues/121", "id": 668959857, "node_id": "MDU6SXNzdWU2Njg5NTk4NTc=", "number": 121, "title": "I want to use this w/", "user": {"login": "jakemcdermott", "id": 9753817, "node_id": "MDQ6VXNlcjk3NTM4MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/9753817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakemcdermott", "html_url": "https://github.com/jakemcdermott", "followers_url": "https://api.github.com/users/jakemcdermott/followers", "following_url": "https://api.github.com/users/jakemcdermott/following{/other_user}", "gists_url": "https://api.github.com/users/jakemcdermott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakemcdermott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakemcdermott/subscriptions", "organizations_url": "https://api.github.com/users/jakemcdermott/orgs", "repos_url": "https://api.github.com/users/jakemcdermott/repos", "events_url": "https://api.github.com/users/jakemcdermott/events{/privacy}", "received_events_url": "https://api.github.com/users/jakemcdermott/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-30T16:47:37Z", "updated_at": "2020-07-30T17:19:49Z", "closed_at": "2020-07-30T16:49:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/108", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/108/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/108/events", "html_url": "https://github.com/pecan/pecan/issues/108", "id": 478874966, "node_id": "MDU6SXNzdWU0Nzg4NzQ5NjY=", "number": 108, "title": "Seperate requirements into requirements.txt and test-requirements.txt", "user": {"login": "jiajunsu", "id": 16359131, "node_id": "MDQ6VXNlcjE2MzU5MTMx", "avatar_url": "https://avatars1.githubusercontent.com/u/16359131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiajunsu", "html_url": "https://github.com/jiajunsu", "followers_url": "https://api.github.com/users/jiajunsu/followers", "following_url": "https://api.github.com/users/jiajunsu/following{/other_user}", "gists_url": "https://api.github.com/users/jiajunsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiajunsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiajunsu/subscriptions", "organizations_url": "https://api.github.com/users/jiajunsu/orgs", "repos_url": "https://api.github.com/users/jiajunsu/repos", "events_url": "https://api.github.com/users/jiajunsu/events{/privacy}", "received_events_url": "https://api.github.com/users/jiajunsu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-09T08:53:23Z", "updated_at": "2019-08-09T14:16:18Z", "closed_at": "2019-08-09T14:16:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`WebTest` in requirements.txt is used in test cases, but pecan put it into `requirements.txt`.\r\n\r\nI suggest to seperate running requirements and testing requirements into two files, same as other python projects.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/106", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/106/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/106/events", "html_url": "https://github.com/pecan/pecan/issues/106", "id": 426848513, "node_id": "MDU6SXNzdWU0MjY4NDg1MTM=", "number": 106, "title": "/url/to/ not route to To.get_all after secure", "user": {"login": "missuor", "id": 4561294, "node_id": "MDQ6VXNlcjQ1NjEyOTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4561294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/missuor", "html_url": "https://github.com/missuor", "followers_url": "https://api.github.com/users/missuor/followers", "following_url": "https://api.github.com/users/missuor/following{/other_user}", "gists_url": "https://api.github.com/users/missuor/gists{/gist_id}", "starred_url": "https://api.github.com/users/missuor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/missuor/subscriptions", "organizations_url": "https://api.github.com/users/missuor/orgs", "repos_url": "https://api.github.com/users/missuor/repos", "events_url": "https://api.github.com/users/missuor/events{/privacy}", "received_events_url": "https://api.github.com/users/missuor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-29T07:11:27Z", "updated_at": "2019-04-02T17:54:21Z", "closed_at": "2019-04-02T17:54:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "ref:pecan.secure._SecuredAttribute._lookup\r\n\r\n    @_secure_method('_check_permissions')\r\n    @expose()\r\n    def _lookup(self, *remainder):\r\n        return self.obj, remainder # <=== Here !\r\n\r\nref: pecan.rest:RestController._handle_get\r\n\r\n    def _handle_get(self, method, remainder, request=None):\r\n        '''\r\n        Routes ``GET`` actions to the appropriate controller.\r\n        '''\r\n        if request is None:\r\n            self._raise_method_deprecation_warning(self._handle_get)\r\n\r\n        # route to a get_all or get if no additional parts are available\r\n        if not remainder or remainder == ['']: # <=== Here! ( ('',) is not equal to [''] and controller goes to be a `get_one`\r\nexample:\r\n\r\n/some/urls/to/controller ==> Controller.get_all\r\n/some/urls/to/controller/ ==> Controller.get_one\r\nurls above should route to Controller.get_all\r\n\r\nPR: https://github.com/pecan/pecan/pull/105", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/103", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/103/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/103/events", "html_url": "https://github.com/pecan/pecan/issues/103", "id": 411225556, "node_id": "MDU6SXNzdWU0MTEyMjU1NTY=", "number": 103, "title": "Documentation about how to run on CherryPy is outdated", "user": {"login": "csfulop", "id": 11464987, "node_id": "MDQ6VXNlcjExNDY0OTg3", "avatar_url": "https://avatars3.githubusercontent.com/u/11464987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csfulop", "html_url": "https://github.com/csfulop", "followers_url": "https://api.github.com/users/csfulop/followers", "following_url": "https://api.github.com/users/csfulop/following{/other_user}", "gists_url": "https://api.github.com/users/csfulop/gists{/gist_id}", "starred_url": "https://api.github.com/users/csfulop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csfulop/subscriptions", "organizations_url": "https://api.github.com/users/csfulop/orgs", "repos_url": "https://api.github.com/users/csfulop/repos", "events_url": "https://api.github.com/users/csfulop/events{/privacy}", "received_events_url": "https://api.github.com/users/csfulop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-17T19:34:39Z", "updated_at": "2019-03-13T23:56:28Z", "closed_at": "2019-03-12T13:17:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The Pecan documentation about how to run on CherryPy is outdated: https://pecan.readthedocs.io/en/latest/deployment.html#cherrypy\r\nWSGI server was refactored out into cheroot project. See: https://github.com/cherrypy/cherrypy/issues/1585", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/96", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/96/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/96/events", "html_url": "https://github.com/pecan/pecan/issues/96", "id": 288198276, "node_id": "MDU6SXNzdWUyODgxOTgyNzY=", "number": 96, "title": "requests with no content type causes `AttributeError`", "user": {"login": "alfredodeza", "id": 317847, "node_id": "MDQ6VXNlcjMxNzg0Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/317847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alfredodeza", "html_url": "https://github.com/alfredodeza", "followers_url": "https://api.github.com/users/alfredodeza/followers", "following_url": "https://api.github.com/users/alfredodeza/following{/other_user}", "gists_url": "https://api.github.com/users/alfredodeza/gists{/gist_id}", "starred_url": "https://api.github.com/users/alfredodeza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alfredodeza/subscriptions", "organizations_url": "https://api.github.com/users/alfredodeza/orgs", "repos_url": "https://api.github.com/users/alfredodeza/repos", "events_url": "https://api.github.com/users/alfredodeza/events{/privacy}", "received_events_url": "https://api.github.com/users/alfredodeza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-12T17:53:03Z", "updated_at": "2018-01-29T22:03:28Z", "closed_at": "2018-01-29T22:03:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On a vanilla Pecan app, doing a request like:\r\n\r\n    curl -v -H \"Accept: \" localhost:8080\r\n\r\nWill cause a similar exception to this:\r\n\r\n    Traceback (most recent call last):\r\n      File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/wsgiref/handlers.py\", line 85, in run\r\n        self.result = application(self.environ, self.start_response)\r\n      File \"/Users/alfredo/python/pecan/pecan/middleware/recursive.py\", line 56, in __call__\r\n        return self.application(environ, start_response)\r\n      File \"/Users/alfredo/python/pecan/pecan/core.py\", line 841, in __call__\r\n        return super(Pecan, self).__call__(environ, start_response)\r\n      File \"/Users/alfredo/python/pecan/pecan/core.py\", line 683, in __call__\r\n        controller, args, kwargs = self.find_controller(state)\r\n      File \"/Users/alfredo/python/pecan/pecan/core.py\", line 859, in find_controller\r\n        controller, args, kw = super(Pecan, self).find_controller(_state)\r\n      File \"/Users/alfredo/python/pecan/pecan/core.py\", line 485, in find_controller\r\n        if accept == '*/*' or (\r\n    AttributeError: 'NoneType' object has no attribute 'startswith'\r\n\r\nThe problem is that `accept` is `None` in this case (as one can tell by the exception message). \r\n\r\nUnsure what the best route to deal with this is, I would be fine with error handling in case Pecan can't figure out this, or an actual default/fallback (e.g. `accept = accept or \"*/*\"`)\r\n\r\nThis error is present for older versions (pre 1.0.0) of Pecan up until current master", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/94", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/94/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/94/events", "html_url": "https://github.com/pecan/pecan/issues/94", "id": 269345016, "node_id": "MDU6SXNzdWUyNjkzNDUwMTY=", "number": 94, "title": "Unit tests failing under Python 3.5 and 3.6", "user": {"login": "thomasgoirand", "id": 1257293, "node_id": "MDQ6VXNlcjEyNTcyOTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1257293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasgoirand", "html_url": "https://github.com/thomasgoirand", "followers_url": "https://api.github.com/users/thomasgoirand/followers", "following_url": "https://api.github.com/users/thomasgoirand/following{/other_user}", "gists_url": "https://api.github.com/users/thomasgoirand/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasgoirand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasgoirand/subscriptions", "organizations_url": "https://api.github.com/users/thomasgoirand/orgs", "repos_url": "https://api.github.com/users/thomasgoirand/repos", "events_url": "https://api.github.com/users/thomasgoirand/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasgoirand/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-28T19:52:22Z", "updated_at": "2018-01-30T03:47:26Z", "closed_at": "2018-01-30T03:47:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWhen building the 1.2.1 package under Debian, I get the following test failing:\r\n\r\n======================================================================\r\nERROR: test_config_with_non_package_relative_import (pecan.tests.test_conf.TestConf)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/zigo/sources/openstack/pike/python-pecan/build-area/python-pecan-1.2.1/pecan/tests/test_conf.py\", line 159, in test_config_with_non_package_relative_import\r\n    configuration.conf_from_file(f.name)\r\n  File \"/home/zigo/sources/openstack/pike/python-pecan/build-area/python-pecan-1.2.1/pecan/configuration.py\", line 175, in conf_from_file\r\n    SourceFileLoader(module_name, abspath).load_module(module_name)\r\n  File \"<frozen importlib._bootstrap_external>\", line 399, in _check_name_wrapper\r\n  File \"<frozen importlib._bootstrap_external>\", line 823, in load_module\r\n  File \"<frozen importlib._bootstrap_external>\", line 682, in load_module\r\n  File \"<frozen importlib._bootstrap>\", line 265, in _load_module_shim\r\n  File \"<frozen importlib._bootstrap>\", line 684, in _load\r\n  File \"<frozen importlib._bootstrap>\", line 665, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/tmp/tmpu91p8rzq.py\", line 1, in <module>\r\nImportError: attempted relative import with no known parent package\r\n\r\nHaving a look at the test, it's trying in fact to raise a relative import exception, which obviously is succeeding, but isn't caught by the unit test, resulting in a false positive. In the package I simply patched out this broken test. I'd be nice to fix it upstream too.\r\n\r\nNote that there's no problem under Python 2.7.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/90", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/90/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/90/events", "html_url": "https://github.com/pecan/pecan/issues/90", "id": 248546439, "node_id": "MDU6SXNzdWUyNDg1NDY0Mzk=", "number": 90, "title": "test_config_with_non_package_relative_import fails with Python 3.6", "user": {"login": "mwhudson", "id": 672022, "node_id": "MDQ6VXNlcjY3MjAyMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/672022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwhudson", "html_url": "https://github.com/mwhudson", "followers_url": "https://api.github.com/users/mwhudson/followers", "following_url": "https://api.github.com/users/mwhudson/following{/other_user}", "gists_url": "https://api.github.com/users/mwhudson/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwhudson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwhudson/subscriptions", "organizations_url": "https://api.github.com/users/mwhudson/orgs", "repos_url": "https://api.github.com/users/mwhudson/repos", "events_url": "https://api.github.com/users/mwhudson/events{/privacy}", "received_events_url": "https://api.github.com/users/mwhudson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-07T22:13:50Z", "updated_at": "2017-08-08T02:45:50Z", "closed_at": "2017-08-08T02:45:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Like this:\r\n\r\n```\r\n======================================================================\r\nERROR: test_config_with_non_package_relative_import (pecan.tests.test_conf.TestConf)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/opt/opensource/deb/py36/pecan/pecan/tests/test_conf.py\", line 159, in test_config_with_non_package_relative_import\r\n    configuration.conf_from_file(f.name)\r\n  File \"/opt/opensource/deb/py36/pecan/pecan/configuration.py\", line 175, in conf_from_file\r\n    SourceFileLoader(module_name, abspath).load_module(module_name)\r\n  File \"<frozen importlib._bootstrap_external>\", line 399, in _check_name_wrapper\r\n  File \"<frozen importlib._bootstrap_external>\", line 823, in load_module\r\n  File \"<frozen importlib._bootstrap_external>\", line 682, in load_module\r\n  File \"<frozen importlib._bootstrap>\", line 251, in _load_module_shim\r\n  File \"<frozen importlib._bootstrap>\", line 675, in _load\r\n  File \"<frozen importlib._bootstrap>\", line 655, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 205, in _call_with_frames_removed\r\n  File \"/tmp/tmp2k7qve7i.py\", line 1, in <module>\r\nImportError: attempted relative import with no known parent package\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/87", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/87/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/87/events", "html_url": "https://github.com/pecan/pecan/issues/87", "id": 203491785, "node_id": "MDU6SXNzdWUyMDM0OTE3ODU=", "number": 87, "title": "API hangs when request body is not sent with PUT/POST/PATCH", "user": {"login": "jasondunsmore", "id": 53437, "node_id": "MDQ6VXNlcjUzNDM3", "avatar_url": "https://avatars3.githubusercontent.com/u/53437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasondunsmore", "html_url": "https://github.com/jasondunsmore", "followers_url": "https://api.github.com/users/jasondunsmore/followers", "following_url": "https://api.github.com/users/jasondunsmore/following{/other_user}", "gists_url": "https://api.github.com/users/jasondunsmore/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasondunsmore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasondunsmore/subscriptions", "organizations_url": "https://api.github.com/users/jasondunsmore/orgs", "repos_url": "https://api.github.com/users/jasondunsmore/repos", "events_url": "https://api.github.com/users/jasondunsmore/events{/privacy}", "received_events_url": "https://api.github.com/users/jasondunsmore/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-26T21:19:36Z", "updated_at": "2017-01-26T22:03:55Z", "closed_at": "2017-01-26T22:03:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "The API hangs when an API is defined without a request body and then request body is not sent with PUT/POST/PATCH request.\r\n\r\nMinimal example:\r\n\r\n```\r\nimport pecan\r\nfrom pecan import rest\r\n\r\nclass VersionController(rest.RestController):\r\n    @pecan.expose('json')\r\n    def get(self):\r\n        return {\"version\": \"1.0.0\"}\r\n\r\n    @pecan.expose('json', int)\r\n    def put(self, foo):\r\n        #return \"foo\"  # positive control\r\n        return pecan.request.body\r\n\r\n    @pecan.expose('json', int)\r\n    def post(self, foo):\r\n        #return \"foo\"  # positive control\r\n        return pecan.request.body\r\n\r\n    @pecan.expose('json', int)\r\n    def patch(self, foo):\r\n        #return \"foo\"  # positive control\r\n        return pecan.request.body\r\n```\r\n\r\nCurl commands to reproduce API hanging:\r\n\r\n```\r\n$ curl -X PUT http://127.0.0.1:8080/v1/1\r\n(hangs...)\r\n$ curl -X POST http://127.0.0.1:8080/v1/1\r\n(hangs...)\r\n$ curl -X PATCH http://127.0.0.1:8080/v1/1\r\n(hangs...)\r\n```\r\n\r\nWhen \"-d '{}'\" is added, the API responds:\r\n\r\n```\r\n$ curl -X POST http://127.0.0.1:8080/v1/1 -d '{}'\r\n\"{}\"\r\n$ curl -X PUT http://127.0.0.1:8080/v1/1 -d '{}'\r\n\"{}\"\r\n$ curl -X PATCH http://127.0.0.1:8080/v1/1 -d '{}'\r\n\"{}\"\r\n```\r\n\r\nHere is the traceback from when Control-C is typed in the \"pecan serve\" process while the API is hanging:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/wsgiref/handlers.py\", line 85, in run\r\n    self.result = application(self.environ, self.start_response)\r\n  File \"/home/jason/github/magnum/.venv/local/lib/python2.7/site-packages/pecan/middleware/static.py\", line 150, in __call__\r\n    return self.app(environ, start_response)\r\n  File \"/home/jason/github/magnum/.venv/local/lib/python2.7/site-packages/pecan/middleware/debug.py\", line 78, in __call__\r\n    return self.app(environ, start_response)\r\n  File \"/home/jason/github/magnum/.venv/local/lib/python2.7/site-packages/pecan/middleware/recursive.py\", line 56, in __call__\r\n    return self.application(environ, start_response)\r\n  File \"/home/jason/github/magnum/.venv/local/lib/python2.7/site-packages/pecan/middleware/errordocument.py\", line 75, in __call__\r\n    app_iter = self.app(environ, replacement_start_response)\r\n  File \"/home/jason/github/magnum/.venv/local/lib/python2.7/site-packages/pecan/core.py\", line 840, in __call__\r\n    return super(Pecan, self).__call__(environ, start_response)\r\n  File \"/home/jason/github/magnum/.venv/local/lib/python2.7/site-packages/pecan/core.py\", line 683, in __call__\r\n    self.invoke_controller(controller, args, kwargs, state)\r\n  File \"/home/jason/github/magnum/.venv/local/lib/python2.7/site-packages/pecan/core.py\", line 574, in invoke_controller\r\n    result = controller(*args, **kwargs)\r\n  File \"/home/jason/repo/experimental/python/test-pecan-patch/pecanrest/pecanrest/controllers/v1.py\", line 22, in post\r\n    return pecan.request.body\r\n  File \"/home/jason/github/magnum/.venv/local/lib/python2.7/site-packages/pecan/core.py\", line 77, in __getattr__\r\n    return getattr(obj, attr)\r\n  File \"/home/jason/github/magnum/.venv/local/lib/python2.7/site-packages/pecan/core.py\", line 52, in __getattribute__\r\n    return WebObRequest.__getattribute__(self, name)\r\n  File \"/home/jason/github/magnum/.venv/local/lib/python2.7/site-packages/webob/request.py\", line 700, in _body__get\r\n    self.make_body_seekable() # we need this to have content_length\r\n  File \"/home/jason/github/magnum/.venv/local/lib/python2.7/site-packages/webob/request.py\", line 942, in make_body_seekable\r\n    self.copy_body()\r\n  File \"/home/jason/github/magnum/.venv/local/lib/python2.7/site-packages/webob/request.py\", line 958, in copy_body\r\n    self.body = self.body_file_raw.read()\r\n  File \"/usr/lib/python2.7/socket.py\", line 351, in read\r\n    data = self._sock.recv(rbufsize)\r\nKeyboardInterrupt\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/84", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/84/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/84/events", "html_url": "https://github.com/pecan/pecan/issues/84", "id": 180572141, "node_id": "MDU6SXNzdWUxODA1NzIxNDE=", "number": 84, "title": "Pecan fails to serve more than one concurrent request", "user": {"login": "ashishjain14", "id": 11222204, "node_id": "MDQ6VXNlcjExMjIyMjA0", "avatar_url": "https://avatars0.githubusercontent.com/u/11222204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashishjain14", "html_url": "https://github.com/ashishjain14", "followers_url": "https://api.github.com/users/ashishjain14/followers", "following_url": "https://api.github.com/users/ashishjain14/following{/other_user}", "gists_url": "https://api.github.com/users/ashishjain14/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashishjain14/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashishjain14/subscriptions", "organizations_url": "https://api.github.com/users/ashishjain14/orgs", "repos_url": "https://api.github.com/users/ashishjain14/repos", "events_url": "https://api.github.com/users/ashishjain14/events{/privacy}", "received_events_url": "https://api.github.com/users/ashishjain14/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-10-03T06:38:09Z", "updated_at": "2016-10-04T14:12:22Z", "closed_at": "2016-10-04T14:12:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Details of Environment:\n1) Eventlet based wsgi server\n2) Pecan for wsgi application\n\nWhen I try to push more than one request to my application I see only the first request passes through rest all fails with the error\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/eventlet/wsgi.py\", line 481, in handle_one_response\n    result = self.application(self.environ, start_response)\n  File \"/usr/local/lib/python2.7/dist-packages/pecan/middleware/recursive.py\", line 56, in **call**\n    return self.application(environ, start_response)\n  File \"/usr/local/lib/python2.7/dist-packages/pecan/core.py\", line 843, in **call**\n    del state.request\nAttributeError: request\n\nI have tested eventlet with a dummy app(non-pecan) and i am able to serve hundreds of request.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/81", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/81/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/81/events", "html_url": "https://github.com/pecan/pecan/issues/81", "id": 175892121, "node_id": "MDU6SXNzdWUxNzU4OTIxMjE=", "number": 81, "title": "when renderer is not supported, report back what is missing", "user": {"login": "alfredodeza", "id": 317847, "node_id": "MDQ6VXNlcjMxNzg0Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/317847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alfredodeza", "html_url": "https://github.com/alfredodeza", "followers_url": "https://api.github.com/users/alfredodeza/followers", "following_url": "https://api.github.com/users/alfredodeza/following{/other_user}", "gists_url": "https://api.github.com/users/alfredodeza/gists{/gist_id}", "starred_url": "https://api.github.com/users/alfredodeza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alfredodeza/subscriptions", "organizations_url": "https://api.github.com/users/alfredodeza/orgs", "repos_url": "https://api.github.com/users/alfredodeza/repos", "events_url": "https://api.github.com/users/alfredodeza/events{/privacy}", "received_events_url": "https://api.github.com/users/alfredodeza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-08T23:42:35Z", "updated_at": "2016-09-21T16:20:36Z", "closed_at": "2016-09-21T16:20:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Had some issues trying to use `jinja2` as renderer but was getting the following traceback:\n\n```\n...\nFile \".../pecan/core.py\", line 421, in render\n    return renderer.render(template, namespace)\nAttributeError: 'NoneType' object has no attribute 'render'\n```\n\nThis was because `jinja2` is not the right name for the renderer. \n\nThe following change in `core.py` would report this with more useful information:\n\n```\ndiff --git a/pecan/core.py b/pecan/core.py\nindex f02b3a3..3f7f211 100644\n--- a/pecan/core.py\n+++ b/pecan/core.py\n@@ -412,6 +412,8 @@ class PecanBase(object):\n                 renderer_name,\n                 self.template_path\n             )\n+            if renderer is None:\n+                raise RuntimeError('template support for %s was not found' % renderer_name)\n         else:\n             renderer = self.renderers.get(\n                 self.default_renderer,\n```\n\nThe test case demonstrates the more informative error:\n\n```\ndiff --git a/pecan/tests/test_base.py b/pecan/tests/test_base.py\nindex 435e8b5..2180d47 100644\n--- a/pecan/tests/test_base.py\n+++ b/pecan/tests/test_base.py\n@@ -1898,6 +1898,27 @@ class TestEngines(PecanTestCase):\n                     break\n         assert error_msg is not None\n\n+    def test_renderer_not_found(self):\n+\n+        class RootController(object):\n+            @expose('mako3:mako.html')\n+            def index(self, name='Jonathan'):\n+                return dict(name=name)\n+\n+            @expose('mako3:mako_bad.html')\n+            def badtemplate(self):\n+                return dict()\n+\n+        app = TestApp(\n+            Pecan(RootController(), template_path=self.template_path)\n+        )\n+        try:\n+            r = app.get('/')\n+        except Exception as e:\n+            expected = e\n+\n+        assert str(expected) == \"template support for mako3 was not found\"\n+\n     def test_json(self):\n         try:\n             from simplejson import loads\n```\n\nThere are also other things in that `core.py` block that could be used for the error reporting, like the path. It is not uncommon to tell pecan to look at a certain path where a given template doesn't exist, but nothing (currently) points to where that may be.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/80", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/80/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/80/events", "html_url": "https://github.com/pecan/pecan/issues/80", "id": 173104824, "node_id": "MDU6SXNzdWUxNzMxMDQ4MjQ=", "number": 80, "title": "Can't Mapping Controller Arguments", "user": {"login": "SunnyFenng", "id": 13791054, "node_id": "MDQ6VXNlcjEzNzkxMDU0", "avatar_url": "https://avatars1.githubusercontent.com/u/13791054?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SunnyFenng", "html_url": "https://github.com/SunnyFenng", "followers_url": "https://api.github.com/users/SunnyFenng/followers", "following_url": "https://api.github.com/users/SunnyFenng/following{/other_user}", "gists_url": "https://api.github.com/users/SunnyFenng/gists{/gist_id}", "starred_url": "https://api.github.com/users/SunnyFenng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SunnyFenng/subscriptions", "organizations_url": "https://api.github.com/users/SunnyFenng/orgs", "repos_url": "https://api.github.com/users/SunnyFenng/repos", "events_url": "https://api.github.com/users/SunnyFenng/events{/privacy}", "received_events_url": "https://api.github.com/users/SunnyFenng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-25T03:11:47Z", "updated_at": "2016-08-25T04:17:13Z", "closed_at": "2016-08-25T04:17:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/74", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/74/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/74/events", "html_url": "https://github.com/pecan/pecan/issues/74", "id": 166785200, "node_id": "MDU6SXNzdWUxNjY3ODUyMDA=", "number": 74, "title": "RestController failed if dashes in _custom_actions", "user": {"login": "luoyancn", "id": 15990844, "node_id": "MDQ6VXNlcjE1OTkwODQ0", "avatar_url": "https://avatars1.githubusercontent.com/u/15990844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luoyancn", "html_url": "https://github.com/luoyancn", "followers_url": "https://api.github.com/users/luoyancn/followers", "following_url": "https://api.github.com/users/luoyancn/following{/other_user}", "gists_url": "https://api.github.com/users/luoyancn/gists{/gist_id}", "starred_url": "https://api.github.com/users/luoyancn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luoyancn/subscriptions", "organizations_url": "https://api.github.com/users/luoyancn/orgs", "repos_url": "https://api.github.com/users/luoyancn/repos", "events_url": "https://api.github.com/users/luoyancn/events{/privacy}", "received_events_url": "https://api.github.com/users/luoyancn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-21T10:17:38Z", "updated_at": "2016-07-22T14:16:34Z", "closed_at": "2016-07-22T13:06:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "For my case, i need to build route path like \n/node/power-on\n\n```\nclass NodeController(rest.RestController):\n    @expose(route='power-on')\n    def power_on(self, power_request):\n        print power_request\n\n```\n\nThen, i got the error like follows:\n\n`ValueError: Path segments cannot be used in combination with pecan.rest.RestController.  Remove the`route`argument to @pecan.expose on lightrest.controllers.advanced.NodeController.power_operate`\n\nSo, i modified my code like follows:\n\n```\nclass NodeController(rest.RestController):\n    _custom_actions = {\n        'power-on': ['POST'],\n    }\n    @expose()\n    def power_on(self, power_request):\n        print power_request\n```\n\nwhile, i still cannot visit the url /node/power-on that i got 404 not found error.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/72", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/72/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/72/events", "html_url": "https://github.com/pecan/pecan/issues/72", "id": 164826683, "node_id": "MDU6SXNzdWUxNjQ4MjY2ODM=", "number": 72, "title": "'json' renderer forces response body to be non-empty", "user": {"login": "alfredodeza", "id": 317847, "node_id": "MDQ6VXNlcjMxNzg0Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/317847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alfredodeza", "html_url": "https://github.com/alfredodeza", "followers_url": "https://api.github.com/users/alfredodeza/followers", "following_url": "https://api.github.com/users/alfredodeza/following{/other_user}", "gists_url": "https://api.github.com/users/alfredodeza/gists{/gist_id}", "starred_url": "https://api.github.com/users/alfredodeza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alfredodeza/subscriptions", "organizations_url": "https://api.github.com/users/alfredodeza/orgs", "repos_url": "https://api.github.com/users/alfredodeza/repos", "events_url": "https://api.github.com/users/alfredodeza/events{/privacy}", "received_events_url": "https://api.github.com/users/alfredodeza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-07-11T12:36:24Z", "updated_at": "2016-07-26T15:00:01Z", "closed_at": "2016-07-26T15:00:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following test case fails:\n\n```\nclass TestJsonRendering(PecanTestCase):\n\n    def test_no_body_json(self):\n\n        class RootController(object):\n            @expose('json')\n            def index(self):\n                pass\n\n        app = TestApp(Pecan(RootController()))\n\n        r = app.get('/')\n        assert r.status_int == 204\n        assert r.body == ''\n```\n\nThe actual `r.status_int` is 200, and the body is `null`.\n\nThere is no way to force a response to have an empty body when using the `json` renderer because it treats both the implicit (with no return) and explicit (returning an actual `None`) as valid input to render a `json` response.\n\nIn `pecan.core` it sees that there is an actual body in the response so it doesn't force the `204`.\n\nI don't know in what situations one would want to render a `None` to `null`, but I did had a valid use case where the controller might return `json` or no body at all, in which I was expecting a `204`.\n\nThis might be a documentation fix and maybe some debug messages to alert of this.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/68", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/68/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/68/events", "html_url": "https://github.com/pecan/pecan/issues/68", "id": 161191770, "node_id": "MDU6SXNzdWUxNjExOTE3NzA=", "number": 68, "title": "Pecan's JSON Serialization definitions are not respected for exception-based JSON-formatted responses", "user": {"login": "ryanpetrello", "id": 214912, "node_id": "MDQ6VXNlcjIxNDkxMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/214912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryanpetrello", "html_url": "https://github.com/ryanpetrello", "followers_url": "https://api.github.com/users/ryanpetrello/followers", "following_url": "https://api.github.com/users/ryanpetrello/following{/other_user}", "gists_url": "https://api.github.com/users/ryanpetrello/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryanpetrello/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryanpetrello/subscriptions", "organizations_url": "https://api.github.com/users/ryanpetrello/orgs", "repos_url": "https://api.github.com/users/ryanpetrello/repos", "events_url": "https://api.github.com/users/ryanpetrello/events{/privacy}", "received_events_url": "https://api.github.com/users/ryanpetrello/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-20T13:12:46Z", "updated_at": "2016-06-20T13:15:37Z", "closed_at": "2016-06-20T13:13:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When a webob.HTTPException is raised in a pecan controller, pecan has logic that returns a nicely formatted HTML response.  If the client specifies Accept: application/json, the exception is formatted using Python's JSON model.  This code should respect pecan's support for JSON type registration (it currently doesn't):\n\nhttp://pecan.readthedocs.io/en/latest/jsonify.html\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/64", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/64/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/64/events", "html_url": "https://github.com/pecan/pecan/issues/64", "id": 159429221, "node_id": "MDU6SXNzdWUxNTk0MjkyMjE=", "number": 64, "title": "Debugging with backlash does not work in Python3", "user": {"login": "ryanpetrello", "id": 214912, "node_id": "MDQ6VXNlcjIxNDkxMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/214912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryanpetrello", "html_url": "https://github.com/ryanpetrello", "followers_url": "https://api.github.com/users/ryanpetrello/followers", "following_url": "https://api.github.com/users/ryanpetrello/following{/other_user}", "gists_url": "https://api.github.com/users/ryanpetrello/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryanpetrello/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryanpetrello/subscriptions", "organizations_url": "https://api.github.com/users/ryanpetrello/orgs", "repos_url": "https://api.github.com/users/ryanpetrello/repos", "events_url": "https://api.github.com/users/ryanpetrello/events{/privacy}", "received_events_url": "https://api.github.com/users/ryanpetrello/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-06-09T14:56:24Z", "updated_at": "2016-06-09T18:50:21Z", "closed_at": "2016-06-09T18:50:21Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When running a pecan application with Python3, if you install the PyPI backlash package (https://pypi.python.org/pypi/backlash) for interactive debugging and encounter an exception, you'll see:\n\n```\n[ERROR] Error handling request /\nTraceback (most recent call last):\n...\n  File \"/path/to/lib/python3.4/site-packages/pecan/middleware/debug.py\", line 23, in debug_application\n    yield self.body_re.sub('\\g<1>%s' % __CONFIG_HELP__, part)\nTypeError: can't use a string pattern on a bytes-like object\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/60", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/60/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/60/events", "html_url": "https://github.com/pecan/pecan/issues/60", "id": 157802804, "node_id": "MDU6SXNzdWUxNTc4MDI4MDQ=", "number": 60, "title": "Replace usage of inspect.getargspec with inspect.signature", "user": {"login": "ryanpetrello", "id": 214912, "node_id": "MDQ6VXNlcjIxNDkxMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/214912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryanpetrello", "html_url": "https://github.com/ryanpetrello", "followers_url": "https://api.github.com/users/ryanpetrello/followers", "following_url": "https://api.github.com/users/ryanpetrello/following{/other_user}", "gists_url": "https://api.github.com/users/ryanpetrello/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryanpetrello/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryanpetrello/subscriptions", "organizations_url": "https://api.github.com/users/ryanpetrello/orgs", "repos_url": "https://api.github.com/users/ryanpetrello/repos", "events_url": "https://api.github.com/users/ryanpetrello/events{/privacy}", "received_events_url": "https://api.github.com/users/ryanpetrello/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-06-01T01:05:00Z", "updated_at": "2016-06-02T17:08:19Z", "closed_at": "2016-06-02T17:08:19Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "`inspect.getargspec` is deprecated in Python 3.0 and removed in Python 3.6 (replaced with `inspect.signature`).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/58", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/58/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/58/events", "html_url": "https://github.com/pecan/pecan/issues/58", "id": 157684163, "node_id": "MDU6SXNzdWUxNTc2ODQxNjM=", "number": 58, "title": "Internal redirects are being handled by hooks", "user": {"login": "jdandrea", "id": 108430, "node_id": "MDQ6VXNlcjEwODQzMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/108430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdandrea", "html_url": "https://github.com/jdandrea", "followers_url": "https://api.github.com/users/jdandrea/followers", "following_url": "https://api.github.com/users/jdandrea/following{/other_user}", "gists_url": "https://api.github.com/users/jdandrea/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdandrea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdandrea/subscriptions", "organizations_url": "https://api.github.com/users/jdandrea/orgs", "repos_url": "https://api.github.com/users/jdandrea/repos", "events_url": "https://api.github.com/users/jdandrea/events{/privacy}", "received_events_url": "https://api.github.com/users/jdandrea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-05-31T14:22:23Z", "updated_at": "2016-07-22T18:41:28Z", "closed_at": "2016-07-22T18:41:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Steps to reproduce:\n1. Set up a `PecanHook` class with a breakpoint in `after()` (or other means of monitoring).\n2. Call `redirect(url, internal=True)` for any given URL, one or more times.\n3. `after()` will be called multiple times with potentially misleading statuses/responses.\n\nExpected behavior is that `after()` is called once with the final request/response/status for that URL.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/52", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/52/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/52/events", "html_url": "https://github.com/pecan/pecan/issues/52", "id": 147866872, "node_id": "MDU6SXNzdWUxNDc4NjY4NzI=", "number": 52, "title": "Can't instantiate RootController(SecureController) and unlock a deeply nested controller", "user": {"login": "jdandrea", "id": 108430, "node_id": "MDQ6VXNlcjEwODQzMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/108430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdandrea", "html_url": "https://github.com/jdandrea", "followers_url": "https://api.github.com/users/jdandrea/followers", "following_url": "https://api.github.com/users/jdandrea/following{/other_user}", "gists_url": "https://api.github.com/users/jdandrea/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdandrea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdandrea/subscriptions", "organizations_url": "https://api.github.com/users/jdandrea/orgs", "repos_url": "https://api.github.com/users/jdandrea/repos", "events_url": "https://api.github.com/users/jdandrea/events{/privacy}", "received_events_url": "https://api.github.com/users/jdandrea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-12T20:40:19Z", "updated_at": "2016-04-19T14:55:35Z", "closed_at": "2016-04-19T14:55:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given an API hierarchy of:\n\n```\n  root (RootController)\n    v1 (V1Controller)\n      project_id (ProjectController)\n        things (ThingController)\n          thing_id (ThingItemController)\n        otherthings (OtherThingController)\n          otherthing_id (OtherThingItemController)\n```\n\n... we want all endpoints in **ThingController** and **ThingItemController** to not require any AuthN/AuthZ checks. Everything else is to require AuthN/AuthZ.\n\nPut another way, all endpoints in **ThingController** and **ThingItemController** would not be expected to ever return a 401 status. The other controllers/endpoints may return a 401 if AuthN/AuthZ fails. The URLs for which a 401 would never be returned look like this:\n\n```\n  http://hostname:8000/v1/project_id/things/\n  http://hostname:8000/v1/project_id/things/thing_id/\n```\n\nWhat I discovered was that, if I make **RootController** a subclass of **SecureController**, unlocking **ThingController** and **ThingItemController** has no effect. They remain secured.\n\nIf, instead, I do not use **SecureController** at all, but instead decorate every individual endpoint I wish to secure with @secure, leaving the endpoints within **ThingController** and **ThingItemController** alone, everything works just fine.\n\nI tried making a minimal test case to illustrate this. See http://paste.openstack.org/show/493873/ for two sets of example controllers. Each presumes AuthN/AuthZ fails by default.\n\nThe first set uses **SecureController** at the root level, instantiating **ThingController** and **ThingItemController**  using `unlocked()`. Accessing the URLs referenced above results in a 401 status, despite the unlocking.\n\nThe second set does not use **SecureController**. Instead, it decorates all endpoints in all controller classes (except for those in **ThingController** and **ThingItemController**) with @secure. Accessing only the URLs referenced above results in a 200 status.\n\nIs this working as designed? Am I doing something fundamentally wrong in the **SecureController** case? Is there a bug?\n\nIf there's a simpler way to provide steps to reproduce, please advise. The controller hierarchy is particular to this problem, and this was the simplest way I could find to illustrate it. Thank you!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/51", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/51/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/51/events", "html_url": "https://github.com/pecan/pecan/issues/51", "id": 144105321, "node_id": "MDU6SXNzdWUxNDQxMDUzMjE=", "number": 51, "title": "expose(template='json',..) is magic, undocumented", "user": {"login": "dmick", "id": 1350673, "node_id": "MDQ6VXNlcjEzNTA2NzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1350673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmick", "html_url": "https://github.com/dmick", "followers_url": "https://api.github.com/users/dmick/followers", "following_url": "https://api.github.com/users/dmick/following{/other_user}", "gists_url": "https://api.github.com/users/dmick/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmick/subscriptions", "organizations_url": "https://api.github.com/users/dmick/orgs", "repos_url": "https://api.github.com/users/dmick/repos", "events_url": "https://api.github.com/users/dmick/events{/privacy}", "received_events_url": "https://api.github.com/users/dmick/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-28T23:00:31Z", "updated_at": "2016-04-19T11:42:13Z", "closed_at": "2016-04-19T11:41:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Something should document the magic behavior of using 'json' as the 'template' argument to expose().\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/47", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/47/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/47/events", "html_url": "https://github.com/pecan/pecan/issues/47", "id": 140973305, "node_id": "MDU6SXNzdWUxNDA5NzMzMDU=", "number": 47, "title": "expose and when decorators can't decorate non-function object decorators", "user": {"login": "kevinbenton", "id": 1017708, "node_id": "MDQ6VXNlcjEwMTc3MDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1017708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinbenton", "html_url": "https://github.com/kevinbenton", "followers_url": "https://api.github.com/users/kevinbenton/followers", "following_url": "https://api.github.com/users/kevinbenton/following{/other_user}", "gists_url": "https://api.github.com/users/kevinbenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinbenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinbenton/subscriptions", "organizations_url": "https://api.github.com/users/kevinbenton/orgs", "repos_url": "https://api.github.com/users/kevinbenton/repos", "events_url": "https://api.github.com/users/kevinbenton/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinbenton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-15T13:33:28Z", "updated_at": "2016-03-16T14:05:09Z", "closed_at": "2016-03-16T14:05:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "If a decorator is used on a controller method that is just a normal object with a **call** method, it will not necessarily have the **code** attribute this line[1] is looking for so pecan will fail to load when using one of these style decorators. For an example of this type of decorator, check out the oslo DB wrap db retry decorator: https://github.com/malor/oslo.db/blob/b50609bc0e63704947c0e9d66e503155e885bc0d/oslo/db/api.py#L42\n1. https://github.com/pecan/pecan/blob/ce728f48787489f8cfbac96f8224d3c63a9b4490/pecan/util.py#L43\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/39", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/39/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/39/events", "html_url": "https://github.com/pecan/pecan/issues/39", "id": 127459143, "node_id": "MDU6SXNzdWUxMjc0NTkxNDM=", "number": 39, "title": "duplicate log lines using default configuration", "user": {"login": "alfredodeza", "id": 317847, "node_id": "MDQ6VXNlcjMxNzg0Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/317847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alfredodeza", "html_url": "https://github.com/alfredodeza", "followers_url": "https://api.github.com/users/alfredodeza/followers", "following_url": "https://api.github.com/users/alfredodeza/following{/other_user}", "gists_url": "https://api.github.com/users/alfredodeza/gists{/gist_id}", "starred_url": "https://api.github.com/users/alfredodeza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alfredodeza/subscriptions", "organizations_url": "https://api.github.com/users/alfredodeza/orgs", "repos_url": "https://api.github.com/users/alfredodeza/repos", "events_url": "https://api.github.com/users/alfredodeza/events{/privacy}", "received_events_url": "https://api.github.com/users/alfredodeza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-01-19T14:36:01Z", "updated_at": "2016-01-22T15:23:22Z", "closed_at": "2016-01-22T15:23:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "By default on a vanilla Pecan app, duplicate lines are shown when handling a request:\n\n```\n2016-01-19 08:51:52,500 [INFO    ] [pecan.commands.serve][MainThread] \"GET / HTTP/1.1\" 200 993\n2016-01-19 08:51:52,500 [INFO    ] [pecan.commands.serve][MainThread] \"GET / HTTP/1.1\" 200 993\n2016-01-19 08:51:52,519 [INFO    ] [pecan.commands.serve][MainThread] \"GET /css/style.css HTTP/1.1\" 200 569\n2016-01-19 08:51:52,519 [INFO    ] [pecan.commands.serve][MainThread] \"GET /css/style.css HTTP/1.1\" 200 569\n2016-01-19 08:51:52,527 [WARNING ] [pecan.commands.serve][MainThread] \"GET /javascript/shared.js HTTP/1.1\" 404 411\n2016-01-19 08:51:52,527 [WARNING ] [pecan.commands.serve][MainThread] \"GET /javascript/shared.js HTTP/1.1\" 404 411\n2016-01-19 08:51:52,530 [INFO    ] [pecan.commands.serve][MainThread] \"GET /images/logo.png HTTP/1.1\" 200 20596\n2016-01-19 08:51:52,530 [INFO    ] [pecan.commands.serve][MainThread] \"GET /images/logo.png HTTP/1.1\" 200 20596\n```\n\nThis is how it should look: \n\n```\n2016-01-19 08:44:17,714 [INFO    ] [pecan.commands.serve][MainThread] \"GET / HTTP/1.1\" 200 993\n2016-01-19 08:44:17,735 [INFO    ] [pecan.commands.serve][MainThread] \"GET /css/style.css HTTP/1.1\" 200 569\n2016-01-19 08:44:17,740 [WARNING ] [pecan.commands.serve][MainThread] \"GET /javascript/shared.js HTTP/1.1\" 404 411\n2016-01-19 08:44:17,742 [INFO    ] [pecan.commands.serve][MainThread] \"GET /images/logo.png HTTP/1.1\" 200 20596\n```\n\nThis is achieved by adding `'propagate': False` to the root logger.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/38", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/38/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/38/events", "html_url": "https://github.com/pecan/pecan/issues/38", "id": 125577658, "node_id": "MDU6SXNzdWUxMjU1Nzc2NTg=", "number": 38, "title": "@secure decorator call target 3 times.", "user": {"login": "cluries", "id": 195393, "node_id": "MDQ6VXNlcjE5NTM5Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/195393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cluries", "html_url": "https://github.com/cluries", "followers_url": "https://api.github.com/users/cluries/followers", "following_url": "https://api.github.com/users/cluries/following{/other_user}", "gists_url": "https://api.github.com/users/cluries/gists{/gist_id}", "starred_url": "https://api.github.com/users/cluries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cluries/subscriptions", "organizations_url": "https://api.github.com/users/cluries/orgs", "repos_url": "https://api.github.com/users/cluries/repos", "events_url": "https://api.github.com/users/cluries/events{/privacy}", "received_events_url": "https://api.github.com/users/cluries/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-01-08T09:49:27Z", "updated_at": "2016-01-12T04:25:06Z", "closed_at": "2016-01-12T04:25:06Z", "author_association": "NONE", "active_lock_reason": null, "body": " In this code, call 3 times  `check_permissions` in one request.\n\n```\nclass RootController(object):\n    @classmethod\n    def check_permissions(cls):\n        if user_is_admin():\n            return True\n        return False\n\n    @secure('check_permissions')\n    @expose()\n    def topsecret(self):\n        return dict()\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/36", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/36/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/36/events", "html_url": "https://github.com/pecan/pecan/issues/36", "id": 123204300, "node_id": "MDU6SXNzdWUxMjMyMDQzMDA=", "number": 36, "title": "\"pecan serve\" fails on newly created skeleton project", "user": {"login": "hozn", "id": 391939, "node_id": "MDQ6VXNlcjM5MTkzOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/391939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hozn", "html_url": "https://github.com/hozn", "followers_url": "https://api.github.com/users/hozn/followers", "following_url": "https://api.github.com/users/hozn/following{/other_user}", "gists_url": "https://api.github.com/users/hozn/gists{/gist_id}", "starred_url": "https://api.github.com/users/hozn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hozn/subscriptions", "organizations_url": "https://api.github.com/users/hozn/orgs", "repos_url": "https://api.github.com/users/hozn/repos", "events_url": "https://api.github.com/users/hozn/events{/privacy}", "received_events_url": "https://api.github.com/users/hozn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-21T03:30:44Z", "updated_at": "2015-12-21T03:35:12Z", "closed_at": "2015-12-21T03:35:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "There appears to be an issue where sys.path does not include the current dir (\"\").\n\nHere are reproduce steps:\n\n```\nshell$ cd ~/workspace\nshell$ mkdir pecantest && cd pecantest/\nshell$  virtualenv /env\nshell$ source env/bin/activate\n(env) shell$ pip install pecan\n(env) shell$ pecan create test_proj\n(env) shell$ cd test_proj/\n(env) shell$ pecan serve config.py \n```\n\nException:\n\n```\n(env)hans@fliptux:~/workspace/pecantest/test_proj$ pecan serve config.py \nTraceback (most recent call last):\n  File \"/home/hans/workspace/pecantest/env/bin/pecan\", line 11, in <module>\n    sys.exit(CommandRunner.handle_command_line())\n  File \"/home/hans/workspace/pecantest/env/local/lib/python2.7/site-packages/pecan/commands/base.py\", line 96, in handle_command_line\n    runner.run(sys.argv[1:])\n  File \"/home/hans/workspace/pecantest/env/local/lib/python2.7/site-packages/pecan/commands/base.py\", line 91, in run\n    self.commands[ns.command_name]().run(ns)\n  File \"/home/hans/workspace/pecantest/env/local/lib/python2.7/site-packages/pecan/commands/serve.py\", line 38, in run\n    app = self.load_app()\n  File \"/home/hans/workspace/pecantest/env/local/lib/python2.7/site-packages/pecan/commands/base.py\", line 162, in load_app\n    return load_app(self.args.config_file)\n  File \"/home/hans/workspace/pecantest/env/local/lib/python2.7/site-packages/pecan/core.py\", line 219, in load_app\n    module = __import__(package_name, fromlist=['app'])\n```\n\nBut I can import the expected module just fine from commandline directly:\n\n```\n(env) shell$ python -c \"__import__('test_proj', fromlist=['app'])\"\n# (no exception)\n```\n\nI'm sure I'm missing something obvious here.  I haven't dug in through the commandline runner to figure out why sys.path is different.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/31", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/31/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/31/events", "html_url": "https://github.com/pecan/pecan/issues/31", "id": 121523636, "node_id": "MDU6SXNzdWUxMjE1MjM2MzY=", "number": 31, "title": "narrow builds of Python will cause utf tests to fail", "user": {"login": "alfredodeza", "id": 317847, "node_id": "MDQ6VXNlcjMxNzg0Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/317847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alfredodeza", "html_url": "https://github.com/alfredodeza", "followers_url": "https://api.github.com/users/alfredodeza/followers", "following_url": "https://api.github.com/users/alfredodeza/following{/other_user}", "gists_url": "https://api.github.com/users/alfredodeza/gists{/gist_id}", "starred_url": "https://api.github.com/users/alfredodeza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alfredodeza/subscriptions", "organizations_url": "https://api.github.com/users/alfredodeza/orgs", "repos_url": "https://api.github.com/users/alfredodeza/repos", "events_url": "https://api.github.com/users/alfredodeza/events{/privacy}", "received_events_url": "https://api.github.com/users/alfredodeza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ryanpetrello", "id": 214912, "node_id": "MDQ6VXNlcjIxNDkxMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/214912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryanpetrello", "html_url": "https://github.com/ryanpetrello", "followers_url": "https://api.github.com/users/ryanpetrello/followers", "following_url": "https://api.github.com/users/ryanpetrello/following{/other_user}", "gists_url": "https://api.github.com/users/ryanpetrello/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryanpetrello/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryanpetrello/subscriptions", "organizations_url": "https://api.github.com/users/ryanpetrello/orgs", "repos_url": "https://api.github.com/users/ryanpetrello/repos", "events_url": "https://api.github.com/users/ryanpetrello/events{/privacy}", "received_events_url": "https://api.github.com/users/ryanpetrello/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ryanpetrello", "id": 214912, "node_id": "MDQ6VXNlcjIxNDkxMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/214912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryanpetrello", "html_url": "https://github.com/ryanpetrello", "followers_url": "https://api.github.com/users/ryanpetrello/followers", "following_url": "https://api.github.com/users/ryanpetrello/following{/other_user}", "gists_url": "https://api.github.com/users/ryanpetrello/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryanpetrello/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryanpetrello/subscriptions", "organizations_url": "https://api.github.com/users/ryanpetrello/orgs", "repos_url": "https://api.github.com/users/ryanpetrello/repos", "events_url": "https://api.github.com/users/ryanpetrello/events{/privacy}", "received_events_url": "https://api.github.com/users/ryanpetrello/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2015-12-10T16:21:37Z", "updated_at": "2015-12-10T21:16:35Z", "closed_at": "2015-12-10T21:16:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\n======================================================================\nERROR: test_rest_with_utf8_uri (pecan.tests.test_rest.TestRestController)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/alfredo/python/pecan/pecan/tests/test_rest.py\", line 1563, in test_rest_with_utf8_uri\n    class FooController(RestController):\n  File \"/Users/alfredo/python/pecan/pecan/tests/test_rest.py\", line 1564, in FooController\n    key = chr(0x1F330) if PY3 else unichr(0x1F330)\nValueError: unichr() arg not in range(0x10000) (narrow Python build)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/30", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/30/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/30/events", "html_url": "https://github.com/pecan/pecan/issues/30", "id": 121522495, "node_id": "MDU6SXNzdWUxMjE1MjI0OTU=", "number": 30, "title": "Test is leaving an open file behind and generating warnings", "user": {"login": "alfredodeza", "id": 317847, "node_id": "MDQ6VXNlcjMxNzg0Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/317847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alfredodeza", "html_url": "https://github.com/alfredodeza", "followers_url": "https://api.github.com/users/alfredodeza/followers", "following_url": "https://api.github.com/users/alfredodeza/following{/other_user}", "gists_url": "https://api.github.com/users/alfredodeza/gists{/gist_id}", "starred_url": "https://api.github.com/users/alfredodeza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alfredodeza/subscriptions", "organizations_url": "https://api.github.com/users/alfredodeza/orgs", "repos_url": "https://api.github.com/users/alfredodeza/repos", "events_url": "https://api.github.com/users/alfredodeza/events{/privacy}", "received_events_url": "https://api.github.com/users/alfredodeza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "alfredodeza", "id": 317847, "node_id": "MDQ6VXNlcjMxNzg0Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/317847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alfredodeza", "html_url": "https://github.com/alfredodeza", "followers_url": "https://api.github.com/users/alfredodeza/followers", "following_url": "https://api.github.com/users/alfredodeza/following{/other_user}", "gists_url": "https://api.github.com/users/alfredodeza/gists{/gist_id}", "starred_url": "https://api.github.com/users/alfredodeza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alfredodeza/subscriptions", "organizations_url": "https://api.github.com/users/alfredodeza/orgs", "repos_url": "https://api.github.com/users/alfredodeza/repos", "events_url": "https://api.github.com/users/alfredodeza/events{/privacy}", "received_events_url": "https://api.github.com/users/alfredodeza/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "alfredodeza", "id": 317847, "node_id": "MDQ6VXNlcjMxNzg0Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/317847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alfredodeza", "html_url": "https://github.com/alfredodeza", "followers_url": "https://api.github.com/users/alfredodeza/followers", "following_url": "https://api.github.com/users/alfredodeza/following{/other_user}", "gists_url": "https://api.github.com/users/alfredodeza/gists{/gist_id}", "starred_url": "https://api.github.com/users/alfredodeza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alfredodeza/subscriptions", "organizations_url": "https://api.github.com/users/alfredodeza/orgs", "repos_url": "https://api.github.com/users/alfredodeza/repos", "events_url": "https://api.github.com/users/alfredodeza/events{/privacy}", "received_events_url": "https://api.github.com/users/alfredodeza/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2015-12-10T16:16:24Z", "updated_at": "2015-12-14T23:34:52Z", "closed_at": "2015-12-14T23:34:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Should be pretty easy to fix, will get a PR for this:\n\n```\ntest_format_line_context (pecan.tests.test_templating.TestTemplateLineFormat) ... /Users/alfredo/python/pecan/pecan/templating.py:192: ResourceWarning: unclosed file <_io.TextIOWrapper name='/var/folders/t8/smzdykh12h39f8r0vwv5vzf00000gn/T/tmp0qtwsa' mode='r' encoding='UTF-8'>\n  lines = open(filename).readlines()\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/28", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/28/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/28/events", "html_url": "https://github.com/pecan/pecan/issues/28", "id": 115958108, "node_id": "MDU6SXNzdWUxMTU5NTgxMDg=", "number": 28, "title": "no 405 is returned when a method is not defined and generic is used", "user": {"login": "alfredodeza", "id": 317847, "node_id": "MDQ6VXNlcjMxNzg0Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/317847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alfredodeza", "html_url": "https://github.com/alfredodeza", "followers_url": "https://api.github.com/users/alfredodeza/followers", "following_url": "https://api.github.com/users/alfredodeza/following{/other_user}", "gists_url": "https://api.github.com/users/alfredodeza/gists{/gist_id}", "starred_url": "https://api.github.com/users/alfredodeza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alfredodeza/subscriptions", "organizations_url": "https://api.github.com/users/alfredodeza/orgs", "repos_url": "https://api.github.com/users/alfredodeza/repos", "events_url": "https://api.github.com/users/alfredodeza/events{/privacy}", "received_events_url": "https://api.github.com/users/alfredodeza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-11-09T20:24:27Z", "updated_at": "2015-11-09T20:29:56Z", "closed_at": "2015-11-09T20:29:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In a vanilla Pecan app with a generic controller method:\n\n```\nfrom pecan import expose, redirect\nfrom webob.exc import status_map\n\n\nclass RootController(object):\n\n    @expose(generic=True, template='index.html')\n    def index(self):\n        return dict(method='GET')\n\n    @index.when(method='POST')\n        return dict(method='POST')\n```\n\nThe following test fails. Instead of returning a 405 we see 200:\n\n```\nclass TestRootController(FunctionalTest):\n\n    def test_get(self):\n        response = self.app.put('/')\n        assert response.status_int == 405\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/26", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/26/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/26/events", "html_url": "https://github.com/pecan/pecan/issues/26", "id": 110707172, "node_id": "MDU6SXNzdWUxMTA3MDcxNzI=", "number": 26, "title": "automatic extention detection overrides explicit `content_type`", "user": {"login": "alfredodeza", "id": 317847, "node_id": "MDQ6VXNlcjMxNzg0Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/317847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alfredodeza", "html_url": "https://github.com/alfredodeza", "followers_url": "https://api.github.com/users/alfredodeza/followers", "following_url": "https://api.github.com/users/alfredodeza/following{/other_user}", "gists_url": "https://api.github.com/users/alfredodeza/gists{/gist_id}", "starred_url": "https://api.github.com/users/alfredodeza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alfredodeza/subscriptions", "organizations_url": "https://api.github.com/users/alfredodeza/orgs", "repos_url": "https://api.github.com/users/alfredodeza/repos", "events_url": "https://api.github.com/users/alfredodeza/events{/privacy}", "received_events_url": "https://api.github.com/users/alfredodeza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-09T17:51:15Z", "updated_at": "2018-01-30T03:52:16Z", "closed_at": "2018-01-30T03:52:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I kept getting a `404 Not Found` error where I was sure I had the right code path to get to an `index` controller method using a url that ended on `.rpm`.\n\nThis happened only on a Linux box where the `mimetpye.guess_type` function guessed that something ending on `.rpm` should be a `application/x-redhat-package-manager` type. In OSX this detection doesn't return a specific content type and all tests would pass.\n\nAfter enabling DEBUG logging for Pecan the error showed:\n\n```\n[ERROR   ] [pecan.core][MainThread] Controller 'index' defined does not support content_type 'application/x-redhat-package-manager'. Supported type(s): ['application/json']\n```\n\nThe code to replicate the issue ( controllers/root.py ):\n\n```\nfrom pecan import expose, redirect\nfrom webob.exc import status_map\n\n\nclass BinaryController(object):\n\n    def __init__(self, name):\n        self.name = name\n\n    @expose('json', content_type='application/json')\n    def index(self):\n        return {}\n\n\nclass RootController(object):\n\n    @expose(generic=True, template='index.html')\n    def index(self):\n        return dict()\n\n    @index.when(method='POST')\n    def index_post(self, q):\n        redirect('http://pecan.readthedocs.org/en/latest/search.html?q=%s' % q)\n\n    @expose('error.html')\n    def error(self, status):\n        try:\n            status = int(status)\n        except ValueError:  # pragma: no cover\n            status = 500\n        message = getattr(status_map.get(status), 'explanation', '')\n        return dict(status=status, message=message)\n\n    @expose()\n    def _lookup(self, name, *remainder):\n        return BinaryController(name), remainder\n```\n\nAnd hit `localhost:8080/some_binary.rpm`\n\nA few things that should be noted here:\n- If this is an error condition, why is it returning a 404? I was expecting a more explicit error (like a `406 Not Acceptable` which is actually used to report the same error condition a few lines above the one I was getting: https://github.com/pecan/pecan/blob/master/pecan/core.py#L506\n- Automatic content-type is nice, but when it fails it should be very clear what is going on and why. It would be nice to have logging enabled for `pecan` at the error level by default (scaffolds would need to change)\n- if the controller method is _explicitly_ setting the `content_type` (as shown in the example) no automatic detection should forcefully override it. The explicit content_type should be respected if present, otherwise fall back to auto detection.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/19", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/19/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/19/events", "html_url": "https://github.com/pecan/pecan/issues/19", "id": 109446580, "node_id": "MDU6SXNzdWUxMDk0NDY1ODA=", "number": 19, "title": "Python 3-specific bug: Attribute error: 'im_class'", "user": {"login": "nmakhotkin", "id": 4181806, "node_id": "MDQ6VXNlcjQxODE4MDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4181806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nmakhotkin", "html_url": "https://github.com/nmakhotkin", "followers_url": "https://api.github.com/users/nmakhotkin/followers", "following_url": "https://api.github.com/users/nmakhotkin/following{/other_user}", "gists_url": "https://api.github.com/users/nmakhotkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/nmakhotkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nmakhotkin/subscriptions", "organizations_url": "https://api.github.com/users/nmakhotkin/orgs", "repos_url": "https://api.github.com/users/nmakhotkin/repos", "events_url": "https://api.github.com/users/nmakhotkin/events{/privacy}", "received_events_url": "https://api.github.com/users/nmakhotkin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-02T08:01:55Z", "updated_at": "2015-10-16T19:16:52Z", "closed_at": "2015-10-16T19:16:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "From OpenStack maillist thread - http://lists.openstack.org/pipermail/openstack-dev/2015-October/076022.html\n\nTraceback: http://paste.openstack.org/show/475041/\n\nThe error goes from walk_controller method in pecan/hooks.py:\n\nhttps://github.com/pecan/pecan/blob/master/pecan/hooks.py#L51\n\n**value.im_class** should be replaced on **value.**self**.**class****\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/18", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/18/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/18/events", "html_url": "https://github.com/pecan/pecan/issues/18", "id": 102523492, "node_id": "MDU6SXNzdWUxMDI1MjM0OTI=", "number": 18, "title": "Tag for 1.0.2 release not available", "user": {"login": "toabctl", "id": 276317, "node_id": "MDQ6VXNlcjI3NjMxNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/276317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toabctl", "html_url": "https://github.com/toabctl", "followers_url": "https://api.github.com/users/toabctl/followers", "following_url": "https://api.github.com/users/toabctl/following{/other_user}", "gists_url": "https://api.github.com/users/toabctl/gists{/gist_id}", "starred_url": "https://api.github.com/users/toabctl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toabctl/subscriptions", "organizations_url": "https://api.github.com/users/toabctl/orgs", "repos_url": "https://api.github.com/users/toabctl/repos", "events_url": "https://api.github.com/users/toabctl/events{/privacy}", "received_events_url": "https://api.github.com/users/toabctl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-08-22T10:20:24Z", "updated_at": "2015-08-22T12:17:22Z", "closed_at": "2015-08-22T12:17:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "on pypi the last release is 1.0.2 but on github there is no 1.0.2. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/15", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/15/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/15/events", "html_url": "https://github.com/pecan/pecan/issues/15", "id": 101104697, "node_id": "MDU6SXNzdWUxMDExMDQ2OTc=", "number": 15, "title": "`IndexError` from `get_args` in Python 2.6", "user": {"login": "alfredodeza", "id": 317847, "node_id": "MDQ6VXNlcjMxNzg0Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/317847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alfredodeza", "html_url": "https://github.com/alfredodeza", "followers_url": "https://api.github.com/users/alfredodeza/followers", "following_url": "https://api.github.com/users/alfredodeza/following{/other_user}", "gists_url": "https://api.github.com/users/alfredodeza/gists{/gist_id}", "starred_url": "https://api.github.com/users/alfredodeza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alfredodeza/subscriptions", "organizations_url": "https://api.github.com/users/alfredodeza/orgs", "repos_url": "https://api.github.com/users/alfredodeza/repos", "events_url": "https://api.github.com/users/alfredodeza/events{/privacy}", "received_events_url": "https://api.github.com/users/alfredodeza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-08-14T21:16:49Z", "updated_at": "2015-08-21T16:56:14Z", "closed_at": "2015-08-21T16:56:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am not entirely sure I understand, but trying to get a release of pecan-notario (a validation engine and decorator) and having some issues with Python 2.6, where failures look like:\n\n```\npy.test -x\n========================================================================== test session starts ===============================================================================\nplatform darwin -- Python 2.6.8 -- py-1.4.30 -- pytest-2.7.2\nrootdir: /Users/alfredo/python/pecan-notario, inifile:\ncollected 21 items\n\ntests/functional/test_decorator.py ............F\n\n================================================================================ FAILURES ====================================================================================\n______________________________________________________________ TestCallableHandler.test_basic_functionality __________________________________________________________________\n\nself = <test_decorator.TestCallableHandler object at 0x102e8f9d0>\n\n    def test_basic_functionality(self):\n        body = '{\"key\":\"value\"}'\n        response = self.app.post('/', body,\n>           [('Content-Type', 'application/json')]\n        )\n\ntests/functional/test_decorator.py:28:\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n../.tox/py26/lib/python2.6/site-packages/webtest/app.py:370: in post\n    content_type=content_type)\n../.tox/py26/lib/python2.6/site-packages/webtest/app.py:735: in _gen_request\n    expect_errors=expect_errors)\n../.tox/py26/lib/python2.6/site-packages/webtest/app.py:605: in do_request\n    res = req.get_response(app, catch_exc_info=True)\n../.tox/py26/lib/python2.6/site-packages/webob/request.py:1313: in send\n    application, catch_exc_info=True)\n../.tox/py26/lib/python2.6/site-packages/webob/request.py:1281: in call_application\n    app_iter = application(self.environ, start_response)\n../.tox/py26/lib/python2.6/site-packages/webtest/lint.py:198: in lint_app\n    iterator = application(environ, start_response_wrapper)\n../.tox/py26/lib/python2.6/site-packages/pecan/middleware/recursive.py:56: in __call__\n    return self.application(environ, start_response)\n../.tox/py26/lib/python2.6/site-packages/pecan/core.py:829: in __call__\n    return super(Pecan, self).__call__(environ, start_response)\n../.tox/py26/lib/python2.6/site-packages/pecan/core.py:677: in __call__\n    controller, args, kwargs = self.find_controller(state)\n../.tox/py26/lib/python2.6/site-packages/pecan/core.py:847: in find_controller\n    controller, args, kw = super(Pecan, self).find_controller(_state)\n../.tox/py26/lib/python2.6/site-packages/pecan/core.py:543: in find_controller\n    im_self\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pecan.core.Pecan object at 0x102e8fed0>, state = <pecan.core.RoutingState object at 0x102e95110>, all_params = {'key': 'value'}, remainder = []\nargspec = ArgSpec(args=[], varargs=None, keywords=None, defaults=None), im_self = None\n\n    def get_args(self, state, all_params, remainder, argspec, im_self):\n        '''\n            Determines the arguments for a controller based upon parameters\n            passed the argument specification for the controller.\n            '''\n        args = []\n        varargs = []\n        kwargs = dict()\n        valid_args = argspec.args[:]\n        if ismethod(state.controller) or im_self:\n>           valid_args.pop(0)  # pop off `self`\nE           IndexError: pop from empty list\n\n../.tox/py26/lib/python2.6/site-packages/pecan/core.py:361: IndexError\n```\n\nIf I go and step through this part of the code, I see that `args` is an empty list, so the `pop()` fails.\n\nI don't know why is this the case or why this is happening on Python 2.6 alone.\n\nInvestigating further, I find that if the validation decorator uses a `lambda` it all breaks. If I remove the lambda the test works.\n\nThis is how that test class looks:\n\n```\ndef make_app(self, schema=('key', 'value')):\n    import pecan_notario\n    from pecan import Pecan, expose, request\n    from pecan.middleware.recursive import RecursiveMiddleware\n    from webtest import TestApp\n\n    simple_schema = schema\n\n    class RootControllerTwo(object):\n        @expose('json')\n        @pecan_notario.validate(\n            simple_schema, handler=lambda: '/error'\n        )\n        def index(self, **kw):\n            return dict(success=True)\n\n        @expose('json')\n        def error(self, **kw):\n            return dict(success=False, error=str(request.validation_error))\n\n    return TestApp(RecursiveMiddleware(Pecan(RootControllerTwo())))\n```\n\nThese might look a bit to dense, but the bottom line is that `pop()` and that this only happens when the decorator is using `lambda`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/11", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/11/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/11/events", "html_url": "https://github.com/pecan/pecan/issues/11", "id": 97978213, "node_id": "MDU6SXNzdWU5Nzk3ODIxMw==", "number": 11, "title": "Return json debug information message on exception inside a json exposed RestController method", "user": {"login": "ryanpetrello", "id": 214912, "node_id": "MDQ6VXNlcjIxNDkxMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/214912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryanpetrello", "html_url": "https://github.com/ryanpetrello", "followers_url": "https://api.github.com/users/ryanpetrello/followers", "following_url": "https://api.github.com/users/ryanpetrello/following{/other_user}", "gists_url": "https://api.github.com/users/ryanpetrello/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryanpetrello/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryanpetrello/subscriptions", "organizations_url": "https://api.github.com/users/ryanpetrello/orgs", "repos_url": "https://api.github.com/users/ryanpetrello/repos", "events_url": "https://api.github.com/users/ryanpetrello/events{/privacy}", "received_events_url": "https://api.github.com/users/ryanpetrello/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 241238079, "node_id": "MDU6TGFiZWwyNDEyMzgwNzk=", "url": "https://api.github.com/repos/pecan/pecan/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-29T16:43:02Z", "updated_at": "2018-01-30T04:05:47Z", "closed_at": "2018-01-30T04:05:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Originally reported by Moe Oslan at https://bugs.launchpad.net/pecan/+bug/1296064\n\nReproduction:\n- Set conf.app.debug = True\n- Create a controller that extends the RestController\n- Create a method inside this controller that is annotated with @expose('json')\n- Raise an exception within this method\n- Call this method via HTTP, e.g. curl\n\nExpected Result:\n- Json formatted debug information\n\nActual Result:\n- HTML formatted debug information\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/10", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/10/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/10/events", "html_url": "https://github.com/pecan/pecan/issues/10", "id": 97975125, "node_id": "MDU6SXNzdWU5Nzk3NTEyNQ==", "number": 10, "title": "sticky pecan config when testing", "user": {"login": "ryanpetrello", "id": 214912, "node_id": "MDQ6VXNlcjIxNDkxMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/214912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryanpetrello", "html_url": "https://github.com/ryanpetrello", "followers_url": "https://api.github.com/users/ryanpetrello/followers", "following_url": "https://api.github.com/users/ryanpetrello/following{/other_user}", "gists_url": "https://api.github.com/users/ryanpetrello/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryanpetrello/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryanpetrello/subscriptions", "organizations_url": "https://api.github.com/users/ryanpetrello/orgs", "repos_url": "https://api.github.com/users/ryanpetrello/repos", "events_url": "https://api.github.com/users/ryanpetrello/events{/privacy}", "received_events_url": "https://api.github.com/users/ryanpetrello/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-29T16:29:35Z", "updated_at": "2015-07-31T18:15:53Z", "closed_at": "2015-07-31T18:15:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Originally reported by alfredodeza at https://bugs.launchpad.net/pecan/+bug/1476711\n\nWhen testing Pecan, I found that when altering dict-like values in the configuration for a test, the configuration would not\nreset to its previous state even though it is getting cleared by the teardown method.\n\nThis can be replicated in a vanilla Pecan app that uses the base 'functional' class for testing::\n\n```\nimport os\nfrom unittest import TestCase\nfrom pecan import set_config\nfrom pecan.testing import load_test_app\n\n__all__ = ['FunctionalTest']\n\nclass FunctionalTest(TestCase):\n\n\u00a0\u00a0\u00a0\u00a0def setUp(self):\n        self.app = load_test_app(os.path.join(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0os.path.dirname(__file__),\n            'config.py'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0))\n\n        def tearDown(self):\n            set_config({}, overwrite=True)\n```\n\nAnd adds the following two tests for the root controller:\n\n```\nfrom pecan.configuration import Config\nimport pecan\nfrom example.tests import FunctionalTest\n\nclass TestRootController(FunctionalTest):\n\n    def test_conf_default(self):\n        assert pecan.conf.server.to_dict() == {'port': '8080', 'host': '0.0.0.0'}\n\n    def test_conf_changed(self):\n        pecan.conf.server = Config({'port': '80'})\n        assert pecan.conf.server.to_dict() == {'port': '80'}\n```\n\nIn this case, 'test_conf_changed' will run first, it will pass, but when 'test_conf_default' comes around and will get the polluted configuration and will fail.\n\nThe tests fail only when they both run at the same time (in the same test run), but will pass individually.\n\nThey both fail with py.test and nose:\n\nnose:\n\nnosetests test_functional.py\n# .F\n## FAIL: test_conf_default (example.tests.test_functional.TestRootController)\n\nTraceback (most recent call last):\n\u00a0\u00a0File \"/Users/alfredo/python/pecan/tmp/example/example/tests/test_functional.py\", line 9, in test_conf_default\n\u00a0\u00a0\u00a0\u00a0assert pecan.conf.server.to_dict() == {'port': '8080', 'host': '0.0.0.0'}\nAssertionError\n\n---\n\nRan 2 tests in 0.002s\n\nFAILED (failures=1)\n\npy.test:\n\npy.test test_functional.py\n============================================================================== test session starts ===============================================================================\nplatform darwin -- Python 2.7.5 -- pytest-2.4.2\ncollected 2 items\n\ntest_functional.py .F\n\n==================================================================================== FAILURES ====================================================================================\n______________________________________________________________________ TestRootController.test_conf_default ______________________________________________________________________\n\nself = <example.tests.test_functional.TestRootController testMethod=test_conf_default>\n\n\u00a0\u00a0\u00a0\u00a0def test_conf_default(self):\n\n> ```\n>   assert pecan.conf.server.to_dict() == {'port': '8080', 'host': '0.0.0.0'}\n> ```\n> \n> E       AssertionError: assert {'port': '80'} == {'host': '0.0.0.0', 'port': '8080'}\n> E         Differing items:\n> E         {'port': '80'} != {'port': '8080'}\n> E         Right contains more items:\n> E         {'host': '0.0.0.0'}\n\ntest_functional.py:9: AssertionError\n======================================================================= 1 failed, 1 passed in 0.18 seconds\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pecan/pecan/issues/6", "repository_url": "https://api.github.com/repos/pecan/pecan", "labels_url": "https://api.github.com/repos/pecan/pecan/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/pecan/pecan/issues/6/comments", "events_url": "https://api.github.com/repos/pecan/pecan/issues/6/events", "html_url": "https://github.com/pecan/pecan/issues/6", "id": 97771401, "node_id": "MDU6SXNzdWU5Nzc3MTQwMQ==", "number": 6, "title": "pecan.abort exception changes on each run", "user": {"login": "ryanpetrello", "id": 214912, "node_id": "MDQ6VXNlcjIxNDkxMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/214912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryanpetrello", "html_url": "https://github.com/ryanpetrello", "followers_url": "https://api.github.com/users/ryanpetrello/followers", "following_url": "https://api.github.com/users/ryanpetrello/following{/other_user}", "gists_url": "https://api.github.com/users/ryanpetrello/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryanpetrello/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryanpetrello/subscriptions", "organizations_url": "https://api.github.com/users/ryanpetrello/orgs", "repos_url": "https://api.github.com/users/ryanpetrello/repos", "events_url": "https://api.github.com/users/ryanpetrello/events{/privacy}", "received_events_url": "https://api.github.com/users/ryanpetrello/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-28T18:36:19Z", "updated_at": "2015-07-31T18:15:37Z", "closed_at": "2015-07-31T18:15:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Originally reported by Stanislaw Pitucha at https://bugs.launchpad.net/pecan/+bug/1478732\n\nThere's an issue with the way Pecan chooses exception to raise on pecan.abort(). The exception is selected based only on the http status code, but that's not a 1-many mapping.\n\nWhen webob initialises the status_map, any out of 5 exceptions can end up being the last one assigned to 500 for example. With some debugging code:\n\nadded error 500 = <class 'webob.exc.HTTPInternalServerError'>\nadded error 500 = <class 'webob.exc.HTTPError'>\nadded error 500 = <class 'webob.exc.HTTPServerError'>\nadded error 500 = <class 'webob.exc.WSGIHTTPException'>\nadded error 500 = <class 'webob.exc.HTTPRedirection'>\n\nThis wouldn't be that bad if they were all  HTTPServerError-s for example. But here WSGIHTTPException comes from a different hierarhy and it's not a child of HTTPServerError, only of HTTPError.\n\nWhile this doesn't make much difference at runtime and the final response for the user, it affects functional testing of pecan apps. Anchor ran into this issue when testing for failures produced by pecan.abort(500, \"...\"). On half of the test runs the expected HTTPServerError was caught, on the other half WSGIHTTPException broke the testing.\n\nI think pecan should keep its own status map keeping the most specific errors only (like the table in the comment at https://github.com/Pylons/webob/blob/master/webob/exc.py#L20). But I'm sure there are other possible solutions. The most important thing is that pecan should return the same error on every run, not a random one.\n", "performed_via_github_app": null, "score": 1.0}]}