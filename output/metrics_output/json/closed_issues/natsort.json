{"total_count": 56, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/SethMMorton/natsort/issues/114", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/114/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/114/events", "html_url": "https://github.com/SethMMorton/natsort/issues/114", "id": 598983779, "node_id": "MDU6SXNzdWU1OTg5ODM3Nzk=", "number": 114, "title": "Add inplace option", "user": {"login": "fhabermacher", "id": 1185983, "node_id": "MDQ6VXNlcjExODU5ODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1185983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhabermacher", "html_url": "https://github.com/fhabermacher", "followers_url": "https://api.github.com/users/fhabermacher/followers", "following_url": "https://api.github.com/users/fhabermacher/following{/other_user}", "gists_url": "https://api.github.com/users/fhabermacher/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhabermacher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhabermacher/subscriptions", "organizations_url": "https://api.github.com/users/fhabermacher/orgs", "repos_url": "https://api.github.com/users/fhabermacher/repos", "events_url": "https://api.github.com/users/fhabermacher/events{/privacy}", "received_events_url": "https://api.github.com/users/fhabermacher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-13T16:21:23Z", "updated_at": "2020-04-14T06:07:37Z", "closed_at": "2020-04-13T18:31:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the feature or enhancement**\r\nAdd option inplace, just for convenience :-)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/110", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/110/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/110/events", "html_url": "https://github.com/SethMMorton/natsort/issues/110", "id": 555682521, "node_id": "MDU6SXNzdWU1NTU2ODI1MjE=", "number": 110, "title": "Performance compared to other simpler algorithm, and keygen improvement", "user": {"login": "ganego", "id": 4750881, "node_id": "MDQ6VXNlcjQ3NTA4ODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4750881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ganego", "html_url": "https://github.com/ganego", "followers_url": "https://api.github.com/users/ganego/followers", "following_url": "https://api.github.com/users/ganego/following{/other_user}", "gists_url": "https://api.github.com/users/ganego/gists{/gist_id}", "starred_url": "https://api.github.com/users/ganego/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ganego/subscriptions", "organizations_url": "https://api.github.com/users/ganego/orgs", "repos_url": "https://api.github.com/users/ganego/repos", "events_url": "https://api.github.com/users/ganego/events{/privacy}", "received_events_url": "https://api.github.com/users/ganego/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302838, "node_id": "MDU6TGFiZWw0MzAyODM4", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-01-27T16:18:23Z", "updated_at": "2020-02-03T05:11:45Z", "closed_at": "2020-01-28T11:35:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use the following function to have natsort and it worked fine for all my usecases until now - now I needed to sort paths with subfolders, and your library does a very good job at sorting those correctly via `ns.PATH`, so thank you for that.\r\n\r\n```\r\ndef sorted_alphanumeric(data):\r\n    convert = lambda text: int(text) if text.isdigit() else text.lower()\r\n    alphanum_key = lambda key: [ convert(c) for c in re.split('([0-9]+)', key) ]\r\n    return sorted(data, key=alphanum_key)\r\n```\r\n\r\nFor a simple test case (for non-path strings like `[\"a\", \"b\", \"c\", \"d\"]`), it's 10x faster than your library. I tested this by simply running each sort 10k times.\r\n\r\nNot sure if something can be implemented to sort out \"simple\" cases like those and use a faster method, but I'd like to propose another way where I could speed up your library in my test case a lot: \r\n\r\nThe problem mainly is creating the 'key' which takes time. So if we create they key once and then use the sort 10k times, the keygen has to run only twice.  \r\n\r\nIn `def natsorted(seq, key=None, reverse=False, alg=ns.DEFAULT)` you allow `key` to be given to the function, yet giving it does absolutely nothing. You still run `key = natsort_keygen(key, alg)` every time, and the `key` will be just passed along.\r\n\r\nSo add `if not key` before `key = natsort_keygen(key, alg)`. Hence, when given an already generated key, you won't generate it again. From doing that I could speed up my test from being 13x slower to only being 2x slower.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/109", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/109/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/109/events", "html_url": "https://github.com/SethMMorton/natsort/issues/109", "id": 555312678, "node_id": "MDU6SXNzdWU1NTUzMTI2Nzg=", "number": 109, "title": "Strange result for specific number strings using Dutch locale", "user": {"login": "thijsvandien", "id": 2722238, "node_id": "MDQ6VXNlcjI3MjIyMzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2722238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thijsvandien", "html_url": "https://github.com/thijsvandien", "followers_url": "https://api.github.com/users/thijsvandien/followers", "following_url": "https://api.github.com/users/thijsvandien/following{/other_user}", "gists_url": "https://api.github.com/users/thijsvandien/gists{/gist_id}", "starred_url": "https://api.github.com/users/thijsvandien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thijsvandien/subscriptions", "organizations_url": "https://api.github.com/users/thijsvandien/orgs", "repos_url": "https://api.github.com/users/thijsvandien/repos", "events_url": "https://api.github.com/users/thijsvandien/events{/privacy}", "received_events_url": "https://api.github.com/users/thijsvandien/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302834, "node_id": "MDU6TGFiZWw0MzAyODM0", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-01-27T00:35:42Z", "updated_at": "2020-01-28T20:09:24Z", "closed_at": "2020-01-28T20:09:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Actual behavior**\r\nHuman sorting `['461761', '462166']` using the Dutch locale gives the wrong result `['462166', '461761']`.\r\n\r\n**Expected behavior**\r\nThe result should be `['461761', '462166']`.\r\n\r\n**Environment 1:**\r\n - Python 3.8.1\r\n - Mac OS X 10.14.6\r\n - `PyICU` installed\r\n - Locale set to `'nl_NL'`\r\n\r\n**Environment 2:**\r\n - Python 3.8.0\r\n - Windows 7 SP1\r\n - `PyICU` not installed\r\n - Locale set to `'nl-NL'`\r\n\r\n**Environment 3:**\r\n - Python 3.8.1\r\n - FreeBSD 12.1\r\n - `PyICU` not installed\r\n - Locale set to `'nl_NL.ISO8859-1'`\r\n\r\n**To reproduce**\r\n```\r\n>>> import locale\r\n>>> locale.setlocale(locale.LC_ALL, 'Dutch') # replace 'Dutch' as appropriate\r\n>>> from natsort import humansorted\r\n>>> humansorted(['461761', '462166'])\r\n['462166', '461761']\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/108", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/108/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/108/events", "html_url": "https://github.com/SethMMorton/natsort/issues/108", "id": 541514973, "node_id": "MDU6SXNzdWU1NDE1MTQ5NzM=", "number": 108, "title": "test_sep_inserter_inserts_separator_between_two_numbers fails", "user": {"login": "mcepl", "id": 198999, "node_id": "MDQ6VXNlcjE5ODk5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/198999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcepl", "html_url": "https://github.com/mcepl", "followers_url": "https://api.github.com/users/mcepl/followers", "following_url": "https://api.github.com/users/mcepl/following{/other_user}", "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions", "organizations_url": "https://api.github.com/users/mcepl/orgs", "repos_url": "https://api.github.com/users/mcepl/repos", "events_url": "https://api.github.com/users/mcepl/events{/privacy}", "received_events_url": "https://api.github.com/users/mcepl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302839, "node_id": "MDU6TGFiZWw0MzAyODM5", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-12-22T23:32:50Z", "updated_at": "2020-02-03T05:14:06Z", "closed_at": "2020-01-09T09:14:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nIrregularly and on some minor architectures (i586, ppc64le) the test test_sep_inserter_inserts_separator_between_two_numbers fails from time to time with this:\r\n```\r\n[  185s] =================================== FAILURES ===================================\r\n[  185s] ___________ test_sep_inserter_inserts_separator_between_two_numbers ____________\r\n[  185s] \r\n[  185s]     @given(lists(elements=text().filter(bool) | integers(), min_size=3))\r\n[  185s] >   def test_sep_inserter_inserts_separator_between_two_numbers(x):\r\n[  185s] E   hypothesis.errors.FailedHealthCheck: Data generation is extremely slow: Only produced 0 valid examples in 1.05 seconds (5 invalid ones and 2 exceeded maximum size). Try decreasing size of the data you're generating (with e.g.max_size or max_leaves parameters).\r\n[  185s] E   See https://hypothesis.readthedocs.io/en/latest/healthchecks.html for more information about this. If you want to disable just this health check, add HealthCheck.too_slow to the suppress_health_check settings for this test.\r\n[  185s] \r\n[  185s] tests/test_utils.py:121: FailedHealthCheck\r\n[  185s] ---------------------------------- Hypothesis ----------------------------------\r\n[  185s] You can add @seed(329818451744358783807391397008596432428) to this test or run pytest with --hypothesis-seed=329818451744358783807391397008596432428 to reproduce this failure.\r\n[  185s] ====== 1 failed, 264 passed, 7 skipped, 6 deselected in 118.97s (0:01:58) ======\r\n```\r\n\r\n**Expected behavior**\r\nALl tests should pass (and ignoring #107 for a moment).\r\n\r\n**Environment (please complete the following information):**\r\n - Python Version: 3.7.3\r\n - OS openSUSE/Tumbleweed (in fact building the official packages for it)\r\n - If the bug involves `LOCALE` or `humansorted`:\r\n    - Is `PyICU` installed? No\r\n    - Do you have a locale set? If so, to what? Yes, ``export LANG=en_US.UTF8``\r\n      is run before the tests are run.\r\n\r\n**To Reproduce**\r\nSee above.\r\n\r\nIt seems to me that suppressing health heck of ``hypothesis.HealthCheck.too_slow`` is too optimistic and that line should be just elimnated from ``conftest.py``.\r\n\r\n[Full build log with all details](https://github.com/SethMMorton/natsort/files/3993124/_log.txt) (includes list of all installed packages as well with their versions)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/107", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/107/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/107/events", "html_url": "https://github.com/SethMMorton/natsort/issues/107", "id": 541510386, "node_id": "MDU6SXNzdWU1NDE1MTAzODY=", "number": 107, "title": "pytest-mock API change in version >= 12.0 causes failing tests", "user": {"login": "mcepl", "id": 198999, "node_id": "MDQ6VXNlcjE5ODk5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/198999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcepl", "html_url": "https://github.com/mcepl", "followers_url": "https://api.github.com/users/mcepl/followers", "following_url": "https://api.github.com/users/mcepl/following{/other_user}", "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions", "organizations_url": "https://api.github.com/users/mcepl/orgs", "repos_url": "https://api.github.com/users/mcepl/repos", "events_url": "https://api.github.com/users/mcepl/events{/privacy}", "received_events_url": "https://api.github.com/users/mcepl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302834, "node_id": "MDU6TGFiZWw0MzAyODM0", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-12-22T22:48:01Z", "updated_at": "2020-02-03T05:14:16Z", "closed_at": "2020-01-07T15:50:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen running the test suite couple of tests fail:\r\n\r\n```\r\n[   50s] =================================== FAILURES ===================================\r\n[   50s] _____________ test_natsort_keygen_with_locale[48-expected0-False] ______________\r\n[   50s] \r\n[   50s] mocker = <pytest_mock.plugin.MockFixture object at 0x7fce00e10860>\r\n[   50s] arbitrary_input = ['6A-5.034e+1', '/Folder (1)/Foo', 56.7], alg = 48\r\n[   50s] expected = (('', 6, '!\\x01\\x08\\x01\\x04\\x01\\x01\u0105\\x01\\x8a', 5, '\\x01\\x01\\x01\\x01\\x8b', 34, ...), ('&/,$%2\\x01\\x08\\x08\\x08\\x08\\x08\\x...x01\u00d4\\x01\u00d6\\x01\u00f4\\x01~\\x01\\x85', 1, '&//\\x01\\x08\\x08\\x08\\x01\\x04\\x02\\x02\\x01\\x01\\x86\\x01\\x8c\\x01\u0117\\x01\u00ea\\x01\u00ea'), ('', 56.7))\r\n[   50s] is_dumb = False\r\n[   50s] \r\n[   50s]     @pytest.mark.parametrize(\r\n[   50s]         \"alg, expected, is_dumb\",\r\n[   50s]         [\r\n[   50s]             (\r\n[   50s]                 ns.LOCALE,\r\n[   50s]                 (\r\n[   50s]                     (null_string_locale, 6, \"A-\", 5, \".\", 34, \"e+\", 1),\r\n[   50s]                     (\"/Folder (\", 1, \")/Foo\"),\r\n[   50s]                     (null_string_locale, 56.7),\r\n[   50s]                 ),\r\n[   50s]                 False,\r\n[   50s]             ),\r\n[   50s]             (\r\n[   50s]                 ns.LOCALE,\r\n[   50s]                 (\r\n[   50s]                     (null_string_locale, 6, \"aa--\", 5, \"..\", 34, \"eE++\", 1),\r\n[   50s]                     (\"//ffoOlLdDeErR  ((\", 1, \"))//ffoOoO\"),\r\n[   50s]                     (null_string_locale, 56.7),\r\n[   50s]                 ),\r\n[   50s]                 True,\r\n[   50s]             ),\r\n[   50s]             (\r\n[   50s]                 ns.LOCALE | ns.CAPITALFIRST,\r\n[   50s]                 (\r\n[   50s]                     ((\"\",), (null_string_locale, 6, \"A-\", 5, \".\", 34, \"e+\", 1)),\r\n[   50s]                     ((\"/\",), (\"/Folder (\", 1, \")/Foo\")),\r\n[   50s]                     ((\"\",), (null_string_locale, 56.7)),\r\n[   50s]                 ),\r\n[   50s]                 False,\r\n[   50s]             ),\r\n[   50s]         ],\r\n[   50s]     )\r\n[   50s]     @pytest.mark.usefixtures(\"with_locale_en_us\")\r\n[   50s]     def test_natsort_keygen_with_locale(mocker, arbitrary_input, alg, expected, is_dumb):\r\n[   50s]         # First, apply the correct strxfrm function to the string values.\r\n[   50s]         strxfrm = get_strxfrm()\r\n[   50s]         expected = [list(sub) for sub in expected]\r\n[   50s]         try:\r\n[   50s]             for i in (2, 4, 6):\r\n[   50s]                 expected[0][i] = strxfrm(expected[0][i])\r\n[   50s]             for i in (0, 2):\r\n[   50s]                 expected[1][i] = strxfrm(expected[1][i])\r\n[   50s]             expected = tuple(tuple(sub) for sub in expected)\r\n[   50s]         except IndexError:  # ns.LOCALE | ns.CAPITALFIRST\r\n[   50s]             expected = [[list(subsub) for subsub in sub] for sub in expected]\r\n[   50s]             for i in (2, 4, 6):\r\n[   50s]                 expected[0][1][i] = strxfrm(expected[0][1][i])\r\n[   50s]             for i in (0, 2):\r\n[   50s]                 expected[1][1][i] = strxfrm(expected[1][1][i])\r\n[   50s]             expected = tuple(tuple(tuple(subsub) for subsub in sub) for sub in expected)\r\n[   50s]     \r\n[   50s] >       with mocker.patch(\"natsort.compat.locale.dumb_sort\", return_value=is_dumb):\r\n[   50s] \r\n[   50s] tests/test_natsort_keygen.py:155: \r\n[   50s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   50s] /usr/lib/python3.7/site-packages/pytest_mock/plugin.py:188: in __call__\r\n[   50s]     return self._start_patch(self.mock_module.patch, *args, **kwargs)\r\n[   50s] /usr/lib/python3.7/site-packages/pytest_mock/plugin.py:150: in _start_patch\r\n[   50s]     self._enforce_no_with_context(inspect.stack())\r\n[   50s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   50s] \r\n[   50s] self = <pytest_mock.plugin.MockFixture._Patcher object at 0x7fce00e10518>\r\n[   50s] stack = [FrameInfo(frame=<frame at 0x55f8e50b3668, file '/usr/lib/python3.7/site-packages/pytest_mock/plugin.py', line 150, co..., code_context=['            firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\\n'], index=0), ...]\r\n[   50s] \r\n[   50s]     def _enforce_no_with_context(self, stack):\r\n[   50s]         \"\"\"raises a ValueError if mocker is used in a with context\"\"\"\r\n[   50s]         caller = stack[2]\r\n[   50s]         frame = caller[0]\r\n[   50s]         info = inspect.getframeinfo(frame)\r\n[   50s]         if info.code_context is None:\r\n[   50s]             # no source code available (#169)\r\n[   50s]             return\r\n[   50s]         code_context = \" \".join(info.code_context).strip()\r\n[   50s]     \r\n[   50s]         if code_context.startswith(\"with mocker.\"):\r\n[   50s]             raise ValueError(\r\n[   50s] >               \"Using mocker in a with context is not supported. \"\r\n[   50s]                 \"https://github.com/pytest-dev/pytest-mock#note-about-usage-as-context-manager\"\r\n[   50s]             )\r\n[   50s] E           ValueError: Using mocker in a with context is not supported. https://github.com/pytest-dev/pytest-mock#note-about-usage-as-context-manager\r\n[   50s] \r\n[   50s] /usr/lib/python3.7/site-packages/pytest_mock/plugin.py:170: ValueError\r\n[   50s] ______________ test_natsort_keygen_with_locale[48-expected1-True] ______________\r\n[   50s] \r\n[   50s] mocker = <pytest_mock.plugin.MockFixture object at 0x7fce00e5a2e8>\r\n[   50s] arbitrary_input = ['6A-5.034e+1', '/Folder (1)/Foo', 56.7], alg = 48\r\n[   50s] expected = (('', 6, '!!\\x01\\x08\\x08\\x01\\x02\\x02\\x01\\x01\u00c8\\x01\u00c8\\x01\\x8a\\x01\\x8a', 5, '\\x01\\x01\\x01\\x01\\x8b\\x01\\x8b', 34, ...), ('&&...08\\x08\\x08\\x01\\x02\\x02\\x02\\x04\\x02\\x04\\x01\\x01\\x86\\x01\\x86\\x01\\x8c\\x01\\x8c\\x01\u00db\\x01\u00db\\x01\u00ea\\x01\u0126\\x01\u00ea\\x01\u0126'), ('', 56.7))\r\n[   50s] is_dumb = True\r\n[   50s] \r\n[   50s]     @pytest.mark.parametrize(\r\n[   50s]         \"alg, expected, is_dumb\",\r\n[   50s]         [\r\n[   50s]             (\r\n[   50s]                 ns.LOCALE,\r\n[   50s]                 (\r\n[   50s]                     (null_string_locale, 6, \"A-\", 5, \".\", 34, \"e+\", 1),\r\n[   50s]                     (\"/Folder (\", 1, \")/Foo\"),\r\n[   50s]                     (null_string_locale, 56.7),\r\n[   50s]                 ),\r\n[   50s]                 False,\r\n[   50s]             ),\r\n[   50s]             (\r\n[   50s]                 ns.LOCALE,\r\n[   50s]                 (\r\n[   50s]                     (null_string_locale, 6, \"aa--\", 5, \"..\", 34, \"eE++\", 1),\r\n[   50s]                     (\"//ffoOlLdDeErR  ((\", 1, \"))//ffoOoO\"),\r\n[   50s]                     (null_string_locale, 56.7),\r\n[   50s]                 ),\r\n[   50s]                 True,\r\n[   50s]             ),\r\n[   50s]             (\r\n[   50s]                 ns.LOCALE | ns.CAPITALFIRST,\r\n[   50s]                 (\r\n[   50s]                     ((\"\",), (null_string_locale, 6, \"A-\", 5, \".\", 34, \"e+\", 1)),\r\n[   50s]                     ((\"/\",), (\"/Folder (\", 1, \")/Foo\")),\r\n[   50s]                     ((\"\",), (null_string_locale, 56.7)),\r\n[   50s]                 ),\r\n[   50s]                 False,\r\n[   50s]             ),\r\n[   50s]         ],\r\n[   50s]     )\r\n[   50s]     @pytest.mark.usefixtures(\"with_locale_en_us\")\r\n[   50s]     def test_natsort_keygen_with_locale(mocker, arbitrary_input, alg, expected, is_dumb):\r\n[   50s]         # First, apply the correct strxfrm function to the string values.\r\n[   50s]         strxfrm = get_strxfrm()\r\n[   50s]         expected = [list(sub) for sub in expected]\r\n[   50s]         try:\r\n[   50s]             for i in (2, 4, 6):\r\n[   50s]                 expected[0][i] = strxfrm(expected[0][i])\r\n[   50s]             for i in (0, 2):\r\n[   50s]                 expected[1][i] = strxfrm(expected[1][i])\r\n[   50s]             expected = tuple(tuple(sub) for sub in expected)\r\n[   50s]         except IndexError:  # ns.LOCALE | ns.CAPITALFIRST\r\n[   50s]             expected = [[list(subsub) for subsub in sub] for sub in expected]\r\n[   50s]             for i in (2, 4, 6):\r\n[   50s]                 expected[0][1][i] = strxfrm(expected[0][1][i])\r\n[   50s]             for i in (0, 2):\r\n[   50s]                 expected[1][1][i] = strxfrm(expected[1][1][i])\r\n[   50s]             expected = tuple(tuple(tuple(subsub) for subsub in sub) for sub in expected)\r\n[   50s]     \r\n[   50s] >       with mocker.patch(\"natsort.compat.locale.dumb_sort\", return_value=is_dumb):\r\n[   50s] \r\n[   50s] tests/test_natsort_keygen.py:155: \r\n[   50s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   50s] /usr/lib/python3.7/site-packages/pytest_mock/plugin.py:188: in __call__\r\n[   50s]     return self._start_patch(self.mock_module.patch, *args, **kwargs)\r\n[   50s] /usr/lib/python3.7/site-packages/pytest_mock/plugin.py:150: in _start_patch\r\n[   50s]     self._enforce_no_with_context(inspect.stack())\r\n[   50s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   50s] \r\n[   50s] self = <pytest_mock.plugin.MockFixture._Patcher object at 0x7fce00e5a2b0>\r\n[   50s] stack = [FrameInfo(frame=<frame at 0x7fce015555d0, file '/usr/lib/python3.7/site-packages/pytest_mock/plugin.py', line 150, co..., code_context=['            firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\\n'], index=0), ...]\r\n[   50s] \r\n[   50s]     def _enforce_no_with_context(self, stack):\r\n[   50s]         \"\"\"raises a ValueError if mocker is used in a with context\"\"\"\r\n[   50s]         caller = stack[2]\r\n[   50s]         frame = caller[0]\r\n[   50s]         info = inspect.getframeinfo(frame)\r\n[   50s]         if info.code_context is None:\r\n[   50s]             # no source code available (#169)\r\n[   50s]             return\r\n[   50s]         code_context = \" \".join(info.code_context).strip()\r\n[   50s]     \r\n[   50s]         if code_context.startswith(\"with mocker.\"):\r\n[   50s]             raise ValueError(\r\n[   50s] >               \"Using mocker in a with context is not supported. \"\r\n[   50s]                 \"https://github.com/pytest-dev/pytest-mock#note-about-usage-as-context-manager\"\r\n[   50s]             )\r\n[   50s] E           ValueError: Using mocker in a with context is not supported. https://github.com/pytest-dev/pytest-mock#note-about-usage-as-context-manager\r\n[   50s] \r\n[   50s] /usr/lib/python3.7/site-packages/pytest_mock/plugin.py:170: ValueError\r\n[   50s] _____________ test_natsort_keygen_with_locale[560-expected2-False] _____________\r\n[   50s] \r\n[   50s] mocker = <pytest_mock.plugin.MockFixture object at 0x7fce00e8cdd8>\r\n[   50s] arbitrary_input = ['6A-5.034e+1', '/Folder (1)/Foo', 56.7], alg = 560\r\n[   50s] expected = ((('',), ('', 6, '!\\x01\\x08\\x01\\x04\\x01\\x01\u0105\\x01\\x8a', 5, '\\x01\\x01\\x01\\x01\\x8b', 34, ...)), (('/',), ('&/,$%2\\x01\\x08...x01\u00f4\\x01~\\x01\\x85', 1, '&//\\x01\\x08\\x08\\x08\\x01\\x04\\x02\\x02\\x01\\x01\\x86\\x01\\x8c\\x01\u0117\\x01\u00ea\\x01\u00ea')), (('',), ('', 56.7)))\r\n[   50s] is_dumb = False\r\n[   50s] \r\n[   50s]     @pytest.mark.parametrize(\r\n[   50s]         \"alg, expected, is_dumb\",\r\n[   50s]         [\r\n[   50s]             (\r\n[   50s]                 ns.LOCALE,\r\n[   50s]                 (\r\n[   50s]                     (null_string_locale, 6, \"A-\", 5, \".\", 34, \"e+\", 1),\r\n[   50s]                     (\"/Folder (\", 1, \")/Foo\"),\r\n[   50s]                     (null_string_locale, 56.7),\r\n[   50s]                 ),\r\n[   50s]                 False,\r\n[   50s]             ),\r\n[   50s]             (\r\n[   50s]                 ns.LOCALE,\r\n[   50s]                 (\r\n[   50s]                     (null_string_locale, 6, \"aa--\", 5, \"..\", 34, \"eE++\", 1),\r\n[   50s]                     (\"//ffoOlLdDeErR  ((\", 1, \"))//ffoOoO\"),\r\n[   50s]                     (null_string_locale, 56.7),\r\n[   50s]                 ),\r\n[   50s]                 True,\r\n[   50s]             ),\r\n[   50s]             (\r\n[   50s]                 ns.LOCALE | ns.CAPITALFIRST,\r\n[   50s]                 (\r\n[   50s]                     ((\"\",), (null_string_locale, 6, \"A-\", 5, \".\", 34, \"e+\", 1)),\r\n[   50s]                     ((\"/\",), (\"/Folder (\", 1, \")/Foo\")),\r\n[   50s]                     ((\"\",), (null_string_locale, 56.7)),\r\n[   50s]                 ),\r\n[   50s]                 False,\r\n[   50s]             ),\r\n[   50s]         ],\r\n[   50s]     )\r\n[   50s]     @pytest.mark.usefixtures(\"with_locale_en_us\")\r\n[   50s]     def test_natsort_keygen_with_locale(mocker, arbitrary_input, alg, expected, is_dumb):\r\n[   50s]         # First, apply the correct strxfrm function to the string values.\r\n[   50s]         strxfrm = get_strxfrm()\r\n[   50s]         expected = [list(sub) for sub in expected]\r\n[   50s]         try:\r\n[   50s]             for i in (2, 4, 6):\r\n[   50s]                 expected[0][i] = strxfrm(expected[0][i])\r\n[   50s]             for i in (0, 2):\r\n[   50s]                 expected[1][i] = strxfrm(expected[1][i])\r\n[   50s]             expected = tuple(tuple(sub) for sub in expected)\r\n[   50s]         except IndexError:  # ns.LOCALE | ns.CAPITALFIRST\r\n[   50s]             expected = [[list(subsub) for subsub in sub] for sub in expected]\r\n[   50s]             for i in (2, 4, 6):\r\n[   50s]                 expected[0][1][i] = strxfrm(expected[0][1][i])\r\n[   50s]             for i in (0, 2):\r\n[   50s]                 expected[1][1][i] = strxfrm(expected[1][1][i])\r\n[   50s]             expected = tuple(tuple(tuple(subsub) for subsub in sub) for sub in expected)\r\n[   50s]     \r\n[   50s] >       with mocker.patch(\"natsort.compat.locale.dumb_sort\", return_value=is_dumb):\r\n[   50s] \r\n[   50s] tests/test_natsort_keygen.py:155: \r\n[   50s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   50s] /usr/lib/python3.7/site-packages/pytest_mock/plugin.py:188: in __call__\r\n[   50s]     return self._start_patch(self.mock_module.patch, *args, **kwargs)\r\n[   50s] /usr/lib/python3.7/site-packages/pytest_mock/plugin.py:150: in _start_patch\r\n[   50s]     self._enforce_no_with_context(inspect.stack())\r\n[   50s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   50s] \r\n[   50s] self = <pytest_mock.plugin.MockFixture._Patcher object at 0x7fce00e8c748>\r\n[   50s] stack = [FrameInfo(frame=<frame at 0x7fce01555980, file '/usr/lib/python3.7/site-packages/pytest_mock/plugin.py', line 150, co..., code_context=['            firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\\n'], index=0), ...]\r\n[   50s] \r\n[   50s]     def _enforce_no_with_context(self, stack):\r\n[   50s]         \"\"\"raises a ValueError if mocker is used in a with context\"\"\"\r\n[   50s]         caller = stack[2]\r\n[   50s]         frame = caller[0]\r\n[   50s]         info = inspect.getframeinfo(frame)\r\n[   50s]         if info.code_context is None:\r\n[   50s]             # no source code available (#169)\r\n[   50s]             return\r\n[   50s]         code_context = \" \".join(info.code_context).strip()\r\n[   50s]     \r\n[   50s]         if code_context.startswith(\"with mocker.\"):\r\n[   50s]             raise ValueError(\r\n[   50s] >               \"Using mocker in a with context is not supported. \"\r\n[   50s]                 \"https://github.com/pytest-dev/pytest-mock#note-about-usage-as-context-manager\"\r\n[   50s]             )\r\n[   50s] E           ValueError: Using mocker in a with context is not supported. https://github.com/pytest-dev/pytest-mock#note-about-usage-as-context-manager\r\n[   50s] \r\n[   50s] /usr/lib/python3.7/site-packages/pytest_mock/plugin.py:170: ValueError\r\n[   50s] _______________ test_natsort_keygen_with_locale_bytes[48-False] ________________\r\n[   50s] \r\n[   50s] mocker = <pytest_mock.plugin.MockFixture object at 0x7fce00e84940>\r\n[   50s] bytes_input = b'6A-5.034e+1', alg = 48, is_dumb = False\r\n[   50s] \r\n[   50s]     @pytest.mark.parametrize(\r\n[   50s]         \"alg, is_dumb\",\r\n[   50s]         [(ns.LOCALE, False), (ns.LOCALE, True), (ns.LOCALE | ns.CAPITALFIRST, False)],\r\n[   50s]     )\r\n[   50s]     @pytest.mark.skipif(PY_VERSION < 3.0, reason=\"special bytes handling only on Python3\")\r\n[   50s]     @pytest.mark.usefixtures(\"with_locale_en_us\")\r\n[   50s]     def test_natsort_keygen_with_locale_bytes(mocker, bytes_input, alg, is_dumb):\r\n[   50s]         expected = (b\"6A-5.034e+1\",)\r\n[   50s] >       with mocker.patch(\"natsort.compat.locale.dumb_sort\", return_value=is_dumb):\r\n[   50s] \r\n[   50s] tests/test_natsort_keygen.py:168: \r\n[   50s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   50s] /usr/lib/python3.7/site-packages/pytest_mock/plugin.py:188: in __call__\r\n[   50s]     return self._start_patch(self.mock_module.patch, *args, **kwargs)\r\n[   50s] /usr/lib/python3.7/site-packages/pytest_mock/plugin.py:150: in _start_patch\r\n[   50s]     self._enforce_no_with_context(inspect.stack())\r\n[   50s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   50s] \r\n[   50s] self = <pytest_mock.plugin.MockFixture._Patcher object at 0x7fce00e84d30>\r\n[   50s] stack = [FrameInfo(frame=<frame at 0x7fce015555d0, file '/usr/lib/python3.7/site-packages/pytest_mock/plugin.py', line 150, co..., code_context=['            firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\\n'], index=0), ...]\r\n[   50s] \r\n[   50s]     def _enforce_no_with_context(self, stack):\r\n[   50s]         \"\"\"raises a ValueError if mocker is used in a with context\"\"\"\r\n[   50s]         caller = stack[2]\r\n[   50s]         frame = caller[0]\r\n[   50s]         info = inspect.getframeinfo(frame)\r\n[   50s]         if info.code_context is None:\r\n[   50s]             # no source code available (#169)\r\n[   50s]             return\r\n[   50s]         code_context = \" \".join(info.code_context).strip()\r\n[   50s]     \r\n[   50s]         if code_context.startswith(\"with mocker.\"):\r\n[   50s]             raise ValueError(\r\n[   50s] >               \"Using mocker in a with context is not supported. \"\r\n[   50s]                 \"https://github.com/pytest-dev/pytest-mock#note-about-usage-as-context-manager\"\r\n[   50s]             )\r\n[   50s] E           ValueError: Using mocker in a with context is not supported. https://github.com/pytest-dev/pytest-mock#note-about-usage-as-context-manager\r\n[   50s] \r\n[   50s] /usr/lib/python3.7/site-packages/pytest_mock/plugin.py:170: ValueError\r\n[   50s] ________________ test_natsort_keygen_with_locale_bytes[48-True] ________________\r\n[   50s] \r\n[   50s] mocker = <pytest_mock.plugin.MockFixture object at 0x7fce00eb3cf8>\r\n[   50s] bytes_input = b'6A-5.034e+1', alg = 48, is_dumb = True\r\n[   50s] \r\n[   50s]     @pytest.mark.parametrize(\r\n[   50s]         \"alg, is_dumb\",\r\n[   50s]         [(ns.LOCALE, False), (ns.LOCALE, True), (ns.LOCALE | ns.CAPITALFIRST, False)],\r\n[   50s]     )\r\n[   50s]     @pytest.mark.skipif(PY_VERSION < 3.0, reason=\"special bytes handling only on Python3\")\r\n[   50s]     @pytest.mark.usefixtures(\"with_locale_en_us\")\r\n[   50s]     def test_natsort_keygen_with_locale_bytes(mocker, bytes_input, alg, is_dumb):\r\n[   50s]         expected = (b\"6A-5.034e+1\",)\r\n[   50s] >       with mocker.patch(\"natsort.compat.locale.dumb_sort\", return_value=is_dumb):\r\n[   50s] \r\n[   50s] tests/test_natsort_keygen.py:168: \r\n[   50s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   50s] /usr/lib/python3.7/site-packages/pytest_mock/plugin.py:188: in __call__\r\n[   50s]     return self._start_patch(self.mock_module.patch, *args, **kwargs)\r\n[   50s] /usr/lib/python3.7/site-packages/pytest_mock/plugin.py:150: in _start_patch\r\n[   50s]     self._enforce_no_with_context(inspect.stack())\r\n[   50s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   50s] \r\n[   50s] self = <pytest_mock.plugin.MockFixture._Patcher object at 0x7fce00eb3a90>\r\n[   50s] stack = [FrameInfo(frame=<frame at 0x7fce014c77a8, file '/usr/lib/python3.7/site-packages/pytest_mock/plugin.py', line 150, co..., code_context=['            firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\\n'], index=0), ...]\r\n[   50s] \r\n[   50s]     def _enforce_no_with_context(self, stack):\r\n[   50s]         \"\"\"raises a ValueError if mocker is used in a with context\"\"\"\r\n[   50s]         caller = stack[2]\r\n[   50s]         frame = caller[0]\r\n[   50s]         info = inspect.getframeinfo(frame)\r\n[   50s]         if info.code_context is None:\r\n[   50s]             # no source code available (#169)\r\n[   50s]             return\r\n[   50s]         code_context = \" \".join(info.code_context).strip()\r\n[   50s]     \r\n[   50s]         if code_context.startswith(\"with mocker.\"):\r\n[   50s]             raise ValueError(\r\n[   50s] >               \"Using mocker in a with context is not supported. \"\r\n[   50s]                 \"https://github.com/pytest-dev/pytest-mock#note-about-usage-as-context-manager\"\r\n[   50s]             )\r\n[   50s] E           ValueError: Using mocker in a with context is not supported. https://github.com/pytest-dev/pytest-mock#note-about-usage-as-context-manager\r\n[   50s] \r\n[   50s] /usr/lib/python3.7/site-packages/pytest_mock/plugin.py:170: ValueError\r\n[   50s] _______________ test_natsort_keygen_with_locale_bytes[560-False] _______________\r\n[   50s] \r\n[   50s] mocker = <pytest_mock.plugin.MockFixture object at 0x7fce014ca4e0>\r\n[   50s] bytes_input = b'6A-5.034e+1', alg = 560, is_dumb = False\r\n[   50s] \r\n[   50s]     @pytest.mark.parametrize(\r\n[   50s]         \"alg, is_dumb\",\r\n[   50s]         [(ns.LOCALE, False), (ns.LOCALE, True), (ns.LOCALE | ns.CAPITALFIRST, False)],\r\n[   50s]     )\r\n[   50s]     @pytest.mark.skipif(PY_VERSION < 3.0, reason=\"special bytes handling only on Python3\")\r\n[   50s]     @pytest.mark.usefixtures(\"with_locale_en_us\")\r\n[   50s]     def test_natsort_keygen_with_locale_bytes(mocker, bytes_input, alg, is_dumb):\r\n[   50s]         expected = (b\"6A-5.034e+1\",)\r\n[   50s] >       with mocker.patch(\"natsort.compat.locale.dumb_sort\", return_value=is_dumb):\r\n[   50s] \r\n[   50s] tests/test_natsort_keygen.py:168: \r\n[   50s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   50s] /usr/lib/python3.7/site-packages/pytest_mock/plugin.py:188: in __call__\r\n[   50s]     return self._start_patch(self.mock_module.patch, *args, **kwargs)\r\n[   50s] /usr/lib/python3.7/site-packages/pytest_mock/plugin.py:150: in _start_patch\r\n[   50s]     self._enforce_no_with_context(inspect.stack())\r\n[   50s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   50s] \r\n[   50s] self = <pytest_mock.plugin.MockFixture._Patcher object at 0x7fce014cacf8>\r\n[   50s] stack = [FrameInfo(frame=<frame at 0x7fce015555d0, file '/usr/lib/python3.7/site-packages/pytest_mock/plugin.py', line 150, co..., code_context=['            firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\\n'], index=0), ...]\r\n[   50s] \r\n[   50s]     def _enforce_no_with_context(self, stack):\r\n[   50s]         \"\"\"raises a ValueError if mocker is used in a with context\"\"\"\r\n[   50s]         caller = stack[2]\r\n[   50s]         frame = caller[0]\r\n[   50s]         info = inspect.getframeinfo(frame)\r\n[   50s]         if info.code_context is None:\r\n[   50s]             # no source code available (#169)\r\n[   50s]             return\r\n[   50s]         code_context = \" \".join(info.code_context).strip()\r\n[   50s]     \r\n[   50s]         if code_context.startswith(\"with mocker.\"):\r\n[   50s]             raise ValueError(\r\n[   50s] >               \"Using mocker in a with context is not supported. \"\r\n[   50s]                 \"https://github.com/pytest-dev/pytest-mock#note-about-usage-as-context-manager\"\r\n[   50s]             )\r\n[   50s] E           ValueError: Using mocker in a with context is not supported. https://github.com/pytest-dev/pytest-mock#note-about-usage-as-context-manager\r\n[   50s] \r\n[   50s] /usr/lib/python3.7/site-packages/pytest_mock/plugin.py:170: ValueError\r\n[   50s] ================== 6 failed, 265 passed, 7 skipped in 23.16s ===================\r\n```\r\n\r\n**Expected behavior**\r\nThe test suite should pass.\r\n\r\n**Environment (please complete the following information):**\r\n - Python Version: 3.7.3\r\n - OS openSUSE/Tumbleweed (in fact building the official packages for it)\r\n - If the bug involves `LOCALE` or `humansorted`:\r\n    - Is `PyICU` installed? no\r\n    - Do you have a locale set? If so, to what? Yes, ``export LANG=en_US.UTF8`` is run before the tests are run.\r\n\r\n**To Reproduce**\r\n```sh\r\nexport LANG=en_US.UTF8\r\nexport PYTHONPATH=%{buildroot}%{$python_sitelib} ## where the library has been installed\r\npytest -v\r\n```\r\n\r\n[Full build log with all details](https://github.com/SethMMorton/natsort/files/3992637/_log.txt) (includes list of all installed packages as well with their versions)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/105", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/105/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/105/events", "html_url": "https://github.com/SethMMorton/natsort/issues/105", "id": 522518105, "node_id": "MDU6SXNzdWU1MjI1MTgxMDU=", "number": 105, "title": "Use \"on_fail\" option of fastnumbers instead of key", "user": {"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 362259651, "node_id": "MDU6TGFiZWwzNjIyNTk2NTE=", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/maintainability", "name": "maintainability", "color": "0e8a16", "default": false, "description": null}, {"id": 4302839, "node_id": "MDU6TGFiZWw0MzAyODM5", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/SethMMorton/natsort/milestones/4", "html_url": "https://github.com/SethMMorton/natsort/milestone/4", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/milestones/4/labels", "id": 3828846, "node_id": "MDk6TWlsZXN0b25lMzgyODg0Ng==", "number": 4, "title": "Version 7.0.0", "description": "Drop support for Python 2.7.", "creator": {"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "open", "created_at": "2018-11-18T01:15:19Z", "updated_at": "2020-01-07T04:13:57Z", "due_on": "2020-01-01T08:00:00Z", "closed_at": null}, "comments": 1, "created_at": "2019-11-13T22:49:05Z", "updated_at": "2020-01-07T04:13:57Z", "closed_at": "2020-01-07T04:13:57Z", "author_association": "OWNER", "active_lock_reason": null, "body": "When https://github.com/SethMMorton/fastnumbers/issues/32 is merged and released as version 3.0.0, `natsort` should change the (optionally) required `fastnumbers` version to 3.0.0 and change its use of `key` to `on_fail`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/103", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/103/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/103/events", "html_url": "https://github.com/SethMMorton/natsort/issues/103", "id": 520626588, "node_id": "MDU6SXNzdWU1MjA2MjY1ODg=", "number": 103, "title": "tar-ball missing on pypi for version 6.1.0", "user": {"login": "arunpersaud", "id": 425653, "node_id": "MDQ6VXNlcjQyNTY1Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/425653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arunpersaud", "html_url": "https://github.com/arunpersaud", "followers_url": "https://api.github.com/users/arunpersaud/followers", "following_url": "https://api.github.com/users/arunpersaud/following{/other_user}", "gists_url": "https://api.github.com/users/arunpersaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/arunpersaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arunpersaud/subscriptions", "organizations_url": "https://api.github.com/users/arunpersaud/orgs", "repos_url": "https://api.github.com/users/arunpersaud/repos", "events_url": "https://api.github.com/users/arunpersaud/events{/privacy}", "received_events_url": "https://api.github.com/users/arunpersaud/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302834, "node_id": "MDU6TGFiZWw0MzAyODM0", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-10T16:54:35Z", "updated_at": "2020-02-03T05:14:36Z", "closed_at": "2019-11-10T17:18:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to also publish a tar-ball on pypi? I'm trying to package natsort for opensuse at the moment and pypi is the default/preferred location from where we pull tar-balls.  Thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/101", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/101/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/101/events", "html_url": "https://github.com/SethMMorton/natsort/issues/101", "id": 491799012, "node_id": "MDU6SXNzdWU0OTE3OTkwMTI=", "number": 101, "title": "Length of the numbers lead to wrong sorting", "user": {"login": "scimax", "id": 3419955, "node_id": "MDQ6VXNlcjM0MTk5NTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/3419955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scimax", "html_url": "https://github.com/scimax", "followers_url": "https://api.github.com/users/scimax/followers", "following_url": "https://api.github.com/users/scimax/following{/other_user}", "gists_url": "https://api.github.com/users/scimax/gists{/gist_id}", "starred_url": "https://api.github.com/users/scimax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scimax/subscriptions", "organizations_url": "https://api.github.com/users/scimax/orgs", "repos_url": "https://api.github.com/users/scimax/repos", "events_url": "https://api.github.com/users/scimax/events{/privacy}", "received_events_url": "https://api.github.com/users/scimax/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302838, "node_id": "MDU6TGFiZWw0MzAyODM4", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-10T17:16:47Z", "updated_at": "2019-09-15T21:28:13Z", "closed_at": "2019-09-15T21:28:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear all,\r\nI experienced the following issue:\r\n\r\n**Describe the bug**\r\nThe sorting is wrong with respect to the float numbers in the string. The length of the floating point number in terms of decimal places affects the outcome. See below in the example\r\n\r\n**Expected behavior**\r\nThe number of decimal places should not change the ordering of the strings.\r\n\r\n**Environment (please complete the following information):**\r\n- natsort 6.0.0\r\n- Python 3.6.6 from the conda-forge channel\r\n - Windows 10\r\n - LOCALE is not used\r\n\r\n**To Reproduce**\r\nThis is the list I tried to sort:\r\n```py\r\nnatsorted(['on-axis-ezt=0.900000003596222.txt',\r\n 'on-axis-ezt=1.0000000039958.txt',\r\n 'on-axis-ezt=1.5000000059937.txt',\r\n 'on-axis-ezt=1.10000000439538.txt'])\r\n```\r\n\r\nThe result was this one:\r\n```py \r\n['on-axis-ezt=0.900000003596222.txt',\r\n 'on-axis-ezt=1.0000000039958.txt',\r\n 'on-axis-ezt=1.5000000059937.txt',\r\n 'on-axis-ezt=1.10000000439538.txt']\r\n```\r\n\r\nIf I truncate the decimal places following the dot it works but intuitively I would not expect this to change the outcome, since `1.1000000001 < 1.5`, no matter how many digits follow the decimal seperator.\r\n\r\nSo it works if I do it this way:\r\n```py\r\nnatsorted(['on-axis-ezt=0.900.txt',\r\n 'on-axis-ezt=1.000.txt',\r\n 'on-axis-ezt=1.500.txt',\r\n 'on-axis-ezt=1.100.txt'])\r\n```\r\nbut adding a single 0 before the file extension in the last string screws up the result. I thougt it might be related to my OS settings using comma as decimal seperator although I'm not using the LOCALE in the natsort package. But the behavior is the same if I replace the dot with a comma.\r\n\r\nI also tried to split the sttrings first and only use the part containing the floating point numbers, so something like that `os.path.splitext(filename)[0].split(\"=\")[1]` but it also didn't change anything\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/100", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/100/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/100/events", "html_url": "https://github.com/SethMMorton/natsort/issues/100", "id": 486988601, "node_id": "MDU6SXNzdWU0ODY5ODg2MDE=", "number": 100, "title": "Consider units of measurement", "user": {"login": "gpruss", "id": 29521764, "node_id": "MDQ6VXNlcjI5NTIxNzY0", "avatar_url": "https://avatars1.githubusercontent.com/u/29521764?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gpruss", "html_url": "https://github.com/gpruss", "followers_url": "https://api.github.com/users/gpruss/followers", "following_url": "https://api.github.com/users/gpruss/following{/other_user}", "gists_url": "https://api.github.com/users/gpruss/gists{/gist_id}", "starred_url": "https://api.github.com/users/gpruss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gpruss/subscriptions", "organizations_url": "https://api.github.com/users/gpruss/orgs", "repos_url": "https://api.github.com/users/gpruss/repos", "events_url": "https://api.github.com/users/gpruss/events{/privacy}", "received_events_url": "https://api.github.com/users/gpruss/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 372710618, "node_id": "MDU6TGFiZWwzNzI3MTA2MTg=", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/documentation", "name": "documentation", "color": "fbca04", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-08-29T14:20:30Z", "updated_at": "2019-11-10T01:15:33Z", "closed_at": "2019-11-10T01:15:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Seth,\r\nI just stumbled over natsort and think it's great! Would it be feasible to consider units of measurement to sort something like ['1 ft', '5 in', '10 ft', '2 in']? I would really appreciate it, if you could point me in the right direction.\r\n\r\nCheers,\r\nGunnar", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/93", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/93/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/93/events", "html_url": "https://github.com/SethMMorton/natsort/issues/93", "id": 447991690, "node_id": "MDU6SXNzdWU0NDc5OTE2OTA=", "number": 93, "title": "Unstable sort when input contains leading zeros", "user": {"login": "pseudotensor", "id": 2249614, "node_id": "MDQ6VXNlcjIyNDk2MTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2249614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pseudotensor", "html_url": "https://github.com/pseudotensor", "followers_url": "https://api.github.com/users/pseudotensor/followers", "following_url": "https://api.github.com/users/pseudotensor/following{/other_user}", "gists_url": "https://api.github.com/users/pseudotensor/gists{/gist_id}", "starred_url": "https://api.github.com/users/pseudotensor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pseudotensor/subscriptions", "organizations_url": "https://api.github.com/users/pseudotensor/orgs", "repos_url": "https://api.github.com/users/pseudotensor/repos", "events_url": "https://api.github.com/users/pseudotensor/events{/privacy}", "received_events_url": "https://api.github.com/users/pseudotensor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302838, "node_id": "MDU6TGFiZWw0MzAyODM4", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-24T05:55:26Z", "updated_at": "2019-05-25T04:29:09Z", "closed_at": "2019-05-25T04:28:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\n```python\r\nfrom natsort import natsorted\r\na = ['8', '38', '41', '42', '53', '70', '79', '112', '135', '150', '153', '154', '155', '157', '162', '185', '189', '196', '197', '198', '202', '203', '204', '205', '211', '218', '242', '244', '250', '250.1', '250.01', '250.02', '250.03', '250.4', '250.5', '250.6', '250.7', '250.8', '250.11', '250.12', '250.13', '250.41', '250.42', '250.43', '250.51', '250.52', '250.53', '250.81', '250.82', '250.83', '250.91', '250.92', '250.93', '252', '253', '255', '263', '272', '275', '276', '277', '278', '280', '282', '284', '285', '286', '287', '288', '290', '291', '292', '293', '294', '295', '296', '300', '301', '303', '304', '305', '309', '311', '331', '332', '337', '340', '342', '344', '345', '346', '348', '357', '362', '386', '394', '396', '397', '398', '401', '402', '403', '404', '410', '411', '412', '413', '414', '415', '416', '420', '421', '424', '425', '426', '427', '428', '432', '433', '434', '435', '436', '437', '438', '440', '441', '443', '444', '446', '447', '451', '453', '456', '458', '459', '462', '465', '466', '478', '481', '482', '486', '491', '492', '493', '496', '507', '511', '512', '515', '516', '518', '519', '530', '531', '535', '536', '537', '552', '553', '558', '560', '562', '564', '567', '568', '569', '571', '572', '573', '574', '575', '576', '577', '578', '581', '583', '584', '585', '590', '591', '592', '593', '595', '596', '599', '600', '611', '616', '617', '618', '620', '625', '642', '648', '680', '682', '707', '710', '711', '714', '715', '718', '719', '721', '722', '723', '724', '727', '728', '729', '730', '733', '737', '738', '780', '781', '782', '784', '785', '786', '787', '788', '789', '790', '794', '799', '805', '808', '813', '820', '873', '996', '997', '998', '999', 'E878', 'E879', 'E880', 'E885', 'E888', 'E932', 'E942', 'V10', 'V12', 'V15', 'V42', 'V43', 'V45', 'V64']\r\nr1 = natsorted(a)\r\nr2 = natsorted(sorted(a))\r\n>>> r1==r2\r\nFalse\r\n```\r\nflip between `'250.01', '250.1'` vs. `'250.1', '250.01'`\r\n\r\n\r\n**Expected behavior**\r\nI expect 250.01 then 250.1 for natural sorting, and especially I expect the sort to be stable to what is inputted.\r\n\r\n**Environment (please complete the following information):**\r\n - Python Version: 3.6.6\r\n - OS: Ubuntu 18.04\r\n\r\n**To Reproduce**\r\nsee above\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/90", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/90/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/90/events", "html_url": "https://github.com/SethMMorton/natsort/issues/90", "id": 414915759, "node_id": "MDU6SXNzdWU0MTQ5MTU3NTk=", "number": 90, "title": "Add MacOS and Windows to Travis-CI", "user": {"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 362259651, "node_id": "MDU6TGFiZWwzNjIyNTk2NTE=", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/maintainability", "name": "maintainability", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-02-27T02:33:04Z", "updated_at": "2019-02-28T05:59:59Z", "closed_at": "2019-02-28T05:59:59Z", "author_association": "OWNER", "active_lock_reason": null, "body": "**Describe the feature or enhancement**\r\nUpdate the Travis-CI configuration to support running MacOS and Windows as well as Linux.\r\n\r\n**Provide a concrete example of how the feature or enhancement will improve `natsort`**\r\nI used to develop on MacOS, but now develop on Linux. There are definite differences in the two in how the `locale` library behaves, so it is important that both are tested. The best long-term solution is to run all three OSs through CI.\r\n\r\n**Would you be willing to submit a Pull Request for this feature?**\r\nYes\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/68", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/68/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/68/events", "html_url": "https://github.com/SethMMorton/natsort/issues/68", "id": 358397720, "node_id": "MDU6SXNzdWUzNTgzOTc3MjA=", "number": 68, "title": "Please use pytest-pycodestyle instead of pytest-pep8", "user": {"login": "yurivict", "id": 271906, "node_id": "MDQ6VXNlcjI3MTkwNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/271906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yurivict", "html_url": "https://github.com/yurivict", "followers_url": "https://api.github.com/users/yurivict/followers", "following_url": "https://api.github.com/users/yurivict/following{/other_user}", "gists_url": "https://api.github.com/users/yurivict/gists{/gist_id}", "starred_url": "https://api.github.com/users/yurivict/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yurivict/subscriptions", "organizations_url": "https://api.github.com/users/yurivict/orgs", "repos_url": "https://api.github.com/users/yurivict/repos", "events_url": "https://api.github.com/users/yurivict/events{/privacy}", "received_events_url": "https://api.github.com/users/yurivict/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 362259651, "node_id": "MDU6TGFiZWwzNjIyNTk2NTE=", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/maintainability", "name": "maintainability", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-09-09T17:59:24Z", "updated_at": "2020-02-03T05:19:20Z", "closed_at": "2018-09-10T03:05:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "```pep8``` has been renamed to ```pycodestyle```, along with their ```pytest-``` counterparts.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/67", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/67/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/67/events", "html_url": "https://github.com/SethMMorton/natsort/issues/67", "id": 358392477, "node_id": "MDU6SXNzdWUzNTgzOTI0Nzc=", "number": 67, "title": "[regression] Tests error in 5.4.0 on FreeBSD 11.2 in the port", "user": {"login": "yurivict", "id": 271906, "node_id": "MDQ6VXNlcjI3MTkwNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/271906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yurivict", "html_url": "https://github.com/yurivict", "followers_url": "https://api.github.com/users/yurivict/followers", "following_url": "https://api.github.com/users/yurivict/following{/other_user}", "gists_url": "https://api.github.com/users/yurivict/gists{/gist_id}", "starred_url": "https://api.github.com/users/yurivict/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yurivict/subscriptions", "organizations_url": "https://api.github.com/users/yurivict/orgs", "repos_url": "https://api.github.com/users/yurivict/repos", "events_url": "https://api.github.com/users/yurivict/events{/privacy}", "received_events_url": "https://api.github.com/users/yurivict/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302834, "node_id": "MDU6TGFiZWw0MzAyODM0", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-09T16:44:17Z", "updated_at": "2020-02-03T05:17:06Z", "closed_at": "2018-09-10T03:06:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "This didn't happen with version ```5.3.3```.\r\n\r\n```\r\n================================================================================== ERRORS ==================================================================================\r\n____________________________________________ ERROR at setup of test_main_passes_default_arguments_with_no_command_line_options _____________________________________________\r\nfile /usr/ports/devel/py-natsort/work-py27/natsort-5.4.0/test_natsort/test_main.py, line 23\r\n  def test_main_passes_default_arguments_with_no_command_line_options(mocker):\r\nE       fixture 'mocker' not found\r\n>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, monkeypatch, pytestconfig, record_xml_attribute, record_xml_property, recwarn, tmpdir, tmpdir_factory, with_locale_de_de, with_locale_en_us\r\n>       use 'pytest --fixtures [testpath]' for help on them.\r\n\r\n/usr/ports/devel/py-natsort/work-py27/natsort-5.4.0/test_natsort/test_main.py:23\r\n________________________________________________ ERROR at setup of test_main_passes_arguments_with_all_command_line_options ________________________________________________\r\nfile /usr/ports/devel/py-natsort/work-py27/natsort-5.4.0/test_natsort/test_main.py, line 38\r\n  def test_main_passes_arguments_with_all_command_line_options(mocker):\r\nE       fixture 'mocker' not found\r\n>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, monkeypatch, pytestconfig, record_xml_attribute, record_xml_property, recwarn, tmpdir, tmpdir_factory, with_locale_de_de, with_locale_en_us\r\n>       use 'pytest --fixtures [testpath]' for help on them.\r\n\r\n/usr/ports/devel/py-natsort/work-py27/natsort-5.4.0/test_natsort/test_main.py:38\r\n______________________________________________________ ERROR at setup of test_sort_and_print_entries[options0-order0] ______________________________________________________\r\nfile /usr/ports/devel/py-natsort/work-py27/natsort-5.4.0/test_natsort/test_main.py, line 89\r\n  @pytest.mark.parametrize(\r\n      \"options, order\",\r\n      [\r\n          # Defaults, all options false\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a1/path1\r\n          # tmp/a23/path1\r\n          # tmp/a57/path2\r\n          # tmp/a64/path1\r\n          # tmp/a64/path2\r\n          # tmp/a130/path1\r\n          ([None, None, False, False, False], [3, 2, 1, 0, 5, 6, 4]),\r\n          # Path option True\r\n          # tmp/a1/path1\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a23/path1\r\n          # tmp/a57/path2\r\n          # tmp/a64/path1\r\n          # tmp/a64/path2\r\n          # tmp/a130/path1\r\n          ([None, None, False, True, False], [2, 3, 1, 0, 5, 6, 4]),\r\n          # Filter option keeps only within range\r\n          # tmp/a23/path1\r\n          # tmp/a57/path2\r\n          # tmp/a64/path1\r\n          # tmp/a64/path2\r\n          ([[(20, 100)], None, False, False, False], [1, 0, 5, 6]),\r\n          # Reverse filter, exclude in range\r\n          # tmp/a1/path1\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a130/path1\r\n          ([None, [(20, 100)], False, True, False], [2, 3, 4]),\r\n          # Exclude given values with exclude list\r\n          # tmp/a1/path1\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a57/path2\r\n          # tmp/a64/path1\r\n          # tmp/a64/path2\r\n          ([None, None, [23, 130], True, False], [2, 3, 0, 5, 6]),\r\n          # Reverse order\r\n          # tmp/a130/path1\r\n          # tmp/a64/path2\r\n          # tmp/a64/path1\r\n          # tmp/a57/path2\r\n          # tmp/a23/path1\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a1/path1\r\n          ([None, None, False, True, True], reversed([2, 3, 1, 0, 5, 6, 4])),\r\n      ],\r\n  )\r\n  def test_sort_and_print_entries(options, order, mocker):\r\nE       fixture 'mocker' not found\r\n>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, monkeypatch, pytestconfig, record_xml_attribute, record_xml_property, recwarn, tmpdir, tmpdir_factory, with_locale_de_de, with_locale_en_us\r\n>       use 'pytest --fixtures [testpath]' for help on them.\r\n\r\n/usr/ports/devel/py-natsort/work-py27/natsort-5.4.0/test_natsort/test_main.py:89\r\n______________________________________________________ ERROR at setup of test_sort_and_print_entries[options1-order1] ______________________________________________________\r\nfile /usr/ports/devel/py-natsort/work-py27/natsort-5.4.0/test_natsort/test_main.py, line 89\r\n  @pytest.mark.parametrize(\r\n      \"options, order\",\r\n      [\r\n          # Defaults, all options false\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a1/path1\r\n          # tmp/a23/path1\r\n          # tmp/a57/path2\r\n          # tmp/a64/path1\r\n          # tmp/a64/path2\r\n          # tmp/a130/path1\r\n          ([None, None, False, False, False], [3, 2, 1, 0, 5, 6, 4]),\r\n          # Path option True\r\n          # tmp/a1/path1\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a23/path1\r\n          # tmp/a57/path2\r\n          # tmp/a64/path1\r\n          # tmp/a64/path2\r\n          # tmp/a130/path1\r\n          ([None, None, False, True, False], [2, 3, 1, 0, 5, 6, 4]),\r\n          # Filter option keeps only within range\r\n          # tmp/a23/path1\r\n          # tmp/a57/path2\r\n          # tmp/a64/path1\r\n          # tmp/a64/path2\r\n          ([[(20, 100)], None, False, False, False], [1, 0, 5, 6]),\r\n          # Reverse filter, exclude in range\r\n          # tmp/a1/path1\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a130/path1\r\n          ([None, [(20, 100)], False, True, False], [2, 3, 4]),\r\n          # Exclude given values with exclude list\r\n          # tmp/a1/path1\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a57/path2\r\n          # tmp/a64/path1\r\n          # tmp/a64/path2\r\n          ([None, None, [23, 130], True, False], [2, 3, 0, 5, 6]),\r\n          # Reverse order\r\n          # tmp/a130/path1\r\n          # tmp/a64/path2\r\n          # tmp/a64/path1\r\n          # tmp/a57/path2\r\n          # tmp/a23/path1\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a1/path1\r\n          ([None, None, False, True, True], reversed([2, 3, 1, 0, 5, 6, 4])),\r\n      ],\r\n  )\r\n  def test_sort_and_print_entries(options, order, mocker):\r\nE       fixture 'mocker' not found\r\n>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, monkeypatch, pytestconfig, record_xml_attribute, record_xml_property, recwarn, tmpdir, tmpdir_factory, with_locale_de_de, with_locale_en_us\r\n>       use 'pytest --fixtures [testpath]' for help on them.\r\n\r\n/usr/ports/devel/py-natsort/work-py27/natsort-5.4.0/test_natsort/test_main.py:89\r\n______________________________________________________ ERROR at setup of test_sort_and_print_entries[options2-order2] ______________________________________________________\r\nfile /usr/ports/devel/py-natsort/work-py27/natsort-5.4.0/test_natsort/test_main.py, line 89\r\n  @pytest.mark.parametrize(\r\n      \"options, order\",\r\n      [\r\n          # Defaults, all options false\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a1/path1\r\n          # tmp/a23/path1\r\n          # tmp/a57/path2\r\n          # tmp/a64/path1\r\n          # tmp/a64/path2\r\n          # tmp/a130/path1\r\n          ([None, None, False, False, False], [3, 2, 1, 0, 5, 6, 4]),\r\n          # Path option True\r\n          # tmp/a1/path1\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a23/path1\r\n          # tmp/a57/path2\r\n          # tmp/a64/path1\r\n          # tmp/a64/path2\r\n          # tmp/a130/path1\r\n          ([None, None, False, True, False], [2, 3, 1, 0, 5, 6, 4]),\r\n          # Filter option keeps only within range\r\n          # tmp/a23/path1\r\n          # tmp/a57/path2\r\n          # tmp/a64/path1\r\n          # tmp/a64/path2\r\n          ([[(20, 100)], None, False, False, False], [1, 0, 5, 6]),\r\n          # Reverse filter, exclude in range\r\n          # tmp/a1/path1\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a130/path1\r\n          ([None, [(20, 100)], False, True, False], [2, 3, 4]),\r\n          # Exclude given values with exclude list\r\n          # tmp/a1/path1\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a57/path2\r\n          # tmp/a64/path1\r\n          # tmp/a64/path2\r\n          ([None, None, [23, 130], True, False], [2, 3, 0, 5, 6]),\r\n          # Reverse order\r\n          # tmp/a130/path1\r\n          # tmp/a64/path2\r\n          # tmp/a64/path1\r\n          # tmp/a57/path2\r\n          # tmp/a23/path1\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a1/path1\r\n          ([None, None, False, True, True], reversed([2, 3, 1, 0, 5, 6, 4])),\r\n      ],\r\n  )\r\n  def test_sort_and_print_entries(options, order, mocker):\r\nE       fixture 'mocker' not found\r\n>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, monkeypatch, pytestconfig, record_xml_attribute, record_xml_property, recwarn, tmpdir, tmpdir_factory, with_locale_de_de, with_locale_en_us\r\n>       use 'pytest --fixtures [testpath]' for help on them.\r\n\r\n/usr/ports/devel/py-natsort/work-py27/natsort-5.4.0/test_natsort/test_main.py:89\r\n______________________________________________________ ERROR at setup of test_sort_and_print_entries[options3-order3] ______________________________________________________\r\nfile /usr/ports/devel/py-natsort/work-py27/natsort-5.4.0/test_natsort/test_main.py, line 89\r\n  @pytest.mark.parametrize(\r\n      \"options, order\",\r\n      [\r\n          # Defaults, all options false\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a1/path1\r\n          # tmp/a23/path1\r\n          # tmp/a57/path2\r\n          # tmp/a64/path1\r\n          # tmp/a64/path2\r\n          # tmp/a130/path1\r\n          ([None, None, False, False, False], [3, 2, 1, 0, 5, 6, 4]),\r\n          # Path option True\r\n          # tmp/a1/path1\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a23/path1\r\n          # tmp/a57/path2\r\n          # tmp/a64/path1\r\n          # tmp/a64/path2\r\n          # tmp/a130/path1\r\n          ([None, None, False, True, False], [2, 3, 1, 0, 5, 6, 4]),\r\n          # Filter option keeps only within range\r\n          # tmp/a23/path1\r\n          # tmp/a57/path2\r\n          # tmp/a64/path1\r\n          # tmp/a64/path2\r\n          ([[(20, 100)], None, False, False, False], [1, 0, 5, 6]),\r\n          # Reverse filter, exclude in range\r\n          # tmp/a1/path1\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a130/path1\r\n          ([None, [(20, 100)], False, True, False], [2, 3, 4]),\r\n          # Exclude given values with exclude list\r\n          # tmp/a1/path1\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a57/path2\r\n          # tmp/a64/path1\r\n          # tmp/a64/path2\r\n          ([None, None, [23, 130], True, False], [2, 3, 0, 5, 6]),\r\n          # Reverse order\r\n          # tmp/a130/path1\r\n          # tmp/a64/path2\r\n          # tmp/a64/path1\r\n          # tmp/a57/path2\r\n          # tmp/a23/path1\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a1/path1\r\n          ([None, None, False, True, True], reversed([2, 3, 1, 0, 5, 6, 4])),\r\n      ],\r\n  )\r\n  def test_sort_and_print_entries(options, order, mocker):\r\nE       fixture 'mocker' not found\r\n>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, monkeypatch, pytestconfig, record_xml_attribute, record_xml_property, recwarn, tmpdir, tmpdir_factory, with_locale_de_de, with_locale_en_us\r\n>       use 'pytest --fixtures [testpath]' for help on them.\r\n\r\n/usr/ports/devel/py-natsort/work-py27/natsort-5.4.0/test_natsort/test_main.py:89\r\n______________________________________________________ ERROR at setup of test_sort_and_print_entries[options4-order4] ______________________________________________________\r\nfile /usr/ports/devel/py-natsort/work-py27/natsort-5.4.0/test_natsort/test_main.py, line 89\r\n  @pytest.mark.parametrize(\r\n      \"options, order\",\r\n      [\r\n          # Defaults, all options false\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a1/path1\r\n          # tmp/a23/path1\r\n          # tmp/a57/path2\r\n          # tmp/a64/path1\r\n          # tmp/a64/path2\r\n          # tmp/a130/path1\r\n          ([None, None, False, False, False], [3, 2, 1, 0, 5, 6, 4]),\r\n          # Path option True\r\n          # tmp/a1/path1\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a23/path1\r\n          # tmp/a57/path2\r\n          # tmp/a64/path1\r\n          # tmp/a64/path2\r\n          # tmp/a130/path1\r\n          ([None, None, False, True, False], [2, 3, 1, 0, 5, 6, 4]),\r\n          # Filter option keeps only within range\r\n          # tmp/a23/path1\r\n          # tmp/a57/path2\r\n          # tmp/a64/path1\r\n          # tmp/a64/path2\r\n          ([[(20, 100)], None, False, False, False], [1, 0, 5, 6]),\r\n          # Reverse filter, exclude in range\r\n          # tmp/a1/path1\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a130/path1\r\n          ([None, [(20, 100)], False, True, False], [2, 3, 4]),\r\n          # Exclude given values with exclude list\r\n          # tmp/a1/path1\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a57/path2\r\n          # tmp/a64/path1\r\n          # tmp/a64/path2\r\n          ([None, None, [23, 130], True, False], [2, 3, 0, 5, 6]),\r\n          # Reverse order\r\n          # tmp/a130/path1\r\n          # tmp/a64/path2\r\n          # tmp/a64/path1\r\n          # tmp/a57/path2\r\n          # tmp/a23/path1\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a1/path1\r\n          ([None, None, False, True, True], reversed([2, 3, 1, 0, 5, 6, 4])),\r\n      ],\r\n  )\r\n  def test_sort_and_print_entries(options, order, mocker):\r\nE       fixture 'mocker' not found\r\n>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, monkeypatch, pytestconfig, record_xml_attribute, record_xml_property, recwarn, tmpdir, tmpdir_factory, with_locale_de_de, with_locale_en_us\r\n>       use 'pytest --fixtures [testpath]' for help on them.\r\n\r\n/usr/ports/devel/py-natsort/work-py27/natsort-5.4.0/test_natsort/test_main.py:89\r\n______________________________________________________ ERROR at setup of test_sort_and_print_entries[options5-order5] ______________________________________________________\r\nfile /usr/ports/devel/py-natsort/work-py27/natsort-5.4.0/test_natsort/test_main.py, line 89\r\n  @pytest.mark.parametrize(\r\n      \"options, order\",\r\n      [\r\n          # Defaults, all options false\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a1/path1\r\n          # tmp/a23/path1\r\n          # tmp/a57/path2\r\n          # tmp/a64/path1\r\n          # tmp/a64/path2\r\n          # tmp/a130/path1\r\n          ([None, None, False, False, False], [3, 2, 1, 0, 5, 6, 4]),\r\n          # Path option True\r\n          # tmp/a1/path1\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a23/path1\r\n          # tmp/a57/path2\r\n          # tmp/a64/path1\r\n          # tmp/a64/path2\r\n          # tmp/a130/path1\r\n          ([None, None, False, True, False], [2, 3, 1, 0, 5, 6, 4]),\r\n          # Filter option keeps only within range\r\n          # tmp/a23/path1\r\n          # tmp/a57/path2\r\n          # tmp/a64/path1\r\n          # tmp/a64/path2\r\n          ([[(20, 100)], None, False, False, False], [1, 0, 5, 6]),\r\n          # Reverse filter, exclude in range\r\n          # tmp/a1/path1\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a130/path1\r\n          ([None, [(20, 100)], False, True, False], [2, 3, 4]),\r\n          # Exclude given values with exclude list\r\n          # tmp/a1/path1\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a57/path2\r\n          # tmp/a64/path1\r\n          # tmp/a64/path2\r\n          ([None, None, [23, 130], True, False], [2, 3, 0, 5, 6]),\r\n          # Reverse order\r\n          # tmp/a130/path1\r\n          # tmp/a64/path2\r\n          # tmp/a64/path1\r\n          # tmp/a57/path2\r\n          # tmp/a23/path1\r\n          # tmp/a1 (1)/path1\r\n          # tmp/a1/path1\r\n          ([None, None, False, True, True], reversed([2, 3, 1, 0, 5, 6, 4])),\r\n      ],\r\n  )\r\n  def test_sort_and_print_entries(options, order, mocker):\r\nE       fixture 'mocker' not found\r\n>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, monkeypatch, pytestconfig, record_xml_attribute, record_xml_property, recwarn, tmpdir, tmpdir_factory, with_locale_de_de, with_locale_en_us\r\n>       use 'pytest --fixtures [testpath]' for help on them.\r\n\r\n/usr/ports/devel/py-natsort/work-py27/natsort-5.4.0/test_natsort/test_main.py:89\r\n_________________________________________________________ ERROR at setup of TestNatCmp.test_keys_are_being_cached __________________________________________________________\r\nfile /usr/ports/devel/py-natsort/work-py27/natsort-5.4.0/test_natsort/test_natsort_cmp.py, line 39\r\n      def test_keys_are_being_cached(self, mocker):\r\nE       fixture 'mocker' not found\r\n>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, monkeypatch, pytestconfig, record_xml_attribute, record_xml_property, recwarn, tmpdir, tmpdir_factory, with_locale_de_de, with_locale_en_us\r\n>       use 'pytest --fixtures [testpath]' for help on them.\r\n\r\n/usr/ports/devel/py-natsort/work-py27/natsort-5.4.0/test_natsort/test_natsort_cmp.py:39\r\n__________________________________________________ ERROR at setup of test_natsort_keygen_with_locale[48-expected0-False] ___________________________________________________\r\nfile /usr/ports/devel/py-natsort/work-py27/natsort-5.4.0/test_natsort/test_natsort_keygen.py, line 102\r\n  @pytest.mark.parametrize(\r\n      \"alg, expected, is_dumb\",\r\n      [\r\n          (\r\n              ns.LOCALE,\r\n              (\r\n                  (null_string_locale, 6, \"A-\", 5, \".\", 34, \"e+\", 1),\r\n                  (\"/Folder (\", 1, \")/Foo\"),\r\n                  (null_string_locale, 56.7),\r\n              ),\r\n              False,\r\n          ),\r\n          (\r\n              ns.LOCALE,\r\n              (\r\n                  (null_string_locale, 6, \"aa--\", 5, \"..\", 34, \"eE++\", 1),\r\n                  (\"//ffoOlLdDeErR  ((\", 1, \"))//ffoOoO\"),\r\n                  (null_string_locale, 56.7),\r\n              ),\r\n              True,\r\n          ),\r\n          (\r\n              ns.LOCALE | ns.CAPITALFIRST,\r\n              (\r\n                  ((\"\",), (null_string_locale, 6, \"A-\", 5, \".\", 34, \"e+\", 1)),\r\n                  ((\"/\",), (\"/Folder (\", 1, \")/Foo\")),\r\n                  ((\"\",), (null_string_locale, 56.7)),\r\n              ),\r\n              False,\r\n          ),\r\n      ],\r\n  )\r\n  @pytest.mark.usefixtures(\"with_locale_en_us\")\r\n  def test_natsort_keygen_with_locale(mocker, arbitrary_input, alg, expected, is_dumb):\r\nE       fixture 'mocker' not found\r\n>       available fixtures: arbitrary_input, bytes_input, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, monkeypatch, pytestconfig, record_xml_attribute, record_xml_property, recwarn, tmpdir, tmpdir_factory, with_locale_de_de, with_locale_en_us\r\n>       use 'pytest --fixtures [testpath]' for help on them.\r\n\r\n/usr/ports/devel/py-natsort/work-py27/natsort-5.4.0/test_natsort/test_natsort_keygen.py:102\r\n___________________________________________________ ERROR at setup of test_natsort_keygen_with_locale[48-expected1-True] ___________________________________________________\r\nfile /usr/ports/devel/py-natsort/work-py27/natsort-5.4.0/test_natsort/test_natsort_keygen.py, line 102\r\n  @pytest.mark.parametrize(\r\n      \"alg, expected, is_dumb\",\r\n      [\r\n          (\r\n              ns.LOCALE,\r\n              (\r\n                  (null_string_locale, 6, \"A-\", 5, \".\", 34, \"e+\", 1),\r\n                  (\"/Folder (\", 1, \")/Foo\"),\r\n                  (null_string_locale, 56.7),\r\n              ),\r\n              False,\r\n          ),\r\n          (\r\n              ns.LOCALE,\r\n              (\r\n                  (null_string_locale, 6, \"aa--\", 5, \"..\", 34, \"eE++\", 1),\r\n                  (\"//ffoOlLdDeErR  ((\", 1, \"))//ffoOoO\"),\r\n                  (null_string_locale, 56.7),\r\n              ),\r\n              True,\r\n          ),\r\n          (\r\n              ns.LOCALE | ns.CAPITALFIRST,\r\n              (\r\n                  ((\"\",), (null_string_locale, 6, \"A-\", 5, \".\", 34, \"e+\", 1)),\r\n                  ((\"/\",), (\"/Folder (\", 1, \")/Foo\")),\r\n                  ((\"\",), (null_string_locale, 56.7)),\r\n              ),\r\n              False,\r\n          ),\r\n      ],\r\n  )\r\n  @pytest.mark.usefixtures(\"with_locale_en_us\")\r\n  def test_natsort_keygen_with_locale(mocker, arbitrary_input, alg, expected, is_dumb):\r\nE       fixture 'mocker' not found\r\n>       available fixtures: arbitrary_input, bytes_input, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, monkeypatch, pytestconfig, record_xml_attribute, record_xml_property, recwarn, tmpdir, tmpdir_factory, with_locale_de_de, with_locale_en_us\r\n>       use 'pytest --fixtures [testpath]' for help on them.\r\n\r\n/usr/ports/devel/py-natsort/work-py27/natsort-5.4.0/test_natsort/test_natsort_keygen.py:102\r\n__________________________________________________ ERROR at setup of test_natsort_keygen_with_locale[560-expected2-False] __________________________________________________\r\nfile /usr/ports/devel/py-natsort/work-py27/natsort-5.4.0/test_natsort/test_natsort_keygen.py, line 102\r\n  @pytest.mark.parametrize(\r\n      \"alg, expected, is_dumb\",\r\n      [\r\n          (\r\n              ns.LOCALE,\r\n              (\r\n                  (null_string_locale, 6, \"A-\", 5, \".\", 34, \"e+\", 1),\r\n                  (\"/Folder (\", 1, \")/Foo\"),\r\n                  (null_string_locale, 56.7),\r\n              ),\r\n              False,\r\n          ),\r\n          (\r\n              ns.LOCALE,\r\n              (\r\n                  (null_string_locale, 6, \"aa--\", 5, \"..\", 34, \"eE++\", 1),\r\n                  (\"//ffoOlLdDeErR  ((\", 1, \"))//ffoOoO\"),\r\n                  (null_string_locale, 56.7),\r\n              ),\r\n              True,\r\n          ),\r\n          (\r\n              ns.LOCALE | ns.CAPITALFIRST,\r\n              (\r\n                  ((\"\",), (null_string_locale, 6, \"A-\", 5, \".\", 34, \"e+\", 1)),\r\n                  ((\"/\",), (\"/Folder (\", 1, \")/Foo\")),\r\n                  ((\"\",), (null_string_locale, 56.7)),\r\n              ),\r\n              False,\r\n          ),\r\n      ],\r\n  )\r\n  @pytest.mark.usefixtures(\"with_locale_en_us\")\r\n  def test_natsort_keygen_with_locale(mocker, arbitrary_input, alg, expected, is_dumb):\r\nE       fixture 'mocker' not found\r\n>       available fixtures: arbitrary_input, bytes_input, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, monkeypatch, pytestconfig, record_xml_attribute, record_xml_property, recwarn, tmpdir, tmpdir_factory, with_locale_de_de, with_locale_en_us\r\n>       use 'pytest --fixtures [testpath]' for help on them.\r\n\r\n/usr/ports/devel/py-natsort/work-py27/natsort-5.4.0/test_natsort/test_natsort_keygen.py:102\r\n================================================================================= FAILURES =================================================================================\r\n________________________________________________________ test_string_component_transform_factory[48-example_func5] _________________________________________________________\r\n\r\nalg = 48, example_func = <functools.partial object at 0x807bf0838>\r\n\r\n    @pytest.mark.parametrize(\r\n>       \"alg, example_func\",\r\n        [\r\n            (ns.INT, fast_int),\r\n            (ns.DEFAULT, fast_int),\r\n            (ns.FLOAT, partial(fast_float, nan=float(\"-inf\"))),\r\n            (ns.FLOAT | ns.NANLAST, partial(fast_float, nan=float(\"+inf\"))),\r\n            (ns.GROUPLETTERS, partial(fast_int, key=groupletters)),\r\n            (ns.LOCALE, partial(fast_int, key=get_strxfrm())),\r\n            (\r\n                ns.GROUPLETTERS | ns.LOCALE,\r\n                partial(fast_int, key=lambda x: get_strxfrm()(groupletters(x))),\r\n            ),\r\n            (\r\n                ns_DUMB | ns.LOCALE,\r\n                partial(fast_int, key=lambda x: get_strxfrm()(groupletters(x))),\r\n            ),\r\n            (\r\n                ns.GROUPLETTERS | ns.LOCALE | ns.FLOAT | ns.NANLAST,\r\n                partial(\r\n                    fast_float,\r\n                    key=lambda x: get_strxfrm()(groupletters(x)),\r\n                    nan=float(\"+inf\"),\r\n                ),\r\n            ),\r\n        ],\r\n    )\r\n\r\ntest_natsort/test_string_component_transform_factory.py:37: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n/usr/local/lib/python2.7/site-packages/hypothesis/core.py:290: in execute_explicit_examples\r\n    lambda data: test(*arguments, **example_kwargs)\r\n/usr/local/lib/python2.7/site-packages/hypothesis/executors.py:58: in default_new_style_executor\r\n    return function(data)\r\n/usr/local/lib/python2.7/site-packages/hypothesis/core.py:290: in <lambda>\r\n    lambda data: test(*arguments, **example_kwargs)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nx = nan, alg = 48, example_func = <functools.partial object at 0x807bf0838>\r\n\r\n    @pytest.mark.parametrize(\r\n        \"alg, example_func\",\r\n        [\r\n            (ns.INT, fast_int),\r\n            (ns.DEFAULT, fast_int),\r\n            (ns.FLOAT, partial(fast_float, nan=float(\"-inf\"))),\r\n            (ns.FLOAT | ns.NANLAST, partial(fast_float, nan=float(\"+inf\"))),\r\n            (ns.GROUPLETTERS, partial(fast_int, key=groupletters)),\r\n            (ns.LOCALE, partial(fast_int, key=get_strxfrm())),\r\n            (\r\n                ns.GROUPLETTERS | ns.LOCALE,\r\n                partial(fast_int, key=lambda x: get_strxfrm()(groupletters(x))),\r\n            ),\r\n            (\r\n                ns_DUMB | ns.LOCALE,\r\n                partial(fast_int, key=lambda x: get_strxfrm()(groupletters(x))),\r\n            ),\r\n            (\r\n                ns.GROUPLETTERS | ns.LOCALE | ns.FLOAT | ns.NANLAST,\r\n                partial(\r\n                    fast_float,\r\n                    key=lambda x: get_strxfrm()(groupletters(x)),\r\n                    nan=float(\"+inf\"),\r\n                ),\r\n            ),\r\n        ],\r\n    )\r\n    @example(x=float(\"nan\"))\r\n    @given(\r\n        x=integers()\r\n        | floats()\r\n        | text().filter(bool).filter(no_bad_uni_chars).filter(no_null)\r\n    )\r\n    @pytest.mark.usefixtures(\"with_locale_en_us\")\r\n    def test_string_component_transform_factory(x, alg, example_func):\r\n        string_component_transform_func = string_component_transform_factory(alg)\r\n        try:\r\n>           assert string_component_transform_func(py23_str(x)) == example_func(py23_str(x))\r\nE           AssertionError: assert 'D*D\\x01\\x07\\x01\\x07\\x00' == '+\\x05M+\\x05@+\\x...\\x00\\x01\\x07\\x00'\r\nE             - D*D\\x01\\x07\\x01\\x07\\x00\r\nE             + +\\x05M+\\x05@+\\x05M\\x01\\x07\\x01\\x07\\x00\r\n\r\ntest_natsort/test_string_component_transform_factory.py:73: AssertionError\r\n-------------------------------------------------------------------------------- Hypothesis --------------------------------------------------------------------------------\r\nFalsifying example: test_string_component_transform_factory(x=nan, alg=48, example_func=<functools.partial at 0x807bf0838>)\r\n======================================================= 1 failed, 265 passed, 10 skipped, 12 error in 58.60 seconds ========================================================\r\n*** Error code 1\r\n\r\nStop.\r\nmake: stopped in /usr/ports/devel/py-natsort\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/65", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/65/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/65/events", "html_url": "https://github.com/SethMMorton/natsort/issues/65", "id": 352039107, "node_id": "MDU6SXNzdWUzNTIwMzkxMDc=", "number": 65, "title": "Test test_input_string_transform_factory_removes_thousands_separator_and_is_float_aware_with_LOCALE_and_FLOAT_example is failing on last release 5.3.3", "user": {"login": "agustinhenze", "id": 1900634, "node_id": "MDQ6VXNlcjE5MDA2MzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1900634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agustinhenze", "html_url": "https://github.com/agustinhenze", "followers_url": "https://api.github.com/users/agustinhenze/followers", "following_url": "https://api.github.com/users/agustinhenze/following{/other_user}", "gists_url": "https://api.github.com/users/agustinhenze/gists{/gist_id}", "starred_url": "https://api.github.com/users/agustinhenze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agustinhenze/subscriptions", "organizations_url": "https://api.github.com/users/agustinhenze/orgs", "repos_url": "https://api.github.com/users/agustinhenze/repos", "events_url": "https://api.github.com/users/agustinhenze/events{/privacy}", "received_events_url": "https://api.github.com/users/agustinhenze/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302834, "node_id": "MDU6TGFiZWw0MzAyODM0", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-08-20T08:46:05Z", "updated_at": "2018-09-22T13:29:33Z", "closed_at": "2018-09-22T13:29:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there, I'm the debian maintainer of this module :). I was packaging last version and I can repeat in a controlled environment the test mentioned on the subject is failing for both Python versions. Python2.7 and Python3.6.\r\n\r\n```\r\n=================================== FAILURES ===================================\r\n test_input_string_transform_factory_removes_thousands_separator_and_is_float_aware_with_LOCALE_and_FLOAT_example \r\ntest_natsort/test_input_string_transform_factory.py:126: in test_input_string_transform_factory_removes_thousands_separator_and_is_float_aware_with_LOCALE_and_FLOAT_example\r\n    assert _input_string_transform_factory(ns.LOCALE | ns.FLOAT)(x) == '12543642642.534,534980'\r\nE   AssertionError: assert '12,543,642,642.534,534,980' == '12543642642.534,534980'\r\nE     - 12,543,642,642.534,534,980\r\nE     ?   -   -   -           -\r\nE     + 12543642642.534,534980\r\n```\r\n\r\nYou can see the detailed log here\r\n\r\nhttps://salsa.debian.org/debian/natsort/-/jobs/40303\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/64", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/64/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/64/events", "html_url": "https://github.com/SethMMorton/natsort/issues/64", "id": 343151919, "node_id": "MDU6SXNzdWUzNDMxNTE5MTk=", "number": 64, "title": "'extras_require' must be a dictionary whose values are strings or lists", "user": {"login": "jondkelley", "id": 19294046, "node_id": "MDQ6VXNlcjE5Mjk0MDQ2", "avatar_url": "https://avatars0.githubusercontent.com/u/19294046?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jondkelley", "html_url": "https://github.com/jondkelley", "followers_url": "https://api.github.com/users/jondkelley/followers", "following_url": "https://api.github.com/users/jondkelley/following{/other_user}", "gists_url": "https://api.github.com/users/jondkelley/gists{/gist_id}", "starred_url": "https://api.github.com/users/jondkelley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jondkelley/subscriptions", "organizations_url": "https://api.github.com/users/jondkelley/orgs", "repos_url": "https://api.github.com/users/jondkelley/repos", "events_url": "https://api.github.com/users/jondkelley/events{/privacy}", "received_events_url": "https://api.github.com/users/jondkelley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302834, "node_id": "MDU6TGFiZWw0MzAyODM0", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-20T15:30:00Z", "updated_at": "2020-02-03T05:16:41Z", "closed_at": "2018-07-20T15:37:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Minimum, Complete, Verifiable Example\r\n\r\n* CentOS Linux 7.5\r\n* Python 2.7.5\r\n* Centos 7 package: python-setuptools 0.9.8 (latest from Redhat 7, added Apr 12, 2017)\r\n\r\nCreate a setup.py with natsort required:\r\n\r\n    # -*- coding: utf-8 -*-\r\n    # !/usr/bin/python\r\n\r\n    import sys\r\n\r\n    from setuptools import setup\r\n\r\n    sys.path.insert(0, '.')\r\n\r\n    if __name__ == \"__main__\":\r\n        package = \"test_bug\"\r\n        setup(\r\n            name=package,\r\n            version=\"0.0.1\",\r\n            author=\"Nobody\",\r\n            author_email=\"nobody@aol.com\",\r\n            url=\"https://github.com/SethMMorton\",\r\n            license=\"ASLv2\",\r\n            packages=[package],\r\n            package_dir={package: package},\r\n            description=(\r\n                'test'\r\n            ),\r\n            long_description=(\r\n                'test'\r\n            ),\r\n            classifiers=[\r\n                'Intended Audience :: System Administrators',\r\n            ],\r\n            data_files=[],\r\n            install_requires=[\r\n                'natsort'\r\n            ]\r\n        )\r\n\r\n\r\nRun command\r\n\r\n    /usr/bin/python2.7 setup.py install\r\n\r\n## Error message, Traceback, Desired behavior, Suggestion, Request, or Question\r\n\r\n    Processing dependencies for test_bug==0.0.1\r\n    Searching for natsort\r\n    Reading https://pypi.python.org/simple/natsort/\r\n    Best match: natsort 5.3.3\r\n    Downloading https://files.pythonhosted.org/packages/9b/04/f397de5d77942e37cf31f2d37ba7cc2b6f46a440e5dd41e3ab3474f51a0e/natsort-5.3.3.tar.gz#sha256=da930bfddce941526955dea8d35a44243c96adf919ceb758ba7bbd1ba5b0a39a\r\n    Processing natsort-5.3.3.tar.gz\r\n    Writing /tmp/easy_install-QQ9Rgf/natsort-5.3.3/setup.cfg\r\n    Running natsort-5.3.3/setup.py -q bdist_egg --dist-dir /tmp/easy_install-QQ9Rgf/natsort-5.3.3/egg-dist-tmp-mM234_\r\n    error: Setup script exited with error in natsort setup command: 'extras_require' must be a dictionary whose values are strings or lists of strings containing valid project/version requirement specifiers.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/63", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/63/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/63/events", "html_url": "https://github.com/SethMMorton/natsort/issues/63", "id": 342595911, "node_id": "MDU6SXNzdWUzNDI1OTU5MTE=", "number": 63, "title": "Why doesn't natsorted properly sort signed floats?", "user": {"login": "xseryda", "id": 6108107, "node_id": "MDQ6VXNlcjYxMDgxMDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/6108107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xseryda", "html_url": "https://github.com/xseryda", "followers_url": "https://api.github.com/users/xseryda/followers", "following_url": "https://api.github.com/users/xseryda/following{/other_user}", "gists_url": "https://api.github.com/users/xseryda/gists{/gist_id}", "starred_url": "https://api.github.com/users/xseryda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xseryda/subscriptions", "organizations_url": "https://api.github.com/users/xseryda/orgs", "repos_url": "https://api.github.com/users/xseryda/repos", "events_url": "https://api.github.com/users/xseryda/events{/privacy}", "received_events_url": "https://api.github.com/users/xseryda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302838, "node_id": "MDU6TGFiZWw0MzAyODM4", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-19T06:32:56Z", "updated_at": "2018-07-20T14:50:31Z", "closed_at": "2018-07-20T06:23:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I saw in the documentation natsort should work for negative floats as well. Why then does it fail for this example?\r\n\r\n``` python\r\nfrom natsort import natsorted\r\n# natsort==5.3.3\r\n\r\nitemList = ['Current_2.0', 'Current_-1.0', 'Current_2.4']\r\nprint(natsorted(itemList))\r\n\r\n# output: ['Current_2.0', 'Current_2.4', 'Current_-1.0']\r\n# desired output: ['Current_-1.0', 'Current_2.0', 'Current_2.4']\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/62", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/62/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/62/events", "html_url": "https://github.com/SethMMorton/natsort/issues/62", "id": 339043023, "node_id": "MDU6SXNzdWUzMzkwNDMwMjM=", "number": 62, "title": "Python 3.7 Release", "user": {"login": "tilgovi", "id": 20818, "node_id": "MDQ6VXNlcjIwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/20818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tilgovi", "html_url": "https://github.com/tilgovi", "followers_url": "https://api.github.com/users/tilgovi/followers", "following_url": "https://api.github.com/users/tilgovi/following{/other_user}", "gists_url": "https://api.github.com/users/tilgovi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tilgovi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tilgovi/subscriptions", "organizations_url": "https://api.github.com/users/tilgovi/orgs", "repos_url": "https://api.github.com/users/tilgovi/repos", "events_url": "https://api.github.com/users/tilgovi/events{/privacy}", "received_events_url": "https://api.github.com/users/tilgovi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302835, "node_id": "MDU6TGFiZWw0MzAyODM1", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-06T19:06:14Z", "updated_at": "2018-07-08T00:14:32Z", "closed_at": "2018-07-07T03:42:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using natsort in a project and I'd like to make it Python 3.7 compatible. The current master works just fine after the StopIteration fix. Is there anything I can do to help get it on PyPI?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/61", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/61/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/61/events", "html_url": "https://github.com/SethMMorton/natsort/issues/61", "id": 337271474, "node_id": "MDU6SXNzdWUzMzcyNzE0NzQ=", "number": 61, "title": "versorted should follow SemVer rules", "user": {"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302839, "node_id": "MDU6TGFiZWw0MzAyODM5", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-07-01T07:41:20Z", "updated_at": "2018-11-15T06:38:09Z", "closed_at": "2018-11-15T06:38:09Z", "author_association": "OWNER", "active_lock_reason": null, "body": "## Minimum, Complete, Verifiable Example\r\n\r\n```python\r\nIn [1]: import natsort\r\n\r\nIn [2]: a = ['1.0.0-alpha', '1.0.0-alpha.1', '1.0.0-alpha.beta', '1.0.0-beta', '1.0.0-beta.2', '1.0.0\r\n   ...: -beta.11', '1.0.0-rc.1', '1.0.0']\r\n\r\nIn [3]: natsort.versorted(a)\r\nOut[3]: \r\n['1.0.0',\r\n '1.0.0-alpha',\r\n '1.0.0-alpha.1',\r\n '1.0.0-alpha.beta',\r\n '1.0.0-beta',\r\n '1.0.0-beta.2',\r\n '1.0.0-beta.11',\r\n '1.0.0-rc.1']\r\n\r\nIn [4]: natsort.__version__\r\nOut[4]: '5.3.2'\r\n\r\n```\r\n\r\nAccording to https://semver.org/, `1.0.0-alpha < 1.0.0-alpha.1 < 1.0.0-alpha.beta < 1.0.0-beta < 1.0.0-beta.2 < 1.0.0-beta.11 < 1.0.0-rc.1 < 1.0.0`.  `natsort` puts the `1.0.0` is in the wrong place.\r\n\r\n## Error message, Traceback, Desired behavior, Suggestion, Request, or Question\r\n\r\n[There is a useful hack to make this work](http://natsort.readthedocs.io/en/master/examples.html#rc-sorting), but that should not be needed for a function called `versorted`. It should handle this out-of-the-box.\r\n\r\nThis would be a breaking change, and might require updating the `natsort` major version.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/60", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/60/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/60/events", "html_url": "https://github.com/SethMMorton/natsort/issues/60", "id": 333004317, "node_id": "MDU6SXNzdWUzMzMwMDQzMTc=", "number": 60, "title": "Unexpected TypeError when using natsorted on a custom class", "user": {"login": "evandrocoan", "id": 5332158, "node_id": "MDQ6VXNlcjUzMzIxNTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/5332158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evandrocoan", "html_url": "https://github.com/evandrocoan", "followers_url": "https://api.github.com/users/evandrocoan/followers", "following_url": "https://api.github.com/users/evandrocoan/following{/other_user}", "gists_url": "https://api.github.com/users/evandrocoan/gists{/gist_id}", "starred_url": "https://api.github.com/users/evandrocoan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evandrocoan/subscriptions", "organizations_url": "https://api.github.com/users/evandrocoan/orgs", "repos_url": "https://api.github.com/users/evandrocoan/repos", "events_url": "https://api.github.com/users/evandrocoan/events{/privacy}", "received_events_url": "https://api.github.com/users/evandrocoan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 372710618, "node_id": "MDU6TGFiZWwzNzI3MTA2MTg=", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/documentation", "name": "documentation", "color": "fbca04", "default": true, "description": null}, {"id": 4302838, "node_id": "MDU6TGFiZWw0MzAyODM4", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-16T18:01:46Z", "updated_at": "2018-07-02T06:57:24Z", "closed_at": "2018-07-02T06:57:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Minimum, Complete, Verifiable Example\r\n\r\nUsing my custom class with python builtin `sorted()` works 100%. But with `natsorted`, Python throws this insane type error. This happens when one of my classes on the list has an iterator and the other don't.\r\n\r\n```python\r\n\r\n\r\nfrom natsort import natsorted\r\n\r\nclass Production(object):\r\n    def __init__(self, arg):\r\n        self.arg = arg\r\n\r\n    def __str__(self):\r\n        return self.arg\r\n\r\n    def __lt__(self, other):\r\n        return str( self ) < str( other )\r\n\r\n    def __hash__(self):\r\n        return hash( str( self ) )\r\n\r\n    def __iter__(self):\r\n        self.index = True\r\n        return self\r\n\r\n    def __next__(self):\r\n\r\n        if self.index:\r\n            self.index = False\r\n            return self.arg\r\n\r\n        raise StopIteration\r\n\r\n\r\nclass Terminal(object):\r\n    def __init__(self, arg):\r\n        self.arg = arg\r\n\r\n    def __str__(self):\r\n        return self.arg\r\n\r\n    def __lt__(self, other):\r\n        return str( self ) < str( other )\r\n\r\n    def __hash__(self):\r\n        return hash( str( self ) )\r\n\r\n\r\nterminal = Terminal('B')\r\nproduction = Production('A')\r\n\r\ntrouble_set = [terminal, production]\r\n\r\nprint( 'Python sorted:' )\r\nprint( sorted( trouble_set ) )\r\nprint(  )\r\nprint( 'natsorted sorted:' )\r\nprint( natsorted( trouble_set ) )\r\n```\r\n\r\n\r\n## Error message, Traceback\r\n\r\n```\r\nPython sorted:\r\n[<__main__.Production object at 0x00...>, <__main__.Terminal object at 0x00...>]\r\n\r\nnatsorted sorted:\r\nTraceback (most recent call last):\r\n  File \"D:\\User\\Downloads\\test.py\", line 54, in <module>\r\n    print( natsorted( trouble_set ) )\r\n  File \"F:\\Python\\lib\\site-packages\\natsort\\natsort.py\", line 299, in natsorted\r\n    return sorted(seq, reverse=reverse, key=natsort_key)\r\nTypeError: '<' not supported between instances of 'tuple' and 'str'\r\n```\r\n\r\nThis error also comes up if you replace the iterator by the `__getitem__`:\r\n<details>\r\n<p>\r\n\r\n```python\r\nfrom natsort import natsorted\r\n\r\nclass Production(object):\r\n    def __init__(self, arg):\r\n        self.arg = arg\r\n\r\n    def __str__(self):\r\n        return self.arg\r\n\r\n    def __lt__(self, other):\r\n        return str( self ) < str( other )\r\n\r\n    def __hash__(self):\r\n        return hash( str( self ) )\r\n\r\n    def __getitem__(self, key):\r\n        return self.arg[key]\r\n\r\n\r\nclass Terminal(object):\r\n    def __init__(self, arg):\r\n        self.arg = arg\r\n\r\n    def __str__(self):\r\n        return self.arg\r\n\r\n    def __lt__(self, other):\r\n        return str( self ) < str( other )\r\n\r\n    def __hash__(self):\r\n        return hash( str( self ) )\r\n\r\n\r\nterminal = Terminal('B')\r\nproduction = Production('A')\r\n\r\ntrouble_set = [terminal, production]\r\n\r\nprint( 'Python sorted:' )\r\nprint( sorted( trouble_set ) )\r\nprint(  )\r\nprint( 'natsorted sorted:' )\r\nprint( natsorted( trouble_set ) )\r\n```\r\n</p>\r\n</details><br>\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/57", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/57/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/57/events", "html_url": "https://github.com/SethMMorton/natsort/issues/57", "id": 323870806, "node_id": "MDU6SXNzdWUzMjM4NzA4MDY=", "number": 57, "title": "pytest tests the installed version, not the freshly build one", "user": {"login": "yurivict", "id": 271906, "node_id": "MDQ6VXNlcjI3MTkwNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/271906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yurivict", "html_url": "https://github.com/yurivict", "followers_url": "https://api.github.com/users/yurivict/followers", "following_url": "https://api.github.com/users/yurivict/following{/other_user}", "gists_url": "https://api.github.com/users/yurivict/gists{/gist_id}", "starred_url": "https://api.github.com/users/yurivict/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yurivict/subscriptions", "organizations_url": "https://api.github.com/users/yurivict/orgs", "repos_url": "https://api.github.com/users/yurivict/repos", "events_url": "https://api.github.com/users/yurivict/events{/privacy}", "received_events_url": "https://api.github.com/users/yurivict/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 372710731, "node_id": "MDU6TGFiZWwzNzI3MTA3MzE=", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/usability", "name": "usability", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-05-17T04:46:25Z", "updated_at": "2018-05-18T05:02:06Z", "closed_at": "2018-05-18T03:38:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "natsort-5.3.1 on FreeBSD 11.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/55", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/55/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/55/events", "html_url": "https://github.com/SethMMorton/natsort/issues/55", "id": 323794889, "node_id": "MDU6SXNzdWUzMjM3OTQ4ODk=", "number": 55, "title": "python setup.py install fails with setuptools==20.7.0", "user": {"login": "ishidawataru", "id": 5915117, "node_id": "MDQ6VXNlcjU5MTUxMTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5915117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ishidawataru", "html_url": "https://github.com/ishidawataru", "followers_url": "https://api.github.com/users/ishidawataru/followers", "following_url": "https://api.github.com/users/ishidawataru/following{/other_user}", "gists_url": "https://api.github.com/users/ishidawataru/gists{/gist_id}", "starred_url": "https://api.github.com/users/ishidawataru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ishidawataru/subscriptions", "organizations_url": "https://api.github.com/users/ishidawataru/orgs", "repos_url": "https://api.github.com/users/ishidawataru/repos", "events_url": "https://api.github.com/users/ishidawataru/events{/privacy}", "received_events_url": "https://api.github.com/users/ishidawataru/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302834, "node_id": "MDU6TGFiZWw0MzAyODM0", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-05-16T21:31:17Z", "updated_at": "2018-05-18T03:48:02Z", "closed_at": "2018-05-17T04:46:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Minimum, Complete, Verifiable Example\r\n\r\npython 2.7.12\r\nsetuptools 20.7.0 (Ubuntu 16.04 apt default version)\r\nnatsort 5.3.1\r\n\r\nEither upgrading setuptools to newer version (39.1.0) or pass `version` and `name` variable\r\nto `setup()` in `setup.py` fixes the problem.\r\n\r\nIf `natsort` doesn't support old version of `setuptools`, it would be better to note it under\r\nhttps://github.com/SethMMorton/natsort#requirements\r\n\r\nSee https://stackoverflow.com/help/mcve for explanation.\r\n\r\n## Error message, Traceback, Desired behavior, Suggestion, Request, or Question\r\n\r\n```\r\n$ sudo python setup.py install\r\nrunning install\r\nrunning bdist_egg\r\nrunning egg_info\r\nwriting src/UNKNOWN.egg-info/PKG-INFO\r\nwriting top-level names to src/UNKNOWN.egg-info/top_level.txt\r\nwriting dependency_links to src/UNKNOWN.egg-info/dependency_links.txt\r\nreading manifest file 'src/UNKNOWN.egg-info/SOURCES.txt'\r\nreading manifest template 'MANIFEST.in'\r\nwarning: no previously-included files matching '*.py[cod]' found anywhere in distribution\r\nwarning: no previously-included files matching '__pycache__' found anywhere in distribution\r\nwarning: no previously-included files matching '*.so' found anywhere in distribution\r\nwriting manifest file 'src/UNKNOWN.egg-info/SOURCES.txt'\r\ninstalling library code to build/bdist.linux-x86_64/egg\r\nrunning install_lib\r\nrunning build_py\r\ncreating build/bdist.linux-x86_64/egg\r\ncreating build/bdist.linux-x86_64/egg/natsort\r\ncopying build/lib.linux-x86_64-2.7/natsort/utils.py -> build/bdist.linux-x86_64/egg/natsort\r\ncopying build/lib.linux-x86_64-2.7/natsort/unicode_numbers.py -> build/bdist.linux-x86_64/egg/natsort\r\ncopying build/lib.linux-x86_64-2.7/natsort/__main__.py -> build/bdist.linux-x86_64/egg/natsort\r\ncopying build/lib.linux-x86_64-2.7/natsort/ns_enum.py -> build/bdist.linux-x86_64/egg/natsort\r\ncopying build/lib.linux-x86_64-2.7/natsort/__init__.py -> build/bdist.linux-x86_64/egg/natsort\r\ncreating build/bdist.linux-x86_64/egg/natsort/compat\r\ncopying build/lib.linux-x86_64-2.7/natsort/compat/locale.py -> build/bdist.linux-x86_64/egg/natsort/compat\r\ncopying build/lib.linux-x86_64-2.7/natsort/compat/__init__.py -> build/bdist.linux-x86_64/egg/natsort/compat\r\ncopying build/lib.linux-x86_64-2.7/natsort/compat/fake_fastnumbers.py -> build/bdist.linux-x86_64/egg/natsort/compat\r\ncopying build/lib.linux-x86_64-2.7/natsort/compat/py23.py -> build/bdist.linux-x86_64/egg/natsort/compat\r\ncopying build/lib.linux-x86_64-2.7/natsort/compat/fastnumbers.py -> build/bdist.linux-x86_64/egg/natsort/compat\r\ncopying build/lib.linux-x86_64-2.7/natsort/compat/pathlib.py -> build/bdist.linux-x86_64/egg/natsort/compat\r\ncopying build/lib.linux-x86_64-2.7/natsort/_version.py -> build/bdist.linux-x86_64/egg/natsort\r\ncopying build/lib.linux-x86_64-2.7/natsort/natsort.py -> build/bdist.linux-x86_64/egg/natsort\r\nbyte-compiling build/bdist.linux-x86_64/egg/natsort/utils.py to utils.pyc\r\nbyte-compiling build/bdist.linux-x86_64/egg/natsort/unicode_numbers.py to unicode_numbers.pyc\r\nbyte-compiling build/bdist.linux-x86_64/egg/natsort/__main__.py to __main__.pyc\r\nbyte-compiling build/bdist.linux-x86_64/egg/natsort/ns_enum.py to ns_enum.pyc\r\nbyte-compiling build/bdist.linux-x86_64/egg/natsort/__init__.py to __init__.pyc\r\nbyte-compiling build/bdist.linux-x86_64/egg/natsort/compat/locale.py to locale.pyc\r\nbyte-compiling build/bdist.linux-x86_64/egg/natsort/compat/__init__.py to __init__.pyc\r\nbyte-compiling build/bdist.linux-x86_64/egg/natsort/compat/fake_fastnumbers.py to fake_fastnumbers.pyc\r\nbyte-compiling build/bdist.linux-x86_64/egg/natsort/compat/py23.py to py23.pyc\r\nbyte-compiling build/bdist.linux-x86_64/egg/natsort/compat/fastnumbers.py to fastnumbers.pyc\r\nbyte-compiling build/bdist.linux-x86_64/egg/natsort/compat/pathlib.py to pathlib.pyc\r\nbyte-compiling build/bdist.linux-x86_64/egg/natsort/_version.py to _version.pyc\r\nbyte-compiling build/bdist.linux-x86_64/egg/natsort/natsort.py to natsort.pyc\r\ncreating build/bdist.linux-x86_64/egg/EGG-INFO\r\ncopying src/UNKNOWN.egg-info/PKG-INFO -> build/bdist.linux-x86_64/egg/EGG-INFO\r\ncopying src/UNKNOWN.egg-info/SOURCES.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\r\ncopying src/UNKNOWN.egg-info/dependency_links.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\r\ncopying src/UNKNOWN.egg-info/top_level.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\r\nzip_safe flag not set; analyzing archive contents...\r\ncreating 'dist/UNKNOWN-0.0.0-py2.7.egg' and adding 'build/bdist.linux-x86_64/egg' to it\r\nremoving 'build/bdist.linux-x86_64/egg' (and everything under it)\r\nProcessing UNKNOWN-0.0.0-py2.7.egg\r\nRemoving /usr/local/lib/python2.7/dist-packages/UNKNOWN-0.0.0-py2.7.egg\r\nCopying UNKNOWN-0.0.0-py2.7.egg to /usr/local/lib/python2.7/dist-packages\r\nUNKNOWN 0.0.0 is already the active version in easy-install.pth\r\n\r\nInstalled /usr/local/lib/python2.7/dist-packages/UNKNOWN-0.0.0-py2.7.egg\r\nProcessing dependencies for UNKNOWN==0.0.0\r\nFinished processing dependencies for UNKNOWN==0.0.0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/52", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/52/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/52/events", "html_url": "https://github.com/SethMMorton/natsort/issues/52", "id": 310147977, "node_id": "MDU6SXNzdWUzMTAxNDc5Nzc=", "number": 52, "title": "Sorting arabic, farsi or hebrew numbers is not \"natural\"", "user": {"login": "hholzgra", "id": 451772, "node_id": "MDQ6VXNlcjQ1MTc3Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/451772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hholzgra", "html_url": "https://github.com/hholzgra", "followers_url": "https://api.github.com/users/hholzgra/followers", "following_url": "https://api.github.com/users/hholzgra/following{/other_user}", "gists_url": "https://api.github.com/users/hholzgra/gists{/gist_id}", "starred_url": "https://api.github.com/users/hholzgra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hholzgra/subscriptions", "organizations_url": "https://api.github.com/users/hholzgra/orgs", "repos_url": "https://api.github.com/users/hholzgra/repos", "events_url": "https://api.github.com/users/hholzgra/events{/privacy}", "received_events_url": "https://api.github.com/users/hholzgra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302834, "node_id": "MDU6TGFiZWw0MzAyODM0", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2018-03-30T19:24:17Z", "updated_at": "2018-04-21T03:10:17Z", "closed_at": "2018-04-21T03:10:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Minimum, Complete, Verifiable Example\r\n\r\n```\r\nimport locale\r\nfrom natsort import natsorted,natsort_keygen, ns\r\n\r\nlocale.setlocale(locale.LC_ALL, 'fa_IR.UTF-8')\r\n\r\nstreets = [ \r\n        \"1st street\",\r\n        \"10th street\",\r\n        \"2nd street\",\r\n        \"2 street\", \t\r\n        \"1 street\",\r\n        \"1street\",\r\n        \"12street\",\r\n        \"11 street\",\r\n        \"street 23\",\r\n        \"street 2\",\r\n        \"street 1\",\r\n        \"Street 11\",\r\n        \"\u06f2 street\",\r\n        \"\u06f1 street\",\r\n        \"\u06f1street\",\r\n        \"\u06f1\u06f2street\",\r\n        \"\u06f1\u06f1 street\",\r\n        \"street \u06f2\",\r\n        \"street \u06f1\",\r\n        \"street \u06f1\",\r\n        \"street \u06f1\u06f2\",\r\n        \"street \u06f1\u06f1\",\r\n]\r\n\r\nsl = natsorted(streets, alg= ns.LOCALE | ns.IGNORECASE) \r\n\r\nfor name in sl:\r\n    print(name)\r\n```\r\n\r\n## Error message, Traceback, Desired behavior, Suggestion, Request, or Question\r\n\r\nExpected result:\r\n\r\n```\r\n1 street\r\n\u06f1 street\r\n1st street\r\n1street\r\n\u06f1street\r\n2 street\r\n\u06f2 street\r\n2nd street\r\n10th street\r\n11 street\r\n\u06f1\u06f1 street\r\n12street\r\n\u06f1\u06f2street\r\nstreet 1\r\nstreet \u06f1\r\nstreet \u06f1\r\nstreet 2\r\nstreet \u06f2\r\nStreet 11\r\nstreet \u06f1\u06f1\r\nstreet \u06f1\u06f2\r\nstreet 23\r\n```\r\n\r\nActual result:\r\n\r\n```\r\n\u06f1\u06f1 street\r\n\u06f1\u06f2street\r\n1street\r\n\u06f1street\r\n1 street\r\n\u06f1 street\r\n1st street\r\n2nd street\r\n2 street\r\n\u06f2 street\r\n10th street\r\n11 street\r\n12street\r\nstreet 1\r\nstreet \u06f1\r\nstreet \u06f1\r\nstreet \u06f1\u06f1\r\nstreet \u06f1\u06f2\r\nstreet 2\r\nstreet \u06f2\r\nStreet 11\r\nstreet 23\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/51", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/51/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/51/events", "html_url": "https://github.com/SethMMorton/natsort/issues/51", "id": 310147751, "node_id": "MDU6SXNzdWUzMTAxNDc3NTE=", "number": 51, "title": "fastnumbers version check fails to accept  fastnumbers v2.0.2", "user": {"login": "hholzgra", "id": 451772, "node_id": "MDQ6VXNlcjQ1MTc3Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/451772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hholzgra", "html_url": "https://github.com/hholzgra", "followers_url": "https://api.github.com/users/hholzgra/followers", "following_url": "https://api.github.com/users/hholzgra/following{/other_user}", "gists_url": "https://api.github.com/users/hholzgra/gists{/gist_id}", "starred_url": "https://api.github.com/users/hholzgra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hholzgra/subscriptions", "organizations_url": "https://api.github.com/users/hholzgra/orgs", "repos_url": "https://api.github.com/users/hholzgra/repos", "events_url": "https://api.github.com/users/hholzgra/events{/privacy}", "received_events_url": "https://api.github.com/users/hholzgra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302834, "node_id": "MDU6TGFiZWw0MzAyODM0", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-30T19:23:12Z", "updated_at": "2018-04-05T02:37:39Z", "closed_at": "2018-03-31T23:57:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Minimum, Complete, Verifiable Example\r\n\r\ncurrent check code is:\r\n\r\n```\r\n    # Require >= version 0.7.1.\r\n    v = list(map(int, fastnumbers.__version__.split('.')))\r\n    if not (v[0] >= 0 and v[1] >= 7 and v[2] >= 1):\r\n        raise ImportError  # pragma: no cover\r\n```\r\n\r\n## Error message, Traceback, Desired behavior, Suggestion, Request, or Question\r\n\r\nThe check above fails with my currently installd fastnumers v2.0.2 as this has v[1] = 0 which is < 7\r\nSo the bundled fake_fastnumbers.py is always used even though the real fastnumbers package is installed.\r\n\r\nSuggested fix: use StrictVersion() from distutils.version to perform comparison\r\n\r\n```\r\ndiff --git a/natsort/compat/fastnumbers.py b/natsort/compat/fastnumbers.py\r\nindex 3cc331b..787b553 100644\r\n--- a/natsort/compat/fastnumbers.py\r\n+++ b/natsort/compat/fastnumbers.py\r\n@@ -6,6 +6,8 @@ from __future__ import (\r\n     absolute_import\r\n )\r\n \r\n+from distutils.version import StrictVersion\r\n+\r\n # If the user has fastnumbers installed, they will get great speed\r\n # benefits. If not, we use the simulated functions that come with natsort.\r\n try:\r\n@@ -15,8 +17,7 @@ try:\r\n     )\r\n     import fastnumbers\r\n     # Require >= version 0.7.1.\r\n-    v = list(map(int, fastnumbers.__version__.split('.')))\r\n-    if not (v[0] >= 0 and v[1] >= 7 and v[2] >= 1):\r\n+    if StrictVersion(fastnumbers.__version__) < StrictVersion('0.7.1'):\r\n         raise ImportError  # pragma: no cover\r\n except ImportError:\r\n     from natsort.compat.fake_fastnumbers import (\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/48", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/48/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/48/events", "html_url": "https://github.com/SethMMorton/natsort/issues/48", "id": 295211536, "node_id": "MDU6SXNzdWUyOTUyMTE1MzY=", "number": 48, "title": "Feature request natsorted():  Sort by letters, then numbers", "user": {"login": "NtwkEngineer", "id": 20625341, "node_id": "MDQ6VXNlcjIwNjI1MzQx", "avatar_url": "https://avatars1.githubusercontent.com/u/20625341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NtwkEngineer", "html_url": "https://github.com/NtwkEngineer", "followers_url": "https://api.github.com/users/NtwkEngineer/followers", "following_url": "https://api.github.com/users/NtwkEngineer/following{/other_user}", "gists_url": "https://api.github.com/users/NtwkEngineer/gists{/gist_id}", "starred_url": "https://api.github.com/users/NtwkEngineer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NtwkEngineer/subscriptions", "organizations_url": "https://api.github.com/users/NtwkEngineer/orgs", "repos_url": "https://api.github.com/users/NtwkEngineer/repos", "events_url": "https://api.github.com/users/NtwkEngineer/events{/privacy}", "received_events_url": "https://api.github.com/users/NtwkEngineer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302836, "node_id": "MDU6TGFiZWw0MzAyODM2", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/feature", "name": "feature", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/SethMMorton/natsort/milestones/1", "html_url": "https://github.com/SethMMorton/natsort/milestone/1", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/milestones/1/labels", "id": 3097353, "node_id": "MDk6TWlsZXN0b25lMzA5NzM1Mw==", "number": 1, "title": "Version 5.2.0", "description": "Minor `natsort` release with new functionality to control sorting order, and for easier backwards compatibility with older Python2 libraries that expect a `cmp` and not a `key`.", "creator": {"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2018-02-07T17:36:45Z", "updated_at": "2018-02-15T05:31:22Z", "due_on": null, "closed_at": "2018-02-15T05:31:22Z"}, "comments": 3, "created_at": "2018-02-07T16:50:00Z", "updated_at": "2018-02-15T04:24:56Z", "closed_at": "2018-02-15T04:24:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to submit a feature request to add an option that would allow natsorted() to sort by letters first, then numbers instead of numbers first, then letters.  Here is an example of the list that I am looking to sort - I am sorting by index 2 ('ABCDE', 'BCDEF' and '10001'):\r\n\r\n```python\r\nfrom natsort import natsorted\r\na = [\r\n\t['192.168.1.1', 'generic_description_1', 'ABCDE', 'apples', '172.16.1.1', u'\\nCircuit is up\\n'],\r\n\t['192.168.1.1', 'generic_description_2', 'BCDEF', 'oranges', '172.16.2.1', u'\\nCircuit is up\\n'],\r\n\t['192.168.2.1', 'generic_description_3', '10001', 'bananas', '172.16.3.1', u'\\nCircuit is up\\n']\r\n]\r\nprint(natsorted(a, key = lambda x: x[2]))\r\n```\r\n\r\nHere are the results that are printed:\r\n\r\n```\r\n[['192.168.2.1', 'generic_description_3', '10001', 'bananas', '172.16.3.1', u'\\nCircuit is up\\n'],\r\n ['192.168.1.1', 'generic_description_1', 'ABCDE', 'apples', '172.16.1.1', u'\\nCircuit is up\\n'],\r\n ['192.168.1.1', 'generic_description_2', 'BCDEF', 'oranges', '172.16.2.1', u'\\nCircuit is up\\n']]\r\n```\r\n\r\nAnd as you can see, it sorts by index 2 by numbers first, then letters:\r\n\r\n10001\r\nABCDE\r\nBCDEF\r\n\r\n\r\nThe option I am requesting would allow the sorting by letters first, then numbers - like this:\r\n\r\nABCDE\r\nBCDEF\r\n10001\r\n\r\nThanks for the consideration!\r\n\r\n-Matt", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/46", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/46/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/46/events", "html_url": "https://github.com/SethMMorton/natsort/issues/46", "id": 266730173, "node_id": "MDU6SXNzdWUyNjY3MzAxNzM=", "number": 46, "title": "'setup.py test' doesn't run any tests", "user": {"login": "yurivict", "id": 271906, "node_id": "MDQ6VXNlcjI3MTkwNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/271906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yurivict", "html_url": "https://github.com/yurivict", "followers_url": "https://api.github.com/users/yurivict/followers", "following_url": "https://api.github.com/users/yurivict/following{/other_user}", "gists_url": "https://api.github.com/users/yurivict/gists{/gist_id}", "starred_url": "https://api.github.com/users/yurivict/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yurivict/subscriptions", "organizations_url": "https://api.github.com/users/yurivict/orgs", "repos_url": "https://api.github.com/users/yurivict/repos", "events_url": "https://api.github.com/users/yurivict/events{/privacy}", "received_events_url": "https://api.github.com/users/yurivict/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 372710618, "node_id": "MDU6TGFiZWwzNzI3MTA2MTg=", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/documentation", "name": "documentation", "color": "fbca04", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-10-19T06:11:23Z", "updated_at": "2017-11-11T23:31:46Z", "closed_at": "2017-11-11T23:31:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nRan 0 tests in 0.000s\r\n\r\nOK\r\n```\r\n\r\nFound on FreeBSD, running ```make test``` in the port.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/44", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/44/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/44/events", "html_url": "https://github.com/SethMMorton/natsort/issues/44", "id": 251124502, "node_id": "MDU6SXNzdWUyNTExMjQ1MDI=", "number": 44, "title": "Add support for unicode normalization.", "user": {"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302836, "node_id": "MDU6TGFiZWw0MzAyODM2", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/feature", "name": "feature", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-18T02:42:09Z", "updated_at": "2017-08-19T19:15:02Z", "closed_at": "2017-08-19T19:15:02Z", "author_association": "OWNER", "active_lock_reason": null, "body": "This is inspired by [this StackOverflow question](https://stackoverflow.com/q/45734562/1399279). The problem is that even with `ns.LOCALE` some non-ASCII letters are not sorted as you might expect, but running it through `unicode.normalize` does the trick.\r\n\r\nIt is not clear if this should be the default behavior or an add-on.  It is also not clear if it should default to `'NFD'` or if it can be more flexible.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/42", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/42/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/42/events", "html_url": "https://github.com/SethMMorton/natsort/issues/42", "id": 240249755, "node_id": "MDU6SXNzdWUyNDAyNDk3NTU=", "number": 42, "title": "DeprecationWarning: generator '_sep_inserter' raised StopIteration - PEP 479", "user": {"login": "lykinsbd", "id": 12465231, "node_id": "MDQ6VXNlcjEyNDY1MjMx", "avatar_url": "https://avatars1.githubusercontent.com/u/12465231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lykinsbd", "html_url": "https://github.com/lykinsbd", "followers_url": "https://api.github.com/users/lykinsbd/followers", "following_url": "https://api.github.com/users/lykinsbd/following{/other_user}", "gists_url": "https://api.github.com/users/lykinsbd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lykinsbd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lykinsbd/subscriptions", "organizations_url": "https://api.github.com/users/lykinsbd/orgs", "repos_url": "https://api.github.com/users/lykinsbd/repos", "events_url": "https://api.github.com/users/lykinsbd/events{/privacy}", "received_events_url": "https://api.github.com/users/lykinsbd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302834, "node_id": "MDU6TGFiZWw0MzAyODM0", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-07-03T19:28:12Z", "updated_at": "2017-08-19T19:15:17Z", "closed_at": "2017-08-19T19:15:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "In Python 3.6.1, I'm experiencing an issue with a `DeprecationWarning` as shown below:\r\n\r\n```\r\nlib/python3.6/site-packages/natsort/utils.py:366: DeprecationWarning: generator '_sep_inserter' raised StopIteration\r\n  return lambda split_val, val: tuple(split_val)\r\n```\r\n\r\nCode functions and proceeds, however it pops the above DeprecationWarning for every sort.\r\n\r\nAppears to be [PEP 479](https://www.python.org/dev/peps/pep-0479/) related.  As of Python 3.5, `StopIteration` handling has changed inside generators.\r\n\r\nFrom [PEP 479 section on the Transition Plan](https://www.python.org/dev/peps/pep-0479/#transition-plan), it seems like the correct timing as 3.6 is when the non-silent warning was instituted:\r\n\r\n>     Python 3.5: Enable new semantics under __future__ import; silent deprecation warning if StopIteration bubbles out of a generator not under __future__ import.\r\n>     Python 3.6: Non-silent deprecation warning.\r\n>     Python 3.7: Enable new semantics everywhere.\r\n\r\nThe Natsort code itself shows a comment about `StopIteration` inside of the referenced `_sep_inserter` method:\r\nhttps://github.com/SethMMorton/natsort/blob/master/natsort/utils.py#L233\r\n\r\n```\r\n# Get the first element. If StopIteration is raised, that's OK.\r\n```\r\n\r\nSeems like we may just need to handle the raised `StopIteration` exception as outlined in PEP 479 and execute inside a `try...except` block to catch `StopIteration`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/38", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/38/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/38/events", "html_url": "https://github.com/SethMMorton/natsort/issues/38", "id": 158406642, "node_id": "MDU6SXNzdWUxNTg0MDY2NDI=", "number": 38, "title": "'NoneType' object has no attribute 'format'", "user": {"login": "TheML9I", "id": 15824298, "node_id": "MDQ6VXNlcjE1ODI0Mjk4", "avatar_url": "https://avatars1.githubusercontent.com/u/15824298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheML9I", "html_url": "https://github.com/TheML9I", "followers_url": "https://api.github.com/users/TheML9I/followers", "following_url": "https://api.github.com/users/TheML9I/following{/other_user}", "gists_url": "https://api.github.com/users/TheML9I/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheML9I/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheML9I/subscriptions", "organizations_url": "https://api.github.com/users/TheML9I/orgs", "repos_url": "https://api.github.com/users/TheML9I/repos", "events_url": "https://api.github.com/users/TheML9I/events{/privacy}", "received_events_url": "https://api.github.com/users/TheML9I/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302834, "node_id": "MDU6TGFiZWw0MzAyODM0", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2016-06-03T16:36:16Z", "updated_at": "2016-06-06T09:53:09Z", "closed_at": "2016-06-04T23:59:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you use uwsgi with parameter optimize=2 you can get error with using it:\n\n> AttributeError at /mymodule/api/\n> 'NoneType' object has no attribute 'format'\n\ninterpreter info:\n\n> Python Executable:    /home/httpd/app/bin/uwsgi\n> Python Version:   2.7.5\n\nadditional:\n\n> -O Turn on basic optimizations. This changes the filename extension for compiled (bytecode) files from .pyc to .pyo. See also PYTHONOPTIMIZE.\n> -OO Discard docstrings in addition to the -O optimizations.\n\nAs possible solution add for py23compat.py\n\n`\nreturn s.format(u='u') if s else s\n`\n\nAny ideas?\n\nThnx!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/37", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/37/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/37/events", "html_url": "https://github.com/SethMMorton/natsort/issues/37", "id": 150254384, "node_id": "MDU6SXNzdWUxNTAyNTQzODQ=", "number": 37, "title": "Refactor natural sorting key in a more functional manner.", "user": {"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 362259651, "node_id": "MDU6TGFiZWwzNjIyNTk2NTE=", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/maintainability", "name": "maintainability", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2016-04-22T03:25:19Z", "updated_at": "2016-05-03T08:18:26Z", "closed_at": "2016-05-03T08:18:26Z", "author_association": "OWNER", "active_lock_reason": null, "body": "As new features were added to `natsort`, the `_natsort_key` function was becoming a bit hacky and patched together. It was becoming difficult to add new functionality, and definitely difficult to follow the code.  Further, the testing was becoming difficult.\n\nI will be refactoring this function into several smaller functions and factory functions which will make future enhancements/bugfixes/testing more straightforward.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/36", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/36/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/36/events", "html_url": "https://github.com/SethMMorton/natsort/issues/36", "id": 146054786, "node_id": "MDU6SXNzdWUxNDYwNTQ3ODY=", "number": 36, "title": "Add thousands separator support when LOCALE is enabled.", "user": {"login": "madphysicist", "id": 4617010, "node_id": "MDQ6VXNlcjQ2MTcwMTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/4617010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madphysicist", "html_url": "https://github.com/madphysicist", "followers_url": "https://api.github.com/users/madphysicist/followers", "following_url": "https://api.github.com/users/madphysicist/following{/other_user}", "gists_url": "https://api.github.com/users/madphysicist/gists{/gist_id}", "starred_url": "https://api.github.com/users/madphysicist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madphysicist/subscriptions", "organizations_url": "https://api.github.com/users/madphysicist/orgs", "repos_url": "https://api.github.com/users/madphysicist/repos", "events_url": "https://api.github.com/users/madphysicist/events{/privacy}", "received_events_url": "https://api.github.com/users/madphysicist/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302836, "node_id": "MDU6TGFiZWw0MzAyODM2", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/feature", "name": "feature", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2016-04-05T17:24:20Z", "updated_at": "2016-05-09T03:59:25Z", "closed_at": "2016-05-08T07:40:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This issue was discovered when I tried to suggest `natsort` as the way to go for this Stack Overflow question: http://stackoverflow.com/q/36431810/2988730\n\nI was trying to do the following based on the [docs](http://pythonhosted.org/natsort/examples.html#locale-aware-sorting-human-sorting):\n\n```\nimport natsort, locale\nlocale.setlocale(locale.LC_ALL, 'german')\nmylist = ['23 text', '23.130', '12 text', '1.482 text', '3,25']\nnatsort.humansorted(mylist)\n```\n\nor alternatively\n\n```\nnatsort.natsorted(mylist, alg=natsort.ns.LOCALE)\n```\n\nThe result in both cases is\n\n```\n['1.482 text', '3,25', '12 text', '23.130', '23 text']\n```\n\nThe result that the OP (correctly) expected is\n\n```\n['3,25', '12 text', '23 text', '1.482 text', '23.130']\n```\n\nIt appears that natsort is not picking up the locale correctly?\n\nI am using Red Hat Enterprise Linux Release 6.5 (64 bit) with anaconda. `natsort 4.0.3` is running under `Python 3.5`.\n\nAlso, just to check that the locale is being set, I ran `locale.localeconv` after `locale.setlocale(locale.LC_ALL, 'german')`:\n\n```\n{'currency_symbol': 'EUR',\n 'decimal_point': ',',\n 'frac_digits': 2,\n 'grouping': [3, 3, 0],\n 'int_curr_symbol': 'EUR ',\n 'int_frac_digits': 2,\n 'mon_decimal_point': ',',\n 'mon_grouping': [3, 3, 0],\n 'mon_thousands_sep': '.',\n 'n_cs_precedes': 0,\n 'n_sep_by_space': 1,\n 'n_sign_posn': 1,\n 'negative_sign': '-',\n 'p_cs_precedes': 0,\n 'p_sep_by_space': 1,\n 'p_sign_posn': 1,\n 'positive_sign': '',\n 'thousands_sep': '.'}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/34", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/34/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/34/events", "html_url": "https://github.com/SethMMorton/natsort/issues/34", "id": 139096225, "node_id": "MDU6SXNzdWUxMzkwOTYyMjU=", "number": 34, "title": "natsort with ns.LOCALE error: ValueError: character U+110000 is not in range [U+0000; U+10ffff]", "user": {"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302834, "node_id": "MDU6TGFiZWw0MzAyODM0", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-03-07T21:15:18Z", "updated_at": "2020-08-02T20:52:27Z", "closed_at": "2020-08-02T20:52:27Z", "author_association": "OWNER", "active_lock_reason": null, "body": "This isn't really a bug in `natsort`, but rather with the UTF-8 implementation on BSD systems (like OSX).  Below are some references:\r\n- http://stackoverflow.com/questions/33459384/unicode-character-not-in-range-when-calling-locale-strxfrm: Explanation of issue\r\n- http://bugs.python.org/issue23195: A related python bug report\r\n- #21 : `natsort` issue describing how to install the fix\r\n- http://natsort.readthedocs.io/en/master/locale_issues.html#the-locale-module-from-the-stdlib-has-issues: `natsort` documentation explaining the issue\r\n\r\nI am creating this issue and leaving it open so that users that see this problem know that they need to use [PyICU](https://pypi.python.org/pypi/PyICU) to solve this problem if they see it, and have easy access to all the relevant documentation.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/31", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/31/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/31/events", "html_url": "https://github.com/SethMMorton/natsort/issues/31", "id": 91434380, "node_id": "MDU6SXNzdWU5MTQzNDM4MA==", "number": 31, "title": "Missing file in running tests in natsort-4.0.1", "user": {"login": "idella", "id": 1655078, "node_id": "MDQ6VXNlcjE2NTUwNzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1655078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idella", "html_url": "https://github.com/idella", "followers_url": "https://api.github.com/users/idella/followers", "following_url": "https://api.github.com/users/idella/following{/other_user}", "gists_url": "https://api.github.com/users/idella/gists{/gist_id}", "starred_url": "https://api.github.com/users/idella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idella/subscriptions", "organizations_url": "https://api.github.com/users/idella/orgs", "repos_url": "https://api.github.com/users/idella/repos", "events_url": "https://api.github.com/users/idella/events{/privacy}", "received_events_url": "https://api.github.com/users/idella/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302839, "node_id": "MDU6TGFiZWw0MzAyODM5", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-27T08:48:03Z", "updated_at": "2015-06-30T06:41:17Z", "closed_at": "2015-06-29T22:52:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "The tarball is missing the file test_natsort/slow_splitters.py. It is missing from MANIFEST.in.\nAlso missing is folder compat and its contents.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/30", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/30/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/30/events", "html_url": "https://github.com/SethMMorton/natsort/issues/30", "id": 90954257, "node_id": "MDU6SXNzdWU5MDk1NDI1Nw==", "number": 30, "title": "pip install'ing v4.0.2 doesn't bring the compat directory", "user": {"login": "OdyX", "id": 417403, "node_id": "MDQ6VXNlcjQxNzQwMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/417403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OdyX", "html_url": "https://github.com/OdyX", "followers_url": "https://api.github.com/users/OdyX/followers", "following_url": "https://api.github.com/users/OdyX/following{/other_user}", "gists_url": "https://api.github.com/users/OdyX/gists{/gist_id}", "starred_url": "https://api.github.com/users/OdyX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OdyX/subscriptions", "organizations_url": "https://api.github.com/users/OdyX/orgs", "repos_url": "https://api.github.com/users/OdyX/repos", "events_url": "https://api.github.com/users/OdyX/events{/privacy}", "received_events_url": "https://api.github.com/users/OdyX/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302834, "node_id": "MDU6TGFiZWw0MzAyODM0", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-06-25T12:49:39Z", "updated_at": "2015-07-13T19:37:20Z", "closed_at": "2015-07-13T19:37:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "natsort v4.0.2 installed with pip doesn't come with the compat directory, which then breaks running natsort:\n\n```\n$ mkdir natsort-test; virtualenv natsort-test/; natsort-test/bin/pip install natsort==4.0.2 ; ls -lah natsort-test/lib/python2.7/site-packages/natsort/\nRunning virtualenv with interpreter /usr/bin/python2\nNew python executable in natsort-test/bin/python2\nAlso creating executable in natsort-test/bin/python\nInstalling setuptools, pip...done.\nDownloading/unpacking natsort==4.0.2\n  Downloading natsort-4.0.2-py2.py3-none-any.whl\nInstalling collected packages: natsort\nSuccessfully installed natsort\nCleaning up...\ntotal 160K\ndrwxr-xr-x  2 diidier diidier  360 jun 25 14:49 .\ndrwxr-xr-x 10 diidier diidier  240 jun 25 14:49 ..\n-rw-r--r--  1 diidier diidier  772 jun 25 14:49 __init__.py\n-rw-r--r--  1 diidier diidier 1.1K jun 25 14:49 __init__.pyc\n-rw-r--r--  1 diidier diidier 2.4K jun 25 14:49 locale_help.py\n-rw-r--r--  1 diidier diidier 2.5K jun 25 14:49 locale_help.pyc\n-rw-r--r--  1 diidier diidier 8.2K jun 25 14:49 __main__.py\n-rw-r--r--  1 diidier diidier 8.0K jun 25 14:49 __main__.pyc\n-rw-r--r--  1 diidier diidier  21K jun 25 14:49 natsort.py\n-rw-r--r--  1 diidier diidier  22K jun 25 14:49 natsort.pyc\n-rw-r--r--  1 diidier diidier 7.3K jun 25 14:49 ns_enum.py\n-rw-r--r--  1 diidier diidier 7.5K jun 25 14:49 ns_enum.pyc\n-rw-r--r--  1 diidier diidier  12K jun 25 14:49 unicode_numbers.py\n-rw-r--r--  1 diidier diidier  11K jun 25 14:49 unicode_numbers.pyc\n-rw-r--r--  1 diidier diidier  15K jun 25 14:49 utils.py\n-rw-r--r--  1 diidier diidier  11K jun 25 14:49 utils.pyc\n-rw-r--r--  1 diidier diidier  150 jun 25 14:49 _version.py\n-rw-r--r--  1 diidier diidier  322 jun 25 14:49 _version.pyc\n\n$ ./natsort-test/bin/natsort\nTraceback (most recent call last):\n  File \"./natsort-test/bin/natsort\", line 7, in <module>\n    from natsort.__main__ import main\n  File \"/tmp/natsort-test/local/lib/python2.7/site-packages/natsort/__init__.py\", line 10, in <module>\n    from natsort.natsort import (\n  File \"/tmp/natsort-test/local/lib/python2.7/site-packages/natsort/natsort.py\", line 28, in <module>\n    from natsort.compat.py23 import u_format\nImportError: No module named compat.py23\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/28", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/28/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/28/events", "html_url": "https://github.com/SethMMorton/natsort/issues/28", "id": 89257803, "node_id": "MDU6SXNzdWU4OTI1NzgwMw==", "number": 28, "title": "Python 3 unorderable types with natsort_keygen", "user": {"login": "rendaw", "id": 2284359, "node_id": "MDQ6VXNlcjIyODQzNTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2284359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rendaw", "html_url": "https://github.com/rendaw", "followers_url": "https://api.github.com/users/rendaw/followers", "following_url": "https://api.github.com/users/rendaw/following{/other_user}", "gists_url": "https://api.github.com/users/rendaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/rendaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rendaw/subscriptions", "organizations_url": "https://api.github.com/users/rendaw/orgs", "repos_url": "https://api.github.com/users/rendaw/repos", "events_url": "https://api.github.com/users/rendaw/events{/privacy}", "received_events_url": "https://api.github.com/users/rendaw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302838, "node_id": "MDU6TGFiZWw0MzAyODM4", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-06-18T10:38:53Z", "updated_at": "2016-05-08T08:33:39Z", "closed_at": "2015-06-18T10:43:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "This seems to be changed behavior since python 2.\n\n``` python\n>>> x = natsort.natsort_keygen()\n>>> x('a.1.1.b')\n('a', 0.1, 0.1, '.b')\n>>> x('a.1.b')\n('a', 0.1, '.b')\n>>> x('a.1.1.b') < x('a.1.b')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: unorderable types: float() < str()\n```\n\n`natsort.natsorted` works fine, but sorted with `key=x` (same `x` as above) gives `unorderable types`.\n\nI'm implementing a custom multilevel sort so I don't think I can use `natsort.natsorted`, unfortunately.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/27", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/27/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/27/events", "html_url": "https://github.com/SethMMorton/natsort/issues/27", "id": 79249588, "node_id": "MDU6SXNzdWU3OTI0OTU4OA==", "number": 27, "title": "Handle NaN in input when sorting", "user": {"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302836, "node_id": "MDU6TGFiZWw0MzAyODM2", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/feature", "name": "feature", "color": "1d76db", "default": false, "description": null}, {"id": 372710731, "node_id": "MDU6TGFiZWwzNzI3MTA3MzE=", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/usability", "name": "usability", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-22T02:33:54Z", "updated_at": "2016-05-08T08:45:38Z", "closed_at": "2015-06-05T02:51:21Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Currently, natsort does not detect NaN in input when sorting, and as a result the output can be unexpected (see SethMMorton/fastnumbers#2).  `_natsort_key` should be updated to detect NaN, and then either raise a `ValueError`, or do something like replace it with -INF or +INF depending on a user's choice.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/26", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/26/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/26/events", "html_url": "https://github.com/SethMMorton/natsort/issues/26", "id": 66752462, "node_id": "MDU6SXNzdWU2Njc1MjQ2Mg==", "number": 26, "title": "Get ordinal sorting behavior with LOCAL enabled WRT first letter only.", "user": {"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302836, "node_id": "MDU6TGFiZWw0MzAyODM2", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/feature", "name": "feature", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-07T02:17:30Z", "updated_at": "2015-04-07T19:40:41Z", "closed_at": "2015-04-07T06:36:56Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The request is to get all capitalized words sorted before non-capitalized words.  This request came from issue #23 (see tail end of the conversation), and was a request of @tallforasmurf.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/23", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/23/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/23/events", "html_url": "https://github.com/SethMMorton/natsort/issues/23", "id": 66199329, "node_id": "MDU6SXNzdWU2NjE5OTMyOQ==", "number": 23, "title": "Modify sort order of upper- and lower-case letters with ns.LOCALE?", "user": {"login": "tallforasmurf", "id": 1137018, "node_id": "MDQ6VXNlcjExMzcwMTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1137018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tallforasmurf", "html_url": "https://github.com/tallforasmurf", "followers_url": "https://api.github.com/users/tallforasmurf/followers", "following_url": "https://api.github.com/users/tallforasmurf/following{/other_user}", "gists_url": "https://api.github.com/users/tallforasmurf/gists{/gist_id}", "starred_url": "https://api.github.com/users/tallforasmurf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tallforasmurf/subscriptions", "organizations_url": "https://api.github.com/users/tallforasmurf/orgs", "repos_url": "https://api.github.com/users/tallforasmurf/repos", "events_url": "https://api.github.com/users/tallforasmurf/events{/privacy}", "received_events_url": "https://api.github.com/users/tallforasmurf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302838, "node_id": "MDU6TGFiZWw0MzAyODM4", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2015-04-03T17:59:34Z", "updated_at": "2017-01-20T05:02:13Z", "closed_at": "2015-04-03T19:09:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here's another I just found. However, using TYPESAFE corrects it.\n\n```\nkfunc = natsort.natsort_keygen( alg=( natsort.ns.LOCALE ) )\nsorted( [ '10-12','10th'], key=kfunc)\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <fragment>\n    builtins.TypeError: unorderable types: bytes() < float()\nksafe = natsort.natsort_keygen(alg=(natsort.ns.LOCALE|natsort.ns.TYPESAFE))\nsorted( [ '10-12','10th'], key=ksafe)\n['10-12', '10th']\n```\n\nI am slightly concerned because I noted a comment in the code about TYPESAFE being in some way expensive to execute and I am sorting quite large tables.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/22", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/22/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/22/events", "html_url": "https://github.com/SethMMorton/natsort/issues/22", "id": 65999847, "node_id": "MDU6SXNzdWU2NTk5OTg0Nw==", "number": 22, "title": "Python3 \"unorderable types\" error with LOCALE and PyICU installed.", "user": {"login": "tallforasmurf", "id": 1137018, "node_id": "MDQ6VXNlcjExMzcwMTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1137018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tallforasmurf", "html_url": "https://github.com/tallforasmurf", "followers_url": "https://api.github.com/users/tallforasmurf/followers", "following_url": "https://api.github.com/users/tallforasmurf/following{/other_user}", "gists_url": "https://api.github.com/users/tallforasmurf/gists{/gist_id}", "starred_url": "https://api.github.com/users/tallforasmurf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tallforasmurf/subscriptions", "organizations_url": "https://api.github.com/users/tallforasmurf/orgs", "repos_url": "https://api.github.com/users/tallforasmurf/repos", "events_url": "https://api.github.com/users/tallforasmurf/events{/privacy}", "received_events_url": "https://api.github.com/users/tallforasmurf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302834, "node_id": "MDU6TGFiZWw0MzAyODM0", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-04-02T19:57:19Z", "updated_at": "2016-05-08T08:28:00Z", "closed_at": "2015-04-03T04:19:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "The test case is quite simple,\n\n```\nkf = natsort.natsort_keygen( alg = (natsort.ns.LOCALE | natsort.ns.TYPESAFE ) )\nll = ['0','\u00c1','2','Z']\nsorted(ll,key=kf)\nTraceback (most recent call last):\n    File \"<string>\", line 1, in <fragment>\n    builtins.TypeError: unorderable types: bytes() < str()\n```\n\nThe issue seems to be that when the input key is numeric e.g. '2', the output of kf is ('',2), where the first element is the null string. When the input key is a letter, the output is e.g. `(b'*\\x05 \\x01E\\x88\\x01\\x06\\x00',)` where the first element is bytes.\n\nFrankly I don't understand how kf can return a tuple in any case, since docs for sorted() (and for SortedDict, which is where I actually hit this) seem to imply it should return a scalar item. But whatever -- if in the case of a number it returned `b''` instead of just `''` I think all would be well. I believe this would be line 135 of utils.py?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/21", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/21/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/21/events", "html_url": "https://github.com/SethMMorton/natsort/issues/21", "id": 63280305, "node_id": "MDU6SXNzdWU2MzI4MDMwNQ==", "number": 21, "title": "How to get accented chars to group with their unaccented versions?", "user": {"login": "tallforasmurf", "id": 1137018, "node_id": "MDQ6VXNlcjExMzcwMTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1137018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tallforasmurf", "html_url": "https://github.com/tallforasmurf", "followers_url": "https://api.github.com/users/tallforasmurf/followers", "following_url": "https://api.github.com/users/tallforasmurf/following{/other_user}", "gists_url": "https://api.github.com/users/tallforasmurf/gists{/gist_id}", "starred_url": "https://api.github.com/users/tallforasmurf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tallforasmurf/subscriptions", "organizations_url": "https://api.github.com/users/tallforasmurf/orgs", "repos_url": "https://api.github.com/users/tallforasmurf/repos", "events_url": "https://api.github.com/users/tallforasmurf/events{/privacy}", "received_events_url": "https://api.github.com/users/tallforasmurf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302838, "node_id": "MDU6TGFiZWw0MzAyODM4", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-03-20T18:37:21Z", "updated_at": "2015-03-25T01:14:04Z", "closed_at": "2015-03-22T18:37:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am writing a PyQt app and am unhappy with the performance of their table sorting. However it does do \"locale-aware\" sorting in what I believe to be the correct way. Given this word list:\n\n```\nwords = ['apple', '\u00e5pple', 'Apple', '\u00c4pple', 'Epple', '\u00c8pple', '\u00e9pple', 'epple']\n```\n\nand not ignoring case, Qt sorts in the order: apple, Apple, \u00e5pple, \u00c4pple, epple, Epple, \u00e9pple, \u00c8pple\n\nThat is, all forms of A are grouped, then all forms of E. When I do the same sort in native Python using natsort:\n\n```\nif locale.setlocale(locale.LC_ALL) == 'C' :\n    locale.setlocale(locale.LC_ALL,'en_US.UTF-8')\nkey_func_L = natsort.natsort_keygen( alg = natsort.ns.LOCALE )\nprint( sorted( words, key=key_func_L )  )\n```\n\nThe resulting order is 'Apple', 'Epple', 'apple', 'epple', '\u00c4pple', '\u00c8pple', '\u00e5pple', '\u00e9pple'\n\nThat is, all accented forms sort higher than un-accented forms. I am not so concerned that in the one, lowercase is first and the other, uppercase is first. I am concerned that in a long table, words starting with \u00e9 may be hundreds of rows removed from words starting with e.\n\nI am working in Python 3.4, PyQt5.4, Mac OS 10.10. Changing the locale to fr_FR and de_DE didn't make any difference.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/20", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/20/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/20/events", "html_url": "https://github.com/SethMMorton/natsort/issues/20", "id": 56895732, "node_id": "MDU6SXNzdWU1Njg5NTczMg==", "number": 20, "title": "Make sorting by unsigned integers the natsorted default?", "user": {"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302836, "node_id": "MDU6TGFiZWw0MzAyODM2", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/feature", "name": "feature", "color": "1d76db", "default": false, "description": null}, {"id": 372710731, "node_id": "MDU6TGFiZWwzNzI3MTA3MzE=", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/usability", "name": "usability", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-07T03:39:26Z", "updated_at": "2016-05-08T08:45:37Z", "closed_at": "2015-05-18T02:36:38Z", "author_association": "OWNER", "active_lock_reason": null, "body": "I am making the proposal to change the default sorting algorithm for `natsorted` starting with version 4.0.0.  Currently, `natsorted` looks for any string of numbers that are valid input to the `float` function in a greedy way (for example, `\"number-1.402e10hello\"` would be split into `['number', -14020000000.0, 'hello']`).  \n\nI have observed that this does not pass the \"rule of least astonishment\" for most users because it is easy to not recognize that `'-'` and `'.'` are actually valid parts of a number or that the algorithm would be accounting for signs and decimals, and thus users are surprised to see `natsorted` return results where `\"version2.10\" < \"version2.2\"` or `\"version-2.0\" < \"version-1.0\"`.  I have observed this in [this Stack Overflow Question](http://stackoverflow.com/questions/24045348/sort-set-of-numbers-in-the-form-xx-yy-in-python), [this issue reported to natsort](https://github.com/SethMMorton/natsort/issues/19), and [this python module that was created because `natsorted` did not meet their expectations and instead of filing a bug report attacked natsort in its documentation](https://github.com/xolox/python-naturalsort) (the documentation was toned down in the 3rd commit).\n\nMy proposal would be to make the behavior of the current function `versorted` be the default behavior for `natsorted`, and make the current `natsorted` behavior belong to a new function (possibly called `realnatsorted` but I am open to suggestions).  `versorted` would remain for backwards compatibility.  A `SIGNED` attribute to the `ns` algorithm chooser class would have to be added.  This would mean that `natsorted` would by default return results where `\"version2.2\" < \"version2.10\"` and `\"version-1.0\" < \"version-2.0\"` which I believe would meet most user's expectations.\n\nI am polling the community to find out if I am correct in my assumption that people would expect `natsorted` to only look for digits and not `'-'` and `'.'` from a string, and if it would be worth it to modify the `natsorted` default behavior to provide less astonishment without breaking existing code too severely.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/19", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/19/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/19/events", "html_url": "https://github.com/SethMMorton/natsort/issues/19", "id": 56509264, "node_id": "MDU6SXNzdWU1NjUwOTI2NA==", "number": 19, "title": "Wrong sorting order with grouped numbers", "user": {"login": "exostor", "id": 3626061, "node_id": "MDQ6VXNlcjM2MjYwNjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3626061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/exostor", "html_url": "https://github.com/exostor", "followers_url": "https://api.github.com/users/exostor/followers", "following_url": "https://api.github.com/users/exostor/following{/other_user}", "gists_url": "https://api.github.com/users/exostor/gists{/gist_id}", "starred_url": "https://api.github.com/users/exostor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/exostor/subscriptions", "organizations_url": "https://api.github.com/users/exostor/orgs", "repos_url": "https://api.github.com/users/exostor/repos", "events_url": "https://api.github.com/users/exostor/events{/privacy}", "received_events_url": "https://api.github.com/users/exostor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302838, "node_id": "MDU6TGFiZWw0MzAyODM4", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-02-04T10:30:29Z", "updated_at": "2015-06-05T02:53:20Z", "closed_at": "2015-02-05T15:10:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "natsort 3.5.2, python 3.2.3\n\n```\n>>> l=[\"li1-1\", \"li1-2\", \"li1-3\", \"li1-10\", \"li2-11\", \"li10-1\", \"li2-11b\", \"li2-11a\", \"li2-1b11\", \"li2-1b2\"]\n>>> natsort.natsorted(l)\n['li1-10', 'li1-3', 'li1-2', 'li1-1', 'li2-11', 'li2-11a', 'li2-11b', 'li2-1b2', 'li2-1b11', 'li10-1']\n```\n\nBut I expected the result:\n\n```\n['li1-1', 'li1-2', 'li1-3', 'li1-10', 'li2-1b2', 'li2-1b11', 'li2-11', 'li2-11a', 'li2-11b', 'li10-1']\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/16", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/16/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/16/events", "html_url": "https://github.com/SethMMorton/natsort/issues/16", "id": 52362630, "node_id": "MDU6SXNzdWU1MjM2MjYzMA==", "number": 16, "title": "detect Path objects in argument iterable and auto-use ns.P", "user": {"login": "anntzer", "id": 1322974, "node_id": "MDQ6VXNlcjEzMjI5NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anntzer", "html_url": "https://github.com/anntzer", "followers_url": "https://api.github.com/users/anntzer/followers", "following_url": "https://api.github.com/users/anntzer/following{/other_user}", "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions", "organizations_url": "https://api.github.com/users/anntzer/orgs", "repos_url": "https://api.github.com/users/anntzer/repos", "events_url": "https://api.github.com/users/anntzer/events{/privacy}", "received_events_url": "https://api.github.com/users/anntzer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302836, "node_id": "MDU6TGFiZWw0MzAyODM2", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/feature", "name": "feature", "color": "1d76db", "default": false, "description": null}, {"id": 372710731, "node_id": "MDU6TGFiZWwzNzI3MTA3MzE=", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/usability", "name": "usability", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-12-18T13:17:58Z", "updated_at": "2016-05-08T08:45:37Z", "closed_at": "2015-01-14T03:07:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "It'd be nice if natsort autodetects whether its arguments are all Path objects (from the new stdlib's `pathlib`), converted them to strs, and turned on `ns.P` automatically (and possibly `ns.IC` on Windows too).  I don't have a strong opinion of what to do if some arguments are Paths and others are not (I guess this should fail with TypeError since they are not technically comparable).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/15", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/15/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/15/events", "html_url": "https://github.com/SethMMorton/natsort/issues/15", "id": 43927940, "node_id": "MDU6SXNzdWU0MzkyNzk0MA==", "number": 15, "title": "Exception if key is a tuple or other value with ns.IC", "user": {"login": "cristianocoelho", "id": 8058669, "node_id": "MDQ6VXNlcjgwNTg2Njk=", "avatar_url": "https://avatars2.githubusercontent.com/u/8058669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cristianocoelho", "html_url": "https://github.com/cristianocoelho", "followers_url": "https://api.github.com/users/cristianocoelho/followers", "following_url": "https://api.github.com/users/cristianocoelho/following{/other_user}", "gists_url": "https://api.github.com/users/cristianocoelho/gists{/gist_id}", "starred_url": "https://api.github.com/users/cristianocoelho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cristianocoelho/subscriptions", "organizations_url": "https://api.github.com/users/cristianocoelho/orgs", "repos_url": "https://api.github.com/users/cristianocoelho/repos", "events_url": "https://api.github.com/users/cristianocoelho/events{/privacy}", "received_events_url": "https://api.github.com/users/cristianocoelho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302834, "node_id": "MDU6TGFiZWw0MzAyODM0", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-09-25T14:52:01Z", "updated_at": "2015-02-05T02:32:00Z", "closed_at": "2014-09-26T04:18:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "list.sort(key = natsort_keygen(key=lambdaKey, alg=ns.U|ns.N|ns.IC))\n\nwhere lambdaKey = lambda e: (e['val1'], e['val2']). Seems like you call .lower() somewhere with the key assuming it is always one string value. But the key can be other types since you allow to pass in a lambda.\nInterestingly it works fine with ns.G\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/14", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/14/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/14/events", "html_url": "https://github.com/SethMMorton/natsort/issues/14", "id": 40314689, "node_id": "MDU6SXNzdWU0MDMxNDY4OQ==", "number": 14, "title": "Request for option to modify case-sensitivity when sorting", "user": {"login": "cristianocoelho", "id": 8058669, "node_id": "MDQ6VXNlcjgwNTg2Njk=", "avatar_url": "https://avatars2.githubusercontent.com/u/8058669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cristianocoelho", "html_url": "https://github.com/cristianocoelho", "followers_url": "https://api.github.com/users/cristianocoelho/followers", "following_url": "https://api.github.com/users/cristianocoelho/following{/other_user}", "gists_url": "https://api.github.com/users/cristianocoelho/gists{/gist_id}", "starred_url": "https://api.github.com/users/cristianocoelho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cristianocoelho/subscriptions", "organizations_url": "https://api.github.com/users/cristianocoelho/orgs", "repos_url": "https://api.github.com/users/cristianocoelho/repos", "events_url": "https://api.github.com/users/cristianocoelho/events{/privacy}", "received_events_url": "https://api.github.com/users/cristianocoelho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302836, "node_id": "MDU6TGFiZWw0MzAyODM2", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/feature", "name": "feature", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2014-08-15T00:52:04Z", "updated_at": "2014-09-03T01:58:20Z", "closed_at": "2014-09-03T01:37:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, hopefully this is in the right place...\n\nIt seems that the library behaves weirdly with string case. For example, A a B b will be sorted as A B a b rather than A a B b, not sure if this is intended or not, but it differs from jquery natural sort so it gives some problems.\nAn easy fix is to use a lambda which casts the string to lower case but I'm wondering if it is possible to have a setting to change this behaviour.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/13", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/13/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/13/events", "html_url": "https://github.com/SethMMorton/natsort/issues/13", "id": 38945520, "node_id": "MDU6SXNzdWUzODk0NTUyMA==", "number": 13, "title": "Enhancement to the version sorting (versorted) output", "user": {"login": "tdruez", "id": 489057, "node_id": "MDQ6VXNlcjQ4OTA1Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/489057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tdruez", "html_url": "https://github.com/tdruez", "followers_url": "https://api.github.com/users/tdruez/followers", "following_url": "https://api.github.com/users/tdruez/following{/other_user}", "gists_url": "https://api.github.com/users/tdruez/gists{/gist_id}", "starred_url": "https://api.github.com/users/tdruez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tdruez/subscriptions", "organizations_url": "https://api.github.com/users/tdruez/orgs", "repos_url": "https://api.github.com/users/tdruez/repos", "events_url": "https://api.github.com/users/tdruez/events{/privacy}", "received_events_url": "https://api.github.com/users/tdruez/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302838, "node_id": "MDU6TGFiZWw0MzAyODM4", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-07-28T23:51:37Z", "updated_at": "2018-07-08T00:21:11Z", "closed_at": "2014-07-29T21:58:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Seth, thanks for the great work on this lib!\nI'd like your opinion on something regarding the version sorting.\n\nFrom https://github.com/SethMMorton/natsort/blob/master/test_natsort/test_natsort.py#L211\n\n``` python\n>>>  a = ['1.9.9a', '1.11', '1.9.9b', '1.11.4', '1.10.1']\n```\n\nLet's add the `'1.11a'` version to the list.\n\n``` python\n>>> a = ['1.9.9a', '1.11', '1.9.9b', '1.11.4', '1.10.1']\n>>> natsorted(a)\n['1.9.9a', '1.9.9b', '1.10.1', '1.11', '1.11.4', '1.11a']\n```\n\nI think the '1.11a' should be sorted before the '1.11.4'. \nWhat's your take on this? Thanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/12", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/12/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/12/events", "html_url": "https://github.com/SethMMorton/natsort/issues/12", "id": 37497972, "node_id": "MDU6SXNzdWUzNzQ5Nzk3Mg==", "number": 12, "title": "versorted on list of tuples", "user": {"login": "sidhanti", "id": 7987516, "node_id": "MDQ6VXNlcjc5ODc1MTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7987516?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sidhanti", "html_url": "https://github.com/sidhanti", "followers_url": "https://api.github.com/users/sidhanti/followers", "following_url": "https://api.github.com/users/sidhanti/following{/other_user}", "gists_url": "https://api.github.com/users/sidhanti/gists{/gist_id}", "starred_url": "https://api.github.com/users/sidhanti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sidhanti/subscriptions", "organizations_url": "https://api.github.com/users/sidhanti/orgs", "repos_url": "https://api.github.com/users/sidhanti/repos", "events_url": "https://api.github.com/users/sidhanti/events{/privacy}", "received_events_url": "https://api.github.com/users/sidhanti/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302834, "node_id": "MDU6TGFiZWw0MzAyODM0", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2014-07-09T19:05:34Z", "updated_at": "2016-05-08T08:26:21Z", "closed_at": "2014-07-19T10:13:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI'm trying to sort using \"versorted\" in the natsort package.\nThe sorting works on a list but fails on a list of tuples.\n\nIs there an alternate way to accomplish the same ?\n\n```\n>>> from natsort import versorted\n\n>>> l = ['2.1.10 Rule', '2.1.1 Rule', '2.1.12 Rule', '2.1.13 Rule', '2.1.2 Rule', '2.1.3 Rule', '2.1.4 Rule', '2.1.4a Rule', '2.1.4b Rule', '2.1.4c Rule']*\n>>> versorted(l)\n['2.1.1 Rule', '2.1.2 Rule', '2.1.3 Rule', '2.1.4 Rule', '2.1.4a Rule', '2.1.4b Rule', '2.1.4c Rule', '2.1.10 Rule', '2.1.12 Rule', '2.1.13 Rule']\n\n>>> l = [('a', '2.1.10 Rule'), ('a', '2.1.1 Rule'), ('a', '2.1.12 Rule'), ('a', '2.1.13 Rule'), ('a', '2.1.2 Rule'), ('a', '2.1.3 Rule'), ('a', '2.1.4 Rule'), ('a', '2.1.4a Rule'), ('a', '2.1.4b Rule'), ('a', '2.1.4c Rule')]\n>>> versorted(l)\n[('a', '2.1.10 Rule'), ('a', '2.1.1 Rule'), ('a', '2.1.12 Rule'), ('a', '2.1.13 Rule'), ('a', '2.1.2 Rule'), ('a', '2.1.3 Rule'), ('a', '2.1.4 Rule'), ('a', '2.1.4a Rule'), ('a', '2.1.4b Rule'), ('a', '2.1.4c Rule')]\n\n```\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/11", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/11/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/11/events", "html_url": "https://github.com/SethMMorton/natsort/issues/11", "id": 36675554, "node_id": "MDU6SXNzdWUzNjY3NTU1NA==", "number": 11, "title": "Add a \"versorted\" method", "user": {"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302836, "node_id": "MDU6TGFiZWw0MzAyODM2", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/feature", "name": "feature", "color": "1d76db", "default": false, "description": null}, {"id": 372710731, "node_id": "MDU6TGFiZWwzNzI3MTA3MzE=", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/usability", "name": "usability", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2014-06-27T15:25:01Z", "updated_at": "2016-05-08T08:45:37Z", "closed_at": "2014-06-28T18:39:11Z", "author_association": "OWNER", "active_lock_reason": null, "body": "I want to make it more clear to users that in some cases, using `natsort` directly with the default `number_type` value can give unexpected results when sorting version numbers.  To achieve this, I would like to introduce a `versorted` function which will be a wrapper for `natsorted(..., number_type=None, signed=False, noexp=True)`.  This has the added benefit of being less typing for the common use case of sorting version numbers.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/10", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/10/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/10/events", "html_url": "https://github.com/SethMMorton/natsort/issues/10", "id": 36674991, "node_id": "MDU6SXNzdWUzNjY3NDk5MQ==", "number": 10, "title": "Migrate doctests to unit tests (pyest)", "user": {"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302836, "node_id": "MDU6TGFiZWw0MzAyODM2", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/feature", "name": "feature", "color": "1d76db", "default": false, "description": null}, {"id": 362259651, "node_id": "MDU6TGFiZWwzNjIyNTk2NTE=", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/maintainability", "name": "maintainability", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2014-06-27T15:19:31Z", "updated_at": "2016-05-08T08:45:49Z", "closed_at": "2014-06-28T17:34:01Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Currently, all of the testing for `natsort` is implemented as doctests.  This was fine when `natsort` was just a single file with two functions, but since it has grown with new functionality things have gotten out of hand.  I have also noticed that some doctests fail on python 2.6 because of the way it prints floating point numbers.\n\nThe doctests will be migrated to unit tests to use the pytest unit testing framework.  This will help make the documentation and the code more clear, as well as allow for more thorough testing.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/9", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/9/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/9/events", "html_url": "https://github.com/SethMMorton/natsort/issues/9", "id": 35228984, "node_id": "MDU6SXNzdWUzNTIyODk4NA==", "number": 9, "title": "Console script not installed when installing from wheel", "user": {"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 372710731, "node_id": "MDU6TGFiZWwzNzI3MTA3MzE=", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/usability", "name": "usability", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-06-08T05:40:50Z", "updated_at": "2016-05-08T08:45:37Z", "closed_at": "2014-06-21T03:58:55Z", "author_association": "OWNER", "active_lock_reason": null, "body": "When installed with pip, the natsort command line script is not installed.  \n\nThis has likely been the case for several versions, but since nobody has reported this it looks like no one is using this feature :(  It will be fixed in the next release.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/8", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/8/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/8/events", "html_url": "https://github.com/SethMMorton/natsort/issues/8", "id": 33011753, "node_id": "MDU6SXNzdWUzMzAxMTc1Mw==", "number": 8, "title": "Randomly fails to install from wheels on pypi", "user": {"login": "Kwpolska", "id": 327323, "node_id": "MDQ6VXNlcjMyNzMyMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/327323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kwpolska", "html_url": "https://github.com/Kwpolska", "followers_url": "https://api.github.com/users/Kwpolska/followers", "following_url": "https://api.github.com/users/Kwpolska/following{/other_user}", "gists_url": "https://api.github.com/users/Kwpolska/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kwpolska/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kwpolska/subscriptions", "organizations_url": "https://api.github.com/users/Kwpolska/orgs", "repos_url": "https://api.github.com/users/Kwpolska/repos", "events_url": "https://api.github.com/users/Kwpolska/events{/privacy}", "received_events_url": "https://api.github.com/users/Kwpolska/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302834, "node_id": "MDU6TGFiZWw0MzAyODM0", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 372710731, "node_id": "MDU6TGFiZWwzNzI3MTA3MzE=", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/usability", "name": "usability", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-05-07T18:32:30Z", "updated_at": "2016-05-08T08:45:37Z", "closed_at": "2014-05-08T13:02:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` pytb\nException information:\nTraceback (most recent call last):\n  File \"/home/travis/virtualenv/python2.6.9/lib/python2.6/site-packages/pip/basecommand.py\", line 122, in main\n    status = self.run(options, args)\n  File \"/home/travis/virtualenv/python2.6.9/lib/python2.6/site-packages/pip/commands/install.py\", line 283, in run\n    requirement_set.install(install_options, global_options, root=options.root_path)\n  File \"/home/travis/virtualenv/python2.6.9/lib/python2.6/site-packages/pip/req.py\", line 1435, in install\n    requirement.install(install_options, global_options, *args, **kwargs)\n  File \"/home/travis/virtualenv/python2.6.9/lib/python2.6/site-packages/pip/req.py\", line 669, in install\n    pip.wheel.check_compatibility(version, self.name)\n  File \"/home/travis/virtualenv/python2.6.9/lib/python2.6/site-packages/pip/wheel.py\", line 438, in check_compatibility\n    \"%s is in an unsupported or invalid wheel\" % name\nUnsupportedWheel: natsort is in an unsupported or invalid wheel\n```\n\nThat\u2019s what pip does, when trying to install natsort.  Though it\u2019s random: it sometimes happens and sometimes doesn\u2019t.  With random versions \u2014 2.6, 3.3 or 3.4.  I\u2019m running that on Travis CI.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/7", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/7/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/7/events", "html_url": "https://github.com/SethMMorton/natsort/issues/7", "id": 32989953, "node_id": "MDU6SXNzdWUzMjk4OTk1Mw==", "number": 7, "title": "TypeError when trying to sort a string of a number and a string", "user": {"login": "Kwpolska", "id": 327323, "node_id": "MDQ6VXNlcjMyNzMyMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/327323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kwpolska", "html_url": "https://github.com/Kwpolska", "followers_url": "https://api.github.com/users/Kwpolska/followers", "following_url": "https://api.github.com/users/Kwpolska/following{/other_user}", "gists_url": "https://api.github.com/users/Kwpolska/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kwpolska/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kwpolska/subscriptions", "organizations_url": "https://api.github.com/users/Kwpolska/orgs", "repos_url": "https://api.github.com/users/Kwpolska/repos", "events_url": "https://api.github.com/users/Kwpolska/events{/privacy}", "received_events_url": "https://api.github.com/users/Kwpolska/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302834, "node_id": "MDU6TGFiZWw0MzAyODM0", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 4302836, "node_id": "MDU6TGFiZWw0MzAyODM2", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/feature", "name": "feature", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2014-05-07T14:27:46Z", "updated_at": "2014-06-23T15:39:59Z", "closed_at": "2014-06-22T15:48:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python 3.3 and Python 3.4 fail to sort collections that contain strings that are also numbers:\n\n``` py\n>>> import natsort\n>>> natsort.natsorted(('a', '1'))\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/kwpolska/virtualenvs/nikola-py3/lib/python3.4/site-packages/natsort/natsort.py\", line 247, in natsorted\n    return sorted(seq, key=lambda x: natsort_key(key(x),\nTypeError: unorderable types: float() < str()\n```\n\nThis works just fine in Python 2.7.6.\n\nvia getnikola/nikola#1275 (cc @devurandom)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/5", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/5/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/5/events", "html_url": "https://github.com/SethMMorton/natsort/issues/5", "id": 28512449, "node_id": "MDU6SXNzdWUyODUxMjQ0OQ==", "number": 5, "title": "support for tuple/list as a key is missing", "user": {"login": "Fiedzia", "id": 240435, "node_id": "MDQ6VXNlcjI0MDQzNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/240435?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Fiedzia", "html_url": "https://github.com/Fiedzia", "followers_url": "https://api.github.com/users/Fiedzia/followers", "following_url": "https://api.github.com/users/Fiedzia/following{/other_user}", "gists_url": "https://api.github.com/users/Fiedzia/gists{/gist_id}", "starred_url": "https://api.github.com/users/Fiedzia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Fiedzia/subscriptions", "organizations_url": "https://api.github.com/users/Fiedzia/orgs", "repos_url": "https://api.github.com/users/Fiedzia/repos", "events_url": "https://api.github.com/users/Fiedzia/events{/privacy}", "received_events_url": "https://api.github.com/users/Fiedzia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302836, "node_id": "MDU6TGFiZWw0MzAyODM2", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/feature", "name": "feature", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-02-28T16:14:10Z", "updated_at": "2014-03-03T04:18:15Z", "closed_at": "2014-03-03T04:18:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "data = [{'s': 'a1'}, {'s': 'a2'},{'s': 'a10'}]\nnatsorted(data, key=lambda x: (x['s'],))\n\n> > > [{'s': 'a1'}, {'s': 'a10'}, {'s': 'a2'}]\n\nI'd expect a1, a2, a10 \n\n(its actually needed for more then one value in a list of course, but I want to keep example simple)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/4", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/4/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/4/events", "html_url": "https://github.com/SethMMorton/natsort/issues/4", "id": 21013467, "node_id": "MDU6SXNzdWUyMTAxMzQ2Nw==", "number": 4, "title": "'use_setuptools()' tries to download and install setuptools, even though I have it", "user": {"login": "jarondl", "id": 2776956, "node_id": "MDQ6VXNlcjI3NzY5NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/2776956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jarondl", "html_url": "https://github.com/jarondl", "followers_url": "https://api.github.com/users/jarondl/followers", "following_url": "https://api.github.com/users/jarondl/following{/other_user}", "gists_url": "https://api.github.com/users/jarondl/gists{/gist_id}", "starred_url": "https://api.github.com/users/jarondl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jarondl/subscriptions", "organizations_url": "https://api.github.com/users/jarondl/orgs", "repos_url": "https://api.github.com/users/jarondl/repos", "events_url": "https://api.github.com/users/jarondl/events{/privacy}", "received_events_url": "https://api.github.com/users/jarondl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302834, "node_id": "MDU6TGFiZWw0MzAyODM0", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-10-15T12:41:08Z", "updated_at": "2013-10-28T07:29:22Z", "closed_at": "2013-10-28T07:29:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I believe you should either remove the bundled `distribute_setup`, or upgrade it.\nSee also:  https://bitbucket.org/pypa/setuptools/issue/18/packages-that-use_setuptools-from-older\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/3", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/3/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/3/events", "html_url": "https://github.com/SethMMorton/natsort/issues/3", "id": 20796715, "node_id": "MDU6SXNzdWUyMDc5NjcxNQ==", "number": 3, "title": "\"New File\" appears after \"New File (1)\"", "user": {"login": "catmanjan", "id": 137350, "node_id": "MDQ6VXNlcjEzNzM1MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/137350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catmanjan", "html_url": "https://github.com/catmanjan", "followers_url": "https://api.github.com/users/catmanjan/followers", "following_url": "https://api.github.com/users/catmanjan/following{/other_user}", "gists_url": "https://api.github.com/users/catmanjan/gists{/gist_id}", "starred_url": "https://api.github.com/users/catmanjan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catmanjan/subscriptions", "organizations_url": "https://api.github.com/users/catmanjan/orgs", "repos_url": "https://api.github.com/users/catmanjan/repos", "events_url": "https://api.github.com/users/catmanjan/events{/privacy}", "received_events_url": "https://api.github.com/users/catmanjan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302836, "node_id": "MDU6TGFiZWw0MzAyODM2", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/feature", "name": "feature", "color": "1d76db", "default": false, "description": null}, {"id": 4302838, "node_id": "MDU6TGFiZWw0MzAyODM4", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "SethMMorton", "id": 1596189, "node_id": "MDQ6VXNlcjE1OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethMMorton", "html_url": "https://github.com/SethMMorton", "followers_url": "https://api.github.com/users/SethMMorton/followers", "following_url": "https://api.github.com/users/SethMMorton/following{/other_user}", "gists_url": "https://api.github.com/users/SethMMorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethMMorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethMMorton/subscriptions", "organizations_url": "https://api.github.com/users/SethMMorton/orgs", "repos_url": "https://api.github.com/users/SethMMorton/repos", "events_url": "https://api.github.com/users/SethMMorton/events{/privacy}", "received_events_url": "https://api.github.com/users/SethMMorton/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 17, "created_at": "2013-10-10T09:45:33Z", "updated_at": "2016-05-08T08:14:51Z", "closed_at": "2014-07-17T06:45:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure if there is a workaround for this, but when sorting path names the order does not conform to Window's order.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/2", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/2/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/2/events", "html_url": "https://github.com/SethMMorton/natsort/issues/2", "id": 18139956, "node_id": "MDU6SXNzdWUxODEzOTk1Ng==", "number": 2, "title": "Support unicode objects", "user": {"login": "emosenkis", "id": 1794126, "node_id": "MDQ6VXNlcjE3OTQxMjY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emosenkis", "html_url": "https://github.com/emosenkis", "followers_url": "https://api.github.com/users/emosenkis/followers", "following_url": "https://api.github.com/users/emosenkis/following{/other_user}", "gists_url": "https://api.github.com/users/emosenkis/gists{/gist_id}", "starred_url": "https://api.github.com/users/emosenkis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emosenkis/subscriptions", "organizations_url": "https://api.github.com/users/emosenkis/orgs", "repos_url": "https://api.github.com/users/emosenkis/repos", "events_url": "https://api.github.com/users/emosenkis/events{/privacy}", "received_events_url": "https://api.github.com/users/emosenkis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302834, "node_id": "MDU6TGFiZWw0MzAyODM0", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 4302836, "node_id": "MDU6TGFiZWw0MzAyODM2", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/feature", "name": "feature", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-08-16T03:31:02Z", "updated_at": "2014-05-08T03:15:47Z", "closed_at": "2013-08-16T11:09:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "natsort silently fails to do anything useful with unicode strings:\n\n```\n>>> natsort.natsort_key('AAAS 5A')\n('AAAS ', 5.0, 'A')\n>>> natsort.natsort_key(u'AAAS 5A')\n(u'AAAS 5A',)\n# should be (u'AAAS ', 5.0, u'A')\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SethMMorton/natsort/issues/1", "repository_url": "https://api.github.com/repos/SethMMorton/natsort", "labels_url": "https://api.github.com/repos/SethMMorton/natsort/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/SethMMorton/natsort/issues/1/comments", "events_url": "https://api.github.com/repos/SethMMorton/natsort/issues/1/events", "html_url": "https://github.com/SethMMorton/natsort/issues/1", "id": 15889230, "node_id": "MDU6SXNzdWUxNTg4OTIzMA==", "number": 1, "title": "Feature request: natsorted() should support the `key=` argument", "user": {"login": "pwaller", "id": 438648, "node_id": "MDQ6VXNlcjQzODY0OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/438648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pwaller", "html_url": "https://github.com/pwaller", "followers_url": "https://api.github.com/users/pwaller/followers", "following_url": "https://api.github.com/users/pwaller/following{/other_user}", "gists_url": "https://api.github.com/users/pwaller/gists{/gist_id}", "starred_url": "https://api.github.com/users/pwaller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pwaller/subscriptions", "organizations_url": "https://api.github.com/users/pwaller/orgs", "repos_url": "https://api.github.com/users/pwaller/repos", "events_url": "https://api.github.com/users/pwaller/events{/privacy}", "received_events_url": "https://api.github.com/users/pwaller/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4302836, "node_id": "MDU6TGFiZWw0MzAyODM2", "url": "https://api.github.com/repos/SethMMorton/natsort/labels/feature", "name": "feature", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-06-22T20:16:43Z", "updated_at": "2013-10-11T07:00:32Z", "closed_at": "2013-06-26T06:02:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "The first thing I tried to do was to sort a list of objects by their name.\n\n``` python\nx = natsorted(y, key=lambda o: o.name)\n```\n\nI think this would be a useful addition. The only change that's needed is that `natsorted` should pass `key=lambda o: natsorted(key(o))` to `sorted`.\n", "performed_via_github_app": null, "score": 1.0}]}