{"total_count": 165, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/229", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/229/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/229/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/229", "id": 610274260, "node_id": "MDU6SXNzdWU2MTAyNzQyNjA=", "number": 229, "title": "double start() doubles prefix and suffix", "user": {"login": "JimWinters", "id": 11140233, "node_id": "MDQ6VXNlcjExMTQwMjMz", "avatar_url": "https://avatars2.githubusercontent.com/u/11140233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JimWinters", "html_url": "https://github.com/JimWinters", "followers_url": "https://api.github.com/users/JimWinters/followers", "following_url": "https://api.github.com/users/JimWinters/following{/other_user}", "gists_url": "https://api.github.com/users/JimWinters/gists{/gist_id}", "starred_url": "https://api.github.com/users/JimWinters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JimWinters/subscriptions", "organizations_url": "https://api.github.com/users/JimWinters/orgs", "repos_url": "https://api.github.com/users/JimWinters/repos", "events_url": "https://api.github.com/users/JimWinters/events{/privacy}", "received_events_url": "https://api.github.com/users/JimWinters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-30T17:55:04Z", "updated_at": "2020-05-01T21:30:55Z", "closed_at": "2020-05-01T18:34:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nI was getting my suffix twice.  Some considerable wondering and debugging eventually revealed that I was calling start() on a progress bar twice before actually using the progress bar.  (I didn't notice, because the calls were in separate sections of code.)  Removing the extra start() solved my problem.\r\n\r\nIt is unclear to me whether it might be desirable to call start() multiple times in some applications.  For my application, it is not desirable, so this was a bug in my code.  In any case, doubling the prefix and suffix is probably not the intended outcome.  :-)\r\n\r\n#### Code\r\n\r\n```python\r\n#!/usr/bin/python3\r\n\r\nimport progressbar\r\nimport sys\r\nimport time\r\n\r\ndef basic_widget_example():\r\n    prefix = \"beg \"\r\n    suffix = \" end\"\r\n    widgets = [progressbar.Percentage()]\r\n    bar = progressbar.ProgressBar(widgets=widgets, max_value=10,\r\n                                  prefix=prefix, suffix=suffix).start()\r\n    bar.start()                 # My bug.\r\n    for i in range(10):\r\n        # do something\r\n        time.sleep(0.1)\r\n        bar.update(i + 1)\r\n    bar.finish()\r\n\r\nif __name__ == '__main__':\r\n    basic_widget_example()\r\n```\r\n\r\n#### Versions\r\n\r\n- Python version:\r\n\r\n```\r\n $ python3\r\nPython 3.5.2 (default, Apr 16 2020, 17:47:17) \r\n[GCC 5.4.0 20160609] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import sys; print(sys.version)\r\n3.5.2 (default, Apr 16 2020, 17:47:17) \r\n[GCC 5.4.0 20160609]\r\n```\r\n\r\n- Python distribution/environment: CPython\r\n\r\n- Operating System: Linux Mint 18.3\r\n\r\n- Package version: 3.51.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/228", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/228/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/228/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/228", "id": 607749824, "node_id": "MDU6SXNzdWU2MDc3NDk4MjQ=", "number": 228, "title": "Example format_custom_text does not update eggs", "user": {"login": "JimWinters", "id": 11140233, "node_id": "MDQ6VXNlcjExMTQwMjMz", "avatar_url": "https://avatars2.githubusercontent.com/u/11140233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JimWinters", "html_url": "https://github.com/JimWinters", "followers_url": "https://api.github.com/users/JimWinters/followers", "following_url": "https://api.github.com/users/JimWinters/following{/other_user}", "gists_url": "https://api.github.com/users/JimWinters/gists{/gist_id}", "starred_url": "https://api.github.com/users/JimWinters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JimWinters/subscriptions", "organizations_url": "https://api.github.com/users/JimWinters/orgs", "repos_url": "https://api.github.com/users/JimWinters/repos", "events_url": "https://api.github.com/users/JimWinters/events{/privacy}", "received_events_url": "https://api.github.com/users/JimWinters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-27T18:15:01Z", "updated_at": "2020-04-30T17:12:10Z", "closed_at": "2020-04-29T10:15:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nIn the project file examples.py, in function format_custom_text, it seems that the code is changing the variable \"eggs\", with \"format_custom_text.update_mapping(eggs=i*2)\", but the value displayed in the progress bar never changes from the original value, \"3\".\r\n\r\nThank you for a very nice package!\r\n\r\nFormatCustomText looked like just what I needed for my application, but the output wasn't showing changes to my variables.  After struggling for a few days to figure out what was wrong with my code, I went back and ran the example again and noticed it has the same problem.\r\n\r\nI worked around this problem by basing my code on examples.py: user_variables instead.\r\n\r\n#### Code\r\n\r\npython3 ./examples.py format_custom_text\r\n\r\n#### Versions\r\n\r\n- Python version:\r\n\r\n $ python3\r\nPython 3.5.2 (default, Apr 16 2020, 17:47:17) \r\n[GCC 5.4.0 20160609] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import sys; print(sys.version)\r\n3.5.2 (default, Apr 16 2020, 17:47:17) \r\n[GCC 5.4.0 20160609]\r\n\r\n- Python distribution/environment:\r\n\r\nI don't know, but I found this online:\r\n\r\n  CPython: this is the default, and what you should be using if you have no idea.\r\n\r\nSo I think I am using CPython.\r\n\r\n- Operating System:\r\n\r\nLinux Mint 18.3 Sylvia, Cinnamon 64 bit\r\n\r\n $ uname -a\r\nLinux rayna 4.15.0-96-generic #97~16.04.1-Ubuntu SMP Wed Apr 1 03:03:31 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n- Package version:\r\n\r\n3.51.0\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/226", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/226/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/226/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/226", "id": 601534248, "node_id": "MDU6SXNzdWU2MDE1MzQyNDg=", "number": 226, "title": "rounding issue", "user": {"login": "hroff-1902", "id": 47309513, "node_id": "MDQ6VXNlcjQ3MzA5NTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/47309513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hroff-1902", "html_url": "https://github.com/hroff-1902", "followers_url": "https://api.github.com/users/hroff-1902/followers", "following_url": "https://api.github.com/users/hroff-1902/following{/other_user}", "gists_url": "https://api.github.com/users/hroff-1902/gists{/gist_id}", "starred_url": "https://api.github.com/users/hroff-1902/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hroff-1902/subscriptions", "organizations_url": "https://api.github.com/users/hroff-1902/orgs", "repos_url": "https://api.github.com/users/hroff-1902/repos", "events_url": "https://api.github.com/users/hroff-1902/events{/privacy}", "received_events_url": "https://api.github.com/users/hroff-1902/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-16T22:09:48Z", "updated_at": "2020-04-20T10:49:19Z", "closed_at": "2020-04-20T10:49:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Sometimes percentage is displayed in wrong way (redirected output to a file to see all the values):\r\n```\r\n [Epoch 0 of 100 (N/A%)] |/           | [ETA:  --:--:--, Elapsed Time: 0:00:00]\r\n [Epoch 2 of 100 (  2%)] |-           | [ETA:   0:00:44, Elapsed Time: 0:00:00]\r\n [Epoch 2 of 100 (  2%)] |\\           | [ETA:   0:01:16, Elapsed Time: 0:00:01]\r\n [Epoch 3 of 100 (  3%)] ||           | [ETA:   0:01:11, Elapsed Time: 0:00:02]\r\n [Epoch 5 of 100 (  5%)] |/           | [ETA:   0:00:54, Elapsed Time: 0:00:02]\r\n [Epoch 6 of 100 (  6%)] |-           | [ETA:   0:00:54, Elapsed Time: 0:00:03]\r\n [Epoch 7 of 100 (  7%)] |\\           | [ETA:   0:00:54, Elapsed Time: 0:00:04]\r\n [Epoch 8 of 100 (  8%)] ||           | [ETA:   0:00:55, Elapsed Time: 0:00:04]\r\n [Epoch 9 of 100 (  9%)] |/           | [ETA:   0:00:54, Elapsed Time: 0:00:05]\r\n [Epoch 10 of 100 ( 10%)] |\u2588-         | [ETA:   0:00:54, Elapsed Time: 0:00:06]\r\n [Epoch 11 of 100 ( 11%)] |\u2588\\         | [ETA:   0:00:54, Elapsed Time: 0:00:06]\r\n [Epoch 12 of 100 ( 12%)] |\u2588|         | [ETA:   0:00:55, Elapsed Time: 0:00:07]\r\n [Epoch 13 of 100 ( 13%)] |\u2588/         | [ETA:   0:00:54, Elapsed Time: 0:00:08]\r\n [Epoch 14 of 100 ( 14%)] |\u2588-         | [ETA:   0:00:54, Elapsed Time: 0:00:08]\r\n [Epoch 15 of 100 ( 15%)] |\u2588\\         | [ETA:   0:00:54, Elapsed Time: 0:00:09]\r\n [Epoch 16 of 100 ( 16%)] |\u2588|         | [ETA:   0:00:56, Elapsed Time: 0:00:10]\r\n [Epoch 17 of 100 ( 17%)] |\u2588/         | [ETA:   0:00:56, Elapsed Time: 0:00:11]\r\n [Epoch 18 of 100 ( 18%)] |\u2588-         | [ETA:   0:00:56, Elapsed Time: 0:00:12]\r\n [Epoch 19 of 100 ( 19%)] |\u2588\\         | [ETA:   0:00:56, Elapsed Time: 0:00:13]\r\n [Epoch 20 of 100 ( 20%)] |\u2588\u2588|        | [ETA:   0:00:55, Elapsed Time: 0:00:13]\r\n [Epoch 21 of 100 ( 21%)] |\u2588\u2588/        | [ETA:   0:00:54, Elapsed Time: 0:00:14]\r\n [Epoch 22 of 100 ( 22%)] |\u2588\u2588-        | [ETA:   0:00:53, Elapsed Time: 0:00:15]\r\n [Epoch 23 of 100 ( 23%)] |\u2588\u2588\\        | [ETA:   0:00:52, Elapsed Time: 0:00:15]\r\n [Epoch 24 of 100 ( 24%)] |\u2588\u2588|        | [ETA:   0:00:52, Elapsed Time: 0:00:16]\r\n [Epoch 25 of 100 ( 25%)] |\u2588\u2588/        | [ETA:   0:00:52, Elapsed Time: 0:00:17]\r\n [Epoch 26 of 100 ( 26%)] |\u2588\u2588-        | [ETA:   0:00:51, Elapsed Time: 0:00:18]\r\n [Epoch 27 of 100 ( 27%)] |\u2588\u2588\\        | [ETA:   0:00:50, Elapsed Time: 0:00:18]\r\n [Epoch 28 of 100 ( 28%)] |\u2588\u2588|        | [ETA:   0:00:49, Elapsed Time: 0:00:19]\r\n [Epoch 29 of 100 ( 28%)] |\u2588\u2588/        | [ETA:   0:00:48, Elapsed Time: 0:00:19]\r\n [Epoch 30 of 100 ( 30%)] |\u2588\u2588\u2588-       | [ETA:   0:00:52, Elapsed Time: 0:00:22]\r\n [Epoch 31 of 100 ( 31%)] |\u2588\u2588\u2588\\       | [ETA:   0:00:58, Elapsed Time: 0:00:26]\r\n [Epoch 32 of 100 ( 32%)] |\u2588\u2588\u2588|       | [ETA:   0:01:04, Elapsed Time: 0:00:30]\r\n [Epoch 33 of 100 ( 33%)] |\u2588\u2588\u2588/       | [ETA:   0:01:09, Elapsed Time: 0:00:34]\r\n [Epoch 34 of 100 ( 34%)] |\u2588\u2588\u2588-       | [ETA:   0:01:14, Elapsed Time: 0:00:38]\r\n [Epoch 35 of 100 ( 35%)] |\u2588\u2588\u2588\\       | [ETA:   0:01:18, Elapsed Time: 0:00:42]\r\n [Epoch 36 of 100 ( 36%)] |\u2588\u2588\u2588|       | [ETA:   0:01:21, Elapsed Time: 0:00:45]\r\n [Epoch 37 of 100 ( 37%)] |\u2588\u2588\u2588/       | [ETA:   0:01:24, Elapsed Time: 0:00:49]\r\n [Epoch 38 of 100 ( 38%)] |\u2588\u2588\u2588-       | [ETA:   0:01:27, Elapsed Time: 0:00:53]\r\n [Epoch 39 of 100 ( 39%)] |\u2588\u2588\u2588\\       | [ETA:   0:01:30, Elapsed Time: 0:00:57]\r\n [Epoch 40 of 100 ( 40%)] |\u2588\u2588\u2588\u2588|      | [ETA:   0:01:32, Elapsed Time: 0:01:01]\r\n [Epoch 41 of 100 ( 41%)] |\u2588\u2588\u2588\u2588/      | [ETA:   0:01:34, Elapsed Time: 0:01:05]\r\n [Epoch 42 of 100 ( 42%)] |\u2588\u2588\u2588\u2588-      | [ETA:   0:01:35, Elapsed Time: 0:01:09]\r\n [Epoch 43 of 100 ( 43%)] |\u2588\u2588\u2588\u2588\\      | [ETA:   0:01:37, Elapsed Time: 0:01:13]\r\n [Epoch 44 of 100 ( 44%)] |\u2588\u2588\u2588\u2588|      | [ETA:   0:01:38, Elapsed Time: 0:01:17]\r\n [Epoch 45 of 100 ( 45%)] |\u2588\u2588\u2588\u2588/      | [ETA:   0:01:39, Elapsed Time: 0:01:21]\r\n [Epoch 46 of 100 ( 46%)] |\u2588\u2588\u2588\u2588-      | [ETA:   0:01:40, Elapsed Time: 0:01:25]\r\n [Epoch 47 of 100 ( 47%)] |\u2588\u2588\u2588\u2588\\      | [ETA:   0:01:40, Elapsed Time: 0:01:29]\r\n [Epoch 48 of 100 ( 48%)] |\u2588\u2588\u2588\u2588|      | [ETA:   0:01:41, Elapsed Time: 0:01:33]\r\n [Epoch 49 of 100 ( 49%)] |\u2588\u2588\u2588\u2588/      | [ETA:   0:01:41, Elapsed Time: 0:01:37]\r\n [Epoch 50 of 100 ( 50%)] |\u2588\u2588\u2588\u2588\u2588-     | [ETA:   0:01:41, Elapsed Time: 0:01:41]\r\n [Epoch 51 of 100 ( 51%)] |\u2588\u2588\u2588\u2588\u2588\\     | [ETA:   0:01:41, Elapsed Time: 0:01:45]\r\n [Epoch 52 of 100 ( 52%)] |\u2588\u2588\u2588\u2588\u2588|     | [ETA:   0:01:41, Elapsed Time: 0:01:49]\r\n [Epoch 53 of 100 ( 53%)] |\u2588\u2588\u2588\u2588\u2588/     | [ETA:   0:01:40, Elapsed Time: 0:01:53]\r\n [Epoch 54 of 100 ( 54%)] |\u2588\u2588\u2588\u2588\u2588-     | [ETA:   0:01:40, Elapsed Time: 0:01:57]\r\n [Epoch 55 of 100 ( 55%)] |\u2588\u2588\u2588\u2588\u2588\\     | [ETA:   0:01:39, Elapsed Time: 0:02:01]\r\n [Epoch 56 of 100 ( 56%)] |\u2588\u2588\u2588\u2588\u2588|     | [ETA:   0:01:38, Elapsed Time: 0:02:05]\r\n [Epoch 57 of 100 ( 56%)] |\u2588\u2588\u2588\u2588\u2588/     | [ETA:   0:01:37, Elapsed Time: 0:02:09]\r\n [Epoch 58 of 100 ( 57%)] |\u2588\u2588\u2588\u2588\u2588-     | [ETA:   0:01:36, Elapsed Time: 0:02:13]\r\n [Epoch 59 of 100 ( 59%)] |\u2588\u2588\u2588\u2588\u2588\\     | [ETA:   0:01:35, Elapsed Time: 0:02:17]\r\n [Epoch 60 of 100 ( 60%)] |\u2588\u2588\u2588\u2588\u2588\u2588|    | [ETA:   0:01:34, Elapsed Time: 0:02:21]\r\n [Epoch 61 of 100 ( 61%)] |\u2588\u2588\u2588\u2588\u2588\u2588/    | [ETA:   0:01:33, Elapsed Time: 0:02:25]\r\n [Epoch 62 of 100 ( 62%)] |\u2588\u2588\u2588\u2588\u2588\u2588-    | [ETA:   0:01:31, Elapsed Time: 0:02:29]\r\n [Epoch 63 of 100 ( 63%)] |\u2588\u2588\u2588\u2588\u2588\u2588\\    | [ETA:   0:01:30, Elapsed Time: 0:02:33]\r\n [Epoch 64 of 100 ( 64%)] |\u2588\u2588\u2588\u2588\u2588\u2588|    | [ETA:   0:01:28, Elapsed Time: 0:02:38]\r\n [Epoch 65 of 100 ( 65%)] |\u2588\u2588\u2588\u2588\u2588\u2588/    | [ETA:   0:01:27, Elapsed Time: 0:02:42]\r\n [Epoch 66 of 100 ( 66%)] |\u2588\u2588\u2588\u2588\u2588\u2588-    | [ETA:   0:01:25, Elapsed Time: 0:02:46]\r\n [Epoch 67 of 100 ( 67%)] |\u2588\u2588\u2588\u2588\u2588\u2588\\    | [ETA:   0:01:23, Elapsed Time: 0:02:50]\r\n [Epoch 68 of 100 ( 68%)] |\u2588\u2588\u2588\u2588\u2588\u2588|    | [ETA:   0:01:21, Elapsed Time: 0:02:54]\r\n [Epoch 69 of 100 ( 69%)] |\u2588\u2588\u2588\u2588\u2588\u2588/    | [ETA:   0:01:20, Elapsed Time: 0:02:58]\r\n [Epoch 70 of 100 ( 70%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588-   | [ETA:   0:01:18, Elapsed Time: 0:03:02]\r\n [Epoch 71 of 100 ( 71%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\\   | [ETA:   0:01:16, Elapsed Time: 0:03:06]\r\n [Epoch 72 of 100 ( 72%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588|   | [ETA:   0:01:14, Elapsed Time: 0:03:10]\r\n [Epoch 73 of 100 ( 73%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588/   | [ETA:   0:01:12, Elapsed Time: 0:03:14]\r\n [Epoch 74 of 100 ( 74%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588-   | [ETA:   0:01:09, Elapsed Time: 0:03:19]\r\n [Epoch 75 of 100 ( 75%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\\   | [ETA:   0:01:07, Elapsed Time: 0:03:23]\r\n [Epoch 76 of 100 ( 76%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588|   | [ETA:   0:01:05, Elapsed Time: 0:03:27]\r\n [Epoch 77 of 100 ( 77%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588/   | [ETA:   0:01:03, Elapsed Time: 0:03:31]\r\n [Epoch 78 of 100 ( 78%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588-   | [ETA:   0:01:00, Elapsed Time: 0:03:35]\r\n [Epoch 79 of 100 ( 79%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\\   | [ETA:   0:00:58, Elapsed Time: 0:03:39]\r\n [Epoch 80 of 100 ( 80%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|  | [ETA:   0:00:56, Elapsed Time: 0:03:44]\r\n [Epoch 81 of 100 ( 81%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/  | [ETA:   0:00:53, Elapsed Time: 0:03:48]\r\n [Epoch 82 of 100 ( 82%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588-  | [ETA:   0:00:50, Elapsed Time: 0:03:52]\r\n [Epoch 83 of 100 ( 83%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\\  | [ETA:   0:00:48, Elapsed Time: 0:03:56]\r\n [Epoch 84 of 100 ( 84%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|  | [ETA:   0:00:45, Elapsed Time: 0:04:00]\r\n [Epoch 85 of 100 ( 85%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/  | [ETA:   0:00:43, Elapsed Time: 0:04:04]\r\n [Epoch 86 of 100 ( 86%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588-  | [ETA:   0:00:40, Elapsed Time: 0:04:09]\r\n [Epoch 87 of 100 ( 87%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\\  | [ETA:   0:00:37, Elapsed Time: 0:04:13]\r\n [Epoch 88 of 100 ( 88%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|  | [ETA:   0:00:35, Elapsed Time: 0:04:17]\r\n [Epoch 89 of 100 ( 89%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/  | [ETA:   0:00:32, Elapsed Time: 0:04:21]\r\n [Epoch 90 of 100 ( 90%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588- | [ETA:   0:00:29, Elapsed Time: 0:04:26]\r\n [Epoch 91 of 100 ( 91%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\\ | [ETA:   0:00:26, Elapsed Time: 0:04:30]\r\n [Epoch 92 of 100 ( 92%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| | [ETA:   0:00:23, Elapsed Time: 0:04:34]\r\n [Epoch 93 of 100 ( 93%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/ | [ETA:   0:00:21, Elapsed Time: 0:04:39]\r\n [Epoch 94 of 100 ( 94%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588- | [ETA:   0:00:18, Elapsed Time: 0:04:43]\r\n [Epoch 95 of 100 ( 95%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\\ | [ETA:   0:00:15, Elapsed Time: 0:04:47]\r\n [Epoch 96 of 100 ( 96%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| | [ETA:   0:00:12, Elapsed Time: 0:04:52]\r\n [Epoch 97 of 100 ( 97%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/ | [ETA:   0:00:09, Elapsed Time: 0:04:56]\r\n [Epoch 98 of 100 ( 98%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588- | [ETA:   0:00:06, Elapsed Time: 0:05:00]\r\n [Epoch 99 of 100 ( 99%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\\ | [ETA:   0:00:03, Elapsed Time: 0:05:05]\r\n [Epoch 100 of 100 (100%)] |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|| [ETA:  00:00:00, Elapsed Time: 0:05:09]\r\n```\r\n\r\nUsually percentage is calculated okay, but sometimes it's wrong:\r\n```\r\n [Epoch 29 of 100 ( 28%)] |\u2588\u2588/        | [ETA:   0:00:48, Elapsed Time: 0:00:19]\r\n...\r\n [Epoch 57 of 100 ( 56%)] |\u2588\u2588\u2588\u2588\u2588/     | [ETA:   0:01:37, Elapsed Time: 0:02:09]\r\n...\r\n```\r\n\r\nI guess it's due to rounding. If percentage is calculated internally as a ratio (0.29), then it can be calculated as the python float like 0.2899999999999915, then rounded down to be 28% instead of 29%.\r\n\r\nProbably, calculation in Decimals or integer fractions (like 29 of 100th or 290 of 1000th) should better be used...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/224", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/224/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/224/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/224/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/224", "id": 584748809, "node_id": "MDU6SXNzdWU1ODQ3NDg4MDk=", "number": 224, "title": "3.50.0 regression", "user": {"login": "Sugarbear187", "id": 53590030, "node_id": "MDQ6VXNlcjUzNTkwMDMw", "avatar_url": "https://avatars0.githubusercontent.com/u/53590030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sugarbear187", "html_url": "https://github.com/Sugarbear187", "followers_url": "https://api.github.com/users/Sugarbear187/followers", "following_url": "https://api.github.com/users/Sugarbear187/following{/other_user}", "gists_url": "https://api.github.com/users/Sugarbear187/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sugarbear187/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sugarbear187/subscriptions", "organizations_url": "https://api.github.com/users/Sugarbear187/orgs", "repos_url": "https://api.github.com/users/Sugarbear187/repos", "events_url": "https://api.github.com/users/Sugarbear187/events{/privacy}", "received_events_url": "https://api.github.com/users/Sugarbear187/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-19T23:02:40Z", "updated_at": "2020-03-20T00:57:24Z", "closed_at": "2020-03-20T00:56:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\n3.50.0 breaks cmd wiindow on windows 10.\r\n\r\n#### Code\r\n\r\nSimple test code:\r\n\r\nfrom    time import sleep\r\nimport  progressbar \r\n\r\ndef main():\r\n    \r\n    bar = progressbar.ProgressBar(max_value=100)\r\n    for i in range(100):\r\n        bar.update(i)\r\n        sleep(.5)\r\n\r\n    bar.finsh()\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n\r\nProgressBar2 3.47.0 produces:\r\n 11% (11 of 100) |######################            | Elapsed Time: 0:00:05 ETA:   0:00:44\r\n\r\nProgressBar 2 3.50.0 produces:\r\nN/A% (0 of 100) |                                                                | Elapsed Time: 0:00:00 ETA:  --:--:--\r\n  1% (1 of 100) |                                                                | Elapsed Time: 0:00:00 ETA:   0:00:49\r\n  2% (2 of 100) |#                                                               | Elapsed Time: 0:00:01 ETA:   0:00:49\r\n  3% (3 of 100) |#                                                               | Elapsed Time: 0:00:01 ETA:   0:00:48\r\n  4% (4 of 100) |##                                                              | Elapsed Time: 0:00:02 ETA:   0:00:48\r\n  5% (5 of 100) |###                                                             | Elapsed Time: 0:00:02 ETA:   0:00:47\r\n\r\n\r\n#### Versions\r\ncmd window: c:\\> python test.py \r\n\r\nPython 3.82\r\nWindows 10 all latest updates, etc. \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/223", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/223/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/223/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/223", "id": 573650808, "node_id": "MDU6SXNzdWU1NzM2NTA4MDg=", "number": 223, "title": "I have a present for you", "user": {"login": "kdschlosser", "id": 10932297, "node_id": "MDQ6VXNlcjEwOTMyMjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/10932297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kdschlosser", "html_url": "https://github.com/kdschlosser", "followers_url": "https://api.github.com/users/kdschlosser/followers", "following_url": "https://api.github.com/users/kdschlosser/following{/other_user}", "gists_url": "https://api.github.com/users/kdschlosser/gists{/gist_id}", "starred_url": "https://api.github.com/users/kdschlosser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kdschlosser/subscriptions", "organizations_url": "https://api.github.com/users/kdschlosser/orgs", "repos_url": "https://api.github.com/users/kdschlosser/repos", "events_url": "https://api.github.com/users/kdschlosser/events{/privacy}", "received_events_url": "https://api.github.com/users/kdschlosser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2020-03-02T00:27:06Z", "updated_at": "2020-03-21T16:58:30Z", "closed_at": "2020-03-02T17:47:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I give to you the gift of detecting ANSI support\r\n\r\n```python\r\nimport sys\r\nimport os\r\nimport time\r\n\r\nsample_ansi = '\\x1b[31mRED ' + '\\x1b[33mYELLOW ' + '\\x1b[32mGREEN ' + '\\x1b[35mPINK ' + '\\x1b[0m' + '\\n'\r\n\r\nhandle = sys.stdout\r\n\r\nif (\r\n    # This works for newer versions of pycharm only. older versions there is no way to check.\r\n    ('PYCHARM_HOSTED' in os.environ and os.environ['PYCHARM_HOSTED'] == '1') or\r\n    (\r\n        # check if we are writing to a terminal or not. typically a file object is going to return False\r\n        # if the instance has been overridden and isatty has not been defined we have no way of knowing\r\n        # so we will not use ansi.\r\n        (hasattr(handle, \"isatty\") and handle.isatty()) and\r\n        (\r\n            # ansi terminals will typically define one of the 2 environment variables.\r\n            ('TERM' in os.environ and os.environ['TERM'] == 'ANSI') or\r\n            'ANSICON' in os.environ\r\n        )\r\n    )\r\n):\r\n    handle.write(\"ANSI output enabled.\\n\")\r\n    handle.write(sample_ansi)\r\n\r\nelif sys.platform.startswith('win'):\r\n    handle.write(\"Windows console, no ANSI support.\\n\")\r\n\r\nelse:\r\n    handle.write('ANSI output disabled.\\n')\r\n\r\nhandle.write(\"\\n\\n\")\r\nhandle.flush()\r\n```\r\n\r\nThis will detect if a 3rd party terminal that supports ANSI is being used on Windows.\r\nIt also detects if PyCharm is being used. (latest version of PyCharm has been tested and does work)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/221", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/221/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/221/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/221", "id": 573531868, "node_id": "MDU6SXNzdWU1NzM1MzE4Njg=", "number": 221, "title": "prefix is concatenating the values", "user": {"login": "marcelotrevisani", "id": 7882269, "node_id": "MDQ6VXNlcjc4ODIyNjk=", "avatar_url": "https://avatars0.githubusercontent.com/u/7882269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcelotrevisani", "html_url": "https://github.com/marcelotrevisani", "followers_url": "https://api.github.com/users/marcelotrevisani/followers", "following_url": "https://api.github.com/users/marcelotrevisani/following{/other_user}", "gists_url": "https://api.github.com/users/marcelotrevisani/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcelotrevisani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcelotrevisani/subscriptions", "organizations_url": "https://api.github.com/users/marcelotrevisani/orgs", "repos_url": "https://api.github.com/users/marcelotrevisani/repos", "events_url": "https://api.github.com/users/marcelotrevisani/events{/privacy}", "received_events_url": "https://api.github.com/users/marcelotrevisani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-01T11:38:44Z", "updated_at": "2020-03-03T05:07:58Z", "closed_at": "2020-03-02T15:44:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Description\r\n\r\nI was trying to use the ``ProgressBar`` with a prefix. However, every time which I use it again the prefix is added to the old prefix.\r\n\r\n#### Code\r\n\r\n```python\r\nfrom time import sleep\r\n\r\nimport progressbar\r\n\r\n\r\nWIDGET_BAR_DOWNLOAD = [\r\n    progressbar.Percentage(),\r\n    \" \",\r\n    progressbar.ETA(format=\"%(eta)8s\"),\r\n    \" \",\r\n    progressbar.AdaptiveTransferSpeed(),\r\n    progressbar.Bar(),\r\n]\r\n\r\ntotal_size=10\r\nwith progressbar.ProgressBar(widgets=WIDGET_BAR_DOWNLOAD, max_value=total_size, prefix=f\"1_prefix \") as bar:\r\n    for i in range(total_size):\r\n        bar.update(i)\r\n        sleep(0.2)\r\n\r\nwith progressbar.ProgressBar(widgets=WIDGET_BAR_DOWNLOAD, max_value=total_size, prefix=f\"2_prefix \") as bar:\r\n    for i in range(total_size):\r\n        bar.update(i)\r\n        sleep(0.2)\r\n```\r\n\r\nWorkaround: If I ``deepcopy`` the ``WIDGET_BAR_DOWNLOAD`` it will work as expected. However, I think the ``progressbar`` should not modify the widget passed as a parameter, shouldn't it?\r\n\r\n\r\n#### Result:\r\n\r\n**Current result:**\r\n```\r\n1_prefix 100% Time:  0:00:02   5.0 B/s|###########################################|\r\n\r\n2_prefix 1_prefix 100% Time:  0:00:02   5.0 B/s|###########################################|\r\n\r\n```\r\n\r\n**Expected result:**\r\n```\r\n1_prefix 100% Time:  0:00:02   5.0 B/s|###########################################|\r\n\r\n2_prefix 100% Time:  0:00:02   5.0 B/s|###########################################|\r\n```\r\n\r\n#### Versions\r\n\r\n- Python version: 3.8.1\r\n- Python distribution/environment: Anaconda\r\n- Operating System: Ubuntu Linux\r\n- Package version: 3.47.0\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/220", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/220/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/220/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/220", "id": 569317987, "node_id": "MDU6SXNzdWU1NjkzMTc5ODc=", "number": 220, "title": "Progress bar prints unwanted characters to the console", "user": {"login": "Klavionik", "id": 56698047, "node_id": "MDQ6VXNlcjU2Njk4MDQ3", "avatar_url": "https://avatars0.githubusercontent.com/u/56698047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Klavionik", "html_url": "https://github.com/Klavionik", "followers_url": "https://api.github.com/users/Klavionik/followers", "following_url": "https://api.github.com/users/Klavionik/following{/other_user}", "gists_url": "https://api.github.com/users/Klavionik/gists{/gist_id}", "starred_url": "https://api.github.com/users/Klavionik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Klavionik/subscriptions", "organizations_url": "https://api.github.com/users/Klavionik/orgs", "repos_url": "https://api.github.com/users/Klavionik/repos", "events_url": "https://api.github.com/users/Klavionik/events{/privacy}", "received_events_url": "https://api.github.com/users/Klavionik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-02-22T10:56:27Z", "updated_at": "2020-03-03T00:24:29Z", "closed_at": "2020-03-03T00:24:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all, thanks for the great lib! \r\nI'm getting a small problem. I know that the subject sounds rather vague, I'll try my best to explain.\r\nI'm kind of new to Python, so maybe this has more relation with Python in general, than just with the library.\r\n\r\n#### Description\r\n\r\nI took an example of the filling animated progress bar from the official docs and tried to modify it a bit to make it colorful using ANSI escape characters. Here is my code:\r\n\r\n```def progress_bar(text):\r\n    \"\"\"\r\n    Displays a fancy progress bar.\r\n\r\n    :param text: Progress bar text\r\n    :return: Progress bar object\r\n    \"\"\"\r\n    V = '\\033[38;5;31m'\r\n    END = '\\033[0m'\r\n    bar = \\\r\n        progressbar.ProgressBar(widgets=[f'{V}{text}{END}', progressbar.Percentage(),\r\n        progressbar.Bar(marker=progressbar.AnimatedMarker(fill=f'{V}#{END}'))])\r\n    return bar\r\n```\r\n\r\nBut when I do that, I observe a weird side-effect. I took a short screencast to make it easier to understand: https://youtu.be/p_YpkbJrTa8\r\n\r\nAt **0:05** you can see that the cursor leaves a few blue ```|``` characters in the console when updating the bar and the animation after the hash sign is bugged. However, if I keep the hash sign colorless, everything looks just fine (see **0:35**).\r\n\r\nYou can also see, that in the first case the cursor jumps to the hast sign every time it updates and in the second case it stays at the rightmost position.\r\n\r\nSo, is there a way to fix that, so that the hash sign stays colorful and animated, but there are no unwanted ```|``` characters in the console?\r\n\r\nI was able to kinda fix that, wrapping the markers which constitute the animation with the same ANSI color codes.\r\n``` \r\n   V = '\\033[38;5;31m'\r\n   END = '\\033[0m'\r\n   bar = \\\r\n        progressbar.ProgressBar(widgets=[f'{V}{text}{END}', progressbar.Percentage(),\r\n        progressbar.Bar(marker=progressbar.AnimatedMarker(markers=f'{V}|/-\\\\{END}', \r\n                                                          fill=f'{V}#{END}'))])\r\n    return bar\r\n```\r\n\r\nNow the ```|``` character stays at the rightmost position, where it belongs, but the animation is still kind of broken. I made another screencast to demonstrate that: https://youtu.be/t2YwlBQxcN0\r\n\r\nLooks like the hyphen character is missing and sometimes the animated marker becomes colorless (see **0:09** and especially **0:21**).\r\n\r\n#### Versions\r\n\r\n- Python version: 3.8.1 (tags/v3.8.1:1b293b6, Dec 18 2019, 23:11:46) [MSC v.1916 64 bit (AMD64)]\r\n- Python distribution/environment: CPython\r\n- Operating System: Windows 10\r\n- Package version: 3.47.0\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/219", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/219/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/219/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/219", "id": 552511526, "node_id": "MDU6SXNzdWU1NTI1MTE1MjY=", "number": 219, "title": "Feature: if no argument is passed to update(), increment the bar by one", "user": {"login": "Big-Tree", "id": 12074010, "node_id": "MDQ6VXNlcjEyMDc0MDEw", "avatar_url": "https://avatars0.githubusercontent.com/u/12074010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Big-Tree", "html_url": "https://github.com/Big-Tree", "followers_url": "https://api.github.com/users/Big-Tree/followers", "following_url": "https://api.github.com/users/Big-Tree/following{/other_user}", "gists_url": "https://api.github.com/users/Big-Tree/gists{/gist_id}", "starred_url": "https://api.github.com/users/Big-Tree/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Big-Tree/subscriptions", "organizations_url": "https://api.github.com/users/Big-Tree/orgs", "repos_url": "https://api.github.com/users/Big-Tree/repos", "events_url": "https://api.github.com/users/Big-Tree/events{/privacy}", "received_events_url": "https://api.github.com/users/Big-Tree/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-20T21:14:54Z", "updated_at": "2020-03-02T20:24:59Z", "closed_at": "2020-03-02T16:45:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nFeature: if no argument is passed to update(), increment the bar by one.\r\n\r\n#### Code\r\nBefore:\r\n```\r\nimport time\r\nimport progressbar\r\n\r\ndata = [5, 9, 45, 53, 99, 2]\r\nbar = progressbar.ProgressBar(max_value=len(data))\r\nfor i, x in enumerate(data):\r\n    # some arbitrary calculation with x\r\n    bar.update(i)\r\n    time.sleep(0.5)\r\n```\r\nThe previous code could then be simplified.\r\nAfter:\r\n```\r\nimport time\r\nimport progressbar\r\n\r\ndata = [5, 9, 45, 53, 99, 2]\r\nbar = progressbar.ProgressBar(max_value=len(data))\r\nfor x in data:\r\n    # some arbitrary calculation with x\r\n    bar.update()\r\n    time.sleep(0.5)\r\n```\r\n```\r\n\r\n#### Versions\r\n\r\n- Python version: 3.7.5 (default, Oct 25 2019, 15:51:11) \r\n[GCC 7.3.0]\r\n`\r\n- Python distribution/environment: Anaconda\r\n- Operating system: Manjaro Linux\r\n- Package version: 3.47.0\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/218", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/218/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/218/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/218", "id": 551774230, "node_id": "MDU6SXNzdWU1NTE3NzQyMzA=", "number": 218, "title": "\"Sleeping\" Timer", "user": {"login": "mikkelee", "id": 644671, "node_id": "MDQ6VXNlcjY0NDY3MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/644671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikkelee", "html_url": "https://github.com/mikkelee", "followers_url": "https://api.github.com/users/mikkelee/followers", "following_url": "https://api.github.com/users/mikkelee/following{/other_user}", "gists_url": "https://api.github.com/users/mikkelee/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikkelee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikkelee/subscriptions", "organizations_url": "https://api.github.com/users/mikkelee/orgs", "repos_url": "https://api.github.com/users/mikkelee/repos", "events_url": "https://api.github.com/users/mikkelee/events{/privacy}", "received_events_url": "https://api.github.com/users/mikkelee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-01-18T14:10:39Z", "updated_at": "2020-02-17T07:00:07Z", "closed_at": "2020-02-17T07:00:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to build a timer/bar that will sleep a specified amount after updating the progressbar but I'm hitting a wall.\r\n\r\nI can't seem to access the variables, I must be misunderstanding the documentation.\r\n\r\nThis is what I have (I'm aware that the sleep is before the super call, I can always polish when I know how to access the variables):\r\n\r\n```python\r\nimport progressbar\r\n\r\nclass SleepTimer(progressbar.Timer):\r\n\tdef __init__(self, **kwargs):\r\n\t\tsuper().__init__(**kwargs, format='Sleep: %(variables.sleep_seconds)s')\r\n\r\n\tdef __call__(self, progress, data):\r\n\t\ttime.sleep(data['variables'].get('sleep_seconds', 0))\r\n\t\treturn super().__call__(progress, data)\r\n\r\nitems = [1,2,3]\r\n\r\nbar = progressbar.ProgressBar(\r\n\twidgets = [\r\n\t\tprogressbar.Percentage(),\r\n\t\t' ', progressbar.Bar(),\r\n\t\t' ', progressbar.Timer(),\r\n\t\t' ', progressbar.AbsoluteETA(),\r\n\t\t' ', SleepTimer(),\r\n\t],\r\n\tvariables={'sleep_seconds': 0}\r\n)\r\nfor item in bar(items):\r\n\tbar.update(sleep_seconds=5)\r\n```\r\n\r\nIt throws on trying to access the variables:\r\n\r\n```console\r\nError while formatting 'Sleep: %(variables.sleep_seconds)s'                                                                                                            \r\n{'days_elapsed': 0.0,\r\n 'dynamic_messages': {},\r\n 'elapsed': '0:00:00',\r\n 'end_time': None,\r\n 'eta': '2020-01-18 15:15:37',\r\n 'eta_seconds': datetime.datetime(2020, 1, 18, 15, 15, 37, 102043),\r\n 'finished': None,\r\n 'hours_elapsed': 0.0,\r\n 'last_update': datetime.datetime(2020, 1, 18, 15, 8, 43, 101946),\r\n 'last_update_time': datetime.datetime(2020, 1, 18, 15, 8, 43, 101946),\r\n 'max': 3,\r\n 'max_value': 3,\r\n 'minutes_elapsed': 0.0,\r\n 'percentage': 0.0,\r\n 'previous_value': 0,\r\n 'seconds': 0.000138,\r\n 'seconds_elapsed': 0.000138,\r\n 'start': datetime.datetime(2020, 1, 18, 15, 8, 43, 101808),\r\n 'start_time': datetime.datetime(2020, 1, 18, 15, 8, 43, 101808),\r\n 'time_elapsed': datetime.timedelta(microseconds=138),\r\n 'total_seconds_elapsed': 0.000138,\r\n 'updates': 1,\r\n 'value': 0}\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.7/site-packages/progressbar/bar.py\", line 455, in __next__\r\n    self.start()\r\n  File \"/usr/local/lib/python3.7/site-packages/progressbar/bar.py\", line 656, in start\r\n    self.update(self.min_value, force=True)\r\n  File \"/usr/local/lib/python3.7/site-packages/progressbar/bar.py\", line 589, in update\r\n    StdRedirectMixin.update(self, value=value)\r\n  File \"/usr/local/lib/python3.7/site-packages/progressbar/bar.py\", line 146, in update\r\n    DefaultFdMixin.update(self, value=value)\r\n  File \"/usr/local/lib/python3.7/site-packages/progressbar/bar.py\", line 68, in update\r\n    line = converters.to_unicode('\\r' + self._format_line())\r\n  File \"/usr/local/lib/python3.7/site-packages/progressbar/bar.py\", line 517, in _format_line\r\n    widgets = ''.join(self._to_unicode(self._format_widgets()))\r\n  File \"/usr/local/lib/python3.7/site-packages/progressbar/bar.py\", line 492, in _format_widgets\r\n    widget_output = converters.to_unicode(widget(self, data))\r\n  File \"/usr/local/lib/python3.7/site-packages/progressbar/widgets.py\", line 213, in __call__\r\n    return FormatWidgetMixin.__call__(self, progress, data, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/progressbar/widgets.py\", line 78, in __call__\r\n    return (format or self.format) % data\r\nKeyError: 'variables.sleep_seconds'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/217", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/217/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/217/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/217", "id": 546456112, "node_id": "MDU6SXNzdWU1NDY0NTYxMTI=", "number": 217, "title": "Is the code in this repo the most recent code?", "user": {"login": "kikones34", "id": 4391024, "node_id": "MDQ6VXNlcjQzOTEwMjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4391024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kikones34", "html_url": "https://github.com/kikones34", "followers_url": "https://api.github.com/users/kikones34/followers", "following_url": "https://api.github.com/users/kikones34/following{/other_user}", "gists_url": "https://api.github.com/users/kikones34/gists{/gist_id}", "starred_url": "https://api.github.com/users/kikones34/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kikones34/subscriptions", "organizations_url": "https://api.github.com/users/kikones34/orgs", "repos_url": "https://api.github.com/users/kikones34/repos", "events_url": "https://api.github.com/users/kikones34/events{/privacy}", "received_events_url": "https://api.github.com/users/kikones34/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-07T19:09:15Z", "updated_at": "2020-01-08T19:57:14Z", "closed_at": "2020-01-08T19:57:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you install the package from pypi, the version in `__about__.py` is `3.47.0`, however, in this repo the version is `3.46.1`.\r\nI wanted to make a small contribution, but it worries me that this might not be the newest version of the code.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/216", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/216/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/216/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/216", "id": 529055318, "node_id": "MDU6SXNzdWU1MjkwNTUzMTg=", "number": 216, "title": "Bar stops being drawn at 98%~", "user": {"login": "danielocdh", "id": 3517668, "node_id": "MDQ6VXNlcjM1MTc2Njg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3517668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielocdh", "html_url": "https://github.com/danielocdh", "followers_url": "https://api.github.com/users/danielocdh/followers", "following_url": "https://api.github.com/users/danielocdh/following{/other_user}", "gists_url": "https://api.github.com/users/danielocdh/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielocdh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielocdh/subscriptions", "organizations_url": "https://api.github.com/users/danielocdh/orgs", "repos_url": "https://api.github.com/users/danielocdh/repos", "events_url": "https://api.github.com/users/danielocdh/events{/privacy}", "received_events_url": "https://api.github.com/users/danielocdh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1817023655, "node_id": "MDU6TGFiZWwxODE3MDIzNjU1", "url": "https://api.github.com/repos/WoLpH/python-progressbar/labels/in-progress", "name": "in-progress", "color": "f4baed", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-27T01:08:28Z", "updated_at": "2020-03-02T16:30:26Z", "closed_at": "2020-03-02T16:30:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nBar stops being drawn at 98%~ when using it without iterator/context, but it works fine if I pass a value to the `term_width` parameter\r\n\r\n#### Code\r\n```python\r\namount = 200\r\nbar = progressbar.ProgressBar(min_value=0, max_value=amount)\r\nfor i in range(amount):\r\n    time.sleep(0.01)\r\n    bar.update(i)\r\n```\r\nIt works fine if I change the `bar` line to\r\n```python\r\nbar = progressbar.ProgressBar(min_value=0, max_value=amount, term_width=119)\r\n```\r\n\r\n#### Versions\r\n\r\n- Python version: 3.7.5 (default, Oct 31 2019, 15:18:51) [MSC v.1916 64 bit (AMD64)]\r\n- Python distribution/environment: conda 4.7.12/Python 3.7.5\r\n- Operating System: Windows 10\r\n- Package version: 3.47.0\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/215", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/215/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/215/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/215", "id": 525848614, "node_id": "MDU6SXNzdWU1MjU4NDg2MTQ=", "number": 215, "title": "AttributeError: module 'progressbar' has no attribute 'Variable'", "user": {"login": "x7night", "id": 38029731, "node_id": "MDQ6VXNlcjM4MDI5NzMx", "avatar_url": "https://avatars0.githubusercontent.com/u/38029731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/x7night", "html_url": "https://github.com/x7night", "followers_url": "https://api.github.com/users/x7night/followers", "following_url": "https://api.github.com/users/x7night/following{/other_user}", "gists_url": "https://api.github.com/users/x7night/gists{/gist_id}", "starred_url": "https://api.github.com/users/x7night/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/x7night/subscriptions", "organizations_url": "https://api.github.com/users/x7night/orgs", "repos_url": "https://api.github.com/users/x7night/repos", "events_url": "https://api.github.com/users/x7night/events{/privacy}", "received_events_url": "https://api.github.com/users/x7night/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-20T14:44:53Z", "updated_at": "2019-11-21T02:12:30Z", "closed_at": "2019-11-21T02:12:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nthe terminal shows the mistake \" AttributeError: module 'progressbar' has no attribute 'Variable' \" when i run the  example code.\r\n\r\n#### Code\r\n``` python\r\n@example\r\ndef variables():\r\n    # Use progressbar.Variable to keep track of some parameter(s) during\r\n    # your calculations\r\n    widgets = [\r\n        progressbar.Percentage(),\r\n        progressbar.Bar(),\r\n        progressbar.Variable('loss'),\r\n        ', ',\r\n        progressbar.Variable('username', width=12, precision=12),\r\n    ]\r\n    with progressbar.ProgressBar(max_value=100, widgets=widgets) as bar:\r\n        min_so_far = 1\r\n        for i in range(100):\r\n            time.sleep(0.01)\r\n            val = random.random()\r\n            if val < min_so_far:\r\n                min_so_far = val\r\n            bar.update(i, loss=min_so_far, username='Some user')\r\n```\r\n\r\n#### Versions\r\npython 3.7 , anocanda, win 7,  version:3.37.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/213", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/213/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/213/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/213", "id": 516685597, "node_id": "MDU6SXNzdWU1MTY2ODU1OTc=", "number": 213, "title": "Empty lines in jupyter lab / notebook", "user": {"login": "kallewesterling", "id": 7298727, "node_id": "MDQ6VXNlcjcyOTg3Mjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7298727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kallewesterling", "html_url": "https://github.com/kallewesterling", "followers_url": "https://api.github.com/users/kallewesterling/followers", "following_url": "https://api.github.com/users/kallewesterling/following{/other_user}", "gists_url": "https://api.github.com/users/kallewesterling/gists{/gist_id}", "starred_url": "https://api.github.com/users/kallewesterling/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kallewesterling/subscriptions", "organizations_url": "https://api.github.com/users/kallewesterling/orgs", "repos_url": "https://api.github.com/users/kallewesterling/repos", "events_url": "https://api.github.com/users/kallewesterling/events{/privacy}", "received_events_url": "https://api.github.com/users/kallewesterling/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1513373412, "node_id": "MDU6TGFiZWwxNTEzMzczNDEy", "url": "https://api.github.com/repos/WoLpH/python-progressbar/labels/no-activity", "name": "no-activity", "color": "ffffff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-02T18:47:35Z", "updated_at": "2020-01-09T01:21:03Z", "closed_at": "2020-01-09T01:21:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nWhen iterating over many tweets in my own package, using `progressbar`, it generates a number of empty lines in the `jupyter lab` notebook. Picture here:\r\n\r\n<img width=\"452\" alt=\"Screen Shot 2019-11-02 at 2 45 47 PM\" src=\"https://user-images.githubusercontent.com/7298727/68075551-79f0aa00-fd7f-11e9-9f32-49b5a37bc52b.png\">\r\n\r\n#### Code\r\n\r\n```python\r\nclass TweetSet():\r\n    def __init__(self, ids=[], suppress_warnings=False):\r\n        self.suppress_warnings = suppress_warnings\r\n        self.ids = ids\r\n        self.tweets = []\r\n        \r\n        bar = progressbar.ProgressBar(max_value=len(self.ids)).start()\r\n        for i, id in enumerate(ids):\r\n            bar.update(i)\r\n            tweet = Tweet(id, suppress_warnings=self.suppress_warnings)\r\n            self.tweets.append(tweet)\r\n        bar.finish()\r\n```\r\n\r\n#### Versions\r\n\r\n- Python version: 3.7.1 (default, Nov 15 2018, 16:13:06) [Clang 10.0.0 (clang-1000.11.45.5)]\r\n- Python distribution/environment: IPython\r\n- Operating System: Mac OS X 10.15\r\n- Package version: 3.38.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/211", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/211/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/211/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/211", "id": 500060990, "node_id": "MDU6SXNzdWU1MDAwNjA5OTA=", "number": 211, "title": "progressbar is printed multipletimes in Jupyter notebook ", "user": {"login": "vvvlc", "id": 15854496, "node_id": "MDQ6VXNlcjE1ODU0NDk2", "avatar_url": "https://avatars3.githubusercontent.com/u/15854496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vvvlc", "html_url": "https://github.com/vvvlc", "followers_url": "https://api.github.com/users/vvvlc/followers", "following_url": "https://api.github.com/users/vvvlc/following{/other_user}", "gists_url": "https://api.github.com/users/vvvlc/gists{/gist_id}", "starred_url": "https://api.github.com/users/vvvlc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vvvlc/subscriptions", "organizations_url": "https://api.github.com/users/vvvlc/orgs", "repos_url": "https://api.github.com/users/vvvlc/repos", "events_url": "https://api.github.com/users/vvvlc/events{/privacy}", "received_events_url": "https://api.github.com/users/vvvlc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-30T05:37:37Z", "updated_at": "2019-10-01T19:04:50Z", "closed_at": "2019-10-01T19:04:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\nProgressbar is printed multiple times in jupyter notebook\r\n![Sn\u00edmek obrazovky po\u0159\u00edzen\u00fd 2019-09-30 07-26-57](https://user-images.githubusercontent.com/15854496/65851666-090b3c00-e354-11e9-9dda-aec9fcc06443.png)\r\n\r\n\r\n\r\n#### Code\r\n```python\r\nimport time\r\nimport progressbar\r\nimport sys\r\n\r\nprint(progressbar.__version__)\r\nsys.stdout.flush()\r\nfor i in progressbar.progressbar(range(100)):\r\n    time.sleep(0.02)\r\n```\r\n\r\n#### Versions\r\n\r\n- Python version: 3.6.7 (default, Oct 22 2018, 11:32:17) [GCC 8.2.0]\r\n- Python distribution/environment: CPython/Anaconda/IPython/IDLE\r\n- Operating System: Ubuntu Linux\r\n- Package version: 3.46.1\r\n  - 3.43.1 works fine, \r\n  - 3.45.1 introduces this problem (installed via pip)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/209", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/209/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/209/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/209/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/209", "id": 495508350, "node_id": "MDU6SXNzdWU0OTU1MDgzNTA=", "number": 209, "title": "Elapsed time starts at 3:00:00", "user": {"login": "paulo-raca", "id": 1072660, "node_id": "MDQ6VXNlcjEwNzI2NjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1072660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulo-raca", "html_url": "https://github.com/paulo-raca", "followers_url": "https://api.github.com/users/paulo-raca/followers", "following_url": "https://api.github.com/users/paulo-raca/following{/other_user}", "gists_url": "https://api.github.com/users/paulo-raca/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulo-raca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulo-raca/subscriptions", "organizations_url": "https://api.github.com/users/paulo-raca/orgs", "repos_url": "https://api.github.com/users/paulo-raca/repos", "events_url": "https://api.github.com/users/paulo-raca/events{/privacy}", "received_events_url": "https://api.github.com/users/paulo-raca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-19T00:02:43Z", "updated_at": "2019-09-19T03:48:25Z", "closed_at": "2019-09-19T03:03:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Description\r\n\r\nElapsed time is offset by 3 hours.\r\n\r\nI wonder if my timezone (UTC-3) is related to this bug.\r\n\r\nI traced this to f6ad27fff3e6c\r\n\r\n#### Code\r\n\r\nJust running examples.py:\r\n\r\n```\r\n$ python3 ~/Workspace/python-progressbar/examples.py \r\nRunning: shortcut_example\r\n100% (10 of 10) |###########| Elapsed Time: 3:00:01 Time:  3:00:01\r\n\r\nRunning: prefixed_shortcut_example\r\nHi: 100% (10 of 10) |#######| Elapsed Time: 3:00:01 Time:  3:00:01\r\n\r\nRunning: templated_shortcut_example\r\n100% (10 of 10) |######| Elapsed Time: 3:00:01 Time:  3:00:011e+00\r\n\r\nRunning: with_example_stdout_redirection\r\nSome print statement 0\r\nSome print statement 3                                            \r\nSome print statement 6                                            \r\nSome print statement 9                                            \r\n100% (10 of 10) |###########| Elapsed Time: 3:00:01 Time:  3:00:01\r\n```\r\n\r\n\r\n#### Versions\r\n\r\n- Python version: 3.7.3 (default, Aug 20 2019, 17:04:43) [GCC 8.3.0]\r\n- Python distribution/environment: OS distribution\r\n- Operating System: Ubuntu 19.04\r\n- Package version: 3.46.0\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/207", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/207/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/207/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/207", "id": 493728577, "node_id": "MDU6SXNzdWU0OTM3Mjg1Nzc=", "number": 207, "title": " Progress emulation in Windows 10 (doesnt work)", "user": {"login": "goodandrewsoft", "id": 2471892, "node_id": "MDQ6VXNlcjI0NzE4OTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2471892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goodandrewsoft", "html_url": "https://github.com/goodandrewsoft", "followers_url": "https://api.github.com/users/goodandrewsoft/followers", "following_url": "https://api.github.com/users/goodandrewsoft/following{/other_user}", "gists_url": "https://api.github.com/users/goodandrewsoft/gists{/gist_id}", "starred_url": "https://api.github.com/users/goodandrewsoft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goodandrewsoft/subscriptions", "organizations_url": "https://api.github.com/users/goodandrewsoft/orgs", "repos_url": "https://api.github.com/users/goodandrewsoft/repos", "events_url": "https://api.github.com/users/goodandrewsoft/events{/privacy}", "received_events_url": "https://api.github.com/users/goodandrewsoft/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-15T11:54:22Z", "updated_at": "2019-09-17T13:33:52Z", "closed_at": "2019-09-17T13:33:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "This code not update text in console\r\n\r\nAll time this: `N/A% |         |   0.0 s/B   0.0 B/300.0 B Elapsed Time: 0:00:00 ETA:  --:--:--`\r\n\r\n```python\r\nimport collections\r\nimport time\r\nimport progressbar\r\n\r\nstruct = collections.namedtuple\r\n\r\ndef get_progress_info():\r\n    \"\"\"Return a function callback to update the progressbar.\"\"\"\r\n    progressinfo = struct(\"ProgressInfo\", [\"callback\", \"finish\"])\r\n\r\n    if progressbar:\r\n        bar = progressbar.ProgressBar(widgets=[\r\n            progressbar.Percentage(),\r\n            ' ', progressbar.Bar(),\r\n            ' ', progressbar.FileTransferSpeed(),\r\n            ' ', progressbar.DataSize(), '/', progressbar.DataSize('max_value'),\r\n            ' ', progressbar.Timer(),\r\n            ' ', progressbar.AdaptiveETA(),\r\n        ])\r\n\r\n        def _callback(total_size, completed):\r\n            if not hasattr(bar, \"next_update\"):\r\n                if hasattr(bar, \"maxval\"):\r\n                    bar.maxval = total_size\r\n                else:\r\n                    bar.max_value = total_size\r\n                bar.start()\r\n            bar.update(completed)\r\n\r\n        def _finish():\r\n            if hasattr(bar, \"next_update\"):\r\n                return bar.finish()\r\n\r\n        return progressinfo(callback=_callback, finish=_finish)\r\n    else:\r\n        return progressinfo(callback=None, finish=lambda: True)\r\n\r\ndef upload(progress_callback):\r\n\r\n    for x in range(0, 300):\r\n        time.sleep(1)\r\n        progress_callback(300, x)\r\n\r\n\r\nprogress = get_progress_info()\r\nupload(progress.callback)\r\n```\r\nhttps://github.com/tokland/youtube-upload/blob/master/youtube_upload/main.py#L63\r\nhttps://github.com/tokland/youtube-upload/blob/master/youtube_upload/upload_video.py#L22", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/202", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/202/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/202/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/202", "id": 487689428, "node_id": "MDU6SXNzdWU0ODc2ODk0Mjg=", "number": 202, "title": "stderr is closed", "user": {"login": "artgoldberg", "id": 33882, "node_id": "MDQ6VXNlcjMzODgy", "avatar_url": "https://avatars2.githubusercontent.com/u/33882?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artgoldberg", "html_url": "https://github.com/artgoldberg", "followers_url": "https://api.github.com/users/artgoldberg/followers", "following_url": "https://api.github.com/users/artgoldberg/following{/other_user}", "gists_url": "https://api.github.com/users/artgoldberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/artgoldberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artgoldberg/subscriptions", "organizations_url": "https://api.github.com/users/artgoldberg/orgs", "repos_url": "https://api.github.com/users/artgoldberg/repos", "events_url": "https://api.github.com/users/artgoldberg/events{/privacy}", "received_events_url": "https://api.github.com/users/artgoldberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-08-30T22:16:26Z", "updated_at": "2019-09-13T14:41:33Z", "closed_at": "2019-09-13T14:41:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\n`progressbar` doesn't work with our testing system because it finds `stderr` closed\r\n\r\n#### Code\r\n\r\nHere, `SimulationProgressBar()` is just a simple wrapper around `ProgressBar`. I can share it with you.\r\n\r\n    ___________________________________________ TestUtilities.test_progress ____________________________________________\r\n\r\n    self = <test_utilities.TestUtilities testMethod=test_progress>\r\n\r\n        @unittest.skipIf(sys.stderr.closed, 'progress tests fail if stderr is closed')\r\n        def test_progress(self):\r\n            unused_bar = SimulationProgressBar()\r\n            self.assertEqual(unused_bar.start(1), None)\r\n            self.assertEqual(unused_bar.progress(2), None)\r\n            self.assertEqual(unused_bar.end(), None)\r\n    \r\n            used_bar = SimulationProgressBar(True)\r\n            with CaptureOutput(relay=False) as capturer:\r\n                duration = 20\r\n    >           self.assertEqual(used_bar.start(duration), None)\r\n\r\n    tests/test_utilities.py:53: \r\n    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n    de_sim/utilities.py:52: in start\r\n        self.bar = ProgressBar(max_value=end_time).start()\r\n    /usr/local/lib/python3.6/site-packages/progressbar/bar.py:661: in start\r\n        self.update(self.min_value, force=True)\r\n    /usr/local/lib/python3.6/site-packages/progressbar/bar.py:594: in update\r\n        StdRedirectMixin.update(self, value=value)\r\n    /usr/local/lib/python3.6/site-packages/progressbar/bar.py:147: in update\r\n        self.fd.write('\\r' + ' ' * self.term_width + '\\r')\r\n    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\n    self = <_pytest.capture.EncodedFile object at 0x7f468d6edba8>\r\n    obj = b'\\r                                                                                                                    \\r'\r\n\r\n        def write(self, obj):\r\n            if isinstance(obj, six.text_type):\r\n                obj = obj.encode(self.encoding, \"replace\")\r\n            elif _PY3:\r\n                raise TypeError(\r\n                    \"write() argument must be str, not {}\".format(type(obj).__name__)\r\n                )\r\n    >       self.buffer.write(obj)\r\n    E       ValueError: I/O operation on closed file\r\n\r\n#### Versions\r\n\r\n- Python version: `3.6.8`\r\n- Python distribution/environment: CPython, I think\r\n- Operating System: Ubuntu Linux\r\n- Package version: `3.43.1`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/201", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/201/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/201/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/201", "id": 485926898, "node_id": "MDU6SXNzdWU0ODU5MjY4OTg=", "number": 201, "title": "3.43.1: test_monitor_progress.py unable to find progressbar module", "user": {"login": "dvzrv", "id": 432519, "node_id": "MDQ6VXNlcjQzMjUxOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/432519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvzrv", "html_url": "https://github.com/dvzrv", "followers_url": "https://api.github.com/users/dvzrv/followers", "following_url": "https://api.github.com/users/dvzrv/following{/other_user}", "gists_url": "https://api.github.com/users/dvzrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvzrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvzrv/subscriptions", "organizations_url": "https://api.github.com/users/dvzrv/orgs", "repos_url": "https://api.github.com/users/dvzrv/repos", "events_url": "https://api.github.com/users/dvzrv/events{/privacy}", "received_events_url": "https://api.github.com/users/dvzrv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-08-27T17:02:29Z", "updated_at": "2019-09-18T11:40:27Z", "closed_at": "2019-09-17T14:18:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nHi! I'm currently packaging python-progressbar for Arch Linux.\r\nDuring packaging of 3.43.1 I'm attempting to run the tests using pytest, but I'm running into issues with the tests in `tests/test_monitor_progress.py`. I think they are happening, because those tests don't honor the `$PYTHONPATH` environment variable.\r\n\r\nThe build/ test output is here: \r\n[python-progressbar-3.43.1-check.log](https://github.com/WoLpH/python-progressbar/files/3547269/python-progressbar-3.43.1-check.log)\r\n\r\n#### Code\r\n\r\n```\r\nrm -v pytest.ini\r\npython setup.py build\r\nexport PYTHONPATH=\"${PWD}/build:${PYTHONPATH}\"\r\npy.test                            \r\n```\r\n\r\nCurrently I have to disable a few tests because of this behavior, when running py.test:\r\n\r\n```\r\npy.test -k 'not test_non_timed \\                                                                                                                                                            \r\n                and not test_context_wrapper \\\r\n                and not test_rapid_updates \\\r\n                and not test_generator_example \\\r\n                and not test_list_example'\r\n```\r\n\r\n\r\n#### Versions\r\n\r\n- Python version: 3.7.4\r\n  - python-pytest: 5.1.1\r\n  - python-freezegun: 0.3.12\r\n  - python-utils: 2.3.0\r\n  - python-sphinx: 2.2.0\r\n  - python-six: 1.12.0\r\n- Python distribution/environment: Python\r\n- Operating System: Arch Linux\r\n- Package version: 3.43.1\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/199", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/199/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/199/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/199", "id": 483160620, "node_id": "MDU6SXNzdWU0ODMxNjA2MjA=", "number": 199, "title": "Using AnimatedMarker as a Marker in a Progressbar", "user": {"login": "Xevion", "id": 44609630, "node_id": "MDQ6VXNlcjQ0NjA5NjMw", "avatar_url": "https://avatars1.githubusercontent.com/u/44609630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xevion", "html_url": "https://github.com/Xevion", "followers_url": "https://api.github.com/users/Xevion/followers", "following_url": "https://api.github.com/users/Xevion/following{/other_user}", "gists_url": "https://api.github.com/users/Xevion/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xevion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xevion/subscriptions", "organizations_url": "https://api.github.com/users/Xevion/orgs", "repos_url": "https://api.github.com/users/Xevion/repos", "events_url": "https://api.github.com/users/Xevion/events{/privacy}", "received_events_url": "https://api.github.com/users/Xevion/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-21T02:00:03Z", "updated_at": "2019-09-17T00:47:18Z", "closed_at": "2019-09-17T00:47:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nThe `progressbar.AnimatedMarker` widget does not display properly when used in `progressbar.Bar`.\r\n\r\nI have tested in VS Code's terminal as well as a separate Windows Command Prompt.\r\n\r\nThe documentation is pretty sparce and code I've found online did not work for me.\r\n\r\nWhat am I doing wrong?\r\n\r\n#### Code\r\n\r\n```python\r\nimport progressbar, time\r\nwidgets = [progressbar.Percentage(), ' ', progressbar.Bar(marker=progressbar.AnimatedMarker()),]\r\nfor i in progressbar.progressbar(range(50), widgets=widgets):\r\n    time.sleep(0.1)\r\n```\r\n\r\n#### Versions\r\n\r\n- Python version: `3.7.0`\r\n- Python distribution/environment: `Anacoda (conda 4.7.10)`\r\n- Operating System: `Windows 10`\r\n- Package version: `3.42.0`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/198", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/198/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/198/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/198", "id": 467861441, "node_id": "MDU6SXNzdWU0Njc4NjE0NDE=", "number": 198, "title": "How to get Days in ETA to just show in hours?", "user": {"login": "p1r473", "id": 9235633, "node_id": "MDQ6VXNlcjkyMzU2MzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/9235633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/p1r473", "html_url": "https://github.com/p1r473", "followers_url": "https://api.github.com/users/p1r473/followers", "following_url": "https://api.github.com/users/p1r473/following{/other_user}", "gists_url": "https://api.github.com/users/p1r473/gists{/gist_id}", "starred_url": "https://api.github.com/users/p1r473/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/p1r473/subscriptions", "organizations_url": "https://api.github.com/users/p1r473/orgs", "repos_url": "https://api.github.com/users/p1r473/repos", "events_url": "https://api.github.com/users/p1r473/events{/privacy}", "received_events_url": "https://api.github.com/users/p1r473/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2019-07-14T16:52:47Z", "updated_at": "2019-07-16T12:59:28Z", "closed_at": "2019-07-16T12:52:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI am trying to put a progress bar with an ETA, but instead of  Days, HH:MM:SS, I just want to show HHH:MM:SS\r\nHow can I do this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/197", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/197/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/197/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/197", "id": 459019815, "node_id": "MDU6SXNzdWU0NTkwMTk4MTU=", "number": 197, "title": "Progressbar not updating in Docker", "user": {"login": "halfdanrump", "id": 2919382, "node_id": "MDQ6VXNlcjI5MTkzODI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2919382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/halfdanrump", "html_url": "https://github.com/halfdanrump", "followers_url": "https://api.github.com/users/halfdanrump/followers", "following_url": "https://api.github.com/users/halfdanrump/following{/other_user}", "gists_url": "https://api.github.com/users/halfdanrump/gists{/gist_id}", "starred_url": "https://api.github.com/users/halfdanrump/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/halfdanrump/subscriptions", "organizations_url": "https://api.github.com/users/halfdanrump/orgs", "repos_url": "https://api.github.com/users/halfdanrump/repos", "events_url": "https://api.github.com/users/halfdanrump/events{/privacy}", "received_events_url": "https://api.github.com/users/halfdanrump/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1513373412, "node_id": "MDU6TGFiZWwxNTEzMzczNDEy", "url": "https://api.github.com/repos/WoLpH/python-progressbar/labels/no-activity", "name": "no-activity", "color": "ffffff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-21T05:46:38Z", "updated_at": "2019-08-29T14:09:36Z", "closed_at": "2019-08-29T14:09:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nProgressbar doesn't work as expected in Docker. Updates are not printed until the entire iterator wrapped in progressbar is finished. \r\n\r\nI'm using the stdlib logging module, and following the instructions [Progressbars with logging](https://pypi.org/project/progressbar2/). \r\n\r\n- calling `progressbar.streams.wrap_stderr()` before initializing `StreamHandler`\r\n- setting env var `WRAP_STDERR=true`\r\n- calling `progressbar.streams.flush()` at the very top of my script, and after each iteration in the iterator\r\n\r\nThe above doesn't seem to do the trick though. \r\n\r\nProgressbar works fine when running outside of Docker by the way\r\n\r\n#### Code\r\n\r\nCan post if needed.\r\n\r\n#### Versions\r\n\r\n- Python version: `3.7.3`\r\n- Python distribution/environment: vanilla\r\n- Operating System: OSX 10.13.6\r\n- Package version:  `progressbar2==3.42.0`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/196", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/196/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/196/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/196", "id": 451067225, "node_id": "MDU6SXNzdWU0NTEwNjcyMjU=", "number": 196, "title": "Use the width of the widget instead of progress.term_width", "user": {"login": "ritze", "id": 1204299, "node_id": "MDQ6VXNlcjEyMDQyOTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1204299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ritze", "html_url": "https://github.com/ritze", "followers_url": "https://api.github.com/users/ritze/followers", "following_url": "https://api.github.com/users/ritze/following{/other_user}", "gists_url": "https://api.github.com/users/ritze/gists{/gist_id}", "starred_url": "https://api.github.com/users/ritze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ritze/subscriptions", "organizations_url": "https://api.github.com/users/ritze/orgs", "repos_url": "https://api.github.com/users/ritze/repos", "events_url": "https://api.github.com/users/ritze/events{/privacy}", "received_events_url": "https://api.github.com/users/ritze/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-06-01T09:43:25Z", "updated_at": "2019-09-18T00:35:56Z", "closed_at": "2019-09-18T00:35:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Description\r\n\r\nIn `WidthWidgetMixin.check_size` `min_width`and `max_width` are checked against `progress.term_width`. I think this is wrong. It's more useful to check this against the current width of the widget itself.\r\n\r\nE.g. you won't display the progressbar if there are less than 7 characters.\r\n\r\n`term_width`: 28, `width` of progressbar = 7\r\n```\r\nMyVeryLongTitle |#### |  80%\r\n```\r\n\r\n`term_width`: 27, `width` of progressbar = 6\r\n```\r\nMyVeryLongTitle 80%\r\n```\r\n\r\n\r\n\r\n#### Code\r\n\r\n```\r\nclass WidthWidgetMixin(object):\r\n    '''Mixing to make sure widgets are only visible if the screen is within a\r\n    specified size range so the progressbar fits on both large and small\r\n    screens..\r\n    '''\r\n\r\n    def __init__(self, min_width=None, max_width=None, **kwargs):\r\n        self.min_width = min_width\r\n        self.max_width = max_width\r\n\r\n    def check_size(self, progress):\r\n        if self.min_width and self.min_width > progress.term_width:\r\n            return False\r\n        elif self.max_width and self.max_width < progress.term_width:\r\n            return False\r\n        else:\r\n            return True\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/193", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/193/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/193/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/193", "id": 449268860, "node_id": "MDU6SXNzdWU0NDkyNjg4NjA=", "number": 193, "title": "DynamicMessage can't handle strings", "user": {"login": "DarkRedman", "id": 367844, "node_id": "MDQ6VXNlcjM2Nzg0NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/367844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DarkRedman", "html_url": "https://github.com/DarkRedman", "followers_url": "https://api.github.com/users/DarkRedman/followers", "following_url": "https://api.github.com/users/DarkRedman/following{/other_user}", "gists_url": "https://api.github.com/users/DarkRedman/gists{/gist_id}", "starred_url": "https://api.github.com/users/DarkRedman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DarkRedman/subscriptions", "organizations_url": "https://api.github.com/users/DarkRedman/orgs", "repos_url": "https://api.github.com/users/DarkRedman/repos", "events_url": "https://api.github.com/users/DarkRedman/events{/privacy}", "received_events_url": "https://api.github.com/users/DarkRedman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-28T13:26:44Z", "updated_at": "2019-06-07T02:19:49Z", "closed_at": "2019-05-29T20:33:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nI prefered to use DynamicMessage instead of FormatCustomText because it's easier to set up.\r\nso I added a DynamicMessage widget and update its value with a string, and I get an error that the g format code doesn't work with an str\r\n\r\n`ValueError: Unknown format code 'g' for object of type 'str'`\r\n\r\n#### Code\r\n\r\n```python\r\nimport progressbar, time\r\n\r\nwidgets = [\r\n    progressbar.Percentage(),\r\n    progressbar.Bar(),\r\n    progressbar.DynamicMessage('user'),\r\n]\r\nwith progressbar.ProgressBar(max_value=100, widgets=widgets) as bar:\r\n    for i in range(100):\r\n        bar.update(i, user='me')\r\n        time.sleep(0.2)`\r\n```\r\n\r\n#### Versions\r\n\r\n- Python version: 3.7.3 (default, Mar 26 2019, 21:43:19) \r\n[GCC 8.2.1 20181127]\r\n- Python distribution/environment: CPython\r\n- Operating System: Antergos (Arch Linux)\r\n- Package version: 3.39.3\r\n\r\n### Solution\r\n\r\nIn order to fix it I changed the code of function __call__ of DynamicMessage like this\r\n\r\n```python\r\ndef __call__(self, progress, data):\r\n    val = data['dynamic_messages'][self.name]\r\n    if val:\r\n            if isinstance(val,str):\r\n                return self.name + ': ' + '{:6s}'.format(val)\r\n            else:\r\n                return self.name + ': ' + '{:6.3g}'.format(val)\r\n    else:\r\n        return self.name + ': ' + 6 * '-'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/191", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/191/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/191/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/191", "id": 438051297, "node_id": "MDU6SXNzdWU0MzgwNTEyOTc=", "number": 191, "title": "Can't use DataTransferBar()", "user": {"login": "Shinyhero36", "id": 36128190, "node_id": "MDQ6VXNlcjM2MTI4MTkw", "avatar_url": "https://avatars2.githubusercontent.com/u/36128190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shinyhero36", "html_url": "https://github.com/Shinyhero36", "followers_url": "https://api.github.com/users/Shinyhero36/followers", "following_url": "https://api.github.com/users/Shinyhero36/following{/other_user}", "gists_url": "https://api.github.com/users/Shinyhero36/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shinyhero36/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shinyhero36/subscriptions", "organizations_url": "https://api.github.com/users/Shinyhero36/orgs", "repos_url": "https://api.github.com/users/Shinyhero36/repos", "events_url": "https://api.github.com/users/Shinyhero36/events{/privacy}", "received_events_url": "https://api.github.com/users/Shinyhero36/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-28T12:27:12Z", "updated_at": "2019-05-29T10:37:00Z", "closed_at": "2019-05-29T10:37:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, i would like to display the download speed with my bar but i got thie error:\r\n```python\r\nprogressbar.bar.DataTransferBar object at 0x02F08D30\r\n```\r\n\r\nhere is a piece of my code:\r\n```python\r\nwidgets = ['Progression: ', progressbar.SimpleProgress(), ' | ', progressbar.Percentage(), progressbar.DataTransferBar()]# progressbar.Bar()]\r\nbar = progressbar.ProgressBar(widgets=widgets)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/190", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/190/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/190/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/190", "id": 435349832, "node_id": "MDU6SXNzdWU0MzUzNDk4MzI=", "number": 190, "title": "About the progressbar in enumerate", "user": {"login": "YangYang", "id": 17808880, "node_id": "MDQ6VXNlcjE3ODA4ODgw", "avatar_url": "https://avatars3.githubusercontent.com/u/17808880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YangYang", "html_url": "https://github.com/YangYang", "followers_url": "https://api.github.com/users/YangYang/followers", "following_url": "https://api.github.com/users/YangYang/following{/other_user}", "gists_url": "https://api.github.com/users/YangYang/gists{/gist_id}", "starred_url": "https://api.github.com/users/YangYang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YangYang/subscriptions", "organizations_url": "https://api.github.com/users/YangYang/orgs", "repos_url": "https://api.github.com/users/YangYang/repos", "events_url": "https://api.github.com/users/YangYang/events{/privacy}", "received_events_url": "https://api.github.com/users/YangYang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-20T03:06:07Z", "updated_at": "2019-04-20T08:20:26Z", "closed_at": "2019-04-20T08:20:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nHow could I use the bar in enumerate?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/187", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/187/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/187/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/187", "id": 424660946, "node_id": "MDU6SXNzdWU0MjQ2NjA5NDY=", "number": 187, "title": "TypeError: progressbar() missing 1 required positional argument: 'iterator'", "user": {"login": "50417", "id": 9717825, "node_id": "MDQ6VXNlcjk3MTc4MjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/9717825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/50417", "html_url": "https://github.com/50417", "followers_url": "https://api.github.com/users/50417/followers", "following_url": "https://api.github.com/users/50417/following{/other_user}", "gists_url": "https://api.github.com/users/50417/gists{/gist_id}", "starred_url": "https://api.github.com/users/50417/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/50417/subscriptions", "organizations_url": "https://api.github.com/users/50417/orgs", "repos_url": "https://api.github.com/users/50417/repos", "events_url": "https://api.github.com/users/50417/events{/privacy}", "received_events_url": "https://api.github.com/users/50417/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-03-24T21:15:14Z", "updated_at": "2019-03-24T21:40:13Z", "closed_at": "2019-03-24T21:40:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\n\r\n I followed the file_transfer_example from the [examples](https://progressbar-2.readthedocs.io/en/latest/examples.html) and get the error \r\n\r\n> TypeError: progressbar() missing 1 required positional argument: 'iterator'\r\n\r\n#### Code\r\n\r\nIf applicable, code to reproduce the issue and/or the stacktrace of the issue\r\n```\r\nimport time\r\nimport progressbar\r\n\r\nwidgets=[\r\n\t' [', progressbar.Timer(), '] ',\r\n\tprogressbar.Bar(),\r\n\t' (', progressbar.ETA(), ') ',\r\n]\r\nexample_list=[1,2,3,4,5]\r\nbar = progressbar.progressbar(max_value = len(example_list), widgets=widgets).start()\r\nbar_counter =0 \r\nfor i in example_list:\r\n\tbar_counter+=1\r\n\tbar.update(bar_counter)\r\n```\r\n#### Versions\r\n\r\n- Python version:3.6\r\n- Python distribution/environment:Anaconda\r\n- Operating System: Ubuntu Linux | Mac OSX\r\n- Package version: 3.39.3\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/186", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/186/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/186/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/186", "id": 420664276, "node_id": "MDU6SXNzdWU0MjA2NjQyNzY=", "number": 186, "title": "Use collections.abc if available", "user": {"login": "llchan", "id": 51099, "node_id": "MDQ6VXNlcjUxMDk5", "avatar_url": "https://avatars2.githubusercontent.com/u/51099?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llchan", "html_url": "https://github.com/llchan", "followers_url": "https://api.github.com/users/llchan/followers", "following_url": "https://api.github.com/users/llchan/following{/other_user}", "gists_url": "https://api.github.com/users/llchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/llchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llchan/subscriptions", "organizations_url": "https://api.github.com/users/llchan/orgs", "repos_url": "https://api.github.com/users/llchan/repos", "events_url": "https://api.github.com/users/llchan/events{/privacy}", "received_events_url": "https://api.github.com/users/llchan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-13T18:51:42Z", "updated_at": "2019-05-27T15:04:27Z", "closed_at": "2019-03-13T19:52:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nDescription of the problem\r\n```\r\n[...]/progressbar/bar.py:50: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working                                                                                                                                           \r\n  class ProgressBarBase(collections.Iterable, ProgressBarMixinBase):\r\n```\r\n\r\n#### Versions\r\n\r\n- Python version: 3.7.1\r\n- Python distribution/environment: CPython\r\n- Operating System: Linux\r\n- Package version: 3.39.2\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/185", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/185/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/185/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/185", "id": 419763555, "node_id": "MDU6SXNzdWU0MTk3NjM1NTU=", "number": 185, "title": "Progressbar does not update", "user": {"login": "1117x", "id": 35305292, "node_id": "MDQ6VXNlcjM1MzA1Mjky", "avatar_url": "https://avatars0.githubusercontent.com/u/35305292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1117x", "html_url": "https://github.com/1117x", "followers_url": "https://api.github.com/users/1117x/followers", "following_url": "https://api.github.com/users/1117x/following{/other_user}", "gists_url": "https://api.github.com/users/1117x/gists{/gist_id}", "starred_url": "https://api.github.com/users/1117x/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1117x/subscriptions", "organizations_url": "https://api.github.com/users/1117x/orgs", "repos_url": "https://api.github.com/users/1117x/repos", "events_url": "https://api.github.com/users/1117x/events{/privacy}", "received_events_url": "https://api.github.com/users/1117x/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-12T01:53:42Z", "updated_at": "2019-03-13T16:51:26Z", "closed_at": "2019-03-13T15:07:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nupdate() does not update the progressbar when no Timer() (or ETA() etc.) widget is used. \r\n\r\n#### Code\r\n\r\n    import progressbar, time\r\n    widgets = [progressbar.Percentage(), progressbar.Bar()]\r\n    bar = progressbar.ProgressBar(widgets=widgets, max_value=100).start()\r\n    for i in range(100):\r\n        time.sleep(0.5)\r\n        bar.update(i)\r\n\r\nAlways shows\r\n\r\n    N/A%|                                                                            |\r\n\r\nIf i use `bar.update(i, force=True)` it works as expected. If i change the second line to\r\n\r\n    widgets = [progressbar.Percentage(), progressbar.Bar(), progressbar.Timer()]\r\n\r\nit's also works as expected.\r\n\r\n#### Versions\r\n\r\n- Python version: 3.6.7 (default, Oct 22 2018, 11:32:17) [GCC 8.2.0]\r\n- Python distribution/environment: CPython\r\n- Operating System: Ubuntu Linux\r\n- Package version: 3.39.2\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/184", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/184/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/184/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/184", "id": 394419128, "node_id": "MDU6SXNzdWUzOTQ0MTkxMjg=", "number": 184, "title": "redirect_stdout and redirect_stderr behaviour", "user": {"login": "RuRo", "id": 3747318, "node_id": "MDQ6VXNlcjM3NDczMTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/3747318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RuRo", "html_url": "https://github.com/RuRo", "followers_url": "https://api.github.com/users/RuRo/followers", "following_url": "https://api.github.com/users/RuRo/following{/other_user}", "gists_url": "https://api.github.com/users/RuRo/gists{/gist_id}", "starred_url": "https://api.github.com/users/RuRo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RuRo/subscriptions", "organizations_url": "https://api.github.com/users/RuRo/orgs", "repos_url": "https://api.github.com/users/RuRo/repos", "events_url": "https://api.github.com/users/RuRo/events{/privacy}", "received_events_url": "https://api.github.com/users/RuRo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-27T15:14:27Z", "updated_at": "2018-12-30T23:23:33Z", "closed_at": "2018-12-30T23:23:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nThe redirect options don't properly restore stdout and stderr after ending. Instead of redirecting and restoring the current `sys.stdout`/`sys.stderr`, it redirects and restores whatever was the `sys.stdout`/`sys.stderr` at the time `progressbar` was imported.\r\n\r\n#### Code\r\n\r\ntest.py:\r\n```python\r\nimport sys\r\nimport progressbar as pb\r\n\r\nprint(sys.stderr)\r\nsys.stderr = open('somefile', 'w')\r\nprint(sys.stderr)\r\nfor i in pb.progressbar([1], redirect_stderr=True):\r\n    print(sys.stderr)\r\n    print(\"In wrapped stderr\", file=sys.stderr)\r\nprint(sys.stderr)\r\n```\r\n\r\nI expect the following to be printed:\r\n```\r\n<_io.TextIOWrapper name='<stderr>' mode='w' encoding='UTF-8'>\r\n<_io.TextIOWrapper name='somefile' mode='w' encoding='UTF-8'>\r\nN/A% (0 of 1) |                                                                                                                        | Elapsed Time: 0:00:00 ETA:  --:--:--\r\n<progressbar.utils.WrappingIO object at 0x7f7eac4e0128>\r\n100% (1 of 1) |########################################################################################################################| Elapsed Time: 0:00:00 Time:  0:00:00\r\n<_io.TextIOWrapper name='somefile' mode='w' encoding='UTF-8'>\r\n```\r\nAnd `somefile` should contain `In wrapped stderr`.\r\n\r\nInstead, `somefile` is empty and I get the following output:\r\n```\r\n<_io.TextIOWrapper name='<stderr>' mode='w' encoding='UTF-8'>\r\n<_io.TextIOWrapper name='somefile' mode='w' encoding='UTF-8'>\r\nN/A% (0 of 1) |                                                                                                                        | Elapsed Time: 0:00:00 ETA:  --:--:--\r\n<progressbar.utils.WrappingIO object at 0x7f725dc170b8>\r\nIn wrapped stderr                                                                                                                                                            \r\n100% (1 of 1) |########################################################################################################################| Elapsed Time: 0:00:00 Time:  0:00:00\r\n<_io.TextIOWrapper name='<stderr>' mode='w' encoding='UTF-8'>\r\n```\r\n\r\nAs you can see, the `In wrapped stderr` was printed to the original `sys.stderr`, also, the `sys.stderr` was restored to the value it had, when `progressbar` was imported, and not `somefile`.\r\n\r\n#### Versions\r\n\r\n- Python version: `3.7.1 (default, Oct 22 2018, 10:41:28) [GCC 8.2.1 20180831]`\r\n- Python distribution/environment: Any\r\n- Operating System: Any? Ubuntu Linux for sure\r\n- Package version: `3.38.0`\r\n\r\n#### Proposed fix\r\n\r\nInstead of using a singleton `utils.streams`, maybe create a new `StreamWrapper` every time a progressbar is created?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/183", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/183/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/183/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/183", "id": 391347470, "node_id": "MDU6SXNzdWUzOTEzNDc0NzA=", "number": 183, "title": "Python 3.6.5 TypeError even when using example codes", "user": {"login": "Chadhendrixs", "id": 31228448, "node_id": "MDQ6VXNlcjMxMjI4NDQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/31228448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chadhendrixs", "html_url": "https://github.com/Chadhendrixs", "followers_url": "https://api.github.com/users/Chadhendrixs/followers", "following_url": "https://api.github.com/users/Chadhendrixs/following{/other_user}", "gists_url": "https://api.github.com/users/Chadhendrixs/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chadhendrixs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chadhendrixs/subscriptions", "organizations_url": "https://api.github.com/users/Chadhendrixs/orgs", "repos_url": "https://api.github.com/users/Chadhendrixs/repos", "events_url": "https://api.github.com/users/Chadhendrixs/events{/privacy}", "received_events_url": "https://api.github.com/users/Chadhendrixs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-15T05:50:07Z", "updated_at": "2018-12-16T01:40:38Z", "closed_at": "2018-12-16T01:40:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nNo matter what progressbar command is run in terminal (Python 3.6.5 (v3.6.5:f59c0932b4, Mar 28 2018, 17:00:18) [MSC v.1900 64 bit (AMD64)] on win32) the same re-occurring error will appear when running any example codes, and/or copying example codes to terminal: \r\n`Traceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: 'module' object is not callable`\r\n\r\nI have yet to find a solution to this issue, nor have I figured out how to solve it as it even occurs when running examples.py\r\n\r\n#### Code\r\n\r\n```\r\n>>> for i in progressbar.progressbar(range(100)):\r\n     time.sleep(0.02)\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: 'module' object is not callable\r\n```\r\n\r\n---\r\n\r\n```\r\n>>> import time\r\n>>> import progressbar\r\n>>>\r\n>>> widgets=[\r\n     ' [', progressbar.Timer(), '] ',\r\n     progressbar.Bar(),\r\n     ' (', progressbar.ETA(), ') ',\r\n ]\r\n>>> for i in progressbar.progressbar(range(20), widgets=widgets):\r\n     time.sleep(0.1)\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: 'module' object is not callable\r\n```\r\n\r\n---\r\n\r\nNow either there's an easy solution and I'm just an idiot, or something's pretty broken.\r\n\r\n#### Versions\r\n\r\n- Python version: 3.6.5 (v3.6.5:f59c0932b4, Mar 28 2018, 17:00:18) [MSC v.1900 64 bit (AMD64)]\r\n- Python distribution/environment: Windows CMD (Pretty sure that's all the information given for this spot)\r\n- Operating System: Windows 10\r\n- Package version: 2.5\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/182", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/182/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/182/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/182", "id": 390657859, "node_id": "MDU6SXNzdWUzOTA2NTc4NTk=", "number": 182, "title": "Failing test with python 3.7 (and two that seem to be armv7 specific)", "user": {"login": "sanjayankur31", "id": 102575, "node_id": "MDQ6VXNlcjEwMjU3NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanjayankur31", "html_url": "https://github.com/sanjayankur31", "followers_url": "https://api.github.com/users/sanjayankur31/followers", "following_url": "https://api.github.com/users/sanjayankur31/following{/other_user}", "gists_url": "https://api.github.com/users/sanjayankur31/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanjayankur31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanjayankur31/subscriptions", "organizations_url": "https://api.github.com/users/sanjayankur31/orgs", "repos_url": "https://api.github.com/users/sanjayankur31/repos", "events_url": "https://api.github.com/users/sanjayankur31/events{/privacy}", "received_events_url": "https://api.github.com/users/sanjayankur31/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-12-13T12:31:09Z", "updated_at": "2018-12-17T01:47:49Z", "closed_at": "2018-12-17T01:47:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nWhile building for Fedora 30, which has py3.7, we get these test failures:\r\n\r\n```\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.7.1, pytest-3.9.3, py-1.7.0, pluggy-0.8.0\r\nrootdir: /builddir/build/BUILD/progressbar2-3.38.0, inifile: pytest.ini\r\nplugins: pep8-1.0.6, flakes-4.0.0, cov-2.5.1\r\ncollected 183 items\r\nexamples.py ..                                                           [  0%]\r\nsetup.py ..                                                              [  1%]\r\nprogressbar/__init__.py ..                                               [  1%]\r\nprogressbar/__about__.py ..                                              [  2%]\r\nprogressbar/bar.py .....                                                 [  4%]\r\nprogressbar/base.py ..                                                   [  4%]\r\nprogressbar/shortcuts.py ..                                              [  5%]\r\nprogressbar/utils.py ..                                                  [  6%]\r\nprogressbar/widgets.py ...F                                              [  7%]\r\ntests/conftest.py ..                                                     [  8%]\r\ntests/test_custom_widgets.py ....                                        [  9%]\r\ntests/test_data.py ..............                                        [ 16%]\r\ntests/test_data_transfer_bar.py ....                                     [ 18%]\r\ntests/test_empty.py ....                                                 [ 20%]\r\ntests/test_end.py ....                                                   [ 21%]\r\ntests/test_failure.py .................                                  [ 30%]\r\ntests/test_flush.py ...                                                  [ 31%]\r\ntests/test_iterators.py ........                                         [ 35%]\r\ntests/test_large_values.py ....                                          [ 37%]\r\ntests/test_misc.py ...                                                   [ 38%]\r\ntests/test_monitor_progress.py ......                                    [ 40%]\r\ntests/test_progressbar.py .....                                          [ 43%]\r\ntests/test_samples.py .....                                              [ 45%]\r\ntests/test_speed.py ................                                     [ 53%]\r\ntests/test_stream.py ........                                            [ 57%]\r\ntests/test_terminal.py .............                                     [ 63%]\r\ntests/test_timed.py ........                                             [ 67%]\r\ntests/test_timer.py ....                                                 [ 69%]\r\ntests/test_unicode.py ........                                           [ 73%]\r\ntests/test_unknown_length.py .....                                       [ 75%]\r\ntests/test_widgets.py ........FF                                         [ 80%]\r\ntests/test_with.py .....\r\n=================================== FAILURES ===================================\r\n__________________ [doctest] progressbar.widgets.SamplesMixin __________________\r\n234     >>> class progress:\r\n235     ...     last_update_time = datetime.datetime.now()\r\n236     ...     value = 1\r\n237     ...     extra = dict()\r\n238 \r\n239     >>> samples = SamplesMixin(samples=2)\r\n240     >>> samples(progress, None, True)\r\n241     (None, None)\r\n242     >>> progress.last_update_time += datetime.timedelta(seconds=1)\r\n243     >>> samples(progress, None, True)\r\nExpected:\r\n    (datetime.timedelta(0, 1), 0)\r\nGot:\r\n    (datetime.timedelta(seconds=1), 0)\r\n/builddir/build/BUILD/progressbar2-3.38.0/progressbar/widgets.py:243: DocTestFailure\r\n____________________ test_all_widgets_large_values[1000000] ____________________\r\nmax_value = 1000000\r\n    @pytest.mark.parametrize('max_value', [10 ** 6, 10 ** 7])\r\n    def test_all_widgets_large_values(max_value):\r\n        widgets = [\r\n            progressbar.Timer(),\r\n            progressbar.ETA(),\r\n            progressbar.AdaptiveETA(),\r\n            progressbar.AbsoluteETA(),\r\n            progressbar.DataSize(),\r\n            progressbar.FileTransferSpeed(),\r\n            progressbar.AdaptiveTransferSpeed(),\r\n            progressbar.AnimatedMarker(),\r\n            progressbar.Counter(),\r\n            progressbar.Percentage(),\r\n            progressbar.FormatLabel('%(value)d/%(max_value)d'),\r\n            progressbar.SimpleProgress(),\r\n            progressbar.Bar(fill=lambda progress, data, width: '#'),\r\n            progressbar.ReverseBar(),\r\n            progressbar.BouncingBar(),\r\n            progressbar.FormatCustomText('Custom %(text)s', dict(text='text')),\r\n        ]\r\n        p = progressbar.ProgressBar(widgets=widgets, max_value=max_value)\r\n        p.update()\r\n        time.sleep(1)\r\n>       p.update()\r\ntests/test_widgets.py:113: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nprogressbar/bar.py:589: in update\r\n    StdRedirectMixin.update(self, value=value)\r\nprogressbar/bar.py:146: in update\r\n    DefaultFdMixin.update(self, value=value)\r\nprogressbar/bar.py:68: in update\r\n    line = converters.to_unicode('\\r' + self._format_line())\r\nprogressbar/bar.py:518: in _format_line\r\n    widgets = ''.join(self._to_unicode(self._format_widgets()))\r\nprogressbar/bar.py:493: in _format_widgets\r\n    widget_output = converters.to_unicode(widget(self, data))\r\nprogressbar/widgets.py:356: in __call__\r\n    data['eta'] = utils.format_time(data['eta_seconds'])\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\ntimestamp = FakeDatetime(9999, 12, 31, 23, 59, 59, 999999)\r\nprecision = datetime.timedelta(seconds=1)\r\n    def format_time(timestamp, precision=datetime.timedelta(seconds=1)):\r\n        '''Formats timedelta/datetime/seconds\r\n    \r\n        >>> format_time('1')\r\n        '0:00:01'\r\n        >>> format_time(1.234)\r\n        '0:00:01'\r\n        >>> format_time(1)\r\n        '0:00:01'\r\n        >>> format_time(datetime.datetime(2000, 1, 2, 3, 4, 5, 6))\r\n        '2000-01-02 03:04:05'\r\n        >>> format_time(datetime.date(2000, 1, 2))\r\n        '2000-01-02'\r\n        >>> format_time(datetime.timedelta(seconds=3661))\r\n        '1:01:01'\r\n        >>> format_time(None)\r\n        '--:--:--'\r\n        >>> format_time(format_time)  # doctest: +ELLIPSIS\r\n        Traceback (most recent call last):\r\n            ...\r\n        TypeError: Unknown type ...\r\n    \r\n        '''\r\n        precision_seconds = precision.total_seconds()\r\n    \r\n        if isinstance(timestamp, six.string_types + six.integer_types + (float, )):\r\n            try:\r\n                castfunc = six.integer_types[-1]\r\n                timestamp = datetime.timedelta(seconds=castfunc(timestamp))\r\n            except OverflowError:  # pragma: no cover\r\n                timestamp = None\r\n    \r\n        if isinstance(timestamp, datetime.timedelta):\r\n            seconds = timestamp.total_seconds()\r\n            # Truncate the number to the given precision\r\n            seconds = seconds - (seconds % precision_seconds)\r\n    \r\n            return str(datetime.timedelta(seconds=seconds))\r\n        elif isinstance(timestamp, datetime.datetime):\r\n            # Python 2 doesn't have the timestamp method\r\n            if hasattr(timestamp, 'timestamp'):  # pragma: no cover\r\n>               seconds = timestamp.timestamp()\r\nE               OverflowError: timestamp out of range for platform time_t\r\n/usr/lib/python3.7/site-packages/python_utils/time.py:77: OverflowError\r\n----------------------------- Captured stderr call -----------------------------\r\n\r\n                                                                               \r\n\r\nElapsed Time: 0:00:00ETA:  --:--:--ETA:  --:--:--Estimated finish time:  ----/--/-- --:--:--  0.0 B  0.0 s/B  0.0 s/B/0N/A%0/10000000 of 1000000||||||Custom text\r\n                                                                               \r\n___________________ test_all_widgets_large_values[10000000] ____________________\r\nmax_value = 10000000\r\n    @pytest.mark.parametrize('max_value', [10 ** 6, 10 ** 7])\r\n    def test_all_widgets_large_values(max_value):\r\n        widgets = [\r\n            progressbar.Timer(),\r\n            progressbar.ETA(),\r\n            progressbar.AdaptiveETA(),\r\n            progressbar.AbsoluteETA(),\r\n            progressbar.DataSize(),\r\n            progressbar.FileTransferSpeed(),\r\n            progressbar.AdaptiveTransferSpeed(),\r\n            progressbar.AnimatedMarker(),\r\n            progressbar.Counter(),\r\n            progressbar.Percentage(),\r\n            progressbar.FormatLabel('%(value)d/%(max_value)d'),\r\n            progressbar.SimpleProgress(),\r\n            progressbar.Bar(fill=lambda progress, data, width: '#'),\r\n            progressbar.ReverseBar(),\r\n            progressbar.BouncingBar(),\r\n            progressbar.FormatCustomText('Custom %(text)s', dict(text='text')),\r\n        ]\r\n        p = progressbar.ProgressBar(widgets=widgets, max_value=max_value)\r\n        p.update()\r\n        time.sleep(1)\r\n>       p.update()\r\ntests/test_widgets.py:113: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nprogressbar/bar.py:589: in update\r\n    StdRedirectMixin.update(self, value=value)\r\nprogressbar/bar.py:146: in update\r\n    DefaultFdMixin.update(self, value=value)\r\nprogressbar/bar.py:68: in update\r\n    line = converters.to_unicode('\\r' + self._format_line())\r\nprogressbar/bar.py:518: in _format_line\r\n    widgets = ''.join(self._to_unicode(self._format_widgets()))\r\nprogressbar/bar.py:493: in _format_widgets\r\n    widget_output = converters.to_unicode(widget(self, data))\r\nprogressbar/widgets.py:356: in __call__\r\n    data['eta'] = utils.format_time(data['eta_seconds'])\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\ntimestamp = FakeDatetime(9999, 12, 31, 23, 59, 59, 999999)\r\nprecision = datetime.timedelta(seconds=1)\r\n    def format_time(timestamp, precision=datetime.timedelta(seconds=1)):\r\n        '''Formats timedelta/datetime/seconds\r\n    \r\n        >>> format_time('1')\r\n        '0:00:01'\r\n        >>> format_time(1.234)\r\n        '0:00:01'\r\n        >>> format_time(1)\r\n        '0:00:01'\r\n        >>> format_time(datetime.datetime(2000, 1, 2, 3, 4, 5, 6))\r\n        '2000-01-02 03:04:05'\r\n        >>> format_time(datetime.date(2000, 1, 2))\r\n        '2000-01-02'\r\n        >>> format_time(datetime.timedelta(seconds=3661))\r\n        '1:01:01'\r\n        >>> format_time(None)\r\n        '--:--:--'\r\n        >>> format_time(format_time)  # doctest: +ELLIPSIS\r\n        Traceback (most recent call last):\r\n            ...\r\n        TypeError: Unknown type ...\r\n    \r\n        '''\r\n        precision_seconds = precision.total_seconds()\r\n    \r\n        if isinstance(timestamp, six.string_types + six.integer_types + (float, )):\r\n            try:\r\n                castfunc = six.integer_types[-1]\r\n                timestamp = datetime.timedelta(seconds=castfunc(timestamp))\r\n            except OverflowError:  # pragma: no cover\r\n                timestamp = None\r\n    \r\n        if isinstance(timestamp, datetime.timedelta):\r\n            seconds = timestamp.total_seconds()\r\n            # Truncate the number to the given precision\r\n            seconds = seconds - (seconds % precision_seconds)\r\n    \r\n            return str(datetime.timedelta(seconds=seconds))\r\n        elif isinstance(timestamp, datetime.datetime):\r\n            # Python 2 doesn't have the timestamp method\r\n            if hasattr(timestamp, 'timestamp'):  # pragma: no cover\r\n>               seconds = timestamp.timestamp()\r\nE               OverflowError: timestamp out of range for platform time_t\r\n/usr/lib/python3.7/site-packages/python_utils/time.py:77: OverflowError\r\n----------------------------- Captured stderr call -----------------------------\r\n\r\n                                                                               \r\n\r\nElapsed Time: 0:00:00ETA:  --:--:--ETA:  --:--:--Estimated finish time:  ----/--/-- --:--:--  0.0 B  0.0 s/B  0.0 s/B/0N/A%0/100000000 of 10000000||||||Custom text\r\n                                                                               \r\n==================== 3 failed, 180 passed in 17.35 seconds =====================\r\n```\r\n\r\nI can reproduce the first failure here in a fresh py3.7 virtual environment on my x86_64 machine. The other two with the overflows appear to be arm specific?\r\n\r\n#### Versions\r\n\r\n- Python version: `import sys; print(sys.version)`\r\n\r\nThis is from the virtual environment:\r\n$ python -c 'import sys; print (sys.version)'\r\n3.7.1 (default, Nov 23 2018, 10:01:49) \r\n[GCC 8.2.1 20181105 (Red Hat 8.2.1-5)]\r\n\r\nFedora 30 is also at Python 3.7.1. The complete build failure log is attached: \r\n[build.txt](https://github.com/WoLpH/python-progressbar/files/2675942/build.txt)\r\n\r\n\r\n- Python distribution/environment: CPython\r\n- Operating System: Fedora 29 x86_64 for the first failure, Fedora 30 armv7 for the second one.\r\n- Package version: `import progressbar; print(progressbar.__version__)`: 3.38.0\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/181", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/181/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/181/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/181", "id": 388986868, "node_id": "MDU6SXNzdWUzODg5ODY4Njg=", "number": 181, "title": "Make release with fix for WRAP_STDOUT/ERR", "user": {"login": "ikonst", "id": 1186084, "node_id": "MDQ6VXNlcjExODYwODQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1186084?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikonst", "html_url": "https://github.com/ikonst", "followers_url": "https://api.github.com/users/ikonst/followers", "following_url": "https://api.github.com/users/ikonst/following{/other_user}", "gists_url": "https://api.github.com/users/ikonst/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikonst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikonst/subscriptions", "organizations_url": "https://api.github.com/users/ikonst/orgs", "repos_url": "https://api.github.com/users/ikonst/repos", "events_url": "https://api.github.com/users/ikonst/events{/privacy}", "received_events_url": "https://api.github.com/users/ikonst/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-09T04:43:02Z", "updated_at": "2018-12-16T01:45:05Z", "closed_at": "2018-12-16T01:45:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The issue is fixed here in master branch:\r\nhttps://github.com/WoLpH/python-progressbar/commit/5df7e08edb1b6d0524ec82bf45ef929d343975cb\r\n(not fixed on develop branch)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/180", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/180/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/180/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/180", "id": 388321744, "node_id": "MDU6SXNzdWUzODgzMjE3NDQ=", "number": 180, "title": "Support for sub-progress widgets?", "user": {"login": "EricG-Personal", "id": 931443, "node_id": "MDQ6VXNlcjkzMTQ0Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/931443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EricG-Personal", "html_url": "https://github.com/EricG-Personal", "followers_url": "https://api.github.com/users/EricG-Personal/followers", "following_url": "https://api.github.com/users/EricG-Personal/following{/other_user}", "gists_url": "https://api.github.com/users/EricG-Personal/gists{/gist_id}", "starred_url": "https://api.github.com/users/EricG-Personal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EricG-Personal/subscriptions", "organizations_url": "https://api.github.com/users/EricG-Personal/orgs", "repos_url": "https://api.github.com/users/EricG-Personal/repos", "events_url": "https://api.github.com/users/EricG-Personal/events{/privacy}", "received_events_url": "https://api.github.com/users/EricG-Personal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-06T17:36:10Z", "updated_at": "2018-12-16T01:41:44Z", "closed_at": "2018-12-16T01:41:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nIn my case, I need to download many large files. So, I can have a progress bar with an adaptive ETA tracking the ETA as each file completes. However, what I would like to be able to do is add a widget that tracks the percent compete of the files themselves.\r\n\r\nAn example of what this might look like is:\r\n\r\n50% |######      |file: 10% | ETA: 2:24:00\r\n\r\nSo, what this bar would be telling me is that I have downloaded 50% of my files. The current file, which is downloading is 10% complete. To finish downloading all of the files will take another 2 hours and 24 minutes.\r\n\r\nIs this possible?\r\n\r\nI am not sure how I can send information to the file % widget and keep the data separate from the surrounding Progressbar.\r\n\r\nIf this is not possible, consider it a feature request.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/177", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/177/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/177/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/177", "id": 380703536, "node_id": "MDU6SXNzdWUzODA3MDM1MzY=", "number": 177, "title": "Compatibility with python-progressbar v1?", "user": {"login": "sanjayankur31", "id": 102575, "node_id": "MDQ6VXNlcjEwMjU3NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanjayankur31", "html_url": "https://github.com/sanjayankur31", "followers_url": "https://api.github.com/users/sanjayankur31/followers", "following_url": "https://api.github.com/users/sanjayankur31/following{/other_user}", "gists_url": "https://api.github.com/users/sanjayankur31/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanjayankur31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanjayankur31/subscriptions", "organizations_url": "https://api.github.com/users/sanjayankur31/orgs", "repos_url": "https://api.github.com/users/sanjayankur31/repos", "events_url": "https://api.github.com/users/sanjayankur31/events{/privacy}", "received_events_url": "https://api.github.com/users/sanjayankur31/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-14T13:42:37Z", "updated_at": "2018-11-14T15:45:57Z", "closed_at": "2018-11-14T15:43:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'm a package maintainer at Fedora, and we've now got a bit of an issue at our hands. Some python packages there still use the \"original\" progressbar, but there's new software that uses this progressbar2 module now. Since progressbar2 (this one) provides the same module, there's a conflict that needs resolution. (The original one has received a few commit recently, so it isn't unmaintained any more.)\r\n\r\nIf the two are compatible, then we can make a downstream decision to pick one (the better maintained one), and it will not require us to make any changes to the software that uses the other. However if they are not, we will have to decide on which one to provide---which will require us to patch software that uses the other version (or request their upstreams to do so etc). \r\n\r\nSo, is progressbar2 meant to be compatible with the older one, or has it diverged too much for that to be the case now?\r\n\r\nThanks for maintaining this one, and sorry for the non dev question. We didn't want to make a decision without checking here first.\r\n\r\nCheers,\r\nAnkur", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/175", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/175/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/175/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/175", "id": 370844191, "node_id": "MDU6SXNzdWUzNzA4NDQxOTE=", "number": 175, "title": "Want time-sensitive widgets to be capable of updating less frequently than 100ms", "user": {"login": "MattF-NSIDC", "id": 18539827, "node_id": "MDQ6VXNlcjE4NTM5ODI3", "avatar_url": "https://avatars0.githubusercontent.com/u/18539827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MattF-NSIDC", "html_url": "https://github.com/MattF-NSIDC", "followers_url": "https://api.github.com/users/MattF-NSIDC/followers", "following_url": "https://api.github.com/users/MattF-NSIDC/following{/other_user}", "gists_url": "https://api.github.com/users/MattF-NSIDC/gists{/gist_id}", "starred_url": "https://api.github.com/users/MattF-NSIDC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MattF-NSIDC/subscriptions", "organizations_url": "https://api.github.com/users/MattF-NSIDC/orgs", "repos_url": "https://api.github.com/users/MattF-NSIDC/repos", "events_url": "https://api.github.com/users/MattF-NSIDC/events{/privacy}", "received_events_url": "https://api.github.com/users/MattF-NSIDC/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-10-16T23:53:03Z", "updated_at": "2018-12-16T01:41:14Z", "closed_at": "2018-12-16T01:41:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nI am writing a progress bar for a program that will sometimes be executed by an automated system that gathers stdout and logs it. I want my program to be capable of updating the progressbar once every ~10 seconds in that context so as to not put spam in to the logs. When I set poll_interval to a very small value I notice that updates are occurring more frequently, but I cannot get them to occur more slowly than once a second, no matter what value I try. I don't care if the timer is out of date; I care that my logs have a reasonable number of entries.\r\n\r\nI believe the cause is the `TimeSensitiveWidgetBase` defining a non-overrideable value for `INTERVAL` of 100ms.\r\n\r\nUnless I've missed something in the docs and the source code, I don't think this is currently possible.\r\n\r\n#### Code\r\n\r\n```\r\npb_widgets = ['[ ', Timer(), ' ]  ', Counter(), '/', str(num_elements),                                                                                                                                                                                                                                         \r\n    ' granules collected... (cache size:', lambda a,b: str(len(cache)), ')']                                                                                                                                                                                                                    \r\npb = ProgressBar(widgets=pb_widgets, poll_interval=10)\r\n```\r\n\r\n#### Versions\r\n\r\n- Python version: \r\n```\r\n>>> print(sys.version)\r\n3.5.4 | packaged by conda-forge | (default, Dec  9 2017, 16:18:50) \r\n[GCC 4.8.2 20140120 (Red Hat 4.8.2-15)]\r\n```\r\n- Python distribution/environment: Anaconda\r\n- Operating System: Ubuntu Linux 14\r\n- Package version: `3.10.1`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/174", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/174/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/174/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/174", "id": 369557113, "node_id": "MDU6SXNzdWUzNjk1NTcxMTM=", "number": 174, "title": "The Bar can't be correctly displayed when the two widgets ETA() and Timer() are been called?", "user": {"login": "SWHL", "id": 28639377, "node_id": "MDQ6VXNlcjI4NjM5Mzc3", "avatar_url": "https://avatars2.githubusercontent.com/u/28639377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SWHL", "html_url": "https://github.com/SWHL", "followers_url": "https://api.github.com/users/SWHL/followers", "following_url": "https://api.github.com/users/SWHL/following{/other_user}", "gists_url": "https://api.github.com/users/SWHL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SWHL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SWHL/subscriptions", "organizations_url": "https://api.github.com/users/SWHL/orgs", "repos_url": "https://api.github.com/users/SWHL/repos", "events_url": "https://api.github.com/users/SWHL/events{/privacy}", "received_events_url": "https://api.github.com/users/SWHL/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-12T13:41:57Z", "updated_at": "2018-10-18T00:23:15Z", "closed_at": "2018-10-18T00:23:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\nThank your code! I really like this project.\r\n**The Bar can't be correctly displayed when the two widgets ETA() and Timer() are been called?**\r\n\r\n## This is the case that  the Timer() or ETA() is been called.\r\n#### Code\r\n```python\r\nimport time\r\nfrom progressbar import ProgressBar, Percentage, Bar, DynamicMessage, Timer, ETA\r\nimport random\r\nimport progressbar; print(progressbar.__version__)\r\nimport sys; print(sys.version)\r\n\r\nwidgets = ['Test:', Percentage(), Bar(), DynamicMessage('los'), DynamicMessage('accuracy')\r\n           , ETA()]\r\nwith ProgressBar(widgets=widgets, maxval=2000) as pbar:\r\n    max_so_far = 0\r\n    min_so_far = 1\r\n    for i in range(2000):\r\n        val = random.random()\r\n        if val > max_so_far:\r\n            max_so_far = val\r\n        if val < min_so_far:\r\n            min_so_far = val\r\n        time.sleep(.01)\r\n        pbar.update(i, accuracy=max_so_far, los=min_so_far)\r\n```\r\n### Results\r\n```\r\n3.38.0\r\n3.6.6 |Anaconda, Inc.| (default, Jun 28 2018, 11:27:44) [MSC v.1900 64 bit (AMD64)]\r\nTest: 26%|######                    |los: 0.00102accuracy:  0.999ETA:   0:00:14\r\nor \r\n3.38.0\r\n3.6.6 |Anaconda, Inc.| (default, Jun 28 2018, 11:27:44) [MSC v.1900 64 bit (AMD64)]\r\nTest: 21%|###               |los: 0.000967accuracy:  0.999Elapsed Time: 0:00:04\r\n```\r\n\r\n## This is the case that Timer() and ETA() are been called.\r\n```python\r\n# Initialization\r\nimport time\r\nfrom progressbar import ProgressBar, Percentage, Bar, DynamicMessage, Timer, ETA\r\nimport random\r\n\r\nimport progressbar; print(progressbar.__version__)\r\n# 3.38.0\r\n\r\nwidgets = ['Test:', Percentage(), Bar(), DynamicMessage('los'), DynamicMessage('accuracy')\r\n           , Timer(), ETA()]\r\nwith ProgressBar(widgets=widgets, maxval=2000) as pbar:\r\n    max_so_far = 0\r\n    min_so_far = 1\r\n    for i in range(2000):\r\n        val = random.random()\r\n        if val > max_so_far:\r\n            max_so_far = val\r\n        if val < min_so_far:\r\n            min_so_far = val\r\n        time.sleep(.01)\r\n        pbar.update(i, accuracy=max_so_far, los=min_so_far)\r\n```\r\n### Result **( this case does't display the bar )**???\r\n```\r\n3.38.0\r\n3.6.6 |Anaconda, Inc.| (default, Jun 28 2018, 11:27:44) [MSC v.1900 64 bit (AMD64)]\r\nTest: 19%|     |los: 0.00198accuracy:  0.999ETA:   0:00:16Elapsed Time: 0:00:03\r\n```\r\n## Versions\r\n\r\n- Python version: 3.6.6\r\n- Python distribution/environment: Anaconda\r\n- Operating System: Window7\r\n- Package version: 3.38.0\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/173", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/173/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/173/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/173", "id": 367604096, "node_id": "MDU6SXNzdWUzNjc2MDQwOTY=", "number": 173, "title": "Jupyter mixes stdout and stderr output in non-deterministic order", "user": {"login": "Guzzii", "id": 12568101, "node_id": "MDQ6VXNlcjEyNTY4MTAx", "avatar_url": "https://avatars1.githubusercontent.com/u/12568101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Guzzii", "html_url": "https://github.com/Guzzii", "followers_url": "https://api.github.com/users/Guzzii/followers", "following_url": "https://api.github.com/users/Guzzii/following{/other_user}", "gists_url": "https://api.github.com/users/Guzzii/gists{/gist_id}", "starred_url": "https://api.github.com/users/Guzzii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Guzzii/subscriptions", "organizations_url": "https://api.github.com/users/Guzzii/orgs", "repos_url": "https://api.github.com/users/Guzzii/repos", "events_url": "https://api.github.com/users/Guzzii/events{/privacy}", "received_events_url": "https://api.github.com/users/Guzzii/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1513373412, "node_id": "MDU6TGFiZWwxNTEzMzczNDEy", "url": "https://api.github.com/repos/WoLpH/python-progressbar/labels/no-activity", "name": "no-activity", "color": "ffffff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-10-07T23:15:02Z", "updated_at": "2020-06-26T04:59:56Z", "closed_at": "2020-06-26T04:59:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nA dummy progress bar would be created after finishing each outer iteration, looking like below. The code to reproduce the issue is attached. It works fine without `print` though. Is there any way to avoid this behavior?\r\n```bash\r\n100% (100 of 100) |######################| Elapsed Time: 0:00:01 Time:  0:00:01\r\n 16% (16 of 100) |###                    | Elapsed Time: 0:00:00 ETA:   0:00:01\r\n0\r\n100% (100 of 100) |######################| Elapsed Time: 0:00:01 Time:  0:00:01\r\n 16% (16 of 100) |###                    | Elapsed Time: 0:00:00 ETA:   0:00:00\r\n1\r\n100% (100 of 100) |######################| Elapsed Time: 0:00:01 Time:  0:00:01\r\n2\r\n```\r\n#### Code\r\n```python\r\nimport time\r\nimport progressbar\r\n\r\nfor i in range(3):\r\n    for j in progressbar.progressbar(range(0, 100)):\r\n        time.sleep(0.01)\r\n    print(i)\r\n```\r\n#### Versions\r\n\r\n- Python version: 3.6\r\n- Python distribution/environment: Anaconda\r\n- Operating System: macOS 10.13\r\n- Package version: 3.37.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/172", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/172/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/172/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/172", "id": 357890406, "node_id": "MDU6SXNzdWUzNTc4OTA0MDY=", "number": 172, "title": "Range starts at 0, not 1", "user": {"login": "matthannan1", "id": 12359612, "node_id": "MDQ6VXNlcjEyMzU5NjEy", "avatar_url": "https://avatars2.githubusercontent.com/u/12359612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthannan1", "html_url": "https://github.com/matthannan1", "followers_url": "https://api.github.com/users/matthannan1/followers", "following_url": "https://api.github.com/users/matthannan1/following{/other_user}", "gists_url": "https://api.github.com/users/matthannan1/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthannan1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthannan1/subscriptions", "organizations_url": "https://api.github.com/users/matthannan1/orgs", "repos_url": "https://api.github.com/users/matthannan1/repos", "events_url": "https://api.github.com/users/matthannan1/events{/privacy}", "received_events_url": "https://api.github.com/users/matthannan1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-07T01:54:01Z", "updated_at": "2018-11-01T01:07:31Z", "closed_at": "2018-11-01T01:07:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nProgress bar starts at 0, even if I specify to start at 1\r\n\r\n#### Code\r\n```python\r\nfor page_number in progressbar.progressbar(range(1, max_pages+1)):\r\n    do_stuff\r\n```\r\n#### Versions\r\n\r\n- Python 3.6.5 :: Anaconda, Inc.\r\n- Operating System: Windows 10 Home x64\r\n- Package version: 3.38.0\r\n\r\nOutput at start:\r\n```\r\n0% (0 of 20) |\r\n```\r\nIt doesn't complain about the range(1,   ) being in there, it just seems to roll right over it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/170", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/170/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/170/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/170", "id": 351230789, "node_id": "MDU6SXNzdWUzNTEyMzA3ODk=", "number": 170, "title": "Clear line to the right of cursor, for FormatCustomText that may get shorter", "user": {"login": "terrisgit", "id": 6069365, "node_id": "MDQ6VXNlcjYwNjkzNjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6069365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrisgit", "html_url": "https://github.com/terrisgit", "followers_url": "https://api.github.com/users/terrisgit/followers", "following_url": "https://api.github.com/users/terrisgit/following{/other_user}", "gists_url": "https://api.github.com/users/terrisgit/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrisgit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrisgit/subscriptions", "organizations_url": "https://api.github.com/users/terrisgit/orgs", "repos_url": "https://api.github.com/users/terrisgit/repos", "events_url": "https://api.github.com/users/terrisgit/events{/privacy}", "received_events_url": "https://api.github.com/users/terrisgit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-16T14:29:26Z", "updated_at": "2018-10-17T16:30:51Z", "closed_at": "2018-10-17T16:30:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I posted this question to StackOverflow yesterday and answered it today. Is there a better solution? \r\n\r\nIt is unclear how users are supposed to ask questions about progressbar2. I read much of the docs for this project. Thank you for an awesome library!\r\n\r\nhttps://stackoverflow.com/questions/51867748/clear-line-to-the-right-of-the-text-displayed-by-progressbar-formatcustomtext-p/51879440", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/169", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/169/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/169/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/169", "id": 334498757, "node_id": "MDU6SXNzdWUzMzQ0OTg3NTc=", "number": 169, "title": "Bar(marker=AnimatedMarker()) not advancing", "user": {"login": "ddelange", "id": 14880945, "node_id": "MDQ6VXNlcjE0ODgwOTQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/14880945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddelange", "html_url": "https://github.com/ddelange", "followers_url": "https://api.github.com/users/ddelange/followers", "following_url": "https://api.github.com/users/ddelange/following{/other_user}", "gists_url": "https://api.github.com/users/ddelange/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddelange/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddelange/subscriptions", "organizations_url": "https://api.github.com/users/ddelange/orgs", "repos_url": "https://api.github.com/users/ddelange/repos", "events_url": "https://api.github.com/users/ddelange/events{/privacy}", "received_events_url": "https://api.github.com/users/ddelange/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-21T13:39:32Z", "updated_at": "2018-06-22T15:14:09Z", "closed_at": "2018-06-22T15:14:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nWhen implementing AnimatedMarker in a ProgressBar, the Bar won't advance to the right and instead rotate in-place next to [left](http://progressbar-2.readthedocs.io/en/latest/_modules/progressbar/widgets.html#Bar). The code below reproduces the error.\r\n\r\n#### Versions\r\n\r\n- Python version: `2.7.15 (default, May 15 2018, 15:37:31) [GCC 7.3.1 20180303 (Red Hat 7.3.1-5)]`\r\n- Package version: `3.38.0`\r\n\r\n#### Code\r\n\r\n```\r\nimport time\r\nfrom progressbar import Bar, Counter, ETA, Percentage, ProgressBar, AnimatedMarker\r\n\r\ntest_size = 30\r\n\r\n# Bar() advances just fine\r\nwidgets = ['Loading: ', Percentage(), ' ', Bar(), ' ', Counter(), '/{} '.format(test_size), ETA()]\r\npbar = ProgressBar(widgets=widgets, maxval=test_size).start()\r\n\r\nfor i in range(test_size):\r\n    time.sleep(0.1)\r\n    pbar.update(i)\r\n\r\npbar.finish()\r\n\r\n# Marker rotates in-place on the right of the first |\r\nwidgets = ['Loading: ', Percentage(), ' ', Bar(marker=AnimatedMarker()), ' ', Counter(), '/{} '.format(test_size), ETA()]\r\npbar = ProgressBar(widgets=widgets, maxval=test_size).start()\r\n\r\nfor i in range(test_size):\r\n    time.sleep(0.1)\r\n    pbar.update(i)\r\n\r\npbar.finish()\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/168", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/168/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/168/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/168", "id": 324749239, "node_id": "MDU6SXNzdWUzMjQ3NDkyMzk=", "number": 168, "title": "Add easy way to label progressbar from iterator wrapper helper function", "user": {"login": "vaughnkoch", "id": 390917, "node_id": "MDQ6VXNlcjM5MDkxNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/390917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vaughnkoch", "html_url": "https://github.com/vaughnkoch", "followers_url": "https://api.github.com/users/vaughnkoch/followers", "following_url": "https://api.github.com/users/vaughnkoch/following{/other_user}", "gists_url": "https://api.github.com/users/vaughnkoch/gists{/gist_id}", "starred_url": "https://api.github.com/users/vaughnkoch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vaughnkoch/subscriptions", "organizations_url": "https://api.github.com/users/vaughnkoch/orgs", "repos_url": "https://api.github.com/users/vaughnkoch/repos", "events_url": "https://api.github.com/users/vaughnkoch/events{/privacy}", "received_events_url": "https://api.github.com/users/vaughnkoch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-20T22:46:26Z", "updated_at": "2018-05-29T22:50:59Z", "closed_at": "2018-05-26T22:53:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I couldn't find a way to add a simple label to the progressbar, especially in the convenience function which greatly reduces code and thus makes it super easy to add a progressbar.\r\n\r\nThis is what the current default output is:\r\n```\r\nfrom progressbar import progressbar\r\nfor x in progressbar(range(100)):\r\n    .. some code ..\r\n# Outputs:\r\n# 100% (100 of 100) |###################| Elapsed Time: 0:00:10 Time:  0:00:10\r\n```\r\nIs it possible to add something like this to add a default label?\r\n```\r\nfor x progressbar(range(100), label='Foobar')\r\n...\r\n# Outputs:\r\n# Foobar: 100% (100 of 100) |###################| Elapsed Time: 0:00:10 Time:  0:00:10\r\n```\r\nIf this is already possible, please disregard - I looked and couldn't find a way to do this easily, including DynamicMessage.\r\n\r\nMy version: progressbar2==3.37.1, Python 3.6.4. \r\nP.S. I love this module, thanks for creating it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/167", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/167/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/167/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/167", "id": 324077580, "node_id": "MDU6SXNzdWUzMjQwNzc1ODA=", "number": 167, "title": "Zip iterator behaviour", "user": {"login": "IlyaOrson", "id": 12092488, "node_id": "MDQ6VXNlcjEyMDkyNDg4", "avatar_url": "https://avatars3.githubusercontent.com/u/12092488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IlyaOrson", "html_url": "https://github.com/IlyaOrson", "followers_url": "https://api.github.com/users/IlyaOrson/followers", "following_url": "https://api.github.com/users/IlyaOrson/following{/other_user}", "gists_url": "https://api.github.com/users/IlyaOrson/gists{/gist_id}", "starred_url": "https://api.github.com/users/IlyaOrson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IlyaOrson/subscriptions", "organizations_url": "https://api.github.com/users/IlyaOrson/orgs", "repos_url": "https://api.github.com/users/IlyaOrson/repos", "events_url": "https://api.github.com/users/IlyaOrson/events{/privacy}", "received_events_url": "https://api.github.com/users/IlyaOrson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-17T15:36:29Z", "updated_at": "2018-05-17T16:43:07Z", "closed_at": "2018-05-17T16:24:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nProgress bar behaves different if it wraps a zip iterator.\r\n\r\n#### Code\r\n\r\n```python\r\nimport time\r\nimport progressbar\r\n\r\nfor k in progressbar.progressbar(zip(range(50), range(50)), redirect_stdout=True):\r\n    print(k[0], \"\\t\", k[1])\r\n    time.sleep(0.1)\r\n\r\nfor i in progressbar.progressbar(range(50), redirect_stdout=True):\r\n    print('Some text', i)\r\n    time.sleep(0.1)\r\n```\r\n\r\n#### Versions\r\n\r\n- Python version: `3.6.4`\r\n- Python distribution/environment: Anaconda custom (64-bit)| (default, Jan 16 2018, 10:22:32) [MSC v.1900 64 bit (AMD64)\r\n- Operating System: Windows 7\r\n- Package version: 3.37.0\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/166", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/166/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/166/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/166", "id": 323992679, "node_id": "MDU6SXNzdWUzMjM5OTI2Nzk=", "number": 166, "title": "Examples script breaks at shortcut_example", "user": {"login": "XenonR", "id": 18627623, "node_id": "MDQ6VXNlcjE4NjI3NjIz", "avatar_url": "https://avatars3.githubusercontent.com/u/18627623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XenonR", "html_url": "https://github.com/XenonR", "followers_url": "https://api.github.com/users/XenonR/followers", "following_url": "https://api.github.com/users/XenonR/following{/other_user}", "gists_url": "https://api.github.com/users/XenonR/gists{/gist_id}", "starred_url": "https://api.github.com/users/XenonR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XenonR/subscriptions", "organizations_url": "https://api.github.com/users/XenonR/orgs", "repos_url": "https://api.github.com/users/XenonR/repos", "events_url": "https://api.github.com/users/XenonR/events{/privacy}", "received_events_url": "https://api.github.com/users/XenonR/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-17T12:01:43Z", "updated_at": "2018-05-17T17:08:06Z", "closed_at": "2018-05-17T17:08:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nI'm unable to execute the provided example.py also `import progressbar; print(progressbar.__version__)` results in error (see section Versions below).\r\nAlready tried to reinstall from `progressbar2-3.37.1-py2.py3-none-any.whl` (was never working).\r\nAdditionally this was the first version installed.\r\n\r\n#### Code\r\nCopy&Paste from RAW:\r\nhttps://github.com/WoLpH/python-progressbar/blob/develop/examples.py\r\n\r\n#### Versions\r\n\r\n- Python version: `3.5.3 (default, Jan 19 2017, 14:11:04) [GCC 6.3.0 20170118]`\r\n- Python distribution/environment: CPython\r\n- Operating System: Debian 9 `4.9.0-4-amd64 #1 SMP Debian 4.9.51-1 (2017-09-28) x86_64`\r\n- Package version:\r\n ```# python3\r\nPython 3.5.3 (default, Jan 19 2017, 14:11:04)\r\n[GCC 6.3.0 20170118] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import progressbar; print(progressbar.__version__)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAttributeError: module 'progressbar' has no attribute '__version__'\r\n```\r\n\r\n#### pip3 list\r\n- asn1crypto (0.23.0)\r\n- bcrypt (3.1.4)\r\n- beautifulsoup4 (4.5.3)\r\n- bottle (0.12.13)\r\n- cffi (1.9.1)\r\n- chardet (2.3.0)\r\n- colorama (0.3.7)\r\n- cryptography (2.1.2)\r\n- dnspython (1.15.0)\r\n- elasticsearch (6.0.0)\r\n- Glances (2.7.1)\r\n- html5lib (0.999999999)\r\n- httplib2 (0.9.2)\r\n- idna (2.2)\r\n- iotop (0.6)\r\n- jabber-bot (0.1.1)\r\n- jmespath (0.9.3)\r\n- keyring (10.1)\r\n- keyrings.alt (1.3)\r\n- lxml (3.7.1)\r\n- ntlm-auth (1.1.0)\r\n- paramiko (2.3.1)\r\n- pip (9.0.1)\r\n- ply (3.9)\r\n- progressbar2 (3.37.1)\r\n- psutil (5.0.1)\r\n- pyasn1 (0.3.7)\r\n- pycparser (2.17)\r\n- pycrypto (2.6.1)\r\n- pycurl (7.43.0)\r\n- pygobject (3.22.0)\r\n- pykerberos (1.2.1)\r\n- PyMySQL (0.7.11)\r\n- PyNaCl (1.1.2)\r\n- pyOpenSSL (16.2.0)\r\n- pysnmp (4.3.2)\r\n- python-apt (1.4.0b3)\r\n- python-debian (0.1.30)\r\n- python-debianbts (2.6.1)\r\n- python-simplexml (0.1.5)\r\n- python-utils (2.3.0)\r\n- pyvmomi (6.5.0.2017.5.post1)\r\n- pywinrm (0.3.0)\r\n- pyxdg (0.25)\r\n- PyYAML (3.12)\r\n- reportbug (7.1.7)\r\n- requests (2.12.4)\r\n- requests-kerberos (0.12.0)\r\n- requests-ntlm (1.1.0)\r\n- SecretStorage (2.3.1)\r\n- setuptools (33.1.1)\r\n- six (1.10.0)\r\n- urllib3 (1.22)\r\n- webencodings (0.5)\r\n- wheel (0.29.0)\r\n- xmltodict (0.11.0)\r\n- xmpppy (0.4.1)\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/165", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/165/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/165/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/165", "id": 321554362, "node_id": "MDU6SXNzdWUzMjE1NTQzNjI=", "number": 165, "title": "No progressbar shown in 3.37.0", "user": {"login": "mattdowdell", "id": 20556265, "node_id": "MDQ6VXNlcjIwNTU2MjY1", "avatar_url": "https://avatars3.githubusercontent.com/u/20556265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattdowdell", "html_url": "https://github.com/mattdowdell", "followers_url": "https://api.github.com/users/mattdowdell/followers", "following_url": "https://api.github.com/users/mattdowdell/following{/other_user}", "gists_url": "https://api.github.com/users/mattdowdell/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattdowdell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattdowdell/subscriptions", "organizations_url": "https://api.github.com/users/mattdowdell/orgs", "repos_url": "https://api.github.com/users/mattdowdell/repos", "events_url": "https://api.github.com/users/mattdowdell/events{/privacy}", "received_events_url": "https://api.github.com/users/mattdowdell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-09T12:41:32Z", "updated_at": "2018-05-26T22:49:35Z", "closed_at": "2018-05-09T13:39:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nAn empty progressbar will be shown with N/A.\r\n\r\n#### Code\r\n```\r\nfrom urllib.request import urlretrieve\r\nfrom progressbar import ProgressBar, Percentage, Bar, Timer\r\n\r\npbar = ProgressBar(widgets=[Percentage(), Bar(), Timer()])\r\n\r\ndef dl_progress(count, block_size, total_size):\r\n    pbar.update(int(count * block_size * 100 / total_size))\r\n\r\nurlretrieve(uri, filepath, reporthook=dl_progress)\r\n```\r\n\r\nThe code should download a file (`uri`) to the specified location (`filepath`). In this case I'm downloading an OVA file of 2.5GB\r\n\r\n#### Versions\r\n\r\n- Python version:\r\n```\r\n$ python3 -c \"import sys; print(sys.version)\"\r\n3.4.5 (default, Dec 11 2017, 14:22:24) \r\n[GCC 4.8.5 20150623 (Red Hat 4.8.5-16)]\r\n```\r\n- Python distribution/environment: CPython\r\n- Operating System: CentOS 7 derivation (not publicly available, but CentOS7 should be close enough for the purposes of this).\r\n- Package version: Happens on 3.37.0, not on 3.36.0.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/164", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/164/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/164/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/164", "id": 315446805, "node_id": "MDU6SXNzdWUzMTU0NDY4MDU=", "number": 164, "title": "Disable progressbar output", "user": {"login": "layoaster", "id": 4516478, "node_id": "MDQ6VXNlcjQ1MTY0Nzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4516478?v=4", "gravatar_id": "", "url": "https://api.github.com/users/layoaster", "html_url": "https://github.com/layoaster", "followers_url": "https://api.github.com/users/layoaster/followers", "following_url": "https://api.github.com/users/layoaster/following{/other_user}", "gists_url": "https://api.github.com/users/layoaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/layoaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/layoaster/subscriptions", "organizations_url": "https://api.github.com/users/layoaster/orgs", "repos_url": "https://api.github.com/users/layoaster/repos", "events_url": "https://api.github.com/users/layoaster/events{/privacy}", "received_events_url": "https://api.github.com/users/layoaster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-18T11:50:50Z", "updated_at": "2018-05-17T16:25:13Z", "closed_at": "2018-05-17T16:25:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\nI would like to disable all of the progressbar output when my script is deployed on production. Progress bar is only used for development. In production I need to log to stdout/stderr so logs can be ingested by another service\r\n\r\nI couldn't find anything on docs. So this might be a feature request.\r\n\r\n\r\n#### Code\r\nThis is the way I'm using it right now:\r\n```\r\nbar = progressbar.ProgressBar()\r\nfor parent in bar(range(100)):\r\n    ....\r\n```\r\n#### Versions\r\n\r\n- Python version: `3.6.4`\r\n- Python distribution/environment: `CPython`\r\n- Package version: `3.36.0`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/162", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/162/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/162/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/162", "id": 313420715, "node_id": "MDU6SXNzdWUzMTM0MjA3MTU=", "number": 162, "title": "print statements between progress bars begin at the end of the progress bar line", "user": {"login": "jasonslay", "id": 10174301, "node_id": "MDQ6VXNlcjEwMTc0MzAx", "avatar_url": "https://avatars3.githubusercontent.com/u/10174301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonslay", "html_url": "https://github.com/jasonslay", "followers_url": "https://api.github.com/users/jasonslay/followers", "following_url": "https://api.github.com/users/jasonslay/following{/other_user}", "gists_url": "https://api.github.com/users/jasonslay/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonslay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonslay/subscriptions", "organizations_url": "https://api.github.com/users/jasonslay/orgs", "repos_url": "https://api.github.com/users/jasonslay/repos", "events_url": "https://api.github.com/users/jasonslay/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonslay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-11T17:36:10Z", "updated_at": "2018-04-11T18:36:03Z", "closed_at": "2018-04-11T18:27:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nWhen using `redirect_stdout=True`, printing between progress bars begins printing at the end of the line the progress bar was on. In the example below the 'halftime' appears on the end of the line from the first progress bar (and is forced to wrap after the first character). I would expect it to start on a new line. Is this not the case?\r\n\r\n#### Code\r\n\r\n```\r\nimport time\r\nimport progressbar\r\n\r\nfor ix in progressbar.progressbar(range(5), redirect_stdout=True):\r\n    print('first', ix)\r\n    time.sleep(0.02)\r\n\r\nprint('halftime')\r\n\r\nfor ix in progressbar.progressbar(range(5), redirect_stdout=True):\r\n    print('second', ix)\r\n    time.sleep(0.02)\r\n```\r\n\r\n#### Output\r\n\r\n```\r\nfirst 0\r\nfirst 1\r\nfirst 2\r\nfirst 3\r\nfirst 4\r\n100% (5 of 5) |#################| Elapsed Time: 0:00:00 Time:  0:00:00halftime\r\nsecond 0\r\nsecond 1\r\nsecond 2\r\nsecond 3\r\nsecond 4\r\n100% (5 of 5) |#################| Elapsed Time: 0:00:00 Time:  0:00:00\r\n```\r\n\r\n#### Versions\r\n\r\n- Python version: 3.6.5 (default, Mar 30 2018, 06:41:53)\r\n- Python distribution/environment: CPython\r\n- Operating System: MacOS 10.13.4\r\n- Package version: 3.37.0\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/161", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/161/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/161/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/161", "id": 308571530, "node_id": "MDU6SXNzdWUzMDg1NzE1MzA=", "number": 161, "title": "Wrong first step when using context manager", "user": {"login": "davidparsson", "id": 325325, "node_id": "MDQ6VXNlcjMyNTMyNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/325325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidparsson", "html_url": "https://github.com/davidparsson", "followers_url": "https://api.github.com/users/davidparsson/followers", "following_url": "https://api.github.com/users/davidparsson/following{/other_user}", "gists_url": "https://api.github.com/users/davidparsson/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidparsson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidparsson/subscriptions", "organizations_url": "https://api.github.com/users/davidparsson/orgs", "repos_url": "https://api.github.com/users/davidparsson/repos", "events_url": "https://api.github.com/users/davidparsson/events{/privacy}", "received_events_url": "https://api.github.com/users/davidparsson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-26T13:27:02Z", "updated_at": "2018-03-31T22:34:29Z", "closed_at": "2018-03-31T22:34:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nWhen running the progress bar as a context manager, it skips step `1`. In the example below it only shows step `0`, `2`, `3`, and `3` is shown before it's completed. Running the code below should make it more obvious, if my explanation is unclear.\r\n\r\nThis only seems to be an issue when using the context manager.\r\n\r\n#### Code\r\n\r\n```\r\nimport time\r\nimport progressbar\r\n\r\nwith progressbar.ProgressBar(redirect_stdout=True) as progress:\r\n    for i in progress(range(3)):\r\n        time.sleep(1)\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/160", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/160/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/160/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/160", "id": 308568831, "node_id": "MDU6SXNzdWUzMDg1Njg4MzE=", "number": 160, "title": "Auto-flushing when wrapping streams?", "user": {"login": "davidparsson", "id": 325325, "node_id": "MDQ6VXNlcjMyNTMyNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/325325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidparsson", "html_url": "https://github.com/davidparsson", "followers_url": "https://api.github.com/users/davidparsson/followers", "following_url": "https://api.github.com/users/davidparsson/following{/other_user}", "gists_url": "https://api.github.com/users/davidparsson/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidparsson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidparsson/subscriptions", "organizations_url": "https://api.github.com/users/davidparsson/orgs", "repos_url": "https://api.github.com/users/davidparsson/repos", "events_url": "https://api.github.com/users/davidparsson/events{/privacy}", "received_events_url": "https://api.github.com/users/davidparsson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2018-03-26T13:19:43Z", "updated_at": "2018-04-06T09:08:05Z", "closed_at": "2018-04-04T02:47:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nHave you considered some kind of auto-flushing when wrapping the streams? In the cases where each progress step takes a while, it would be convenient to get log outputs more frequently without manually calling `progressbar.streams.flush()`. Please run the code below for a frustrating example of too long waiting times.\r\n\r\n#### Code\r\n\r\n```\r\nimport time\r\nimport progressbar\r\n\r\n\r\nwith progressbar.ProgressBar(redirect_stdout=True) as progress:\r\n    for i in progress(range(3)):\r\n        for j in range(10):\r\n            time.sleep(0.5)\r\n            print(i, j)\r\n            # progressbar.streams.flush()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/159", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/159/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/159/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/159", "id": 308567152, "node_id": "MDU6SXNzdWUzMDg1NjcxNTI=", "number": 159, "title": "Manually flushing leaves progress bars in the output", "user": {"login": "davidparsson", "id": 325325, "node_id": "MDQ6VXNlcjMyNTMyNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/325325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidparsson", "html_url": "https://github.com/davidparsson", "followers_url": "https://api.github.com/users/davidparsson/followers", "following_url": "https://api.github.com/users/davidparsson/following{/other_user}", "gists_url": "https://api.github.com/users/davidparsson/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidparsson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidparsson/subscriptions", "organizations_url": "https://api.github.com/users/davidparsson/orgs", "repos_url": "https://api.github.com/users/davidparsson/repos", "events_url": "https://api.github.com/users/davidparsson/events{/privacy}", "received_events_url": "https://api.github.com/users/davidparsson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-26T13:14:58Z", "updated_at": "2018-04-02T00:49:44Z", "closed_at": "2018-04-02T00:49:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nManually flushing leaves progress bars in the output. Please see the following example:\r\n\r\n#### Code\r\n\r\n```\r\nimport time\r\nimport progressbar\r\n\r\n\r\nwith progressbar.ProgressBar(redirect_stdout=True) as progress:\r\n    for i in progress(range(3)):\r\n        for j in range(3):\r\n            time.sleep(1)\r\n            print(i, j)\r\n            progressbar.streams.flush()\r\n```\r\n#### Output\r\n```\r\nN/A% (0 of 100) |                        | Elapsed Time: 0:00:00 ETA:  --:--:--0 0\r\n0 1\r\n0 2\r\n 66% (2 of 3) |##################         | Elapsed Time: 0:00:03 ETA:  0:00:011 0\r\n1 1\r\n1 2\r\n100% (3 of 3) |###########################| Elapsed Time: 0:00:06 ETA:  0:00:002 0\r\n2 1\r\n2 2\r\n100% (3 of 3) |###########################| Elapsed Time: 0:00:09 Time: 0:00:09\r\n100% (3 of 3) |###########################| Elapsed Time: 0:00:09 Time: 0:00:09\r\n```\r\n\r\n#### Versions\r\n\r\n- Python version: `3.6.2`\r\n- Python distribution/environment: CPython\r\n- Operating System: MacOS\r\n- Package version: `3.36.0`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/158", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/158/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/158/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/158", "id": 304005292, "node_id": "MDU6SXNzdWUzMDQwMDUyOTI=", "number": 158, "title": "Initial Update", "user": {"login": "pyup-bot", "id": 16239342, "node_id": "MDQ6VXNlcjE2MjM5MzQy", "avatar_url": "https://avatars0.githubusercontent.com/u/16239342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pyup-bot", "html_url": "https://github.com/pyup-bot", "followers_url": "https://api.github.com/users/pyup-bot/followers", "following_url": "https://api.github.com/users/pyup-bot/following{/other_user}", "gists_url": "https://api.github.com/users/pyup-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/pyup-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pyup-bot/subscriptions", "organizations_url": "https://api.github.com/users/pyup-bot/orgs", "repos_url": "https://api.github.com/users/pyup-bot/repos", "events_url": "https://api.github.com/users/pyup-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/pyup-bot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-09T22:49:26Z", "updated_at": "2018-03-09T22:50:42Z", "closed_at": "2018-03-09T22:50:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "The bot created this issue to inform you that pyup.io has been set up on this repo.\nOnce you have closed it, the bot will open pull requests for updates as soon as they are available.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/157", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/157/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/157/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/157", "id": 302097655, "node_id": "MDU6SXNzdWUzMDIwOTc2NTU=", "number": 157, "title": "python2 with version 3.36.0 does not calculate ETA", "user": {"login": "JoeSc", "id": 367827, "node_id": "MDQ6VXNlcjM2NzgyNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/367827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoeSc", "html_url": "https://github.com/JoeSc", "followers_url": "https://api.github.com/users/JoeSc/followers", "following_url": "https://api.github.com/users/JoeSc/following{/other_user}", "gists_url": "https://api.github.com/users/JoeSc/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoeSc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoeSc/subscriptions", "organizations_url": "https://api.github.com/users/JoeSc/orgs", "repos_url": "https://api.github.com/users/JoeSc/repos", "events_url": "https://api.github.com/users/JoeSc/events{/privacy}", "received_events_url": "https://api.github.com/users/JoeSc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-04T16:07:12Z", "updated_at": "2018-03-05T11:27:26Z", "closed_at": "2018-03-05T11:26:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Description\r\n\r\nusing python2.7.6 and progressbar2-3.36.0 and the ETA is calculated as \"N/A\"\r\n\r\n#### Code\r\n```python\r\nimport time\r\nimport progressbar\r\n\r\nbar = progressbar.ProgressBar()\r\nfor i in bar(range(100)):\r\n    time.sleep(0.02)\r\n```\r\n\r\n#### Versions\r\n\r\n- Python version:\r\n>>> import sys; print(sys.version)\r\n2.7.6 (default, Oct 26 2016, 20:30:19)\r\n[GCC 4.8.4]\r\n&&\r\n>>> import sys; print(sys.version)\r\n2.7.10 (default, Oct 14 2015, 16:09:02) \r\n[GCC 5.2.1 20151010]\r\n\r\n- Python distribution/environment: acquired via apt-get\r\n- Operating System: Windows 10(bash) & Ubuntu Linux\r\n- Package version: 3.36.0\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/155", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/155/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/155/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/155", "id": 298933519, "node_id": "MDU6SXNzdWUyOTg5MzM1MTk=", "number": 155, "title": "Adaptive ETA Widget Regression with Large Maxval", "user": {"login": "FrederickGeek8", "id": 774597, "node_id": "MDQ6VXNlcjc3NDU5Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/774597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FrederickGeek8", "html_url": "https://github.com/FrederickGeek8", "followers_url": "https://api.github.com/users/FrederickGeek8/followers", "following_url": "https://api.github.com/users/FrederickGeek8/following{/other_user}", "gists_url": "https://api.github.com/users/FrederickGeek8/gists{/gist_id}", "starred_url": "https://api.github.com/users/FrederickGeek8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FrederickGeek8/subscriptions", "organizations_url": "https://api.github.com/users/FrederickGeek8/orgs", "repos_url": "https://api.github.com/users/FrederickGeek8/repos", "events_url": "https://api.github.com/users/FrederickGeek8/events{/privacy}", "received_events_url": "https://api.github.com/users/FrederickGeek8/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-02-21T11:26:34Z", "updated_at": "2018-03-04T09:36:39Z", "closed_at": "2018-03-04T09:22:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nIt appears as though when setting the `maxval` to be greater than 10000 in a ProgressBar instance, the default Adaptive ETA widget regresses into a normal, non-adaptive, ETA widget, which fails to give an ETA after the speed at which the progress bar updates slows. I have found a workaround, which involves stealing the default widgets (using `default_widgets()`) from another instance of ProgressBar, however, it is less than ideal to be replicating across my project.\r\n\r\nI don't have the time right now to poke around the code and submit a PR, but if this issue is not fixed in a near future release, I could come back and look into it.\r\n\r\n#### Versions\r\n\r\n- Python version: 3.6.3\r\n- Python distribution/environment: CPython running in pyenv\r\n- Operating System: macOS High Sierra (10.13.3)\r\n- Package version: 3.34.3 & 3.35.2\r\n\r\n\r\n#### Code\r\n\r\n[**Link!**](https://ghostbin.com/paste/p36er) Since the reproduction code I wrote is rather lengthy, I threw it on Ghostbin. The code does three things:\r\n\r\n1. Simulates the ETA break condition on the default ProgressBar configuration\r\n2. Simulates the ETA break condition on a ProgressBar configuration with a non-adaptive ETA widget replacing the adaptive one.\r\n3. Simulates the ETA break condition with my workaround.\r\n\r\nThis code aims to show the equivalent behavior between a default ProgressBar configuration and a ProgressBar instance modified to use the non-adaptive ETA widget, while also showing the validity of the workaround (at least in the way that I am using it).\r\n\r\n#### Notes\r\n\r\nAnother possible workaround is to reduce the numerical value of the `maxval` variable which is made possible by the fact that I am updating the ProgressBar after a certain amount of theoretical iterations. This, however, detracts from the accuracy of the SimpleProgress widget, as it will no longer displace the correct amount of current iterations and maximum iterations.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/154", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/154/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/154/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/154", "id": 296483429, "node_id": "MDU6SXNzdWUyOTY0ODM0Mjk=", "number": 154, "title": "Progress bar display does not update", "user": {"login": "durana", "id": 26276, "node_id": "MDQ6VXNlcjI2Mjc2", "avatar_url": "https://avatars2.githubusercontent.com/u/26276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durana", "html_url": "https://github.com/durana", "followers_url": "https://api.github.com/users/durana/followers", "following_url": "https://api.github.com/users/durana/following{/other_user}", "gists_url": "https://api.github.com/users/durana/gists{/gist_id}", "starred_url": "https://api.github.com/users/durana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durana/subscriptions", "organizations_url": "https://api.github.com/users/durana/orgs", "repos_url": "https://api.github.com/users/durana/repos", "events_url": "https://api.github.com/users/durana/events{/privacy}", "received_events_url": "https://api.github.com/users/durana/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-02-12T18:46:40Z", "updated_at": "2018-02-14T10:34:33Z", "closed_at": "2018-02-14T10:33:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nI found with the latest version on PyPI, 3.35.0, that a progress bar's display does not get updated until the end when it is finished.  I tested with the 3.34.3 version from PyPI, and this version updates the progress bar's display as expected.\r\n\r\n#### Code\r\n\r\n```python\r\n#!/usr/bin/env python\r\n\r\nimport time\r\nimport progressbar\r\n\r\nbar = progressbar.ProgressBar()\r\nfor i in bar(range(100)):\r\n    time.sleep(0.02)\r\n```\r\n\r\n#### Versions\r\n\r\n- Python version:\r\n```\r\n3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 12:04:33) \r\n[GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)]\r\n```\r\n- Python distribution/environment: Anaconda\r\n- Operating System: macOS\r\n- Package version: `3.35.0`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/152", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/152/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/152/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/152", "id": 290231204, "node_id": "MDU6SXNzdWUyOTAyMzEyMDQ=", "number": 152, "title": "Downloading bar even for smallest of sized downloads", "user": {"login": "wolfamongus2", "id": 33198102, "node_id": "MDQ6VXNlcjMzMTk4MTAy", "avatar_url": "https://avatars1.githubusercontent.com/u/33198102?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wolfamongus2", "html_url": "https://github.com/wolfamongus2", "followers_url": "https://api.github.com/users/wolfamongus2/followers", "following_url": "https://api.github.com/users/wolfamongus2/following{/other_user}", "gists_url": "https://api.github.com/users/wolfamongus2/gists{/gist_id}", "starred_url": "https://api.github.com/users/wolfamongus2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wolfamongus2/subscriptions", "organizations_url": "https://api.github.com/users/wolfamongus2/orgs", "repos_url": "https://api.github.com/users/wolfamongus2/repos", "events_url": "https://api.github.com/users/wolfamongus2/events{/privacy}", "received_events_url": "https://api.github.com/users/wolfamongus2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-20T23:09:32Z", "updated_at": "2018-02-11T20:17:19Z", "closed_at": "2018-02-11T20:17:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "How do I get around this?  I like the simplicity of this library, but is there a way to display loading bar even for small downloads or should I create a rule to only display bar if above a certain size?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/151", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/151/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/151/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/151", "id": 289119641, "node_id": "MDU6SXNzdWUyODkxMTk2NDE=", "number": 151, "title": "PyPI packages lacks test data", "user": {"login": "ashgillman", "id": 816777, "node_id": "MDQ6VXNlcjgxNjc3Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/816777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashgillman", "html_url": "https://github.com/ashgillman", "followers_url": "https://api.github.com/users/ashgillman/followers", "following_url": "https://api.github.com/users/ashgillman/following{/other_user}", "gists_url": "https://api.github.com/users/ashgillman/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashgillman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashgillman/subscriptions", "organizations_url": "https://api.github.com/users/ashgillman/orgs", "repos_url": "https://api.github.com/users/ashgillman/repos", "events_url": "https://api.github.com/users/ashgillman/events{/privacy}", "received_events_url": "https://api.github.com/users/ashgillman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-01-17T02:10:53Z", "updated_at": "2018-01-23T01:55:10Z", "closed_at": "2018-01-23T01:55:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Similar to here, which provides a possible solution:\r\n\r\nhttps://github.com/trungdong/prov/issues/63", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/150", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/150/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/150/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/150", "id": 287446186, "node_id": "MDU6SXNzdWUyODc0NDYxODY=", "number": 150, "title": "process bar just keep rolling", "user": {"login": "Focke-Wulf", "id": 26343300, "node_id": "MDQ6VXNlcjI2MzQzMzAw", "avatar_url": "https://avatars1.githubusercontent.com/u/26343300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Focke-Wulf", "html_url": "https://github.com/Focke-Wulf", "followers_url": "https://api.github.com/users/Focke-Wulf/followers", "following_url": "https://api.github.com/users/Focke-Wulf/following{/other_user}", "gists_url": "https://api.github.com/users/Focke-Wulf/gists{/gist_id}", "starred_url": "https://api.github.com/users/Focke-Wulf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Focke-Wulf/subscriptions", "organizations_url": "https://api.github.com/users/Focke-Wulf/orgs", "repos_url": "https://api.github.com/users/Focke-Wulf/repos", "events_url": "https://api.github.com/users/Focke-Wulf/events{/privacy}", "received_events_url": "https://api.github.com/users/Focke-Wulf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-10T14:10:06Z", "updated_at": "2018-01-23T01:55:35Z", "closed_at": "2018-01-23T01:55:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nprocess bar just keep rolling like this.\r\nI have already set redirect_stdout=True why it is not working?\r\n \r\n![1](https://user-images.githubusercontent.com/26343300/34776764-dd4b47bc-f652-11e7-9404-f980ee5163b1.PNG)\r\n\r\n![2](https://user-images.githubusercontent.com/26343300/34776767-df3e2242-f652-11e7-9968-5f905212921d.PNG)\r\n\r\n#### Code\r\n\r\n\r\n\r\n#### Versions\r\n\r\n- Python version: `import sys; print(sys.version)`\r\n- Python distribution/environment: CPython/Anaconda/IPython/IDLE\r\n- Operating System: Windows 10, Ubuntu Linux, etc.\r\n- Package version: `import progressbar; print(progressbar.__version__)`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/149", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/149/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/149/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/149", "id": 282206457, "node_id": "MDU6SXNzdWUyODIyMDY0NTc=", "number": 149, "title": "Same package version from 2.7.3 to 3.4.1", "user": {"login": "jwnx", "id": 4687817, "node_id": "MDQ6VXNlcjQ2ODc4MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4687817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwnx", "html_url": "https://github.com/jwnx", "followers_url": "https://api.github.com/users/jwnx/followers", "following_url": "https://api.github.com/users/jwnx/following{/other_user}", "gists_url": "https://api.github.com/users/jwnx/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwnx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwnx/subscriptions", "organizations_url": "https://api.github.com/users/jwnx/orgs", "repos_url": "https://api.github.com/users/jwnx/repos", "events_url": "https://api.github.com/users/jwnx/events{/privacy}", "received_events_url": "https://api.github.com/users/jwnx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-14T19:05:53Z", "updated_at": "2017-12-26T20:03:04Z", "closed_at": "2017-12-26T20:03:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\n*Forever Young Bug*\r\n\r\nIn the 2.7.3 \u2192 3.x transition, `__init__.py` was left containing a `__version__ = '2.7.3'` variable despite the new `__about__.py` file. This causes every `progressbar.__version__` to be 2.7.3 instead of the real version. This is fixed in 3.4.2, when `__init__.py` is rewritten. \r\n\r\nThis breaks testing, debugging, etc.\r\n\r\n#### Reproducing\r\n\r\n````\r\npip install progressbar2==(2.7.3 ... 3.4.1)\r\npython -c \"import progressbar; print(progressbar.__version__)\"\r\n````\r\n\r\n#### Code\r\n\r\nhttps://github.com/WoLpH/python-progressbar/blob/v3.4.1/progressbar/__init__.py#L72\r\nhttps://github.com/WoLpH/python-progressbar/blob/v3.4.0/progressbar/__init__.py#L72\r\nhttps://github.com/WoLpH/python-progressbar/blob/v3.3.3/progressbar/__init__.py#L72\r\n...\r\nhttps://github.com/WoLpH/python-progressbar/blob/v3.0.1/progressbar/__init__.py#L71\r\n\r\n#### Versions\r\n\r\n- Python version: `3.6.3`\r\n- Operating System: Linux\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/146", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/146/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/146/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/146", "id": 278470720, "node_id": "MDU6SXNzdWUyNzg0NzA3MjA=", "number": 146, "title": "Flickering tests on Windows", "user": {"login": "stuertz", "id": 4446612, "node_id": "MDQ6VXNlcjQ0NDY2MTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4446612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stuertz", "html_url": "https://github.com/stuertz", "followers_url": "https://api.github.com/users/stuertz/followers", "following_url": "https://api.github.com/users/stuertz/following{/other_user}", "gists_url": "https://api.github.com/users/stuertz/gists{/gist_id}", "starred_url": "https://api.github.com/users/stuertz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stuertz/subscriptions", "organizations_url": "https://api.github.com/users/stuertz/orgs", "repos_url": "https://api.github.com/users/stuertz/repos", "events_url": "https://api.github.com/users/stuertz/events{/privacy}", "received_events_url": "https://api.github.com/users/stuertz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-01T13:46:07Z", "updated_at": "2018-02-12T00:27:29Z", "closed_at": "2018-02-12T00:27:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Description\r\n\r\nThe\r\n* test_failure.py and\r\n* test_time.py \r\n\r\nare failing from time to time.\r\nThe reason might be the lower resolution of time ticks on windows.\r\n\r\nIt could be easily fixed by adding a time sleep(0.1). But that's not the right solution IMHO.\r\nA possible solution could be to use  timeit.default_timer() in bar.py, which has a finer resolution on windows.\r\n\r\n#### Versions\r\n\r\n* Python 2.7.14 / Python 3.6.3\r\n* Anconda \r\n* Windows 10\r\n* Progressbar: 3.34.4\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/144", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/144/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/144/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/144", "id": 278412694, "node_id": "MDU6SXNzdWUyNzg0MTI2OTQ=", "number": 144, "title": "Failing tests with py27 on win/linux", "user": {"login": "stuertz", "id": 4446612, "node_id": "MDQ6VXNlcjQ0NDY2MTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4446612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stuertz", "html_url": "https://github.com/stuertz", "followers_url": "https://api.github.com/users/stuertz/followers", "following_url": "https://api.github.com/users/stuertz/following{/other_user}", "gists_url": "https://api.github.com/users/stuertz/gists{/gist_id}", "starred_url": "https://api.github.com/users/stuertz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stuertz/subscriptions", "organizations_url": "https://api.github.com/users/stuertz/orgs", "repos_url": "https://api.github.com/users/stuertz/repos", "events_url": "https://api.github.com/users/stuertz/events{/privacy}", "received_events_url": "https://api.github.com/users/stuertz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-12-01T09:54:25Z", "updated_at": "2017-12-04T14:33:30Z", "closed_at": "2017-12-04T14:33:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Description\r\n\r\nmake test fails with py27 on windows and linux in \r\n* test_unicode.py  and \r\n* test_progressbar.\r\n\r\nErrors are all UnicodeEncodeError: 'ascii' codec can't encode character\r\n\r\n#### Code\r\n\r\n```\r\n> make test\r\npy.test\r\n================================================================================== test session starts ===================================================================================\r\nplatform linux2 -- Python 2.7.14, pytest-3.3.0, py-1.5.2, pluggy-0.6.0\r\nrootdir: /home/js/github/stuertz/python-progressbar, inifile: pytest.ini\r\nplugins: pep8-1.0.6, flakes-1.0.1, cov-2.5.1\r\ncollected 170 items                                                                                                                                                                      \r\n\r\nexamples.py ..F\r\nsetup.py ..\r\nprogressbar/__about__.py ..\r\nprogressbar/__init__.py .. \r\nprogressbar/bar.py .....\r\nprogressbar/base.py .. \r\nprogressbar/utils.py ..... \r\nprogressbar/widgets.py ... \r\ntests/conftest.py .. \r\ntests/test_custom_widgets.py ....\r\ntests/test_data.py .............. \r\ntests/test_data_transfer_bar.py .... \r\ntests/test_empty.py .... \r\ntests/test_end.py ....\r\ntests/test_failure.py .................\r\ntests/test_flush.py ...\r\ntests/test_iterators.py ........\r\ntests/test_large_values.py .... \r\ntests/test_misc.py ... \r\ntests/test_progressbar.py ..F.. \r\ntests/test_speed.py ................\r\ntests/test_stream.py ........\r\ntests/test_terminal.py .............\r\ntests/test_timed.py ........\r\ntests/test_timer.py ....\r\ntests/test_unicode.py ..FFFFFF\r\ntests/test_unknown_length.py .....\r\ntests/test_widgets.py .......\r\ntests/test_with.py .....    \r\n\r\n======================================================================================== FAILURES ========================================================================================\r\n__________________________________________________________________________________________ test __________________________________________________________________________________________\r\n\r\ntests = (), example = <function simple_api_example at 0x7fb62129fa28>\r\n\r\n    def test(*tests):\r\n        for example in examples:\r\n            if not tests or example.__name__ in tests:\r\n>               example()\r\n\r\nexamples.py:519: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nexamples.py:32: in wrapped\r\n    fn()\r\nexamples.py:482: in simple_api_example\r\n    for i in bar(range(200)):\r\nprogressbar/bar.py:438: in __next__\r\n    self.start()\r\nprogressbar/bar.py:624: in start\r\n    self.update(self.min_value, force=True)\r\nprogressbar/bar.py:571: in update\r\n    StdRedirectMixin.update(self, value=value)\r\nprogressbar/bar.py:132: in update\r\n    DefaultFdMixin.update(self, value=value)\r\nprogressbar/bar.py:59: in update\r\n    line = converters.to_unicode('\\r' + self._format_line())\r\nprogressbar/bar.py:500: in _format_line\r\n    widgets = ''.join(self._to_unicode(self._format_widgets()))\r\nprogressbar/bar.py:495: in _to_unicode\r\n    yield converters.to_unicode(arg)\r\n/home/js/miniconda2/lib/python2.7/site-packages/python_utils/converters.py:178: in to_unicode\r\n    input_ = input_.decode(encoding, errors)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ninput = '|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|'\r\nerrors = 'replace'\r\n\r\n    def decode(input, errors='strict'):\r\n>       return codecs.utf_8_decode(input, errors, True)\r\nE       UnicodeEncodeError: 'ascii' codec can't encode characters in position 1-131: ordinal not in range(128)\r\n\r\n/home/js/miniconda2/lib/python2.7/encodings/utf_8.py:16: UnicodeEncodeError\r\n---------------------------------------------------------------------------------- Captured stdout call ----------------------------------------------------------------------------------\r\nRunning: with_example_without_stdout_redirection\r\nSome print statement 0\r\nSome print statement 3\r\nSome print statement 6\r\nSome print statement 9\r\n\r\nRunning: with_example_stdout_redirection\r\nSome print statement 0\r\nSome print statement 3\r\nSome print statement 6\r\nSome print statement 9\r\n\r\nRunning: basic_widget_example\r\n\r\nRunning: file_transfer_example\r\n\r\nRunning: custom_file_transfer_example\r\n\r\nRunning: double_bar_example\r\n\r\nRunning: basic_file_transfer\r\n\r\nRunning: simple_progress\r\n\r\nRunning: basic_progress\r\n\r\nRunning: progress_with_automatic_max\r\n\r\nRunning: progress_with_unavailable_max\r\n\r\nRunning: animated_marker\r\n\r\nRunning: counter_and_timer\r\n\r\nRunning: format_label\r\n\r\nRunning: animated_balloons\r\n\r\nRunning: animated_arrows\r\nUnicode error: skipping example\r\nRunning: animated_filled_arrows\r\nUnicode error: skipping example\r\nRunning: animated_wheels\r\nUnicode error: skipping example\r\nRunning: format_label_bouncer\r\n\r\nRunning: format_label_rotating_bouncer\r\n\r\nRunning: with_right_justify\r\n\r\nRunning: exceeding_maximum\r\n\r\nRunning: reaching_maximum\r\n\r\nRunning: stdout_redirection\r\n\r\n\r\nRunning: stderr_redirection\r\n\r\nRunning: negative_maximum\r\n\r\nRunning: rotating_bouncing_marker\r\n\r\nRunning: incrementing_bar\r\n\r\nRunning: increment_bar_with_output_redirection\r\nGot 0\r\nGot 1\r\nGot 2\r\nGot 3\r\nGot 4\r\nGot 5\r\nGot 6\r\nGot 7\r\nGot 8\r\nGot 9\r\nGot 10\r\nGot 11\r\nGot 12\r\nGot 13\r\nGot 14\r\nGot 15\r\nGot 16\r\nGot 17\r\nGot 18\r\nGot 19\r\nGot 20\r\nGot 21\r\nGot 22\r\nGot 23\r\nGot 24\r\nGot 25\r\nGot 26\r\nGot 27\r\nGot 28\r\nGot 29\r\nGot 30\r\nGot 31\r\nGot 32\r\nGot 33\r\nGot 34\r\nGot 35\r\nGot 36\r\nGot 37\r\nGot 38\r\nGot 39\r\nGot 40\r\nGot 41\r\nGot 42\r\nGot 43\r\nGot 44\r\nGot 45\r\nGot 46\r\nGot 47\r\nGot 48\r\nGot 49\r\nGot 50\r\nGot 51\r\nGot 52\r\nGot 53\r\nGot 54\r\nGot 55\r\nGot 56\r\nGot 57\r\nGot 58\r\nGot 59\r\nGot 60\r\nGot 61\r\nGot 62\r\nGot 63\r\nGot 64\r\nGot 65\r\nGot 66\r\nGot 67\r\nGot 68\r\nGot 69\r\nGot 70\r\nGot 71\r\nGot 72\r\nGot 73\r\nGot 74\r\nGot 75\r\nGot 76\r\nGot 77\r\nGot 78\r\nGot 79\r\nGot 80\r\nGot 81\r\nGot 82\r\nGot 83\r\nGot 84\r\nGot 85\r\nGot 86\r\nGot 87\r\nGot 88\r\nGot 89\r\nGot 90\r\nGot 91\r\nGot 92\r\nGot 93\r\nGot 94\r\nGot 95\r\nGot 96\r\nGot 97\r\nGot 98\r\nGot 99\r\n\r\nRunning: eta_types_demonstration\r\n\r\nRunning: adaptive_eta_without_value_change\r\n\r\nRunning: iterator_with_max_value\r\n\r\nRunning: eta\r\n\r\nRunning: dynamic_message\r\n\r\nRunning: format_custom_text\r\n\r\nRunning: simple_api_example\r\n---------------------------------------------------------------------------------- Captured stderr call ----------------------------------------------------------------------------------\r\n100% (10 of 10) |####################################################################################################################################| Elapsed Time: 0:00:00 Time: 0:00:00\r\nDEBUG:progressbar.utils:wrapping excepthook\r\n100% (10 of 10) |####################################################################################################################################| Elapsed Time: 0:00:00 Time: 0:00:00\r\n100%|####################################################################################################################################################################################|\r\nTest: 100% ||                                                                                                                                                  | Time: 0:00:00 731.0 KiB/s\r\n551.1 KiB/s <<<|###################################################################################################################################################|>>> 100% Time: 0:00:00\r\n|>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>| Time: 0:00:00 |<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<|\r\nTest: 100% [000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000] Time: 0:00:00  33.7 KiB/s\r\n17 of 17                                                                                                                                                                                  \r\n100% (100 of 100) |##################################################################################################################################| Elapsed Time: 0:00:00 Time: 0:00:00\r\n100% (8 of 8) |######################################################################################################################################| Elapsed Time: 0:00:00 Time: 0:00:00\r\n100% (8 of 8) |######################################################################################################################################| Elapsed Time: 0:00:00 Time: 0:00:00\r\nWorking: |                                                                                                                                                                                \r\nProcessed: Counter: 00014 lines (Elapsed Time: 0:00:00)                                                                                                                                   \r\nProcessed: 14 lines (in: 0:00:00)                                                                                                                                                         \r\nBalloon: .                                                                                                                                                                                \r\nBouncer: value 99 - |#                                                                                                                                                                   |\r\nAnimated Bouncer: value 17 - ||                                                                                                                                                          |\r\n100% (10 of 10) || Elapsed Time: 0:00:00 Time: 0:00:00\r\n100% (1 of 1) |######################################################################################################################################| Elapsed Time: 0:00:00 Time: 0:00:00\r\n100% (100 of 100) |##################################################################################################################################| Elapsed Time: 0:00:00 Time: 0:00:00\r\n                                                                                                                                                                                          \r\n100% (100 of 100) |##################################################################################################################################| Elapsed Time: 0:00:00 Time: 0:00:00\r\n||       |\r\n|       ||\r\n100%|####################################################################################################################################################################################|\r\nTest: 100% ||                                                                                                                                                  | Time: 0:00:00  17.4 KiB/s\r\n100% ETA: Time: 0:00:00 Adaptive ETA: Time: 0:00:00 Absolute ETA: Finished at: 0:00:00 Adaptive Transfer Speed:   1.2 KiB/s |############################################################|\r\nTime: 0:00:00 12.4 B/s                                                                                                                                                                    \r\n100% (100 of 100) |##################################################################################################################################| Elapsed Time: 0:00:00 Time: 0:00:00\r\nTest: 100% | ETA: Time: 0:00:00 | AbsoluteETA: Finished at: 0:00:00 | AdaptiveETA: Time: 0:00:00                                                                                          \r\n100%|########################################################################################################################################################################|loss: ------\r\nSpam: 0.2 kg, eggs: 48 :: 100%                                                                                                                                                            \r\n                                                                                                                                                                                          \r\n----------------------------------------------------------------------------------- Captured log call ------------------------------------------------------------------------------------\r\nutils.py                   109 DEBUG    wrapping excepthook\r\n_____________________________________________________________________________________ test_examples ______________________________________________________________________________________\r\n\r\n    def test_examples():\r\n        from examples import examples\r\n        for example in examples:\r\n>           example()\r\n\r\ntests/test_progressbar.py:5: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nexamples.py:32: in wrapped\r\n    fn()\r\nexamples.py:482: in simple_api_example\r\n    for i in bar(range(200)):\r\nprogressbar/bar.py:438: in __next__\r\n    self.start()\r\nprogressbar/bar.py:624: in start\r\n    self.update(self.min_value, force=True)\r\nprogressbar/bar.py:571: in update\r\n    StdRedirectMixin.update(self, value=value)\r\nprogressbar/bar.py:132: in update\r\n    DefaultFdMixin.update(self, value=value)\r\nprogressbar/bar.py:59: in update\r\n    line = converters.to_unicode('\\r' + self._format_line())\r\nprogressbar/bar.py:500: in _format_line\r\n    widgets = ''.join(self._to_unicode(self._format_widgets()))\r\nprogressbar/bar.py:495: in _to_unicode\r\n    yield converters.to_unicode(arg)\r\n/home/js/miniconda2/lib/python2.7/site-packages/python_utils/converters.py:178: in to_unicode\r\n    input_ = input_.decode(encoding, errors)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ninput = '|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|'\r\nerrors = 'replace'\r\n\r\n    def decode(input, errors='strict'):\r\n>       return codecs.utf_8_decode(input, errors, True)\r\nE       UnicodeEncodeError: 'ascii' codec can't encode characters in position 1-131: ordinal not in range(128)\r\n\r\n/home/js/miniconda2/lib/python2.7/encodings/utf_8.py:16: UnicodeEncodeError\r\n---------------------------------------------------------------------------------- Captured stdout call ----------------------------------------------------------------------------------\r\nRunning: with_example_without_stdout_redirection\r\nSome print statement 0\r\nSome print statement 3\r\nSome print statement 6\r\nSome print statement 9\r\n\r\nRunning: with_example_stdout_redirection\r\nSome print statement 0\r\nSome print statement 3\r\nSome print statement 6\r\nSome print statement 9\r\n\r\nRunning: basic_widget_example\r\n\r\nRunning: file_transfer_example\r\n\r\nRunning: custom_file_transfer_example\r\n\r\nRunning: double_bar_example\r\n\r\nRunning: basic_file_transfer\r\n\r\nRunning: simple_progress\r\n\r\nRunning: basic_progress\r\n\r\nRunning: progress_with_automatic_max\r\n\r\nRunning: progress_with_unavailable_max\r\n\r\nRunning: animated_marker\r\n\r\nRunning: counter_and_timer\r\n\r\nRunning: format_label\r\n\r\nRunning: animated_balloons\r\n\r\nRunning: animated_arrows\r\nUnicode error: skipping example\r\nRunning: animated_filled_arrows\r\nUnicode error: skipping example\r\nRunning: animated_wheels\r\nUnicode error: skipping example\r\nRunning: format_label_bouncer\r\n\r\nRunning: format_label_rotating_bouncer\r\n\r\nRunning: with_right_justify\r\n\r\nRunning: exceeding_maximum\r\n\r\nRunning: reaching_maximum\r\n\r\nRunning: stdout_redirection\r\n\r\n\r\nRunning: stderr_redirection\r\n\r\nRunning: negative_maximum\r\n\r\nRunning: rotating_bouncing_marker\r\n\r\nRunning: incrementing_bar\r\n\r\nRunning: increment_bar_with_output_redirection\r\nGot 0\r\nGot 1\r\nGot 2\r\nGot 3\r\nGot 4\r\nGot 5\r\nGot 6\r\nGot 7\r\nGot 8\r\nGot 9\r\nGot 10\r\nGot 11\r\nGot 12\r\nGot 13\r\nGot 14\r\nGot 15\r\nGot 16\r\nGot 17\r\nGot 18\r\nGot 19\r\nGot 20\r\nGot 21\r\nGot 22\r\nGot 23\r\nGot 24\r\nGot 25\r\nGot 26\r\nGot 27\r\nGot 28\r\nGot 29\r\nGot 30\r\nGot 31\r\nGot 32\r\nGot 33\r\nGot 34\r\nGot 35\r\nGot 36\r\nGot 37\r\nGot 38\r\nGot 39\r\nGot 40\r\nGot 41\r\nGot 42\r\nGot 43\r\nGot 44\r\nGot 45\r\nGot 46\r\nGot 47\r\nGot 48\r\nGot 49\r\nGot 50\r\nGot 51\r\nGot 52\r\nGot 53\r\nGot 54\r\nGot 55\r\nGot 56\r\nGot 57\r\nGot 58\r\nGot 59\r\nGot 60\r\nGot 61\r\nGot 62\r\nGot 63\r\nGot 64\r\nGot 65\r\nGot 66\r\nGot 67\r\nGot 68\r\nGot 69\r\nGot 70\r\nGot 71\r\nGot 72\r\nGot 73\r\nGot 74\r\nGot 75\r\nGot 76\r\nGot 77\r\nGot 78\r\nGot 79\r\nGot 80\r\nGot 81\r\nGot 82\r\nGot 83\r\nGot 84\r\nGot 85\r\nGot 86\r\nGot 87\r\nGot 88\r\nGot 89\r\nGot 90\r\nGot 91\r\nGot 92\r\nGot 93\r\nGot 94\r\nGot 95\r\nGot 96\r\nGot 97\r\nGot 98\r\nGot 99\r\n\r\nRunning: eta_types_demonstration\r\n\r\nRunning: adaptive_eta_without_value_change\r\n\r\nRunning: iterator_with_max_value\r\n\r\nRunning: eta\r\n\r\nRunning: dynamic_message\r\n\r\nRunning: format_custom_text\r\n\r\nRunning: simple_api_example\r\n---------------------------------------------------------------------------------- Captured stderr call ----------------------------------------------------------------------------------\r\n100% (10 of 10) |####################################################################################################################################| Elapsed Time: 0:00:00 Time: 0:00:00\r\n100% (10 of 10) |####################################################################################################################################| Elapsed Time: 0:00:00 Time: 0:00:00\r\n100%|####################################################################################################################################################################################|\r\nTest: 100% ||                                                                                                                                                  | Time: 0:00:00  25.9 KiB/s\r\n 18.0 KiB/s <<<|###################################################################################################################################################|>>> 100% Time: 0:00:00\r\n|>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>| Time: 0:00:00 |<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<|\r\nTest: 100% [000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000] Time: 0:00:00  27.5 KiB/s\r\n17 of 17                                                                                                                                                                                  \r\n100% (100 of 100) |##################################################################################################################################| Elapsed Time: 0:00:00 Time: 0:00:00\r\n100% (8 of 8) |######################################################################################################################################| Elapsed Time: 0:00:00 Time: 0:00:00\r\n100% (8 of 8) |######################################################################################################################################| Elapsed Time: 0:00:00 Time: 0:00:00\r\nWorking: |                                                                                                                                                                                \r\nProcessed: Counter: 00014 lines (Elapsed Time: 0:00:00)                                                                                                                                   \r\nProcessed: 14 lines (in: 0:00:00)                                                                                                                                                         \r\nBalloon: .                                                                                                                                                                                \r\nBouncer: value 99 - | #                                                                                                                                                                  |\r\nAnimated Bouncer: value 17 - ||                                                                                                                                                          |\r\n100% (10 of 10) || Elapsed Time: 0:00:00 Time: 0:00:00\r\n100% (1 of 1) |######################################################################################################################################| Elapsed Time: 0:00:00 Time: 0:00:00\r\n100% (100 of 100) |##################################################################################################################################| Elapsed Time: 0:00:00 Time: 0:00:00\r\n                                                                                                                                                                                          \r\n100% (100 of 100) |##################################################################################################################################| Elapsed Time: 0:00:00 Time: 0:00:00\r\n||       |\r\n|       ||\r\n100%|####################################################################################################################################################################################|\r\nTest: 100% ||                                                                                                                                                  | Time: 0:00:00   2.9 KiB/s\r\n100% ETA: Time: 0:00:02 Adaptive ETA: Time: 0:00:02 Absolute ETA: Finished at: 0:00:02 Adaptive Transfer Speed: 249.4 B/s |##############################################################|\r\nTime: 0:00:00  5.1 B/s                                                                                                                                                                    \r\n100% (100 of 100) |##################################################################################################################################| Elapsed Time: 0:00:00 Time: 0:00:00\r\nTest: 100% | ETA: Time: 0:00:00 | AbsoluteETA: Finished at: 0:00:00 | AdaptiveETA: Time: 0:00:00                                                                                          \r\n100%|#######################################################################################################################################################################|loss: 0.00255\r\nSpam: 0.2 kg, eggs: 48 :: 100%                                                                                                                                                            \r\n                                                                                                                                                                                          \r\n____________________________________________________ test_markers[True-line arrows-\\u2190\\u2196\\u2191\\u2197\\u2192\\u2198\\u2193\\u2199] _____________________________________________________\r\n\r\nname = 'line arrows', markers = '\u2190\u2196\u2191\u2197\u2192\u2198\u2193\u2199', as_unicode = True\r\n\r\n    @pytest.mark.parametrize('name,markers', [\r\n        ('line arrows', u'\u2190\u2196\u2191\u2197\u2192\u2198\u2193\u2199'),\r\n        ('block arrows', u'\u25e2\u25e3\u25e4\u25e5'),\r\n        ('wheels', u'\u25d0\u25d3\u25d1\u25d2'),\r\n    ])\r\n    @pytest.mark.parametrize('as_unicode', [True, False])\r\n    def test_markers(name, markers, as_unicode):\r\n        if as_unicode:\r\n>           markers = converters.to_unicode(markers)\r\n\r\ntests/test_unicode.py:17: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n/home/js/miniconda2/lib/python2.7/site-packages/python_utils/converters.py:178: in to_unicode\r\n    input_ = input_.decode(encoding, errors)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ninput = '\u2190\u2196\u2191\u2197\u2192\u2198\u2193\u2199', errors = 'replace'\r\n\r\n    def decode(input, errors='strict'):\r\n>       return codecs.utf_8_decode(input, errors, True)\r\nE       UnicodeEncodeError: 'ascii' codec can't encode characters in position 0-7: ordinal not in range(128)\r\n\r\n/home/js/miniconda2/lib/python2.7/encodings/utf_8.py:16: UnicodeEncodeError\r\n________________________________________________________________ test_markers[True-block arrows-\\u25e2\\u25e3\\u25e4\\u25e5] ________________________________________________________________\r\n\r\nname = 'block arrows', markers = '\u25e2\u25e3\u25e4\u25e5', as_unicode = True\r\n\r\n    @pytest.mark.parametrize('name,markers', [\r\n        ('line arrows', u'\u2190\u2196\u2191\u2197\u2192\u2198\u2193\u2199'),\r\n        ('block arrows', u'\u25e2\u25e3\u25e4\u25e5'),\r\n        ('wheels', u'\u25d0\u25d3\u25d1\u25d2'),\r\n    ])\r\n    @pytest.mark.parametrize('as_unicode', [True, False])\r\n    def test_markers(name, markers, as_unicode):\r\n        if as_unicode:\r\n>           markers = converters.to_unicode(markers)\r\n\r\ntests/test_unicode.py:17: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n/home/js/miniconda2/lib/python2.7/site-packages/python_utils/converters.py:178: in to_unicode\r\n    input_ = input_.decode(encoding, errors)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ninput = '\u25e2\u25e3\u25e4\u25e5', errors = 'replace'\r\n\r\n    def decode(input, errors='strict'):\r\n>       return codecs.utf_8_decode(input, errors, True)\r\nE       UnicodeEncodeError: 'ascii' codec can't encode characters in position 0-3: ordinal not in range(128)\r\n\r\n/home/js/miniconda2/lib/python2.7/encodings/utf_8.py:16: UnicodeEncodeError\r\n___________________________________________________________________ test_markers[True-wheels-\\u25d0\\u25d3\\u25d1\\u25d2] ___________________________________________________________________\r\n\r\nname = 'wheels', markers = '\u25d0\u25d3\u25d1\u25d2', as_unicode = True\r\n\r\n    @pytest.mark.parametrize('name,markers', [\r\n        ('line arrows', u'\u2190\u2196\u2191\u2197\u2192\u2198\u2193\u2199'),\r\n        ('block arrows', u'\u25e2\u25e3\u25e4\u25e5'),\r\n        ('wheels', u'\u25d0\u25d3\u25d1\u25d2'),\r\n    ])\r\n    @pytest.mark.parametrize('as_unicode', [True, False])\r\n    def test_markers(name, markers, as_unicode):\r\n        if as_unicode:\r\n>           markers = converters.to_unicode(markers)\r\n\r\ntests/test_unicode.py:17: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n/home/js/miniconda2/lib/python2.7/site-packages/python_utils/converters.py:178: in to_unicode\r\n    input_ = input_.decode(encoding, errors)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ninput = '\u25d0\u25d3\u25d1\u25d2', errors = 'replace'\r\n\r\n    def decode(input, errors='strict'):\r\n>       return codecs.utf_8_decode(input, errors, True)\r\nE       UnicodeEncodeError: 'ascii' codec can't encode characters in position 0-3: ordinal not in range(128)\r\n\r\n/home/js/miniconda2/lib/python2.7/encodings/utf_8.py:16: UnicodeEncodeError\r\n____________________________________________________ test_markers[False-line arrows-\\u2190\\u2196\\u2191\\u2197\\u2192\\u2198\\u2193\\u2199] ____________________________________________________\r\n\r\nname = 'line arrows', markers = '\\xe2\\x86\\x90\\xe2\\x86\\x96\\xe2\\x86\\x91\\xe2\\x86\\x97\\xe2\\x86\\x92\\xe2\\x86\\x98\\xe2\\x86\\x93\\xe2\\x86\\x99', as_unicode = False\r\n\r\n    @pytest.mark.parametrize('name,markers', [\r\n        ('line arrows', u'\u2190\u2196\u2191\u2197\u2192\u2198\u2193\u2199'),\r\n        ('block arrows', u'\u25e2\u25e3\u25e4\u25e5'),\r\n        ('wheels', u'\u25d0\u25d3\u25d1\u25d2'),\r\n    ])\r\n    @pytest.mark.parametrize('as_unicode', [True, False])\r\n    def test_markers(name, markers, as_unicode):\r\n        if as_unicode:\r\n            markers = converters.to_unicode(markers)\r\n        else:\r\n            markers = converters.to_str(markers)\r\n    \r\n        widgets = [\r\n            '%s: ' % name.capitalize(),\r\n            progressbar.AnimatedMarker(markers=markers),\r\n        ]\r\n        bar = progressbar.ProgressBar(widgets=widgets)\r\n        bar._MINIMUM_UPDATE_INTERVAL = 1e-12\r\n>       for i in bar((i for i in range(24))):\r\n\r\ntests/test_unicode.py:27: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nprogressbar/bar.py:438: in __next__\r\n    self.start()\r\nprogressbar/bar.py:624: in start\r\n    self.update(self.min_value, force=True)\r\nprogressbar/bar.py:571: in update\r\n    StdRedirectMixin.update(self, value=value)\r\nprogressbar/bar.py:132: in update\r\n    DefaultFdMixin.update(self, value=value)\r\nprogressbar/bar.py:59: in update\r\n    line = converters.to_unicode('\\r' + self._format_line())\r\nprogressbar/bar.py:500: in _format_line\r\n    widgets = ''.join(self._to_unicode(self._format_widgets()))\r\nprogressbar/bar.py:495: in _to_unicode\r\n    yield converters.to_unicode(arg)\r\n/home/js/miniconda2/lib/python2.7/site-packages/python_utils/converters.py:178: in to_unicode\r\n    input_ = input_.decode(encoding, errors)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ninput = '\ufffd', errors = 'replace'\r\n\r\n    def decode(input, errors='strict'):\r\n>       return codecs.utf_8_decode(input, errors, True)\r\nE       UnicodeEncodeError: 'ascii' codec can't encode character u'\\ufffd' in position 0: ordinal not in range(128)\r\n\r\n/home/js/miniconda2/lib/python2.7/encodings/utf_8.py:16: UnicodeEncodeError\r\n---------------------------------------------------------------------------------- Captured stderr call ----------------------------------------------------------------------------------\r\n                                                                                                                                                                                          \r\n_______________________________________________________________ test_markers[False-block arrows-\\u25e2\\u25e3\\u25e4\\u25e5] ________________________________________________________________\r\n\r\nname = 'block arrows', markers = '\\xe2\\x97\\xa2\\xe2\\x97\\xa3\\xe2\\x97\\xa4\\xe2\\x97\\xa5', as_unicode = False\r\n\r\n    @pytest.mark.parametrize('name,markers', [\r\n        ('line arrows', u'\u2190\u2196\u2191\u2197\u2192\u2198\u2193\u2199'),\r\n        ('block arrows', u'\u25e2\u25e3\u25e4\u25e5'),\r\n        ('wheels', u'\u25d0\u25d3\u25d1\u25d2'),\r\n    ])\r\n    @pytest.mark.parametrize('as_unicode', [True, False])\r\n    def test_markers(name, markers, as_unicode):\r\n        if as_unicode:\r\n            markers = converters.to_unicode(markers)\r\n        else:\r\n            markers = converters.to_str(markers)\r\n    \r\n        widgets = [\r\n            '%s: ' % name.capitalize(),\r\n            progressbar.AnimatedMarker(markers=markers),\r\n        ]\r\n        bar = progressbar.ProgressBar(widgets=widgets)\r\n        bar._MINIMUM_UPDATE_INTERVAL = 1e-12\r\n>       for i in bar((i for i in range(24))):\r\n\r\ntests/test_unicode.py:27: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nprogressbar/bar.py:438: in __next__\r\n    self.start()\r\nprogressbar/bar.py:624: in start\r\n    self.update(self.min_value, force=True)\r\nprogressbar/bar.py:571: in update\r\n    StdRedirectMixin.update(self, value=value)\r\nprogressbar/bar.py:132: in update\r\n    DefaultFdMixin.update(self, value=value)\r\nprogressbar/bar.py:59: in update\r\n    line = converters.to_unicode('\\r' + self._format_line())\r\nprogressbar/bar.py:500: in _format_line\r\n    widgets = ''.join(self._to_unicode(self._format_widgets()))\r\nprogressbar/bar.py:495: in _to_unicode\r\n    yield converters.to_unicode(arg)\r\n/home/js/miniconda2/lib/python2.7/site-packages/python_utils/converters.py:178: in to_unicode\r\n    input_ = input_.decode(encoding, errors)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ninput = '\ufffd', errors = 'replace'\r\n\r\n    def decode(input, errors='strict'):\r\n>       return codecs.utf_8_decode(input, errors, True)\r\nE       UnicodeEncodeError: 'ascii' codec can't encode character u'\\ufffd' in position 0: ordinal not in range(128)\r\n\r\n/home/js/miniconda2/lib/python2.7/encodings/utf_8.py:16: UnicodeEncodeError\r\n---------------------------------------------------------------------------------- Captured stderr call ----------------------------------------------------------------------------------\r\n                                                                                                                                                                                          \r\n__________________________________________________________________ test_markers[False-wheels-\\u25d0\\u25d3\\u25d1\\u25d2] ___________________________________________________________________\r\n\r\nname = 'wheels', markers = '\\xe2\\x97\\x90\\xe2\\x97\\x93\\xe2\\x97\\x91\\xe2\\x97\\x92', as_unicode = False\r\n\r\n    @pytest.mark.parametrize('name,markers', [\r\n        ('line arrows', u'\u2190\u2196\u2191\u2197\u2192\u2198\u2193\u2199'),\r\n        ('block arrows', u'\u25e2\u25e3\u25e4\u25e5'),\r\n        ('wheels', u'\u25d0\u25d3\u25d1\u25d2'),\r\n    ])\r\n    @pytest.mark.parametrize('as_unicode', [True, False])\r\n    def test_markers(name, markers, as_unicode):\r\n        if as_unicode:\r\n            markers = converters.to_unicode(markers)\r\n        else:\r\n            markers = converters.to_str(markers)\r\n    \r\n        widgets = [\r\n            '%s: ' % name.capitalize(),\r\n            progressbar.AnimatedMarker(markers=markers),\r\n        ]\r\n        bar = progressbar.ProgressBar(widgets=widgets)\r\n        bar._MINIMUM_UPDATE_INTERVAL = 1e-12\r\n>       for i in bar((i for i in range(24))):\r\n\r\ntests/test_unicode.py:27: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nprogressbar/bar.py:438: in __next__\r\n    self.start()\r\nprogressbar/bar.py:624: in start\r\n    self.update(self.min_value, force=True)\r\nprogressbar/bar.py:571: in update\r\n    StdRedirectMixin.update(self, value=value)\r\nprogressbar/bar.py:132: in update\r\n    DefaultFdMixin.update(self, value=value)\r\nprogressbar/bar.py:59: in update\r\n    line = converters.to_unicode('\\r' + self._format_line())\r\nprogressbar/bar.py:500: in _format_line\r\n    widgets = ''.join(self._to_unicode(self._format_widgets()))\r\nprogressbar/bar.py:495: in _to_unicode\r\n    yield converters.to_unicode(arg)\r\n/home/js/miniconda2/lib/python2.7/site-packages/python_utils/converters.py:178: in to_unicode\r\n    input_ = input_.decode(encoding, errors)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ninput = '\ufffd', errors = 'replace'\r\n\r\n    def decode(input, errors='strict'):\r\n>       return codecs.utf_8_decode(input, errors, True)\r\nE       UnicodeEncodeError: 'ascii' codec can't encode character u'\\ufffd' in position 0: ordinal not in range(128)\r\n\r\n/home/js/miniconda2/lib/python2.7/encodings/utf_8.py:16: UnicodeEncodeError\r\n---------------------------------------------------------------------------------- Captured stderr call ----------------------------------------------------------------------------------\r\n                                                                                                                                                                                          \r\n========================================================================= 8 failed, 162 passed in 15.23 seconds ==========================================================================\r\nMakefile:30: recipe for target 'test' failed\r\n```\r\n\r\n#### Versions\r\n\r\n- Python version: `import sys; print(sys.version)`\r\n** 2.7.14 |Anaconda, Inc.| (default, Oct 16 2017, 17:29:19)  [GCC 7.2.0] and \r\n** 2.7.14 | packaged by conda-forge | (default, Oct  5 2017, 15:26:18) [MSC v.1500 32 bit (Intel)]\r\n\r\n- Python distribution/environment: CPython/Anaconda/IPython/IDLE\r\n** Anaconda\r\n\r\n- Operating System: Windows 10, Ubuntu Linux, etc.\r\n** Ubuntu Linux 16.04.1 / 64 Bit\r\n** and Windows 10 / 64 Bit\r\n\r\n- Package version: `import progressbar; print(progressbar.__version__)`\r\n** 3.34.4\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/143", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/143/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/143/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/143", "id": 270079696, "node_id": "MDU6SXNzdWUyNzAwNzk2OTY=", "number": 143, "title": "redirecting stdout unsafe if progress bar is deleted and not explicitly finished.", "user": {"login": "hardkrash", "id": 104305, "node_id": "MDQ6VXNlcjEwNDMwNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/104305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hardkrash", "html_url": "https://github.com/hardkrash", "followers_url": "https://api.github.com/users/hardkrash/followers", "following_url": "https://api.github.com/users/hardkrash/following{/other_user}", "gists_url": "https://api.github.com/users/hardkrash/gists{/gist_id}", "starred_url": "https://api.github.com/users/hardkrash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hardkrash/subscriptions", "organizations_url": "https://api.github.com/users/hardkrash/orgs", "repos_url": "https://api.github.com/users/hardkrash/repos", "events_url": "https://api.github.com/users/hardkrash/events{/privacy}", "received_events_url": "https://api.github.com/users/hardkrash/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-31T18:53:50Z", "updated_at": "2017-12-01T19:21:17Z", "closed_at": "2017-12-01T19:21:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nIf finish is not called on a redirected output then stdout is not restored, and output will not work properly.  Please consider adding a `__del__` method to the redirected classes that will restore redirected output.\r\n\r\n#### Versions\r\n\r\n- Python version: 3.6.2\r\n- Python distribution/environment: CPython\r\n- Operating System: OS X 10.13\r\n- Package version: 3.34.2\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/142", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/142/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/142/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/142", "id": 263845060, "node_id": "MDU6SXNzdWUyNjM4NDUwNjA=", "number": 142, "title": "Raising a ValueError when value > max_value an overkill?", "user": {"login": "piotrkilczuk", "id": 365324, "node_id": "MDQ6VXNlcjM2NTMyNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/365324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/piotrkilczuk", "html_url": "https://github.com/piotrkilczuk", "followers_url": "https://api.github.com/users/piotrkilczuk/followers", "following_url": "https://api.github.com/users/piotrkilczuk/following{/other_user}", "gists_url": "https://api.github.com/users/piotrkilczuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/piotrkilczuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/piotrkilczuk/subscriptions", "organizations_url": "https://api.github.com/users/piotrkilczuk/orgs", "repos_url": "https://api.github.com/users/piotrkilczuk/repos", "events_url": "https://api.github.com/users/piotrkilczuk/events{/privacy}", "received_events_url": "https://api.github.com/users/piotrkilczuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-10-09T10:16:18Z", "updated_at": "2017-11-13T10:34:29Z", "closed_at": "2017-10-30T02:21:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nThis ticket is more of a suggestion than a bug report, but I'm hoping to start the on discussion this issue.\r\n\r\nI'm using `python-progressbar` when scanning our Redis database for offending keys. \r\n\r\nAs I'm iterating over the keys using an iterator, it's possible that the result size (i.e. number of keys) changes between when the iterator was instantiated and when we reached `StopIteration`. \r\n\r\nThere is a way to get the initial number of matching keys, and I was hoping I could pass that as `max_value`, and the progress bar would just either not reach 100% or just go slightly above 100% if the number of keys changed. However, in most cases, I would run into a `ValueError`, because `ProgressBar` does not allow `value > max_value`.\r\n\r\nI think it's a bit of an overkill to raise an exception in this case and it should either be optional or just ignored altogether. The progressbar is really just the presentation layer and should not break the application logic even if the parameters passed don't make 100% sense.\r\n\r\n#### Code\r\n\r\n    bar = progressbar.ProgressBar()\r\n    for full_key in bar(redis_client.scan_iter(), max_value=approximate_redis_key_count):\r\n        pass\r\n\r\n#### Versions\r\n\r\nIrrelevant.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/141", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/141/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/141/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/141", "id": 263067960, "node_id": "MDU6SXNzdWUyNjMwNjc5NjA=", "number": 141, "title": "signatures for github tarball releases", "user": {"login": "anthraxx", "id": 203012, "node_id": "MDQ6VXNlcjIwMzAxMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/203012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthraxx", "html_url": "https://github.com/anthraxx", "followers_url": "https://api.github.com/users/anthraxx/followers", "following_url": "https://api.github.com/users/anthraxx/following{/other_user}", "gists_url": "https://api.github.com/users/anthraxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthraxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthraxx/subscriptions", "organizations_url": "https://api.github.com/users/anthraxx/orgs", "repos_url": "https://api.github.com/users/anthraxx/repos", "events_url": "https://api.github.com/users/anthraxx/events{/privacy}", "received_events_url": "https://api.github.com/users/anthraxx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-10-05T10:00:34Z", "updated_at": "2018-02-12T11:30:23Z", "closed_at": "2018-02-12T01:00:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nIt would be nice to create and upload signatures for the github tarballs as well. Compared to the pypi packages, the github tarballs include tests and more important: docs.\r\nThis would aid distro packaging to distribute man/text version of the docs aside of the python modules plus have the possibility to to test for regressions with other modules (like python-utils).\r\n\r\nAlternative solution: add tests and docs to pypi package.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/140", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/140/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/140/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/140", "id": 259149501, "node_id": "MDU6SXNzdWUyNTkxNDk1MDE=", "number": 140, "title": "Fails to build under Python 3 on non-UTF8 systems", "user": {"login": "lordmauve", "id": 617224, "node_id": "MDQ6VXNlcjYxNzIyNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/617224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lordmauve", "html_url": "https://github.com/lordmauve", "followers_url": "https://api.github.com/users/lordmauve/followers", "following_url": "https://api.github.com/users/lordmauve/following{/other_user}", "gists_url": "https://api.github.com/users/lordmauve/gists{/gist_id}", "starred_url": "https://api.github.com/users/lordmauve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lordmauve/subscriptions", "organizations_url": "https://api.github.com/users/lordmauve/orgs", "repos_url": "https://api.github.com/users/lordmauve/repos", "events_url": "https://api.github.com/users/lordmauve/events{/privacy}", "received_events_url": "https://api.github.com/users/lordmauve/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-09-20T12:44:36Z", "updated_at": "2017-09-21T14:55:26Z", "closed_at": "2017-09-20T19:10:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nWhen trying to build from an sdist on a containerised build host, setup.py crashes with this traceback:\r\n\r\n```\r\nTraceback (most recent call last):                                                                                                                                            \r\n  File \"setup.py\", line 52, in <module>                                                                                                                                       \r\n    readme = fh.read()\r\n  File \"dist/lib/python3.6/encodings/ascii.py\", line 26, in decode                                                                                                                                                  \r\n   return codecs.ascii_decode(input, self.errors)[0]                                                                                                                         \r\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xe8 in position 8625: ordinal not in range(128)                                                                          \r\n```\r\n\r\nThe problem is that these containers do not set a UTF-8 locale, and in the `setup.py`, progressbar2 reads its README.rst without passing an `encoding=` argument.\r\n\r\nIn [the docs for open()](https://docs.python.org/3.6/library/functions.html#open), it says:\r\n\r\n> In text mode, if encoding is not specified the encoding used is platform dependent: locale.getpreferredencoding(False) is called to get the current locale encoding.\r\n\r\nThis is ASCII on these hosts.\r\n\r\nThe fix is to change the line\r\n\r\n```python\r\nwith open('README.rst') as fh:\r\n```\r\n\r\nto\r\n\r\n```python\r\nwith open('README.rst', encoding='utf8') as fh:\r\n```\r\n\r\n#### Code\r\n\r\nThis can be reproduced on any host by running the command\r\n\r\n```\r\n   $ LANG=C python3 setup.py --help\r\n```\r\n\r\n#### Versions\r\n\r\n- Python version: tested on 3.5 and 3.6, probably all 3.x\r\n- Python distribution/environment: CPython\r\n- Operating System: Linux\r\n- Package version: 3.34.2\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/139", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/139/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/139/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/139", "id": 251698573, "node_id": "MDU6SXNzdWUyNTE2OTg1NzM=", "number": 139, "title": "Bar collapsing ", "user": {"login": "lucabergamini", "id": 27865235, "node_id": "MDQ6VXNlcjI3ODY1MjM1", "avatar_url": "https://avatars1.githubusercontent.com/u/27865235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucabergamini", "html_url": "https://github.com/lucabergamini", "followers_url": "https://api.github.com/users/lucabergamini/followers", "following_url": "https://api.github.com/users/lucabergamini/following{/other_user}", "gists_url": "https://api.github.com/users/lucabergamini/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucabergamini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucabergamini/subscriptions", "organizations_url": "https://api.github.com/users/lucabergamini/orgs", "repos_url": "https://api.github.com/users/lucabergamini/repos", "events_url": "https://api.github.com/users/lucabergamini/events{/privacy}", "received_events_url": "https://api.github.com/users/lucabergamini/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-21T15:43:51Z", "updated_at": "2017-09-07T12:34:31Z", "closed_at": "2017-09-07T12:34:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nUnder **Pycharm Community Edition 2017.1.2** the progress bar becomes smaller as DynamicMessages are appended, even with plenty of space on the right (see Figures below, where in the second one a new DynamicMessages is appended). Is it a bug or is it something intended?\r\n\r\n![bar_1](https://user-images.githubusercontent.com/27865235/29527133-34675dea-8698-11e7-9610-6585d3020b62.png)\r\n\r\n![bar](https://user-images.githubusercontent.com/27865235/29526940-917858f0-8697-11e7-98af-08cea6c93f2e.png)\r\n \r\n\r\n#### Code\r\n\r\nThe Widgets setting for the second example is the following:\r\n```\r\nwidgets = [\r\n\r\n    'Batch: ', progressbar.Counter(),\r\n        '/', progressbar.FormatCustomText('%(total)s',{\"total\":batch_number}),\r\n        ' ', progressbar.Bar(marker=\"-\", left='[', right=']'),\r\n        ' ', progressbar.ETA(),\r\n        ' ',\r\n         progressbar.DynamicMessage('loss'),\r\n        ' ',\r\n        progressbar.DynamicMessage(\"accuracy\"),' ',\r\n    progressbar.DynamicMessage(\"epoch\")\r\n    ]\r\n```\r\n\r\n#### Versions\r\n\r\n- Python version: 2.7.12 \r\n- Python distribution/environment: VirtualEnv\r\n- Operating System: Ubuntu 16.04\r\n- Package version: 3.34.0\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/138", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/138/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/138/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/138", "id": 248247390, "node_id": "MDU6SXNzdWUyNDgyNDczOTA=", "number": 138, "title": "Increment progress by one instead of setting progress to the specified value", "user": {"login": "pbeza", "id": 3036218, "node_id": "MDQ6VXNlcjMwMzYyMTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3036218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pbeza", "html_url": "https://github.com/pbeza", "followers_url": "https://api.github.com/users/pbeza/followers", "following_url": "https://api.github.com/users/pbeza/following{/other_user}", "gists_url": "https://api.github.com/users/pbeza/gists{/gist_id}", "starred_url": "https://api.github.com/users/pbeza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pbeza/subscriptions", "organizations_url": "https://api.github.com/users/pbeza/orgs", "repos_url": "https://api.github.com/users/pbeza/repos", "events_url": "https://api.github.com/users/pbeza/events{/privacy}", "received_events_url": "https://api.github.com/users/pbeza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-06T13:30:49Z", "updated_at": "2017-09-11T09:33:26Z", "closed_at": "2017-09-11T09:32:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Why there is no `.increment()` or `.update()` parameterless method that would increment progress by 1 by default? This would be really handy, especially if `ProgressBar` object is passed to function handler (e.g. to `copy_function` in [`shutil.move`](https://docs.python.org/dev/library/shutil.html#shutil.move) function as I currently do).\r\n\r\nI'd like to be able to update progress by one using `bar.update()` or `bar.increment()` instead of calling ugly `bar.update(bar.value + 1)` (or possibly `bar.__next__()`).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/137", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/137/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/137/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/137", "id": 247599434, "node_id": "MDU6SXNzdWUyNDc1OTk0MzQ=", "number": 137, "title": "[bug] character width calculate error with unicode", "user": {"login": "gsw945", "id": 6281968, "node_id": "MDQ6VXNlcjYyODE5Njg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6281968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gsw945", "html_url": "https://github.com/gsw945", "followers_url": "https://api.github.com/users/gsw945/followers", "following_url": "https://api.github.com/users/gsw945/following{/other_user}", "gists_url": "https://api.github.com/users/gsw945/gists{/gist_id}", "starred_url": "https://api.github.com/users/gsw945/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gsw945/subscriptions", "organizations_url": "https://api.github.com/users/gsw945/orgs", "repos_url": "https://api.github.com/users/gsw945/repos", "events_url": "https://api.github.com/users/gsw945/events{/privacy}", "received_events_url": "https://api.github.com/users/gsw945/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-03T05:53:24Z", "updated_at": "2017-08-03T22:40:32Z", "closed_at": "2017-08-03T22:38:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\nChinese characters lead to line breaks or print repeatedly, because of the characters' width calculated error.\r\n\r\n#### Code\r\n1. use `FormatCustomText`:\r\n    ```python\r\n    import progressbar\r\n    import time\r\n\r\n\r\n    total = 12\r\n    current = 0\r\n    format_custom_text = progressbar.FormatCustomText(\r\n        '%(progress)6s: ',\r\n        dict(\r\n            progress='\u8fdb\u5ea6'\r\n        ),\r\n    )\r\n    bar = progressbar.ProgressBar(\r\n        widgets=[\r\n            format_custom_text,\r\n            progressbar.Bar(),\r\n            ' ',\r\n            progressbar.Counter(),\r\n            ' / {0}'.format(total)\r\n        ],\r\n        max_value=total,\r\n        redirect_stdout=True\r\n    )\r\n    bar.start()\r\n    bar.update(current)\r\n    while current < total:\r\n        current += 1\r\n        bar.update(current)\r\n        time.sleep(0.5)\r\n    bar.finish()\r\n    ```\r\n    output:\r\n    ![001](https://user-images.githubusercontent.com/6281968/28907801-a2dfae3e-7852-11e7-80f6-9437d2a48cd9.png)\r\n\r\n\r\n2. use raw text:\r\n    ```python\r\n    import progressbar\r\n    import time\r\n\r\n\r\n    total = 12\r\n    current = 0\r\n    tip = '\u8fdb\u5ea6: '\r\n    bar = progressbar.ProgressBar(\r\n        widgets=[\r\n            tip,\r\n            progressbar.Bar(),\r\n            ' ',\r\n            progressbar.Counter(),\r\n            ' / {0}'.format(total)\r\n        ],\r\n        max_value=total,\r\n        redirect_stdout=True\r\n    )\r\n    bar.start()\r\n    bar.update(current)\r\n    while current < total:\r\n        current += 1\r\n        bar.update(current)\r\n        time.sleep(0.5)\r\n    bar.finish()\r\n    ```\r\n    output:\r\n    ![002](https://user-images.githubusercontent.com/6281968/28907852-ed5039b6-7852-11e7-9cfa-e15754dd88f7.png)\r\n\r\n\r\n3. fill length of str with 6(a chinese character's width is 2) by using `\\0`\r\n    ```python\r\n    import progressbar\r\n    import time\r\n\r\n\r\n    total = 12\r\n    current = 0\r\n    tip = '\u8fdb\\0\u5ea6\\0: '\r\n    bar = progressbar.ProgressBar(\r\n        widgets=[\r\n            tip,\r\n            progressbar.Bar(),\r\n            ' ',\r\n            progressbar.Counter(),\r\n            ' / {0}'.format(total)\r\n        ],\r\n        max_value=total,\r\n        redirect_stdout=True\r\n    )\r\n    bar.start()\r\n    bar.update(current)\r\n    while current < total:\r\n        current += 1\r\n        bar.update(current)\r\n        time.sleep(0.5)\r\n    bar.finish()\r\n    ```\r\n    output:\r\n    ![003](https://user-images.githubusercontent.com/6281968/28907863-f4b5f7b8-7852-11e7-9cd4-a326c153ffaf.png)\r\n\r\n\r\nps: **3** is the effect i expected.\r\n\r\n#### Versions\r\n- Python version: 3.5.2\r\n- Python distribution/environment: CPython\r\n- Operating System: Ubuntu 16.04 LTS\r\n- Package version: 3.33.2\r\n\r\n#### maybe helpful\r\n[wcwidth](https://github.com/jquast/wcwidth) *Python library that measures the width of unicode strings rendered to a terminal*\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/136", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/136/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/136/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/136", "id": 247168677, "node_id": "MDU6SXNzdWUyNDcxNjg2Nzc=", "number": 136, "title": "Progressbars retain values when restarting", "user": {"login": "w4nderlust", "id": 349256, "node_id": "MDQ6VXNlcjM0OTI1Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/349256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/w4nderlust", "html_url": "https://github.com/w4nderlust", "followers_url": "https://api.github.com/users/w4nderlust/followers", "following_url": "https://api.github.com/users/w4nderlust/following{/other_user}", "gists_url": "https://api.github.com/users/w4nderlust/gists{/gist_id}", "starred_url": "https://api.github.com/users/w4nderlust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/w4nderlust/subscriptions", "organizations_url": "https://api.github.com/users/w4nderlust/orgs", "repos_url": "https://api.github.com/users/w4nderlust/repos", "events_url": "https://api.github.com/users/w4nderlust/events{/privacy}", "received_events_url": "https://api.github.com/users/w4nderlust/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-08-01T19:00:37Z", "updated_at": "2017-08-05T14:09:51Z", "closed_at": "2017-08-03T21:00:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nIf i finish and then restart a bar using AdaptiveETA, instead of showing the ETA the bar shows me the Time.\r\n\r\n#### Code\r\n\r\n```\r\nimport progressbar\r\nimport time\r\n\r\nmaximum = 50\r\nwidgets = [progressbar.FormatLabel('Bar'), \"   \",\r\n                       progressbar.Percentage(), \" \",\r\n                       progressbar.Bar(), \" \",\r\n                       progressbar.Timer(), \" \",\r\n                       progressbar.AdaptiveETA()]\r\nbar = progressbar.ProgressBar(widgets=widgets,\r\n                              max_value=maximum)\r\n\r\nsteps = 0\r\nbar.start()\r\nwhile steps < maximum:\r\n\tbar.update(steps)\r\n\ttime.sleep(0.1)\r\n\tsteps += 1\r\nbar.finish()\r\n\r\ntime.sleep(0.2)\r\n\r\nsteps = 0\r\nbar.start()\r\nwhile steps < maximum:\r\n\tbar.update(steps)\r\n\ttime.sleep(0.1)\r\n\tsteps += 1\r\nbar.finish()\r\n```\r\n\r\n#### Versions\r\n\r\n- Python version: 3.5.2\r\n- Python distribution/environment: Python\r\n- Operating System:Ubuntu 16.4\r\n- Package version: 3.30.2\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/135", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/135/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/135/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/135", "id": 246131682, "node_id": "MDU6SXNzdWUyNDYxMzE2ODI=", "number": 135, "title": "Minor visual instability ", "user": {"login": "gauss256", "id": 9168281, "node_id": "MDQ6VXNlcjkxNjgyODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/9168281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gauss256", "html_url": "https://github.com/gauss256", "followers_url": "https://api.github.com/users/gauss256/followers", "following_url": "https://api.github.com/users/gauss256/following{/other_user}", "gists_url": "https://api.github.com/users/gauss256/gists{/gist_id}", "starred_url": "https://api.github.com/users/gauss256/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gauss256/subscriptions", "organizations_url": "https://api.github.com/users/gauss256/orgs", "repos_url": "https://api.github.com/users/gauss256/repos", "events_url": "https://api.github.com/users/gauss256/events{/privacy}", "received_events_url": "https://api.github.com/users/gauss256/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-27T18:38:10Z", "updated_at": "2017-07-27T19:51:44Z", "closed_at": "2017-07-27T18:53:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nThis is really nitpicky, but I value visual stability in progress bars. There is a space that appears in the progress bar while updating that disappears when it is finished.\r\n\r\nIt's definitely nice that the times are flush right at the ends, and I wouldn't want to lose that.\r\n\r\nDuring update:\r\n```\r\nAspect ratio: 1 5000 [##########################################] Time: 0:00:15\r\nAspect ratio: 2 3735 [################################           ] ETA: 0:00:01\r\n                                                                ^ this space\r\n```\r\nAfter finishing:\r\n```\r\nAspect ratio: 1 5000 [##########################################] Time: 0:00:15\r\nAspect ratio: 2 5000 [##########################################] Time: 0:00:15\r\n\r\n```\r\n#### Code\r\n\r\n```\r\nwidgets = ['Aspect ratio: %d ' % ar, Counter(format=u'%(value)4d'), ' ', \r\n    Bar(marker='#', left='[', right=']'), ' ', AdaptiveETA()]\r\n```\r\n#### Versions\r\n\r\n- Python version: 2.7.13\r\n- Python distribution/environment: Anaconda\r\n- Operating System: Linux\r\n- Package version: 3.32.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/134", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/134/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/134/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/134", "id": 246111998, "node_id": "MDU6SXNzdWUyNDYxMTE5OTg=", "number": 134, "title": "Logging module ignored when progressbar not used", "user": {"login": "NicoHood", "id": 6888294, "node_id": "MDQ6VXNlcjY4ODgyOTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6888294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NicoHood", "html_url": "https://github.com/NicoHood", "followers_url": "https://api.github.com/users/NicoHood/followers", "following_url": "https://api.github.com/users/NicoHood/following{/other_user}", "gists_url": "https://api.github.com/users/NicoHood/gists{/gist_id}", "starred_url": "https://api.github.com/users/NicoHood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NicoHood/subscriptions", "organizations_url": "https://api.github.com/users/NicoHood/orgs", "repos_url": "https://api.github.com/users/NicoHood/repos", "events_url": "https://api.github.com/users/NicoHood/events{/privacy}", "received_events_url": "https://api.github.com/users/NicoHood/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2017-07-27T17:24:13Z", "updated_at": "2017-07-29T18:48:11Z", "closed_at": "2017-07-29T00:59:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "```py\r\n#!/usr/bin/env python3\r\n\r\nimport progressbar\r\nimport logging\r\n\r\nprogressbar.streams.wrap_stderr()\r\n\r\nlogger = logging.getLogger(__name__)\r\nlogging.basicConfig(level=logging.DEBUG)\r\nlogger.info('test')\r\nlogger.info('test')\r\nlogger.info('test')\r\n\r\n# count = 50000\r\n# with progressbar.ProgressBar(max_value=count) as bar:\r\n#     for i in range(count):\r\n#         #logger.info('test')\r\n#         bar.update(i)\r\n```\r\n\r\nref #129\r\nIf you do not use the progressbar module, all logger traces are ignored when used with `progressbar.streams.wrap_stderr()`\r\n\r\nUsing 0.32.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/133", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/133/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/133/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/133", "id": 246108883, "node_id": "MDU6SXNzdWUyNDYxMDg4ODM=", "number": 133, "title": "Error when supplying format to Counter", "user": {"login": "gauss256", "id": 9168281, "node_id": "MDQ6VXNlcjkxNjgyODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/9168281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gauss256", "html_url": "https://github.com/gauss256", "followers_url": "https://api.github.com/users/gauss256/followers", "following_url": "https://api.github.com/users/gauss256/following{/other_user}", "gists_url": "https://api.github.com/users/gauss256/gists{/gist_id}", "starred_url": "https://api.github.com/users/gauss256/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gauss256/subscriptions", "organizations_url": "https://api.github.com/users/gauss256/orgs", "repos_url": "https://api.github.com/users/gauss256/repos", "events_url": "https://api.github.com/users/gauss256/events{/privacy}", "received_events_url": "https://api.github.com/users/gauss256/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-07-27T17:11:27Z", "updated_at": "2017-07-27T18:58:42Z", "closed_at": "2017-07-27T17:16:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nWhen I specify a format string to Counter, I get the error \"TypeError: %d format: a number is required, not dict\"\r\n\r\n#### Code\r\n\r\n```\r\nwidgets = ['Aspect ratio: %d ' % ar, Counter(format=u'%5d'), ' ', \r\n    Bar(marker='#', left='[', right=']'), ' ', AdaptiveETA()]\r\nwith ProgressBar(\r\n    fd=sys.stdout,\r\n    widgets=widgets,\r\n    max_value=num_images,\r\n    redirect_stdout=True) as progress:\r\n```\r\n\r\n#### Versions\r\n\r\n- Python version: 2.7.13\r\n- Python distribution/environment: Anaconda\r\n- Operating System: Linux\r\n- Package version: 3.32.1\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/131", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/131/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/131/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/131", "id": 244906746, "node_id": "MDU6SXNzdWUyNDQ5MDY3NDY=", "number": 131, "title": "GPG signatures for source validation", "user": {"login": "NicoHood", "id": 6888294, "node_id": "MDQ6VXNlcjY4ODgyOTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6888294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NicoHood", "html_url": "https://github.com/NicoHood", "followers_url": "https://api.github.com/users/NicoHood/followers", "following_url": "https://api.github.com/users/NicoHood/following{/other_user}", "gists_url": "https://api.github.com/users/NicoHood/gists{/gist_id}", "starred_url": "https://api.github.com/users/NicoHood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NicoHood/subscriptions", "organizations_url": "https://api.github.com/users/NicoHood/orgs", "repos_url": "https://api.github.com/users/NicoHood/repos", "events_url": "https://api.github.com/users/NicoHood/events{/privacy}", "received_events_url": "https://api.github.com/users/NicoHood/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2017-07-23T12:19:41Z", "updated_at": "2017-07-23T21:12:02Z", "closed_at": "2017-07-23T16:13:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "As we all know, today more than ever before, it is crucial to be able to trust\r\nour computing environments. One of the main difficulties that package\r\nmaintainers of Linux distributions face, is the difficulty to verify the\r\nauthenticity and the integrity of the source code.\r\n\r\nThe Arch Linux team would appreciate it if you would provide us GPG signatures\r\nin order to verify easily and quickly your source code releases.\r\n\r\n**Overview of the required tasks:**\r\n* Create and/or use a 4096-bit RSA keypair for the file signing.\r\n* Keep your key secret, use a strong unique passphrase for the key.\r\n* Upload the public key to a key server and publish the full fingerprint.\r\n* Sign every new git commit and tag.\r\n* Create signed compressed (xz --best) release archives\r\n* Upload a strong message digest (sha512) of the archive\r\n* Configure https for your download server\r\n\r\n[GPGit](https://github.com/NicoHood/gpgit) is meant to bring GPG to the masses.\r\nIt is not only a shell script that automates the process of creating new signed\r\ngit releases with GPG but also comes with this step-by-step readme guide for\r\nlearning how to use GPG.\r\n\r\n**Additional Information:**\r\n* https://github.com/NicoHood/gpgit\r\n* https://help.github.com/categories/gpg/\r\n* https://wiki.archlinux.org/index.php/GnuPG\r\n* https://git-scm.com/book/en/v2/Git-Tools-Signing-Your-Work\r\n* https://www.qubes-os.org/doc/verifying-signatures/\r\n* https://lkml.org/lkml/2016/8/15/445\r\n* https://developers.google.com/web/fundamentals/security/encrypt-in-transit/why-https\r\n* https://www.enigmail.net/index.php/en/\r\n\r\nThanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/130", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/130/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/130/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/130", "id": 243697662, "node_id": "MDU6SXNzdWUyNDM2OTc2NjI=", "number": 130, "title": "Output strangely formatted", "user": {"login": "ClerkCunt", "id": 28776681, "node_id": "MDQ6VXNlcjI4Nzc2Njgx", "avatar_url": "https://avatars2.githubusercontent.com/u/28776681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ClerkCunt", "html_url": "https://github.com/ClerkCunt", "followers_url": "https://api.github.com/users/ClerkCunt/followers", "following_url": "https://api.github.com/users/ClerkCunt/following{/other_user}", "gists_url": "https://api.github.com/users/ClerkCunt/gists{/gist_id}", "starred_url": "https://api.github.com/users/ClerkCunt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ClerkCunt/subscriptions", "organizations_url": "https://api.github.com/users/ClerkCunt/orgs", "repos_url": "https://api.github.com/users/ClerkCunt/repos", "events_url": "https://api.github.com/users/ClerkCunt/events{/privacy}", "received_events_url": "https://api.github.com/users/ClerkCunt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 612512733, "node_id": "MDU6TGFiZWw2MTI1MTI3MzM=", "url": "https://api.github.com/repos/WoLpH/python-progressbar/labels/unfixable%20upstream%20bug", "name": "unfixable upstream bug", "color": "006b75", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-18T12:23:41Z", "updated_at": "2017-07-19T07:52:28Z", "closed_at": "2017-07-18T17:27:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nDescription of the problem\r\nThe output seems to be formatted wrong\r\n![image](https://user-images.githubusercontent.com/28776681/28316706-2ad8f7be-6bc4-11e7-821d-9401c1981de2.png)\r\n\r\n\r\n#### Code\r\n\r\n```python\r\n>>> import time\r\n>>> import progressbar\r\n>>> bar = progressbar.ProgressBar()\r\n>>> for i in bar(range(100)):\r\n\ttime.sleep(0.02)`\r\n```\r\n\r\n#### Versions\r\n\r\n- Version: v3.6.1:69c0db5\r\n- Environment: IDLE Shell\r\n- OS: Windows 10\r\n- Package version: 3.30.2\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/129", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/129/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/129/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/129", "id": 243189744, "node_id": "MDU6SXNzdWUyNDMxODk3NDQ=", "number": 129, "title": "Tracebacks not shown", "user": {"login": "NicoHood", "id": 6888294, "node_id": "MDQ6VXNlcjY4ODgyOTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6888294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NicoHood", "html_url": "https://github.com/NicoHood", "followers_url": "https://api.github.com/users/NicoHood/followers", "following_url": "https://api.github.com/users/NicoHood/following{/other_user}", "gists_url": "https://api.github.com/users/NicoHood/gists{/gist_id}", "starred_url": "https://api.github.com/users/NicoHood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NicoHood/subscriptions", "organizations_url": "https://api.github.com/users/NicoHood/orgs", "repos_url": "https://api.github.com/users/NicoHood/repos", "events_url": "https://api.github.com/users/NicoHood/events{/privacy}", "received_events_url": "https://api.github.com/users/NicoHood/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-15T17:49:20Z", "updated_at": "2017-07-23T09:48:06Z", "closed_at": "2017-07-22T23:58:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nTracebacks are not shown anymore when stderr gets redirected. If there is a solution to this, it should be added to the readme as well.\r\n\r\n#### Code\r\n\r\n```py\r\n#!/usr/bin/env python3\r\n\r\nimport progressbar\r\n\r\nprogressbar.streams.wrap_stderr()\r\n\r\nthisissanerror\r\n```\r\n#### Versions\r\n\r\n- Python version: `python 3.6.1-1`\r\n- Python distribution/environment: ???\r\n- Operating System: ArchLinux\r\n- Package version: `3.30.2`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/127", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/127/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/127/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/127", "id": 241908828, "node_id": "MDU6SXNzdWUyNDE5MDg4Mjg=", "number": 127, "title": "Feature request: Show current wall time instead of elapsed time", "user": {"login": "ChrisCummins", "id": 1636663, "node_id": "MDQ6VXNlcjE2MzY2NjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1636663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisCummins", "html_url": "https://github.com/ChrisCummins", "followers_url": "https://api.github.com/users/ChrisCummins/followers", "following_url": "https://api.github.com/users/ChrisCummins/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisCummins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisCummins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisCummins/subscriptions", "organizations_url": "https://api.github.com/users/ChrisCummins/orgs", "repos_url": "https://api.github.com/users/ChrisCummins/repos", "events_url": "https://api.github.com/users/ChrisCummins/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisCummins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-07-11T02:48:57Z", "updated_at": "2017-07-22T23:58:19Z", "closed_at": "2017-07-22T23:58:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nFor long running jobs where individual tasks may take a long time or stall, `Elapsed Time` becomes hard to interpret. What would be more useful for me is a `Current Time` indicator. This would allow me, at a glance, to see if the jobs are still completing, or if they have stalled and haven't made progress in hours.\r\n\r\n#### Code\r\n\r\nOne possible interface:\r\n```py\r\nfor job in ProgressBar()(create_jobs(), current_time=True):\r\n   ...\r\n```\r\n\r\nwhich would output:\r\n```\r\n...\r\n  1% (177 of 10001) |              | Current Time: 16:39:23 ETA: 1 day, 12:25:58\r\n  1% (178 of 10001) |              | Current Time: 16:39:23 ETA: 1 day, 12:13:50\r\n  1% (179 of 10001) |              | Current Time: 16:39:49 ETA: 1 day, 12:25:10\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/126", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/126/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/126/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/126", "id": 240893255, "node_id": "MDU6SXNzdWUyNDA4OTMyNTU=", "number": 126, "title": "Timer failed under python 2.6", "user": {"login": "terminatorzwm", "id": 22976455, "node_id": "MDQ6VXNlcjIyOTc2NDU1", "avatar_url": "https://avatars2.githubusercontent.com/u/22976455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terminatorzwm", "html_url": "https://github.com/terminatorzwm", "followers_url": "https://api.github.com/users/terminatorzwm/followers", "following_url": "https://api.github.com/users/terminatorzwm/following{/other_user}", "gists_url": "https://api.github.com/users/terminatorzwm/gists{/gist_id}", "starred_url": "https://api.github.com/users/terminatorzwm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terminatorzwm/subscriptions", "organizations_url": "https://api.github.com/users/terminatorzwm/orgs", "repos_url": "https://api.github.com/users/terminatorzwm/repos", "events_url": "https://api.github.com/users/terminatorzwm/events{/privacy}", "received_events_url": "https://api.github.com/users/terminatorzwm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-06T09:15:14Z", "updated_at": "2017-07-23T16:13:40Z", "closed_at": "2017-07-23T16:13:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nTimer widget failed under python 2.6 with:\r\nTraceback (most recent call last):\r\n  File \"./pzdiff.py\", line 207, in main\r\n    pzdiff(path1, path2)\r\n  File \"./pzdiff.py\", line 71, in pzdiff\r\n    ProgressManager().setup(settings.PROGRESS)\r\n  File \"/srv/zwm/pzdiff/utils/progress.py\", line 30, in setup\r\n    self.register(ProgressBar())\r\n  File \"/srv/zwm/pzdiff/utils/progress.py\", line 98, in __init__\r\n    self.bar.start()\r\n  File \"/srv/zwm/pzdiff/libs/progressbar/bar.py\", line 583, in start\r\n    self.update(self.min_value, force=True)\r\n  File \"/srv/zwm/pzdiff/libs/progressbar/bar.py\", line 539, in update\r\n    StdRedirectMixin.update(self, value=value)\r\n  File \"/srv/zwm/pzdiff/libs/progressbar/bar.py\", line 129, in update\r\n    DefaultFdMixin.update(self, value=value)\r\n  File \"/srv/zwm/pzdiff/libs/progressbar/bar.py\", line 59, in update\r\n    line = converters.to_unicode('\\r' + self._format_line())\r\n  File \"/srv/zwm/pzdiff/libs/progressbar/bar.py\", line 470, in _format_line\r\n    widgets = ''.join(self._to_unicode(self._format_widgets()))\r\n  File \"/srv/zwm/pzdiff/libs/progressbar/bar.py\", line 445, in _format_widgets\r\n    widget_output = converters.to_unicode(widget(self, data))\r\n  File \"/srv/zwm/pzdiff/libs/progressbar/widgets.py\", line 204, in __call__\r\n    return FormatWidgetMixin.__call__(self, progress, data, **kwargs)\r\n  File \"/srv/zwm/pzdiff/libs/progressbar/widgets.py\", line 73, in __call__\r\n    return (format or self.format) % data\r\nKeyError: u'elapsed'\r\n------------------------------------------------------------------------------\r\nThe reason is format_time() in utils module throws:\r\nAttributeError: 'datetime.timedelta' object has no attribute 'total_seconds'\r\n\r\n#### Code\r\n\r\nRun Timer widget under python 2.6\r\n\r\n#### Versions\r\n\r\n- Python version: 2.6.6\r\n- Operating System: Linux\r\n- Package version: 2-3.20.2\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/125", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/125/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/125/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/125", "id": 240571230, "node_id": "MDU6SXNzdWUyNDA1NzEyMzA=", "number": 125, "title": "\"finished\" not a member of ProgressBar", "user": {"login": "NiklasRosenstein", "id": 1318438, "node_id": "MDQ6VXNlcjEzMTg0Mzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1318438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NiklasRosenstein", "html_url": "https://github.com/NiklasRosenstein", "followers_url": "https://api.github.com/users/NiklasRosenstein/followers", "following_url": "https://api.github.com/users/NiklasRosenstein/following{/other_user}", "gists_url": "https://api.github.com/users/NiklasRosenstein/gists{/gist_id}", "starred_url": "https://api.github.com/users/NiklasRosenstein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NiklasRosenstein/subscriptions", "organizations_url": "https://api.github.com/users/NiklasRosenstein/orgs", "repos_url": "https://api.github.com/users/NiklasRosenstein/repos", "events_url": "https://api.github.com/users/NiklasRosenstein/events{/privacy}", "received_events_url": "https://api.github.com/users/NiklasRosenstein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-05T08:11:22Z", "updated_at": "2017-07-05T14:19:04Z", "closed_at": "2017-07-05T14:17:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "From the ProgressBar docstring:\r\n\r\n```\r\n    Useful methods and attributes include (Public API):\r\n     - value: current progress (min_value <= value <= max_value)\r\n     - max_value: maximum (and final) value\r\n     - finished: True if the bar has finished (reached 100%)\r\n     - start_time: the time when start() method of ProgressBar was called\r\n     - seconds_elapsed: seconds elapsed since start_time and last call to\r\n                        update\r\n```\r\n\r\nBut `ProgressBar.finished` does not exist.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/124", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/124/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/124/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/124", "id": 236284711, "node_id": "MDU6SXNzdWUyMzYyODQ3MTE=", "number": 124, "title": "Showing KiB/s when it should be MiB/s", "user": {"login": "meyersbs", "id": 4073851, "node_id": "MDQ6VXNlcjQwNzM4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/4073851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meyersbs", "html_url": "https://github.com/meyersbs", "followers_url": "https://api.github.com/users/meyersbs/followers", "following_url": "https://api.github.com/users/meyersbs/following{/other_user}", "gists_url": "https://api.github.com/users/meyersbs/gists{/gist_id}", "starred_url": "https://api.github.com/users/meyersbs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meyersbs/subscriptions", "organizations_url": "https://api.github.com/users/meyersbs/orgs", "repos_url": "https://api.github.com/users/meyersbs/repos", "events_url": "https://api.github.com/users/meyersbs/events{/privacy}", "received_events_url": "https://api.github.com/users/meyersbs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-15T19:02:39Z", "updated_at": "2017-06-15T22:33:18Z", "closed_at": "2017-06-15T22:33:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nI am downloading a very large (`8GB`) file using `urllib.request.urlretrieve`, but calls to `FileTransferSpeed()` are showing the speed in `KiB/s` throughout the entire download, when it clearly should be `MiB/s`.\r\n\r\n![progress3](https://user-images.githubusercontent.com/4073851/27197229-73648e7e-51db-11e7-9f85-c28c352c9940.png)\r\n\r\n\r\n**Note:** calls to `ETA()` _are_ showing the correct time.\r\n\r\n#### Code\r\n\r\n``` python\r\nimport progressbar as pb\r\nfrom urllib.request import urlretrieve\r\n\r\ndef download_progress(blocks_read, block_size, total_size):\r\n    if blocks_read == 0:\r\n        widgets = [pb.Percentage(), ' ', pb.Bar(), ' ', pb.ETA(), ' ',\r\n                   pb.FileTransferSpeed()]\r\n        download_progress.progress_bar = pb.ProgressBar(widgets=widgets,\r\n            maxval=(total_size/block_size) + 1).start()\r\n\r\n    download_progress.progress_bar.update(blocks_read)\r\n\r\ndef _download(out_path, url):\r\n    (_, headers) = urlretrieve(url, out_path, reporthook=download_progress)\r\n```\r\n\r\n#### Versions\r\n\r\n- Python version: `3.5.3 (default, Jan 19 2017, 14:11:04) \\n[GCC 6.3.0 20170118]`\r\n- Operating System: `Ubuntu 17.04`\r\n- Package version: `3.30.2`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/122", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/122/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/122/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/122", "id": 233139038, "node_id": "MDU6SXNzdWUyMzMxMzkwMzg=", "number": 122, "title": "AdaptiveTransferSpeed is not adaptive", "user": {"login": "tobiasmaier", "id": 966180, "node_id": "MDQ6VXNlcjk2NjE4MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/966180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobiasmaier", "html_url": "https://github.com/tobiasmaier", "followers_url": "https://api.github.com/users/tobiasmaier/followers", "following_url": "https://api.github.com/users/tobiasmaier/following{/other_user}", "gists_url": "https://api.github.com/users/tobiasmaier/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobiasmaier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobiasmaier/subscriptions", "organizations_url": "https://api.github.com/users/tobiasmaier/orgs", "repos_url": "https://api.github.com/users/tobiasmaier/repos", "events_url": "https://api.github.com/users/tobiasmaier/events{/privacy}", "received_events_url": "https://api.github.com/users/tobiasmaier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-06-02T10:17:51Z", "updated_at": "2019-09-18T00:35:15Z", "closed_at": "2019-09-17T14:00:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nAdaptiveTransferSpeed shows the same values as TransferSpeed, it does not calculate the values over the last X samples.\r\n\r\nThe example code below shows when finished:\r\n\r\n> 100% ETA: Time: 0:00:15 Adaptive ETA: Time: 0:00:15 Absolute ETA: Finished at: 0:00:15 Transfer Speed:  33.3 B/s Adaptive Transfer Speed:  33.3 B/s ||\r\n\r\nthe expected Adaptive Transfer Speed with  `sleep(0.1)` for the last 100 iterations would be `10.0 B/s`\r\n\r\nThe reason is `FileTransferSpeed` is used to print Adaptive Transfer Speed but calculated and passed parameters _value_ and _total_seconds_elapsed_ are ignored because the keys exist in data.\r\n```\r\nvalue = data['value'] or value\r\nelapsed = data['total_seconds_elapsed'] or total_seconds_elapsed\r\n```\r\n\r\n#### Proposed Fix\r\nChange the code in `FileTransferSpeed.__call__` to\r\n```\r\nvalue = value or data['value']\r\nelapsed = total_seconds_elapsed or data['total_seconds_elapsed']\r\n```\r\nor to be have the same code as in `ETA.__call__` to:\r\n```\r\nif value is None:\r\n    value = data['value']\r\nif elapsed is None:\r\n    elapsed = data['total_seconds_elapsed']\r\n```\r\n\r\n\r\n#### Code\r\nCopied from examples and added FileTransferSpeed widget\r\n```\r\nimport progressbar\r\nfrom time import sleep\r\n\r\nwidgets = [\r\n    progressbar.Percentage(),\r\n    ' ETA: ', progressbar.ETA(),\r\n    ' Adaptive ETA: ', progressbar.AdaptiveETA(),\r\n    ' Absolute ETA: ', progressbar.AbsoluteETA(),\r\n    ' Transfer Speed: ', progressbar.FileTransferSpeed(),\r\n    ' Adaptive Transfer Speed: ', progressbar.AdaptiveTransferSpeed(),\r\n    ' ', progressbar.Bar(),\r\n]\r\nbar = progressbar.ProgressBar(widgets=widgets, max_value=500)\r\nbar.start()\r\nfor i in range(500):\r\n    if i < 100:\r\n        sleep(0.02)\r\n    elif i > 400:\r\n        sleep(0.1)\r\n    else:\r\n        sleep(0.01)\r\n    bar.update(i + 1)\r\nbar.finish()\r\n```\r\n\r\n#### Versions\r\n\r\n- Python version: 3.5.2 (default, Nov 17 2016, 17:05:23) [GCC 5.4.0 20160609]\r\n- Python distribution/environment: CPython\r\n- Operating System: Ubuntu Linux\r\n- Package version: 3.20.0 / git\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/121", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/121/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/121/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/121", "id": 232951812, "node_id": "MDU6SXNzdWUyMzI5NTE4MTI=", "number": 121, "title": "Progressbar as wrapped iterable gets out of sync", "user": {"login": "tobiasmaier", "id": 966180, "node_id": "MDQ6VXNlcjk2NjE4MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/966180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobiasmaier", "html_url": "https://github.com/tobiasmaier", "followers_url": "https://api.github.com/users/tobiasmaier/followers", "following_url": "https://api.github.com/users/tobiasmaier/following{/other_user}", "gists_url": "https://api.github.com/users/tobiasmaier/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobiasmaier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobiasmaier/subscriptions", "organizations_url": "https://api.github.com/users/tobiasmaier/orgs", "repos_url": "https://api.github.com/users/tobiasmaier/repos", "events_url": "https://api.github.com/users/tobiasmaier/events{/privacy}", "received_events_url": "https://api.github.com/users/tobiasmaier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-01T17:24:43Z", "updated_at": "2017-06-02T14:10:02Z", "closed_at": "2017-06-02T13:51:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nProgressbar as wrapped iterable show to high ETA if iterations take less than _MINIMUM_UPDATE_INTERVAL.\r\n\r\nThe example code from the documentation jumps from\r\n\r\n> 38% (38 of 100) |#########                | Elapsed Time: 0:00:01 ETA: 0:00:03\r\n\r\nto\r\n\r\n> 100% (100 of 100) |#######################| Elapsed Time: 0:00:02 Time: 0:00:02\r\n\r\nThe reason is that the wrapper around the iterable calls `self.update(self.value + 1)` but self.value is not updated if the time from last update is less than `_MINIMUM_UPDATE_INTERVAL`.\r\n\r\n#### Code\r\nJust added print statement to example code from documentation to show the mismatch between internal value and actual iteration.\r\n```\r\nimport time\r\nimport progressbar\r\n\r\nbar = progressbar.ProgressBar()\r\nfor i in bar(range(100)):\r\n    print(i, bar.value)\r\n    time.sleep(0.02)\r\n```\r\n#### Versions\r\n\r\n- Python version: 3.5.2 (default, Nov 17 2016, 17:05:23) [GCC 5.4.0 20160609]\r\n- Python distribution/environment: CPython\r\n- Operating System:  Ubuntu Linux\r\n- Package version: 3.20.0\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/120", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/120/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/120/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/120", "id": 232319777, "node_id": "MDU6SXNzdWUyMzIzMTk3Nzc=", "number": 120, "title": "Can't print to stdout after calling finish unless calling it twice", "user": {"login": "Preston-Landers", "id": 5307223, "node_id": "MDQ6VXNlcjUzMDcyMjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5307223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Preston-Landers", "html_url": "https://github.com/Preston-Landers", "followers_url": "https://api.github.com/users/Preston-Landers/followers", "following_url": "https://api.github.com/users/Preston-Landers/following{/other_user}", "gists_url": "https://api.github.com/users/Preston-Landers/gists{/gist_id}", "starred_url": "https://api.github.com/users/Preston-Landers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Preston-Landers/subscriptions", "organizations_url": "https://api.github.com/users/Preston-Landers/orgs", "repos_url": "https://api.github.com/users/Preston-Landers/repos", "events_url": "https://api.github.com/users/Preston-Landers/events{/privacy}", "received_events_url": "https://api.github.com/users/Preston-Landers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-05-30T17:06:12Z", "updated_at": "2017-05-30T18:15:52Z", "closed_at": "2017-05-30T18:03:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Description\r\n\r\nWhen using `redirect_stdout=True`, attempts to `print()` after finishing or otherwise write to sys.stdout are lost (not printed to console), unless `finish()` is called twice. It seems only the second finish call actually restores the old stdout.\r\n\r\nDoesn't matter whether using context wrapper or not. If using context wrapper, you must call `finish()` inside the context to get stdout restored.  If not using context wrapper, you must call `finish` twice.\r\n\r\nFollowing example illustrates. Running this as is, you should see FINISH printed.  If you remove that second `p.finish()` call, you won't see FINISH printed.\r\n\r\n#### Code\r\n```python\r\nimport progressbar\r\nimport time\r\nimport sys\r\n\r\nm = 24514315\r\np = progressbar.ProgressBar(\r\n    widgets=[progressbar.Percentage(), progressbar.Bar()],\r\n    max_value=m,\r\n    redirect_stdout=True,\r\n)\r\n\r\nprint(\"START\")\r\n\r\nfor x in range(0, m, 8192):\r\n    time.sleep(0.0001)\r\n    p.update(x)\r\n\r\np.finish()\r\np.finish()   # why does it need another finish here?\r\n\r\n# with progressbar.ProgressBar(\r\n#         widgets=[progressbar.Percentage(), progressbar.Bar()],\r\n#         max_value=m,\r\n#         redirect_stdout=True) as p:\r\n#     for x in range(0, m, 8192):\r\n#         time.sleep(0.0001)\r\n#         p.update(x)\r\n#\r\n#     p.finish()\r\n\r\nprint(\"FINISHED\")\r\n```\r\n\r\n#### Versions\r\n\r\n- Python version: 3.6.1 (x86-64)\r\n- Python distribution/environment: CPython\r\n- Operating System: Windows 10 x86-64\r\n- Package version: 3.20.2\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/116", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/116/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/116/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/116", "id": 231492656, "node_id": "MDU6SXNzdWUyMzE0OTI2NTY=", "number": 116, "title": "eta repeatedly prints on newline above progressbar", "user": {"login": "jkarimi91", "id": 8411317, "node_id": "MDQ6VXNlcjg0MTEzMTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/8411317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jkarimi91", "html_url": "https://github.com/jkarimi91", "followers_url": "https://api.github.com/users/jkarimi91/followers", "following_url": "https://api.github.com/users/jkarimi91/following{/other_user}", "gists_url": "https://api.github.com/users/jkarimi91/gists{/gist_id}", "starred_url": "https://api.github.com/users/jkarimi91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jkarimi91/subscriptions", "organizations_url": "https://api.github.com/users/jkarimi91/orgs", "repos_url": "https://api.github.com/users/jkarimi91/repos", "events_url": "https://api.github.com/users/jkarimi91/events{/privacy}", "received_events_url": "https://api.github.com/users/jkarimi91/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-26T00:07:11Z", "updated_at": "2017-05-26T08:53:10Z", "closed_at": "2017-05-26T08:52:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nThe eta is repeatedly printed above the progress bar. \r\n\r\n<img width=\"634\" alt=\"screen shot 2017-05-25 at 5 05 46 pm\" src=\"https://cloud.githubusercontent.com/assets/8411317/26475393/79e8a962-416c-11e7-9c54-516f9cc05c14.png\">\r\n\r\n\r\n#### Code\r\n\r\n```python\r\nimport progressbar\r\nfrom time import sleep\r\n\r\nwidgets = [\r\n          'Test: ', progressbar.Percentage(),\r\n          ' ', progressbar.Bar(),\r\n          ' ', progressbar.ETA(),\r\n          ' ', progressbar.FileTransferSpeed(),\r\n      ]\r\nbar = progressbar.ProgressBar(widgets=widgets, max_value=1000).start()\r\nfor i in range(100):\r\n    # do something\r\n    bar.update(10 * i + 1)\r\n    sleep(1)\r\nbar.finish()\r\n```\r\n\r\n#### Versions\r\n\r\n- Python version: 2.7.13\r\n- Python distribution/environment: Anaconda\r\n- Operating System: El Capitan\r\n- Package version: 3.20.1\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/115", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/115/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/115/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/115", "id": 224985325, "node_id": "MDU6SXNzdWUyMjQ5ODUzMjU=", "number": 115, "title": "Multiple progress bars appear at once in IntelliJ IDEA", "user": {"login": "HatScripts", "id": 5691865, "node_id": "MDQ6VXNlcjU2OTE4NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/5691865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HatScripts", "html_url": "https://github.com/HatScripts", "followers_url": "https://api.github.com/users/HatScripts/followers", "following_url": "https://api.github.com/users/HatScripts/following{/other_user}", "gists_url": "https://api.github.com/users/HatScripts/gists{/gist_id}", "starred_url": "https://api.github.com/users/HatScripts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HatScripts/subscriptions", "organizations_url": "https://api.github.com/users/HatScripts/orgs", "repos_url": "https://api.github.com/users/HatScripts/repos", "events_url": "https://api.github.com/users/HatScripts/events{/privacy}", "received_events_url": "https://api.github.com/users/HatScripts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 612512733, "node_id": "MDU6TGFiZWw2MTI1MTI3MzM=", "url": "https://api.github.com/repos/WoLpH/python-progressbar/labels/unfixable%20upstream%20bug", "name": "unfixable upstream bug", "color": "006b75", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 25, "created_at": "2017-04-28T05:44:09Z", "updated_at": "2019-09-17T12:54:41Z", "closed_at": "2019-09-17T12:54:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nThis obviously doesn't seem to be intended behaviour, but I'm not sure whether it's a problem with progressbar, with IntelliJ, or with my configuration.\r\n\r\n![image](https://cloud.githubusercontent.com/assets/5691865/25515338/37417986-2c27-11e7-9b82-574d2282330d.png)\r\n\r\n[Here's the full console output from running examples.py.](https://gist.github.com/HatScripts/385d4e17ba0db738eb24089a0bfd42ec)\r\n\r\n#### Code\r\n\r\nReally any code that outputs a progress bar to the console, e.g.\r\n```python\r\nimport time\r\nimport progressbar\r\n\r\nwith progressbar.ProgressBar(max_value=10) as progress:\r\n    for i in range(10):\r\n        time.sleep(0.1)\r\n        progress.update(i)\r\n```\r\n\r\n#### Versions\r\n\r\n- Python version: `3.6.0 (v3.6.0:41df79263a11, Dec 23 2016, 07:18:10) [MSC v.1900 32 bit (Intel)]`\r\n- Python distribution/environment: IDLE\r\n- Operating System: Windows 10\r\n- Package version: `3.18.1`\r\n\r\n\r\n**Edit:**\r\nI just tested the following simple function and the issue still occurs. Guess that means it's probably an issue with IntelliJ IDEA.\r\n```py\r\nimport sys\r\nfrom time import sleep\r\n\r\ndef update_progress(i, total, length=10, fg=\"#\", bg=\" \", decimals=0):\r\n    progress = 100 * (i / float(total))\r\n    blocks = int(length * i // total)\r\n    bar = fg * blocks + bg * (length - blocks)\r\n    sys.stderr.write(f\"\\r[{bar}] {progress:.{decimals}f}%\")\r\n    sys.stderr.flush()\r\n\r\nfor i in range(0, 100):\r\n    update_progress(i, 99)\r\n    sleep(0.1)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/113", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/113/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/113/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/113", "id": 222592304, "node_id": "MDU6SXNzdWUyMjI1OTIzMDQ=", "number": 113, "title": "dynamic max value", "user": {"login": "DrRibosome", "id": 1173117, "node_id": "MDQ6VXNlcjExNzMxMTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1173117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrRibosome", "html_url": "https://github.com/DrRibosome", "followers_url": "https://api.github.com/users/DrRibosome/followers", "following_url": "https://api.github.com/users/DrRibosome/following{/other_user}", "gists_url": "https://api.github.com/users/DrRibosome/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrRibosome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrRibosome/subscriptions", "organizations_url": "https://api.github.com/users/DrRibosome/orgs", "repos_url": "https://api.github.com/users/DrRibosome/repos", "events_url": "https://api.github.com/users/DrRibosome/events{/privacy}", "received_events_url": "https://api.github.com/users/DrRibosome/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-19T01:42:44Z", "updated_at": "2017-05-09T11:31:58Z", "closed_at": "2017-05-09T11:31:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "For some kinds of jobs the max number of tasks may not be known at the start time (for instance, if a task starts more tasks). In cases like this it would be nice to be able to update the max value in a way similar to the current `update` call and have the bar/eta/etc adjust and redraw.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/112", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/112/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/112/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/112", "id": 222513493, "node_id": "MDU6SXNzdWUyMjI1MTM0OTM=", "number": 112, "title": "Not an issue, just looking for an example", "user": {"login": "securisec", "id": 22226823, "node_id": "MDQ6VXNlcjIyMjI2ODIz", "avatar_url": "https://avatars2.githubusercontent.com/u/22226823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/securisec", "html_url": "https://github.com/securisec", "followers_url": "https://api.github.com/users/securisec/followers", "following_url": "https://api.github.com/users/securisec/following{/other_user}", "gists_url": "https://api.github.com/users/securisec/gists{/gist_id}", "starred_url": "https://api.github.com/users/securisec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/securisec/subscriptions", "organizations_url": "https://api.github.com/users/securisec/orgs", "repos_url": "https://api.github.com/users/securisec/repos", "events_url": "https://api.github.com/users/securisec/events{/privacy}", "received_events_url": "https://api.github.com/users/securisec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-04-18T19:01:03Z", "updated_at": "2017-04-18T21:28:41Z", "closed_at": "2017-04-18T20:36:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would you happen to have an example on how I can use progressbar to track the progress of a subprocess.Popen?\r\n\r\nThanks! ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/111", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/111/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/111/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/111", "id": 221216230, "node_id": "MDU6SXNzdWUyMjEyMTYyMzA=", "number": 111, "title": "Update to python 3 possible?", "user": {"login": "wccandm", "id": 3610210, "node_id": "MDQ6VXNlcjM2MTAyMTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3610210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wccandm", "html_url": "https://github.com/wccandm", "followers_url": "https://api.github.com/users/wccandm/followers", "following_url": "https://api.github.com/users/wccandm/following{/other_user}", "gists_url": "https://api.github.com/users/wccandm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wccandm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wccandm/subscriptions", "organizations_url": "https://api.github.com/users/wccandm/orgs", "repos_url": "https://api.github.com/users/wccandm/repos", "events_url": "https://api.github.com/users/wccandm/events{/privacy}", "received_events_url": "https://api.github.com/users/wccandm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-04-12T10:18:14Z", "updated_at": "2017-04-18T22:12:39Z", "closed_at": "2017-04-12T12:41:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nWant to use this in a python3 project on a raspberry pi.\r\n#### Code\r\n\r\nn/a\r\n\r\n#### Versions\r\n\r\n- Python version: `import sys; print(sys.version)`\r\n- Python distribution/environment: CPython/Anaconda/IPython/IDLE\r\n- Operating System: Windows 10, Ubuntu Linux, etc.\r\n- Package version: `import progressbar; print(progressbar.__version__)`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/110", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/110/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/110/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/110", "id": 220430205, "node_id": "MDU6SXNzdWUyMjA0MzAyMDU=", "number": 110, "title": "none of the examples is working in pycharm", "user": {"login": "transfluxus", "id": 1574219, "node_id": "MDQ6VXNlcjE1NzQyMTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1574219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/transfluxus", "html_url": "https://github.com/transfluxus", "followers_url": "https://api.github.com/users/transfluxus/followers", "following_url": "https://api.github.com/users/transfluxus/following{/other_user}", "gists_url": "https://api.github.com/users/transfluxus/gists{/gist_id}", "starred_url": "https://api.github.com/users/transfluxus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/transfluxus/subscriptions", "organizations_url": "https://api.github.com/users/transfluxus/orgs", "repos_url": "https://api.github.com/users/transfluxus/repos", "events_url": "https://api.github.com/users/transfluxus/events{/privacy}", "received_events_url": "https://api.github.com/users/transfluxus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-04-08T21:56:55Z", "updated_at": "2017-04-08T22:11:39Z", "closed_at": "2017-04-08T22:11:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nthe first one just doesnt deliver any output until it reaches 100%\r\nthe parameter `max_value` and `redirect_stdout` do  not exist in the actual version, there is maxval but there are more issues...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/109", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/109/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/109/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/109", "id": 220355897, "node_id": "MDU6SXNzdWUyMjAzNTU4OTc=", "number": 109, "title": "Documentation on readthedocs.io seems to be out of date", "user": {"login": "mmabey", "id": 1606251, "node_id": "MDQ6VXNlcjE2MDYyNTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1606251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmabey", "html_url": "https://github.com/mmabey", "followers_url": "https://api.github.com/users/mmabey/followers", "following_url": "https://api.github.com/users/mmabey/following{/other_user}", "gists_url": "https://api.github.com/users/mmabey/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmabey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmabey/subscriptions", "organizations_url": "https://api.github.com/users/mmabey/orgs", "repos_url": "https://api.github.com/users/mmabey/repos", "events_url": "https://api.github.com/users/mmabey/events{/privacy}", "received_events_url": "https://api.github.com/users/mmabey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-07T23:35:06Z", "updated_at": "2017-04-08T13:16:45Z", "closed_at": "2017-04-08T13:16:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nIt seems the documentation on http://progressbar-2.readthedocs.io/en/latest is out of sync with the correct documentation at http://pythonhosted.org/progressbar2/. In particular, the docs for `utils.get_terminal_size()`. Compare the following two documents:\r\n\r\n- http://pythonhosted.org/progressbar2/progressbar.utils.html#progressbar.utils.get_terminal_size\r\n- http://progressbar-2.readthedocs.io/en/latest/progressbar.utils.html#progressbar.utils.get_terminal_size\r\n\r\nFor me, the issue was that the return values are no longer in the order specified on readthedocs.io, which was kind of confusing for a couple minutes...\r\n\r\n#### Versions\r\n\r\n- Python version: 3.5.2 (default, Sep 22 2016, 14:31:28) [GCC 4.8.5]\r\n- Python distribution/environment: CPython\r\n- Operating System: Linux Mint 17.3\r\n- Package version: 3.17.1\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/108", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/108/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/108/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/108", "id": 219389752, "node_id": "MDU6SXNzdWUyMTkzODk3NTI=", "number": 108, "title": "Progressbar finishes before 100%", "user": {"login": "ZeweiChu", "id": 2027005, "node_id": "MDQ6VXNlcjIwMjcwMDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2027005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZeweiChu", "html_url": "https://github.com/ZeweiChu", "followers_url": "https://api.github.com/users/ZeweiChu/followers", "following_url": "https://api.github.com/users/ZeweiChu/following{/other_user}", "gists_url": "https://api.github.com/users/ZeweiChu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZeweiChu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZeweiChu/subscriptions", "organizations_url": "https://api.github.com/users/ZeweiChu/orgs", "repos_url": "https://api.github.com/users/ZeweiChu/repos", "events_url": "https://api.github.com/users/ZeweiChu/events{/privacy}", "received_events_url": "https://api.github.com/users/ZeweiChu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-04-04T21:28:06Z", "updated_at": "2017-04-08T20:53:22Z", "closed_at": "2017-04-08T20:52:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nProgressbar finishes before 100%\r\n\r\n#### Code\r\n\r\n> import progressbar\r\n> bar = progressbar.ProgressBar(max_value=14).start()\r\n> \r\n> for idx in range(14):\r\n>    print(idx)\r\n>    bar.update(idx+1)\r\n> \r\n> bar.finish()\r\n\r\nThis code gives: \r\n\r\n> N/A% (0 of 14) |                                                                                                       | Elapsed Time: 0:00:00 ETA:  --:--:--0\r\n> 1\r\n> 2\r\n> 3\r\n> 4\r\n> 5\r\n> 6\r\n> 7\r\n> 8\r\n> 9\r\n> 10\r\n> 11\r\n> 12\r\n> 13\r\n\r\n#### Versions\r\n\r\n> >>> print(sys.version)\r\n> 2.7.13 |Continuum Analytics, Inc.| (default, Dec 20 2016, 23:05:08) \r\n> [GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.57)]\r\n\r\n- Python distribution/environment: Anaconda\r\n- Operating System: MaxOS\r\n- Package version: 3.17.0\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/107", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/107/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/107/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/107", "id": 219279495, "node_id": "MDU6SXNzdWUyMTkyNzk0OTU=", "number": 107, "title": "TypeError in bar.py update", "user": {"login": "Biancadar", "id": 16649798, "node_id": "MDQ6VXNlcjE2NjQ5Nzk4", "avatar_url": "https://avatars3.githubusercontent.com/u/16649798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Biancadar", "html_url": "https://github.com/Biancadar", "followers_url": "https://api.github.com/users/Biancadar/followers", "following_url": "https://api.github.com/users/Biancadar/following{/other_user}", "gists_url": "https://api.github.com/users/Biancadar/gists{/gist_id}", "starred_url": "https://api.github.com/users/Biancadar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Biancadar/subscriptions", "organizations_url": "https://api.github.com/users/Biancadar/orgs", "repos_url": "https://api.github.com/users/Biancadar/repos", "events_url": "https://api.github.com/users/Biancadar/events{/privacy}", "received_events_url": "https://api.github.com/users/Biancadar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-04T14:57:21Z", "updated_at": "2017-04-05T07:19:36Z", "closed_at": "2017-04-05T07:19:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nSince updating to 3.17 we've seen the following issue when using a progress bar over a list of lists of strings:\r\n\r\nFile \"C:\\Program Files\\Python36\\lib\\site-packages\\progressbar\\bar.py\", line 431, in __next__\r\n    self.start()\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\progressbar\\bar.py\", line 606, in start\r\n    self.update(self.min_value, force=True)\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\progressbar\\bar.py\", line 562, in update\r\n    StdRedirectMixin.update(self, value=value)\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\progressbar\\bar.py\", line 150, in update\r\n    DefaultFdMixin.update(self, value=value)\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\progressbar\\bar.py\", line 55, in update\r\n    self.fd.write(line)\r\nTypeError: write() argument must be str, not bytes\r\n\r\n#### Code\r\n\r\nIf applicable, code to reproduce the issue and/or the stacktrace of the issue\r\n\r\n#### Versions\r\n\r\n- Python version: 3.6.0\r\n- Python distribution/environment: CPython\r\n- Operating System: Windows Server 2012 R2.\r\n- Package version: 3.17\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/106", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/106/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/106/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/106", "id": 219222678, "node_id": "MDU6SXNzdWUyMTkyMjI2Nzg=", "number": 106, "title": "`bar.start()` gives TypeError: write() argument must be str, not bytes", "user": {"login": "gerritholl", "id": 500246, "node_id": "MDQ6VXNlcjUwMDI0Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/500246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gerritholl", "html_url": "https://github.com/gerritholl", "followers_url": "https://api.github.com/users/gerritholl/followers", "following_url": "https://api.github.com/users/gerritholl/following{/other_user}", "gists_url": "https://api.github.com/users/gerritholl/gists{/gist_id}", "starred_url": "https://api.github.com/users/gerritholl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gerritholl/subscriptions", "organizations_url": "https://api.github.com/users/gerritholl/orgs", "repos_url": "https://api.github.com/users/gerritholl/repos", "events_url": "https://api.github.com/users/gerritholl/events{/privacy}", "received_events_url": "https://api.github.com/users/gerritholl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-04T11:41:31Z", "updated_at": "2017-04-05T07:32:42Z", "closed_at": "2017-04-05T07:32:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nStarting with `progressbar2 3.17.0`, `bar.start()` on `Python 3.5` fails with `TypeError: write() argument must be str, not bytes`:\r\n\r\n#### Code\r\n\r\n```\r\n$ cat mwe.py \r\n#!/usr/bin/env python\r\n\r\nimport time\r\nimport progressbar\r\n\r\nbar = progressbar.ProgressBar(max_value=1, widgets=[progressbar.Bar(\"=\", \"[\", \"]\"), \" \", progressbar.Percentage(), ' (', progressbar.ETA(), ') '])\r\nbar.start()\r\nbar.update(0)\r\ntime.sleep(0.5)\r\nbar.update(0.5)\r\ntime.sleep(0.5)\r\nbar.update(1)\r\nbar.finish()\r\n$ ./mwe.py                                                                                                                                                                                                                                                                                                                                    \r\nTraceback (most recent call last):\r\n  File \"./mwe.py\", line 7, in <module>\r\n    bar.start()\r\n  File \"/dev/shm/gerrit/venv/stable-3.5/lib/python3.5/site-packages/progressbar/bar.py\", line 606, in start\r\n    self.update(self.min_value, force=True)\r\n  File \"/dev/shm/gerrit/venv/stable-3.5/lib/python3.5/site-packages/progressbar/bar.py\", line 562, in update\r\n    StdRedirectMixin.update(self, value=value)\r\n  File \"/dev/shm/gerrit/venv/stable-3.5/lib/python3.5/site-packages/progressbar/bar.py\", line 150, in update\r\n    DefaultFdMixin.update(self, value=value)\r\n  File \"/dev/shm/gerrit/venv/stable-3.5/lib/python3.5/site-packages/progressbar/bar.py\", line 55, in update\r\n    self.fd.write(line)\r\nTypeError: write() argument must be str, not bytes\r\n```\r\n\r\n#### Versions\r\n\r\n- Python version: `3.5`\r\n- Operating System: Red Hat Enterprise Linux Server release 6.8 (Santiago)\r\n- Package version: `3.17.0`\r\n\r\n\r\nThe problem does not occur in `3.16.0`.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/104", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/104/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/104/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/104", "id": 218869669, "node_id": "MDU6SXNzdWUyMTg4Njk2Njk=", "number": 104, "title": "Unicode Marker in Python 2", "user": {"login": "bpmweel", "id": 16776108, "node_id": "MDQ6VXNlcjE2Nzc2MTA4", "avatar_url": "https://avatars2.githubusercontent.com/u/16776108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bpmweel", "html_url": "https://github.com/bpmweel", "followers_url": "https://api.github.com/users/bpmweel/followers", "following_url": "https://api.github.com/users/bpmweel/following{/other_user}", "gists_url": "https://api.github.com/users/bpmweel/gists{/gist_id}", "starred_url": "https://api.github.com/users/bpmweel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bpmweel/subscriptions", "organizations_url": "https://api.github.com/users/bpmweel/orgs", "repos_url": "https://api.github.com/users/bpmweel/repos", "events_url": "https://api.github.com/users/bpmweel/events{/privacy}", "received_events_url": "https://api.github.com/users/bpmweel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-04-03T09:00:49Z", "updated_at": "2017-04-04T23:22:38Z", "closed_at": "2017-04-04T23:22:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nI'm trying to use a unicode string as a marker in both python 2 and 3. In python 3 this works fine, but in python 2 I get the following error (Full trace at the end):\r\n\r\n`UnicodeEncodeError: 'ascii' codec can't encode characters in position 0-24: ordinal not in range(128)`\r\n\r\nUsing encode('utf-8') on this marker results in the error: `AssertionError: Markers are required to be 1 char`\r\n\r\nThe trace shows that the string, which is already unicode, is being encoded into unicode again. Perhaps this is superfluous?\r\n\r\nShould I call bar in a different way?\r\n\r\n#### Code\r\n\r\n```python\r\nimport progressbar\r\nfrom progressbar import Bar\r\n\r\nwidgets = [Bar(marker=u'\\u2588')]\r\nprogress_bar = progressbar.ProgressBar(\r\n                max_value=10, widgets=widgets)\r\nprogress_bar.start()\r\nprogress_bar.update(1)\r\n\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/bweel/anaconda2/envs/boatswain2/lib/python2.7/site-packages/progressbar/bar.py\", line 550, in update\r\n    StdRedirectMixin.update(self, value=value)\r\n  File \"/home/bweel/anaconda2/envs/boatswain2/lib/python2.7/site-packages/progressbar/bar.py\", line 143, in update\r\n    DefaultFdMixin.update(self, value=value)\r\n  File \"/home/bweel/anaconda2/envs/boatswain2/lib/python2.7/site-packages/progressbar/bar.py\", line 48, in update\r\n    self.fd.write('\\r' + self._format_line())\r\n  File \"/home/bweel/anaconda2/envs/boatswain2/lib/python2.7/site-packages/progressbar/bar.py\", line 481, in _format_line\r\n    widgets = ''.join(self._format_widgets())\r\n  File \"/home/bweel/anaconda2/envs/boatswain2/lib/python2.7/site-packages/progressbar/bar.py\", line 472, in _format_widgets\r\n    widget_output = widget(self, data, portion)\r\n  File \"/home/bweel/anaconda2/envs/boatswain2/lib/python2.7/site-packages/progressbar/widgets.py\", line 669, in __call__\r\n    marker = converters.to_unicode(self.marker(progress, data, width))\r\n  File \"/home/bweel/anaconda2/envs/boatswain2/lib/python2.7/site-packages/python_utils/converters.py\", line 178, in to_unicode\r\n    input_ = input_.decode(encoding, errors)\r\n  File \"/home/bweel/anaconda2/envs/boatswain2/lib/python2.7/encodings/utf_8.py\", line 16, in decode\r\n    return codecs.utf_8_decode(input, errors, True)\r\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 0-15: ordinal not in range(128)\r\n```\r\n\r\n\r\n```python\r\nimport progressbar\r\nfrom progressbar import Bar\r\n\r\nwidgets = [Bar(marker=u'\\u2588'.encode('utf-8'))]\r\n```\r\n\r\n```Traceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/bweel/anaconda2/envs/boatswain2/lib/python2.7/site-packages/progressbar/widgets.py\", line 655, in __init__\r\n    self.marker = create_marker(marker)\r\n  File \"/home/bweel/anaconda2/envs/boatswain2/lib/python2.7/site-packages/progressbar/widgets.py\", line 40, in create_marker\r\n    assert len(marker) == 1, 'Markers are required to be 1 char'\r\nAssertionError: Markers are required to be 1 char\r\n```\r\n\r\n\r\n#### Versions\r\n\r\n- Python version: `2.7.12 | packaged by conda-forge | (default, Sep  8 2016, 14:22:31) \r\n[GCC 4.8.2 20140120 (Red Hat 4.8.2-15)]\r\n`\r\n- Python distribution/environment: `Anaconda`\r\n- Operating System: `Ubuntu Linux (Mint)`\r\n- Package version: `3.16.1`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/102", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/102/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/102/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/102", "id": 214872314, "node_id": "MDU6SXNzdWUyMTQ4NzIzMTQ=", "number": 102, "title": "progressbar doesn't reach 100%", "user": {"login": "gerritholl", "id": 500246, "node_id": "MDQ6VXNlcjUwMDI0Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/500246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gerritholl", "html_url": "https://github.com/gerritholl", "followers_url": "https://api.github.com/users/gerritholl/followers", "following_url": "https://api.github.com/users/gerritholl/following{/other_user}", "gists_url": "https://api.github.com/users/gerritholl/gists{/gist_id}", "starred_url": "https://api.github.com/users/gerritholl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gerritholl/subscriptions", "organizations_url": "https://api.github.com/users/gerritholl/orgs", "repos_url": "https://api.github.com/users/gerritholl/repos", "events_url": "https://api.github.com/users/gerritholl/events{/privacy}", "received_events_url": "https://api.github.com/users/gerritholl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-16T23:58:10Z", "updated_at": "2017-03-17T09:56:24Z", "closed_at": "2017-03-17T09:53:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nWhen updated quickly, progressbar doesn't reach 100%.  This is a consequence of [this commit](https://github.com/WoLpH/python-progressbar/commit/2c9220433c175ebf581a7992653846d2f5298d52).  In particular, the final update should be treated differently because the output for this one remains.  In the example below, progressbar decides not to bother printing the 100% so that for the user, there is the impression the process got stuck at 94% and never finished...\r\n\r\n#### Code\r\n\r\n```\r\n#!/usr/bin/env python\r\nimport progressbar\r\nimport time\r\nprint(\"progressbar version\", progressbar.__version__)\r\nbar = progressbar.ProgressBar(max_value=1,\r\n    widgets=[progressbar.Bar(\"=\", \"[\", \"]\"),\r\n    \" \", progressbar.Percentage(),\r\n    ' (', progressbar.ETA(), ') '])\r\nbar.start()\r\nfor i in range(95):\r\n    time.sleep(0.01)\r\n    bar.update(i/100)\r\n\r\nbar.update(1)\r\nbar.finish()\r\n```\r\n\r\nResult:\r\n\r\n```\r\n$ ./mwe.py \r\nprogressbar version 3.15.0\r\n[====================================================    ]  94% (ETA: 0:00:00) \r\n```\r\n\r\n#### Versions\r\n\r\n- Python version: 3.5.0\r\n- Python distribution/environment: CPython\r\n- Operating System: Red Hat Enterprise Linux Server release 6.8 (Santiago)\r\n- Package version: through `git bisect`, I learn that 2c9220433c175ebf581a7992653846d2f5298d52 is the first bad commit\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/101", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/101/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/101/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/101", "id": 213623636, "node_id": "MDU6SXNzdWUyMTM2MjM2MzY=", "number": 101, "title": "Support logging module", "user": {"login": "d4nst", "id": 6713977, "node_id": "MDQ6VXNlcjY3MTM5Nzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/6713977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d4nst", "html_url": "https://github.com/d4nst", "followers_url": "https://api.github.com/users/d4nst/followers", "following_url": "https://api.github.com/users/d4nst/following{/other_user}", "gists_url": "https://api.github.com/users/d4nst/gists{/gist_id}", "starred_url": "https://api.github.com/users/d4nst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d4nst/subscriptions", "organizations_url": "https://api.github.com/users/d4nst/orgs", "repos_url": "https://api.github.com/users/d4nst/repos", "events_url": "https://api.github.com/users/d4nst/events{/privacy}", "received_events_url": "https://api.github.com/users/d4nst/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-03-12T18:35:53Z", "updated_at": "2017-07-28T12:07:52Z", "closed_at": "2017-05-05T01:59:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nThe `redirect_stdout` option doesn't work when printing messages to stdout using the logging module. \r\n\r\nIs there any workaround for this that I am not aware of? \r\n\r\n#### Code\r\n\r\n```\r\nimport time\r\nimport progressbar\r\n\r\nbar = progressbar.ProgressBar(redirect_stdout=True)\r\nfor i in bar(range(100)):\r\n    logging.warning('Some warning')\r\n    time.sleep(0.1)\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/100", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/100/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/100/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/100", "id": 213328595, "node_id": "MDU6SXNzdWUyMTMzMjg1OTU=", "number": 100, "title": "Execution with progressbar (slower) vs execution w/o progressbar (faster) ", "user": {"login": "Tset-Noitamotua", "id": 5635462, "node_id": "MDQ6VXNlcjU2MzU0NjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5635462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tset-Noitamotua", "html_url": "https://github.com/Tset-Noitamotua", "followers_url": "https://api.github.com/users/Tset-Noitamotua/followers", "following_url": "https://api.github.com/users/Tset-Noitamotua/following{/other_user}", "gists_url": "https://api.github.com/users/Tset-Noitamotua/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tset-Noitamotua/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tset-Noitamotua/subscriptions", "organizations_url": "https://api.github.com/users/Tset-Noitamotua/orgs", "repos_url": "https://api.github.com/users/Tset-Noitamotua/repos", "events_url": "https://api.github.com/users/Tset-Noitamotua/events{/privacy}", "received_events_url": "https://api.github.com/users/Tset-Noitamotua/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-03-10T12:28:39Z", "updated_at": "2017-03-28T11:57:04Z", "closed_at": "2017-03-17T10:02:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "**DISCLAIMER:** I am a python/programming noob :smile:  \r\n\r\n#### Description\r\n\r\nI noticed a longer execution time when running the same code with progressbar vs. running w/o progressbar.\r\nEspecially the widget `progressbar.Timer()` more than doubles execution time in my case.\r\n\r\nIs that normal? Is there a way to get more accurate results?\r\n\r\n\r\n#### Code\r\n\r\nYou will find the code I used here: [lesson_122_lists_del_vs_remove.py][1]\r\n\r\nConsole output of iterative execution\r\n![image](https://cloud.githubusercontent.com/assets/5635462/23795113/1325f9b4-0594-11e7-8a39-7f1a1e561dd2.png)\r\n\r\n\r\n\r\n[1]: https://github.com/Tset-Noitamotua/_learnpython/blob/master/google-python-class/lesson_122_lists_del_vs_remove.py\r\n\r\n#### Versions\r\n\r\n- Python version: 3.5.2 (v3.5.2:4def2a2901a5, Jun 25 2016, 22:18:55) [MSC v.1900 64 bit (AMD64)]\r\n- Python distribution/environment: CPython\r\n- Operating System: Windows 7 (64bit)\r\n- Package version: 3.12.0\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/99", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/99/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/99/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/99", "id": 211021559, "node_id": "MDU6SXNzdWUyMTEwMjE1NTk=", "number": 99, "title": "Animated widgets (arrows, filled_arrows, wheels) from examples.py (Windows)", "user": {"login": "Tset-Noitamotua", "id": 5635462, "node_id": "MDQ6VXNlcjU2MzU0NjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5635462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tset-Noitamotua", "html_url": "https://github.com/Tset-Noitamotua", "followers_url": "https://api.github.com/users/Tset-Noitamotua/followers", "following_url": "https://api.github.com/users/Tset-Noitamotua/following{/other_user}", "gists_url": "https://api.github.com/users/Tset-Noitamotua/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tset-Noitamotua/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tset-Noitamotua/subscriptions", "organizations_url": "https://api.github.com/users/Tset-Noitamotua/orgs", "repos_url": "https://api.github.com/users/Tset-Noitamotua/repos", "events_url": "https://api.github.com/users/Tset-Noitamotua/events{/privacy}", "received_events_url": "https://api.github.com/users/Tset-Noitamotua/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-01T09:19:29Z", "updated_at": "2017-05-26T00:30:44Z", "closed_at": "2017-05-26T00:30:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nRunning [examples.py][1] I got below output for animated widgets:\r\n\r\n```shell\r\nRunning: animated_arrows\r\nArrows: \\u2196\r\nArrows: \\u2191\r\nArrows: \\u2197\r\nArrows: \\u2192\r\nArrows: \\u2198\r\nArrows: \\u2193\r\nArrows: \\u2199\r\nArrows: \\u2190\r\nArrows: \\u2196\r\nArrows: \\u2191\r\nArrows: \\u2197\r\nArrows: \\u2192\r\nArrows: \\u2198\r\nArrows: \\u2193\r\nArrows: \\u2199\r\nArrows: \\u2190\r\nArrows: \\u2196\r\nArrows: \\u2191\r\nArrows: \\u2197\r\nArrows: \\u2192\r\nArrows: \\u2198\r\nArrows: \\u2193\r\nArrows: \\u2199\r\nArrows: \\u2190\r\nArrows: \\u2190\r\n\r\n\r\nRunning: animated_filled_arrows\r\nArrows: \\u25e3\r\nArrows: \\u25e4\r\nArrows: \\u25e5\r\nArrows: \\u25e2\r\nArrows: \\u25e3\r\nArrows: \\u25e4\r\nArrows: \\u25e5\r\nArrows: \\u25e2\r\nArrows: \\u25e3\r\nArrows: \\u25e4\r\nArrows: \\u25e5\r\nArrows: \\u25e2\r\nArrows: \\u25e3\r\nArrows: \\u25e4\r\nArrows: \\u25e5\r\nArrows: \\u25e2\r\nArrows: \\u25e3\r\nArrows: \\u25e4\r\nArrows: \\u25e5\r\nArrows: \\u25e2\r\nArrows: \\u25e3\r\nArrows: \\u25e4\r\nArrows: \\u25e5\r\nArrows: \\u25e2\r\nArrows: \\u25e2\r\n\r\n\r\nRunning: animated_wheels\r\nWheels: \\u25d3\r\nWheels: \\u25d1\r\nWheels: \\u25d2\r\nWheels: \\u25d0\r\nWheels: \\u25d3\r\nWheels: \\u25d1\r\nWheels: \\u25d2\r\nWheels: \\u25d0\r\nWheels: \\u25d3\r\nWheels: \\u25d1\r\nWheels: \\u25d2\r\nWheels: \\u25d0\r\nWheels: \\u25d3\r\nWheels: \\u25d1\r\nWheels: \\u25d2\r\nWheels: \\u25d0\r\nWheels: \\u25d3\r\nWheels: \\u25d1\r\nWheels: \\u25d2\r\nWheels: \\u25d0\r\nWheels: \\u25d3\r\nWheels: \\u25d1\r\nWheels: \\u25d2\r\nWheels: \\u25d0\r\nWheels: \\u25d0\r\n```\r\n\r\n#### Code\r\n\r\n[examples.py][1] from develop branch\r\n\r\n[1]: https://github.com/WoLpH/python-progressbar/blob/develop/examples.py\r\n\r\n#### Versions\r\n\r\n- Python version: 3.5.2 (v3.5.2:4def2a2901a5, Jun 25 2016, 22:18:55) [MSC v.1900 64 bit (AMD64)]\r\n- Python distribution/environment: CPython\r\n- Operating System: Windows 7 (64bit)\r\n- Package version: 3.12.0\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/98", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/98/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/98/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/98", "id": 204034909, "node_id": "MDU6SXNzdWUyMDQwMzQ5MDk=", "number": 98, "title": "Items per second widget ?", "user": {"login": "jvhaarst", "id": 52068, "node_id": "MDQ6VXNlcjUyMDY4", "avatar_url": "https://avatars0.githubusercontent.com/u/52068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvhaarst", "html_url": "https://github.com/jvhaarst", "followers_url": "https://api.github.com/users/jvhaarst/followers", "following_url": "https://api.github.com/users/jvhaarst/following{/other_user}", "gists_url": "https://api.github.com/users/jvhaarst/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvhaarst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvhaarst/subscriptions", "organizations_url": "https://api.github.com/users/jvhaarst/orgs", "repos_url": "https://api.github.com/users/jvhaarst/repos", "events_url": "https://api.github.com/users/jvhaarst/events{/privacy}", "received_events_url": "https://api.github.com/users/jvhaarst/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-30T15:05:51Z", "updated_at": "2017-03-17T23:11:26Z", "closed_at": "2017-03-17T23:11:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be great if there was a simple way to add an items per second widget.\r\nRight now I'm using the TransferSpeed widgets, but at high speed they start to divide by 1024 instead of 1000 to add the SI prefix.\r\n(and B/s could be changed to i/s)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/97", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/97/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/97/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/97", "id": 202388752, "node_id": "MDU6SXNzdWUyMDIzODg3NTI=", "number": 97, "title": "Updating bar with value > max_value", "user": {"login": "almcleanuk", "id": 16709336, "node_id": "MDQ6VXNlcjE2NzA5MzM2", "avatar_url": "https://avatars1.githubusercontent.com/u/16709336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/almcleanuk", "html_url": "https://github.com/almcleanuk", "followers_url": "https://api.github.com/users/almcleanuk/followers", "following_url": "https://api.github.com/users/almcleanuk/following{/other_user}", "gists_url": "https://api.github.com/users/almcleanuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/almcleanuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/almcleanuk/subscriptions", "organizations_url": "https://api.github.com/users/almcleanuk/orgs", "repos_url": "https://api.github.com/users/almcleanuk/repos", "events_url": "https://api.github.com/users/almcleanuk/events{/privacy}", "received_events_url": "https://api.github.com/users/almcleanuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-22T15:14:41Z", "updated_at": "2017-02-12T12:36:32Z", "closed_at": "2017-02-12T12:36:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "In applications that deal with RESTful web APIs I frequently come across situations where the code looks like the folowing.\r\n\r\n- API call to get number of \"items\" available\r\n- Loop over a series of API calls to get those \"items\" in batches\r\n\r\nThe problem is that if I use a progress bar to track progress, na\u00efve code suffers from a race condition if the number of \"things\" available changes between the call to get their count and the calls to fetch them. \r\n\r\nThis results in a lot of repetitious boilerplate code along the lines:\r\n\r\n    if count <= max_value:\r\n        bar.update(count)\r\n\r\nIt's easy to forget to include the guard, which results in annoying non-deterministic failures that are hard to catch in testing. \r\n\r\n**It would be nice if the library could (optionally) include logic to ignore updates outside the expected range.**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/95", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/95/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/95/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/95", "id": 197793212, "node_id": "MDU6SXNzdWUxOTc3OTMyMTI=", "number": 95, "title": "Remove unnecessary padding from SimpleProgress", "user": {"login": "revolter", "id": 5748627, "node_id": "MDQ6VXNlcjU3NDg2Mjc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5748627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/revolter", "html_url": "https://github.com/revolter", "followers_url": "https://api.github.com/users/revolter/followers", "following_url": "https://api.github.com/users/revolter/following{/other_user}", "gists_url": "https://api.github.com/users/revolter/gists{/gist_id}", "starred_url": "https://api.github.com/users/revolter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/revolter/subscriptions", "organizations_url": "https://api.github.com/users/revolter/orgs", "repos_url": "https://api.github.com/users/revolter/repos", "events_url": "https://api.github.com/users/revolter/events{/privacy}", "received_events_url": "https://api.github.com/users/revolter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-12-28T04:10:41Z", "updated_at": "2016-12-31T16:29:10Z", "closed_at": "2016-12-31T16:28:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nHaving `max_value=9`, the `SimpleProgress` gets printed as\r\n\r\n```\r\n(  4 of 9)\r\n```\r\n\r\ninstead of\r\n\r\n```\r\n(4 of 9)\r\n```\r\n\r\n#### Versions\r\n\r\n- Python version: `3.6.0 (default, Dec 24 2016, 08:01:42)`\r\n- Python distribution/environment: `brew install python3`\r\n- Operating System: `macOS Sierra 10.12.1 (16B2555)`\r\n- Package version: `3.12.0`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/94", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/94/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/94/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/94", "id": 197792711, "node_id": "MDU6SXNzdWUxOTc3OTI3MTE=", "number": 94, "title": "FormatCustomText fixed width", "user": {"login": "revolter", "id": 5748627, "node_id": "MDQ6VXNlcjU3NDg2Mjc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5748627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/revolter", "html_url": "https://github.com/revolter", "followers_url": "https://api.github.com/users/revolter/followers", "following_url": "https://api.github.com/users/revolter/following{/other_user}", "gists_url": "https://api.github.com/users/revolter/gists{/gist_id}", "starred_url": "https://api.github.com/users/revolter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/revolter/subscriptions", "organizations_url": "https://api.github.com/users/revolter/orgs", "repos_url": "https://api.github.com/users/revolter/repos", "events_url": "https://api.github.com/users/revolter/events{/privacy}", "received_events_url": "https://api.github.com/users/revolter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-28T04:03:17Z", "updated_at": "2016-12-28T17:44:28Z", "closed_at": "2016-12-28T17:44:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nIs there any way to set a fixed width for the `FormatCustomText`?\r\n\r\nSo if I want to print:\r\n\r\n```\r\n#1 Foo\r\n#2 Longer foo\r\n#3 Bar\r\n```\r\n\r\nit won't jump from 6 characters to 13 and 6 again.\r\n\r\nI really thought that's what `min_width` argument is for, but it looks like it isn't.\r\n\r\n#### Versions\r\n\r\n- Python version: `3.6.0 (default, Dec 24 2016, 08:01:42)`\r\n- Python distribution/environment: `brew install python3`\r\n- Operating System: `macOS Sierra 10.12.1 (16B2555)`\r\n- Package version: `3.12.0`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/93", "repository_url": "https://api.github.com/repos/WoLpH/python-progressbar", "labels_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/93/comments", "events_url": "https://api.github.com/repos/WoLpH/python-progressbar/issues/93/events", "html_url": "https://github.com/WoLpH/python-progressbar/issues/93", "id": 197792280, "node_id": "MDU6SXNzdWUxOTc3OTIyODA=", "number": 93, "title": "Multiline support", "user": {"login": "revolter", "id": 5748627, "node_id": "MDQ6VXNlcjU3NDg2Mjc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5748627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/revolter", "html_url": "https://github.com/revolter", "followers_url": "https://api.github.com/users/revolter/followers", "following_url": "https://api.github.com/users/revolter/following{/other_user}", "gists_url": "https://api.github.com/users/revolter/gists{/gist_id}", "starred_url": "https://api.github.com/users/revolter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/revolter/subscriptions", "organizations_url": "https://api.github.com/users/revolter/orgs", "repos_url": "https://api.github.com/users/revolter/repos", "events_url": "https://api.github.com/users/revolter/events{/privacy}", "received_events_url": "https://api.github.com/users/revolter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-12-28T03:56:56Z", "updated_at": "2017-01-04T06:38:03Z", "closed_at": "2017-01-04T06:38:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\nIs there any possibility to add multiline support? So, for example, to have:\r\n\r\n```\r\nUpdating stuff:\r\n50% (2 of 4) |##########          |\r\n```\r\n\r\n?\r\n\r\n#### Versions\r\n\r\n- Python version: `3.6.0 (default, Dec 24 2016, 08:01:42)`\r\n- Python distribution/environment: `brew install python3`\r\n- Operating System: `macOS Sierra 10.12.1 (16B2555)`\r\n- Package version: `3.12.0`\r\n", "performed_via_github_app": null, "score": 1.0}]}