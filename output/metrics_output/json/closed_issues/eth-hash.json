{"total_count": 5, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/ethereum/eth-hash/issues/25", "repository_url": "https://api.github.com/repos/ethereum/eth-hash", "labels_url": "https://api.github.com/repos/ethereum/eth-hash/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-hash/issues/25/comments", "events_url": "https://api.github.com/repos/ethereum/eth-hash/issues/25/events", "html_url": "https://github.com/ethereum/eth-hash/issues/25", "id": 359062488, "node_id": "MDU6SXNzdWUzNTkwNjI0ODg=", "number": 25, "title": "test_import.py failing", "user": {"login": "jluttine", "id": 2195834, "node_id": "MDQ6VXNlcjIxOTU4MzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2195834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jluttine", "html_url": "https://github.com/jluttine", "followers_url": "https://api.github.com/users/jluttine/followers", "following_url": "https://api.github.com/users/jluttine/following{/other_user}", "gists_url": "https://api.github.com/users/jluttine/gists{/gist_id}", "starred_url": "https://api.github.com/users/jluttine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jluttine/subscriptions", "organizations_url": "https://api.github.com/users/jluttine/orgs", "repos_url": "https://api.github.com/users/jluttine/repos", "events_url": "https://api.github.com/users/jluttine/events{/privacy}", "received_events_url": "https://api.github.com/users/jluttine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-11T14:03:10Z", "updated_at": "2018-09-13T21:13:40Z", "closed_at": "2018-09-13T19:26:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## What was wrong?\r\n\r\nSome unit tests in `test_import.py` fail.\r\n\r\n### Code that produced the error\r\n\r\n```sh\r\n$ pytest tests/core/test_import.py \r\n```\r\n\r\n### Full error output \r\n\r\n```sh\r\n============================================================================================================= test session starts =============================================================================================================\r\nplatform linux -- Python 3.6.6, pytest-3.7.4, py-1.5.4, pluggy-0.7.1 -- /nix/store/hy65mn4wjswqih75gfr6g4q3xgqdm325-python3-3.6.6/bin/python3.6m\r\ncachedir: .pytest_cache\r\nrootdir: /home/jluttine/Workspace/eth-hash, inifile: pytest.ini\r\ncollected 6 items                                                                                                                                                                                                                             \r\n\r\ntests/core/test_import.py::test_import_auto PASSED                                                                                                                                                                                      [ 16%]\r\ntests/core/test_import.py::test_import_auto_empty_crash FAILED                                                                                                                                                                          [ 33%]\r\ntests/core/test_import.py::test_import PASSED                                                                                                                                                                                           [ 50%]\r\ntests/core/test_import.py::test_load_by_env[pycryptodome] FAILED                                                                                                                                                                        [ 66%]\r\ntests/core/test_import.py::test_load_by_env[pysha3] FAILED                                                                                                                                                                              [ 83%]\r\ntests/core/test_import.py::test_load_unavailable_backend_by_env FAILED                                                                                                                                                                  [100%]\r\n\r\n================================================================================================================== FAILURES ===================================================================================================================\r\n________________________________________________________________________________________________________ test_import_auto_empty_crash _________________________________________________________________________________________________________\r\n\r\n    def test_import_auto_empty_crash():\r\n        from eth_hash.auto import keccak\r\n        with pytest.raises(ImportError, match=\"None of these hashing backends are installed\"):\r\n>           keccak(b'')\r\nE           Failed: DID NOT RAISE <class 'ImportError'>\r\n\r\nkeccak     = <eth_hash.main.Keccak256 object at 0x7f5c2fdbd6a0>\r\n\r\ntests/core/test_import.py:11: Failed\r\n_______________________________________________________________________________________________________ test_load_by_env[pycryptodome] ________________________________________________________________________________________________________\r\n\r\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f5c2fc39128>, backend = 'pycryptodome'\r\n\r\n    @pytest.mark.parametrize(\r\n        'backend',\r\n        [\r\n            'pycryptodome',\r\n            'pysha3',\r\n        ],\r\n    )\r\n    def test_load_by_env(monkeypatch, backend):\r\n        from eth_hash.auto import keccak\r\n        monkeypatch.setenv('ETH_HASH_BACKEND', backend)\r\n        with pytest.raises(ImportError) as excinfo:\r\n>           keccak(b'triggered')\r\nE           Failed: DID NOT RAISE <class 'ImportError'>\r\n\r\nbackend    = 'pycryptodome'\r\nexcinfo    = <[AttributeError(\"'ExceptionInfo' object has no attribute 'typename'\") raised in repr()] ExceptionInfo object at 0x7f5c2fc39828>\r\nkeccak     = <eth_hash.main.Keccak256 object at 0x7f5c2fdbd6a0>\r\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f5c2fc39128>\r\n\r\ntests/core/test_import.py:29: Failed\r\n__________________________________________________________________________________________________________ test_load_by_env[pysha3] ___________________________________________________________________________________________________________\r\n\r\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f5c2fbed208>, backend = 'pysha3'\r\n\r\n    @pytest.mark.parametrize(\r\n        'backend',\r\n        [\r\n            'pycryptodome',\r\n            'pysha3',\r\n        ],\r\n    )\r\n    def test_load_by_env(monkeypatch, backend):\r\n        from eth_hash.auto import keccak\r\n        monkeypatch.setenv('ETH_HASH_BACKEND', backend)\r\n        with pytest.raises(ImportError) as excinfo:\r\n>           keccak(b'triggered')\r\nE           Failed: DID NOT RAISE <class 'ImportError'>\r\n\r\nbackend    = 'pysha3'\r\nexcinfo    = <[AttributeError(\"'ExceptionInfo' object has no attribute 'typename'\") raised in repr()] ExceptionInfo object at 0x7f5c2fbed2b0>\r\nkeccak     = <eth_hash.main.Keccak256 object at 0x7f5c2fdbd6a0>\r\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f5c2fbed208>\r\n\r\ntests/core/test_import.py:29: Failed\r\n____________________________________________________________________________________________________ test_load_unavailable_backend_by_env _____________________________________________________________________________________________________\r\n\r\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f5c2fc39d30>\r\n\r\n    def test_load_unavailable_backend_by_env(monkeypatch):\r\n        from eth_hash.auto import keccak\r\n        backend = 'this-backend-will-never-exist'\r\n        monkeypatch.setenv('ETH_HASH_BACKEND', backend)\r\n        with pytest.raises(ValueError) as excinfo:\r\n>           keccak(b'triggered')\r\nE           Failed: DID NOT RAISE <class 'ValueError'>\r\n\r\nbackend    = 'this-backend-will-never-exist'\r\nexcinfo    = <[AttributeError(\"'ExceptionInfo' object has no attribute 'typename'\") raised in repr()] ExceptionInfo object at 0x7f5c2fc39160>\r\nkeccak     = <eth_hash.main.Keccak256 object at 0x7f5c2fdbd6a0>\r\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f5c2fc39d30>\r\n\r\ntests/core/test_import.py:42: Failed\r\n========================================================================================================== slowest 10 test durations ==========================================================================================================\r\n0.01s call     tests/core/test_import.py::test_import_auto\r\n0.01s call     tests/core/test_import.py::test_import_auto_empty_crash\r\n0.00s setup    tests/core/test_import.py::test_load_by_env[pycryptodome]\r\n0.00s setup    tests/core/test_import.py::test_load_by_env[pysha3]\r\n0.00s teardown tests/core/test_import.py::test_load_by_env[pycryptodome]\r\n0.00s call     tests/core/test_import.py::test_load_by_env[pycryptodome]\r\n0.00s call     tests/core/test_import.py::test_load_unavailable_backend_by_env\r\n0.00s teardown tests/core/test_import.py::test_load_by_env[pysha3]\r\n0.00s call     tests/core/test_import.py::test_load_by_env[pysha3]\r\n0.00s setup    tests/core/test_import.py::test_load_unavailable_backend_by_env\r\n===================================================================================================== 4 failed, 2 passed in 0.07 seconds ======================================================================================================\r\n```\r\n\r\n\r\n\r\n### Environment\r\n\r\n```sh\r\n# run this:\r\n$ python -m eth_utils\r\n\r\n# then copy the output here:\r\n/nix/store/hy65mn4wjswqih75gfr6g4q3xgqdm325-python3-3.6.6/bin/python: No module named eth_utils\r\n``` ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/eth-hash/issues/18", "repository_url": "https://api.github.com/repos/ethereum/eth-hash", "labels_url": "https://api.github.com/repos/ethereum/eth-hash/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-hash/issues/18/comments", "events_url": "https://api.github.com/repos/ethereum/eth-hash/issues/18/events", "html_url": "https://github.com/ethereum/eth-hash/issues/18", "id": 326998330, "node_id": "MDU6SXNzdWUzMjY5OTgzMzA=", "number": 18, "title": "Keccak256 no longer picklable", "user": {"login": "gsalgado", "id": 412274, "node_id": "MDQ6VXNlcjQxMjI3NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/412274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gsalgado", "html_url": "https://github.com/gsalgado", "followers_url": "https://api.github.com/users/gsalgado/followers", "following_url": "https://api.github.com/users/gsalgado/following{/other_user}", "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}", "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions", "organizations_url": "https://api.github.com/users/gsalgado/orgs", "repos_url": "https://api.github.com/users/gsalgado/repos", "events_url": "https://api.github.com/users/gsalgado/events{/privacy}", "received_events_url": "https://api.github.com/users/gsalgado/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "carver", "id": 205327, "node_id": "MDQ6VXNlcjIwNTMyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/205327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carver", "html_url": "https://github.com/carver", "followers_url": "https://api.github.com/users/carver/followers", "following_url": "https://api.github.com/users/carver/following{/other_user}", "gists_url": "https://api.github.com/users/carver/gists{/gist_id}", "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carver/subscriptions", "organizations_url": "https://api.github.com/users/carver/orgs", "repos_url": "https://api.github.com/users/carver/repos", "events_url": "https://api.github.com/users/carver/events{/privacy}", "received_events_url": "https://api.github.com/users/carver/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "carver", "id": 205327, "node_id": "MDQ6VXNlcjIwNTMyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/205327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carver", "html_url": "https://github.com/carver", "followers_url": "https://api.github.com/users/carver/followers", "following_url": "https://api.github.com/users/carver/following{/other_user}", "gists_url": "https://api.github.com/users/carver/gists{/gist_id}", "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carver/subscriptions", "organizations_url": "https://api.github.com/users/carver/orgs", "repos_url": "https://api.github.com/users/carver/repos", "events_url": "https://api.github.com/users/carver/events{/privacy}", "received_events_url": "https://api.github.com/users/carver/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-05-28T11:44:19Z", "updated_at": "2018-05-29T03:33:16Z", "closed_at": "2018-05-29T03:33:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/ethereum/eth-hash/commit/99d647e9832f12672c52556dbb21b4c38a75c35d makes `Keccak256` keep a reference to the backend module (e.g. `eth_hash.backends.pycryptodome`) whereas before it'd keep references to the backend's functions (`keccak256` and `preimage`). That is a problem because it means `Keccak256` is no longer picklable, which means we can't use it with, say, a `concurrent.futures.ProcessPoolExecutor`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/eth-hash/issues/14", "repository_url": "https://api.github.com/repos/ethereum/eth-hash", "labels_url": "https://api.github.com/repos/ethereum/eth-hash/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-hash/issues/14/comments", "events_url": "https://api.github.com/repos/ethereum/eth-hash/issues/14/events", "html_url": "https://github.com/ethereum/eth-hash/issues/14", "id": 312849834, "node_id": "MDU6SXNzdWUzMTI4NDk4MzQ=", "number": 14, "title": "Installation Failure", "user": {"login": "gustavkkk", "id": 18607447, "node_id": "MDQ6VXNlcjE4NjA3NDQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/18607447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gustavkkk", "html_url": "https://github.com/gustavkkk", "followers_url": "https://api.github.com/users/gustavkkk/followers", "following_url": "https://api.github.com/users/gustavkkk/following{/other_user}", "gists_url": "https://api.github.com/users/gustavkkk/gists{/gist_id}", "starred_url": "https://api.github.com/users/gustavkkk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gustavkkk/subscriptions", "organizations_url": "https://api.github.com/users/gustavkkk/orgs", "repos_url": "https://api.github.com/users/gustavkkk/repos", "events_url": "https://api.github.com/users/gustavkkk/events{/privacy}", "received_events_url": "https://api.github.com/users/gustavkkk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-04-10T09:49:20Z", "updated_at": "2018-06-13T10:18:12Z", "closed_at": "2018-04-10T15:45:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to install the package using the guide, but failed\r\nI typed pip install eth-hash\r\nthen, I encountered the following failure\r\n###############################3\r\nCollecting eth-hash[pycryptodome]\r\n  Downloading eth-hash-0.1.2.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-build-_je_xR/eth-hash/setup.py\", line 71, in <module>\r\n        'Programming Language :: Python :: Implementation :: PyPy',\r\n      File \"/usr/lib/python2.7/distutils/core.py\", line 111, in setup\r\n        _setup_distribution = dist = klass(attrs)\r\n      File \"/usr/lib/python2.7/dist-packages/setuptools/dist.py\", line 272, in __init__\r\n        _Distribution.__init__(self,attrs)\r\n      File \"/usr/lib/python2.7/distutils/dist.py\", line 287, in __init__\r\n        self.finalize_options()\r\n      File \"/usr/lib/python2.7/dist-packages/setuptools/dist.py\", line 327, in finalize_options\r\n        ep.load()(self, ep.name, value)\r\n      File \"/usr/local/lib/python2.7/dist-packages/setuptools_markdown.py\", line 22, in long_description_markdown_filename\r\n        output = pypandoc.convert(markdown_filename, 'rst')\r\n      File \"/usr/local/lib/python2.7/dist-packages/pypandoc/__init__.py\", line 66, in convert\r\n        raise RuntimeError(\"Format missing, but need one (identified source as text as no \"\r\n    RuntimeError: Format missing, but need one (identified source as text as no file with that name was found).\r\n    \r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-build-_je_xR/eth-hash/\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/eth-hash/issues/12", "repository_url": "https://api.github.com/repos/ethereum/eth-hash", "labels_url": "https://api.github.com/repos/ethereum/eth-hash/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-hash/issues/12/comments", "events_url": "https://api.github.com/repos/ethereum/eth-hash/issues/12/events", "html_url": "https://github.com/ethereum/eth-hash/issues/12", "id": 306446430, "node_id": "MDU6SXNzdWUzMDY0NDY0MzA=", "number": 12, "title": "pycryptodome support in py-evm's p2p module", "user": {"login": "carver", "id": 205327, "node_id": "MDQ6VXNlcjIwNTMyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/205327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carver", "html_url": "https://github.com/carver", "followers_url": "https://api.github.com/users/carver/followers", "following_url": "https://api.github.com/users/carver/following{/other_user}", "gists_url": "https://api.github.com/users/carver/gists{/gist_id}", "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carver/subscriptions", "organizations_url": "https://api.github.com/users/carver/orgs", "repos_url": "https://api.github.com/users/carver/repos", "events_url": "https://api.github.com/users/carver/events{/privacy}", "received_events_url": "https://api.github.com/users/carver/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-19T12:41:33Z", "updated_at": "2018-04-02T23:07:44Z", "closed_at": "2018-04-02T23:07:44Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "## What was wrong?\r\n\r\nThe `p2p` module of py-evm requires the ability to copy hashes that are incrementally calculated, as I understand this comment: https://github.com/ethereum/eth-hash/pull/11/files#r174900879\r\n\r\nThe current best solution is to use pysha3, which prevents pypy3 support in `p2p`.\r\n\r\n## How can it be fixed?\r\n\r\nLook for alternatives that allow `pycryptodome` to support `p2p`. Maybe it means digging further into pycryptodome internals, or working around the need for copying partially-computed incremental hashes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/eth-hash/issues/10", "repository_url": "https://api.github.com/repos/ethereum/eth-hash", "labels_url": "https://api.github.com/repos/ethereum/eth-hash/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-hash/issues/10/comments", "events_url": "https://api.github.com/repos/ethereum/eth-hash/issues/10/events", "html_url": "https://github.com/ethereum/eth-hash/issues/10", "id": 305538743, "node_id": "MDU6SXNzdWUzMDU1Mzg3NDM=", "number": 10, "title": "PreImage.digest()'s performance degradates significantly", "user": {"login": "gsalgado", "id": 412274, "node_id": "MDQ6VXNlcjQxMjI3NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/412274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gsalgado", "html_url": "https://github.com/gsalgado", "followers_url": "https://api.github.com/users/gsalgado/followers", "following_url": "https://api.github.com/users/gsalgado/following{/other_user}", "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}", "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions", "organizations_url": "https://api.github.com/users/gsalgado/orgs", "repos_url": "https://api.github.com/users/gsalgado/repos", "events_url": "https://api.github.com/users/gsalgado/events{/privacy}", "received_events_url": "https://api.github.com/users/gsalgado/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-15T12:47:41Z", "updated_at": "2018-03-15T18:22:07Z", "closed_at": "2018-03-15T18:22:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "`PreImage.digest()` takes significantly longer after every `.update()` call, whereas the time for the same operation on a raw `pysha3.keccak_256` instance remains constant. Here's a [hackish test comparing both](https://github.com/gsalgado/eth-hash/commit/10c28e8c1efa9026a0fd82b6c5d2587f97679ab1)", "performed_via_github_app": null, "score": 1.0}]}