{"total_count": 34, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/67", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/67/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/67/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/67", "id": 606722549, "node_id": "MDU6SXNzdWU2MDY3MjI1NDk=", "number": 67, "title": "Enable support for rulesets", "user": {"login": "sumanshil", "id": 10179706, "node_id": "MDQ6VXNlcjEwMTc5NzA2", "avatar_url": "https://avatars1.githubusercontent.com/u/10179706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumanshil", "html_url": "https://github.com/sumanshil", "followers_url": "https://api.github.com/users/sumanshil/followers", "following_url": "https://api.github.com/users/sumanshil/following{/other_user}", "gists_url": "https://api.github.com/users/sumanshil/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumanshil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumanshil/subscriptions", "organizations_url": "https://api.github.com/users/sumanshil/orgs", "repos_url": "https://api.github.com/users/sumanshil/repos", "events_url": "https://api.github.com/users/sumanshil/events{/privacy}", "received_events_url": "https://api.github.com/users/sumanshil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-25T08:47:14Z", "updated_at": "2020-06-23T18:20:36Z", "closed_at": "2020-06-23T18:20:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Update code to support the following APIs.\r\n\r\nhttps://developer.pagerduty.com/api-reference/reference/REST/openapiv3.json/paths/~1rulesets/post", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/66", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/66/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/66/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/66", "id": 589556687, "node_id": "MDU6SXNzdWU1ODk1NTY2ODc=", "number": 66, "title": "Entity.put() is ignoring the data parameter", "user": {"login": "mitjabez", "id": 15896792, "node_id": "MDQ6VXNlcjE1ODk2Nzky", "avatar_url": "https://avatars3.githubusercontent.com/u/15896792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitjabez", "html_url": "https://github.com/mitjabez", "followers_url": "https://api.github.com/users/mitjabez/followers", "following_url": "https://api.github.com/users/mitjabez/following{/other_user}", "gists_url": "https://api.github.com/users/mitjabez/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitjabez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitjabez/subscriptions", "organizations_url": "https://api.github.com/users/mitjabez/orgs", "repos_url": "https://api.github.com/users/mitjabez/repos", "events_url": "https://api.github.com/users/mitjabez/events{/privacy}", "received_events_url": "https://api.github.com/users/mitjabez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-28T11:15:10Z", "updated_at": "2020-06-23T18:20:41Z", "closed_at": "2020-06-23T18:20:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "PUT requests don't work. Data param is ignored when making the request.\r\n\r\nDocumentation is also wrong:\r\n\r\n```\r\nDelete an entity from the server by ID.\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/65", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/65/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/65/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/65", "id": 579261367, "node_id": "MDU6SXNzdWU1NzkyNjEzNjc=", "number": 65, "title": "Support for Tags", "user": {"login": "damoun", "id": 89846, "node_id": "MDQ6VXNlcjg5ODQ2", "avatar_url": "https://avatars0.githubusercontent.com/u/89846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/damoun", "html_url": "https://github.com/damoun", "followers_url": "https://api.github.com/users/damoun/followers", "following_url": "https://api.github.com/users/damoun/following{/other_user}", "gists_url": "https://api.github.com/users/damoun/gists{/gist_id}", "starred_url": "https://api.github.com/users/damoun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/damoun/subscriptions", "organizations_url": "https://api.github.com/users/damoun/orgs", "repos_url": "https://api.github.com/users/damoun/repos", "events_url": "https://api.github.com/users/damoun/events{/privacy}", "received_events_url": "https://api.github.com/users/damoun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-11T13:24:07Z", "updated_at": "2020-06-23T18:20:45Z", "closed_at": "2020-06-23T18:20:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nThis module doesn't support Tags and I would like to use tags on user to enrich our oncall reports.\r\nhttps://api-reference.pagerduty.com/#!/Contextual_Search/get_tags\r\n\r\nDo you think it would be possible to update this official pagerduty python module ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/64", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/64/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/64/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/64", "id": 506930548, "node_id": "MDU6SXNzdWU1MDY5MzA1NDg=", "number": 64, "title": "Is it possible to get logs created after a specified date.", "user": {"login": "sanjitab", "id": 39888833, "node_id": "MDQ6VXNlcjM5ODg4ODMz", "avatar_url": "https://avatars1.githubusercontent.com/u/39888833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanjitab", "html_url": "https://github.com/sanjitab", "followers_url": "https://api.github.com/users/sanjitab/followers", "following_url": "https://api.github.com/users/sanjitab/following{/other_user}", "gists_url": "https://api.github.com/users/sanjitab/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanjitab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanjitab/subscriptions", "organizations_url": "https://api.github.com/users/sanjitab/orgs", "repos_url": "https://api.github.com/users/sanjitab/repos", "events_url": "https://api.github.com/users/sanjitab/events{/privacy}", "received_events_url": "https://api.github.com/users/sanjitab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-15T00:03:45Z", "updated_at": "2020-06-23T18:20:49Z", "closed_at": "2020-06-23T18:20:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am planning to create an incremental load ETL process for LogEntry data . As this data is insert only and will not get modified, I can use 'created_at' to limit the data I pull every time. \r\n\r\npypd.LogEntry.find(created_at > '2019-10-14T22:43:20Z')\r\n\r\nGreater than does not work in this case. Is there any other way to get the logs for a limited duration? \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/63", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/63/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/63/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/63", "id": 490557596, "node_id": "MDU6SXNzdWU0OTA1NTc1OTY=", "number": 63, "title": "stack overflow in __str__ for entity model", "user": {"login": "dyang108", "id": 14955423, "node_id": "MDQ6VXNlcjE0OTU1NDIz", "avatar_url": "https://avatars0.githubusercontent.com/u/14955423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dyang108", "html_url": "https://github.com/dyang108", "followers_url": "https://api.github.com/users/dyang108/followers", "following_url": "https://api.github.com/users/dyang108/following{/other_user}", "gists_url": "https://api.github.com/users/dyang108/gists{/gist_id}", "starred_url": "https://api.github.com/users/dyang108/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dyang108/subscriptions", "organizations_url": "https://api.github.com/users/dyang108/orgs", "repos_url": "https://api.github.com/users/dyang108/repos", "events_url": "https://api.github.com/users/dyang108/events{/privacy}", "received_events_url": "https://api.github.com/users/dyang108/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-06T23:23:19Z", "updated_at": "2020-06-23T18:20:53Z", "closed_at": "2020-06-23T18:20:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems like the __str__ method is somehow self referential - resulting in a stack overflow:\r\n```\r\n>>> import pypd          \r\n>>> pypd.api_key = 'some_key'                                                                                                               \r\n>>> pypd.Incident()                                                                                                                     \r\nFatal Python error: Cannot recover from stack overflow.                                                                                 \r\n                                                                                                                                        \r\nCurrent thread 0x000000010862f5c0 (most recent call first):                                                                             \r\n  File \"/Users/derickyang/Documents/python/pagerduty-api-python-client/pypd/models/entity.py\", line 545 in __getitem__\r\n  File \"/Users/derickyang/Documents/python/pagerduty-api-python-client/pypd/models/entity.py\", line 580 in __str__                      \r\n  File \"/Users/derickyang/Documents/python/pagerduty-api-python-client/pypd/models/entity.py\", line 591 in __str__\r\n  File \"/Users/derickyang/Documents/python/pagerduty-api-python-client/pypd/models/entity.py\", line 591 in __str__                      \r\n  File \"/Users/derickyang/Documents/python/pagerduty-api-python-client/pypd/models/entity.py\", line 591 in __str__                      \r\n  File \"/Users/derickyang/Documents/python/pagerduty-api-python-client/pypd/models/entity.py\", line 591 in __str__                      \r\n  File \"/Users/derickyang/Documents/python/pagerduty-api-python-client/pypd/models/entity.py\", line 591 in __str__        \r\n...\r\n  File \"/Users/derickyang/Documents/python/pagerduty-api-python-client/pypd/models/entity.py\", line 591 in __str__                                                                    \r\n  File \"/Users/derickyang/Documents/python/pagerduty-api-python-client/pypd/models/entity.py\", line 591 in __str__                                                                    \r\n  ...                                                                                      \r\n[1]    5498 abort      python    \r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/61", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/61/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/61/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/61", "id": 463863308, "node_id": "MDU6SXNzdWU0NjM4NjMzMDg=", "number": 61, "title": "Issue with create incident : err 2002", "user": {"login": "skrsfix", "id": 45801747, "node_id": "MDQ6VXNlcjQ1ODAxNzQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/45801747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skrsfix", "html_url": "https://github.com/skrsfix", "followers_url": "https://api.github.com/users/skrsfix/followers", "following_url": "https://api.github.com/users/skrsfix/following{/other_user}", "gists_url": "https://api.github.com/users/skrsfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/skrsfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skrsfix/subscriptions", "organizations_url": "https://api.github.com/users/skrsfix/orgs", "repos_url": "https://api.github.com/users/skrsfix/repos", "events_url": "https://api.github.com/users/skrsfix/events{/privacy}", "received_events_url": "https://api.github.com/users/skrsfix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-03T17:08:40Z", "updated_at": "2020-06-23T18:20:58Z", "closed_at": "2020-06-23T18:20:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using `pypd==1.1.0`.\r\n\r\nI was able to create PD incident correctly, and my integrations with other systems was working perfectly.\r\n\r\nAs of this week, I have been having issues where I hit this error:\r\n```\r\npypd.errors.BadRequest: BadRequest (2002): Arguments Caused Error - Service not found\r\n```\r\n\r\nUpon checking about `2002` error, I just see that `Arguments Caused Error` on the PD website [[reference_link_1](https://v2.developer.pagerduty.com/docs/errors) & [reference_link_2](https://v1.developer.pagerduty.com/documentation/rest/errors)]. Obviously the error message is NOT very helpful to figure out whats causing the problems at my end :|.\r\n\r\nHere is a sample code which I am using to make this work (which was working earlier): \r\n```\r\nimport pypd\r\nimport os\r\nimport logging\r\n\r\n\r\nclass NotifierHook():\r\n\r\n    def __init__(self):\r\n        self.pagerduty_api_key = os.getenv(\"PAGERDUTY_API_KEY\", \"XXXXXXXX\") # defaults to XXXXXXXX if the env variable is NOT set\r\n\r\n    def _notify_pagerduty(self, service_id, title, message):\r\n        try:\r\n            pypd.api_key = self.pagerduty_api_key\r\n            pagerduty_response = pypd.Incident.create(\r\n                data={\r\n                    'type': 'incident',\r\n                    'title': title,\r\n                    'service': {\r\n                        'type': 'service_reference',\r\n                        'id': service_id,\r\n                    },\r\n                    'body': {\r\n                        'type': 'incident_body',\r\n                        'details': message,\r\n                    }\r\n                }, add_headers={\r\n                    \"from\": \"XXXX@XXXX.com\"\r\n                }\r\n            )\r\n            logging.info(pagerduty_response)\r\n        except Exception as ex:\r\n            print(pagerduty_response)\r\n            msg = \"PagerDuty API call failed ({})\".format(ex)\r\n            logging.error(msg)\r\n\r\n\r\nNotifierHook()._notify_pagerduty(service_id=\"XXXX\", message=\"message\", title=\"title\")\r\n```\r\n\r\n\r\nThe stack trace looks like this : \r\n```\r\nTraceback (most recent call last):\r\n  File \"/foo/test.py\", line 28, in _notify_pagerduty\r\n    \"from\": \"XXXX@XXXX.com\"\r\n  File \"/foo/lib/python3.6/site-packages/pypd/models/entity.py\", line 472, in create\r\n    add_headers=add_headers,\r\n  File \"/foo/python3.6/site-packages/pypd/mixins.py\", line 123, in request\r\n    **kwargs\r\n  File \"/foo/python3.6/site-packages/pypd/mixins.py\", line 72, in _do_request\r\n    return self._handle_response(requests_method(*args, **kwargs))\r\n  File \"/foo/lib/python3.6/site-packages/pypd/mixins.py\", line 48, in _handle_response\r\n    raise BadRequest(response.status_code, response.text)\r\npypd.errors.BadRequest: BadRequest (2002): Arguments Caused Error - Service not found\r\n```\r\n\r\n------\r\n\r\nEDIT#1\r\n\r\nI have replaced all passwords, keys, emails & folders with `XXXX` or `foo` in the details above. If you are resting that code, pls replace those with your details.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/59", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/59/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/59/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/59", "id": 456721010, "node_id": "MDU6SXNzdWU0NTY3MjEwMTA=", "number": 59, "title": "A top level test folder is getting packaged", "user": {"login": "pmgrafe", "id": 48299418, "node_id": "MDQ6VXNlcjQ4Mjk5NDE4", "avatar_url": "https://avatars0.githubusercontent.com/u/48299418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmgrafe", "html_url": "https://github.com/pmgrafe", "followers_url": "https://api.github.com/users/pmgrafe/followers", "following_url": "https://api.github.com/users/pmgrafe/following{/other_user}", "gists_url": "https://api.github.com/users/pmgrafe/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmgrafe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmgrafe/subscriptions", "organizations_url": "https://api.github.com/users/pmgrafe/orgs", "repos_url": "https://api.github.com/users/pmgrafe/repos", "events_url": "https://api.github.com/users/pmgrafe/events{/privacy}", "received_events_url": "https://api.github.com/users/pmgrafe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-17T03:02:32Z", "updated_at": "2020-06-23T18:21:03Z", "closed_at": "2020-06-23T18:21:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/56", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/56/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/56/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/56", "id": 437319409, "node_id": "MDU6SXNzdWU0MzczMTk0MDk=", "number": 56, "title": "SEVERITY_TYPES does not match V2 Events Documentation", "user": {"login": "schmiddy", "id": 1028135, "node_id": "MDQ6VXNlcjEwMjgxMzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1028135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schmiddy", "html_url": "https://github.com/schmiddy", "followers_url": "https://api.github.com/users/schmiddy/followers", "following_url": "https://api.github.com/users/schmiddy/following{/other_user}", "gists_url": "https://api.github.com/users/schmiddy/gists{/gist_id}", "starred_url": "https://api.github.com/users/schmiddy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schmiddy/subscriptions", "organizations_url": "https://api.github.com/users/schmiddy/orgs", "repos_url": "https://api.github.com/users/schmiddy/repos", "events_url": "https://api.github.com/users/schmiddy/events{/privacy}", "received_events_url": "https://api.github.com/users/schmiddy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-25T17:42:27Z", "updated_at": "2020-06-23T18:21:08Z", "closed_at": "2020-06-23T18:21:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [`SEVERITY_TYPES`](https://github.com/PagerDuty/pagerduty-api-python-client/blob/f420b34ca9b29689cc2ecc9adca6dc5d56ae7161/pypd/models/event.py#L60) defined for `EventV2` are in all-lowercase. There is [an assertion](https://github.com/PagerDuty/pagerduty-api-python-client/blob/f420b34ca9b29689cc2ecc9adca6dc5d56ae7161/pypd/models/event.py#L73) forcing the caller to pass this value in lowercase as well.\r\n\r\nBut the [Events API V2 documentation](https://v2.developer.pagerduty.com/docs/events-api-v2) claims:\r\n\r\n| Field | Examples |\r\n| ---- | ---- |\r\n| Severity |  Enum {**Info, Warning, Error, Critical**} |\r\n\r\ni.e. the documentation claims the severity field should be Propercase. \r\n\r\nI believe the documentation and the code should be aligned here. Perhaps the `payload['severity']` input could be coerced with `.lower()` to allow mixed-case input strings, or that doc page could stick with lowercase in its example.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/55", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/55/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/55/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/55", "id": 436933757, "node_id": "MDU6SXNzdWU0MzY5MzM3NTc=", "number": 55, "title": "Pagination support?", "user": {"login": "rbren", "id": 7611973, "node_id": "MDQ6VXNlcjc2MTE5NzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/7611973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbren", "html_url": "https://github.com/rbren", "followers_url": "https://api.github.com/users/rbren/followers", "following_url": "https://api.github.com/users/rbren/following{/other_user}", "gists_url": "https://api.github.com/users/rbren/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbren/subscriptions", "organizations_url": "https://api.github.com/users/rbren/orgs", "repos_url": "https://api.github.com/users/rbren/repos", "events_url": "https://api.github.com/users/rbren/events{/privacy}", "received_events_url": "https://api.github.com/users/rbren/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-24T22:27:03Z", "updated_at": "2020-06-23T18:21:15Z", "closed_at": "2020-06-23T18:21:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sorry if I missed it somewhere, but I don't see any docs/examples for pagination. It looks like you need access to the original JSON response to paginate properly (using the `limit`/`offset`/`total`/`more` fields), and it doesn't _seem_ to be sufficient to just paginate until zero items are returned.\r\n\r\nWhat's the right way to do this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/54", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/54/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/54/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/54", "id": 385407512, "node_id": "MDU6SXNzdWUzODU0MDc1MTI=", "number": 54, "title": "New PyPI release?", "user": {"login": "tomgoren", "id": 806975, "node_id": "MDQ6VXNlcjgwNjk3NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/806975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomgoren", "html_url": "https://github.com/tomgoren", "followers_url": "https://api.github.com/users/tomgoren/followers", "following_url": "https://api.github.com/users/tomgoren/following{/other_user}", "gists_url": "https://api.github.com/users/tomgoren/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomgoren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomgoren/subscriptions", "organizations_url": "https://api.github.com/users/tomgoren/orgs", "repos_url": "https://api.github.com/users/tomgoren/repos", "events_url": "https://api.github.com/users/tomgoren/events{/privacy}", "received_events_url": "https://api.github.com/users/tomgoren/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-28T18:47:11Z", "updated_at": "2020-06-23T18:21:20Z", "closed_at": "2020-06-23T18:21:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "@PagerDuty It would be nice if the the latest version of `pypd` was available on PyPI (https://pypi.org/project/pypd/#history).\r\n\r\nThanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/52", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/52/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/52/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/52", "id": 379813949, "node_id": "MDU6SXNzdWUzNzk4MTM5NDk=", "number": 52, "title": "Support Event Rules API", "user": {"login": "beli-sk", "id": 1942417, "node_id": "MDQ6VXNlcjE5NDI0MTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1942417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beli-sk", "html_url": "https://github.com/beli-sk", "followers_url": "https://api.github.com/users/beli-sk/followers", "following_url": "https://api.github.com/users/beli-sk/following{/other_user}", "gists_url": "https://api.github.com/users/beli-sk/gists{/gist_id}", "starred_url": "https://api.github.com/users/beli-sk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beli-sk/subscriptions", "organizations_url": "https://api.github.com/users/beli-sk/orgs", "repos_url": "https://api.github.com/users/beli-sk/repos", "events_url": "https://api.github.com/users/beli-sk/events{/privacy}", "received_events_url": "https://api.github.com/users/beli-sk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-12T14:57:35Z", "updated_at": "2020-06-23T18:21:24Z", "closed_at": "2020-06-23T18:21:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to add support for (beta version of) Event Rules to this module, but seems that Event Rules API is inconsistent with the other API endpoints in that the top level key \"rules\" of the returned JSON is not equal to the endpoint in API URI \"event_rules\", so that instead of just creating a class `class EventRule(Entity): pass`, I need to override some methods to adapt to this case.\r\n\r\nSo my question is, do you suggest to use this workaround (I could create a PR when I get it ready) or do you plan to align the Event Rules API endpoint with the rest of the API?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/48", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/48/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/48/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/48", "id": 336711196, "node_id": "MDU6SXNzdWUzMzY3MTExOTY=", "number": 48, "title": "Don't send API key header when none exists", "user": {"login": "seantsb", "id": 2584573, "node_id": "MDQ6VXNlcjI1ODQ1NzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/2584573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seantsb", "html_url": "https://github.com/seantsb", "followers_url": "https://api.github.com/users/seantsb/followers", "following_url": "https://api.github.com/users/seantsb/following{/other_user}", "gists_url": "https://api.github.com/users/seantsb/gists{/gist_id}", "starred_url": "https://api.github.com/users/seantsb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seantsb/subscriptions", "organizations_url": "https://api.github.com/users/seantsb/orgs", "repos_url": "https://api.github.com/users/seantsb/repos", "events_url": "https://api.github.com/users/seantsb/events{/privacy}", "received_events_url": "https://api.github.com/users/seantsb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-28T17:25:38Z", "updated_at": "2020-06-23T18:21:29Z", "closed_at": "2020-06-23T18:21:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am creating events using service Integration Keys (which have very restricted permission sets) rather than the API key (which has full permissions). However, the `ClientMixin.request` code does the following\r\n\r\n```python\r\n        auth = 'Token token={0}'.format(self.api_key)\r\n        if headers is None:\r\n            headers = {\r\n                'Accept': CONTENT_TYPE,\r\n                'Authorization': auth,\r\n                'Content-Type': 'application/json',\r\n            }\r\n```\r\nwhich works but sends an invalid auth token (`token=None`). The token should be omitted if it's `None` since I imagine they could stop supporting this and reject the event entirely.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/46", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/46/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/46/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/46", "id": 330738552, "node_id": "MDU6SXNzdWUzMzA3Mzg1NTI=", "number": 46, "title": "delete user from team does not set the url correctly", "user": {"login": "QingsongYao", "id": 697725, "node_id": "MDQ6VXNlcjY5NzcyNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/697725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QingsongYao", "html_url": "https://github.com/QingsongYao", "followers_url": "https://api.github.com/users/QingsongYao/followers", "following_url": "https://api.github.com/users/QingsongYao/following{/other_user}", "gists_url": "https://api.github.com/users/QingsongYao/gists{/gist_id}", "starred_url": "https://api.github.com/users/QingsongYao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QingsongYao/subscriptions", "organizations_url": "https://api.github.com/users/QingsongYao/orgs", "repos_url": "https://api.github.com/users/QingsongYao/repos", "events_url": "https://api.github.com/users/QingsongYao/events{/privacy}", "received_events_url": "https://api.github.com/users/QingsongYao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-08T17:18:22Z", "updated_at": "2018-11-21T17:29:35Z", "closed_at": "2018-11-21T17:29:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/PagerDuty/pagerduty-api-python-client/blob/master/pypd/models/team.py?utf8=%E2%9C%93#L52", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/45", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/45/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/45/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/45", "id": 326327869, "node_id": "MDU6SXNzdWUzMjYzMjc4Njk=", "number": 45, "title": "find_name with equal comparison seems not do exactly match ", "user": {"login": "QingsongYao", "id": 697725, "node_id": "MDQ6VXNlcjY5NzcyNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/697725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QingsongYao", "html_url": "https://github.com/QingsongYao", "followers_url": "https://api.github.com/users/QingsongYao/followers", "following_url": "https://api.github.com/users/QingsongYao/following{/other_user}", "gists_url": "https://api.github.com/users/QingsongYao/gists{/gist_id}", "starred_url": "https://api.github.com/users/QingsongYao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QingsongYao/subscriptions", "organizations_url": "https://api.github.com/users/QingsongYao/orgs", "repos_url": "https://api.github.com/users/QingsongYao/repos", "events_url": "https://api.github.com/users/QingsongYao/events{/privacy}", "received_events_url": "https://api.github.com/users/QingsongYao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-24T23:10:26Z", "updated_at": "2020-06-23T18:21:34Z", "closed_at": "2020-06-23T18:21:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Tried following query:\r\npypd.Schedule.find_one(name='Canaveral T').json\r\n{u'name': u'Canaveral Tier 1', u'self': u'\r\n\r\n\r\nThe name does not exactly match", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/44", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/44/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/44/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/44", "id": 325901900, "node_id": "MDU6SXNzdWUzMjU5MDE5MDA=", "number": 44, "title": "did ALLOWED_INTEGRATION_TYPES updated with latest list?", "user": {"login": "QingsongYao", "id": 697725, "node_id": "MDQ6VXNlcjY5NzcyNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/697725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QingsongYao", "html_url": "https://github.com/QingsongYao", "followers_url": "https://api.github.com/users/QingsongYao/followers", "following_url": "https://api.github.com/users/QingsongYao/following{/other_user}", "gists_url": "https://api.github.com/users/QingsongYao/gists{/gist_id}", "starred_url": "https://api.github.com/users/QingsongYao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QingsongYao/subscriptions", "organizations_url": "https://api.github.com/users/QingsongYao/orgs", "repos_url": "https://api.github.com/users/QingsongYao/repos", "events_url": "https://api.github.com/users/QingsongYao/events{/privacy}", "received_events_url": "https://api.github.com/users/QingsongYao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-23T22:50:34Z", "updated_at": "2018-05-29T18:41:45Z", "closed_at": "2018-05-29T18:41:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "look at the ALLOWED_INTEGRATION_TYPES,  I wonder if the types are updated.  For example, do we have promethus, slacks, etc.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/41", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/41/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/41/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/41", "id": 301819405, "node_id": "MDU6SXNzdWUzMDE4MTk0MDU=", "number": 41, "title": "How to set include parameter?", "user": {"login": "sciurus", "id": 677595, "node_id": "MDQ6VXNlcjY3NzU5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/677595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sciurus", "html_url": "https://github.com/sciurus", "followers_url": "https://api.github.com/users/sciurus/followers", "following_url": "https://api.github.com/users/sciurus/following{/other_user}", "gists_url": "https://api.github.com/users/sciurus/gists{/gist_id}", "starred_url": "https://api.github.com/users/sciurus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sciurus/subscriptions", "organizations_url": "https://api.github.com/users/sciurus/orgs", "repos_url": "https://api.github.com/users/sciurus/repos", "events_url": "https://api.github.com/users/sciurus/events{/privacy}", "received_events_url": "https://api.github.com/users/sciurus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-02T16:12:29Z", "updated_at": "2020-06-23T18:21:38Z", "closed_at": "2020-06-23T18:21:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Pagerduty lets you including additional data in response from some endpoints via an `include[]` query parameter. E.G. `https://api.pagerduty.com/services?time_zone=UTC&sort_by=name&include%5B%5D=integrations` to get more details on each services' integrations.\r\n\r\npypd support  passing arbitrary query parameters as kwargs to `find`. However,  neither `include[]` nor `include%5B%5D` is a valid variable name in python, so this will not work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/40", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/40/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/40/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/40", "id": 296522568, "node_id": "MDU6SXNzdWUyOTY1MjI1Njg=", "number": 40, "title": "Is there an example for creating an integration with a service Id?", "user": {"login": "btsteve", "id": 96178, "node_id": "MDQ6VXNlcjk2MTc4", "avatar_url": "https://avatars3.githubusercontent.com/u/96178?v=4", "gravatar_id": "", "url": "https://api.github.com/users/btsteve", "html_url": "https://github.com/btsteve", "followers_url": "https://api.github.com/users/btsteve/followers", "following_url": "https://api.github.com/users/btsteve/following{/other_user}", "gists_url": "https://api.github.com/users/btsteve/gists{/gist_id}", "starred_url": "https://api.github.com/users/btsteve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/btsteve/subscriptions", "organizations_url": "https://api.github.com/users/btsteve/orgs", "repos_url": "https://api.github.com/users/btsteve/repos", "events_url": "https://api.github.com/users/btsteve/events{/privacy}", "received_events_url": "https://api.github.com/users/btsteve/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-02-12T21:00:48Z", "updated_at": "2020-06-23T18:21:44Z", "closed_at": "2020-06-23T18:21:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to create an integration on a service I just created through the API. The service creation portion is working great. I can not seem to pass the correct info into the create_integration method. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/39", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/39/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/39/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/39", "id": 291611846, "node_id": "MDU6SXNzdWUyOTE2MTE4NDY=", "number": 39, "title": "Update pypi package", "user": {"login": "b0bbywan", "id": 9570397, "node_id": "MDQ6VXNlcjk1NzAzOTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/9570397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b0bbywan", "html_url": "https://github.com/b0bbywan", "followers_url": "https://api.github.com/users/b0bbywan/followers", "following_url": "https://api.github.com/users/b0bbywan/following{/other_user}", "gists_url": "https://api.github.com/users/b0bbywan/gists{/gist_id}", "starred_url": "https://api.github.com/users/b0bbywan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b0bbywan/subscriptions", "organizations_url": "https://api.github.com/users/b0bbywan/orgs", "repos_url": "https://api.github.com/users/b0bbywan/repos", "events_url": "https://api.github.com/users/b0bbywan/events{/privacy}", "received_events_url": "https://api.github.com/users/b0bbywan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-25T15:35:13Z", "updated_at": "2020-06-23T18:21:56Z", "closed_at": "2020-06-23T18:21:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Package provided by pypi is not up to date and still fails with python3 because of `basestring` usage, please update pypi.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/38", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/38/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/38/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/38", "id": 291343609, "node_id": "MDU6SXNzdWUyOTEzNDM2MDk=", "number": 38, "title": "query parameters not working with incidents end point", "user": {"login": "sjtarik", "id": 1639100, "node_id": "MDQ6VXNlcjE2MzkxMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1639100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjtarik", "html_url": "https://github.com/sjtarik", "followers_url": "https://api.github.com/users/sjtarik/followers", "following_url": "https://api.github.com/users/sjtarik/following{/other_user}", "gists_url": "https://api.github.com/users/sjtarik/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjtarik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjtarik/subscriptions", "organizations_url": "https://api.github.com/users/sjtarik/orgs", "repos_url": "https://api.github.com/users/sjtarik/repos", "events_url": "https://api.github.com/users/sjtarik/events{/privacy}", "received_events_url": "https://api.github.com/users/sjtarik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-24T20:10:48Z", "updated_at": "2020-06-23T18:22:00Z", "closed_at": "2020-06-23T18:21:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Script passes service id's and team id's but it does not honor the parameters passed to filter incidents returned. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/36", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/36/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/36/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/36", "id": 286760326, "node_id": "MDU6SXNzdWUyODY3NjAzMjY=", "number": 36, "title": "Support setting API key from environment variable", "user": {"login": "swarren83", "id": 4572854, "node_id": "MDQ6VXNlcjQ1NzI4NTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/4572854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swarren83", "html_url": "https://github.com/swarren83", "followers_url": "https://api.github.com/users/swarren83/followers", "following_url": "https://api.github.com/users/swarren83/following{/other_user}", "gists_url": "https://api.github.com/users/swarren83/gists{/gist_id}", "starred_url": "https://api.github.com/users/swarren83/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swarren83/subscriptions", "organizations_url": "https://api.github.com/users/swarren83/orgs", "repos_url": "https://api.github.com/users/swarren83/repos", "events_url": "https://api.github.com/users/swarren83/events{/privacy}", "received_events_url": "https://api.github.com/users/swarren83/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-08T14:24:01Z", "updated_at": "2020-06-23T18:22:03Z", "closed_at": "2020-06-23T18:22:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Setting sensitive data via file is not optimal when using docker containers.  This is because a docker container is built in layers and the file will be available in the layer even if deleted.  Allowing anyone with access to the docker image to be able to acquire the sensitive data(API key).\r\n\r\nIt is best practice to set environment variables, at container runtime, for sensitive data that will be passed to a docker container.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/35", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/35/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/35/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/35", "id": 277058816, "node_id": "MDU6SXNzdWUyNzcwNTg4MTY=", "number": 35, "title": "Support multiple API keys", "user": {"login": "Deconstrained", "id": 1239337, "node_id": "MDQ6VXNlcjEyMzkzMzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1239337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Deconstrained", "html_url": "https://github.com/Deconstrained", "followers_url": "https://api.github.com/users/Deconstrained/followers", "following_url": "https://api.github.com/users/Deconstrained/following{/other_user}", "gists_url": "https://api.github.com/users/Deconstrained/gists{/gist_id}", "starred_url": "https://api.github.com/users/Deconstrained/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Deconstrained/subscriptions", "organizations_url": "https://api.github.com/users/Deconstrained/orgs", "repos_url": "https://api.github.com/users/Deconstrained/repos", "events_url": "https://api.github.com/users/Deconstrained/events{/privacy}", "received_events_url": "https://api.github.com/users/Deconstrained/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 352611483, "node_id": "MDU6TGFiZWwzNTI2MTE0ODM=", "url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 352611485, "node_id": "MDU6TGFiZWwzNTI2MTE0ODU=", "url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-27T15:30:36Z", "updated_at": "2017-11-27T15:55:54Z", "closed_at": "2017-11-27T15:55:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Rather than a global that stores a single API token, it would be useful for purposes of API projects that span two or more accounts to refactor the current method (setting `pypd.api_key`) so that it creates an object (of which more can be created) for authenticating.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/30", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/30/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/30/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/30", "id": 240489702, "node_id": "MDU6SXNzdWUyNDA0ODk3MDI=", "number": 30, "title": "Improve consistency between API requests and responses", "user": {"login": "mikhail", "id": 3210918, "node_id": "MDQ6VXNlcjMyMTA5MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/3210918?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikhail", "html_url": "https://github.com/mikhail", "followers_url": "https://api.github.com/users/mikhail/followers", "following_url": "https://api.github.com/users/mikhail/following{/other_user}", "gists_url": "https://api.github.com/users/mikhail/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikhail/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikhail/subscriptions", "organizations_url": "https://api.github.com/users/mikhail/orgs", "repos_url": "https://api.github.com/users/mikhail/repos", "events_url": "https://api.github.com/users/mikhail/events{/privacy}", "received_events_url": "https://api.github.com/users/mikhail/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-07-04T19:54:17Z", "updated_at": "2017-07-05T02:08:43Z", "closed_at": "2017-07-05T02:08:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to answer a question \"who is on call for a given service\" is proving to be a bit complicated.\r\n\r\n```python\r\nservice = pypd.Service.find_one(name=service_name)\r\n\r\n# Would like one of of the following to work in order of preference:\r\nep = service.get_escalation_policy()\r\nep = pypd.EscalationPolicy.find_one(service)\r\nep = pypd.EscalationPolicy.find_one(**service.json['escalation_policy'])\r\nep = pypd.EscalationPolicy.find_one(name=service.json['escalation_policy']['name'])\r\n\r\n# ok fine, those don't work, maybe `id` works\r\nep = pypd.EscalationPolicy.find_one(id=service.json['escalation_policy']['id'])\r\n# The API call works, but it returns a wrong EP :(\r\nep.id == service.json['escalation_policy']['id']   # False\r\n\r\n# but really name = summary. so this works:\r\nep = pypd.EscalationPolicy.find_one(name=service.json['escalation_policy']['summary'])\r\n```\r\n\r\nHaven't even gotten to schedule and users. Am I missing something that makes this easier?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/25", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/25/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/25/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/25", "id": 237492990, "node_id": "MDU6SXNzdWUyMzc0OTI5OTA=", "number": 25, "title": "Mechanism to set the proxy", "user": {"login": "lee-kode", "id": 1637112, "node_id": "MDQ6VXNlcjE2MzcxMTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1637112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lee-kode", "html_url": "https://github.com/lee-kode", "followers_url": "https://api.github.com/users/lee-kode/followers", "following_url": "https://api.github.com/users/lee-kode/following{/other_user}", "gists_url": "https://api.github.com/users/lee-kode/gists{/gist_id}", "starred_url": "https://api.github.com/users/lee-kode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lee-kode/subscriptions", "organizations_url": "https://api.github.com/users/lee-kode/orgs", "repos_url": "https://api.github.com/users/lee-kode/repos", "events_url": "https://api.github.com/users/lee-kode/events{/privacy}", "received_events_url": "https://api.github.com/users/lee-kode/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 352611483, "node_id": "MDU6TGFiZWwzNTI2MTE0ODM=", "url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-21T10:50:06Z", "updated_at": "2017-06-29T13:55:55Z", "closed_at": "2017-06-29T13:55:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nFirst, I'd like to say thank you for creating this module. It's been helpful.\r\n\r\nI have found an issue. There is no mechanism (in the docs or the code) where I could easily set the proxies for requests to consume. Do you have plans for this? If not right now, would you mind me trying my hand and submitting a pull request?\r\n\r\nThank you.\r\n\r\nLee\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/21", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/21/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/21/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/21", "id": 230509070, "node_id": "MDU6SXNzdWUyMzA1MDkwNzA=", "number": 21, "title": "Malformed query string when filter on multiple statuses", "user": {"login": "raizyr", "id": 108399, "node_id": "MDQ6VXNlcjEwODM5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/108399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raizyr", "html_url": "https://github.com/raizyr", "followers_url": "https://api.github.com/users/raizyr/followers", "following_url": "https://api.github.com/users/raizyr/following{/other_user}", "gists_url": "https://api.github.com/users/raizyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/raizyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raizyr/subscriptions", "organizations_url": "https://api.github.com/users/raizyr/orgs", "repos_url": "https://api.github.com/users/raizyr/repos", "events_url": "https://api.github.com/users/raizyr/events{/privacy}", "received_events_url": "https://api.github.com/users/raizyr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-22T20:24:36Z", "updated_at": "2017-05-23T20:57:03Z", "closed_at": "2017-05-23T20:57:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Trying to filter on multiple statuses results in a malformed query string in Python3.  The loop over the query_params gets evaluated at each iteration resulting in the `[]` being added multiple times.\r\n\r\n```\r\nDEBUG:requests.packages.urllib3.connectionpool:https://api.pagerduty.com:443 \"GET /incidents?sort_by=created_at%3Adesc&offset=0&limit=1&statuses%5B%5D%5B%5D%5B%5D%5B%5D%5B%5D%5B%5D%5B%5D%5B%5D=triggered&statuses%5B%5D%5B%5D%5B%5D%5B%5D%5B%5D%5B%5D%5B%5D%5B%5D=acknowledged\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/19", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/19/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/19/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/19", "id": 218593325, "node_id": "MDU6SXNzdWUyMTg1OTMzMjU=", "number": 19, "title": "Support Alerts", "user": {"login": "calebsmac", "id": 26824617, "node_id": "MDQ6VXNlcjI2ODI0NjE3", "avatar_url": "https://avatars3.githubusercontent.com/u/26824617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebsmac", "html_url": "https://github.com/calebsmac", "followers_url": "https://api.github.com/users/calebsmac/followers", "following_url": "https://api.github.com/users/calebsmac/following{/other_user}", "gists_url": "https://api.github.com/users/calebsmac/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebsmac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebsmac/subscriptions", "organizations_url": "https://api.github.com/users/calebsmac/orgs", "repos_url": "https://api.github.com/users/calebsmac/repos", "events_url": "https://api.github.com/users/calebsmac/events{/privacy}", "received_events_url": "https://api.github.com/users/calebsmac/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 352611483, "node_id": "MDU6TGFiZWwzNTI2MTE0ODM=", "url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 352611484, "node_id": "MDU6TGFiZWwzNTI2MTE0ODQ=", "url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-31T19:21:00Z", "updated_at": "2017-06-29T17:36:23Z", "closed_at": "2017-06-29T17:36:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "One major feature this library appears to be currently missing is Pagerduty Alerts ([API reference](https://v2.developer.pagerduty.com/v2/page/api-reference#!/Incidents/get_incidents_id_alerts))\r\n\r\nThis is important because we often include important information in the event body, which is not available from the incident or log message APIs.\r\n\r\nAny thoughts on potential implementation?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/16", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/16/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/16/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/16", "id": 210872458, "node_id": "MDU6SXNzdWUyMTA4NzI0NTg=", "number": 16, "title": "Support DELETE on Integrations", "user": {"login": "saj", "id": 194389, "node_id": "MDQ6VXNlcjE5NDM4OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/194389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saj", "html_url": "https://github.com/saj", "followers_url": "https://api.github.com/users/saj/followers", "following_url": "https://api.github.com/users/saj/following{/other_user}", "gists_url": "https://api.github.com/users/saj/gists{/gist_id}", "starred_url": "https://api.github.com/users/saj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saj/subscriptions", "organizations_url": "https://api.github.com/users/saj/orgs", "repos_url": "https://api.github.com/users/saj/repos", "events_url": "https://api.github.com/users/saj/events{/privacy}", "received_events_url": "https://api.github.com/users/saj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 352611483, "node_id": "MDU6TGFiZWwzNTI2MTE0ODM=", "url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 352611484, "node_id": "MDU6TGFiZWwzNTI2MTE0ODQ=", "url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-28T18:43:50Z", "updated_at": "2020-06-23T18:22:08Z", "closed_at": "2020-06-23T18:22:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In PagerDuty support case #85888, I received confirmation that the v2 API does, in fact, support the deletion of individual integrations (on a service).  The `Integration` class in this library rejects deletes.  (The `delete` and `remove` methods are explicitly overridden to raise `InvalidEndpoint` and `InvalidEndpointOperation` exceptions, respectively.)  That's one problem.\r\n\r\nThe second problem involves the resource paths for integrations.  These paths are nested beneath their parent services.  e.g.: `/services/SERVICE-ID/integrations/INTEGRATION-ID`.  The default `Entity` endpoint resolution code does not work in this case.  Even if the overridden `delete` and `remove` methods were to be removed, resource deletion would fail because the requests would be addressed to `/integrations/INTEGRATION-ID` (missing leading `/services/SERVICE-ID`).  I'm not sure how best to solve this problem.   Endpoints seem to get resolved at the class layer when what (I think) we need here is resolution at the instance layer.\r\n\r\nThoughts?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/14", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/14/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/14/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/14", "id": 209369097, "node_id": "MDU6SXNzdWUyMDkzNjkwOTc=", "number": 14, "title": "API feedback - create", "user": {"login": "rbtcollins", "id": 499678, "node_id": "MDQ6VXNlcjQ5OTY3OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/499678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbtcollins", "html_url": "https://github.com/rbtcollins", "followers_url": "https://api.github.com/users/rbtcollins/followers", "following_url": "https://api.github.com/users/rbtcollins/following{/other_user}", "gists_url": "https://api.github.com/users/rbtcollins/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbtcollins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbtcollins/subscriptions", "organizations_url": "https://api.github.com/users/rbtcollins/orgs", "repos_url": "https://api.github.com/users/rbtcollins/repos", "events_url": "https://api.github.com/users/rbtcollins/events{/privacy}", "received_events_url": "https://api.github.com/users/rbtcollins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 352611483, "node_id": "MDU6TGFiZWwzNTI2MTE0ODM=", "url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 352611484, "node_id": "MDU6TGFiZWwzNTI2MTE0ODQ=", "url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-22T07:00:14Z", "updated_at": "2020-06-23T18:22:12Z", "closed_at": "2020-06-23T18:22:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "it might be nice to have a modelled-in-Python version of objects.\r\n\r\nE.g. rather than passing a free form dict to create(), pass in an EscalationSchedule object, which would allow things like 'help()' to work locally rather than having to dig up the v2 API docs from online and then translating that to Python - having to guess what needs to be supplied, and whats mandatory etc.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/13", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/13/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/13/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/13", "id": 209367464, "node_id": "MDU6SXNzdWUyMDkzNjc0NjQ=", "number": 13, "title": "API feedback - global state", "user": {"login": "rbtcollins", "id": 499678, "node_id": "MDQ6VXNlcjQ5OTY3OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/499678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbtcollins", "html_url": "https://github.com/rbtcollins", "followers_url": "https://api.github.com/users/rbtcollins/followers", "following_url": "https://api.github.com/users/rbtcollins/following{/other_user}", "gists_url": "https://api.github.com/users/rbtcollins/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbtcollins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbtcollins/subscriptions", "organizations_url": "https://api.github.com/users/rbtcollins/orgs", "repos_url": "https://api.github.com/users/rbtcollins/repos", "events_url": "https://api.github.com/users/rbtcollins/events{/privacy}", "received_events_url": "https://api.github.com/users/rbtcollins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 352611483, "node_id": "MDU6TGFiZWwzNTI2MTE0ODM=", "url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 352611484, "node_id": "MDU6TGFiZWwzNTI2MTE0ODQ=", "url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-02-22T06:49:40Z", "updated_at": "2020-06-23T18:22:18Z", "closed_at": "2020-06-23T18:22:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, I just wanted to provide a couple of bits of feedback having given this a bit of exercise this week.\r\n\r\nFirstly, global state is ugh: pypd.api_key = <thing>, followed by pypd.User.find() or whatever: this makes it very hard and fragile to write code that talks to more than one pagerduty account within the same process. Thats avoidable with one of the other idioms you can see around the Python ecosystem:\r\n```\r\napi_client = pypd.APIClient(key=...)\r\napi_client.User.find()\r\n```\r\n\r\nor\r\n```\r\napi_client = pypd.APIClient(key=...)\r\npypd.User(api_client).find()\r\n```\r\n\r\nor \r\n````\r\napi_client = pypd.APIClient(key=...)\r\npypd.User().find(api_client)\r\n```\r\n\r\nBasically in the first case, pypd would track any state itself, in the latter two the user supplies the api client in a late bound fashion - which is equally convenient, because its still just one thing that needs to be passed around within a client program. I don't really have an opinion about whats best, just please - not global state.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/12", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/12/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/12/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/12", "id": 209366762, "node_id": "MDU6SXNzdWUyMDkzNjY3NjI=", "number": 12, "title": "Any ETA on the missing U in CRUD ?", "user": {"login": "rbtcollins", "id": 499678, "node_id": "MDQ6VXNlcjQ5OTY3OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/499678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbtcollins", "html_url": "https://github.com/rbtcollins", "followers_url": "https://api.github.com/users/rbtcollins/followers", "following_url": "https://api.github.com/users/rbtcollins/following{/other_user}", "gists_url": "https://api.github.com/users/rbtcollins/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbtcollins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbtcollins/subscriptions", "organizations_url": "https://api.github.com/users/rbtcollins/orgs", "repos_url": "https://api.github.com/users/rbtcollins/repos", "events_url": "https://api.github.com/users/rbtcollins/events{/privacy}", "received_events_url": "https://api.github.com/users/rbtcollins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 352611483, "node_id": "MDU6TGFiZWwzNTI2MTE0ODM=", "url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 352611484, "node_id": "MDU6TGFiZWwzNTI2MTE0ODQ=", "url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-02-22T06:44:37Z", "updated_at": "2020-06-23T18:22:23Z", "closed_at": "2020-06-23T18:22:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Just as it says :).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/8", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/8/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/8/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/8", "id": 207710307, "node_id": "MDU6SXNzdWUyMDc3MTAzMDc=", "number": 8, "title": "Package not published on PyPI", "user": {"login": "rbtcollins", "id": 499678, "node_id": "MDQ6VXNlcjQ5OTY3OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/499678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbtcollins", "html_url": "https://github.com/rbtcollins", "followers_url": "https://api.github.com/users/rbtcollins/followers", "following_url": "https://api.github.com/users/rbtcollins/following{/other_user}", "gists_url": "https://api.github.com/users/rbtcollins/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbtcollins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbtcollins/subscriptions", "organizations_url": "https://api.github.com/users/rbtcollins/orgs", "repos_url": "https://api.github.com/users/rbtcollins/repos", "events_url": "https://api.github.com/users/rbtcollins/events{/privacy}", "received_events_url": "https://api.github.com/users/rbtcollins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-02-15T05:12:31Z", "updated_at": "2017-04-06T22:44:24Z", "closed_at": "2017-04-06T22:44:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The standard distribution mechanism for Python packages is to publish to PyPI - this is very straight forward, docs are https://packaging.python.org/distributing/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/7", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/7/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/7/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/7", "id": 204152827, "node_id": "MDU6SXNzdWUyMDQxNTI4Mjc=", "number": 7, "title": "find for Teams, Schedules return all available instead of search", "user": {"login": "sjtarik", "id": 1639100, "node_id": "MDQ6VXNlcjE2MzkxMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1639100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjtarik", "html_url": "https://github.com/sjtarik", "followers_url": "https://api.github.com/users/sjtarik/followers", "following_url": "https://api.github.com/users/sjtarik/following{/other_user}", "gists_url": "https://api.github.com/users/sjtarik/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjtarik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjtarik/subscriptions", "organizations_url": "https://api.github.com/users/sjtarik/orgs", "repos_url": "https://api.github.com/users/sjtarik/repos", "events_url": "https://api.github.com/users/sjtarik/events{/privacy}", "received_events_url": "https://api.github.com/users/sjtarik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-30T22:44:32Z", "updated_at": "2017-02-17T17:33:54Z", "closed_at": "2017-02-17T17:33:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "When feed with id or name, Teams and Schedules find method return all existing ones instead of querying with parameter. Is that expected behavior? I am able to get particular items with fetch but find not filtering for me for passed parameters.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/5", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/5/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/5/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/5", "id": 192069581, "node_id": "MDU6SXNzdWUxOTIwNjk1ODE=", "number": 5, "title": "Plans for Python 3 support?", "user": {"login": "gwillem", "id": 1145479, "node_id": "MDQ6VXNlcjExNDU0Nzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1145479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gwillem", "html_url": "https://github.com/gwillem", "followers_url": "https://api.github.com/users/gwillem/followers", "following_url": "https://api.github.com/users/gwillem/following{/other_user}", "gists_url": "https://api.github.com/users/gwillem/gists{/gist_id}", "starred_url": "https://api.github.com/users/gwillem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gwillem/subscriptions", "organizations_url": "https://api.github.com/users/gwillem/orgs", "repos_url": "https://api.github.com/users/gwillem/repos", "events_url": "https://api.github.com/users/gwillem/events{/privacy}", "received_events_url": "https://api.github.com/users/gwillem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-11-28T17:39:41Z", "updated_at": "2017-02-17T16:08:25Z", "closed_at": "2017-02-17T16:06:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for sharing this code. It was written for Python 2 though, which seems odd in this era. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/4", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/4/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/4/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/4", "id": 184936346, "node_id": "MDU6SXNzdWUxODQ5MzYzNDY=", "number": 4, "title": "pip install?", "user": {"login": "papaben", "id": 821115, "node_id": "MDQ6VXNlcjgyMTExNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/821115?v=4", "gravatar_id": "", "url": "https://api.github.com/users/papaben", "html_url": "https://github.com/papaben", "followers_url": "https://api.github.com/users/papaben/followers", "following_url": "https://api.github.com/users/papaben/following{/other_user}", "gists_url": "https://api.github.com/users/papaben/gists{/gist_id}", "starred_url": "https://api.github.com/users/papaben/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/papaben/subscriptions", "organizations_url": "https://api.github.com/users/papaben/orgs", "repos_url": "https://api.github.com/users/papaben/repos", "events_url": "https://api.github.com/users/papaben/events{/privacy}", "received_events_url": "https://api.github.com/users/papaben/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-24T19:45:47Z", "updated_at": "2016-11-28T18:40:18Z", "closed_at": "2016-11-28T18:40:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nThis library looks great. I'd love to start using it. What are your recommendations for installation? I can't find `pypd` in pip. Also, the URL in `setup.py` has the wrong URL for GitHub. \n\nSincerely,\nBen\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/1", "repository_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client", "labels_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/1/comments", "events_url": "https://api.github.com/repos/PagerDuty/pagerduty-api-python-client/issues/1/events", "html_url": "https://github.com/PagerDuty/pagerduty-api-python-client/issues/1", "id": 167605448, "node_id": "MDU6SXNzdWUxNjc2MDU0NDg=", "number": 1, "title": "Array parameter issue in Incidents api", "user": {"login": "dorony", "id": 1654457, "node_id": "MDQ6VXNlcjE2NTQ0NTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1654457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dorony", "html_url": "https://github.com/dorony", "followers_url": "https://api.github.com/users/dorony/followers", "following_url": "https://api.github.com/users/dorony/following{/other_user}", "gists_url": "https://api.github.com/users/dorony/gists{/gist_id}", "starred_url": "https://api.github.com/users/dorony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dorony/subscriptions", "organizations_url": "https://api.github.com/users/dorony/orgs", "repos_url": "https://api.github.com/users/dorony/repos", "events_url": "https://api.github.com/users/dorony/events{/privacy}", "received_events_url": "https://api.github.com/users/dorony/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-26T13:21:23Z", "updated_at": "2017-02-17T17:34:19Z", "closed_at": "2017-02-17T17:34:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following code fails with an error:\n`pypd.Incident.find(statuses=['triggered', 'acknowledged'])`\nAnd the error is:\n`BadRequest: BadRequest (2001): Invalid Input Provided - Statuses must be in triggered, acknowledged, or resolved.`\nIt works when passing just one value in the array so I suspect there's a problem with the url generated for the request when an array has more than one item.\n", "performed_via_github_app": null, "score": 1.0}]}