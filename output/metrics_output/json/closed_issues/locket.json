{"total_count": 4, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/mwilliamson/locket.py/issues/10", "repository_url": "https://api.github.com/repos/mwilliamson/locket.py", "labels_url": "https://api.github.com/repos/mwilliamson/locket.py/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/mwilliamson/locket.py/issues/10/comments", "events_url": "https://api.github.com/repos/mwilliamson/locket.py/issues/10/events", "html_url": "https://github.com/mwilliamson/locket.py/issues/10", "id": 463405995, "node_id": "MDU6SXNzdWU0NjM0MDU5OTU=", "number": 10, "title": "Please include Licence information", "user": {"login": "GadgetSteve", "id": 5593690, "node_id": "MDQ6VXNlcjU1OTM2OTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5593690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GadgetSteve", "html_url": "https://github.com/GadgetSteve", "followers_url": "https://api.github.com/users/GadgetSteve/followers", "following_url": "https://api.github.com/users/GadgetSteve/following{/other_user}", "gists_url": "https://api.github.com/users/GadgetSteve/gists{/gist_id}", "starred_url": "https://api.github.com/users/GadgetSteve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GadgetSteve/subscriptions", "organizations_url": "https://api.github.com/users/GadgetSteve/orgs", "repos_url": "https://api.github.com/users/GadgetSteve/repos", "events_url": "https://api.github.com/users/GadgetSteve/events{/privacy}", "received_events_url": "https://api.github.com/users/GadgetSteve/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-02T19:49:18Z", "updated_at": "2020-02-04T19:14:50Z", "closed_at": "2020-02-04T19:14:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently `pip show locket` shows the licence as UNKNOWN. \r\n\r\nI believe that adding a `licence` entry to setup.py would resolve this - it would remove the step of visiting the repository to check the licence type for those that have to worry about such things. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwilliamson/locket.py/issues/9", "repository_url": "https://api.github.com/repos/mwilliamson/locket.py", "labels_url": "https://api.github.com/repos/mwilliamson/locket.py/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/mwilliamson/locket.py/issues/9/comments", "events_url": "https://api.github.com/repos/mwilliamson/locket.py/issues/9/events", "html_url": "https://github.com/mwilliamson/locket.py/issues/9", "id": 276541810, "node_id": "MDU6SXNzdWUyNzY1NDE4MTA=", "number": 9, "title": "Advantages over zc/yg.lockfile?", "user": {"login": "pombredanne", "id": 675997, "node_id": "MDQ6VXNlcjY3NTk5Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/675997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pombredanne", "html_url": "https://github.com/pombredanne", "followers_url": "https://api.github.com/users/pombredanne/followers", "following_url": "https://api.github.com/users/pombredanne/following{/other_user}", "gists_url": "https://api.github.com/users/pombredanne/gists{/gist_id}", "starred_url": "https://api.github.com/users/pombredanne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pombredanne/subscriptions", "organizations_url": "https://api.github.com/users/pombredanne/orgs", "repos_url": "https://api.github.com/users/pombredanne/repos", "events_url": "https://api.github.com/users/pombredanne/events{/privacy}", "received_events_url": "https://api.github.com/users/pombredanne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-24T08:10:48Z", "updated_at": "2017-11-24T08:35:23Z", "closed_at": "2017-11-24T08:34:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi:\r\nI am always on the lookout for a better cross-process file lock that works flawlessly at scale (e.g. think across 1000+ processes on a 144CPU machine) and on Linux, macOS and Windows.\r\n\r\nI am using zg/yg/lockfile here https://github.com/nexB/scancode-toolkit/blob/4e63a6775a895fdec5a3a53f96013399fa34b1b7/src/licensedcode/cache.py#L122 \r\n\r\nWhat would be the plus of locket?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwilliamson/locket.py/issues/5", "repository_url": "https://api.github.com/repos/mwilliamson/locket.py", "labels_url": "https://api.github.com/repos/mwilliamson/locket.py/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/mwilliamson/locket.py/issues/5/comments", "events_url": "https://api.github.com/repos/mwilliamson/locket.py/issues/5/events", "html_url": "https://github.com/mwilliamson/locket.py/issues/5", "id": 272646300, "node_id": "MDU6SXNzdWUyNzI2NDYzMDA=", "number": 5, "title": "Caching does not take timeout into account", "user": {"login": "pitrou", "id": 1721820, "node_id": "MDQ6VXNlcjE3MjE4MjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pitrou", "html_url": "https://github.com/pitrou", "followers_url": "https://api.github.com/users/pitrou/followers", "following_url": "https://api.github.com/users/pitrou/following{/other_user}", "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}", "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions", "organizations_url": "https://api.github.com/users/pitrou/orgs", "repos_url": "https://api.github.com/users/pitrou/repos", "events_url": "https://api.github.com/users/pitrou/events{/privacy}", "received_events_url": "https://api.github.com/users/pitrou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-09T17:15:04Z", "updated_at": "2017-11-13T12:49:35Z", "closed_at": "2017-11-13T12:49:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This means your codebase can't sometimes take a lock in a blocking way and sometimes in a non-blocking way.\r\n```python\r\n>>> lock1 = locket.lock_file(\"/tmp/xxx.lock\")\r\n>>> lock2 = locket.lock_file(\"/tmp/xxx.lock\", timeout=0)\r\n>>> lock1 is lock2\r\nTrue\r\n>>> lock2.acquire()\r\n>>> lock2.acquire()\r\n[ hangs until Ctrl-C ]\r\n```\r\n\r\nThe solution would be to allow overriding timeout on acquire() instead. What do you think @mwilliamson?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwilliamson/locket.py/issues/3", "repository_url": "https://api.github.com/repos/mwilliamson/locket.py", "labels_url": "https://api.github.com/repos/mwilliamson/locket.py/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/mwilliamson/locket.py/issues/3/comments", "events_url": "https://api.github.com/repos/mwilliamson/locket.py/issues/3/events", "html_url": "https://github.com/mwilliamson/locket.py/issues/3", "id": 146406874, "node_id": "MDU6SXNzdWUxNDY0MDY4NzQ=", "number": 3, "title": "Tests are failing", "user": {"login": "opoplawski", "id": 814662, "node_id": "MDQ6VXNlcjgxNDY2Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/814662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opoplawski", "html_url": "https://github.com/opoplawski", "followers_url": "https://api.github.com/users/opoplawski/followers", "following_url": "https://api.github.com/users/opoplawski/following{/other_user}", "gists_url": "https://api.github.com/users/opoplawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/opoplawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opoplawski/subscriptions", "organizations_url": "https://api.github.com/users/opoplawski/orgs", "repos_url": "https://api.github.com/users/opoplawski/repos", "events_url": "https://api.github.com/users/opoplawski/events{/privacy}", "received_events_url": "https://api.github.com/users/opoplawski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-04-06T19:14:40Z", "updated_at": "2016-04-06T22:13:28Z", "closed_at": "2016-04-06T22:13:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to build an rpm package for locket and getting:\n\n```\n+ cd locket.py-0.2.0\n+ nosetests-2.7\nE..E.FF.F....\n======================================================================\nERROR: tests.locket_tests.can_set_timeout_to_zero_to_raise_exception_if_lock_cannot_be_acquired\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\n  File \"/export/home/orion/redhat/python-locket-0.2.0/locket.py-0.2.0/tests/locket_tests.py\", line 25, in run_test\n    return func(lock_path)\n  File \"/export/home/orion/redhat/python-locket-0.2.0/locket.py-0.2.0/tests/locket_tests.py\", line 173, in can_set_timeout_to_zero_to_raise_exception_if_lock_cannot_be_acquired\n    locker_2.acquire()\n  File \"/export/home/orion/redhat/python-locket-0.2.0/locket.py-0.2.0/tests/locket_tests.py\", line 251, in acquire\n    self._process.stdin_write(b\"\\n\")\n  File \"/usr/lib/python2.7/site-packages/spur/local.py\", line 157, in stdin_write\n    self._process_stdin.write(value)\nIOError: [Errno 32] Broken pipe\n\n======================================================================\nERROR: tests.locket_tests.error_is_raised_after_timeout_has_expired\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\n  File \"/export/home/orion/redhat/python-locket-0.2.0/locket.py-0.2.0/tests/locket_tests.py\", line 25, in run_test\n    return func(lock_path)\n  File \"/export/home/orion/redhat/python-locket-0.2.0/locket.py-0.2.0/tests/locket_tests.py\", line 197, in error_is_raised_after_timeout_has_expired\n    locker_2.acquire()\n  File \"/export/home/orion/redhat/python-locket-0.2.0/locket.py-0.2.0/tests/locket_tests.py\", line 251, in acquire\n    self._process.stdin_write(b\"\\n\")\n  File \"/usr/lib/python2.7/site-packages/spur/local.py\", line 157, in stdin_write\n    self._process_stdin.write(value)\nIOError: [Errno 32] Broken pipe\n\n======================================================================\nFAIL: tests.locket_tests.lock_file_blocks_until_lock_is_available\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\n  File \"/export/home/orion/redhat/python-locket-0.2.0/locket.py-0.2.0/tests/locket_tests.py\", line 25, in run_test\n    return func(lock_path)\n  File \"/export/home/orion/redhat/python-locket-0.2.0/locket.py-0.2.0/tests/locket_tests.py\", line 125, in lock_file_blocks_until_lock_is_available\n    assert locker_1.has_lock()\nAssertionError\n\n======================================================================\nFAIL: tests.locket_tests.lock_is_acquired_if_available_before_timeout_expires\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\n  File \"/export/home/orion/redhat/python-locket-0.2.0/locket.py-0.2.0/tests/locket_tests.py\", line 25, in run_test\n    return func(lock_path)\n  File \"/export/home/orion/redhat/python-locket-0.2.0/locket.py-0.2.0/tests/locket_tests.py\", line 224, in lock_is_acquired_if_available_before_timeout_expires\n    assert locker_1.has_lock()\nAssertionError\n\n======================================================================\nFAIL: tests.locket_tests.lock_is_released_if_holding_process_is_brutally_killed\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\n  File \"/export/home/orion/redhat/python-locket-0.2.0/locket.py-0.2.0/tests/locket_tests.py\", line 25, in run_test\n    return func(lock_path)\n  File \"/export/home/orion/redhat/python-locket-0.2.0/locket.py-0.2.0/tests/locket_tests.py\", line 154, in lock_is_released_if_holding_process_is_brutally_killed\n    assert locker_1.has_lock()\nAssertionError\n\n----------------------------------------------------------------------\nRan 13 tests in 0.952s\n\nFAILED (errors=2, failures=3)\n```\n", "performed_via_github_app": null, "score": 1.0}]}