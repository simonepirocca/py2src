{"total_count": 50, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/SAP/PyHDB/issues/134", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/134/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/134/events", "html_url": "https://github.com/SAP/PyHDB/issues/134", "id": 590115937, "node_id": "MDU6SXNzdWU1OTAxMTU5Mzc=", "number": 134, "title": "Using PYHDB library a RAW Column Store Data Type in HANA DB is read as binary object", "user": {"login": "mike1130694", "id": 15694432, "node_id": "MDQ6VXNlcjE1Njk0NDMy", "avatar_url": "https://avatars2.githubusercontent.com/u/15694432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mike1130694", "html_url": "https://github.com/mike1130694", "followers_url": "https://api.github.com/users/mike1130694/followers", "following_url": "https://api.github.com/users/mike1130694/following{/other_user}", "gists_url": "https://api.github.com/users/mike1130694/gists{/gist_id}", "starred_url": "https://api.github.com/users/mike1130694/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mike1130694/subscriptions", "organizations_url": "https://api.github.com/users/mike1130694/orgs", "repos_url": "https://api.github.com/users/mike1130694/repos", "events_url": "https://api.github.com/users/mike1130694/events{/privacy}", "received_events_url": "https://api.github.com/users/mike1130694/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-30T09:01:04Z", "updated_at": "2020-03-30T11:26:58Z", "closed_at": "2020-03-30T11:26:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been using the PYHDB library to extract from HANA DB tables.\r\n\r\nHowever I noticed that column \"MSGGUID\" was read as a binary object by the library. Originally the Column Store Data Type in HANA Studio is \"RAW\".\r\n![image](https://user-images.githubusercontent.com/15694432/77894508-aa2c6e00-7275-11ea-9e78-8cfb49772cf6.png)\r\n\r\n\r\nIn the pandas Dataframe where I've extracted the dataset. this is how the column is shown\r\n\r\n![image](https://user-images.githubusercontent.com/15694432/77894521-b1537c00-7275-11ea-91c4-0f42d0c18ee1.png)\r\n\r\n\r\nI've been trying to decode this column to transform it to a string since I want to perform certain operations like join using this ID.\r\n\r\nI wonder if anyone has faced this situation and whether you could give me some suggestion on how to decode this binary object.\r\n\r\nI would appreciate any information you could provide.\r\n\r\nSincerely,\r\n\r\nMiguel Angel Meza Martinez", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/123", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/123/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/123/events", "html_url": "https://github.com/SAP/PyHDB/issues/123", "id": 426801949, "node_id": "MDU6SXNzdWU0MjY4MDE5NDk=", "number": 123, "title": "Connect to SAP HaaS database with direct sql port", "user": {"login": "BigNuoLi", "id": 35769366, "node_id": "MDQ6VXNlcjM1NzY5MzY2", "avatar_url": "https://avatars2.githubusercontent.com/u/35769366?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BigNuoLi", "html_url": "https://github.com/BigNuoLi", "followers_url": "https://api.github.com/users/BigNuoLi/followers", "following_url": "https://api.github.com/users/BigNuoLi/following{/other_user}", "gists_url": "https://api.github.com/users/BigNuoLi/gists{/gist_id}", "starred_url": "https://api.github.com/users/BigNuoLi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BigNuoLi/subscriptions", "organizations_url": "https://api.github.com/users/BigNuoLi/orgs", "repos_url": "https://api.github.com/users/BigNuoLi/repos", "events_url": "https://api.github.com/users/BigNuoLi/events{/privacy}", "received_events_url": "https://api.github.com/users/BigNuoLi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-29T03:38:39Z", "updated_at": "2019-05-10T01:26:01Z", "closed_at": "2019-05-10T01:26:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does the PyHDB driver support connect to SAP HaaS database with direct sql  host/port pair ?\r\nHere I got error \"**pyhdb.exceptions.DatabaseError: only secure connections are allowed**\" as I did not find where to pass the secure parameters in pyhdb.connect(....).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/122", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/122/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/122/events", "html_url": "https://github.com/SAP/PyHDB/issues/122", "id": 418743232, "node_id": "MDU6SXNzdWU0MTg3NDMyMzI=", "number": 122, "title": "issue with where clause", "user": {"login": "jochensteinmetz", "id": 34510675, "node_id": "MDQ6VXNlcjM0NTEwNjc1", "avatar_url": "https://avatars3.githubusercontent.com/u/34510675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jochensteinmetz", "html_url": "https://github.com/jochensteinmetz", "followers_url": "https://api.github.com/users/jochensteinmetz/followers", "following_url": "https://api.github.com/users/jochensteinmetz/following{/other_user}", "gists_url": "https://api.github.com/users/jochensteinmetz/gists{/gist_id}", "starred_url": "https://api.github.com/users/jochensteinmetz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jochensteinmetz/subscriptions", "organizations_url": "https://api.github.com/users/jochensteinmetz/orgs", "repos_url": "https://api.github.com/users/jochensteinmetz/repos", "events_url": "https://api.github.com/users/jochensteinmetz/events{/privacy}", "received_events_url": "https://api.github.com/users/jochensteinmetz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-08T11:11:44Z", "updated_at": "2019-03-09T09:28:27Z", "closed_at": "2019-03-09T09:28:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following query worked\r\nquery=\"select DISTINCT <column name> from <table name>\"\r\n\r\nWhat is the right notation to get a where clause work:\r\n1. query='select * from <table name> where <column name> = \" any string with blanks\" '\r\n2. query=\"select * from <table name> where <column name> = 'any string with blanks'\"\r\n3. query='select * from <table name> where <column name> = \\\" any string with blanks\\\" '\r\n4. query=\"select * from <table name> where <column name> = \\' any string with blanks\\'\"\r\n\r\n1.-4. did not work for me.\r\nfor 1. I get the error pyhdb.exceptions.DatabaseError: invalid column name:", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/119", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/119/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/119/events", "html_url": "https://github.com/SAP/PyHDB/issues/119", "id": 399472681, "node_id": "MDU6SXNzdWUzOTk0NzI2ODE=", "number": 119, "title": "Delete statement does not work", "user": {"login": "ralphsawaya", "id": 20292284, "node_id": "MDQ6VXNlcjIwMjkyMjg0", "avatar_url": "https://avatars0.githubusercontent.com/u/20292284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ralphsawaya", "html_url": "https://github.com/ralphsawaya", "followers_url": "https://api.github.com/users/ralphsawaya/followers", "following_url": "https://api.github.com/users/ralphsawaya/following{/other_user}", "gists_url": "https://api.github.com/users/ralphsawaya/gists{/gist_id}", "starred_url": "https://api.github.com/users/ralphsawaya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ralphsawaya/subscriptions", "organizations_url": "https://api.github.com/users/ralphsawaya/orgs", "repos_url": "https://api.github.com/users/ralphsawaya/repos", "events_url": "https://api.github.com/users/ralphsawaya/events{/privacy}", "received_events_url": "https://api.github.com/users/ralphsawaya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-15T18:20:27Z", "updated_at": "2019-01-21T15:47:12Z", "closed_at": "2019-01-21T15:47:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "The below execution does not delete the rows in the table:\r\n\r\ncursor.execute('DELETE FROM tablename')", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/99", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/99/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/99/events", "html_url": "https://github.com/SAP/PyHDB/issues/99", "id": 307095386, "node_id": "MDU6SXNzdWUzMDcwOTUzODY=", "number": 99, "title": "Missing HANA Table Headers", "user": {"login": "quincymac", "id": 37603691, "node_id": "MDQ6VXNlcjM3NjAzNjkx", "avatar_url": "https://avatars1.githubusercontent.com/u/37603691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quincymac", "html_url": "https://github.com/quincymac", "followers_url": "https://api.github.com/users/quincymac/followers", "following_url": "https://api.github.com/users/quincymac/following{/other_user}", "gists_url": "https://api.github.com/users/quincymac/gists{/gist_id}", "starred_url": "https://api.github.com/users/quincymac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quincymac/subscriptions", "organizations_url": "https://api.github.com/users/quincymac/orgs", "repos_url": "https://api.github.com/users/quincymac/repos", "events_url": "https://api.github.com/users/quincymac/events{/privacy}", "received_events_url": "https://api.github.com/users/quincymac/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-21T01:36:34Z", "updated_at": "2019-03-28T10:11:09Z", "closed_at": "2018-04-29T21:28:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nI am able to run queries as follows:\r\n\r\n```\r\ncursor.execute('select top 100 * from \"tbl_Q1\"')\r\nss = cursor.fetchall()\r\n```\r\nHowever I can't determine how to get the column headers for my query.\r\nAny help would be much appreciated!\r\n\r\nBasically I want to return the result with the table headers/column names\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/96", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/96/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/96/events", "html_url": "https://github.com/SAP/PyHDB/issues/96", "id": 270207187, "node_id": "MDU6SXNzdWUyNzAyMDcxODc=", "number": 96, "title": "How to Setup SAML authentication Method", "user": {"login": "Vigneshbosch", "id": 19144034, "node_id": "MDQ6VXNlcjE5MTQ0MDM0", "avatar_url": "https://avatars0.githubusercontent.com/u/19144034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vigneshbosch", "html_url": "https://github.com/Vigneshbosch", "followers_url": "https://api.github.com/users/Vigneshbosch/followers", "following_url": "https://api.github.com/users/Vigneshbosch/following{/other_user}", "gists_url": "https://api.github.com/users/Vigneshbosch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vigneshbosch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vigneshbosch/subscriptions", "organizations_url": "https://api.github.com/users/Vigneshbosch/orgs", "repos_url": "https://api.github.com/users/Vigneshbosch/repos", "events_url": "https://api.github.com/users/Vigneshbosch/events{/privacy}", "received_events_url": "https://api.github.com/users/Vigneshbosch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-01T06:20:55Z", "updated_at": "2017-11-25T09:36:55Z", "closed_at": "2017-11-25T09:36:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @jarus \r\n\r\nCan you please help me on how to setup SAML authentication method to establish a connection between Python application running in Hana VM and the Hana Database in the SAP Cloud Platform. \r\n\r\n\r\nThanks \r\nVignesh ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/95", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/95/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/95/events", "html_url": "https://github.com/SAP/PyHDB/issues/95", "id": 258581556, "node_id": "MDU6SXNzdWUyNTg1ODE1NTY=", "number": 95, "title": "pyhdb.exceptions.DatabaseError: invalid name of function or procedure: PROC_ADD2", "user": {"login": "rcaballero", "id": 4256444, "node_id": "MDQ6VXNlcjQyNTY0NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/4256444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rcaballero", "html_url": "https://github.com/rcaballero", "followers_url": "https://api.github.com/users/rcaballero/followers", "following_url": "https://api.github.com/users/rcaballero/following{/other_user}", "gists_url": "https://api.github.com/users/rcaballero/gists{/gist_id}", "starred_url": "https://api.github.com/users/rcaballero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rcaballero/subscriptions", "organizations_url": "https://api.github.com/users/rcaballero/orgs", "repos_url": "https://api.github.com/users/rcaballero/repos", "events_url": "https://api.github.com/users/rcaballero/events{/privacy}", "received_events_url": "https://api.github.com/users/rcaballero/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-18T18:45:39Z", "updated_at": "2018-05-23T14:00:32Z", "closed_at": "2018-05-23T14:00:31Z", "author_association": "NONE", "active_lock_reason": null, "body": ">>> import pyhdb\r\n>>> sql_to_prepare = 'call PROC_ADD2 (?, ?, ?, ?)'\r\n>>> params = {'A':2, 'B':5, 'C':None, 'D': None}\r\n>>> psid = cursor.prepare(sql_to_prepare)\r\n>>> ps = cursor.get_prepared_statement(psid)\r\n>>> cursor.execute_prepared(ps, [params])\r\n>>> result = cursor.fetchall()\r\n>>> for l in result:\r\n>>>     print l\r\n\r\n\r\nme da el siguiente error:\r\nraise error.parts[0].errors[0]\r\npyhdb.exceptions.DatabaseError: invalid name of function or procedure: PROC_ADD2: line 1 col 6 (at pos 5)\r\n\r\nIn Hana studio have:\r\ncreate procedure PROC_ADD2 (in a int, in b int, out c int, out d char)\r\nlanguage sqlscript\r\nbegin\r\n    c := :a + :b;\r\n    d := 'A';\r\nend", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/94", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/94/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/94/events", "html_url": "https://github.com/SAP/PyHDB/issues/94", "id": 257987844, "node_id": "MDU6SXNzdWUyNTc5ODc4NDQ=", "number": 94, "title": "hdbuserstore support", "user": {"login": "norbertc", "id": 1143677, "node_id": "MDQ6VXNlcjExNDM2Nzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1143677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/norbertc", "html_url": "https://github.com/norbertc", "followers_url": "https://api.github.com/users/norbertc/followers", "following_url": "https://api.github.com/users/norbertc/following{/other_user}", "gists_url": "https://api.github.com/users/norbertc/gists{/gist_id}", "starred_url": "https://api.github.com/users/norbertc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/norbertc/subscriptions", "organizations_url": "https://api.github.com/users/norbertc/orgs", "repos_url": "https://api.github.com/users/norbertc/repos", "events_url": "https://api.github.com/users/norbertc/events{/privacy}", "received_events_url": "https://api.github.com/users/norbertc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-15T09:58:33Z", "updated_at": "2017-11-25T09:35:11Z", "closed_at": "2017-11-25T09:35:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "any plans of supporting authentication using hdbuserstore?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/92", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/92/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/92/events", "html_url": "https://github.com/SAP/PyHDB/issues/92", "id": 251176540, "node_id": "MDU6SXNzdWUyNTExNzY1NDA=", "number": 92, "title": "'Invalid column name' error when using max() in query", "user": {"login": "bpmcl", "id": 12658629, "node_id": "MDQ6VXNlcjEyNjU4NjI5", "avatar_url": "https://avatars3.githubusercontent.com/u/12658629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bpmcl", "html_url": "https://github.com/bpmcl", "followers_url": "https://api.github.com/users/bpmcl/followers", "following_url": "https://api.github.com/users/bpmcl/following{/other_user}", "gists_url": "https://api.github.com/users/bpmcl/gists{/gist_id}", "starred_url": "https://api.github.com/users/bpmcl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bpmcl/subscriptions", "organizations_url": "https://api.github.com/users/bpmcl/orgs", "repos_url": "https://api.github.com/users/bpmcl/repos", "events_url": "https://api.github.com/users/bpmcl/events{/privacy}", "received_events_url": "https://api.github.com/users/bpmcl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-18T08:34:20Z", "updated_at": "2017-08-18T09:38:05Z", "closed_at": "2017-08-18T09:38:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using the max() function in a query, I receive the following error:\r\n\r\n```\r\n>>> cursor.execute('SELECT packages.id AS packages_id, packages.name AS packages_name,\r\npackages.version AS packages_version, packages.enabled AS packages_enabled,\r\nmax(packages.version) AS max_1 FROM packages')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/lib/python3.5/site-packages/pyhdb/cursor.py\", line 258, in execute\r\n    self._execute_direct(statement)\r\n  File \"/lib/python3.5/site-packages/pyhdb/cursor.py\", line 217, in _execute_direct\r\n    reply = self.connection.send_request(request)\r\n  File \"/lib/python3.5/site-packages/pyhdb/connection.py\", line 84, in send_request\r\n    return self.__send_message_recv_reply(payload.getvalue())\r\n  File \"/lib/python3.5/site-packages/pyhdb/connection.py\", line 124, in __send_message_recv_reply\r\n    return ReplyMessage.unpack_reply(header, payload)\r\n  File \"/lib/python3.5/site-packages/pyhdb/protocol/message.py\", line 92, in unpack_reply\r\n    segments=tuple(ReplySegment.unpack_from(payload, expected_segments=header.num_segments)),\r\n  File \"/lib/python3.5/site-packages/pyhdb/protocol/segments.py\", line 152, in unpack_from\r\n    raise error.parts[0].errors[0]\r\npyhdb.exceptions.DatabaseError: invalid column name: The column 'PACKAGES.ID' is invalid in\r\nthe select list because the GROUP BY clause or an aggregation function does not contain it:\r\nline 1 col 8 (at pos 7)\r\n```\r\n\r\nThe same query works correctly without the function, as does using it without selecting any other columns. Am I doing something wrong, or is this a bug?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/91", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/91/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/91/events", "html_url": "https://github.com/SAP/PyHDB/issues/91", "id": 237466492, "node_id": "MDU6SXNzdWUyMzc0NjY0OTI=", "number": 91, "title": "Need to insert 10 million record from Python into Hana Table ..... ", "user": {"login": "Vigneshbosch", "id": 19144034, "node_id": "MDQ6VXNlcjE5MTQ0MDM0", "avatar_url": "https://avatars0.githubusercontent.com/u/19144034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vigneshbosch", "html_url": "https://github.com/Vigneshbosch", "followers_url": "https://api.github.com/users/Vigneshbosch/followers", "following_url": "https://api.github.com/users/Vigneshbosch/following{/other_user}", "gists_url": "https://api.github.com/users/Vigneshbosch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vigneshbosch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vigneshbosch/subscriptions", "organizations_url": "https://api.github.com/users/Vigneshbosch/orgs", "repos_url": "https://api.github.com/users/Vigneshbosch/repos", "events_url": "https://api.github.com/users/Vigneshbosch/events{/privacy}", "received_events_url": "https://api.github.com/users/Vigneshbosch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-21T09:14:22Z", "updated_at": "2018-05-23T13:26:28Z", "closed_at": "2018-05-23T13:26:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi All, \r\n\r\nPlease suggest a best way to insert around 10 million into Hana Table . Is it possible to pass a data frame as a  parameter for a Stored procedure call ?? \r\n\r\nThanks in advance \r\n\r\nRegards \r\nVignesh J ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/86", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/86/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/86/events", "html_url": "https://github.com/SAP/PyHDB/issues/86", "id": 227631910, "node_id": "MDU6SXNzdWUyMjc2MzE5MTA=", "number": 86, "title": "Python and HCP Trial connectivity issue. ", "user": {"login": "Vigneshbosch", "id": 19144034, "node_id": "MDQ6VXNlcjE5MTQ0MDM0", "avatar_url": "https://avatars0.githubusercontent.com/u/19144034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vigneshbosch", "html_url": "https://github.com/Vigneshbosch", "followers_url": "https://api.github.com/users/Vigneshbosch/followers", "following_url": "https://api.github.com/users/Vigneshbosch/following{/other_user}", "gists_url": "https://api.github.com/users/Vigneshbosch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vigneshbosch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vigneshbosch/subscriptions", "organizations_url": "https://api.github.com/users/Vigneshbosch/orgs", "repos_url": "https://api.github.com/users/Vigneshbosch/repos", "events_url": "https://api.github.com/users/Vigneshbosch/events{/privacy}", "received_events_url": "https://api.github.com/users/Vigneshbosch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-05-10T10:16:34Z", "updated_at": "2018-05-23T14:09:48Z", "closed_at": "2018-05-23T14:09:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to establish a connection with my HCP trail account from python but facing the below issue:\r\n\r\n![capture](https://cloud.githubusercontent.com/assets/19144034/25893969/a9e6ccce-3597-11e7-93f8-db77a6e8da99.PNG)\r\n\r\nThe code snippet i used to establish this connection is :\r\n\r\nimport dbapi\r\n\r\nconn = dbapi.connect( 'hanatrial.ondemand.com' , 30015, 'p1942054738', 'xxxxxx')\r\n\r\nprint ( conn.isconnected())\r\n\r\nPlease note :\r\n\r\n- i have placed this code under python folder of hdbclient.\r\n\r\n- I have copied these files into the Lib folder of python\r\n\r\n            * __init__.py, dbapi.py, resultrow.py\r\n\r\n            * pyhdbcli.pdb, pyhdbcli.pyd\r\n\r\nPlease let me know what am i missing to establish a connection between HCP and python.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/84", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/84/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/84/events", "html_url": "https://github.com/SAP/PyHDB/issues/84", "id": 226213282, "node_id": "MDU6SXNzdWUyMjYyMTMyODI=", "number": 84, "title": "Keep connection open/Reconnect", "user": {"login": "Bouncner", "id": 1745857, "node_id": "MDQ6VXNlcjE3NDU4NTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1745857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bouncner", "html_url": "https://github.com/Bouncner", "followers_url": "https://api.github.com/users/Bouncner/followers", "following_url": "https://api.github.com/users/Bouncner/following{/other_user}", "gists_url": "https://api.github.com/users/Bouncner/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bouncner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bouncner/subscriptions", "organizations_url": "https://api.github.com/users/Bouncner/orgs", "repos_url": "https://api.github.com/users/Bouncner/repos", "events_url": "https://api.github.com/users/Bouncner/events{/privacy}", "received_events_url": "https://api.github.com/users/Bouncner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-04T08:46:51Z", "updated_at": "2017-05-11T11:27:03Z", "closed_at": "2017-05-11T11:26:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nwe're using a couple of long running Python scripts which each have a connection to a HANA instance. We've seen several problems with timeout errors and I wanted to ask if there is a possibility to have something like an \"keep connection open\" or \"automatically reconnect\" flag?\r\n\r\nOr is it possible to implement that?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/83", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/83/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/83/events", "html_url": "https://github.com/SAP/PyHDB/issues/83", "id": 214063778, "node_id": "MDU6SXNzdWUyMTQwNjM3Nzg=", "number": 83, "title": "Unhandled error caused NoneType has no encode error", "user": {"login": "michaelkuty", "id": 3372169, "node_id": "MDQ6VXNlcjMzNzIxNjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/3372169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelkuty", "html_url": "https://github.com/michaelkuty", "followers_url": "https://api.github.com/users/michaelkuty/followers", "following_url": "https://api.github.com/users/michaelkuty/following{/other_user}", "gists_url": "https://api.github.com/users/michaelkuty/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelkuty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelkuty/subscriptions", "organizations_url": "https://api.github.com/users/michaelkuty/orgs", "repos_url": "https://api.github.com/users/michaelkuty/repos", "events_url": "https://api.github.com/users/michaelkuty/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelkuty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-14T12:58:49Z", "updated_at": "2017-03-28T09:01:24Z", "closed_at": "2017-03-28T09:01:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is caused instering \"String\" into VARCHAR(1)\r\n\r\n```\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/sqlalchemy/orm/session.py\", line 874, in commit\r\n    self.transaction.commit()\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/sqlalchemy/orm/session.py\", line 461, in commit\r\n    self._prepare_impl()\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/sqlalchemy/orm/session.py\", line 441, in _prepare_impl\r\n    self.session.flush()\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/sqlalchemy/orm/session.py\", line 2139, in flush\r\n    self._flush(objects)\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/sqlalchemy/orm/session.py\", line 2259, in _flush\r\n    transaction.rollback(_capture_exception=True)\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/sqlalchemy/util/langhelpers.py\", line 60, in __exit__\r\n    compat.reraise(exc_type, exc_value, exc_tb)\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/sqlalchemy/util/compat.py\", line 187, in reraise\r\n    raise value\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/sqlalchemy/orm/session.py\", line 2223, in _flush\r\n    flush_context.execute()\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py\", line 389, in execute\r\n    rec.execute(self)\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py\", line 548, in execute\r\n    uow\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py\", line 181, in save_obj\r\n    mapper, table, insert)\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py\", line 835, in _emit_insert_statements\r\n    execute(statement, params)\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 945, in execute\r\n    return meth(self, multiparams, params)\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/sqlalchemy/sql/elements.py\", line 263, in _execute_on_connection\r\n    return connection._execute_clauseelement(self, multiparams, params)\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 1053, in _execute_clauseelement\r\n    compiled_sql, distilled_params\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 1189, in _execute_context\r\n    context)\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 1396, in _handle_dbapi_exception\r\n    util.reraise(*exc_info)\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/sqlalchemy/util/compat.py\", line 187, in reraise\r\n    raise value\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 1182, in _execute_context\r\n    context)\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/sqlalchemy/engine/default.py\", line 470, in do_execute\r\n    cursor.execute(statement, parameters)\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/pyhdb/cursor.py\", line 260, in execute\r\n    self.executemany(statement, parameters=[parameters])\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/pyhdb/cursor.py\", line 284, in executemany\r\n    self.execute_prepared(prepared_statement, parameters)\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/pyhdb/cursor.py\", line 189, in execute_prepared\r\n    reply = self.connection.send_request(request)\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/pyhdb/connection.py\", line 83, in send_request\r\n    payload = message.pack()  # obtain BytesIO instance\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/pyhdb/protocol/message.py\", line 55, in pack\r\n    self.build_payload(payload)\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/pyhdb/protocol/message.py\", line 45, in build_payload\r\n    segment.pack(payload, commit=self.autocommit)\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/pyhdb/protocol/segments.py\", line 94, in pack\r\n    self.build_payload(payload)\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/pyhdb/protocol/segments.py\", line 80, in build_payload\r\n    part_payload = part.pack(remaining_size)\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/pyhdb/protocol/parts.py\", line 103, in pack\r\n    arguments_count, payload = self.pack_data(remaining_size - self.header_size)\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/pyhdb/protocol/parts.py\", line 509, in pack_data\r\n    lob_buffer = LobBuffer(value, _DataType, lob_header_pos)\r\n  File \"/Users/michaelkuty/projects/stories/lib/python3.5/site-packages/pyhdb/protocol/parts.py\", line 448, in __init__\r\n    enc_data = orig_data.encode()\r\nAttributeError: 'NoneType' object has no attribute 'encode'\r\n```\r\n\r\nproposed solution in #82 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/81", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/81/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/81/events", "html_url": "https://github.com/SAP/PyHDB/issues/81", "id": 213782149, "node_id": "MDU6SXNzdWUyMTM3ODIxNDk=", "number": 81, "title": "dynamic get table\u2018s data", "user": {"login": "ElanUpper", "id": 23339771, "node_id": "MDQ6VXNlcjIzMzM5Nzcx", "avatar_url": "https://avatars1.githubusercontent.com/u/23339771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ElanUpper", "html_url": "https://github.com/ElanUpper", "followers_url": "https://api.github.com/users/ElanUpper/followers", "following_url": "https://api.github.com/users/ElanUpper/following{/other_user}", "gists_url": "https://api.github.com/users/ElanUpper/gists{/gist_id}", "starred_url": "https://api.github.com/users/ElanUpper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ElanUpper/subscriptions", "organizations_url": "https://api.github.com/users/ElanUpper/orgs", "repos_url": "https://api.github.com/users/ElanUpper/repos", "events_url": "https://api.github.com/users/ElanUpper/events{/privacy}", "received_events_url": "https://api.github.com/users/ElanUpper/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-13T14:24:05Z", "updated_at": "2018-05-23T13:53:55Z", "closed_at": "2018-05-23T13:53:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "for example, I want get the data, but I don't know the tablename. so I need to write the stament like following:\r\n`QueryData = 'select * from :1;' `\r\n`curWrite.execute(QueryColumn, [tableName]).fetchall();\r\n`\r\nbut colsole return \"incorrect syntax near \":1\"\"\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/79", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/79/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/79/events", "html_url": "https://github.com/SAP/PyHDB/issues/79", "id": 207739291, "node_id": "MDU6SXNzdWUyMDc3MzkyOTE=", "number": 79, "title": "EXECUTION_COUNT in M_SQL_PLAN_CACHE  is not updated", "user": {"login": "sgkim126", "id": 1138402, "node_id": "MDQ6VXNlcjExMzg0MDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1138402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgkim126", "html_url": "https://github.com/sgkim126", "followers_url": "https://api.github.com/users/sgkim126/followers", "following_url": "https://api.github.com/users/sgkim126/following{/other_user}", "gists_url": "https://api.github.com/users/sgkim126/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgkim126/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgkim126/subscriptions", "organizations_url": "https://api.github.com/users/sgkim126/orgs", "repos_url": "https://api.github.com/users/sgkim126/repos", "events_url": "https://api.github.com/users/sgkim126/events{/privacy}", "received_events_url": "https://api.github.com/users/sgkim126/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-15T08:40:31Z", "updated_at": "2018-05-23T13:52:05Z", "closed_at": "2018-05-23T13:52:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi PyHDB folks,\r\n\r\nI tried to know the execution time of my query.\r\nI read M_SQL_PLAN_CACHE, because it contains TOTAL_EXECUTION_TIME and EXECUTION_COUNT.\r\n\r\nFirst time I tried below code.\r\n```python\r\nSTAT = \"\"\"SELECT TOTAL_EXECUTION_TIME, EXECUTION_COUNT\r\nFROM M_SQL_PLAN_CACHE\r\nWHERE TO_VARCHAR(STATEMENT_STRING)=:1\r\nAND IS_VALID = 'TRUE'\"\"\"\r\n\r\nq = 'SELECT * FROM EC_TEST_TABLE'\r\n\r\ncon = pyhdb.connect(host=HOST, password=PASSWORD, user=USER, port=PORT)\r\ncur = con.cursor()\r\n\r\ndef fetch(q):\r\n    cur.execute(q, [])\r\n    cur.fetchall()\r\n    cur.execute(STAT, [q])\r\n    return cur.fetchall()\r\n```\r\n\r\nA fetch function get execution count and execution time from M_SQL_PLAN_CACHE after executing query and fetching all data.\r\nI thought it would work and it worked if `EC_TEST_TABLE` table does not have lob field.\r\nBut if it has a lob field(either NCLob, CLob or Blob) and the table is not empty, the execution count and time does not increases.\r\n\r\nIn the second try, I closed cursor before read M_SQL_PLAN_CACHE\r\n```python\r\ndef cursor_close_and_fetch(q):\r\n    global cur\r\n    cur.execute(q)\r\n    cur.fetchall()\r\n    cur.close()\r\n    cur = con.cursor()\r\n    cur.execute(STAT, [q])\r\n    return cur.fetchall()\r\n```\r\nBut it does not worked neither.\r\n\r\nFinally, I found a workaround, execution time is updated when the connection is closed. But I think closing cursor should be enough to update execution time.\r\n```python\r\ndef connection_close_and_fetch(q):\r\n    global cur, con\r\n    cur.execute(q)\r\n    cur.fetchall()\r\n    cur.close()\r\n    con.close()\r\n    con = pyhdb.connect(host=HOST, password=PASSWORD, user=USER, port=PORT)\r\n    cur = con.cursor()\r\n    cur.execute(STAT, [q])\r\n    return cur.fetchall()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/78", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/78/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/78/events", "html_url": "https://github.com/SAP/PyHDB/issues/78", "id": 201656596, "node_id": "MDU6SXNzdWUyMDE2NTY1OTY=", "number": 78, "title": "Rounding error on Timestamp column", "user": {"login": "carlsoane", "id": 20099402, "node_id": "MDQ6VXNlcjIwMDk5NDAy", "avatar_url": "https://avatars0.githubusercontent.com/u/20099402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlsoane", "html_url": "https://github.com/carlsoane", "followers_url": "https://api.github.com/users/carlsoane/followers", "following_url": "https://api.github.com/users/carlsoane/following{/other_user}", "gists_url": "https://api.github.com/users/carlsoane/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlsoane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlsoane/subscriptions", "organizations_url": "https://api.github.com/users/carlsoane/orgs", "repos_url": "https://api.github.com/users/carlsoane/repos", "events_url": "https://api.github.com/users/carlsoane/events{/privacy}", "received_events_url": "https://api.github.com/users/carlsoane/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-18T18:35:49Z", "updated_at": "2017-02-17T07:09:37Z", "closed_at": "2017-02-17T07:09:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I encountered the error \"DatabaseError(u'invalid DATE, TIME or TIMESTAMP value: not a valid millisecond: 60000: type_code=16, index=2',)\" when running through the Django tutorial https://docs.djangoproject.com/en/1.10/intro/tutorial02/. Specifically, I encountered it when I executed the instruction: \"Question.objects.get(pub_date__year=current_year)\". The problem is that that instruction generates a query with two parameters to identify the current year: '2017-01-01 00:00:00',  and '2017-12-31 23:59:59.999999'. The preparation of the second parameter causes the problem. You don't need Django to reproduce the problem, but I mention it because it shows that the bug, though an edge case, unfortunately shows up in a very well travelled place.\r\n\r\nThe problem is in the handling of microseconds in pyhdb.protocols.types.Timestamp. The 59 seconds and 999999 microseconds of the second parameter is being rounded up to 60000 in the Timestamp.prepare function. 60000 is, of course, an invalid millisecond value. \r\n\r\nI have attached a zip file, sql_parm_test.zip, that containing three files:\r\n- sql_parm_test.sql: This contains the sql needed to run the test.\r\n- sql_parm_test.py: This contains the python test needed to reproduce the problem.\r\n- sql_parm_fix.txt: This is a code snippet that shows the fix that I implemented for my environment.\r\n\r\nI am using the following versions of things:\r\n- HANA, express edition 2.00.000.00.1479874437\r\n- python 2.7.10\r\n- pyhdb 0.3.2\r\n- six 1.10.0\r\nFor the record, I am using the following Django modules:\r\n- Django 1.10.5\r\n- django-hana 1.1\r\n\r\n[sql_parm_test.zip](https://github.com/SAP/PyHDB/files/714693/sql_parm_test.zip)\r\n\r\nRegards,\r\n\r\n\r\nCarl Soane", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/76", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/76/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/76/events", "html_url": "https://github.com/SAP/PyHDB/issues/76", "id": 192684874, "node_id": "MDU6SXNzdWUxOTI2ODQ4NzQ=", "number": 76, "title": "Unable to connect to HANA DB having Multi-tenant container DB Configuration", "user": {"login": "sujoy1968", "id": 4564481, "node_id": "MDQ6VXNlcjQ1NjQ0ODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/4564481?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sujoy1968", "html_url": "https://github.com/sujoy1968", "followers_url": "https://api.github.com/users/sujoy1968/followers", "following_url": "https://api.github.com/users/sujoy1968/following{/other_user}", "gists_url": "https://api.github.com/users/sujoy1968/gists{/gist_id}", "starred_url": "https://api.github.com/users/sujoy1968/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sujoy1968/subscriptions", "organizations_url": "https://api.github.com/users/sujoy1968/orgs", "repos_url": "https://api.github.com/users/sujoy1968/repos", "events_url": "https://api.github.com/users/sujoy1968/events{/privacy}", "received_events_url": "https://api.github.com/users/sujoy1968/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-30T21:30:06Z", "updated_at": "2016-12-01T01:30:52Z", "closed_at": "2016-12-01T01:30:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am unable to connect to HANA DB using PyHDB driver. I have a Multi-tenant Container DB (MCD) configuration.\r\n\r\nI can connect to HDB using the following command:\r\n\r\nhdbsql -u SYSTEM -p <password> -d SystemDB\r\n\r\nHowever, I am unable to pass the parameterr for database in pyhdb.connect.\r\n\r\nPlease advise.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/74", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/74/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/74/events", "html_url": "https://github.com/SAP/PyHDB/issues/74", "id": 188374407, "node_id": "MDU6SXNzdWUxODgzNzQ0MDc=", "number": 74, "title": "Support Windows Authentification", "user": {"login": "NigelCleland", "id": 2712782, "node_id": "MDQ6VXNlcjI3MTI3ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2712782?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NigelCleland", "html_url": "https://github.com/NigelCleland", "followers_url": "https://api.github.com/users/NigelCleland/followers", "following_url": "https://api.github.com/users/NigelCleland/following{/other_user}", "gists_url": "https://api.github.com/users/NigelCleland/gists{/gist_id}", "starred_url": "https://api.github.com/users/NigelCleland/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NigelCleland/subscriptions", "organizations_url": "https://api.github.com/users/NigelCleland/orgs", "repos_url": "https://api.github.com/users/NigelCleland/repos", "events_url": "https://api.github.com/users/NigelCleland/events{/privacy}", "received_events_url": "https://api.github.com/users/NigelCleland/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-09T22:56:35Z", "updated_at": "2018-05-23T12:22:49Z", "closed_at": "2018-05-23T12:22:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently a large number of enterprise environments use windows authentification to control access to HANA environments. As such user credentials are not available.\r\n\r\nSupporting Windows AD as other drives such as PYODBC etc do would greatly facilitate the usefulness of HANA", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/71", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/71/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/71/events", "html_url": "https://github.com/SAP/PyHDB/issues/71", "id": 174599217, "node_id": "MDU6SXNzdWUxNzQ1OTkyMTc=", "number": 71, "title": "connect to tenant database fails", "user": {"login": "hong5698", "id": 20542208, "node_id": "MDQ6VXNlcjIwNTQyMjA4", "avatar_url": "https://avatars2.githubusercontent.com/u/20542208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hong5698", "html_url": "https://github.com/hong5698", "followers_url": "https://api.github.com/users/hong5698/followers", "following_url": "https://api.github.com/users/hong5698/following{/other_user}", "gists_url": "https://api.github.com/users/hong5698/gists{/gist_id}", "starred_url": "https://api.github.com/users/hong5698/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hong5698/subscriptions", "organizations_url": "https://api.github.com/users/hong5698/orgs", "repos_url": "https://api.github.com/users/hong5698/repos", "events_url": "https://api.github.com/users/hong5698/events{/privacy}", "received_events_url": "https://api.github.com/users/hong5698/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-09-01T18:56:43Z", "updated_at": "2018-05-23T11:06:30Z", "closed_at": "2018-05-23T11:06:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "while try to connect to a tenant db in hana like:\nconnection = pyhdb.connect(\n    host=\"example.com\",\n    port=30015,\n    user=\"user\",\n    password=\"secret\",\n    database='db1'\n)\n\nit fails with error as -\nTypeError: connect() got an unexpected keyword argument 'database'\n\nnote that replacing \"database\" with \"dbname\" would fail too, any tips?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/70", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/70/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/70/events", "html_url": "https://github.com/SAP/PyHDB/issues/70", "id": 167918625, "node_id": "MDU6SXNzdWUxNjc5MTg2MjU=", "number": 70, "title": "Connection error", "user": {"login": "robertcoon", "id": 20688186, "node_id": "MDQ6VXNlcjIwNjg4MTg2", "avatar_url": "https://avatars0.githubusercontent.com/u/20688186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robertcoon", "html_url": "https://github.com/robertcoon", "followers_url": "https://api.github.com/users/robertcoon/followers", "following_url": "https://api.github.com/users/robertcoon/following{/other_user}", "gists_url": "https://api.github.com/users/robertcoon/gists{/gist_id}", "starred_url": "https://api.github.com/users/robertcoon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robertcoon/subscriptions", "organizations_url": "https://api.github.com/users/robertcoon/orgs", "repos_url": "https://api.github.com/users/robertcoon/repos", "events_url": "https://api.github.com/users/robertcoon/events{/privacy}", "received_events_url": "https://api.github.com/users/robertcoon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-07-27T18:06:54Z", "updated_at": "2019-12-04T16:05:05Z", "closed_at": "2018-05-23T14:18:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Receiving a interesting error when trying to do a insert into SPS12 from Python 3.5:\nTraceback (most recent call last):\n  File \"C:\\Users\\sap\\Anaconda3\\lib\\site-packages\\pyhdb-0.3.1-py3.5.egg\\pyhdb\\connection.py\", line 108, in __send_message_recv_reply\n    _payload = self._socket.recv(header.payload_length - payload.tell())\nConnectionResetError: [WinError 10054] An existing connection was forcibly closed by the remote host\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"Coon_test.py\", line 21, in <module>\n    connection.close()\n  File \"C:\\Users\\sap\\Anaconda3\\lib\\site-packages\\pyhdb-0.3.1-py3.5.egg\\pyhdb\\connection.py\", line 168, in close\n    reply = self.send_request(request)\n  File \"C:\\Users\\sap\\Anaconda3\\lib\\site-packages\\pyhdb-0.3.1-py3.5.egg\\pyhdb\\connection.py\", line 84, in send_request\n    return self.__send_message_recv_reply(payload.getvalue())\n  File \"C:\\Users\\sap\\Anaconda3\\lib\\site-packages\\pyhdb-0.3.1-py3.5.egg\\pyhdb\\connection.py\", line 121, in __send_message_recv_reply\n    raise OperationalError(\"Lost connection to HANA server (%r)\" % error)\npyhdb.exceptions.OperationalError: Lost connection to HANA server (ConnectionResetError(10054, 'An existing connection was forcibly closed by the remote host', None, 10054, None))\n\nAny thoughts?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/69", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/69/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/69/events", "html_url": "https://github.com/SAP/PyHDB/issues/69", "id": 167694331, "node_id": "MDU6SXNzdWUxNjc2OTQzMzE=", "number": 69, "title": "Connection issue after upgrade from SPS10 to SPS12", "user": {"login": "micahlabrams", "id": 9744288, "node_id": "MDQ6VXNlcjk3NDQyODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/9744288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micahlabrams", "html_url": "https://github.com/micahlabrams", "followers_url": "https://api.github.com/users/micahlabrams/followers", "following_url": "https://api.github.com/users/micahlabrams/following{/other_user}", "gists_url": "https://api.github.com/users/micahlabrams/gists{/gist_id}", "starred_url": "https://api.github.com/users/micahlabrams/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micahlabrams/subscriptions", "organizations_url": "https://api.github.com/users/micahlabrams/orgs", "repos_url": "https://api.github.com/users/micahlabrams/repos", "events_url": "https://api.github.com/users/micahlabrams/events{/privacy}", "received_events_url": "https://api.github.com/users/micahlabrams/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-26T19:44:44Z", "updated_at": "2016-07-26T20:40:56Z", "closed_at": "2016-07-26T20:40:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "The pyhdb module worked great with Python 3.5.0 (Anaconda distro) on a Windows 2008 server running HANA SPS10.  After upgrading to SPS12, we see the following connection error:\n\nOperationalError: Lost connection to HANA server (ConnectionResetError(10054, 'An existing connection was forcibly closed by the remote host', none, 10054, none)).\n\nWe are able to telnet into the server on port 30015 and connect via studio on the same system with no issues. If I put in a 'wrong' username/password I get an authentication error...so the connection is at least making it that far.\n\nGreatly appreciate any assistance from the pyhdb community.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/67", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/67/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/67/events", "html_url": "https://github.com/SAP/PyHDB/issues/67", "id": 166378015, "node_id": "MDU6SXNzdWUxNjYzNzgwMTU=", "number": 67, "title": "batch insert problem", "user": {"login": "hong5698", "id": 20542208, "node_id": "MDQ6VXNlcjIwNTQyMjA4", "avatar_url": "https://avatars2.githubusercontent.com/u/20542208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hong5698", "html_url": "https://github.com/hong5698", "followers_url": "https://api.github.com/users/hong5698/followers", "following_url": "https://api.github.com/users/hong5698/following{/other_user}", "gists_url": "https://api.github.com/users/hong5698/gists{/gist_id}", "starred_url": "https://api.github.com/users/hong5698/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hong5698/subscriptions", "organizations_url": "https://api.github.com/users/hong5698/orgs", "repos_url": "https://api.github.com/users/hong5698/repos", "events_url": "https://api.github.com/users/hong5698/events{/privacy}", "received_events_url": "https://api.github.com/users/hong5698/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-19T16:40:35Z", "updated_at": "2016-08-16T13:14:10Z", "closed_at": "2016-08-15T20:04:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "this is python 3.5.1, when try to insert batch data like:\n    curs01.execute(\"\"\"select ID,EN,FR,DE,JA,ZH,KO,ZH_HK,ZH_TW,CJK,SPAIN,POLISH,PT,ITALY,\n                    NORWAY,SWEFIN,CP874,CP932,CP936_GB2312_2K,CP950,CP1250,CP1251,\n                    CP1252,CP1253,CP1254,CP1256,CP1255,CP1257,CP1258\n                    from SAMP_LANG_KEYWORD order by ID \"\"\")\n    keywords01 = curs01.fetchall()\n    for key01 in keywords01:\n        cmdstr01 = \"\"\" INSERT into 24F3AA18E176403CBF3A6111C2B4DF45.SAMP_LANG_KEYWORD\n                    (ID1,EN,FR,DE,JA,ZH,KO,ZH_HK,ZH_TW,CJK,SPAIN,POLISH,PT,ITALY,\n                    NORWAY,SWEFIN,CP874,CP932,CP936,CP950,CP1250,CP1251,\n                    CP1252,CP1253,CP1254,CP1256,CP1255,CP1257,CP1258) VALUES (\n                    :1,:2,:3,:4,:5,:6,:7,:8,:9,:10,\n                    :11,:12,:13,:14,:15,:16,:17,:18,:19,:20,\n                    :21,:22,:23,:24,:25,:26,:27,:28,:29\n                    ) \"\"\"\n        curs02.execute(cmdstr01,[key01[0],key01[1],key01[2],key01[3],key01[4],key01[5],key01[6],key01[7],key01[8],key01[9],\n                       key01[10],key01[11],key01[12],key01[13],key01[14],key01[15],key01[16],key01[17],key01[18],key01[19],\n                       key01[20],key01[21],key01[22],key01[23],key01[24],key01[25],key01[26],key01[27],key01[28]])\n\nafter running above statement, there is no data in the table, I have to add one more line:\ncurs02.execute('commit')\n\nwith above \"commit\", I could see data, but at the same time, it shows error message like:\nError\nTraceback (most recent call last):\n  File \"C:\\Test\\Hana\\hrtt\\test0.py\", line 39, in test_hana\n    hana_test(curs1)\n  File \"C:\\Test\\Hana\\hrtt\\shared\\fun_hrtt.py\", line 579, in hana_test\n    curs02.execute('commit')\n  File \"C:\\Apps\\Python35\\lib\\site-packages\\pyhdb\\cursor.py\", line 258, in execute\n    self._execute_direct(statement)\n  File \"C:\\Apps\\Python35\\lib\\site-packages\\pyhdb\\cursor.py\", line 231, in _execute_direct\n    raise InterfaceError(\"Invalid or unsupported function code received: %d\" % function_code)\npyhdb.exceptions.InterfaceError: Invalid or unsupported function code received: 11\n\nnot so sure, what is wrong here\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/65", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/65/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/65/events", "html_url": "https://github.com/SAP/PyHDB/issues/65", "id": 163366356, "node_id": "MDU6SXNzdWUxNjMzNjYzNTY=", "number": 65, "title": "Is there any way to get the db status like memory ,cpu consumption?", "user": {"login": "naveenkumarmarri", "id": 2484004, "node_id": "MDQ6VXNlcjI0ODQwMDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2484004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/naveenkumarmarri", "html_url": "https://github.com/naveenkumarmarri", "followers_url": "https://api.github.com/users/naveenkumarmarri/followers", "following_url": "https://api.github.com/users/naveenkumarmarri/following{/other_user}", "gists_url": "https://api.github.com/users/naveenkumarmarri/gists{/gist_id}", "starred_url": "https://api.github.com/users/naveenkumarmarri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/naveenkumarmarri/subscriptions", "organizations_url": "https://api.github.com/users/naveenkumarmarri/orgs", "repos_url": "https://api.github.com/users/naveenkumarmarri/repos", "events_url": "https://api.github.com/users/naveenkumarmarri/events{/privacy}", "received_events_url": "https://api.github.com/users/naveenkumarmarri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-01T10:23:33Z", "updated_at": "2016-08-15T20:08:29Z", "closed_at": "2016-08-15T20:08:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/61", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/61/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/61/events", "html_url": "https://github.com/SAP/PyHDB/issues/61", "id": 156480647, "node_id": "MDU6SXNzdWUxNTY0ODA2NDc=", "number": 61, "title": "PyHDB doesn't work with Jython 2.7.0", "user": {"login": "fed239", "id": 443077, "node_id": "MDQ6VXNlcjQ0MzA3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/443077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fed239", "html_url": "https://github.com/fed239", "followers_url": "https://api.github.com/users/fed239/followers", "following_url": "https://api.github.com/users/fed239/following{/other_user}", "gists_url": "https://api.github.com/users/fed239/gists{/gist_id}", "starred_url": "https://api.github.com/users/fed239/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fed239/subscriptions", "organizations_url": "https://api.github.com/users/fed239/orgs", "repos_url": "https://api.github.com/users/fed239/repos", "events_url": "https://api.github.com/users/fed239/events{/privacy}", "received_events_url": "https://api.github.com/users/fed239/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-24T11:09:47Z", "updated_at": "2018-05-23T12:14:55Z", "closed_at": "2018-05-23T12:14:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is exception, which I get\n\n```\n>>> connection = pyhdb.connect(host=\"hana\", port=30215, user=\"user\", password=\"password\")\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/fedor/jenv/Lib/site-packages/pyhdb/__init__.py\", line 30, in connect\n    conn.connect()\n  File \"/Users/fedor/jenv/Lib/site-packages/pyhdb/connection.py\", line 141, in connect\n    agreed_auth_part = self._auth_manager.perform_handshake()\n  File \"/Users/fedor/jenv/Lib/site-packages/pyhdb/auth.py\", line 50, in perform_handshake\n    response = self.connection.send_request(request)\n  File \"/Users/fedor/jenv/Lib/site-packages/pyhdb/connection.py\", line 84, in send_request\n    return self.__send_message_recv_reply(payload.getvalue())\n  File \"/Users/fedor/jenv/Lib/site-packages/pyhdb/connection.py\", line 98, in _Connection__send_message_recv_reply\n    header = ReplyMessage.header_from_raw_header_data(raw_header)\n  File \"/Users/fedor/jenv/Lib/site-packages/pyhdb/connection.py\", line 98, in _Connection__send_message_recv_reply\n    header = ReplyMessage.header_from_raw_header_data(raw_header)\n  File \"/Users/fedor/jenv/Lib/site-packages/pyhdb/protocol/message.py\", line 107, in header_from_raw_header_data\n    raise Exception(\"Invalid message header received\")\nException: Invalid message header received\n```\n\nSame call works with normal Python\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/60", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/60/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/60/events", "html_url": "https://github.com/SAP/PyHDB/issues/60", "id": 155920365, "node_id": "MDU6SXNzdWUxNTU5MjAzNjU=", "number": 60, "title": "pyhdb DEBUG output when running tests with nosetests", "user": {"login": "T-002", "id": 2582929, "node_id": "MDQ6VXNlcjI1ODI5Mjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2582929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-002", "html_url": "https://github.com/T-002", "followers_url": "https://api.github.com/users/T-002/followers", "following_url": "https://api.github.com/users/T-002/following{/other_user}", "gists_url": "https://api.github.com/users/T-002/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-002/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-002/subscriptions", "organizations_url": "https://api.github.com/users/T-002/orgs", "repos_url": "https://api.github.com/users/T-002/repos", "events_url": "https://api.github.com/users/T-002/events{/privacy}", "received_events_url": "https://api.github.com/users/T-002/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-05-20T09:18:10Z", "updated_at": "2016-06-01T09:18:38Z", "closed_at": "2016-06-01T09:18:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\n\nI am currently using pyhdb in an application that is also tested with nose. Unfortunately, I get a lot of debug output from pyhdb, making my own output harder to read, especially if many tests use a database connection.\n\nIs there any way to disable pyhdb's debug messages?\n\nThanks,\n\nChristian\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/59", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/59/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/59/events", "html_url": "https://github.com/SAP/PyHDB/issues/59", "id": 152845145, "node_id": "MDU6SXNzdWUxNTI4NDUxNDU=", "number": 59, "title": "How to fetch data from HANA in Python in table format", "user": {"login": "trmanish", "id": 4309723, "node_id": "MDQ6VXNlcjQzMDk3MjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/4309723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trmanish", "html_url": "https://github.com/trmanish", "followers_url": "https://api.github.com/users/trmanish/followers", "following_url": "https://api.github.com/users/trmanish/following{/other_user}", "gists_url": "https://api.github.com/users/trmanish/gists{/gist_id}", "starred_url": "https://api.github.com/users/trmanish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trmanish/subscriptions", "organizations_url": "https://api.github.com/users/trmanish/orgs", "repos_url": "https://api.github.com/users/trmanish/repos", "events_url": "https://api.github.com/users/trmanish/events{/privacy}", "received_events_url": "https://api.github.com/users/trmanish/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-03T18:39:32Z", "updated_at": "2018-07-02T05:40:42Z", "closed_at": "2018-05-23T12:15:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi \n\nI have installed the Pyhdb and everything correctly. However the problem I see is that everytime i need to fetch the data it comes as a tuple. I want to fetch the data as a pandas dataframe. Like in Postgressql if I connect it with Python and use an adapter called pysopg2 on the connection object like below: \n\n`Creating database connection string\nIn [9]:\nUSER_CRED_FILE = os.path.join(os.path.expanduser('~'), '.dslab_user.cred')\ndef fetchDBCredentials(dbcred_file=USER_CRED_FILE):\n    \"\"\"\n       Read database access credentials from the file in $HOME/.ipynb_dslab.cred\n    \"\"\"\n    #Read database credentials from user supplied file\n    conf = ConfigParser.ConfigParser()\n    conf.read(dbcred_file)\n    #host, port, user, database, password\n    host = conf.get('database_creds','host')\n    port = conf.get('database_creds','port')\n    user = conf.get('database_creds','user')\n    database = conf.get('database_creds','database')\n    password = conf.get('database_creds','password')\n\n```\n#Initialize connection string\nconn_str =  \"\"\"dbname='{database}' user='{user}' host='{host}' port='{port}' password='{password}'\"\"\".format(                       \n                database=database,\n                host=host,\n                port=port,\n                user=user,\n                password=password\n        )\nreturn conn_str\n```\n\nCreate a connection object to the database\nIn [10]:\nconn = psycopg2.connect(fetchDBCredentials())\n\n`\n\nThen I can simply run \n\nconn.commit \n\nor I can do \n\npsql.read_sql(sql,conn) \n\nand it would get the result in table format. \n\nPlease see the below two links to get a sense what I am asking. \n\n[https://github.com/vatsan/gp_jupyter_notebook_templates/blob/master/notebooks/00_database_connectivity_setup.ipynb](url)\n\n[https://github.com/vatsan/gp_jupyter_notebook_templates](url)\n\nHow do I get that in HANA. Something similar to Pyscopg2 I guess?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/58", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/58/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/58/events", "html_url": "https://github.com/SAP/PyHDB/issues/58", "id": 151194525, "node_id": "MDU6SXNzdWUxNTExOTQ1MjU=", "number": 58, "title": "socket.error: [Errno 61] Connection refused", "user": {"login": "lulucs", "id": 11800676, "node_id": "MDQ6VXNlcjExODAwNjc2", "avatar_url": "https://avatars1.githubusercontent.com/u/11800676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lulucs", "html_url": "https://github.com/lulucs", "followers_url": "https://api.github.com/users/lulucs/followers", "following_url": "https://api.github.com/users/lulucs/following{/other_user}", "gists_url": "https://api.github.com/users/lulucs/gists{/gist_id}", "starred_url": "https://api.github.com/users/lulucs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lulucs/subscriptions", "organizations_url": "https://api.github.com/users/lulucs/orgs", "repos_url": "https://api.github.com/users/lulucs/repos", "events_url": "https://api.github.com/users/lulucs/events{/privacy}", "received_events_url": "https://api.github.com/users/lulucs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-04-26T17:37:17Z", "updated_at": "2016-08-15T20:10:09Z", "closed_at": "2016-08-15T20:10:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi All,\nI tried to connect to my SAP HANA AWS,  host is my Public DNS, port 30015, user and password as ones I connect the server from eclipse,  but get following error:\n\n```\nTraceback (most recent call last):\n  File \"<stdin>\", line 5, in <module>\n  File \"/Library/Python/2.7/site-packages/pyhdb/__init__.py\", line 30, in connect\n    conn.connect()\n  File \"/Library/Python/2.7/site-packages/pyhdb/connection.py\", line 137, in connect\n    self._open_socket_and_init_protocoll()\n  File \"/Library/Python/2.7/site-packages/pyhdb/connection.py\", line 66, in _open_socket_and_init_protocoll\n    self._socket = socket.create_connection((self.host, self.port), self._timeout)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/socket.py\", line 575, in create_connection\n    raise err\nsocket.error: [Errno 61] Connection refused\n```\n\nAny help is appreciated!\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/55", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/55/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/55/events", "html_url": "https://github.com/SAP/PyHDB/issues/55", "id": 130487573, "node_id": "MDU6SXNzdWUxMzA0ODc1NzM=", "number": 55, "title": "MemoryError in connect", "user": {"login": "mschmill", "id": 14186571, "node_id": "MDQ6VXNlcjE0MTg2NTcx", "avatar_url": "https://avatars3.githubusercontent.com/u/14186571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mschmill", "html_url": "https://github.com/mschmill", "followers_url": "https://api.github.com/users/mschmill/followers", "following_url": "https://api.github.com/users/mschmill/following{/other_user}", "gists_url": "https://api.github.com/users/mschmill/gists{/gist_id}", "starred_url": "https://api.github.com/users/mschmill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mschmill/subscriptions", "organizations_url": "https://api.github.com/users/mschmill/orgs", "repos_url": "https://api.github.com/users/mschmill/repos", "events_url": "https://api.github.com/users/mschmill/events{/privacy}", "received_events_url": "https://api.github.com/users/mschmill/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-02-01T21:19:20Z", "updated_at": "2018-07-02T05:42:20Z", "closed_at": "2016-02-02T19:39:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have used PyHDB successfully to connect to a HANA database. I am currently trying to connect to a different database and I get a MemoryError:\n\n```\n>>> import pyhdb\n>>> pyhd.connect(host='xxx',port=xxxx,user='xxxx',password='xxxxxx')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/etc/lib64/anaconda/lib/python2.7/site-packages/pyhdb/__init__.py\", line 30, in connect\n    conn.connect()\n  File \"/etc/lib64/anaconda/lib/python2.7/site-packages/pyhdb/connection.py\", line 141, in connect\n    agreed_auth_part = self._auth_manager.perform_handshake()\n  File \"/etc/lib64/anaconda/lib/python2.7/site-packages/pyhdb/auth.py\", line 50, in perform_handshake\n    response = self.connection.send_request(request)\n  File \"/etc/lib64/anaconda/lib/python2.7/site-packages/pyhdb/connection.py\", line 84, in send_request\n    return self.__send_message_recv_reply(payload.getvalue())\n  File \"/etc/lib64/anaconda/lib/python2.7/site-packages/pyhdb/connection.py\", line 107, in __send_message_recv_reply\n    _payload = self._socket.recv(header.payload_length - payload.tell())\nMemoryError\n```\n\nAny idea what this failure means?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/54", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/54/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/54/events", "html_url": "https://github.com/SAP/PyHDB/issues/54", "id": 120320530, "node_id": "MDU6SXNzdWUxMjAzMjA1MzA=", "number": 54, "title": "PyHDB does not install for Python 3", "user": {"login": "mastram", "id": 935657, "node_id": "MDQ6VXNlcjkzNTY1Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/935657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mastram", "html_url": "https://github.com/mastram", "followers_url": "https://api.github.com/users/mastram/followers", "following_url": "https://api.github.com/users/mastram/following{/other_user}", "gists_url": "https://api.github.com/users/mastram/gists{/gist_id}", "starred_url": "https://api.github.com/users/mastram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mastram/subscriptions", "organizations_url": "https://api.github.com/users/mastram/orgs", "repos_url": "https://api.github.com/users/mastram/repos", "events_url": "https://api.github.com/users/mastram/events{/privacy}", "received_events_url": "https://api.github.com/users/mastram/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-04T02:48:08Z", "updated_at": "2016-08-15T20:10:50Z", "closed_at": "2016-08-15T20:10:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \nThe command : `$ pip install pyhdb` installs it only for Python 2.x\n\nOn my Raspberry Pi I have both Python 2 and 3. \nThe example code works on Python 2 but does not work in Python 3. It says : \"No module named pyhdb\"\n\nHow can we easily install it for Python 3 ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/53", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/53/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/53/events", "html_url": "https://github.com/SAP/PyHDB/issues/53", "id": 114244282, "node_id": "MDU6SXNzdWUxMTQyNDQyODI=", "number": 53, "title": "Implement prepare method for Decimal type", "user": {"login": "jarus", "id": 110274, "node_id": "MDQ6VXNlcjExMDI3NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/110274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jarus", "html_url": "https://github.com/jarus", "followers_url": "https://api.github.com/users/jarus/followers", "following_url": "https://api.github.com/users/jarus/following{/other_user}", "gists_url": "https://api.github.com/users/jarus/gists{/gist_id}", "starred_url": "https://api.github.com/users/jarus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jarus/subscriptions", "organizations_url": "https://api.github.com/users/jarus/orgs", "repos_url": "https://api.github.com/users/jarus/repos", "events_url": "https://api.github.com/users/jarus/events{/privacy}", "received_events_url": "https://api.github.com/users/jarus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-10-30T10:39:04Z", "updated_at": "2015-11-25T18:03:56Z", "closed_at": "2015-11-25T18:03:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "At the moment it isn't possible to insert Decimals with a prepared statement because there is no `prepare` implementation of the Decimal type.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/49", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/49/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/49/events", "html_url": "https://github.com/SAP/PyHDB/issues/49", "id": 106755999, "node_id": "MDU6SXNzdWUxMDY3NTU5OTk=", "number": 49, "title": "'create local temporary column table #parameter' statement issue", "user": {"login": "viveksrinivas", "id": 13993224, "node_id": "MDQ6VXNlcjEzOTkzMjI0", "avatar_url": "https://avatars2.githubusercontent.com/u/13993224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viveksrinivas", "html_url": "https://github.com/viveksrinivas", "followers_url": "https://api.github.com/users/viveksrinivas/followers", "following_url": "https://api.github.com/users/viveksrinivas/following{/other_user}", "gists_url": "https://api.github.com/users/viveksrinivas/gists{/gist_id}", "starred_url": "https://api.github.com/users/viveksrinivas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viveksrinivas/subscriptions", "organizations_url": "https://api.github.com/users/viveksrinivas/orgs", "repos_url": "https://api.github.com/users/viveksrinivas/repos", "events_url": "https://api.github.com/users/viveksrinivas/events{/privacy}", "received_events_url": "https://api.github.com/users/viveksrinivas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-16T11:44:03Z", "updated_at": "2018-07-10T18:30:06Z", "closed_at": "2018-05-23T14:31:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "i am try to create a temporary table in hana db using cursor.execute() statement using the following sql statement \" create local temporary column table #parameter\".\nthe cursor.fetchall() result is \" Require execute() first\"\n\nand when i tried to access the temporary table ,its showing an error \nINFO: invalid table name:  Could not find table/view #PARAMETERS in schema SYSTEM: line 1 col 36 (at pos 35)\n\nbut when i tried to execute the statement via hana studio console,the temporary table is getting created.\n\ntwo clarification\n1) why i am getting \"require execute() first\" exception\n2) is it possible to create local temporary column table via pyhdb.since i assume that temporary table is available with latest hana version.\n\nCould you please help me out here\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/48", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/48/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/48/events", "html_url": "https://github.com/SAP/PyHDB/issues/48", "id": 97400974, "node_id": "MDU6SXNzdWU5NzQwMDk3NA==", "number": 48, "title": "Always unpack prepared statement_id", "user": {"login": "jarus", "id": 110274, "node_id": "MDQ6VXNlcjExMDI3NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/110274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jarus", "html_url": "https://github.com/jarus", "followers_url": "https://api.github.com/users/jarus/followers", "following_url": "https://api.github.com/users/jarus/following{/other_user}", "gists_url": "https://api.github.com/users/jarus/gists{/gist_id}", "starred_url": "https://api.github.com/users/jarus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jarus/subscriptions", "organizations_url": "https://api.github.com/users/jarus/orgs", "repos_url": "https://api.github.com/users/jarus/repos", "events_url": "https://api.github.com/users/jarus/events{/privacy}", "received_events_url": "https://api.github.com/users/jarus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-07-27T07:14:07Z", "updated_at": "2018-05-23T12:15:10Z", "closed_at": "2018-05-23T12:15:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In the SAP HANA studio you see the decimal id of a prepared statement. We should also unpack the statement id to make it easy to use them in the HANA studio for debug purposes.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/46", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/46/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/46/events", "html_url": "https://github.com/SAP/PyHDB/issues/46", "id": 93262841, "node_id": "MDU6SXNzdWU5MzI2Mjg0MQ==", "number": 46, "title": "Some sql 'case' statements fail with numeric parameter substitution", "user": {"login": "ralhei", "id": 1379835, "node_id": "MDQ6VXNlcjEzNzk4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1379835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ralhei", "html_url": "https://github.com/ralhei", "followers_url": "https://api.github.com/users/ralhei/followers", "following_url": "https://api.github.com/users/ralhei/following{/other_user}", "gists_url": "https://api.github.com/users/ralhei/gists{/gist_id}", "starred_url": "https://api.github.com/users/ralhei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ralhei/subscriptions", "organizations_url": "https://api.github.com/users/ralhei/orgs", "repos_url": "https://api.github.com/users/ralhei/repos", "events_url": "https://api.github.com/users/ralhei/events{/privacy}", "received_events_url": "https://api.github.com/users/ralhei/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-06T12:05:37Z", "updated_at": "2018-05-23T14:07:47Z", "closed_at": "2018-05-23T14:07:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Change 9dc77f6 (using paramstyle 'numeric' over 'format') seems to cause problems with same sql 'case' statements when containing parameter substitution:\n\n```\nquery = '''\nSELECT DISTINCT group_id,\n                max(CASE\n                    WHEN m.name = 'Aaron' THEN 4\n                    WHEN m.name = 'Ronald' THEN 3\n                    WHEN m.name = 'Jack' THEN 2\n                    ELSE 0\n                END)\nFROM sa_example_main m\nGROUP BY m.group_id\nORDER BY max(CASE\n    WHEN m.name = 'Aaron' THEN 4\n    WHEN m.name = 'Ronald' THEN 3\n    WHEN m.name = 'Jack' THEN 2\n    ELSE :1\nEND) DESC\n'''\nparams = (0, )\ncur.execute(query, params)\n```\n\nresults in:\n\n```\npyhdb.exceptions.DatabaseError: invalid column name: not included in SELECT DISTINCT column list: M.NAME: line 12 col 10 (at pos 317)\n```\n\nIf 'paramstyle' equals 'format'  (or the :1 in the else statement is replaced with '0') then the command succeeds.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/44", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/44/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/44/events", "html_url": "https://github.com/SAP/PyHDB/issues/44", "id": 90437390, "node_id": "MDU6SXNzdWU5MDQzNzM5MA==", "number": 44, "title": "New release and PyPI update", "user": {"login": "xchrdw", "id": 1078427, "node_id": "MDQ6VXNlcjEwNzg0Mjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1078427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xchrdw", "html_url": "https://github.com/xchrdw", "followers_url": "https://api.github.com/users/xchrdw/followers", "following_url": "https://api.github.com/users/xchrdw/following{/other_user}", "gists_url": "https://api.github.com/users/xchrdw/gists{/gist_id}", "starred_url": "https://api.github.com/users/xchrdw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xchrdw/subscriptions", "organizations_url": "https://api.github.com/users/xchrdw/orgs", "repos_url": "https://api.github.com/users/xchrdw/repos", "events_url": "https://api.github.com/users/xchrdw/events{/privacy}", "received_events_url": "https://api.github.com/users/xchrdw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-23T16:51:26Z", "updated_at": "2015-10-30T10:37:15Z", "closed_at": "2015-10-30T10:37:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Please create a new release and upload it to PyPI as the current version there is 0.2.3.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/42", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/42/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/42/events", "html_url": "https://github.com/SAP/PyHDB/issues/42", "id": 88714422, "node_id": "MDU6SXNzdWU4ODcxNDQyMg==", "number": 42, "title": "UnicodeDecodeError: 'charmap' codec can't decode byte 0x81 in position 5915: character maps to <undefined>", "user": {"login": "levinanton", "id": 12249110, "node_id": "MDQ6VXNlcjEyMjQ5MTEw", "avatar_url": "https://avatars1.githubusercontent.com/u/12249110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/levinanton", "html_url": "https://github.com/levinanton", "followers_url": "https://api.github.com/users/levinanton/followers", "following_url": "https://api.github.com/users/levinanton/following{/other_user}", "gists_url": "https://api.github.com/users/levinanton/gists{/gist_id}", "starred_url": "https://api.github.com/users/levinanton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/levinanton/subscriptions", "organizations_url": "https://api.github.com/users/levinanton/orgs", "repos_url": "https://api.github.com/users/levinanton/repos", "events_url": "https://api.github.com/users/levinanton/events{/privacy}", "received_events_url": "https://api.github.com/users/levinanton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-06-16T12:35:06Z", "updated_at": "2015-06-18T06:23:55Z", "closed_at": "2015-06-18T06:23:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Maybe an issue is not related to PyHDB.\n\nWhen installing with pip I get the following: \n\n---\n\nC:\\Python34\\Scripts\\pip run on 06/15/15 15:34:00\nDownloading/unpacking pyhdb\n  Getting page https://pypi.python.org/simple/pyhdb/\n  URLs to search for versions for pyhdb:\n- https://pypi.python.org/simple/pyhdb/\n  Analyzing links from page https://pypi.python.org/simple/pyhdb/\n    Found link https://pypi.python.org/packages/source/p/pyhdb/pyhdb-0.1.0.tar.gz#md5=8ab853959eeba0320c8345106b0b331b (from https://pypi.python.org/simple/pyhdb/), version: 0.1.0\n    Found link https://pypi.python.org/packages/source/p/pyhdb/pyhdb-0.2.2.zip#md5=d4e1bc9d2384a057bd9ee589df7763f2 (from https://pypi.python.org/simple/pyhdb/), version: 0.2.2\n    Found link https://pypi.python.org/packages/source/p/pyhdb/pyhdb-0.2.3.tar.gz#md5=bb9ee84f88ff8c94b84b7904a63fc037 (from https://pypi.python.org/simple/pyhdb/), version: 0.2.3\n  Using version 0.2.3 (newest of versions: 0.2.3, 0.2.2, 0.1.0)\n  Downloading from URL https://pypi.python.org/packages/source/p/pyhdb/pyhdb-0.2.3.tar.gz#md5=bb9ee84f88ff8c94b84b7904a63fc037 (from https://pypi.python.org/simple/pyhdb/)\n  Running setup.py (path:C:\\Users<USERNAME>\\AppData\\Local\\Temp\\pip_build_<USERNAME>\\pyhdb\\setup.py) egg_info for package pyhdb\n    Traceback (most recent call last):\n      File \"<string>\", line 17, in <module>\n      File \"C:\\Users<USERNAME>\\AppData\\Local\\Temp\\pip_build_<USERNAME>\\pyhdb\\setup.py\", line 40, in <module>\n        long_description=get_long_description(),\n      File \"C:\\Users<USERNAME>\\AppData\\Local\\Temp\\pip_build_<USERNAME>\\pyhdb\\setup.py\", line 28, in get_long_description\n        return readme.read()\n      File \"C:\\Python34\\lib\\encodings\\cp1252.py\", line 23, in decode\n        return codecs.charmap_decode(input,self.errors,decoding_table)[0]\n    UnicodeDecodeError: 'charmap' codec can't decode byte 0x81 in position 5915: character maps to <undefined>\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n  \n  File \"<string>\", line 17, in <module>\n  \n  File \"C:\\Users<USERNAME>\\AppData\\Local\\Temp\\pip_build_<USERNAME>\\pyhdb\\setup.py\", line 40, in <module>\n  \n    long_description=get_long_description(),\n  \n  File \"C:\\Users\\d053601\\AppData\\Local\\Temp\\pip_build_D053601\\pyhdb\\setup.py\", line 28, in get_long_description\n  \n    return readme.read()\n  \n  File \"C:\\Python34\\lib\\encodings\\cp1252.py\", line 23, in decode\n  \n    return codecs.charmap_decode(input,self.errors,decoding_table)[0]\n\nUnicodeDecodeError: 'charmap' codec can't decode byte 0x81 in position 5915: character maps to <undefined>\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/41", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/41/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/41/events", "html_url": "https://github.com/SAP/PyHDB/issues/41", "id": 87083295, "node_id": "MDU6SXNzdWU4NzA4MzI5NQ==", "number": 41, "title": "Error using pyhdb: File \"/usr/lib/python2.6/site-packages/pyhdb-0.2.3-py2.6.egg/pyhdb/__init__.py\", line 71", "user": {"login": "seansilvestri", "id": 12835311, "node_id": "MDQ6VXNlcjEyODM1MzEx", "avatar_url": "https://avatars3.githubusercontent.com/u/12835311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seansilvestri", "html_url": "https://github.com/seansilvestri", "followers_url": "https://api.github.com/users/seansilvestri/followers", "following_url": "https://api.github.com/users/seansilvestri/following{/other_user}", "gists_url": "https://api.github.com/users/seansilvestri/gists{/gist_id}", "starred_url": "https://api.github.com/users/seansilvestri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seansilvestri/subscriptions", "organizations_url": "https://api.github.com/users/seansilvestri/orgs", "repos_url": "https://api.github.com/users/seansilvestri/repos", "events_url": "https://api.github.com/users/seansilvestri/events{/privacy}", "received_events_url": "https://api.github.com/users/seansilvestri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-10T19:44:28Z", "updated_at": "2015-10-30T10:37:28Z", "closed_at": "2015-10-30T10:37:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "File \"/usr/lib/python2.6/site-packages/pyhdb-0.2.3-py2.6.egg/pyhdb/**init**.py\", line 71\n    clean_params = {'%s' % rm_hana_prefix(key): val for key, val in params.iteritems()}\n\nI get this with the latest code as well as 0.2.3 release.\nRunning on Centos 6.5. Please advise.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/39", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/39/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/39/events", "html_url": "https://github.com/SAP/PyHDB/issues/39", "id": 85737846, "node_id": "MDU6SXNzdWU4NTczNzg0Ng==", "number": 39, "title": "Create stored procedure PROC_ADD2 in unit test", "user": {"login": "ralhei", "id": 1379835, "node_id": "MDQ6VXNlcjEzNzk4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1379835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ralhei", "html_url": "https://github.com/ralhei", "followers_url": "https://api.github.com/users/ralhei/followers", "following_url": "https://api.github.com/users/ralhei/following{/other_user}", "gists_url": "https://api.github.com/users/ralhei/gists{/gist_id}", "starred_url": "https://api.github.com/users/ralhei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ralhei/subscriptions", "organizations_url": "https://api.github.com/users/ralhei/orgs", "repos_url": "https://api.github.com/users/ralhei/repos", "events_url": "https://api.github.com/users/ralhei/events{/privacy}", "received_events_url": "https://api.github.com/users/ralhei/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-06T11:15:34Z", "updated_at": "2018-05-23T12:09:10Z", "closed_at": "2018-05-23T12:09:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "@bsrdjan \nCan you create the above mentioned stored procedure when running 'test_call_stored.py' (as a fixture)? \nOtherwise this unit tests will fail for users running tests on HCP or their own Hana instance as this stored procedure does of course not exist in those DBs. \nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/37", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/37/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/37/events", "html_url": "https://github.com/SAP/PyHDB/issues/37", "id": 83926256, "node_id": "MDU6SXNzdWU4MzkyNjI1Ng==", "number": 37, "title": "print is used in pyhdb/protocol/parts.py", "user": {"login": "jaheba", "id": 133732, "node_id": "MDQ6VXNlcjEzMzczMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/133732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaheba", "html_url": "https://github.com/jaheba", "followers_url": "https://api.github.com/users/jaheba/followers", "following_url": "https://api.github.com/users/jaheba/following{/other_user}", "gists_url": "https://api.github.com/users/jaheba/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaheba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaheba/subscriptions", "organizations_url": "https://api.github.com/users/jaheba/orgs", "repos_url": "https://api.github.com/users/jaheba/repos", "events_url": "https://api.github.com/users/jaheba/events{/privacy}", "received_events_url": "https://api.github.com/users/jaheba/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-02T09:03:05Z", "updated_at": "2015-06-06T21:43:06Z", "closed_at": "2015-06-06T21:43:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "print is used in `pyhdb/protocol/parts.py` so every execution with parameters yield an output\n\n```\npyhdb/protocol/parts.py\n337:        # print repr(payload)\n349:        # print 'realobreply called with args', args\n372:        # print 'realobreply unpack data called with args', len(lobdata), is_data_included, is_last_data\n541:            # print 'row', num_rows, humanhexlify(payload.read())[:500]\n555:        print 'writing lob buffers', row_lobs\n563:            print 'Writing lob data %d bytes of %d' % (max_data_to_write, lob_buffer.encoded_lob_size)\n567:                print 'adding lob_buffer to unwritte_lobs list'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/36", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/36/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/36/events", "html_url": "https://github.com/SAP/PyHDB/issues/36", "id": 83791710, "node_id": "MDU6SXNzdWU4Mzc5MTcxMA==", "number": 36, "title": "Import Error (ConfigParser) on Python 3.4.3 OS X 10.10.4", "user": {"login": "Balauue", "id": 301907, "node_id": "MDQ6VXNlcjMwMTkwNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/301907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Balauue", "html_url": "https://github.com/Balauue", "followers_url": "https://api.github.com/users/Balauue/followers", "following_url": "https://api.github.com/users/Balauue/following{/other_user}", "gists_url": "https://api.github.com/users/Balauue/gists{/gist_id}", "starred_url": "https://api.github.com/users/Balauue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Balauue/subscriptions", "organizations_url": "https://api.github.com/users/Balauue/orgs", "repos_url": "https://api.github.com/users/Balauue/repos", "events_url": "https://api.github.com/users/Balauue/events{/privacy}", "received_events_url": "https://api.github.com/users/Balauue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-06-02T02:13:16Z", "updated_at": "2018-05-23T12:13:38Z", "closed_at": "2018-05-23T12:13:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I installed pyhdb via pip, got v.0.2.3 and included it as usual.\n\nWhen including the library the following error comes up:\n\n```\nPython 3.4.3 (v3.4.3:9b73f1c3e601, Feb 23 2015, 02:52:03) \n[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import pyhdb\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/pyhdb/pyhdb/__init__.py\", line 18, in <module>\n    import ConfigParser\nImportError: No module named 'ConfigParser'\n```\n\nDo I have to install dependencies or such? Python finds a \"configparser\" module (lowercase), but not the ConfigParser. \n\nThanks in advance!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/33", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/33/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/33/events", "html_url": "https://github.com/SAP/PyHDB/issues/33", "id": 79548485, "node_id": "MDU6SXNzdWU3OTU0ODQ4NQ==", "number": 33, "title": "Support of binary locator (type 31)", "user": {"login": "mathebox", "id": 1757680, "node_id": "MDQ6VXNlcjE3NTc2ODA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1757680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mathebox", "html_url": "https://github.com/mathebox", "followers_url": "https://api.github.com/users/mathebox/followers", "following_url": "https://api.github.com/users/mathebox/following{/other_user}", "gists_url": "https://api.github.com/users/mathebox/gists{/gist_id}", "starred_url": "https://api.github.com/users/mathebox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mathebox/subscriptions", "organizations_url": "https://api.github.com/users/mathebox/orgs", "repos_url": "https://api.github.com/users/mathebox/repos", "events_url": "https://api.github.com/users/mathebox/events{/privacy}", "received_events_url": "https://api.github.com/users/mathebox/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-22T17:55:21Z", "updated_at": "2015-10-30T10:38:00Z", "closed_at": "2015-10-30T10:38:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I want to perform multiple inserts with a prepared statement. The table definition contains a column of `ST_POINT`. On execution I get the following error:\n\n``` bash\nInterfaceError: Prepared statement parameter datatype not supported: 31\n```\n\nIt there any documentation available that would help me to add this feature? Or do you plan to implement it in the near future?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/30", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/30/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/30/events", "html_url": "https://github.com/SAP/PyHDB/issues/30", "id": 76976216, "node_id": "MDU6SXNzdWU3Njk3NjIxNg==", "number": 30, "title": "Support for Timestamp, Time and Date", "user": {"login": "mathebox", "id": 1757680, "node_id": "MDQ6VXNlcjE3NTc2ODA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1757680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mathebox", "html_url": "https://github.com/mathebox", "followers_url": "https://api.github.com/users/mathebox/followers", "following_url": "https://api.github.com/users/mathebox/following{/other_user}", "gists_url": "https://api.github.com/users/mathebox/gists{/gist_id}", "starred_url": "https://api.github.com/users/mathebox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mathebox/subscriptions", "organizations_url": "https://api.github.com/users/mathebox/orgs", "repos_url": "https://api.github.com/users/mathebox/repos", "events_url": "https://api.github.com/users/mathebox/events{/privacy}", "received_events_url": "https://api.github.com/users/mathebox/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-05-16T07:58:10Z", "updated_at": "2015-10-30T10:37:49Z", "closed_at": "2015-10-30T10:37:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When trying to insert a datetime value with the following statement\n\n``` python\nparams = [0, datetime.datetime.now()]\ncursor.executemany('INSERT INTO TEST_DATETIME VALUES (?, ?)', params)\nconnection.commit()\n```\n\nthis error is thrown\n\n``` bash\nTraceback (most recent call last):\n  File \"datetime-test.py\", line 32, in <module>\n    cursor.execute('INSERT INTO TEST_DATETIME VALUES (?, ?)', params)\n  File \"/Users/max/virtualenvs/hana_load/lib/python2.7/site-packages/pyhdb-0.2.3-py2.7.egg/pyhdb/cursor.py\", line 254, in execute\n    self.executemany(statement, parameters=[parameters])\n  File \"/Users/max/virtualenvs/hana_load/lib/python2.7/site-packages/pyhdb-0.2.3-py2.7.egg/pyhdb/cursor.py\", line 278, in executemany\n    self.execute_prepared(prepared_statement, parameters)\n  File \"/Users/max/virtualenvs/hana_load/lib/python2.7/site-packages/pyhdb-0.2.3-py2.7.egg/pyhdb/cursor.py\", line 185, in execute_prepared\n    response = self.connection.send_request(request)\n  File \"/Users/max/virtualenvs/hana_load/lib/python2.7/site-packages/pyhdb-0.2.3-py2.7.egg/pyhdb/connection.py\", line 83, in send_request\n    payload = message.pack()  # obtain BytesIO instance\n  File \"/Users/max/virtualenvs/hana_load/lib/python2.7/site-packages/pyhdb-0.2.3-py2.7.egg/pyhdb/protocol/message.py\", line 54, in pack\n    self.build_payload(payload)\n  File \"/Users/max/virtualenvs/hana_load/lib/python2.7/site-packages/pyhdb-0.2.3-py2.7.egg/pyhdb/protocol/message.py\", line 44, in build_payload\n    segment.pack(payload, commit=self.autocommit)\n  File \"/Users/max/virtualenvs/hana_load/lib/python2.7/site-packages/pyhdb-0.2.3-py2.7.egg/pyhdb/protocol/segments.py\", line 109, in pack\n    self.build_payload(payload)\n  File \"/Users/max/virtualenvs/hana_load/lib/python2.7/site-packages/pyhdb-0.2.3-py2.7.egg/pyhdb/protocol/segments.py\", line 95, in build_payload\n    part_payload = part.pack(remaining_size)\n  File \"/Users/max/virtualenvs/hana_load/lib/python2.7/site-packages/pyhdb-0.2.3-py2.7.egg/pyhdb/protocol/parts.py\", line 100, in pack\n    arguments_count, payload = self.pack_data()\n  File \"/Users/max/virtualenvs/hana_load/lib/python2.7/site-packages/pyhdb-0.2.3-py2.7.egg/pyhdb/protocol/parts.py\", line 408, in pack_data\n    pfield = _DataType.prepare(value)\nAttributeError: type object 'Timestamp' has no attribute 'prepare'\n```\n\nThe class method `prepare` is missing for the type object `Timestamp` to convert the value into binary format. The same applies for the type object `Time`.\nThe type object `Date` implements the `prepare` method. But the value is not properly stored in the database.\n\n---\n\nCreate statement for the table `TEST_DATETIME`:\n\n``` sql\nCREATE TABLE TEST_DATETIME (ID INTEGER, dt TIMESTAMP);\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/26", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/26/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/26/events", "html_url": "https://github.com/SAP/PyHDB/issues/26", "id": 72204677, "node_id": "MDU6SXNzdWU3MjIwNDY3Nw==", "number": 26, "title": "fetchmany fails when the result includes values of the type REAL", "user": {"login": "krichly", "id": 5772525, "node_id": "MDQ6VXNlcjU3NzI1MjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/5772525?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krichly", "html_url": "https://github.com/krichly", "followers_url": "https://api.github.com/users/krichly/followers", "following_url": "https://api.github.com/users/krichly/following{/other_user}", "gists_url": "https://api.github.com/users/krichly/gists{/gist_id}", "starred_url": "https://api.github.com/users/krichly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krichly/subscriptions", "organizations_url": "https://api.github.com/users/krichly/orgs", "repos_url": "https://api.github.com/users/krichly/repos", "events_url": "https://api.github.com/users/krichly/events{/privacy}", "received_events_url": "https://api.github.com/users/krichly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-04-30T16:04:43Z", "updated_at": "2015-05-21T15:05:08Z", "closed_at": "2015-05-21T15:05:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, the following error is thrown every time the result of a query includes REAL values.\n\n/pyhdb/protocol/types.py\", line 187, in from_resultset\n return cls._struct.unpack(payload)[0]\nstruct.error: unpack requires a string argument of length 4\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/25", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/25/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/25/events", "html_url": "https://github.com/SAP/PyHDB/issues/25", "id": 71699733, "node_id": "MDU6SXNzdWU3MTY5OTczMw==", "number": 25, "title": "No module named lib.tracing", "user": {"login": "jaheba", "id": 133732, "node_id": "MDQ6VXNlcjEzMzczMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/133732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaheba", "html_url": "https://github.com/jaheba", "followers_url": "https://api.github.com/users/jaheba/followers", "following_url": "https://api.github.com/users/jaheba/following{/other_user}", "gists_url": "https://api.github.com/users/jaheba/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaheba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaheba/subscriptions", "organizations_url": "https://api.github.com/users/jaheba/orgs", "repos_url": "https://api.github.com/users/jaheba/repos", "events_url": "https://api.github.com/users/jaheba/events{/privacy}", "received_events_url": "https://api.github.com/users/jaheba/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-28T20:54:25Z", "updated_at": "2015-04-29T07:58:52Z", "closed_at": "2015-04-29T07:58:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nimport pyhdb\nTraceback (most recent call last):\n File \"<stdin>\", line 1, in <module>\n File \"pyhdb/__init__.py\", line 23, in <module>\n   from pyhdb.connection import Connection\n File \"pyhdb/connection.py\", line 22, in <module>\n   from pyhdb.auth import AuthManager\n File \"pyhdb/auth.py\", line 24, in <module>\n   from pyhdb.protocol.message import RequestMessage\n File \"pyhdb/protocol/message.py\", line 21, in <module>\n   from pyhdb.lib.tracing import trace\nImportError: No module named lib.tracing\n```\n\nSeems that the `lib`-package is not included in the repository.\n\nCommit: b50c790a2a772afa35695526ca8b42bf745224c3\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/24", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/24/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/24/events", "html_url": "https://github.com/SAP/PyHDB/issues/24", "id": 71542235, "node_id": "MDU6SXNzdWU3MTU0MjIzNQ==", "number": 24, "title": "ConfigParser.NoSectionError: No Section: 'formatters'", "user": {"login": "ricarda-schueler", "id": 7205153, "node_id": "MDQ6VXNlcjcyMDUxNTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/7205153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricarda-schueler", "html_url": "https://github.com/ricarda-schueler", "followers_url": "https://api.github.com/users/ricarda-schueler/followers", "following_url": "https://api.github.com/users/ricarda-schueler/following{/other_user}", "gists_url": "https://api.github.com/users/ricarda-schueler/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricarda-schueler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricarda-schueler/subscriptions", "organizations_url": "https://api.github.com/users/ricarda-schueler/orgs", "repos_url": "https://api.github.com/users/ricarda-schueler/repos", "events_url": "https://api.github.com/users/ricarda-schueler/events{/privacy}", "received_events_url": "https://api.github.com/users/ricarda-schueler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-28T10:01:32Z", "updated_at": "2015-04-29T05:08:44Z", "closed_at": "2015-04-29T05:08:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I installed pyhdb via cloning the git and executing the setup.py.\nWhile importing pyhdb the following error appears:\n\n```\n>>> import pyhdb\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python2.7/dist-packages/pyhdb-0.2.1-py2.7.egg/pyhdb/__init__.py\", line 20, in <module>\n    logging.config.fileConfig(os.path.join(this_dir, 'logging.conf'))\n  File \"/usr/lib/python2.7/logging/config.py\", line 77, in fileConfig\n    formatters = _create_formatters(cp)\n  File \"/usr/lib/python2.7/logging/config.py\", line 113, in _create_formatters\n    flist = cp.get(\"formatters\", \"keys\")\n  File \"/usr/lib/python2.7/ConfigParser.py\", line 607, in get\n    raise NoSectionError(section)\nConfigParser.NoSectionError: No section: 'formatters''\n```\n\nWhen starting the python console in the pyhdb directory and importing pyhdb there, there is no problem.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/18", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/18/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/18/events", "html_url": "https://github.com/SAP/PyHDB/issues/18", "id": 69027162, "node_id": "MDU6SXNzdWU2OTAyNzE2Mg==", "number": 18, "title": "error: [Errno 110] Connection timed out", "user": {"login": "lmokto", "id": 4357411, "node_id": "MDQ6VXNlcjQzNTc0MTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4357411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lmokto", "html_url": "https://github.com/lmokto", "followers_url": "https://api.github.com/users/lmokto/followers", "following_url": "https://api.github.com/users/lmokto/following{/other_user}", "gists_url": "https://api.github.com/users/lmokto/gists{/gist_id}", "starred_url": "https://api.github.com/users/lmokto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lmokto/subscriptions", "organizations_url": "https://api.github.com/users/lmokto/orgs", "repos_url": "https://api.github.com/users/lmokto/repos", "events_url": "https://api.github.com/users/lmokto/events{/privacy}", "received_events_url": "https://api.github.com/users/lmokto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-16T23:13:34Z", "updated_at": "2015-04-29T05:09:41Z", "closed_at": "2015-04-29T05:09:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, i need connect a HCP but, I not can\n\n```\nIn [1]: import pyhdb\n\nIn [2]: conn = pyhdb.connect(host=\"hanatrial.ondemand.com\", port=30015, user=\"p1941325981trial\",  password=\"123123\")\n---------------------------------------------------------------------------\nerror                                     Traceback (most recent call last)\n<ipython-input-2-8dd7eaabb1b9> in <module>()\n----> 1 conn = pyhdb.connect(host=\"hanatrial.ondemand.com\", port=30015, user=\"p1941325981trial\",  password=\"Yw&nDRK4JEs4u\")\n\n/usr/local/lib/python2.7/dist-packages/pyhdb-0.1.0-py2.7.egg/pyhdb/__init__.pyc in connect(host, port, user, password, autocommit)\n      8 def connect(host, port, user, password, autocommit=False):\n      9     connection = Connection(host, port, user, password, autocommit)\n---> 10     connection.connect()\n     11     return connection\n\n/usr/local/lib/python2.7/dist-packages/pyhdb-0.1.0-py2.7.egg/pyhdb/client.pyc in connect(self)\n    110                 return\n    111 \n--> 112             self._open_socket_and_init_protocoll()\n    113 \n    114             # Perform the authenication handshake and get the part\n\n/usr/local/lib/python2.7/dist-packages/pyhdb-0.1.0-py2.7.egg/pyhdb/client.pyc in _open_socket_and_init_protocoll(self)\n     42     def _open_socket_and_init_protocoll(self):\n     43         self._socket = socket.create_connection(\n---> 44             (self.host, self.port), self._timeout\n     45         )\n     46 \n\n/usr/lib/python2.7/socket.pyc in create_connection(address, timeout, source_address)\n    569 \n    570     if err is not None:\n--> 571         raise err\n    572     else:\n    573         raise error(\"getaddrinfo returns an empty list\")\n\nerror: [Errno 110] Connection timed out\n\nIn [3]: \n```\n\nthank for you help!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/7", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/7/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/7/events", "html_url": "https://github.com/SAP/PyHDB/issues/7", "id": 58627798, "node_id": "MDU6SXNzdWU1ODYyNzc5OA==", "number": 7, "title": "Insert Execution into a series table doesnot work", "user": {"login": "jayanthjaiswal", "id": 2018825, "node_id": "MDQ6VXNlcjIwMTg4MjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2018825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayanthjaiswal", "html_url": "https://github.com/jayanthjaiswal", "followers_url": "https://api.github.com/users/jayanthjaiswal/followers", "following_url": "https://api.github.com/users/jayanthjaiswal/following{/other_user}", "gists_url": "https://api.github.com/users/jayanthjaiswal/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayanthjaiswal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayanthjaiswal/subscriptions", "organizations_url": "https://api.github.com/users/jayanthjaiswal/orgs", "repos_url": "https://api.github.com/users/jayanthjaiswal/repos", "events_url": "https://api.github.com/users/jayanthjaiswal/events{/privacy}", "received_events_url": "https://api.github.com/users/jayanthjaiswal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-23T18:33:10Z", "updated_at": "2015-02-24T14:14:33Z", "closed_at": "2015-02-24T14:14:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\n\nIf you create a table like this:\nCreate column table Series (\"READING_TYPE_ID\" NVARCHAR(10) NOT NULL ,\"TIMESTAMP\" LONGDATE CS_LONGDATE NOT NULL ,\"VALUE\" DOUBLE CS_DOUBLE) SERIES (SERIES KEY(\"READING_TYPE_ID\") PERIOD FOR SERIES (\"TIMESTAMP\") EQUIDISTANT INCREMENT BY INTERVAL .000001 SECOND MISSING ELEMENTS ALLOWED)\n\nAnd then do insert like this:\ninsertStmnt = 'insert into ' + table + ' values ' + '( ' + row[\"READING_TYPE_ID\"] + \" , '\" + row[\"TIMESTAMP\"] + \"' , \" + row[\"VALUE\"] + ' )'\ncursor.execute(insertStmnt)\n\nThe statement gets executed with 0 exit code but the value is not inserted. With jaydebeapi and jpype it works though. Fix this.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/6", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/6/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/6/events", "html_url": "https://github.com/SAP/PyHDB/issues/6", "id": 58353321, "node_id": "MDU6SXNzdWU1ODM1MzMyMQ==", "number": 6, "title": "Pyhdb.connect fails because of Unknown Option Type", "user": {"login": "jayanthjaiswal", "id": 2018825, "node_id": "MDQ6VXNlcjIwMTg4MjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2018825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayanthjaiswal", "html_url": "https://github.com/jayanthjaiswal", "followers_url": "https://api.github.com/users/jayanthjaiswal/followers", "following_url": "https://api.github.com/users/jayanthjaiswal/following{/other_user}", "gists_url": "https://api.github.com/users/jayanthjaiswal/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayanthjaiswal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayanthjaiswal/subscriptions", "organizations_url": "https://api.github.com/users/jayanthjaiswal/orgs", "repos_url": "https://api.github.com/users/jayanthjaiswal/repos", "events_url": "https://api.github.com/users/jayanthjaiswal/events{/privacy}", "received_events_url": "https://api.github.com/users/jayanthjaiswal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-02-20T13:34:32Z", "updated_at": "2015-05-21T13:18:17Z", "closed_at": "2015-05-21T13:18:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\n\nIt threw the following error while connecting:\n\nTraceback (most recent call last):\n  File \"<input>\", line 5, in <module>\n  File \"/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pyhdb/**init**.py\", line 10, in connect\n    connection.connect()\n  File \"/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pyhdb/client.py\", line 126, in connect\n    ConnectOptions(DEFAULT_CONNECTION_OPTIONS)\n  File \"/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pyhdb/protocol/base.py\", line 87, in send\n    return self.connection._send_message(self.pack())\n  File \"/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pyhdb/client.py\", line 96, in _send_message\n    return Message.unpack_reply(self, header, payload)\n  File \"/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pyhdb/protocol/base.py\", line 98, in unpack_reply\n    payload, expected_segments=header[4]\n  File \"/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pyhdb/protocol/base.py\", line 216, in unpack_from\n    yield ReplySegment.unpack(segment_header, segment_payload)\n  File \"/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pyhdb/protocol/base.py\", line 232, in unpack\n    tuple(Part.unpack_from(payload, expected_parts=header[2]))\n  File \"/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pyhdb/protocol/base.py\", line 307, in unpack_from\n    part_header[2], part_payload\n  File \"/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pyhdb/protocol/parts.py\", line 111, in unpack_data\n    raise Exception(\"Unknown option type %s\" % typ)\nException: Unknown option type 30\n\nPlease fix this.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/4", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/4/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/4/events", "html_url": "https://github.com/SAP/PyHDB/issues/4", "id": 54116853, "node_id": "MDU6SXNzdWU1NDExNjg1Mw==", "number": 4, "title": "CESU8 tests fail on Windows 64bit and OS X Yosemite (narrow Python)", "user": {"login": "TwoLaid", "id": 2446349, "node_id": "MDQ6VXNlcjI0NDYzNDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/2446349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TwoLaid", "html_url": "https://github.com/TwoLaid", "followers_url": "https://api.github.com/users/TwoLaid/followers", "following_url": "https://api.github.com/users/TwoLaid/following{/other_user}", "gists_url": "https://api.github.com/users/TwoLaid/gists{/gist_id}", "starred_url": "https://api.github.com/users/TwoLaid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TwoLaid/subscriptions", "organizations_url": "https://api.github.com/users/TwoLaid/orgs", "repos_url": "https://api.github.com/users/TwoLaid/repos", "events_url": "https://api.github.com/users/TwoLaid/events{/privacy}", "received_events_url": "https://api.github.com/users/TwoLaid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-01-12T22:31:53Z", "updated_at": "2015-05-21T13:18:52Z", "closed_at": "2015-05-21T13:18:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Almost all CESU-8 tests fail for me because of the following error:\n\n```\nValueError: unichr() arg not in range(0x10000) (narrow Python build)\n```\n\nI think most Python builds are \"narrow\" build, which means that they do not support 4-byte unicode chracters directly. Instead, they use a surrogate UTF-16 pair (see [here](http://stackoverflow.com/questions/7105874/valueerror-unichr-arg-not-in-range0x10000-narrow-python-build-please-hel) and [here](http://wordaligned.org/articles/narrow-python)).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/2", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/2/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/2/events", "html_url": "https://github.com/SAP/PyHDB/issues/2", "id": 54089689, "node_id": "MDU6SXNzdWU1NDA4OTY4OQ==", "number": 2, "title": "Cannot connect on Windows 64bit", "user": {"login": "TwoLaid", "id": 2446349, "node_id": "MDQ6VXNlcjI0NDYzNDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/2446349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TwoLaid", "html_url": "https://github.com/TwoLaid", "followers_url": "https://api.github.com/users/TwoLaid/followers", "following_url": "https://api.github.com/users/TwoLaid/following{/other_user}", "gists_url": "https://api.github.com/users/TwoLaid/gists{/gist_id}", "starred_url": "https://api.github.com/users/TwoLaid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TwoLaid/subscriptions", "organizations_url": "https://api.github.com/users/TwoLaid/orgs", "repos_url": "https://api.github.com/users/TwoLaid/repos", "events_url": "https://api.github.com/users/TwoLaid/events{/privacy}", "received_events_url": "https://api.github.com/users/TwoLaid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-12T18:36:33Z", "updated_at": "2015-02-12T09:58:51Z", "closed_at": "2015-02-12T09:58:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When trying to connect on Windows 64bit with either 32bit or 64bit Python 2.7, the client just blocks indefinitely because it is stuck on a `recv` call. It is waiting on the server's answer on the AUTHENTICATE message.\n\nThis is due to the fact that you are using this struct for the Message header: \n\n```\nstruct = struct.Struct('liIIhb9B')\n```\n\nThe first parameter is the session ID, which is supposed to be I8 (8 byte integer). But the `l` you are using here only produces a 4 byte integer on 64bit Windows. If you change this to `q` it works just fine on Windows, and I have tested this on Linux as well.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SAP/PyHDB/issues/1", "repository_url": "https://api.github.com/repos/SAP/PyHDB", "labels_url": "https://api.github.com/repos/SAP/PyHDB/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/SAP/PyHDB/issues/1/comments", "events_url": "https://api.github.com/repos/SAP/PyHDB/issues/1/events", "html_url": "https://github.com/SAP/PyHDB/issues/1", "id": 54038298, "node_id": "MDU6SXNzdWU1NDAzODI5OA==", "number": 1, "title": "Connection Failed unknow option type 30", "user": {"login": "martinfaust", "id": 2484713, "node_id": "MDQ6VXNlcjI0ODQ3MTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/2484713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinfaust", "html_url": "https://github.com/martinfaust", "followers_url": "https://api.github.com/users/martinfaust/followers", "following_url": "https://api.github.com/users/martinfaust/following{/other_user}", "gists_url": "https://api.github.com/users/martinfaust/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinfaust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinfaust/subscriptions", "organizations_url": "https://api.github.com/users/martinfaust/orgs", "repos_url": "https://api.github.com/users/martinfaust/repos", "events_url": "https://api.github.com/users/martinfaust/events{/privacy}", "received_events_url": "https://api.github.com/users/martinfaust/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-01-12T10:26:09Z", "updated_at": "2015-02-12T09:24:13Z", "closed_at": "2015-02-12T09:24:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Connection fails against HANA Rev 8x and 91.\nPython 2.6 (r26:66714, May  6 2011, 15:10:21) \n[GCC 4.3.4 [gcc-4_3-branch revision 152973]] on linux2\n\n```\n>>> import pyhdb\n>>> connection = pyhdb.connect(   host=\"remote-host...\",    port=30415,    user=\"SYSTEM\",    password=\"....\")\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib64/python2.6/site-packages/pyhdb-0.1.0-py2.6.egg/pyhdb/__init__.py\", line 24, in connect\n    connection.connect()\n  File \"/usr/local/lib64/python2.6/site-packages/pyhdb-0.1.0-py2.6.egg/pyhdb/client.py\", line 140, in connect\n    ConnectOptions(DEFAULT_CONNECTION_OPTIONS)\n  File \"/usr/local/lib64/python2.6/site-packages/pyhdb-0.1.0-py2.6.egg/pyhdb/protocol/base.py\", line 101, in send\n    return self.connection._send_message(self.pack())\n  File \"/usr/local/lib64/python2.6/site-packages/pyhdb-0.1.0-py2.6.egg/pyhdb/client.py\", line 110, in _send_message\n    return Message.unpack_reply(self, header, payload)\n  File \"/usr/local/lib64/python2.6/site-packages/pyhdb-0.1.0-py2.6.egg/pyhdb/protocol/base.py\", line 112, in unpack_reply\n    payload, expected_segments=header[4]\n  File \"/usr/local/lib64/python2.6/site-packages/pyhdb-0.1.0-py2.6.egg/pyhdb/protocol/base.py\", line 230, in unpack_from\n    yield ReplySegment.unpack(segment_header, segment_payload)\n  File \"/usr/local/lib64/python2.6/site-packages/pyhdb-0.1.0-py2.6.egg/pyhdb/protocol/base.py\", line 246, in unpack\n    tuple(Part.unpack_from(payload, expected_parts=header[2]))\n  File \"/usr/local/lib64/python2.6/site-packages/pyhdb-0.1.0-py2.6.egg/pyhdb/protocol/base.py\", line 321, in unpack_from\n    part_header[2], part_payload\n  File \"/usr/local/lib64/python2.6/site-packages/pyhdb-0.1.0-py2.6.egg/pyhdb/protocol/parts.py\", line 125, in unpack_data\n    raise Exception(\"Unknown option type %s\" % typ)\nException: Unknown option type 30\n```\n", "performed_via_github_app": null, "score": 1.0}]}