{"total_count": 11, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/bkabrda/flexmock/issues/27", "repository_url": "https://api.github.com/repos/bkabrda/flexmock", "labels_url": "https://api.github.com/repos/bkabrda/flexmock/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/bkabrda/flexmock/issues/27/comments", "events_url": "https://api.github.com/repos/bkabrda/flexmock/issues/27/events", "html_url": "https://github.com/bkabrda/flexmock/issues/27", "id": 396282373, "node_id": "MDU6SXNzdWUzOTYyODIzNzM=", "number": 27, "title": "INTERNALERROR with pytest-4.1.0", "user": {"login": "jpopelka", "id": 288686, "node_id": "MDQ6VXNlcjI4ODY4Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/288686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpopelka", "html_url": "https://github.com/jpopelka", "followers_url": "https://api.github.com/users/jpopelka/followers", "following_url": "https://api.github.com/users/jpopelka/following{/other_user}", "gists_url": "https://api.github.com/users/jpopelka/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpopelka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpopelka/subscriptions", "organizations_url": "https://api.github.com/users/jpopelka/orgs", "repos_url": "https://api.github.com/users/jpopelka/repos", "events_url": "https://api.github.com/users/jpopelka/events{/privacy}", "received_events_url": "https://api.github.com/users/jpopelka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-06T18:33:05Z", "updated_at": "2019-01-07T11:30:23Z", "closed_at": "2019-01-07T11:30:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nPYTHONPATH=/home/jpopelka/git/user-cont/ferdinand pytest --color=yes --verbose --showlocals\r\n============================================================================================================ test session starts =============================================================================================================\r\nplatform linux -- Python 3.7.2, pytest-4.1.0, py-1.7.0, pluggy-0.8.0 -- /home/jpopelka/.virtualenvs/user-cont/bin/python3\r\ncachedir: .pytest_cache\r\nrootdir: /home/jpopelka/git/user-cont/ferdinand, inifile: pytest.ini\r\nplugins: celery-4.2.1\r\ncollected 49 items                                                                                                                                                                                                                           \r\n\r\ntests/test_errata.py::TestErrata::test_is_release_valid \r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/home/jpopelka/.virtualenvs/user-cont/lib/python3.7/site-packages/_pytest/main.py\", line 203, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/home/jpopelka/.virtualenvs/user-cont/lib/python3.7/site-packages/_pytest/main.py\", line 243, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"/home/jpopelka/.virtualenvs/user-cont/lib/python3.7/site-packages/pluggy/hooks.py\", line 284, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/home/jpopelka/.virtualenvs/user-cont/lib/python3.7/site-packages/pluggy/manager.py\", line 67, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/home/jpopelka/.virtualenvs/user-cont/lib/python3.7/site-packages/pluggy/manager.py\", line 61, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/home/jpopelka/.virtualenvs/user-cont/lib/python3.7/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/home/jpopelka/.virtualenvs/user-cont/lib/python3.7/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/home/jpopelka/.virtualenvs/user-cont/lib/python3.7/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/home/jpopelka/.virtualenvs/user-cont/lib/python3.7/site-packages/_pytest/main.py\", line 264, in pytest_runtestloop\r\nINTERNALERROR>     item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)\r\nINTERNALERROR>   File \"/home/jpopelka/.virtualenvs/user-cont/lib/python3.7/site-packages/pluggy/hooks.py\", line 284, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/home/jpopelka/.virtualenvs/user-cont/lib/python3.7/site-packages/pluggy/manager.py\", line 67, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/home/jpopelka/.virtualenvs/user-cont/lib/python3.7/site-packages/pluggy/manager.py\", line 61, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/home/jpopelka/.virtualenvs/user-cont/lib/python3.7/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/home/jpopelka/.virtualenvs/user-cont/lib/python3.7/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/home/jpopelka/.virtualenvs/user-cont/lib/python3.7/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/home/jpopelka/.virtualenvs/user-cont/lib/python3.7/site-packages/_pytest/runner.py\", line 78, in pytest_runtest_protocol\r\nINTERNALERROR>     runtestprotocol(item, nextitem=nextitem)\r\nINTERNALERROR>   File \"/home/jpopelka/.virtualenvs/user-cont/lib/python3.7/site-packages/_pytest/runner.py\", line 93, in runtestprotocol\r\nINTERNALERROR>     reports.append(call_and_report(item, \"call\", log))\r\nINTERNALERROR>   File \"/home/jpopelka/.virtualenvs/user-cont/lib/python3.7/site-packages/_pytest/runner.py\", line 173, in call_and_report\r\nINTERNALERROR>     call = call_runtest_hook(item, when, **kwds)\r\nINTERNALERROR>   File \"/home/jpopelka/.virtualenvs/user-cont/lib/python3.7/site-packages/flexmock.py\", line 1227, in call_runtest_hook\r\nINTERNALERROR>     teardown = runner.CallInfo(flexmock_teardown, when=when)\r\nINTERNALERROR> TypeError: __init__() missing 3 required positional arguments: 'excinfo', 'start', and 'stop'\r\n```\r\n\r\nDowngrading to pytest-4.0.2 makes it work again.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bkabrda/flexmock/issues/26", "repository_url": "https://api.github.com/repos/bkabrda/flexmock", "labels_url": "https://api.github.com/repos/bkabrda/flexmock/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/bkabrda/flexmock/issues/26/comments", "events_url": "https://api.github.com/repos/bkabrda/flexmock/issues/26/events", "html_url": "https://github.com/bkabrda/flexmock/issues/26", "id": 393133472, "node_id": "MDU6SXNzdWUzOTMxMzM0NzI=", "number": 26, "title": "Docs: flexmock API on rtd is empty :<", "user": {"login": "TomasTomecek", "id": 1662493, "node_id": "MDQ6VXNlcjE2NjI0OTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1662493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TomasTomecek", "html_url": "https://github.com/TomasTomecek", "followers_url": "https://api.github.com/users/TomasTomecek/followers", "following_url": "https://api.github.com/users/TomasTomecek/following{/other_user}", "gists_url": "https://api.github.com/users/TomasTomecek/gists{/gist_id}", "starred_url": "https://api.github.com/users/TomasTomecek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TomasTomecek/subscriptions", "organizations_url": "https://api.github.com/users/TomasTomecek/orgs", "repos_url": "https://api.github.com/users/TomasTomecek/repos", "events_url": "https://api.github.com/users/TomasTomecek/events{/privacy}", "received_events_url": "https://api.github.com/users/TomasTomecek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-20T17:03:40Z", "updated_at": "2019-03-14T11:37:25Z", "closed_at": "2019-03-14T11:31:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://flexmock.readthedocs.io/en/latest/api/\r\n\r\nI can't see anything in there.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bkabrda/flexmock/issues/21", "repository_url": "https://api.github.com/repos/bkabrda/flexmock", "labels_url": "https://api.github.com/repos/bkabrda/flexmock/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/bkabrda/flexmock/issues/21/comments", "events_url": "https://api.github.com/repos/bkabrda/flexmock/issues/21/events", "html_url": "https://github.com/bkabrda/flexmock/issues/21", "id": 246061710, "node_id": "MDU6SXNzdWUyNDYwNjE3MTA=", "number": 21, "title": "MethodCallError hides real errors", "user": {"login": "lindycoder", "id": 12926519, "node_id": "MDQ6VXNlcjEyOTI2NTE5", "avatar_url": "https://avatars2.githubusercontent.com/u/12926519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lindycoder", "html_url": "https://github.com/lindycoder", "followers_url": "https://api.github.com/users/lindycoder/followers", "following_url": "https://api.github.com/users/lindycoder/following{/other_user}", "gists_url": "https://api.github.com/users/lindycoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/lindycoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lindycoder/subscriptions", "organizations_url": "https://api.github.com/users/lindycoder/orgs", "repos_url": "https://api.github.com/users/lindycoder/repos", "events_url": "https://api.github.com/users/lindycoder/events{/privacy}", "received_events_url": "https://api.github.com/users/lindycoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-27T14:37:53Z", "updated_at": "2019-03-25T09:57:02Z", "closed_at": "2019-03-25T09:57:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nI found a little inconvenience with the feedback i get when using expectations when using py.test:\r\n\r\nIf an expectation is not called, the hook raises a MethodCallError even if the test itself failed for an error.  Such an error can even be a MethodSignatureError, which means that if my params are wrong and my expectation has a .once() i don't see the MethodSignatureError, i see a MethodCallError saying i haven't called it.   This is kind of hard to deal with as you need to enter debug mode, break on the line that is generating the error and follow the path up to see what was the error before the teardown launches and the hook fires the MethodCallError.\r\n\r\nI created a simple example here : https://github.com/lindycoder/flexmock-example\r\n\r\nWhere i create an expectation then raise an exception, i would expect to see the exception it self now all i see is the MethodCallError.\r\n\r\nI don't know if that can be fixed at all, it would if py.test lets you know the state of the test, on which you could decide whether to throw the MethodCallError only if the test \"is about the pass\".\r\n\r\nSo this is not major, just a little inconvenience.\r\n\r\nThanks you for your excellent work!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bkabrda/flexmock/issues/14", "repository_url": "https://api.github.com/repos/bkabrda/flexmock", "labels_url": "https://api.github.com/repos/bkabrda/flexmock/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/bkabrda/flexmock/issues/14/comments", "events_url": "https://api.github.com/repos/bkabrda/flexmock/issues/14/events", "html_url": "https://github.com/bkabrda/flexmock/issues/14", "id": 126684963, "node_id": "MDU6SXNzdWUxMjY2ODQ5NjM=", "number": 14, "title": "Python3: problem in _verify_signature_match", "user": {"login": "obestwalter", "id": 263007, "node_id": "MDQ6VXNlcjI2MzAwNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/263007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/obestwalter", "html_url": "https://github.com/obestwalter", "followers_url": "https://api.github.com/users/obestwalter/followers", "following_url": "https://api.github.com/users/obestwalter/following{/other_user}", "gists_url": "https://api.github.com/users/obestwalter/gists{/gist_id}", "starred_url": "https://api.github.com/users/obestwalter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/obestwalter/subscriptions", "organizations_url": "https://api.github.com/users/obestwalter/orgs", "repos_url": "https://api.github.com/users/obestwalter/repos", "events_url": "https://api.github.com/users/obestwalter/events{/privacy}", "received_events_url": "https://api.github.com/users/obestwalter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-01-14T16:01:31Z", "updated_at": "2016-01-18T10:51:17Z", "closed_at": "2016-01-17T19:44:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "This test case passes in 2.7.6 but reports a MethodSignatureError in 3.4.3:\n\nfile some_module:\n\n```\nclass SomeClass:\n    def __init__(self, a, b, c):\n        pass\n```\n\nfile test_fm_bug:\n\n```\nfrom flexmock import flexmock\n\nfrom . import some_module\n\n\nclass SomeClass:\n    def __init__(self, a, b, c):\n        pass\n\n\ndef test_ok_mock():\n    fm = flexmock(SomeClass)\n    fm.should_receive('__init__').with_args(1, 2, 3)\n\n\ndef test_fm_bug():\n    fm = flexmock(some_module)\n    fm.should_receive('SomeClass').with_args(1, 2, 3)\n```\n\nerror:\n\n```\n    def _verify_signature_match(self, *kargs, **kwargs):\n    [...]\n    if total_positional < minimum:\n        raise MethodSignatureError(\n            '%s requires at least %s arguments, expectation provided %s' %\n>               (self.name, minimum, total_positional))\nE           flexmock.MethodSignatureError: SomeClass requires at least 4 arguments, expectation provided 3\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bkabrda/flexmock/issues/13", "repository_url": "https://api.github.com/repos/bkabrda/flexmock", "labels_url": "https://api.github.com/repos/bkabrda/flexmock/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/bkabrda/flexmock/issues/13/comments", "events_url": "https://api.github.com/repos/bkabrda/flexmock/issues/13/events", "html_url": "https://github.com/bkabrda/flexmock/issues/13", "id": 125590334, "node_id": "MDU6SXNzdWUxMjU1OTAzMzQ=", "number": 13, "title": "Python3: problem with new_instances isolation", "user": {"login": "obestwalter", "id": 263007, "node_id": "MDQ6VXNlcjI2MzAwNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/263007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/obestwalter", "html_url": "https://github.com/obestwalter", "followers_url": "https://api.github.com/users/obestwalter/followers", "following_url": "https://api.github.com/users/obestwalter/following{/other_user}", "gists_url": "https://api.github.com/users/obestwalter/gists{/gist_id}", "starred_url": "https://api.github.com/users/obestwalter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/obestwalter/subscriptions", "organizations_url": "https://api.github.com/users/obestwalter/orgs", "repos_url": "https://api.github.com/users/obestwalter/repos", "events_url": "https://api.github.com/users/obestwalter/events{/privacy}", "received_events_url": "https://api.github.com/users/obestwalter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2016-01-08T11:12:01Z", "updated_at": "2016-12-07T14:07:23Z", "closed_at": "2016-01-20T07:21:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am porting our code from python2.7 to python3.4 and tests started failing due to missing isolation in tests where `new_instances` is used. Testframework is pytest 2.8.4\n\nI thought if it's an obvious bug it's easy to reproduce so I created a minimal testcase I would expect to reproduce it, but sadly it doesn't. I add it here anyway, because it illustrates the problem.\n\nfile one:\n\n```\nclass OriginalClass(object):\n    def __init__(self):\n        pass\n```\n\nfile two:\n\n```\nfrom flexmock import flexmock\n\nfrom one import OriginalClass\n\nclass TestA(object):\n    def test_reproduce_flexmock_bug(self):\n        flexmock(OriginalClass).new_instances(flexmock(bla=lambda: True))\n        print(OriginalClass().__class__)\n        assert OriginalClass().__class__.__name__ == 'MockClass'\n\n\nclass TestB(object):\n    def test_check_isolation(self):\n        print(OriginalClass().__class__)\n        assert OriginalClass().__class__.__name__ == 'OriginalClass'\n```\n\nI would expect test_check_isolation to fail because the new_instances mock is wrongly still active from the other test, but this works with no problem on python2 and python3.\n\nA workaround in the production code is two separate the two classes that affect each others test behaviour into two different modules.\n\nI would like to understand why this is happening and what else could cause this behaviour. Any ideas?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bkabrda/flexmock/issues/11", "repository_url": "https://api.github.com/repos/bkabrda/flexmock", "labels_url": "https://api.github.com/repos/bkabrda/flexmock/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/bkabrda/flexmock/issues/11/comments", "events_url": "https://api.github.com/repos/bkabrda/flexmock/issues/11/events", "html_url": "https://github.com/bkabrda/flexmock/issues/11", "id": 122291429, "node_id": "MDU6SXNzdWUxMjIyOTE0Mjk=", "number": 11, "title": "Python 3 regression in 0.10.0?", "user": {"login": "obestwalter", "id": 263007, "node_id": "MDQ6VXNlcjI2MzAwNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/263007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/obestwalter", "html_url": "https://github.com/obestwalter", "followers_url": "https://api.github.com/users/obestwalter/followers", "following_url": "https://api.github.com/users/obestwalter/following{/other_user}", "gists_url": "https://api.github.com/users/obestwalter/gists{/gist_id}", "starred_url": "https://api.github.com/users/obestwalter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/obestwalter/subscriptions", "organizations_url": "https://api.github.com/users/obestwalter/orgs", "repos_url": "https://api.github.com/users/obestwalter/repos", "events_url": "https://api.github.com/users/obestwalter/events{/privacy}", "received_events_url": "https://api.github.com/users/obestwalter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-12-15T15:03:30Z", "updated_at": "2015-12-17T17:52:19Z", "closed_at": "2015-12-17T09:55:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "our CI borks, when tox is trying to install flexmock 0.10.0. I tried to reproduce it locally but there everything works fine. For now I pinned the version 0.9.7 but would be interested to know if others experienced the same problem.\n\n```\nCollecting flexmock\n  Using cached [...]pypi/+f/92f/f94c9b7e70521/flexmock-0.10.0.tar.gz\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n      File \"<string>\", line 20, in <module>\n      File \"/tmp/pip-build-d026h74v/flexmock/setup.py\", line 15, in <module>\n        long_description=open('README.md').read(),\n      File \"/tmp/bamboo-build/[...]/.tox/py34-linux-unittests/lib/python3.4/encodings/ascii.py\", line 26, in decode\n        return codecs.ascii_decode(input, self.errors)[0]\n    UnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 805: ordinal not in range(128)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bkabrda/flexmock/issues/9", "repository_url": "https://api.github.com/repos/bkabrda/flexmock", "labels_url": "https://api.github.com/repos/bkabrda/flexmock/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/bkabrda/flexmock/issues/9/comments", "events_url": "https://api.github.com/repos/bkabrda/flexmock/issues/9/events", "html_url": "https://github.com/bkabrda/flexmock/issues/9", "id": 120213033, "node_id": "MDU6SXNzdWUxMjAyMTMwMzM=", "number": 9, "title": "Is it possible to partially mock lambda expressions?", "user": {"login": "bkabrda", "id": 1050061, "node_id": "MDQ6VXNlcjEwNTAwNjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1050061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkabrda", "html_url": "https://github.com/bkabrda", "followers_url": "https://api.github.com/users/bkabrda/followers", "following_url": "https://api.github.com/users/bkabrda/following{/other_user}", "gists_url": "https://api.github.com/users/bkabrda/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkabrda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkabrda/subscriptions", "organizations_url": "https://api.github.com/users/bkabrda/orgs", "repos_url": "https://api.github.com/users/bkabrda/repos", "events_url": "https://api.github.com/users/bkabrda/events{/privacy}", "received_events_url": "https://api.github.com/users/bkabrda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-03T16:24:38Z", "updated_at": "2015-12-05T18:21:47Z", "closed_at": "2015-12-05T18:21:47Z", "author_association": "OWNER", "active_lock_reason": null, "body": "https://github.com/has207/flexmock/issues/109\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bkabrda/flexmock/issues/7", "repository_url": "https://api.github.com/repos/bkabrda/flexmock", "labels_url": "https://api.github.com/repos/bkabrda/flexmock/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/bkabrda/flexmock/issues/7/comments", "events_url": "https://api.github.com/repos/bkabrda/flexmock/issues/7/events", "html_url": "https://github.com/bkabrda/flexmock/issues/7", "id": 120212398, "node_id": "MDU6SXNzdWUxMjAyMTIzOTg=", "number": 7, "title": "with_args unable to pass attribute as value", "user": {"login": "bkabrda", "id": 1050061, "node_id": "MDQ6VXNlcjEwNTAwNjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1050061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkabrda", "html_url": "https://github.com/bkabrda", "followers_url": "https://api.github.com/users/bkabrda/followers", "following_url": "https://api.github.com/users/bkabrda/following{/other_user}", "gists_url": "https://api.github.com/users/bkabrda/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkabrda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkabrda/subscriptions", "organizations_url": "https://api.github.com/users/bkabrda/orgs", "repos_url": "https://api.github.com/users/bkabrda/repos", "events_url": "https://api.github.com/users/bkabrda/events{/privacy}", "received_events_url": "https://api.github.com/users/bkabrda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-03T16:22:13Z", "updated_at": "2015-12-05T18:13:52Z", "closed_at": "2015-12-05T18:13:52Z", "author_association": "OWNER", "active_lock_reason": null, "body": "https://github.com/has207/flexmock/issues/103\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bkabrda/flexmock/issues/6", "repository_url": "https://api.github.com/repos/bkabrda/flexmock", "labels_url": "https://api.github.com/repos/bkabrda/flexmock/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/bkabrda/flexmock/issues/6/comments", "events_url": "https://api.github.com/repos/bkabrda/flexmock/issues/6/events", "html_url": "https://github.com/bkabrda/flexmock/issues/6", "id": 120212276, "node_id": "MDU6SXNzdWUxMjAyMTIyNzY=", "number": 6, "title": "py.test fixtures do not work", "user": {"login": "bkabrda", "id": 1050061, "node_id": "MDQ6VXNlcjEwNTAwNjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1050061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkabrda", "html_url": "https://github.com/bkabrda", "followers_url": "https://api.github.com/users/bkabrda/followers", "following_url": "https://api.github.com/users/bkabrda/following{/other_user}", "gists_url": "https://api.github.com/users/bkabrda/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkabrda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkabrda/subscriptions", "organizations_url": "https://api.github.com/users/bkabrda/orgs", "repos_url": "https://api.github.com/users/bkabrda/repos", "events_url": "https://api.github.com/users/bkabrda/events{/privacy}", "received_events_url": "https://api.github.com/users/bkabrda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-03T16:21:51Z", "updated_at": "2015-12-11T15:05:43Z", "closed_at": "2015-12-11T15:05:43Z", "author_association": "OWNER", "active_lock_reason": null, "body": "https://github.com/has207/flexmock/issues/92\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bkabrda/flexmock/issues/5", "repository_url": "https://api.github.com/repos/bkabrda/flexmock", "labels_url": "https://api.github.com/repos/bkabrda/flexmock/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/bkabrda/flexmock/issues/5/comments", "events_url": "https://api.github.com/repos/bkabrda/flexmock/issues/5/events", "html_url": "https://github.com/bkabrda/flexmock/issues/5", "id": 120212087, "node_id": "MDU6SXNzdWUxMjAyMTIwODc=", "number": 5, "title": "Scoping issues when mocking class method", "user": {"login": "bkabrda", "id": 1050061, "node_id": "MDQ6VXNlcjEwNTAwNjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1050061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkabrda", "html_url": "https://github.com/bkabrda", "followers_url": "https://api.github.com/users/bkabrda/followers", "following_url": "https://api.github.com/users/bkabrda/following{/other_user}", "gists_url": "https://api.github.com/users/bkabrda/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkabrda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkabrda/subscriptions", "organizations_url": "https://api.github.com/users/bkabrda/orgs", "repos_url": "https://api.github.com/users/bkabrda/repos", "events_url": "https://api.github.com/users/bkabrda/events{/privacy}", "received_events_url": "https://api.github.com/users/bkabrda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-03T16:21:10Z", "updated_at": "2015-12-05T18:20:58Z", "closed_at": "2015-12-05T18:20:57Z", "author_association": "OWNER", "active_lock_reason": null, "body": "https://github.com/has207/flexmock/issues/88\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bkabrda/flexmock/issues/4", "repository_url": "https://api.github.com/repos/bkabrda/flexmock", "labels_url": "https://api.github.com/repos/bkabrda/flexmock/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/bkabrda/flexmock/issues/4/comments", "events_url": "https://api.github.com/repos/bkabrda/flexmock/issues/4/events", "html_url": "https://github.com/bkabrda/flexmock/issues/4", "id": 120211927, "node_id": "MDU6SXNzdWUxMjAyMTE5Mjc=", "number": 4, "title": "Class level mock example does not work?", "user": {"login": "bkabrda", "id": 1050061, "node_id": "MDQ6VXNlcjEwNTAwNjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1050061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkabrda", "html_url": "https://github.com/bkabrda", "followers_url": "https://api.github.com/users/bkabrda/followers", "following_url": "https://api.github.com/users/bkabrda/following{/other_user}", "gists_url": "https://api.github.com/users/bkabrda/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkabrda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkabrda/subscriptions", "organizations_url": "https://api.github.com/users/bkabrda/orgs", "repos_url": "https://api.github.com/users/bkabrda/repos", "events_url": "https://api.github.com/users/bkabrda/events{/privacy}", "received_events_url": "https://api.github.com/users/bkabrda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-12-03T16:20:33Z", "updated_at": "2015-12-05T17:53:34Z", "closed_at": "2015-12-05T17:53:34Z", "author_association": "OWNER", "active_lock_reason": null, "body": "https://github.com/has207/flexmock/issues/84\n", "performed_via_github_app": null, "score": 1.0}]}