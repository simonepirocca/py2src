{"total_count": 114, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/323", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/323/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/323/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/323/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/323", "id": 621157198, "node_id": "MDU6SXNzdWU2MjExNTcxOTg=", "number": 323, "title": "Possible illegal argument name to client.py ", "user": {"login": "4n6parser", "id": 14334478, "node_id": "MDQ6VXNlcjE0MzM0NDc4", "avatar_url": "https://avatars3.githubusercontent.com/u/14334478?v=4", "gravatar_id": "", "url": "https://api.github.com/users/4n6parser", "html_url": "https://github.com/4n6parser", "followers_url": "https://api.github.com/users/4n6parser/followers", "following_url": "https://api.github.com/users/4n6parser/following{/other_user}", "gists_url": "https://api.github.com/users/4n6parser/gists{/gist_id}", "starred_url": "https://api.github.com/users/4n6parser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/4n6parser/subscriptions", "organizations_url": "https://api.github.com/users/4n6parser/orgs", "repos_url": "https://api.github.com/users/4n6parser/repos", "events_url": "https://api.github.com/users/4n6parser/events{/privacy}", "received_events_url": "https://api.github.com/users/4n6parser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-19T17:27:58Z", "updated_at": "2020-05-20T18:34:47Z", "closed_at": "2020-05-20T18:34:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "This may or may not be an issue, but wanted to throw it out there in case it was not by design. When trying to upload a local file to splunk, I want to be able to change the host, source, and sourcetype values. In the following code, I use \"rename-source\" to change the value.\r\n\r\nimport splunklib.client as client\r\nservice = client.connect(host=HOST, port=PORT, username=USERNAME, password=PASSWORD)\r\nmyindex = service.indexes[\"test_index\"]\r\nuploadme = \"C:\\Python37\\Splunk\\test.csv\"\r\nmyindex.upload(uploadme, host=\"NewHostName\", sourcetype=\"NewTypeName\", rename-source=\"fixme\");\r\n\r\nThis gives me the error \"SyntaxError: keyword can't be an expression\". If I remove the rename-source argument, the other arguments get passed fine. I believe the problem is the hyphen in the argument name. I got around the issue by changing the last line to.\r\n\r\nmyindex.upload(uploadme,  **{\"host\" : \"NewHostName\", \"sourcetype\" : \"NewTypeName\", \"rename-source\" : \"fixme\"}\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/311", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/311/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/311/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/311/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/311", "id": 574449980, "node_id": "MDU6SXNzdWU1NzQ0NDk5ODA=", "number": 311, "title": "xml.etree.ElementTree.ParseError: syntax error: line 1, column 0", "user": {"login": "x64Eddie", "id": 29381845, "node_id": "MDQ6VXNlcjI5MzgxODQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/29381845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/x64Eddie", "html_url": "https://github.com/x64Eddie", "followers_url": "https://api.github.com/users/x64Eddie/followers", "following_url": "https://api.github.com/users/x64Eddie/following{/other_user}", "gists_url": "https://api.github.com/users/x64Eddie/gists{/gist_id}", "starred_url": "https://api.github.com/users/x64Eddie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/x64Eddie/subscriptions", "organizations_url": "https://api.github.com/users/x64Eddie/orgs", "repos_url": "https://api.github.com/users/x64Eddie/repos", "events_url": "https://api.github.com/users/x64Eddie/events{/privacy}", "received_events_url": "https://api.github.com/users/x64Eddie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-03T06:39:11Z", "updated_at": "2020-03-13T18:12:23Z", "closed_at": "2020-03-13T18:12:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello guys, I am new to Splunk and trying to get familiar with the SDK. I am trying to run the examples in the SDK, however, it's giving this error when running any of the examples and the `python3 setup.py test`\r\n\r\n- Platform : MacOS Version 10.15.3\r\n- Framework: Python 3.8.1\r\n- SDK Version : 1.6.12\r\n\r\n### Error\r\n```\r\n~/Documents/SchoolProjects/splunk-sdk-python/examples(master*) \u00bb python3 info.py          \r\nTraceback (most recent call last):\r\n  File \"info.py\", line 34, in <module>\r\n    service = client.connect(**opts.kwargs)\r\n  File \"../splunklib/client.py\", line 331, in connect\r\n    s.login()\r\n  File \"../splunklib/binding.py\", line 886, in login\r\n    session = XML(body).findtext(\"./sessionKey\")\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/xml/etree/ElementTree.py\", line 1320, in XML\r\n    parser.feed(text)\r\nxml.etree.ElementTree.ParseError: syntax error: line 1, column 0\r\n```\r\n### .splunkrc \r\n```\r\n# Splunk host (default: localhost)\r\nhost=localhost\r\n# Splunk admin port (default: 8089)\r\nport=8089\r\n# Splunk username\r\nusername=admin\r\n# Splunk password\r\npassword=12345678\r\n# Access scheme (default: https)\r\nscheme=http\r\n# Your version of Splunk (default: 5.0)\r\nversion=5.0\r\n```\r\n### Test\r\n```\r\npython3 setup.py test\r\n...\r\nRan 99 tests in 4.017s\r\nFAILED (failures=1, errors=94)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/310", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/310/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/310/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/310/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/310", "id": 574149762, "node_id": "MDU6SXNzdWU1NzQxNDk3NjI=", "number": 310, "title": "is there an example/document on how to use bearer token", "user": {"login": "ManickamA", "id": 61707102, "node_id": "MDQ6VXNlcjYxNzA3MTAy", "avatar_url": "https://avatars0.githubusercontent.com/u/61707102?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ManickamA", "html_url": "https://github.com/ManickamA", "followers_url": "https://api.github.com/users/ManickamA/followers", "following_url": "https://api.github.com/users/ManickamA/following{/other_user}", "gists_url": "https://api.github.com/users/ManickamA/gists{/gist_id}", "starred_url": "https://api.github.com/users/ManickamA/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ManickamA/subscriptions", "organizations_url": "https://api.github.com/users/ManickamA/orgs", "repos_url": "https://api.github.com/users/ManickamA/repos", "events_url": "https://api.github.com/users/ManickamA/events{/privacy}", "received_events_url": "https://api.github.com/users/ManickamA/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-02T18:04:59Z", "updated_at": "2020-03-02T18:16:21Z", "closed_at": "2020-03-02T18:16:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/307", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/307/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/307/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/307/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/307", "id": 570178768, "node_id": "MDU6SXNzdWU1NzAxNzg3Njg=", "number": 307, "title": "TextIOWrapper regression bug in 1.6.12: 'file' object has no attribute 'readable'", "user": {"login": "lowell80", "id": 7256578, "node_id": "MDQ6VXNlcjcyNTY1Nzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/7256578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowell80", "html_url": "https://github.com/lowell80", "followers_url": "https://api.github.com/users/lowell80/followers", "following_url": "https://api.github.com/users/lowell80/following{/other_user}", "gists_url": "https://api.github.com/users/lowell80/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowell80/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowell80/subscriptions", "organizations_url": "https://api.github.com/users/lowell80/orgs", "repos_url": "https://api.github.com/users/lowell80/repos", "events_url": "https://api.github.com/users/lowell80/events{/privacy}", "received_events_url": "https://api.github.com/users/lowell80/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-02-24T22:10:59Z", "updated_at": "2020-06-01T02:53:16Z", "closed_at": "2020-06-01T02:53:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I think I stumbled onto a bug in 1.6.12 that impacts at least 7.1.4 and 7.3.0.  It seems to be related to python 2 vs 3 and athe TextIOWrapper around the output stream.    The initial registration seems to be fine (`--scheme`), but whenever the script is run to collect data that's when it fails.\r\n\r\nWhen I downgrade splunk-sdk version to 1.6.11 my modular input (TA) works fine again.\r\n\r\nHere's the traceback from the 1.6.12 version from a local 7.3 instance running on a Mac:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/lalleman/splunk73/splunk/etc/apps/TA-oam_dms/bin/OAM_DMS.py\", line 422, in <module>\r\n    sys.exit(OamDmsModularInput().run(sys.argv))\r\n  File \"/Users/lalleman/splunk73/splunk/etc/apps/TA-oam_dms/bin/../lib/splunklib/modularinput/script.py\", line 56, in run\r\n    return self.run_script(args, EventWriter(), sys.stdin)\r\n  File \"/Users/lalleman/splunk73/splunk/etc/apps/TA-oam_dms/bin/../lib/splunklib/modularinput/event_writer.py\", line 49, in __init__\r\n    self._out = TextIOWrapper(output)\r\nAttributeError: 'file' object has no attribute 'readable'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/306", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/306/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/306/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/306/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/306", "id": 568390790, "node_id": "MDU6SXNzdWU1NjgzOTA3OTA=", "number": 306, "title": "Unable to use id/password auth with 7.3", "user": {"login": "rfaircloth-splunk", "id": 35384120, "node_id": "MDQ6VXNlcjM1Mzg0MTIw", "avatar_url": "https://avatars0.githubusercontent.com/u/35384120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rfaircloth-splunk", "html_url": "https://github.com/rfaircloth-splunk", "followers_url": "https://api.github.com/users/rfaircloth-splunk/followers", "following_url": "https://api.github.com/users/rfaircloth-splunk/following{/other_user}", "gists_url": "https://api.github.com/users/rfaircloth-splunk/gists{/gist_id}", "starred_url": "https://api.github.com/users/rfaircloth-splunk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rfaircloth-splunk/subscriptions", "organizations_url": "https://api.github.com/users/rfaircloth-splunk/orgs", "repos_url": "https://api.github.com/users/rfaircloth-splunk/repos", "events_url": "https://api.github.com/users/rfaircloth-splunk/events{/privacy}", "received_events_url": "https://api.github.com/users/rfaircloth-splunk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-20T15:43:21Z", "updated_at": "2020-02-20T20:35:00Z", "closed_at": "2020-02-20T19:43:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Running a test matrix against 7.1 7.2 7.3 8.0 with 1.6.12 I am unable to authenticate against 7.3, but am all other versions reverted to .11 to work around\r\n\r\ntest_1    |                 self.login()\r\ntest_1    |             else:\r\ntest_1    |                 # Try the request anyway without authentication.\r\ntest_1    |                 # Most requests will fail. Some will succeed, such as\r\ntest_1    |                 # 'GET server/info'.\r\ntest_1    |                 with _handle_auth_error(\"Request aborted: not logged in.\"):\r\ntest_1    |                     return request_fun(self, *args, **kwargs)\r\ntest_1    |         try:\r\ntest_1    |             # Issue the request\r\ntest_1    |             return request_fun(self, *args, **kwargs)\r\ntest_1    |         except HTTPError as he:\r\ntest_1    |             if he.status == 401 and self.autologin:\r\ntest_1    |                 # Authentication failed. Try logging in, and then\r\ntest_1    |                 # rerunning the request. If either step fails, throw\r\ntest_1    |                 # an AuthenticationError and give up.\r\ntest_1    |                 with _handle_auth_error(\"Autologin failed.\"):\r\ntest_1    |                     self.login()\r\ntest_1    |                 with _handle_auth_error(\r\ntest_1    |                         \"Autologin succeeded, but there was an auth error on \"\r\ntest_1    |                         \"next request. Something is very wrong.\"):\r\ntest_1    |                     return request_fun(self, *args, **kwargs)\r\ntest_1    |             elif he.status == 401 and not self.autologin:\r\ntest_1    |                 raise AuthenticationError(\r\ntest_1    | >                   \"Request failed: Session is not logged in.\", he)\r\ntest_1    | E               splunklib.binding.AuthenticationError: Request failed: Session is not logged in.\r\ntest_1    | \r\ntest_1    | /usr/local/lib/python3.7/site-packages/splunklib/binding.py:304: AuthenticationError\r\ntest_1    | --------------- generated xml file: /work/test-results/test.xml ----------------\r\ntest_1    | =================== 86 failed, 1 skipped in 71.39s (0:01:11) ===================\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/289", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/289/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/289/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/289/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/289", "id": 514381206, "node_id": "MDU6SXNzdWU1MTQzODEyMDY=", "number": 289, "title": "python files in splunklib/modularinput have 775 permissions", "user": {"login": "gjanders", "id": 15993638, "node_id": "MDQ6VXNlcjE1OTkzNjM4", "avatar_url": "https://avatars2.githubusercontent.com/u/15993638?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gjanders", "html_url": "https://github.com/gjanders", "followers_url": "https://api.github.com/users/gjanders/followers", "following_url": "https://api.github.com/users/gjanders/following{/other_user}", "gists_url": "https://api.github.com/users/gjanders/gists{/gist_id}", "starred_url": "https://api.github.com/users/gjanders/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gjanders/subscriptions", "organizations_url": "https://api.github.com/users/gjanders/orgs", "repos_url": "https://api.github.com/users/gjanders/repos", "events_url": "https://api.github.com/users/gjanders/events{/privacy}", "received_events_url": "https://api.github.com/users/gjanders/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-30T03:54:13Z", "updated_at": "2019-10-31T20:17:38Z", "closed_at": "2019-10-31T20:17:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Other files have 644 and the execute permission results in failing to pass app inspect.\r\n\r\nThese files are 755 in the tar.gz file, would it be possible to fix this in the next version?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/287", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/287/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/287/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/287/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/287", "id": 510127695, "node_id": "MDU6SXNzdWU1MTAxMjc2OTU=", "number": 287, "title": "High CPU iterating over ResponseReader (python3)", "user": {"login": "abotsis", "id": 1189137, "node_id": "MDQ6VXNlcjExODkxMzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1189137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abotsis", "html_url": "https://github.com/abotsis", "followers_url": "https://api.github.com/users/abotsis/followers", "following_url": "https://api.github.com/users/abotsis/following{/other_user}", "gists_url": "https://api.github.com/users/abotsis/gists{/gist_id}", "starred_url": "https://api.github.com/users/abotsis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abotsis/subscriptions", "organizations_url": "https://api.github.com/users/abotsis/orgs", "repos_url": "https://api.github.com/users/abotsis/repos", "events_url": "https://api.github.com/users/abotsis/events{/privacy}", "received_events_url": "https://api.github.com/users/abotsis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-21T17:08:20Z", "updated_at": "2019-10-22T08:02:58Z", "closed_at": "2019-10-22T08:02:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Howdy, I'm seeing high cpu iterating over a `ResponseReader` object in Python 3.7. \r\n\r\nWhen doing something like:\r\n```\r\nresults = service.jobs.export('search *')\r\nfor _ in results:\r\n    pass\r\n```\r\nCPU spikes to 100%, and it's slow.\r\n`cProfile` indicates (trimmed):\r\n```\r\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\r\n        1    0.013    0.013  174.869  174.869 <string>:1(<module>)\r\n 26612304   11.754    0.000   89.386    0.000 binding.py:1285(peek)\r\n 53224608   35.328    0.000  146.927    0.000 binding.py:1304(read)\r\n 53224608   59.029    0.000  107.549    0.000 client.py:436(read)\r\n 53224607   27.661    0.000   43.139    0.000 client.py:468(readinto)\r\n``` \r\n\r\nA little digging reveals two potential performance issues with the `ResultsReader.read()` method:\r\n1. It's reading one character at a time.\r\n2. For each character read, it appends to `self._buffer`\r\n\r\nAdditionally, adding a few print statements to `read()` immediately before `return` shows this pattern:\r\n```\r\nDEBUG read: 1 size: 0\r\nDEBUG read: 1 size: 1\r\nDEBUG read: 1 size: 0\r\nDEBUG read: 1 size: 1\r\nDEBUG read: 1 size: 0\r\nDEBUG read: 1 size: 1\r\nDEBUG read: 1 size: 0\r\nDEBUG read: 1 size: 1\r\nDEBUG read: 1 size: 0\r\nDEBUG read: 1 size: 1\r\nDEBUG read: 1 size: 0\r\nDEBUG read: 1 size: 1\r\nDEBUG read: 1 size: 0\r\nDEBUG read: 1 size: 1\r\nDEBUG read: 1 size: 0\r\n```\r\n\r\nIn the example above, if I instead iterate over `results._response`, things work as expected.\r\nI have not tried to reproduce in Python 2.\r\n\r\nAs a side note, while I'm not familiar with the implementation of this in it's entirety, I've noticed:\r\n```\r\n    def read(self, size = None):\r\n        r = self._buffer\r\n        self._buffer = b''\r\n        if size is not None:\r\n            size -= len(r)\r\n        r = r + self._response.read(size)\r\n        return r\r\n```\r\nif size=0 (which it does sometimes, apparently) and self._buffer==0, this will pass `-1` to the `self._response.read` call. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/257", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/257/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/257/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/257", "id": 464559260, "node_id": "MDU6SXNzdWU0NjQ1NTkyNjA=", "number": 257, "title": "csv.Dialect parameters(delimiter, quotechar, lineterminator) cannot be in bytes format.", "user": {"login": "bj8798", "id": 30254139, "node_id": "MDQ6VXNlcjMwMjU0MTM5", "avatar_url": "https://avatars3.githubusercontent.com/u/30254139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bj8798", "html_url": "https://github.com/bj8798", "followers_url": "https://api.github.com/users/bj8798/followers", "following_url": "https://api.github.com/users/bj8798/following{/other_user}", "gists_url": "https://api.github.com/users/bj8798/gists{/gist_id}", "starred_url": "https://api.github.com/users/bj8798/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bj8798/subscriptions", "organizations_url": "https://api.github.com/users/bj8798/orgs", "repos_url": "https://api.github.com/users/bj8798/repos", "events_url": "https://api.github.com/users/bj8798/events{/privacy}", "received_events_url": "https://api.github.com/users/bj8798/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-05T09:49:27Z", "updated_at": "2019-08-01T17:11:15Z", "closed_at": "2019-08-01T17:11:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I faced this issue while using **splunklib** on **python 3**.\r\nversion: 1.6.6\r\nplatform: Linux(centos)\r\nframework version: **Python 3.7.2**\r\nSplunk version: **8.0.0 (build: 7f1fa0caa96a)**(beta build for testing)\r\n\r\nFollowing is the trace of error.\r\n> **2019-07-03 14:25:39,156, Level=ERROR, Pid=2240, File=search_command.py, Line=981, TypeError at \"/opt/splunk/etc/apps/SA-ldapsearch/bin/packages/splunklib/searchcommands/validators.py\", line 270 : \"delimiter\" must be string, not bytes**\r\nTraceback:\r\n  File \"/opt/splunk/etc/apps/SA-ldapsearch/bin/packages/splunklib/searchcommands/search_command.py\", line 603, in _process_protocol_v1\r\n    self._execute(ifile, None)\r\n  File \"/opt/splunk/etc/apps/SA-ldapsearch/bin/packages/splunklib/searchcommands/generating_command.py\", line 208, in _execute\r\n    self._record_writer.write_records(self.generate())\r\n  File \"/opt/splunk/etc/apps/SA-ldapsearch/bin/packages/splunklib/searchcommands/internals.py\", line 521, in write_records\r\n    for record in records:\r\n  File \"/opt/splunk/etc/apps/SA-ldapsearch/bin/ldaptestconnection.py\", line 53, in generate\r\n    configuration = app.Configuration(self)\r\n  File \"/opt/splunk/etc/apps/SA-ldapsearch/bin/packages/app/configuration.py\", line 54, in __init__\r\n    self._read_configuration()\r\n  File \"/opt/splunk/etc/apps/SA-ldapsearch/bin/packages/app/configuration.py\", line 447, in _read_configuration\r\n    self._reset_fields(command.domain, settings)\r\n  File \"/opt/splunk/etc/apps/SA-ldapsearch/bin/packages/app/configuration.py\", line 480, in _reset_fields\r\n    host = self._get_value(settings, 'server', require=True, validate=List())\r\n  File \"/opt/splunk/etc/apps/SA-ldapsearch/bin/packages/app/configuration.py\", line 398, in _get_value\r\n    value = validate(value)\r\n  File \"/opt/splunk/etc/apps/SA-ldapsearch/bin/packages/splunklib/searchcommands/validators.py\", line 270, in __call__\r\n    **value = next(csv.reader([value], self.Dialect))**\r\n\r\nI looked into it, I think that below code snippet is causing this issue:\r\n\r\n    class Dialect(csv.Dialect):\r\n        \"\"\" Describes the properties of list option values. \"\"\"\r\n        strict = True\r\n        delimiter = b','\r\n        quotechar = b'\"'\r\n        doublequote = True\r\n        lineterminator = b'\\n'\r\n        skipinitialspace = True\r\n        quoting = csv.QUOTE_MINIMAL\r\n\r\nI changed it to a below code to make it work. Is it okay to make the following change or there is more change required?\r\n\r\n    class Dialect(csv.Dialect):\r\n        \"\"\" Describes the properties of list option values. \"\"\"\r\n        strict = True\r\n        delimiter = ','\r\n        quotechar = '\"'\r\n        doublequote = True\r\n        lineterminator = '\\n'\r\n        skipinitialspace = True\r\n        quoting = csv.QUOTE_MINIMAL\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/256", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/256/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/256/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/256", "id": 443100948, "node_id": "MDU6SXNzdWU0NDMxMDA5NDg=", "number": 256, "title": "Key Error in Python Splunk SDK while accessing KV store", "user": {"login": "Manikandankasi01", "id": 30194069, "node_id": "MDQ6VXNlcjMwMTk0MDY5", "avatar_url": "https://avatars3.githubusercontent.com/u/30194069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manikandankasi01", "html_url": "https://github.com/Manikandankasi01", "followers_url": "https://api.github.com/users/Manikandankasi01/followers", "following_url": "https://api.github.com/users/Manikandankasi01/following{/other_user}", "gists_url": "https://api.github.com/users/Manikandankasi01/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manikandankasi01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manikandankasi01/subscriptions", "organizations_url": "https://api.github.com/users/Manikandankasi01/orgs", "repos_url": "https://api.github.com/users/Manikandankasi01/repos", "events_url": "https://api.github.com/users/Manikandankasi01/events{/privacy}", "received_events_url": "https://api.github.com/users/Manikandankasi01/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-12T12:50:24Z", "updated_at": "2019-05-13T23:42:38Z", "closed_at": "2019-05-13T23:42:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm getting Key Error while accessing splunk kv store using splunk python sdk.\r\nPython Version: 2.7\r\nSplunk sdk version : 1.6.6\r\nOS: Windows 7 & 10\r\n\r\n```python\r\nimport sys, json\r\nfrom splunklib.client import connect \r\nimport getpass\r\n \r\n \r\n def main():\r\n     #Getting Splunk access details from User\r\n     hostname = raw_input(\"Enter Splunk Hostname/IP: \")\r\n     splunkUser = raw_input(\"Enter Splunk Admin Username: \")\r\n     splunkPassword = getpass.getpass(\"Enter Splunk Admin Password: \")\r\n     HOST = hostname\r\n     PORT = 8089\r\n     USERNAME = splunkUser\r\n     PASSWORD = splunkPassword\r\n     #Connecting splunk server\r\n     splunk_service = connect(host=HOST,port=PORT,username=USERNAME,password=PASSWORD)\r\n     print(\"Splunk connection succeed !!!!\")\r\n     splunk_service.namespace['owner'] = 'Nobody'\r\n     collection_name=\"test\"\r\n     collection=splunk_service.kvstore[collection_name]\r\n \r\n     if collection_name in splunk_service.kvstore:\r\n         print(\"{} Already exist !!!\".format(collection_name))\r\n     else:\r\n         splunk_service.kvstore.create(collection_name)\r\n     \r\n     #Adding data to KV store\r\n     collection.data.insert(json.dumps({\"ID\":\"123\",\"sId\":1234,\"Tech\":\"text\"}))\r\n \r\n     #Retriving data from kv store\r\n     kv_data=json.dumps(collection.data.query(),indent=1)\r\n     print(kv_data)\r\n \r\n if __name__ == '__main__':\r\n     main()\r\n     \r\n ```\r\n\r\nError Details:\r\nTraceback (most recent call last):\r\nFile \"kv_store_opps.py\", line 36, in \r\nmain()\r\nFile \"kv_store_opps.py\", line 21, in main\r\ncollection=splunk_service.kvstore[collection_name]\r\nFile \"C:\\Python27\\lib\\site-packages\\splunklib\\client.py\", line 1243, in getitem\r\nraise KeyError(key)\r\nKeyError: UrlEncoded('test')\r\n\r\nAny help on this much appreciated.\r\n\r\nThanks,\r\nMani\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/232", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/232/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/232/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/232", "id": 384173672, "node_id": "MDU6SXNzdWUzODQxNzM2NzI=", "number": 232, "title": "kvcollection.data.query_by_id broken for custom _key", "user": {"login": "SyraD", "id": 6428113, "node_id": "MDQ6VXNlcjY0MjgxMTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6428113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SyraD", "html_url": "https://github.com/SyraD", "followers_url": "https://api.github.com/users/SyraD/followers", "following_url": "https://api.github.com/users/SyraD/following{/other_user}", "gists_url": "https://api.github.com/users/SyraD/gists{/gist_id}", "starred_url": "https://api.github.com/users/SyraD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SyraD/subscriptions", "organizations_url": "https://api.github.com/users/SyraD/orgs", "repos_url": "https://api.github.com/users/SyraD/repos", "events_url": "https://api.github.com/users/SyraD/events{/privacy}", "received_events_url": "https://api.github.com/users/SyraD/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-11-26T04:51:54Z", "updated_at": "2019-05-07T12:57:47Z", "closed_at": "2019-05-07T12:57:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Followed splunk-sdk-python/examples/kvstore.py.\r\n\r\nquery_by_id returns  `splunklib.binding.HTTPError: HTTP 404 Not Found -- Could not find object.`\r\n```\r\nid = \"mah_super_custom_key\"\r\nprint(\"Should return item1: %s\" % json.dumps(collection.data.query_by_id(id), indent=1))\r\n```\r\n\r\nHowever, a standard query returns the entry.\r\n```\r\nid = \"mah_super_custom_key\"\r\nquery = json.dumps({\"_key\": id})\r\ncollection.data.query(query=query)\r\n```\r\n\r\n\r\n      ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/226", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/226/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/226/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/226", "id": 371205798, "node_id": "MDU6SXNzdWUzNzEyMDU3OTg=", "number": 226, "title": "Could you update the python3 support status on your website?", "user": {"login": "CodyKochmann", "id": 6968406, "node_id": "MDQ6VXNlcjY5Njg0MDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/6968406?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CodyKochmann", "html_url": "https://github.com/CodyKochmann", "followers_url": "https://api.github.com/users/CodyKochmann/followers", "following_url": "https://api.github.com/users/CodyKochmann/following{/other_user}", "gists_url": "https://api.github.com/users/CodyKochmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/CodyKochmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CodyKochmann/subscriptions", "organizations_url": "https://api.github.com/users/CodyKochmann/orgs", "repos_url": "https://api.github.com/users/CodyKochmann/repos", "events_url": "https://api.github.com/users/CodyKochmann/events{/privacy}", "received_events_url": "https://api.github.com/users/CodyKochmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 135643, "node_id": "MDU6TGFiZWwxMzU2NDM=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/docs", "name": "docs", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-17T18:17:59Z", "updated_at": "2018-10-17T20:05:52Z", "closed_at": "2018-10-17T20:05:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "People were reporting that you didn't support python3 and finally sent me the following link that made them assume that python2 was the only supported version even though its going end of life next year.\r\n\r\n[http://dev.splunk.com/view/python-sdk/SP-CAAAEFB#sdk](http://dev.splunk.com/view/python-sdk/SP-CAAAEFB#sdk)\r\n\r\n![screen shot 2018-10-17 at 2 14 47 pm](https://user-images.githubusercontent.com/6968406/47107471-68417080-d217-11e8-8e38-a3827baa095d.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/225", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/225/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/225/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/225", "id": 369246277, "node_id": "MDU6SXNzdWUzNjkyNDYyNzc=", "number": 225, "title": "Getting HTTPError after upgrading splunk", "user": {"login": "duxing", "id": 1322437, "node_id": "MDQ6VXNlcjEzMjI0Mzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1322437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duxing", "html_url": "https://github.com/duxing", "followers_url": "https://api.github.com/users/duxing/followers", "following_url": "https://api.github.com/users/duxing/following{/other_user}", "gists_url": "https://api.github.com/users/duxing/gists{/gist_id}", "starred_url": "https://api.github.com/users/duxing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duxing/subscriptions", "organizations_url": "https://api.github.com/users/duxing/orgs", "repos_url": "https://api.github.com/users/duxing/repos", "events_url": "https://api.github.com/users/duxing/events{/privacy}", "received_events_url": "https://api.github.com/users/duxing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "shakeelmohamed", "id": 1480063, "node_id": "MDQ6VXNlcjE0ODAwNjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1480063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shakeelmohamed", "html_url": "https://github.com/shakeelmohamed", "followers_url": "https://api.github.com/users/shakeelmohamed/followers", "following_url": "https://api.github.com/users/shakeelmohamed/following{/other_user}", "gists_url": "https://api.github.com/users/shakeelmohamed/gists{/gist_id}", "starred_url": "https://api.github.com/users/shakeelmohamed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shakeelmohamed/subscriptions", "organizations_url": "https://api.github.com/users/shakeelmohamed/orgs", "repos_url": "https://api.github.com/users/shakeelmohamed/repos", "events_url": "https://api.github.com/users/shakeelmohamed/events{/privacy}", "received_events_url": "https://api.github.com/users/shakeelmohamed/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shakeelmohamed", "id": 1480063, "node_id": "MDQ6VXNlcjE0ODAwNjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1480063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shakeelmohamed", "html_url": "https://github.com/shakeelmohamed", "followers_url": "https://api.github.com/users/shakeelmohamed/followers", "following_url": "https://api.github.com/users/shakeelmohamed/following{/other_user}", "gists_url": "https://api.github.com/users/shakeelmohamed/gists{/gist_id}", "starred_url": "https://api.github.com/users/shakeelmohamed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shakeelmohamed/subscriptions", "organizations_url": "https://api.github.com/users/shakeelmohamed/orgs", "repos_url": "https://api.github.com/users/shakeelmohamed/repos", "events_url": "https://api.github.com/users/shakeelmohamed/events{/privacy}", "received_events_url": "https://api.github.com/users/shakeelmohamed/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-10-11T18:20:50Z", "updated_at": "2018-10-31T22:37:25Z", "closed_at": "2018-10-31T22:37:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi,\r\nI recently took over a legacy project and upgraded the splunk python library due to an existing error (#131).\r\nthe old version was v1.0.0 and I upgrade to v1.6.5(latest)\r\n\r\nafter the upgrade I started seeing 2 more new error message, one of which being an HTTPError:\r\n```\r\n  File \"/usr/lib/python2.7/site-packages/splunklib/binding.py\", line 861, in login\r\n    cookie=\"1\") # In Splunk 6.2+, passing \"cookie=1\" will return the \"set-cookie\" header\r\n  File \"/usr/lib/python2.7/site-packages/splunklib/binding.py\", line 1208, in post\r\n    return self.request(url, message)\r\n  File \"/usr/lib/python2.7/site-packages/splunklib/binding.py\", line 1228, in request\r\n    raise HTTPError(response)\r\nsplunklib.binding.HTTPError: HTTP 504 GATEWAY_TIMEOUT -- \r\n```\r\n\r\nNothing else was changed for this project or the splunk server I used, so I figured this error message showing up may be related to the library upgrade. I was wondering if there's any request retry / default time value related changes between 1.0.0 to 1.6.5 that may have caused this.\r\n\r\nsuggestions on how to make the library more fault tolerant is appreciated. I'd like to know if it's possible the configure the timeout value used for requests made from splunk library", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/220", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/220/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/220/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/220", "id": 359919428, "node_id": "MDU6SXNzdWUzNTk5MTk0Mjg=", "number": 220, "title": "XML Parser Issue - Splunk Enterprise", "user": {"login": "JuxhinDB", "id": 8005101, "node_id": "MDQ6VXNlcjgwMDUxMDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/8005101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JuxhinDB", "html_url": "https://github.com/JuxhinDB", "followers_url": "https://api.github.com/users/JuxhinDB/followers", "following_url": "https://api.github.com/users/JuxhinDB/following{/other_user}", "gists_url": "https://api.github.com/users/JuxhinDB/gists{/gist_id}", "starred_url": "https://api.github.com/users/JuxhinDB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JuxhinDB/subscriptions", "organizations_url": "https://api.github.com/users/JuxhinDB/orgs", "repos_url": "https://api.github.com/users/JuxhinDB/repos", "events_url": "https://api.github.com/users/JuxhinDB/events{/privacy}", "received_events_url": "https://api.github.com/users/JuxhinDB/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-13T14:24:05Z", "updated_at": "2018-09-14T11:49:30Z", "closed_at": "2018-09-14T11:49:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "###### Versions\r\n\r\n**Python:** 3.6.3\r\n**Splunk Python SDK:** 1.6.5\r\n\r\n**Splunk Enterprise:** 7.1.2\r\n**Splunk Build:** a0c72a66db66\r\n\r\n**Documentation Ref:** http://docs.splunk.com/DocumentationStatic/PythonSDK/1.6.5/client.html#splunklib.client.Inputs\r\n\r\n---\r\n\r\n###### Description\r\n\r\nI am currently trying to get a simply Proof-of-Concept to integrate some tools with Splunk via the Python SDK. Main Splunk server is listening on standard 80 and with the following code:\r\n\r\n```python\r\nfrom splunklib import client\r\n\r\nHOST = 'localhost'\r\nUNAME = 'admin'\r\nPASSWORD = 'redacted'\r\n\r\n\r\ndef main():\r\n    _client = client.connect(\r\n        host=HOST,\r\n        port=80,\r\n        username=UNAME,\r\n        password=PASSWORD,\r\n        verify=False,\r\n        scheme='http'\r\n    )\r\n\r\n    assert isinstance(_client, client.Service)\r\n\r\n    inputs = _client.inputs\r\n\r\n    for item in inputs:\r\n        print(\"[!] Input - Name: {}\\tKind: {}\".format(item.name, item.kind))\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\nIt appears that `splunklib.binding.py` is crashing on `session = XML(body).findtext(\"./sessionKey\")` due to an invalid HTML response. The response is:\r\n\r\n```\r\nb'<!doctype html><html><head><meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\"><meta http-equiv=\"refresh\" content=\"1;url=http://localhost/en-US/services/auth/login\"><title>303 See Other</title></head><body><h1>See Other</h1><p>The resource has moved temporarily <a href=\"http://localhost/en-US/services/auth/login\">here</a>.</p></body></html>\\r\\n'\r\n```\r\n\r\nWhen mocking the response, I can get something going, but it still doesn't work as expected. \r\n\r\nhttps://github.com/splunk/splunk-sdk-python/blob/39b18153f1a218caf345bc579a77cf0b9bbe9e99/splunklib/binding.py#L863-L866\r\n\r\nThe above block should maybe decode the string to bytes first, then encode the data, _before_ passing it through the XML parser. If this is an agreed approach, I can go ahead and push a PR for it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/216", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/216/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/216/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/216", "id": 346376769, "node_id": "MDU6SXNzdWUzNDYzNzY3Njk=", "number": 216, "title": "Non breaking spaces break the is_ready() function", "user": {"login": "mew1033", "id": 4435733, "node_id": "MDQ6VXNlcjQ0MzU3MzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4435733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mew1033", "html_url": "https://github.com/mew1033", "followers_url": "https://api.github.com/users/mew1033/followers", "following_url": "https://api.github.com/users/mew1033/following{/other_user}", "gists_url": "https://api.github.com/users/mew1033/gists{/gist_id}", "starred_url": "https://api.github.com/users/mew1033/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mew1033/subscriptions", "organizations_url": "https://api.github.com/users/mew1033/orgs", "repos_url": "https://api.github.com/users/mew1033/repos", "events_url": "https://api.github.com/users/mew1033/events{/privacy}", "received_events_url": "https://api.github.com/users/mew1033/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 135642, "node_id": "MDU6TGFiZWwxMzU2NDI=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-31T22:09:46Z", "updated_at": "2018-10-08T21:44:51Z", "closed_at": "2018-10-08T21:44:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I had a search that accidentally had non breaking spaces in it. When pasting it into the splunk search box, it works fine, albeit the character has a red highlight. But when I start the search with the sdk, then run `is_ready()` on the job, it crashes.\r\n\r\nHere's the traceback:\r\n\r\n    Traceback (most recent call last):\r\n      File \"script.py\", line 1172, in <module>\r\n        main()\r\n      File \"script.py\", line 745, in main\r\n        while not splunk_search_job.is_ready():\r\n      File \"/usr/lib/python2.7/site-packages/splunklib/client.py\", line 2705, in is_ready\r\n        self._state = self.read(response)\r\n      File \"/usr/lib/python2.7/site-packages/splunklib/client.py\", line 1086, in read\r\n        results = self._load_state(response)\r\n      File \"/usr/lib/python2.7/site-packages/splunklib/client.py\", line 949, in _load_state\r\n        entry = self._load_atom_entry(response)\r\n      File \"/usr/lib/python2.7/site-packages/splunklib/client.py\", line 2626, in _load_atom_entry\r\n        return _load_atom(response).entry\r\n      File \"/usr/lib/python2.7/site-packages/splunklib/client.py\", line 197, in _load_atom\r\n        return data.load(response.body.read().decode('utf-8'), match)\r\n      File \"/usr/lib/python2.7/site-packages/splunklib/data.py\", line 79, in load\r\n        root = XML(text)\r\n      File \"/usr/lib64/python2.7/xml/etree/ElementTree.py\", line 1300, in XML\r\n        parser.feed(text)\r\n      File \"/usr/lib64/python2.7/xml/etree/ElementTree.py\", line 1640, in feed\r\n        self._parser.Parse(data, 0)\r\n    UnicodeEncodeError: 'ascii' codec can't encode character u'\\xa0' in position 6754: ordinal not in range(128)\r\n\r\nAnd here's the few characters that are throwing it off.\r\n\r\n    >>> s[5458:5470]\r\n    'ion is\\xc2\\xa0*not'\r\n\r\nFor reference, here's the piece of the script that is breaking:\r\n\r\n    while True:\r\n        while not splunk_search_job.is_ready():\r\n            pass\r\n        if splunk_search_job['isDone'] == '1':\r\n            break\r\n        time.sleep(2)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/202", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/202/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/202/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/202", "id": 325680684, "node_id": "MDU6SXNzdWUzMjU2ODA2ODQ=", "number": 202, "title": "ssl.SSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:590)", "user": {"login": "huangwenwenlili", "id": 12697915, "node_id": "MDQ6VXNlcjEyNjk3OTE1", "avatar_url": "https://avatars1.githubusercontent.com/u/12697915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huangwenwenlili", "html_url": "https://github.com/huangwenwenlili", "followers_url": "https://api.github.com/users/huangwenwenlili/followers", "following_url": "https://api.github.com/users/huangwenwenlili/following{/other_user}", "gists_url": "https://api.github.com/users/huangwenwenlili/gists{/gist_id}", "starred_url": "https://api.github.com/users/huangwenwenlili/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huangwenwenlili/subscriptions", "organizations_url": "https://api.github.com/users/huangwenwenlili/orgs", "repos_url": "https://api.github.com/users/huangwenwenlili/repos", "events_url": "https://api.github.com/users/huangwenwenlili/events{/privacy}", "received_events_url": "https://api.github.com/users/huangwenwenlili/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-05-23T12:22:23Z", "updated_at": "2019-02-13T21:42:08Z", "closed_at": "2019-02-13T21:41:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "connection.request(\"POST\", \"/services/auth/login\", body, headers)\r\noccur this error: \r\nssl.SSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:590)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/201", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/201/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/201/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/201", "id": 318474435, "node_id": "MDU6SXNzdWUzMTg0NzQ0MzU=", "number": 201, "title": "ModularInput: make app where input is defined available to script", "user": {"login": "prigio", "id": 1101464, "node_id": "MDQ6VXNlcjExMDE0NjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1101464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prigio", "html_url": "https://github.com/prigio", "followers_url": "https://api.github.com/users/prigio/followers", "following_url": "https://api.github.com/users/prigio/following{/other_user}", "gists_url": "https://api.github.com/users/prigio/gists{/gist_id}", "starred_url": "https://api.github.com/users/prigio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prigio/subscriptions", "organizations_url": "https://api.github.com/users/prigio/orgs", "repos_url": "https://api.github.com/users/prigio/repos", "events_url": "https://api.github.com/users/prigio/events{/privacy}", "received_events_url": "https://api.github.com/users/prigio/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 135641, "node_id": "MDU6TGFiZWwxMzU2NDE=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/enhancement", "name": "enhancement", "color": "02e10c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-27T16:34:52Z", "updated_at": "2018-06-22T17:49:01Z", "closed_at": "2018-06-22T17:49:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "When writing a modular input, the name of the application within which the input is defined is not made available to the modular input itself, even though it is available within the XML configurations through stdin. It would be nice to get an `app`  key within the InputDefinition provided to the modular input's `stream_events` method.\r\n\r\nSample XML provided on STDIN:\r\n\r\n```.xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<input>\r\n  <server_host>aws-service-mon-hfw-10-124-160-167</server_host>\r\n  <server_uri>https://127.0.0.1:8089</server_uri>\r\n  <session_key>.....</session_key>\r\n  <checkpoint_dir>/opt/splunk/current/var/lib/splunk/modinputs/jmeter</checkpoint_dir>\r\n  <configuration>\r\n    <stanza name=\"jmeter://etc/apps/CA-jmeter/scenarios/test.jmx\" app=\"CA-jmeter\">\r\n      <param name=\"debug\">0</param>\r\n      <param name=\"host\">aws-service-mon-hfw-10-124-160-167</param>\r\n      <param name=\"index\">main</param>\r\n      <param name=\"interval\">900</param>\r\n      <param name=\"sourcetype\">jmeter_input</param>\r\n    </stanza>\r\n  </configuration>\r\n</input>\r\n```\r\nThe app could be parsed by altering the utils.py/parse_xml_data \r\n\r\nhttps://github.com/splunk/splunk-sdk-python/blob/689998070b513a335efee1e4cc27fbf568b256f3/splunklib/modularinput/utils.py#L69\r\n\r\nby adding the following:\r\n\r\n`data[child.get(\"name\")]['app'] = child.get(\"app\")`\r\n\r\nThank you, Paolo", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/198", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/198/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/198/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/198", "id": 310769694, "node_id": "MDU6SXNzdWUzMTA3Njk2OTQ=", "number": 198, "title": "UnicodeEncodeError when parsing rest response with version 1.6.3 and python 2.7", "user": {"login": "xcgspring", "id": 5242992, "node_id": "MDQ6VXNlcjUyNDI5OTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5242992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xcgspring", "html_url": "https://github.com/xcgspring", "followers_url": "https://api.github.com/users/xcgspring/followers", "following_url": "https://api.github.com/users/xcgspring/following{/other_user}", "gists_url": "https://api.github.com/users/xcgspring/gists{/gist_id}", "starred_url": "https://api.github.com/users/xcgspring/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xcgspring/subscriptions", "organizations_url": "https://api.github.com/users/xcgspring/orgs", "repos_url": "https://api.github.com/users/xcgspring/repos", "events_url": "https://api.github.com/users/xcgspring/events{/privacy}", "received_events_url": "https://api.github.com/users/xcgspring/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 135642, "node_id": "MDU6TGFiZWwxMzU2NDI=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-04-03T09:57:18Z", "updated_at": "2018-10-08T20:10:12Z", "closed_at": "2018-10-08T20:10:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Below script works fine with version 1.6.2, but encounter UnicodeEncodeError issue with version 1.6.3, it should leave decoding the bytes to the ElementTree parser instead of decoding the bytes first, check https://stackoverflow.com/questions/21698024/how-to-correctly-parse-utf-8-xml-with-elementtree:\r\n```\r\n# encoding: utf-8\r\n\r\nimport time\r\nfrom splunklib import client\r\n\r\nservice = client.connect(\r\n    host='10.66.138.6',\r\n    port=8089,\r\n    username='admin',\r\n    password='password',\r\n    app='search',\r\n    owner='nobody'\r\n)\r\n\r\nprops_conf = service.confs['props']\r\nif 'access_combined' not in props_conf:\r\n    props_conf.create('access_combined')\r\n\r\nstanza = props_conf['access_combined']\r\n\r\nkey = 'EVAL-\u30d0\u30a4\u30c8'\r\nvalue = 'bytes'\r\nif key not in stanza.content:\r\n    stanza.submit({key: value})\r\n\r\ntime.sleep(5)\r\nstanza = props_conf['access_combined']\r\nfor key, value in stanza.content.items():\r\n    print key, value\r\n\r\n```\r\nError log:\r\n```\r\n(venv)localhost:tmp splunk$ python test6.py \r\nTraceback (most recent call last):\r\n  File \"test6.py\", line 27, in <module>\r\n    stanza = props_conf['access_combined']\r\n  File \"/Users/splunk/venv/lib/python2.7/site-packages/splunklib/client.py\", line 1222, in __getitem__\r\n    entries = self._load_list(response)\r\n  File \"/Users/splunk/venv/lib/python2.7/site-packages/splunklib/client.py\", line 1326, in _load_list\r\n    entries = _load_atom_entries(response)\r\n  File \"/Users/splunk/venv/lib/python2.7/site-packages/splunklib/client.py\", line 202, in _load_atom_entries\r\n    r = _load_atom(response)\r\n  File \"/Users/splunk/venv/lib/python2.7/site-packages/splunklib/client.py\", line 197, in _load_atom\r\n    return data.load(response.body.read().decode('utf-8'), match)\r\n  File \"/Users/splunk/venv/lib/python2.7/site-packages/splunklib/data.py\", line 79, in load\r\n    root = XML(text)\r\n  File \"/usr/local/Cellar/python/2.7.14/Frameworks/Python.framework/Versions/2.7/lib/python2.7/xml/etree/ElementTree.py\", line 1311, in XML\r\n    parser.feed(text)\r\n  File \"/usr/local/Cellar/python/2.7.14/Frameworks/Python.framework/Versions/2.7/lib/python2.7/xml/etree/ElementTree.py\", line 1657, in feed\r\n    self._parser.Parse(data, 0)\r\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 3323-3325: ordinal not in range(128)\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/197", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/197/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/197/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/197", "id": 308344287, "node_id": "MDU6SXNzdWUzMDgzNDQyODc=", "number": 197, "title": "Upload version 1.6.3  to PyPI", "user": {"login": "tlium", "id": 6695612, "node_id": "MDQ6VXNlcjY2OTU2MTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/6695612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tlium", "html_url": "https://github.com/tlium", "followers_url": "https://api.github.com/users/tlium/followers", "following_url": "https://api.github.com/users/tlium/following{/other_user}", "gists_url": "https://api.github.com/users/tlium/gists{/gist_id}", "starred_url": "https://api.github.com/users/tlium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tlium/subscriptions", "organizations_url": "https://api.github.com/users/tlium/orgs", "repos_url": "https://api.github.com/users/tlium/repos", "events_url": "https://api.github.com/users/tlium/events{/privacy}", "received_events_url": "https://api.github.com/users/tlium/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-25T12:06:37Z", "updated_at": "2018-03-26T17:56:44Z", "closed_at": "2018-03-26T17:56:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please upload verison 1.6.3 to PyPI", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/192", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/192/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/192/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/192", "id": 301080912, "node_id": "MDU6SXNzdWUzMDEwODA5MTI=", "number": 192, "title": "Loading data from JSON throws error when values are unicode", "user": {"login": "ruxandraburtica", "id": 797922, "node_id": "MDQ6VXNlcjc5NzkyMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/797922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruxandraburtica", "html_url": "https://github.com/ruxandraburtica", "followers_url": "https://api.github.com/users/ruxandraburtica/followers", "following_url": "https://api.github.com/users/ruxandraburtica/following{/other_user}", "gists_url": "https://api.github.com/users/ruxandraburtica/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruxandraburtica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruxandraburtica/subscriptions", "organizations_url": "https://api.github.com/users/ruxandraburtica/orgs", "repos_url": "https://api.github.com/users/ruxandraburtica/repos", "events_url": "https://api.github.com/users/ruxandraburtica/events{/privacy}", "received_events_url": "https://api.github.com/users/ruxandraburtica/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-28T16:00:51Z", "updated_at": "2018-03-01T18:37:17Z", "closed_at": "2018-03-01T18:37:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Problem:\r\nI've created a Splunk job using the general Splunk examples and I'm waiting for the data (continually checking to see if the job finished):\r\n\r\n```\r\n        job = jobs.create(search, **search_kwargs)\r\n        print('Generated job with SID: {}\\n\\n'.format(job.sid))\r\n\r\n        while True:\r\n            while not job.is_ready():\r\n                pass\r\n            stats = {'isDone': job['isDone'],\r\n                     'doneProgress': float(job['doneProgress']) * 100,\r\n                     'scanCount': int(job['scanCount']),\r\n                     'eventCount': int(job['eventCount']),\r\n                     'resultCount': int(job['resultCount'])}\r\n\r\n            status = ('\\r%(doneProgress)03.1f%%   %(scanCount)d scanned   '\r\n                      '%(eventCount)d matched   %(resultCount)d results') % stats\r\n\r\n            sys.stdout.write(status)\r\n            sys.stdout.flush()\r\n            if stats['isDone'] == '1':\r\n                sys.stdout.write('\\n\\nDone!\\n\\n')\r\n                break\r\n            sleep(2)\r\n\r\n        results_iterator = job.results(count=200)\r\n        raw_data = results_iterator.read()\r\n        entire_json_data = splunk_data.load(raw_data)\r\n```\r\n\r\n## Details:\r\n\r\n*0. Version of this project:*\r\n`splunk-sdk==1.6.2`\r\n\r\n*1. Platform version:*\r\n```\r\n$ lsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID:\tUbuntu\r\nDescription:\tUbuntu 16.04.3 LTS\r\nRelease:\t16.04\r\nCodename:\txenial\r\n```\r\n\r\n*2. Framework version:*\r\n`Python 2.7.12`\r\n\r\n*3. Splunk version:*\r\n`Splunk 6.5.3.1`\r\n\r\n*4. Stacktrace:* \r\n```\r\n  File \"/work/data_processing/connectors/splunk.py\", line 112, in get_and_wait_for_data\r\n    entire_json_data = splunk_data.load(raw_data)\r\n  File \"/work/venv/lib/python2.7/site-packages/splunklib/data.py\", line 83, in load\r\n    return load_root(items[0], nametable)\r\n  File \"/work/venv/lib/python2.7/site-packages/splunklib/data.py\", line 145, in load_root\r\n    k, v = load_elem(element, nametable)\r\n  File \"/work/venv/lib/python2.7/site-packages/splunklib/data.py\", line 109, in load_elem\r\n    value = load_value(element, nametable)\r\n  File \"/work/venv/lib/python2.7/site-packages/splunklib/data.py\", line 172, in load_value\r\n    name, item = load_elem(child, nametable)\r\n  File \"/work/venv/lib/python2.7/site-packages/splunklib/data.py\", line 109, in load_elem\r\n    value = load_value(element, nametable)\r\n  File \"/work/venv/lib/python2.7/site-packages/splunklib/data.py\", line 172, in load_value\r\n    name, item = load_elem(child, nametable)\r\n  File \"/work/venv/lib/python2.7/site-packages/splunklib/data.py\", line 109, in load_elem\r\n    value = load_value(element, nametable)\r\n  File \"/work/venv/lib/python2.7/site-packages/splunklib/data.py\", line 172, in load_value\r\n    name, item = load_elem(child, nametable)\r\n  File \"/work/venv/lib/python2.7/site-packages/splunklib/data.py\", line 115, in load_elem\r\n    if isinstance(value, str):\r\nTypeError: 'unicode' object does not support item assignment\r\n```\r\n\r\n## Solution:\r\nI've solved the problem by using `basestring` in `load_elem` instead of `str` so that unicode is also accepted.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/190", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/190/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/190/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/190", "id": 298042842, "node_id": "MDU6SXNzdWUyOTgwNDI4NDI=", "number": 190, "title": "Using HEC Token", "user": {"login": "ssabnis", "id": 1276281, "node_id": "MDQ6VXNlcjEyNzYyODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1276281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssabnis", "html_url": "https://github.com/ssabnis", "followers_url": "https://api.github.com/users/ssabnis/followers", "following_url": "https://api.github.com/users/ssabnis/following{/other_user}", "gists_url": "https://api.github.com/users/ssabnis/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssabnis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssabnis/subscriptions", "organizations_url": "https://api.github.com/users/ssabnis/orgs", "repos_url": "https://api.github.com/users/ssabnis/repos", "events_url": "https://api.github.com/users/ssabnis/events{/privacy}", "received_events_url": "https://api.github.com/users/ssabnis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-17T22:45:54Z", "updated_at": "2018-02-23T18:26:56Z", "closed_at": "2018-02-23T18:26:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there an example to show pushing events using HEC token?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/189", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/189/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/189/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/189", "id": 294881525, "node_id": "MDU6SXNzdWUyOTQ4ODE1MjU=", "number": 189, "title": "Need to add a header to get past our load balancer when connecting to splunk host", "user": {"login": "DanEhrlich", "id": 3672273, "node_id": "MDQ6VXNlcjM2NzIyNzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/3672273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DanEhrlich", "html_url": "https://github.com/DanEhrlich", "followers_url": "https://api.github.com/users/DanEhrlich/followers", "following_url": "https://api.github.com/users/DanEhrlich/following{/other_user}", "gists_url": "https://api.github.com/users/DanEhrlich/gists{/gist_id}", "starred_url": "https://api.github.com/users/DanEhrlich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DanEhrlich/subscriptions", "organizations_url": "https://api.github.com/users/DanEhrlich/orgs", "repos_url": "https://api.github.com/users/DanEhrlich/repos", "events_url": "https://api.github.com/users/DanEhrlich/events{/privacy}", "received_events_url": "https://api.github.com/users/DanEhrlich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-06T19:20:24Z", "updated_at": "2018-02-23T18:27:42Z", "closed_at": "2018-02-23T18:27:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a load balancer in front of the search heads for a splunk instance I am trying to connect to.\r\nIs there a way to add a header that will always get sent when talking to the instance?\r\n\r\nI do the following in curl and need an equivalent way using the Python SDK:\r\n\r\n`curl -kv -H 'Magic-Header: <MY_MAGIC_TOKEN>' ...`\r\n\r\nAny help would be appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/186", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/186/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/186/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/186", "id": 287129065, "node_id": "MDU6SXNzdWUyODcxMjkwNjU=", "number": 186, "title": "Support Python 3!!! Don't cut us off! We pay you big money!", "user": {"login": "rhaarm", "id": 4397436, "node_id": "MDQ6VXNlcjQzOTc0MzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/4397436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhaarm", "html_url": "https://github.com/rhaarm", "followers_url": "https://api.github.com/users/rhaarm/followers", "following_url": "https://api.github.com/users/rhaarm/following{/other_user}", "gists_url": "https://api.github.com/users/rhaarm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhaarm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhaarm/subscriptions", "organizations_url": "https://api.github.com/users/rhaarm/orgs", "repos_url": "https://api.github.com/users/rhaarm/repos", "events_url": "https://api.github.com/users/rhaarm/events{/privacy}", "received_events_url": "https://api.github.com/users/rhaarm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-09T15:31:24Z", "updated_at": "2018-01-09T20:43:17Z", "closed_at": "2018-01-09T20:42:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since Issue #91 has been shutdown for comments, I'm creating a new issue. Please address the needs of those who keep bringing this up time and time again. Splunk is an \"enterprise\" product that we pay lots of money for and it's seem we keep getting the short end of the stick on this issue and no one at Splunk seems to care.\r\n\r\nThe many Open Source (not paid for) alternative eco-system supports both versions of Python and it seems a paid product can't get it's stuff together.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/184", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/184/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/184/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/184", "id": 252985621, "node_id": "MDU6SXNzdWUyNTI5ODU2MjE=", "number": 184, "title": "Log unhandled exceptions on external commands", "user": {"login": "asieira", "id": 3287067, "node_id": "MDQ6VXNlcjMyODcwNjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/3287067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asieira", "html_url": "https://github.com/asieira", "followers_url": "https://api.github.com/users/asieira/followers", "following_url": "https://api.github.com/users/asieira/following{/other_user}", "gists_url": "https://api.github.com/users/asieira/gists{/gist_id}", "starred_url": "https://api.github.com/users/asieira/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asieira/subscriptions", "organizations_url": "https://api.github.com/users/asieira/orgs", "repos_url": "https://api.github.com/users/asieira/repos", "events_url": "https://api.github.com/users/asieira/events{/privacy}", "received_events_url": "https://api.github.com/users/asieira/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-25T18:37:39Z", "updated_at": "2017-08-25T18:57:59Z", "closed_at": "2017-08-25T18:57:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be pretty useful if calls to `generate` on the base `GeneratingCommand` class (and similar calls to the methods that custom commands must implement) were surrounded by a try / catch block that logs any unhandled exceptions to `self.logger`.\r\n\r\nThis would be exceptionally useful for troubleshooting when writing new commands.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/178", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/178/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/178/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/178", "id": 242001520, "node_id": "MDU6SXNzdWUyNDIwMDE1MjA=", "number": 178, "title": "Can't convert 'bytes' object to str implicitly", "user": {"login": "AimeSoleil", "id": 8179601, "node_id": "MDQ6VXNlcjgxNzk2MDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/8179601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AimeSoleil", "html_url": "https://github.com/AimeSoleil", "followers_url": "https://api.github.com/users/AimeSoleil/followers", "following_url": "https://api.github.com/users/AimeSoleil/following{/other_user}", "gists_url": "https://api.github.com/users/AimeSoleil/gists{/gist_id}", "starred_url": "https://api.github.com/users/AimeSoleil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AimeSoleil/subscriptions", "organizations_url": "https://api.github.com/users/AimeSoleil/orgs", "repos_url": "https://api.github.com/users/AimeSoleil/repos", "events_url": "https://api.github.com/users/AimeSoleil/events{/privacy}", "received_events_url": "https://api.github.com/users/AimeSoleil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-11T10:33:34Z", "updated_at": "2018-02-26T18:24:16Z", "closed_at": "2018-02-26T18:24:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n# Is branch python3-port ready for Python3? I've installed the sdk based on branch python3-port. \r\n# It comes to above error when trying connect splunk deamon.\r\n\r\n**File \"E:\\Python3.5.1\\lib\\site-packages\\splunk_sdk-1.5.0-py3.5.egg\\splunklib\\binding.py\", line 1292, in read\r\n    r = r + self._response.read(size)**\r\n\r\nCode: \r\n```Python\r\nclass SplunkClient:\r\n\r\n    connection_kargs = {}\r\n\r\n    def __init__(self, host, port, username, password):\r\n        self.connection_kargs['host'] = host\r\n        self.connection_kargs['port'] = port\r\n        self.connection_kargs['username'] = username\r\n        self.connection_kargs['password'] = password\r\n\r\n    def connect(self):\r\n        return client.connect(**self.connection_kargs)\r\n\r\n   if __name__ == \"__main__\":\r\n       server = SplunkClient(HOST, PORT, USERNAME, PASSWORD).connect()\r\n       for app in server.apps:\r\n           print(app.name)\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/172", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/172/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/172/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/172", "id": 228648291, "node_id": "MDU6SXNzdWUyMjg2NDgyOTE=", "number": 172, "title": "Failed to create an input for a user without admin_all_objects role", "user": {"login": "vergnes", "id": 1203818, "node_id": "MDQ6VXNlcjEyMDM4MTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1203818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vergnes", "html_url": "https://github.com/vergnes", "followers_url": "https://api.github.com/users/vergnes/followers", "following_url": "https://api.github.com/users/vergnes/following{/other_user}", "gists_url": "https://api.github.com/users/vergnes/gists{/gist_id}", "starred_url": "https://api.github.com/users/vergnes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vergnes/subscriptions", "organizations_url": "https://api.github.com/users/vergnes/orgs", "repos_url": "https://api.github.com/users/vergnes/repos", "events_url": "https://api.github.com/users/vergnes/events{/privacy}", "received_events_url": "https://api.github.com/users/vergnes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-15T08:58:44Z", "updated_at": "2018-02-28T22:05:44Z", "closed_at": "2018-02-23T18:36:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "SDK version: 1.5.0 (but I think 1.6.x should be affected according to code)\r\nPlatform version: Linux\r\nFramework version: 2.7.9\r\nSplunk version: 6.4, 6.5\r\n\r\nIf a user does not have the role admin_all_objects, he cannot create an input using the API: `service.inputs.create(\"my_input_name\", \"my_input_type\" , **my_input_properties)`\r\nIn that case, a HTTP error will be raised (404) because in https://github.com/splunk/splunk-sdk-python/blob/master/splunklib/client.py#L2388\r\nIf a create link cannot be found, it is assumed it is a sub-resource which is incorrect because it also depends on user's capabilities.\r\n\r\n**How to reproduce**\r\n- create a role having only the capability to create a modular input\r\n- create a user having this new role\r\n- use the SDK service object to create a new input using  service.inputs.create(\"my_input_name\", \"my_input_type\" , **my_input_properties)\r\n\r\n**Expected behavior**\r\n - user having the capability to create a modular input should be able to create a new one even though he hasn't the admin_all_objects role", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/170", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/170/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/170/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/170", "id": 218151218, "node_id": "MDU6SXNzdWUyMTgxNTEyMTg=", "number": 170, "title": "UnicodeDecodeError: invalid continuation byte", "user": {"login": "doksu", "id": 10621730, "node_id": "MDQ6VXNlcjEwNjIxNzMw", "avatar_url": "https://avatars0.githubusercontent.com/u/10621730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doksu", "html_url": "https://github.com/doksu", "followers_url": "https://api.github.com/users/doksu/followers", "following_url": "https://api.github.com/users/doksu/following{/other_user}", "gists_url": "https://api.github.com/users/doksu/gists{/gist_id}", "starred_url": "https://api.github.com/users/doksu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doksu/subscriptions", "organizations_url": "https://api.github.com/users/doksu/orgs", "repos_url": "https://api.github.com/users/doksu/repos", "events_url": "https://api.github.com/users/doksu/events{/privacy}", "received_events_url": "https://api.github.com/users/doksu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 135642, "node_id": "MDU6TGFiZWwxMzU2NDI=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-03-30T10:27:37Z", "updated_at": "2018-04-26T20:36:22Z", "closed_at": "2018-04-26T20:36:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I iterate over events like this using the SDK:\r\n\r\n    for event in events:\r\n\r\nand an event field contains: TELEF\ufffdNICA , it raises the following:\r\n\r\n    UnicodeDecodeError at \"/opt/splunk/etc/apps/app_name/bin/splunklib/searchcommands/search_command.py\", line 822 : 'utf8' codec can't decode byte 0xd4 in position 5: invalid continuation byte ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/168", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/168/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/168/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/168", "id": 201789543, "node_id": "MDU6SXNzdWUyMDE3ODk1NDM=", "number": 168, "title": "Performance issue to delete/update an input", "user": {"login": "cheneysplunk", "id": 11847857, "node_id": "MDQ6VXNlcjExODQ3ODU3", "avatar_url": "https://avatars2.githubusercontent.com/u/11847857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cheneysplunk", "html_url": "https://github.com/cheneysplunk", "followers_url": "https://api.github.com/users/cheneysplunk/followers", "following_url": "https://api.github.com/users/cheneysplunk/following{/other_user}", "gists_url": "https://api.github.com/users/cheneysplunk/gists{/gist_id}", "starred_url": "https://api.github.com/users/cheneysplunk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cheneysplunk/subscriptions", "organizations_url": "https://api.github.com/users/cheneysplunk/orgs", "repos_url": "https://api.github.com/users/cheneysplunk/repos", "events_url": "https://api.github.com/users/cheneysplunk/events{/privacy}", "received_events_url": "https://api.github.com/users/cheneysplunk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 135641, "node_id": "MDU6TGFiZWwxMzU2NDE=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/enhancement", "name": "enhancement", "color": "02e10c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-19T08:07:03Z", "updated_at": "2019-05-16T20:31:18Z", "closed_at": "2019-05-16T20:31:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I want to delete one data input, I have to list all of inputs, filter them out, and delete one. It has big performance impact when there are many data inputs in my Splunk ENV, even if I already know the data input type & name.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/165", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/165/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/165/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/165", "id": 194835384, "node_id": "MDU6SXNzdWUxOTQ4MzUzODQ=", "number": 165, "title": "search_command.py: Failed to parse transport header", "user": {"login": "serj-p", "id": 2565455, "node_id": "MDQ6VXNlcjI1NjU0NTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2565455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/serj-p", "html_url": "https://github.com/serj-p", "followers_url": "https://api.github.com/users/serj-p/followers", "following_url": "https://api.github.com/users/serj-p/following{/other_user}", "gists_url": "https://api.github.com/users/serj-p/gists{/gist_id}", "starred_url": "https://api.github.com/users/serj-p/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/serj-p/subscriptions", "organizations_url": "https://api.github.com/users/serj-p/orgs", "repos_url": "https://api.github.com/users/serj-p/repos", "events_url": "https://api.github.com/users/serj-p/events{/privacy}", "received_events_url": "https://api.github.com/users/serj-p/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-12-11T14:41:28Z", "updated_at": "2018-02-23T18:49:54Z", "closed_at": "2018-02-23T18:49:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I run the basic example of FilterCommand I am getting this error when enable \r\n\r\n```enableheader = true```\r\nor\r\n```passauth = true```\r\n\r\nin commands.conf for this command. \r\n\r\n\r\n\r\n```\r\nExternal search command 'filter' returned error code 1. Script output = \"'splunkVersion:6.5.1\\n' chunked 1.0,244,0 {\"inspector\":{\"messages\":[[\"ERROR\",\"RuntimeError at \\\"/Applications/Splunk/etc/apps/App/bin/splunk-sdk/splunklib/searchcommands/search_command.py\\\", line 858 : Failed to parse transport header: splunkVersion:6.5.1\\n\"]]},\"finished\":true}\"\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/164", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/164/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/164/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/164", "id": 193049092, "node_id": "MDU6SXNzdWUxOTMwNDkwOTI=", "number": 164, "title": "Entity update support", "user": {"login": "liketic", "id": 3806117, "node_id": "MDQ6VXNlcjM4MDYxMTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3806117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liketic", "html_url": "https://github.com/liketic", "followers_url": "https://api.github.com/users/liketic/followers", "following_url": "https://api.github.com/users/liketic/following{/other_user}", "gists_url": "https://api.github.com/users/liketic/gists{/gist_id}", "starred_url": "https://api.github.com/users/liketic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liketic/subscriptions", "organizations_url": "https://api.github.com/users/liketic/orgs", "repos_url": "https://api.github.com/users/liketic/repos", "events_url": "https://api.github.com/users/liketic/events{/privacy}", "received_events_url": "https://api.github.com/users/liketic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-12-02T07:08:08Z", "updated_at": "2016-12-06T00:22:01Z", "closed_at": "2016-12-06T00:22:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi guys,\r\n\r\nSeems like some Entities such as StoragePasswords are exposed ```update``` API but I cannot find it in sdk. So do we have any plan to add it? :relaxed:\r\n\r\nThanks.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/161", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/161/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/161/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/161", "id": 186447433, "node_id": "MDU6SXNzdWUxODY0NDc0MzM=", "number": 161, "title": "Custom search command script run in four different processes. ", "user": {"login": "matutter", "id": 2701379, "node_id": "MDQ6VXNlcjI3MDEzNzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/2701379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matutter", "html_url": "https://github.com/matutter", "followers_url": "https://api.github.com/users/matutter/followers", "following_url": "https://api.github.com/users/matutter/following{/other_user}", "gists_url": "https://api.github.com/users/matutter/gists{/gist_id}", "starred_url": "https://api.github.com/users/matutter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matutter/subscriptions", "organizations_url": "https://api.github.com/users/matutter/orgs", "repos_url": "https://api.github.com/users/matutter/repos", "events_url": "https://api.github.com/users/matutter/events{/privacy}", "received_events_url": "https://api.github.com/users/matutter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2016-11-01T02:16:40Z", "updated_at": "2018-02-23T18:52:00Z", "closed_at": "2018-02-23T18:52:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been writing a custom search command using the ```GeneratingCommand``` base. However I've noticed a lot of weird activity because my actual app does some async-things. I've finally determined that every time I run the command it runs the script in 4 separate processes but only returns the results from the last process to be spawned. Running the command in 4 times for 1 use is unexpected behavior and really is causing some issues developing new apps.\r\n\r\n`splunk --version` ` Splunk 6.5.0 (build 59c8927def0f)` \r\n`uname -a` `Linux vm 3.10.0-327.36.2.el7.x86_64 #1 SMP Mon Oct 10 23:08:37 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux`\r\n\r\nBelow I'll paste a modified version of your sample ```GenerateTextCommand```, anything I'm not including is just directly from this SDK. \r\n\r\ngeneratetext.py\r\n```python\r\nfrom __future__ import absolute_import, division, print_function, unicode_literals\r\nimport app\r\n\r\nfrom console import Console as TTY\r\n\r\nfrom splunklib.searchcommands import dispatch, GeneratingCommand, Configuration, Option, validators\r\nimport sys\r\nimport time\r\n\r\nconsole = TTY()\r\n\r\n@Configuration(streaming=True)\r\nclass GenerateTextCommand(GeneratingCommand):\r\n\r\n  count = Option(require=True, validate=validators.Integer(0))\r\n  text = Option(require=True)\r\n\r\n  def __init__(self):\r\n    console.log('GenerateTextCommand.__init__')\r\n    super(GenerateTextCommand, self).__init__()\r\n\r\n  def generate(self):\r\n    text = self.text + console.pid\r\n    console.log('GenerateTextCommand.generate')\r\n    for i in range(1, self.count + 1):\r\n      console.log('GenerateTextCommand.generate[yield]')\r\n      yield {'_serial': i, '_time': time.time(), '_raw': unicode(i) + '. ' + text}\r\n\r\ndispatch(GenerateTextCommand, sys.argv, sys.stdin, sys.stdout, __name__)\r\n```\r\n\r\nThere is one small custom class I wrote to see the pids and log directly to my terminal's TTY because initially I thought it was a weird artifact with the SDK's use of logging. \r\n```python\r\nimport sys, os, datetime\r\n\r\ndateFmt = \"%l:%M:%S\"\r\nlogFile = '/dev/pts/2'\r\n\r\nclass Console:\r\n\r\n  def __init__(self):\r\n    self.fd = open(logFile, 'a+')\r\n    self.pid = str(os.getpid())\r\n\r\n  def log(self, *argv):\r\n    msg = \" \".join([str(p) for p in argv]) +'\\n'\r\n    ts = datetime.datetime.now().strftime(dateFmt)\r\n    pid = self.pid\r\n    if self.fd:\r\n      self.fd.write(pid + '|' + ts + ' | ' + msg)\r\n```\r\n\r\nI'm running it with the following shell script\r\n```bash\r\n#!/bin/bash\r\nsplunk search \"| generatetext count=2 text=xxx\" -preview true -app searchcommands_app\r\n```\r\n\r\nThe output is below, notice all the different PIDS\r\n```\r\n22218|10:08:50 | GenerateTextCommand.__init__\r\n22218|10:08:50 | GenerateTextCommand.generate\r\n22218|10:08:50 | GenerateTextCommand.generate[yield]\r\n22218|10:08:50 | GenerateTextCommand.generate[yield]\r\n22224|10:08:50 | GenerateTextCommand.__init__\r\n22224|10:08:50 | GenerateTextCommand.generate\r\n22224|10:08:50 | GenerateTextCommand.generate[yield]\r\n22224|10:08:50 | GenerateTextCommand.generate[yield]\r\n22230|10:08:50 | GenerateTextCommand.__init__\r\n22230|10:08:50 | GenerateTextCommand.generate\r\n22230|10:08:50 | GenerateTextCommand.generate[yield]\r\n22230|10:08:50 | GenerateTextCommand.generate[yield]\r\n22243|10:08:50 | GenerateTextCommand.__init__\r\n22243|10:08:50 | GenerateTextCommand.generate\r\n22243|10:08:50 | GenerateTextCommand.generate[yield]\r\n22243|10:08:50 | GenerateTextCommand.generate[yield]\r\n1. xxx22243\r\n2. xxx22243\r\n```\r\n\r\nIs this expected behavior? If so why would Splunk need to run the command 4 times and only output the results of 1. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/157", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/157/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/157/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/157", "id": 181356339, "node_id": "MDU6SXNzdWUxODEzNTYzMzk=", "number": 157, "title": "Documentation: Usage for each example script", "user": {"login": "sriramb12", "id": 9967551, "node_id": "MDQ6VXNlcjk5Njc1NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/9967551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sriramb12", "html_url": "https://github.com/sriramb12", "followers_url": "https://api.github.com/users/sriramb12/followers", "following_url": "https://api.github.com/users/sriramb12/following{/other_user}", "gists_url": "https://api.github.com/users/sriramb12/gists{/gist_id}", "starred_url": "https://api.github.com/users/sriramb12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sriramb12/subscriptions", "organizations_url": "https://api.github.com/users/sriramb12/orgs", "repos_url": "https://api.github.com/users/sriramb12/repos", "events_url": "https://api.github.com/users/sriramb12/events{/privacy}", "received_events_url": "https://api.github.com/users/sriramb12/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 135643, "node_id": "MDU6TGFiZWwxMzU2NDM=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/docs", "name": "docs", "color": "e102d8", "default": false, "description": null}, {"id": 135641, "node_id": "MDU6TGFiZWwxMzU2NDE=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/enhancement", "name": "enhancement", "color": "02e10c", "default": true, "description": null}, {"id": 135644, "node_id": "MDU6TGFiZWwxMzU2NDQ=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/samples", "name": "samples", "color": "02d7e1", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-06T08:46:38Z", "updated_at": "2018-02-23T18:53:39Z", "closed_at": "2018-02-23T18:53:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "It took some time for me to understand how to run a search with certain filters and output filters. \nA couple of examples should be embedded in --help option, to make life easier. Ex:\n\nTo pull alerts from a host for last 5 minutes:\n./search.py \"search sender_ip=<ip> earliest=-5m \nTo pull alerts from a host for last 2 hours:\n./search.py \"search sender_ip=<ip> earliest=-2h\n\nA few examples with different output formatting options also\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/156", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/156/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/156/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/156", "id": 179221305, "node_id": "MDU6SXNzdWUxNzkyMjEzMDU=", "number": 156, "title": "Instructions for running the test suite", "user": {"login": "boxed", "id": 332428, "node_id": "MDQ6VXNlcjMzMjQyOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/332428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boxed", "html_url": "https://github.com/boxed", "followers_url": "https://api.github.com/users/boxed/followers", "following_url": "https://api.github.com/users/boxed/following{/other_user}", "gists_url": "https://api.github.com/users/boxed/gists{/gist_id}", "starred_url": "https://api.github.com/users/boxed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boxed/subscriptions", "organizations_url": "https://api.github.com/users/boxed/orgs", "repos_url": "https://api.github.com/users/boxed/repos", "events_url": "https://api.github.com/users/boxed/events{/privacy}", "received_events_url": "https://api.github.com/users/boxed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-26T12:58:18Z", "updated_at": "2016-10-12T14:51:30Z", "closed_at": "2016-10-06T15:23:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "The readme has some descriptions for running the test suite, but when I followed them with splunk lite many tests failed with what looked like failures because I needed the enterprise version... that's a guess obviously.\n\nThe travis file uses docker, but I didn't manage to get that working either. I got the image running but couldn't connect to it. Since I've never really worked with docker I don't know what I'm doing here.\n\n(I was looking at helping out with a proper tox target and fixing python3 support via python-modernize but I'm giving up for the time being)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/155", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/155/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/155/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/155", "id": 173634551, "node_id": "MDU6SXNzdWUxNzM2MzQ1NTE=", "number": 155, "title": "SCP2 Commands ignoring restriction to local", "user": {"login": "justinatpnnl", "id": 14185753, "node_id": "MDQ6VXNlcjE0MTg1NzUz", "avatar_url": "https://avatars2.githubusercontent.com/u/14185753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justinatpnnl", "html_url": "https://github.com/justinatpnnl", "followers_url": "https://api.github.com/users/justinatpnnl/followers", "following_url": "https://api.github.com/users/justinatpnnl/following{/other_user}", "gists_url": "https://api.github.com/users/justinatpnnl/gists{/gist_id}", "starred_url": "https://api.github.com/users/justinatpnnl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justinatpnnl/subscriptions", "organizations_url": "https://api.github.com/users/justinatpnnl/orgs", "repos_url": "https://api.github.com/users/justinatpnnl/repos", "events_url": "https://api.github.com/users/justinatpnnl/events{/privacy}", "received_events_url": "https://api.github.com/users/justinatpnnl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-08-28T07:49:15Z", "updated_at": "2017-09-29T10:12:30Z", "closed_at": "2017-09-29T10:12:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I created a generating search that pulls in events from a rest api.  Everything works perfectly with SCP2 when testing on my dev box, but when deploying in a distributed environment I get an error from each of my indexers that it can't make a connection to the rest api (internet access blocked as intended).\n\nConfigurations tried:\n- Added `local=true` to _commands.conf_\n- Added `local=true` to `@configuration()` within the command itself (old method)\n- Added `type='streaming',distributed=False` to `@configuration()`  (scpv2 method according to docs)\n\nAll of these still gave me errors on my indexers.  If I use `splunk_server=local` with my command from the web ui, it does make it stay local as expected.  All of this seems to run contrary to the docs which state that \"By default generating commands are configured to run locally in the streams pipeline\".\n\nA side note, there appears to be some incomplete commands.conf instructions for setting up distributed options in commands.conf:\nhttp://docs.splunk.com/DocumentationStatic/PythonSDK/1.6.0/searchcommands.html#splunklib.searchcommands.GeneratingCommand\n\n**SCP 2**\n1. Add this configuration setting to your code\n2. You are good to go; no need to restart Splunk\n\nFor now I have reverted to SCP1 and local=True is working as expected.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/154", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/154/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/154/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/154", "id": 171870255, "node_id": "MDU6SXNzdWUxNzE4NzAyNTU=", "number": 154, "title": "Splunk-sdk-python Installation failed", "user": {"login": "sunnyanjani", "id": 6361547, "node_id": "MDQ6VXNlcjYzNjE1NDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/6361547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunnyanjani", "html_url": "https://github.com/sunnyanjani", "followers_url": "https://api.github.com/users/sunnyanjani/followers", "following_url": "https://api.github.com/users/sunnyanjani/following{/other_user}", "gists_url": "https://api.github.com/users/sunnyanjani/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunnyanjani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunnyanjani/subscriptions", "organizations_url": "https://api.github.com/users/sunnyanjani/orgs", "repos_url": "https://api.github.com/users/sunnyanjani/repos", "events_url": "https://api.github.com/users/sunnyanjani/events{/privacy}", "received_events_url": "https://api.github.com/users/sunnyanjani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-18T10:34:58Z", "updated_at": "2016-08-20T08:37:30Z", "closed_at": "2016-08-20T08:37:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "While trying to install splunk-sdk-python ON Windows 7 64-bit. I have followed the approaches suggested in [http://dev.splunk.com/view/python-sdk/SP-CAAAEDG](url)\n1. Using pip on windows.\nCommand used: `python.exe -m pip install splunk-sdk-python`\nError: print \"Could not import coverage. Please install it and try again\"\nSyntaxError: Missing parentheses in call to 'print'.\n2. Installing Python egg from pip.\nSame error persists.\n3. Cloning Splunk-sdk-python from git.\nAfter downloading the zip from github and extracting it.\nRunning the command: `python setup.py` throws the same error.\n![splunk-sdk-python error](https://cloud.githubusercontent.com/assets/6361547/17770804/4ee884c6-655d-11e6-8a2a-b81be50a1892.PNG)\nPlease help me in resolving the above issue.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/153", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/153/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/153/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/153", "id": 169773861, "node_id": "MDU6SXNzdWUxNjk3NzM4NjE=", "number": 153, "title": "Installation error", "user": {"login": "redforce123", "id": 12774132, "node_id": "MDQ6VXNlcjEyNzc0MTMy", "avatar_url": "https://avatars2.githubusercontent.com/u/12774132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/redforce123", "html_url": "https://github.com/redforce123", "followers_url": "https://api.github.com/users/redforce123/followers", "following_url": "https://api.github.com/users/redforce123/following{/other_user}", "gists_url": "https://api.github.com/users/redforce123/gists{/gist_id}", "starred_url": "https://api.github.com/users/redforce123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/redforce123/subscriptions", "organizations_url": "https://api.github.com/users/redforce123/orgs", "repos_url": "https://api.github.com/users/redforce123/repos", "events_url": "https://api.github.com/users/redforce123/events{/privacy}", "received_events_url": "https://api.github.com/users/redforce123/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 219071842, "node_id": "MDU6TGFiZWwyMTkwNzE4NDI=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/waiting%20for%20response", "name": "waiting for response", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-07T00:54:41Z", "updated_at": "2018-02-23T18:54:37Z", "closed_at": "2018-02-23T18:54:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am following the exact procedure for installing splunksdk but I am getting the following error,\n\nAfter cloning the file and unzipping it the folder I see splunklib folder but installation is telling splunklib doesn't exist\n\nCan anyone tell me why this is happening,\n\nC:\\Users\\bluebirs>python C:\\Softwares\\SplunkSDK\\splunk-sdk-python-master\\setup.py install\nrunning install\nrunning bdist_egg\nrunning egg_info\nwriting splunk_sdk.egg-info\\PKG-INFO\nwriting top-level names to splunk_sdk.egg-info\\top_level.txt\nwriting dependency_links to splunk_sdk.egg-info\\dependency_links.txt\nwarning: manifest_maker: standard file 'setup.py' not found\n\nerror: package directory 'splunklib' does not exist\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/151", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/151/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/151/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/151", "id": 168843684, "node_id": "MDU6SXNzdWUxNjg4NDM2ODQ=", "number": 151, "title": "Is maxinputs supported by SCP 2?", "user": {"login": "liketic", "id": 3806117, "node_id": "MDQ6VXNlcjM4MDYxMTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3806117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liketic", "html_url": "https://github.com/liketic", "followers_url": "https://api.github.com/users/liketic/followers", "following_url": "https://api.github.com/users/liketic/following{/other_user}", "gists_url": "https://api.github.com/users/liketic/gists{/gist_id}", "starred_url": "https://api.github.com/users/liketic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liketic/subscriptions", "organizations_url": "https://api.github.com/users/liketic/orgs", "repos_url": "https://api.github.com/users/liketic/repos", "events_url": "https://api.github.com/users/liketic/events{/privacy}", "received_events_url": "https://api.github.com/users/liketic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-02T09:50:46Z", "updated_at": "2016-11-30T01:46:09Z", "closed_at": "2016-11-30T01:45:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When I specifies maxinputs=50000 in metadata returned to splunk. I got a warning \n`WARN  ChunkedExternProcessor - Unsupported metadata field sent by custom search command: maxinputs`\n\nSeems SCP 1 supports maxinputs because I can find it in commands.conf.spec.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/141", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/141/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/141/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/141", "id": 151241582, "node_id": "MDU6SXNzdWUxNTEyNDE1ODI=", "number": 141, "title": "Python 2.6 Syntax Errors", "user": {"login": "Vye", "id": 361779, "node_id": "MDQ6VXNlcjM2MTc3OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/361779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vye", "html_url": "https://github.com/Vye", "followers_url": "https://api.github.com/users/Vye/followers", "following_url": "https://api.github.com/users/Vye/following{/other_user}", "gists_url": "https://api.github.com/users/Vye/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vye/subscriptions", "organizations_url": "https://api.github.com/users/Vye/orgs", "repos_url": "https://api.github.com/users/Vye/repos", "events_url": "https://api.github.com/users/Vye/events{/privacy}", "received_events_url": "https://api.github.com/users/Vye/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-04-26T21:18:32Z", "updated_at": "2016-05-19T21:05:58Z", "closed_at": "2016-05-19T21:05:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "The README states that Python 2.6 is supported. However, I am getting syntax errors, one of them being a dictionary comprehension which I know isn't supported in 2.6. I'm surprised no one has reported this yet. Did I do something wrong?\n\n```\nTraceback (most recent call last):\n  File \"/opt/splunk/etc/apps/ExampleApp/bin/downtime.py\", line 8, in <module>\n    from splunklib.searchcommands import \\\n  File \"/usr/lib/python2.6/site-packages/splunklib/searchcommands/__init__.py\", line 146, in <module>\n    from .decorators import *\n  File \"/usr/lib/python2.6/site-packages/splunklib/searchcommands/decorators.py\", line 23, in <module>\n    from .internals import ConfigurationSettingsType, json_encode_string\n  File \"/usr/lib/python2.6/site-packages/splunklib/searchcommands/internals.py\", line 766\n    metadata = str(''.join(self._iterencode_json({n: v for n, v in metadata if v is not None}, 0)))\n                                                         ^\nSyntaxError: invalid syntax\n```\n\nAfter fixing the above with `self._iterencode_json(dict((n, v) for n, v in metadata if v is not None), 0)` I got another syntax error:\n\n```\nTraceback (most recent call last):\n  File \"/opt/splunk/etc/apps/ExampleApp/bin/downtime.py\", line 8, in <module>\n    from splunklib.searchcommands import \\\n  File \"/usr/lib/python2.6/site-packages/splunklib/searchcommands/__init__.py\", line 149, in <module>\n    from .generating_command import GeneratingCommand\n  File \"/usr/lib/python2.6/site-packages/splunklib/searchcommands/generating_command.py\", line 20, in <module>\n    from .search_command import SearchCommand\n  File \"/usr/lib/python2.6/site-packages/splunklib/searchcommands/search_command.py\", line 576\n    n: ','.join(v) if isinstance(v, (list, tuple)) else v for n, v in self._configuration.iteritems()})\n                                                            ^\nSyntaxError: invalid syntax\n```\n\nThere may be more. Is splunk-sdk supposed to support Python 2.6? If so, can these errors be fixed? You can reproduce with the following code:\n\n``` python\nfrom splunklib.searchcommands import dispatch, StreamingCommand, Configuration, Option, validators\n```\n\nMy environment:\n\n```\n$ python -V\nPython 2.6.6\n$ pip freeze | grep splunk\nsplunk-sdk==1.5.0\n```\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/139", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/139/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/139/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/139", "id": 146480198, "node_id": "MDU6SXNzdWUxNDY0ODAxOTg=", "number": 139, "title": "Broken Link in `splunklib/searchcommands/search_command.py`", "user": {"login": "loganknecht", "id": 1308524, "node_id": "MDQ6VXNlcjEzMDg1MjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1308524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loganknecht", "html_url": "https://github.com/loganknecht", "followers_url": "https://api.github.com/users/loganknecht/followers", "following_url": "https://api.github.com/users/loganknecht/following{/other_user}", "gists_url": "https://api.github.com/users/loganknecht/gists{/gist_id}", "starred_url": "https://api.github.com/users/loganknecht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loganknecht/subscriptions", "organizations_url": "https://api.github.com/users/loganknecht/orgs", "repos_url": "https://api.github.com/users/loganknecht/repos", "events_url": "https://api.github.com/users/loganknecht/events{/privacy}", "received_events_url": "https://api.github.com/users/loganknecht/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "loganknecht", "id": 1308524, "node_id": "MDQ6VXNlcjEzMDg1MjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1308524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loganknecht", "html_url": "https://github.com/loganknecht", "followers_url": "https://api.github.com/users/loganknecht/followers", "following_url": "https://api.github.com/users/loganknecht/following{/other_user}", "gists_url": "https://api.github.com/users/loganknecht/gists{/gist_id}", "starred_url": "https://api.github.com/users/loganknecht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loganknecht/subscriptions", "organizations_url": "https://api.github.com/users/loganknecht/orgs", "repos_url": "https://api.github.com/users/loganknecht/repos", "events_url": "https://api.github.com/users/loganknecht/events{/privacy}", "received_events_url": "https://api.github.com/users/loganknecht/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "loganknecht", "id": 1308524, "node_id": "MDQ6VXNlcjEzMDg1MjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1308524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loganknecht", "html_url": "https://github.com/loganknecht", "followers_url": "https://api.github.com/users/loganknecht/followers", "following_url": "https://api.github.com/users/loganknecht/following{/other_user}", "gists_url": "https://api.github.com/users/loganknecht/gists{/gist_id}", "starred_url": "https://api.github.com/users/loganknecht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loganknecht/subscriptions", "organizations_url": "https://api.github.com/users/loganknecht/orgs", "repos_url": "https://api.github.com/users/loganknecht/repos", "events_url": "https://api.github.com/users/loganknecht/events{/privacy}", "received_events_url": "https://api.github.com/users/loganknecht/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2016-04-07T01:19:19Z", "updated_at": "2016-04-11T21:19:46Z", "closed_at": "2016-04-11T21:19:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Line 1037 has a broken link. Not sure where it should be redirecting to.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/134", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/134/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/134/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/134", "id": 133903615, "node_id": "MDU6SXNzdWUxMzM5MDM2MTU=", "number": 134, "title": "leading/trailing whitespaces in conf properties cannot be retrieved", "user": {"login": "niyue", "id": 27754, "node_id": "MDQ6VXNlcjI3NzU0", "avatar_url": "https://avatars0.githubusercontent.com/u/27754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/niyue", "html_url": "https://github.com/niyue", "followers_url": "https://api.github.com/users/niyue/followers", "following_url": "https://api.github.com/users/niyue/following{/other_user}", "gists_url": "https://api.github.com/users/niyue/gists{/gist_id}", "starred_url": "https://api.github.com/users/niyue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/niyue/subscriptions", "organizations_url": "https://api.github.com/users/niyue/orgs", "repos_url": "https://api.github.com/users/niyue/repos", "events_url": "https://api.github.com/users/niyue/events{/privacy}", "received_events_url": "https://api.github.com/users/niyue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-16T07:10:19Z", "updated_at": "2018-02-23T18:58:54Z", "closed_at": "2018-02-23T18:58:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Some conf file properties store leading/trailing white spaces in them, and these white spaces are meaningful in an application, and should be returned to the client as it is, however, current SDK will strip white spaces in these properties, which makes client application fails to work correctly.\n\nFor example:\n\n`\n[mystanza]\nmy_property = foobar _ _ _\\\n\n`\n\nIn this case, there are three trailing white spaces and one carriage return character for `my_property`. In some applications, these white spaces are significant, for example, they could be users' passcode and should be compared character by character, and the property value should be returned to client as it is.\n\nsdk version: 1.5.0\nplatform: Mac OS X 10.11.3\npython: 2.7.10\nsplunk version: 6.2.2\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/131", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/131/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/131/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/131", "id": 123052254, "node_id": "MDU6SXNzdWUxMjMwNTIyNTQ=", "number": 131, "title": "Expect KeyError, but raised AttributeError in client.py def __contains__(self, item)", "user": {"login": "ukison", "id": 13115251, "node_id": "MDQ6VXNlcjEzMTE1MjUx", "avatar_url": "https://avatars1.githubusercontent.com/u/13115251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ukison", "html_url": "https://github.com/ukison", "followers_url": "https://api.github.com/users/ukison/followers", "following_url": "https://api.github.com/users/ukison/following{/other_user}", "gists_url": "https://api.github.com/users/ukison/gists{/gist_id}", "starred_url": "https://api.github.com/users/ukison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ukison/subscriptions", "organizations_url": "https://api.github.com/users/ukison/orgs", "repos_url": "https://api.github.com/users/ukison/repos", "events_url": "https://api.github.com/users/ukison/events{/privacy}", "received_events_url": "https://api.github.com/users/ukison/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 135642, "node_id": "MDU6TGFiZWwxMzU2NDI=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-12-19T01:26:09Z", "updated_at": "2018-10-08T19:11:23Z", "closed_at": "2016-12-01T00:26:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "this is my code\n\n> job = service.jobs.create(query_to_run, *_kwargs_search)\n> while True:\n> job.refresh()\n>       stats = {\n>                 \"isDone\": job[\"isDone\"],\n>                 \"doneProgress\": float(job[\"doneProgress\"])_100,\n>                 \"scanCount\": int(job[\"scanCount\"]) if \"scanCount\" in job else 0,\n>                 \"eventCount\": int(job[\"eventCount\"]) if \"eventCount\" in job else 0,\n>                 \"resultCount\": int(job[\"resultCount\"]) if \"resultCount\" in job else 0\n>             }\n\nand this is the stack\n\n> File \"/Users/ukison/sqbu-github.cisco.com/ukison/debug-tools/splunk/GetSplunkResults.py\", line 95, in getSplunkResults\n>     \"scanCount\": int(job[\"scanCount\"]) if \"scanCount\" in job else 0,\n>   File \"/Library/Python/2.7/site-packages/splunklib/client.py\", line 885, in **contains**\n>     self[item]\n>   File \"/Library/Python/2.7/site-packages/splunklib/client.py\", line 928, in **getitem**\n>     return getattr(self, key)\n>   File \"/Library/Python/2.7/site-packages/splunklib/client.py\", line 923, in **getattr**\n>     raise AttributeError(key)\n> AttributeError: scanCount\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/129", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/129/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/129/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/129", "id": 120510756, "node_id": "MDU6SXNzdWUxMjA1MTA3NTY=", "number": 129, "title": "ExpatError when logging in", "user": {"login": "Qmando", "id": 3246990, "node_id": "MDQ6VXNlcjMyNDY5OTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/3246990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Qmando", "html_url": "https://github.com/Qmando", "followers_url": "https://api.github.com/users/Qmando/followers", "following_url": "https://api.github.com/users/Qmando/following{/other_user}", "gists_url": "https://api.github.com/users/Qmando/gists{/gist_id}", "starred_url": "https://api.github.com/users/Qmando/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Qmando/subscriptions", "organizations_url": "https://api.github.com/users/Qmando/orgs", "repos_url": "https://api.github.com/users/Qmando/repos", "events_url": "https://api.github.com/users/Qmando/events{/privacy}", "received_events_url": "https://api.github.com/users/Qmando/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-12-04T23:58:18Z", "updated_at": "2016-11-18T22:18:35Z", "closed_at": "2016-11-18T22:18:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "When attempting to use the API, I would receive the following error with python2.6 and 2.7\n\n```\nTraceback (most recent call last):\n  File \"examples/search.py\", line 115, in <module>\n    main(sys.argv[1:])\n  File \"examples/search.py\", line 72, in main\n    service = client.connect(**kwargs_splunk)\n  File \"examples/../splunklib/client.py\", line 321, in connect\n    s.login()\n  File \"examples/../splunklib/binding.py\", line 852, in login\n    session = XML(body).findtext(\"./sessionKey\")\n  File \"/usr/lib/python2.6/xml/etree/ElementTree.py\", line 964, in XML\n    return parser.close()\n  File \"/usr/lib/python2.6/xml/etree/ElementTree.py\", line 1254, in close\n    self._parser.Parse(\"\", 1) # end of data\nxml.parsers.expat.ExpatError: no element found: line 1, column 0\n```\n\nI discovered that the cause of this issue was https://github.com/splunk/splunk-sdk-python/blob/master/splunklib/binding.py#L1341. When the HTTPConnection object is closed, so is the HTTPResponse object, causing read() to return an empty string. Removing this line fixed the problem.\n\nI'm unsure of why this issue is affecting me and seemingly nobody else.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/125", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/125/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/125/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/125", "id": 116635895, "node_id": "MDU6SXNzdWUxMTY2MzU4OTU=", "number": 125, "title": "Failing to Import SSL", "user": {"login": "huntergregal", "id": 6970250, "node_id": "MDQ6VXNlcjY5NzAyNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6970250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huntergregal", "html_url": "https://github.com/huntergregal", "followers_url": "https://api.github.com/users/huntergregal/followers", "following_url": "https://api.github.com/users/huntergregal/following{/other_user}", "gists_url": "https://api.github.com/users/huntergregal/gists{/gist_id}", "starred_url": "https://api.github.com/users/huntergregal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huntergregal/subscriptions", "organizations_url": "https://api.github.com/users/huntergregal/orgs", "repos_url": "https://api.github.com/users/huntergregal/repos", "events_url": "https://api.github.com/users/huntergregal/events{/privacy}", "received_events_url": "https://api.github.com/users/huntergregal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-12T20:42:25Z", "updated_at": "2017-10-20T20:53:18Z", "closed_at": "2015-11-12T21:24:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "File \"test.py\", line 7, in <module>\n    from splunklib import client as client\n  File \"/opt/splunk/etc/apps/MYAPP/bin/splunklib/client.py\", line 70, in <module>\n    from binding import Context, HTTPError, AuthenticationError, namespace, UrlEncoded, _encode, _make_cookie_header\n  File \"/opt/splunk/etc/apps/MYAPP/bin/splunklib/binding.py\", line 30, in <module>\n    import ssl\n  File \"/opt/splunk/lib/python2.7/ssl.py\", line 97, in <module>\n    import _ssl             # if we can't import it, let the error propagate\nImportError: /opt/splunk/lib/python2.7/lib-dynload/_ssl.so: undefined symbol: SSLv2_method\n\nI cannot seem to overcome this issue. Any ideas?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/123", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/123/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/123/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/123", "id": 114961527, "node_id": "MDU6SXNzdWUxMTQ5NjE1Mjc=", "number": 123, "title": "SSL error connecting to splunk", "user": {"login": "i2sheri", "id": 6037123, "node_id": "MDQ6VXNlcjYwMzcxMjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6037123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/i2sheri", "html_url": "https://github.com/i2sheri", "followers_url": "https://api.github.com/users/i2sheri/followers", "following_url": "https://api.github.com/users/i2sheri/following{/other_user}", "gists_url": "https://api.github.com/users/i2sheri/gists{/gist_id}", "starred_url": "https://api.github.com/users/i2sheri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/i2sheri/subscriptions", "organizations_url": "https://api.github.com/users/i2sheri/orgs", "repos_url": "https://api.github.com/users/i2sheri/repos", "events_url": "https://api.github.com/users/i2sheri/events{/privacy}", "received_events_url": "https://api.github.com/users/i2sheri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-11-04T03:26:07Z", "updated_at": "2015-11-05T03:59:00Z", "closed_at": "2015-11-04T07:00:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using splunk framework app running in search head. This app connects to splunk and gives a service object if requireClientCertit set to false in splunk server.conf, but fails (App does not open) with below error if requireClientCert=true.\n\n```\nTraceback (most recent call last):\nFile \"/opt/myuser/splunk/etc/apps/framework/server/splunkdj/auth/backends.py\", line 70, in get_user\n server_info = service.info\nFile \"/opt/myuser/splunk/etc/apps/framework/contrib/splunk-sdk-python/splunklib/client.py\", line 409, in info\n response = self.get(\"server/info\")\nFile \"/opt/myuser/splunk/etc/apps/framework/contrib/splunk-sdk-python/splunklib/binding.py\", line 235, in wrapper\n return request_fun(self, *args, **kwargs)\nFile \"/opt/myuser/splunk/etc/apps/framework/contrib/splunk-sdk-python/splunklib/binding.py\", line 61, in new_f\n val = f(*args, **kwargs)\nFile \"/opt/myuser/splunk/etc/apps/framework/contrib/splunk-sdk-python/splunklib/binding.py\", line 574, in get\n response = self.http.get(path, self._auth_headers, **query)\nFile \"/opt/myuser/splunk/etc/apps/framework/contrib/splunk-sdk-python/splunklib/binding.py\", line 1044, in get\n return self.request(url, { 'method': \"GET\", 'headers': headers })\nFile \"/opt/myuser/splunk/etc/apps/framework/contrib/splunk-sdk-python/splunklib/binding.py\", line 1096, in request\n response = self.handler(url, message, **kwargs)\nFile \"/opt/myuser/splunk/etc/apps/framework/contrib/splunk-sdk-python/splunklib/binding.py\", line 1195, in request\n connection.request(method, path, body, head)\nFile \"/opt/myuser/splunk/lib/python2.7/httplib.py\", line 995, in request\n self._send_request(method, url, body, headers)\nFile \"/opt/myuser/splunk/lib/python2.7/httplib.py\", line 1029, in _send_request\n self.endheaders(body)\nFile \"/opt/myuser/splunk/lib/python2.7/httplib.py\", line 991, in endheaders\n self._send_output(message_body)\nFile \"/opt/myuser/splunk/lib/python2.7/httplib.py\", line 844, in _send_output\n self.send(msg)\nFile \"/opt/myuser/splunk/lib/python2.7/httplib.py\", line 806, in send\n self.connect()\nFile \"/opt/myuser/splunk/lib/python2.7/httplib.py\", line 1198, in connect\n self.sock = ssl.wrap_socket(sock, self.key_file, self.cert_file)\nFile \"/opt/myuser/splunk/lib/python2.7/ssl.py\", line 396, in wrap_socket\n ciphers=ciphers)\nFile \"/opt/myuser/splunk/lib/python2.7/ssl.py\", line 152, in __init__\n self.do_handshake()\nFile \"/opt/myuser/splunk/lib/python2.7/ssl.py\", line 314, in do_handshake\n self._sslobj.do_handshake()\nSSLError: [Errno 1] _ssl.c:533: error:14094410:SSL routines:SSL3_READ_BYTES:sslv3 alert handshake failure\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/122", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/122/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/122/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/122", "id": 112802760, "node_id": "MDU6SXNzdWUxMTI4MDI3NjA=", "number": 122, "title": "poor connection management results in errors with http connections that are kept alive", "user": {"login": "cjw296", "id": 632049, "node_id": "MDQ6VXNlcjYzMjA0OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/632049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjw296", "html_url": "https://github.com/cjw296", "followers_url": "https://api.github.com/users/cjw296/followers", "following_url": "https://api.github.com/users/cjw296/following{/other_user}", "gists_url": "https://api.github.com/users/cjw296/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjw296/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjw296/subscriptions", "organizations_url": "https://api.github.com/users/cjw296/orgs", "repos_url": "https://api.github.com/users/cjw296/repos", "events_url": "https://api.github.com/users/cjw296/events{/privacy}", "received_events_url": "https://api.github.com/users/cjw296/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 135642, "node_id": "MDU6TGFiZWwxMzU2NDI=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-10-22T13:25:16Z", "updated_at": "2015-11-22T21:50:52Z", "closed_at": "2015-11-22T21:50:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "This line can close the connection before the response has finished reading from it:\n\nhttps://github.com/splunk/splunk-sdk-python/blob/master/splunklib/binding.py#L1341\n\nThis happens when the connection has kept a reference to the response:\n\nhttps://hg.python.org/cpython/file/v2.7.5/Lib/httplib.py#l782\n\nThe conditions under which this case happen are covered by the code in HTTPResponse.begin (look for will_close):\n\nhttps://hg.python.org/cpython/file/v2.7.5/Lib/httplib.py#l402\n\nThe connection should not be closed in this way.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/120", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/120/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/120/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/120", "id": 110213635, "node_id": "MDU6SXNzdWUxMTAyMTM2MzU=", "number": 120, "title": "Not able to import DataBases", "user": {"login": "Siddharth-Chandran", "id": 6499447, "node_id": "MDQ6VXNlcjY0OTk0NDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/6499447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Siddharth-Chandran", "html_url": "https://github.com/Siddharth-Chandran", "followers_url": "https://api.github.com/users/Siddharth-Chandran/followers", "following_url": "https://api.github.com/users/Siddharth-Chandran/following{/other_user}", "gists_url": "https://api.github.com/users/Siddharth-Chandran/gists{/gist_id}", "starred_url": "https://api.github.com/users/Siddharth-Chandran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Siddharth-Chandran/subscriptions", "organizations_url": "https://api.github.com/users/Siddharth-Chandran/orgs", "repos_url": "https://api.github.com/users/Siddharth-Chandran/repos", "events_url": "https://api.github.com/users/Siddharth-Chandran/events{/privacy}", "received_events_url": "https://api.github.com/users/Siddharth-Chandran/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 219071842, "node_id": "MDU6TGFiZWwyMTkwNzE4NDI=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/waiting%20for%20response", "name": "waiting for response", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-07T12:20:29Z", "updated_at": "2015-10-07T16:41:52Z", "closed_at": "2015-10-07T16:41:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Am not able to import database libraries such as MySQLdb or SQLite in python scripts that is run using Splunk SDK or scripts run by Splunk during alerts.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/119", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/119/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/119/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/119", "id": 106465966, "node_id": "MDU6SXNzdWUxMDY0NjU5NjY=", "number": 119, "title": "None returned in _load_atom_entries", "user": {"login": "missing1984", "id": 1692592, "node_id": "MDQ6VXNlcjE2OTI1OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1692592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/missing1984", "html_url": "https://github.com/missing1984", "followers_url": "https://api.github.com/users/missing1984/followers", "following_url": "https://api.github.com/users/missing1984/following{/other_user}", "gists_url": "https://api.github.com/users/missing1984/gists{/gist_id}", "starred_url": "https://api.github.com/users/missing1984/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/missing1984/subscriptions", "organizations_url": "https://api.github.com/users/missing1984/orgs", "repos_url": "https://api.github.com/users/missing1984/repos", "events_url": "https://api.github.com/users/missing1984/events{/privacy}", "received_events_url": "https://api.github.com/users/missing1984/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 219071842, "node_id": "MDU6TGFiZWwyMTkwNzE4NDI=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/waiting%20for%20response", "name": "waiting for response", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-09-15T02:44:48Z", "updated_at": "2015-11-21T01:32:47Z", "closed_at": "2015-11-21T01:32:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "SDK 1.3.1\nclient.py\n\nwhen totalResults = 0, a empty array should be returned.. but \n\n``` python\n# Load an array of atom entries from the body of the given response\ndef _load_atom_entries(response):\n    r = _load_atom(response)\n    if 'feed' in r:\n        # Need this to handle a random case in the REST API\n        if r.feed.get('totalResults') == 0:   <<-- it's actually a string \"0\" instead of number 0\n            return []\n        entries = r.feed.get('entry', None)\n        if entries is None: return None\n        return entries if isinstance(entries, list) else [entries]\n    # Unlike most other endpoints, the jobs endpoint does not return\n    # its state wrapped in another element, but at the top level.\n    # For example, in XML, it returns <entry>...</entry> instead of\n    # <feed><entry>...</entry></feed>.\n    else:\n        entries = r.get('entry', None)\n        if entries is None: return None\n        return entries if isinstance(entries, list) else [entries]\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/117", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/117/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/117/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/117", "id": 102202495, "node_id": "MDU6SXNzdWUxMDIyMDI0OTU=", "number": 117, "title": "Don't override Authorization header or make token auth optional", "user": {"login": "sullivanmatt", "id": 1899714, "node_id": "MDQ6VXNlcjE4OTk3MTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1899714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sullivanmatt", "html_url": "https://github.com/sullivanmatt", "followers_url": "https://api.github.com/users/sullivanmatt/followers", "following_url": "https://api.github.com/users/sullivanmatt/following{/other_user}", "gists_url": "https://api.github.com/users/sullivanmatt/gists{/gist_id}", "starred_url": "https://api.github.com/users/sullivanmatt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sullivanmatt/subscriptions", "organizations_url": "https://api.github.com/users/sullivanmatt/orgs", "repos_url": "https://api.github.com/users/sullivanmatt/repos", "events_url": "https://api.github.com/users/sullivanmatt/events{/privacy}", "received_events_url": "https://api.github.com/users/sullivanmatt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-08-20T18:30:47Z", "updated_at": "2015-08-24T21:59:30Z", "closed_at": "2015-08-24T21:59:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In my fairly large environment, we need to be able to accept REST API requests from any IP on the Internet.  Instead of opening up the entirety of our Splunk API to 0.0.0.0/0, we instead front the requests with an nginx reverse proxy with a whitelist of allowed API users (which simply does a lookup in an htpasswd file).\n\nThis actually works quite well for most of our applications, but unfortunately is incompatible with the Splunk SDK for Python.  It seems that in all cases, the SDK prefers to get and use an auth token.  And this probably does make sense as a default behavior - my guess is that checking the user/pass on each request isn't particularly efficient.  But there are cases (and we're one of them!) where this is needed.\n\nAnyway, this wouldn't be a big issue if I could just pass in an Authorization header, but unfortunately Splunk nukes any Authorization headers that don't start with 'Splunk':\nhttps://github.com/splunk/splunk-sdk-python/blob/ac660726d92f9c41784f33fb451e67921e21527c/splunklib/binding.py#L516\n\nIn my opinion, it should only add 'Splunk' if the Authorization header doesn't already have 'Basic' present.\n\nIf I make a PR to change this behavior, would such a modification be acceptable?  In the future, I think the SDK could also benefit from simply having an option which disables using token auth on every request - I doubt I'm the first or last person to run into this issue.\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/116", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/116/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/116/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/116", "id": 99349358, "node_id": "MDU6SXNzdWU5OTM0OTM1OA==", "number": 116, "title": "RegexValidationValidator for search commands", "user": {"login": "glennblock", "id": 141124, "node_id": "MDQ6VXNlcjE0MTEyNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/141124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glennblock", "html_url": "https://github.com/glennblock", "followers_url": "https://api.github.com/users/glennblock/followers", "following_url": "https://api.github.com/users/glennblock/following{/other_user}", "gists_url": "https://api.github.com/users/glennblock/gists{/gist_id}", "starred_url": "https://api.github.com/users/glennblock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glennblock/subscriptions", "organizations_url": "https://api.github.com/users/glennblock/orgs", "repos_url": "https://api.github.com/users/glennblock/repos", "events_url": "https://api.github.com/users/glennblock/events{/privacy}", "received_events_url": "https://api.github.com/users/glennblock/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 147804028, "node_id": "MDU6TGFiZWwxNDc4MDQwMjg=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/in%20progress", "name": "in progress", "color": "d4c5f9", "default": false, "description": null}, {"id": 217138045, "node_id": "MDU6TGFiZWwyMTcxMzgwNDU=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/ready%20to%20be%20released", "name": "ready to be released", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-08-06T04:15:14Z", "updated_at": "2015-10-02T00:39:06Z", "closed_at": "2015-10-02T00:06:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently search commands have the RegularExpression validator which checks whether or not the value is a valid regular expression. This is useful for enforcing that the value that is provide is a valid regex.\n\nIt would also be nice to have a validator which is initialized with a regex that it uses to validate the value. For example you can provide a regex for an SSN.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/115", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/115/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/115/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/115", "id": 96801908, "node_id": "MDU6SXNzdWU5NjgwMTkwOA==", "number": 115, "title": "splunklib.searchcommands.splunk_csv.dict_reader raises KeyError when supports_multivalues=True", "user": {"login": "brattonc", "id": 11392644, "node_id": "MDQ6VXNlcjExMzkyNjQ0", "avatar_url": "https://avatars2.githubusercontent.com/u/11392644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brattonc", "html_url": "https://github.com/brattonc", "followers_url": "https://api.github.com/users/brattonc/followers", "following_url": "https://api.github.com/users/brattonc/following{/other_user}", "gists_url": "https://api.github.com/users/brattonc/gists{/gist_id}", "starred_url": "https://api.github.com/users/brattonc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brattonc/subscriptions", "organizations_url": "https://api.github.com/users/brattonc/orgs", "repos_url": "https://api.github.com/users/brattonc/repos", "events_url": "https://api.github.com/users/brattonc/events{/privacy}", "received_events_url": "https://api.github.com/users/brattonc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 135642, "node_id": "MDU6TGFiZWwxMzU2NDI=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 217138045, "node_id": "MDU6TGFiZWwyMTcxMzgwNDU=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/ready%20to%20be%20released", "name": "ready to be released", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-07-23T12:24:49Z", "updated_at": "2015-10-02T00:06:29Z", "closed_at": "2015-10-02T00:06:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "This error seems to occur because dict_reader.py populates the fieldnames property with only the non `__mv_*` field names, which causes `super(DictReader, self).next()` to return a `dict` where the `__mv_*` fields are grouped together in a single dictionary entry.\n\nExample:\n1. Splunk passes a set of field names to the custom command:\n   \n   ```\n   test1,test2,__mv_test1,__mv_test2\n   ```\n2. `splunk_csv.DictReader.fieldnames` gets called which results in:\n   \n   ```\n   csv.DictReader._fieldnames = [\"test1\", \"test2\",\"__mv_test1\",\"__mv_test2\"]\n   splunk_csv.DictReader.__fieldnames = [\"test1\", \"test2\"]\n   splunk_csv.DictReader.__mv_fieldnames = [(\"test1\",\"__mv_test1\"), (\"test2\",\"__mv_test2\")]\n   return __fieldnames\n   ```\n   \n   Note that `__fieldnames` is returned.\n3. `splunk_csv.DictReader.next` is called, which in turn calls `csv.DictReader.next` and reads an event from Splunk:\n   \n   ```\n   \"1 2 3\",\"9193\",\"$1$,$2$,$3$\",\n   ```\n4. `csv.DictReader.next` combines the event and `fieldnames` property...\n   \n   ```\n   d = dict(zip(self.fieldnames, row))\n   lf = len(self.fieldnames)\n   lr = len(row)\n   if lf < lr:\n       d[self.restkey] = row[lf:]\n   elif lf > lr:\n       for key in self.fieldnames[lr:]:\n           d[key] = self.restval\n   return d\n   ```\n   \n   Because this method uses `fieldnames`, `d` now contains:\n   \n   ```\n   [(\"test1\",\"1 2 3\"),(\"test2\",\"9193\"),(self.restkey,[\"$1$,$2$,$3$\",\"\"])]\n   ```\n5. `splunk_csv.DictReader.next` iterates over `self.__mv_fieldnames` and attempts to look up \"__mv_test1\" in the dictionary, which results in a KeyError.\n\nRunning Splunk 6.2.4\nPython SDK 1.3.1\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/114", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/114/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/114/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/114", "id": 96421049, "node_id": "MDU6SXNzdWU5NjQyMTA0OQ==", "number": 114, "title": "ResultsReader iterator error", "user": {"login": "bobwalden", "id": 3093146, "node_id": "MDQ6VXNlcjMwOTMxNDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3093146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobwalden", "html_url": "https://github.com/bobwalden", "followers_url": "https://api.github.com/users/bobwalden/followers", "following_url": "https://api.github.com/users/bobwalden/following{/other_user}", "gists_url": "https://api.github.com/users/bobwalden/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobwalden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobwalden/subscriptions", "organizations_url": "https://api.github.com/users/bobwalden/orgs", "repos_url": "https://api.github.com/users/bobwalden/repos", "events_url": "https://api.github.com/users/bobwalden/events{/privacy}", "received_events_url": "https://api.github.com/users/bobwalden/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 217138045, "node_id": "MDU6TGFiZWwyMTcxMzgwNDU=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/ready%20to%20be%20released", "name": "ready to be released", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-07-21T21:32:17Z", "updated_at": "2015-08-05T00:56:30Z", "closed_at": "2015-08-05T00:56:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using Splunk 6.2.1 and splunk-sdk-python 1.31\n\nthe following code throws an exception on the for loop:\n\n```\n    resultSet = job.events(**{\"offset\" : offset, \"count\" : total})\n    events = results.ResultsReader(resultSet)\n    for event in events:\n        print event[\"_raw\"]\n```\n\n+++++++++++++++++++++++++++++++++++++\nThrows exception:\n\nTraceback (most recent call last):\n  File \"monitor.py\", line 35, in <module>\n    for event in events:\n  File \"/opt/home/bob/splunk-sdk-python/splunklib/results.py\", line 205, in next\n    return self._gen.next()\n  File \"/opt/home/bob/splunk-sdk-python/splunklib/results.py\", line 249, in _parse_results\n    text = \"\".join(elem.itertext())\nAttributeError: itertext\n\n++++++++++++++++++++++++++++++++++++++\n\nthis is code from a classroom example that has been unchanged for at least a year. not sure if the upgrade of 6.2.0 to 6.2.1 or the new version of the sdk is the problem. the resultSet is verified--ie, the search results from the events() method is valid, contains normal data, etc.\n\nthis same error also happens if we let the job finish and then access results from the results() method.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/113", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/113/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/113/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/113", "id": 96095653, "node_id": "MDU6SXNzdWU5NjA5NTY1Mw==", "number": 113, "title": "validators.Set() and validators.OptionName() aren't fully implemented", "user": {"login": "kkirsche", "id": 947110, "node_id": "MDQ6VXNlcjk0NzExMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/947110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kkirsche", "html_url": "https://github.com/kkirsche", "followers_url": "https://api.github.com/users/kkirsche/followers", "following_url": "https://api.github.com/users/kkirsche/following{/other_user}", "gists_url": "https://api.github.com/users/kkirsche/gists{/gist_id}", "starred_url": "https://api.github.com/users/kkirsche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kkirsche/subscriptions", "organizations_url": "https://api.github.com/users/kkirsche/orgs", "repos_url": "https://api.github.com/users/kkirsche/repos", "events_url": "https://api.github.com/users/kkirsche/events{/privacy}", "received_events_url": "https://api.github.com/users/kkirsche/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-07-20T15:59:21Z", "updated_at": "2015-08-05T00:55:54Z", "closed_at": "2015-08-05T00:55:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\n\nI'm trying to use the Set validator to ensure that the input provided is in a list. I have defined the validator like so:\n\n``` python\nvalidate=validators.Set('geography', 'domain', 'zipcode', 'isp', 'asn', 'organization'))\n```\n\nYet when I call the command which houses this I get:\n\n```\nExternal search command 'custom_command' returned error code 1. Script output = \" ERROR \"NotImplementedError at \"\"/opt/splunk/etc/apps/custom_command/bin/splunklib/searchcommands/validators.py\"\", line 42 : \" \"\n```\n\nThis doesn't make sense considering your function definition for `Set`:\n\n``` python\nclass Set(Validator):\n    \"\"\" Validates set option values.\n\n    \"\"\"\n    def __init__(self, *args):\n        self.membership = args\n\n    def __call__(self, value):\n        if value is not None:\n            value = str(value)\n            if value not in self.membership:\n                raise ValueError('Unrecognized value: %s' % value)\n                return value\n```\n\nIs this error caused by something I'm doing wrong or is this an issue with the SDK? I couldn't find any documentation about your validators or proper usage of them.\n\nI have tried to pass a list instead of individual values as well but then the validator never looks inside the list (for example: `validate=validators.Set(['geography', 'domain', 'zipcode', 'isp', 'asn', 'organization']))`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/110", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/110/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/110/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/110", "id": 94398582, "node_id": "MDU6SXNzdWU5NDM5ODU4Mg==", "number": 110, "title": "Splunk Streaming Command dict_reader.py attempts to iterate over none", "user": {"login": "kkirsche", "id": 947110, "node_id": "MDQ6VXNlcjk0NzExMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/947110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kkirsche", "html_url": "https://github.com/kkirsche", "followers_url": "https://api.github.com/users/kkirsche/followers", "following_url": "https://api.github.com/users/kkirsche/following{/other_user}", "gists_url": "https://api.github.com/users/kkirsche/gists{/gist_id}", "starred_url": "https://api.github.com/users/kkirsche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kkirsche/subscriptions", "organizations_url": "https://api.github.com/users/kkirsche/orgs", "repos_url": "https://api.github.com/users/kkirsche/repos", "events_url": "https://api.github.com/users/kkirsche/events{/privacy}", "received_events_url": "https://api.github.com/users/kkirsche/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 217138045, "node_id": "MDU6TGFiZWwyMTcxMzgwNDU=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/ready%20to%20be%20released", "name": "ready to be released", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-07-10T21:35:22Z", "updated_at": "2015-08-05T00:57:00Z", "closed_at": "2015-08-05T00:57:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey guys,\n\nFor some reason Splunk trys to iterate over none and throws a `TypeError: 'NoneType' object is not iterable` in https://github.com/splunk/splunk-sdk-python/blob/master/splunklib/searchcommands/splunk_csv/dict_reader.py#L38. This is only reproducible in in certain environments it seems (happens in our production distributed cluster(s) but not in local test VMs). This causes the command to still execute but throws an error on the screen cause Splunk sent it no data.\n\nI understand that it _shouldn't_ do this yet still throws the error even though it enriches the data correctly. We were able to duplicate this occurrence with both a custom command and with the `countmatches` example code in our production testbed\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/108", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/108/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/108/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/108", "id": 91329539, "node_id": "MDU6SXNzdWU5MTMyOTUzOQ==", "number": 108, "title": "Getinfo fails in examples", "user": {"login": "kkirsche", "id": 947110, "node_id": "MDQ6VXNlcjk0NzExMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/947110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kkirsche", "html_url": "https://github.com/kkirsche", "followers_url": "https://api.github.com/users/kkirsche/followers", "following_url": "https://api.github.com/users/kkirsche/following{/other_user}", "gists_url": "https://api.github.com/users/kkirsche/gists{/gist_id}", "starred_url": "https://api.github.com/users/kkirsche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kkirsche/subscriptions", "organizations_url": "https://api.github.com/users/kkirsche/orgs", "repos_url": "https://api.github.com/users/kkirsche/repos", "events_url": "https://api.github.com/users/kkirsche/events{/privacy}", "received_events_url": "https://api.github.com/users/kkirsche/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-06-26T18:37:36Z", "updated_at": "2015-06-26T20:35:40Z", "closed_at": "2015-06-26T19:57:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\n\nI tried to use the example search commands app to begin developing my own applications for splunk. Sadly, the example provided fails with the error message:\n\n```\nError in 'script': Getinfo probe failed for external search command 'generatehello'\nThe search job has failed due to an error. You may be able view the job in the Job Inspector. \n```\n\nAny idea why the examples don't work?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/107", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/107/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/107/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/107", "id": 91290728, "node_id": "MDU6SXNzdWU5MTI5MDcyOA==", "number": 107, "title": "test_binding", "user": {"login": "rhaarm", "id": 4397436, "node_id": "MDQ6VXNlcjQzOTc0MzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/4397436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhaarm", "html_url": "https://github.com/rhaarm", "followers_url": "https://api.github.com/users/rhaarm/followers", "following_url": "https://api.github.com/users/rhaarm/following{/other_user}", "gists_url": "https://api.github.com/users/rhaarm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhaarm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhaarm/subscriptions", "organizations_url": "https://api.github.com/users/rhaarm/orgs", "repos_url": "https://api.github.com/users/rhaarm/repos", "events_url": "https://api.github.com/users/rhaarm/events{/privacy}", "received_events_url": "https://api.github.com/users/rhaarm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-26T16:19:21Z", "updated_at": "2015-06-26T17:17:32Z", "closed_at": "2015-06-26T17:17:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\n\nI just wanted to check if these were known issues, I get these no matter which server I point them at. The assertEqual is looking for a Bad Request (400) but a Server Internal Error (500) is returned.\n\n```\n$ python test_binding.py\n...............................................EEEEE\n======================================================================\nERROR: test_create_user (__main__.TestUserManipulation)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test_binding.py\", line 210, in setUp\n    self.assertEqual(e.status, 400)\nAssertionError: 500 != 400\n\n======================================================================\nERROR: test_post_with_body_behaves (__main__.TestUserManipulation)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test_binding.py\", line 210, in setUp\n    self.assertEqual(e.status, 400)\nAssertionError: 500 != 400\n\n======================================================================\nERROR: test_post_with_get_arguments_to_receivers_stream (__main__.TestUserManipulation)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test_binding.py\", line 210, in setUp\n    self.assertEqual(e.status, 400)\nAssertionError: 500 != 400\n\n======================================================================\nERROR: test_update_user (__main__.TestUserManipulation)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test_binding.py\", line 210, in setUp\n    self.assertEqual(e.status, 400)\nAssertionError: 500 != 400\n\n======================================================================\nERROR: test_user_without_role_fails (__main__.TestUserManipulation)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test_binding.py\", line 210, in setUp\n    self.assertEqual(e.status, 400)\nAssertionError: 500 != 400\n\n----------------------------------------------------------------------\nRan 52 tests in 9.296s\n\nFAILED (errors=5)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/105", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/105/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/105/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/105", "id": 90773181, "node_id": "MDU6SXNzdWU5MDc3MzE4MQ==", "number": 105, "title": "SearchCommand", "user": {"login": "rhaarm", "id": 4397436, "node_id": "MDQ6VXNlcjQzOTc0MzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/4397436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhaarm", "html_url": "https://github.com/rhaarm", "followers_url": "https://api.github.com/users/rhaarm/followers", "following_url": "https://api.github.com/users/rhaarm/following{/other_user}", "gists_url": "https://api.github.com/users/rhaarm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhaarm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhaarm/subscriptions", "organizations_url": "https://api.github.com/users/rhaarm/orgs", "repos_url": "https://api.github.com/users/rhaarm/repos", "events_url": "https://api.github.com/users/rhaarm/events{/privacy}", "received_events_url": "https://api.github.com/users/rhaarm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 188334, "node_id": "MDU6TGFiZWwxODgzMzQ=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/tests", "name": "tests", "color": "0b02e1", "default": false, "description": null}, {"id": 219071842, "node_id": "MDU6TGFiZWwyMTkwNzE4NDI=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/waiting%20for%20response", "name": "waiting for response", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-06-24T20:29:06Z", "updated_at": "2015-11-21T01:32:10Z", "closed_at": "2015-11-21T01:32:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried to see if there was an issue already for this, but couldn't find one. I'm seeing a lot of errors in the test runs with errors coming from search_command.py & SearchCommand. After using PyCharm inspection it looks like there is type(self).name being referenced but never declared. I would edit this myself, but not sure what the self.name is referencing, maybe SearchCommand.__name__?\n\n``` python\n    def __str__(self):\n        values = [type(self).name, str(self.options)] + self.fieldnames\n        text = ' '.join([value for value in values if len(value) > 0])\n        return text\n```\n\nAlso it maybe safe to move these from __init__ into the class declaration, since the displayed stacktrace shows that the self.option cannot find self._option_view.\n\n``` python\nclass SearchCommand(object): \n       def __init__(self):\n              self._configuration = None\n              self._fieldnames = None\n              self._option_view = None\n              self._output_file = None\n              self._search_results_info = None\n              self._service = None\n```\n\n``` python\nclass SearchCommand(object): \n       _configuration = None\n        _fieldnames = None\n        _option_view = None\n        _output_file = None\n        _search_results_info = None\n        _service = None\n\n       def __init__(self):\n```\n\n```\nLogged from file search_command.py, line 60\n.Traceback (most recent call last):\n  File \"D:\\Python27\\Lib\\logging\\__init__.py\", line 859, in emit\n    msg = self.format(record)\n  File \"D:\\Python27\\Lib\\logging\\__init__.py\", line 732, in format\n    return fmt.format(record)\n  File \"D:\\Python27\\Lib\\logging\\__init__.py\", line 471, in format\n    record.message = record.getMessage()\n  File \"D:\\Python27\\Lib\\logging\\__init__.py\", line 335, in getMessage\n    msg = msg % self.args\n  File \"d:\\code\\splunk-sdk-python\\splunklib\\searchcommands\\search_command.py\", line 78, in __str__\n    values = [type(self).name, str(self.options)] + self.fieldnames\n  File \"d:\\code\\splunk-sdk-python\\splunklib\\searchcommands\\search_command.py\", line 164, in options\n    if self._option_view is None:\nAttributeError: 'StubbedGeneratingCommand' object has no attribute '_option_view'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/102", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/102/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/102/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/102", "id": 89562680, "node_id": "MDU6SXNzdWU4OTU2MjY4MA==", "number": 102, "title": "Test Suite Doesn't Pass", "user": {"login": "meunierd", "id": 37849, "node_id": "MDQ6VXNlcjM3ODQ5", "avatar_url": "https://avatars2.githubusercontent.com/u/37849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meunierd", "html_url": "https://github.com/meunierd", "followers_url": "https://api.github.com/users/meunierd/followers", "following_url": "https://api.github.com/users/meunierd/following{/other_user}", "gists_url": "https://api.github.com/users/meunierd/gists{/gist_id}", "starred_url": "https://api.github.com/users/meunierd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meunierd/subscriptions", "organizations_url": "https://api.github.com/users/meunierd/orgs", "repos_url": "https://api.github.com/users/meunierd/repos", "events_url": "https://api.github.com/users/meunierd/events{/privacy}", "received_events_url": "https://api.github.com/users/meunierd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 188334, "node_id": "MDU6TGFiZWwxODgzMzQ=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/tests", "name": "tests", "color": "0b02e1", "default": false, "description": null}, {"id": 219071842, "node_id": "MDU6TGFiZWwyMTkwNzE4NDI=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/waiting%20for%20response", "name": "waiting for response", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-06-19T13:17:33Z", "updated_at": "2015-11-21T01:31:57Z", "closed_at": "2015-11-21T01:31:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is this a known issue? I get countless AttributeErrors thrown:\n\n```\nAttributeError: 'StubbedReportingCommand' object has no attribute '_option_view'\n```\n\nIn addition to this, the suite itself seems to take forever to run. It's been at least a half hour and it hasn't finished. I have the need to make modifications to the SDK but I have no baseline for what a working SDK actually is because the test suite doesn't pass.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/101", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/101/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/101/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/101", "id": 87661663, "node_id": "MDU6SXNzdWU4NzY2MTY2Mw==", "number": 101, "title": "_get_kind_list raise 404 Error when retrieving subkinds", "user": {"login": "missing1984", "id": 1692592, "node_id": "MDQ6VXNlcjE2OTI1OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1692592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/missing1984", "html_url": "https://github.com/missing1984", "followers_url": "https://api.github.com/users/missing1984/followers", "following_url": "https://api.github.com/users/missing1984/following{/other_user}", "gists_url": "https://api.github.com/users/missing1984/gists{/gist_id}", "starred_url": "https://api.github.com/users/missing1984/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/missing1984/subscriptions", "organizations_url": "https://api.github.com/users/missing1984/orgs", "repos_url": "https://api.github.com/users/missing1984/repos", "events_url": "https://api.github.com/users/missing1984/events{/privacy}", "received_events_url": "https://api.github.com/users/missing1984/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 135642, "node_id": "MDU6TGFiZWwxMzU2NDI=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-12T08:51:42Z", "updated_at": "2015-11-21T01:41:10Z", "closed_at": "2015-11-21T01:41:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "SDK 1.3.1\n\nError trace\n\n```\nTraceback (most recent call last):\n  File \"sdktest.py\", line 88, in <module>\n    inputs(service)\n  File \"sdktest.py\", line 41, in inputs\n    for i in inputs:\n  File \"/Users/michael/workspace/stash/app-aws/package/bin/splunklib/client.py\", line 2528, in __iter__\n    for item in self.iter(**kwargs):\n  File \"/Users/michael/workspace/stash/app-aws/package/bin/splunklib/client.py\", line 2552, in iter\n    for item in self.list(**kwargs):\n  File \"/Users/michael/workspace/stash/app-aws/package/bin/splunklib/client.py\", line 2455, in list\n    kinds = self.kinds\n  File \"/Users/michael/workspace/stash/app-aws/package/bin/splunklib/client.py\", line 2357, in kinds\n    return self._get_kind_list()\n  File \"/Users/michael/workspace/stash/app-aws/package/bin/splunklib/client.py\", line 2346, in _get_kind_list\n    subkinds = self._get_kind_list(subpath + [entry.title])\n  File \"/Users/michael/workspace/stash/app-aws/package/bin/splunklib/client.py\", line 2346, in _get_kind_list\n    subkinds = self._get_kind_list(subpath + [entry.title])\n  File \"/Users/michael/workspace/stash/app-aws/package/bin/splunklib/client.py\", line 2334, in _get_kind_list\n    response = self.get('/'.join(subpath))\n  File \"/Users/michael/workspace/stash/app-aws/package/bin/splunklib/client.py\", line 1611, in get\n    return super(Collection, self).get(name, owner, app, sharing, **query)\n  File \"/Users/michael/workspace/stash/app-aws/package/bin/splunklib/client.py\", line 709, in get\n    **query)\n  File \"/Users/michael/workspace/stash/app-aws/package/bin/splunklib/binding.py\", line 241, in wrapper\n    return request_fun(self, *args, **kwargs)\n  File \"/Users/michael/workspace/stash/app-aws/package/bin/splunklib/binding.py\", line 63, in new_f\n    val = f(*args, **kwargs)\n  File \"/Users/michael/workspace/stash/app-aws/package/bin/splunklib/binding.py\", line 586, in get\n    response = self.http.get(path, self._auth_headers, **query)\n  File \"/Users/michael/workspace/stash/app-aws/package/bin/splunklib/binding.py\", line 1057, in get\n    return self.request(url, { 'method': \"GET\", 'headers': headers })\n  File \"/Users/michael/workspace/stash/app-aws/package/bin/splunklib/binding.py\", line 1112, in request\n    raise HTTPError(response)\nsplunklib.binding.HTTPError: HTTP 404 Not Found -- Not Found\n\n```\n\n``` python\n    def _get_kind_list(self, subpath=None):\n        if subpath is None:\n            subpath = []\n\n        kinds = []\n        response = self.get('/'.join(subpath))  -<< self.get will always encode slash that failed this request.\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/100", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/100/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/100/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/100", "id": 81554718, "node_id": "MDU6SXNzdWU4MTU1NDcxOA==", "number": 100, "title": "Error responses raise XML parse error", "user": {"login": "georgepsarakis", "id": 963304, "node_id": "MDQ6VXNlcjk2MzMwNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/963304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/georgepsarakis", "html_url": "https://github.com/georgepsarakis", "followers_url": "https://api.github.com/users/georgepsarakis/followers", "following_url": "https://api.github.com/users/georgepsarakis/following{/other_user}", "gists_url": "https://api.github.com/users/georgepsarakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/georgepsarakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/georgepsarakis/subscriptions", "organizations_url": "https://api.github.com/users/georgepsarakis/orgs", "repos_url": "https://api.github.com/users/georgepsarakis/repos", "events_url": "https://api.github.com/users/georgepsarakis/events{/privacy}", "received_events_url": "https://api.github.com/users/georgepsarakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 217138045, "node_id": "MDU6TGFiZWwyMTcxMzgwNDU=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/ready%20to%20be%20released", "name": "ready to be released", "color": "009800", "default": false, "description": null}, {"id": 188334, "node_id": "MDU6TGFiZWwxODgzMzQ=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/tests", "name": "tests", "color": "0b02e1", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-05-27T17:56:51Z", "updated_at": "2015-08-09T06:21:43Z", "closed_at": "2015-08-05T00:58:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "The SDK handles all error responses with HTTP code <= 400 by raising a `splunklib.binding.HTTPError` exception as seen [here](https://github.com/splunk/splunk-sdk-python/blob/master/splunklib/binding.py#L1111).\n\nIn its turn `HTTPError` attempts to perform [XML parsing on the response body](https://github.com/splunk/splunk-sdk-python/blob/master/splunklib/binding.py#L891). This results in a `xml.etree.ElementTree.ParseError` exception being raised in cases where the error response is JSON serialized and not in XML format and thus the error response details cannot be viewed.\n\nYou can reproduce it by attempting to create a search job with:\n- `exec_mode=normal`\n- `output_mode=json`\n- `query=invalid_query`\n\nBased on the [search example](https://github.com/splunk/splunk-sdk-python/blob/master/examples/search.py) variables:\n\n``` python\nservice.jobs.create(\"invalid_query\", **{\"exec_mode\":\"normal\", \"output_mode\":\"json\")\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/98", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/98/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/98/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/98", "id": 70502627, "node_id": "MDU6SXNzdWU3MDUwMjYyNw==", "number": 98, "title": "Receiving SSL error ", "user": {"login": "httpstergeek", "id": 5854735, "node_id": "MDQ6VXNlcjU4NTQ3MzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/5854735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/httpstergeek", "html_url": "https://github.com/httpstergeek", "followers_url": "https://api.github.com/users/httpstergeek/followers", "following_url": "https://api.github.com/users/httpstergeek/following{/other_user}", "gists_url": "https://api.github.com/users/httpstergeek/gists{/gist_id}", "starred_url": "https://api.github.com/users/httpstergeek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/httpstergeek/subscriptions", "organizations_url": "https://api.github.com/users/httpstergeek/orgs", "repos_url": "https://api.github.com/users/httpstergeek/repos", "events_url": "https://api.github.com/users/httpstergeek/events{/privacy}", "received_events_url": "https://api.github.com/users/httpstergeek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-23T20:14:59Z", "updated_at": "2015-04-24T18:27:05Z", "closed_at": "2015-04-24T18:08:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Receiving SSL error when connecting to Splunk instance over port 80.  BigIP Listens on port 80 forwards to splunk instance on 8089.  I am able to connect if I use urllib, urllib2.\n\nTraceback (most recent call last):\n  File \"info.py\", line 32, in <module>\n    service = client.connect(**opts.kwargs)\n  File \"../splunklib/client.py\", line 305, in connect\n    return Service(**kwargs).login()\n  File \"../splunklib/binding.py\", line 762, in login\n    password=self.password)\n  File \"../splunklib/binding.py\", line 1091, in post\n    return self.request(url, message)\n  File \"../splunklib/binding.py\", line 1108, in request\n    response = self.handler(url, message, **kwargs)\n  File \"../splunklib/binding.py\", line 1230, in request\n    connection.request(method, path, body, head)\n  File \"/usr/local/Cellar/python/2.7.8_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/httplib.py\", line 995, in request\n    self._send_request(method, url, body, headers)\n  File \"/usr/local/Cellar/python/2.7.8_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/httplib.py\", line 1029, in _send_request\n    self.endheaders(body)\n  File \"/usr/local/Cellar/python/2.7.8_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/httplib.py\", line 991, in endheaders\n    self._send_output(message_body)\n  File \"/usr/local/Cellar/python/2.7.8_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/httplib.py\", line 844, in _send_output\n    self.send(msg)\n  File \"/usr/local/Cellar/python/2.7.8_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/httplib.py\", line 806, in send\n    self.connect()\n  File \"/usr/local/Cellar/python/2.7.8_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/httplib.py\", line 1198, in connect\n    self.sock = ssl.wrap_socket(sock, self.key_file, self.cert_file)\n  File \"/usr/local/Cellar/python/2.7.8_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/ssl.py\", line 392, in wrap_socket\n    ciphers=ciphers)\n  File \"/usr/local/Cellar/python/2.7.8_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/ssl.py\", line 148, in __init__\n    self.do_handshake()\n  File \"/usr/local/Cellar/python/2.7.8_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/ssl.py\", line 310, in do_handshake\n    self._sslobj.do_handshake()\nssl.SSLError: [Errno 1] _ssl.c:510: error:140770FC:SSL routines:SSL23_GET_SERVER_HELLO:unknown protocol\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/97", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/97/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/97/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/97", "id": 61301983, "node_id": "MDU6SXNzdWU2MTMwMTk4Mw==", "number": 97, "title": "Encrypted password while connecting to splunk", "user": {"login": "amith-reddy", "id": 8476554, "node_id": "MDQ6VXNlcjg0NzY1NTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8476554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amith-reddy", "html_url": "https://github.com/amith-reddy", "followers_url": "https://api.github.com/users/amith-reddy/followers", "following_url": "https://api.github.com/users/amith-reddy/following{/other_user}", "gists_url": "https://api.github.com/users/amith-reddy/gists{/gist_id}", "starred_url": "https://api.github.com/users/amith-reddy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amith-reddy/subscriptions", "organizations_url": "https://api.github.com/users/amith-reddy/orgs", "repos_url": "https://api.github.com/users/amith-reddy/repos", "events_url": "https://api.github.com/users/amith-reddy/events{/privacy}", "received_events_url": "https://api.github.com/users/amith-reddy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 219071842, "node_id": "MDU6TGFiZWwyMTkwNzE4NDI=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/waiting%20for%20response", "name": "waiting for response", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-03-14T00:00:21Z", "updated_at": "2015-11-21T01:30:40Z", "closed_at": "2015-11-21T01:30:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, I give password in a config file but it is visible to everyone. Is it possible to connect using encrypted password to splunk or using ssh keys? \n\nservice = client.connect(\n                host=host,\n                port=port,\n                username=userName,\n                password=password)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/96", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/96/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/96/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/96", "id": 60712404, "node_id": "MDU6SXNzdWU2MDcxMjQwNA==", "number": 96, "title": "ResultsReader - Unable to display results. AttributeError: itertext", "user": {"login": "amith-reddy", "id": 8476554, "node_id": "MDQ6VXNlcjg0NzY1NTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8476554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amith-reddy", "html_url": "https://github.com/amith-reddy", "followers_url": "https://api.github.com/users/amith-reddy/followers", "following_url": "https://api.github.com/users/amith-reddy/following{/other_user}", "gists_url": "https://api.github.com/users/amith-reddy/gists{/gist_id}", "starred_url": "https://api.github.com/users/amith-reddy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amith-reddy/subscriptions", "organizations_url": "https://api.github.com/users/amith-reddy/orgs", "repos_url": "https://api.github.com/users/amith-reddy/repos", "events_url": "https://api.github.com/users/amith-reddy/events{/privacy}", "received_events_url": "https://api.github.com/users/amith-reddy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 217138045, "node_id": "MDU6TGFiZWwyMTcxMzgwNDU=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/ready%20to%20be%20released", "name": "ready to be released", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-03-11T19:06:16Z", "updated_at": "2015-08-05T00:57:51Z", "closed_at": "2015-08-05T00:57:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting following error while displaying results of a search command. \nPython version: 2.6.6\nsplunk-sdk==1.3.1\n\n**Error:**\n\n[aravuru@sareliabilitytool.cs.qai commands]$ ./splunksdk.py\nWait for the search to finish...\n...done!\n\nSearch job properties\nSearch job ID:         1426098588.649812.splunk15.ops.expertcity.com\nThe number of events:  1048236\nThe number of results: 3\nSearch duration:       16.927000 seconds\nThis job expires in:   600 seconds\nSearch results:\n\nTraceback (most recent call last):\n  File \"./splunksdk.py\", line 44, in <module>\n    for result in results.ResultsReader(response):\n  File \"/usr/lib/python2.6/site-packages/splunklib/results.py\", line 205, in next\n    return self._gen.next()\n  File \"/usr/lib/python2.6/site-packages/splunklib/results.py\", line 249, in _parse_results\n    text = \"\".join(elem.itertext())\n**AttributeError: itertext**\n\n**Code:**\n# !/usr/bin/python -u\n\nimport splunklib.client as client\nimport splunklib.results as results\nfrom time import sleep\nimport sys\n\nservice = client.connect(\n    host=HOST,\n    port=PORT,\n    username=USERNAME,\n    password=PASSWORD)\n\njobs = service.jobs\n\nkwargs_blockingsearch = {\"exec_mode\": \"blocking\",\"earliest_time\":'-1h'}\nsearchquery_blocking = \"search index=_internal source=*license_usage.log type=Usage |eval GB=b/1024/1024/1024 |eval PZGB=poolsz/1024/1024/1024| chart sum(GB) as UsageGB  by  pool\"\n\nprint \"Wait for the search to finish...\"\n\njob = jobs.create(searchquery_blocking, **kwargs_blockingsearch)\nprint \"...done!\\n\"\n\nprint \"Search job properties\"\nprint \"Search job ID:        \", job[\"sid\"]\nprint \"The number of events: \", job[\"eventCount\"]\nprint \"The number of results:\", job[\"resultCount\"]\nprint \"Search duration:      \", job[\"runDuration\"], \"seconds\"\nprint \"This job expires in:  \", job[\"ttl\"], \"seconds\"\n\nprint \"Search results:\\n\"\n\nresponse = job.results()\nfor result in results.ResultsReader(response):\n    print result\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/95", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/95/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/95/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/95", "id": 55861457, "node_id": "MDU6SXNzdWU1NTg2MTQ1Nw==", "number": 95, "title": "issue while installing sdk", "user": {"login": "splunk47", "id": 10753223, "node_id": "MDQ6VXNlcjEwNzUzMjIz", "avatar_url": "https://avatars0.githubusercontent.com/u/10753223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/splunk47", "html_url": "https://github.com/splunk47", "followers_url": "https://api.github.com/users/splunk47/followers", "following_url": "https://api.github.com/users/splunk47/following{/other_user}", "gists_url": "https://api.github.com/users/splunk47/gists{/gist_id}", "starred_url": "https://api.github.com/users/splunk47/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/splunk47/subscriptions", "organizations_url": "https://api.github.com/users/splunk47/orgs", "repos_url": "https://api.github.com/users/splunk47/repos", "events_url": "https://api.github.com/users/splunk47/events{/privacy}", "received_events_url": "https://api.github.com/users/splunk47/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 219071842, "node_id": "MDU6TGFiZWwyMTkwNzE4NDI=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/waiting%20for%20response", "name": "waiting for response", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-01-29T06:25:37Z", "updated_at": "2015-08-05T01:03:00Z", "closed_at": "2015-08-05T01:03:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "File \"setup.py\", line 135\n    with closing(tarfile.open(os.path.join(\"build\", app + \".spl\"), \"w\")) as spl:\n               ^\nSyntaxError: invalid syntax\n\nkinldy help \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/93", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/93/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/93/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/93", "id": 43162627, "node_id": "MDU6SXNzdWU0MzE2MjYyNw==", "number": 93, "title": "Malformed inputs.conf stanza name", "user": {"login": "anotomoniz-r7", "id": 4837378, "node_id": "MDQ6VXNlcjQ4MzczNzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/4837378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anotomoniz-r7", "html_url": "https://github.com/anotomoniz-r7", "followers_url": "https://api.github.com/users/anotomoniz-r7/followers", "following_url": "https://api.github.com/users/anotomoniz-r7/following{/other_user}", "gists_url": "https://api.github.com/users/anotomoniz-r7/gists{/gist_id}", "starred_url": "https://api.github.com/users/anotomoniz-r7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anotomoniz-r7/subscriptions", "organizations_url": "https://api.github.com/users/anotomoniz-r7/orgs", "repos_url": "https://api.github.com/users/anotomoniz-r7/repos", "events_url": "https://api.github.com/users/anotomoniz-r7/events{/privacy}", "received_events_url": "https://api.github.com/users/anotomoniz-r7/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 135645, "node_id": "MDU6TGFiZWwxMzU2NDU=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/core", "name": "core", "color": "d7e102", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-09-18T18:16:23Z", "updated_at": "2015-12-10T01:48:15Z", "closed_at": "2015-12-10T01:48:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an inputs.conf stanza for accepting data over a UDP port. It was created with a restrictToHost value, so its name is of the form `udp://<host>:<port>`. But when I update the properties, its name changes to `udp://<host>:<host>:<port>`, where both instances of `<host>` are the same.\n\nDigging around pointed to the comment on client.Input.update(). If restrictToHost is set, it is sent with every update request in order to preserve compatibility with 5.0.0 and 5.0.1. The comment also notes that in 5.0.2 and higher, you cannot change restrictToHost once it's set, so this resend of restrictToHost isn't a problem.\n\nWhen the kind is \"tcp/raw\" (\"tcp\" in the SDK), this is true: attempting to set restrictToHost to the same value it was before just does nothing, and attempting to change it prompts it to state that restrictToHost cannot be updated. However, when the kind is \"udp\", it respects the new restrictToHost value. It will only accept one additional restrictToHost value: trying to add a third generates an error that it's not a valid port. Some testing with the REST API has shown that the second restrictToHost value is inserted before the old one.\n\nTo reproduce this using the SDK:\n\n```\nstanza = service.inputs.create(\"1234\", \"udp\", restrictToHost=\"foo\")\nstanza.update(connection_host=\"dns\")\n```\n\nOr the REST API:\n\n```\ncurl -k -u admin:pass https://localhost:8089/services/data/inputs/udp -d name=1234 -d restrictToHost=foo\ncurl -k -u admin:pass https://localhost:8089/services/data/inputs/udp/foo%3A1234 -d restrictToHost=foo -d connection_host=dns\n```\n\nBoth will produce the following stanza in inputs.conf:\n\n```\n[udp://foo:foo:1234]\nconnection_host = dns\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/92", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/92/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/92/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/92", "id": 40614540, "node_id": "MDU6SXNzdWU0MDYxNDU0MA==", "number": 92, "title": "type property in outputs.conf is missing from Stanza.content", "user": {"login": "anotomoniz-r7", "id": 4837378, "node_id": "MDQ6VXNlcjQ4MzczNzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/4837378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anotomoniz-r7", "html_url": "https://github.com/anotomoniz-r7", "followers_url": "https://api.github.com/users/anotomoniz-r7/followers", "following_url": "https://api.github.com/users/anotomoniz-r7/following{/other_user}", "gists_url": "https://api.github.com/users/anotomoniz-r7/gists{/gist_id}", "starred_url": "https://api.github.com/users/anotomoniz-r7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anotomoniz-r7/subscriptions", "organizations_url": "https://api.github.com/users/anotomoniz-r7/orgs", "repos_url": "https://api.github.com/users/anotomoniz-r7/repos", "events_url": "https://api.github.com/users/anotomoniz-r7/events{/privacy}", "received_events_url": "https://api.github.com/users/anotomoniz-r7/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 217138045, "node_id": "MDU6TGFiZWwyMTcxMzgwNDU=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/ready%20to%20be%20released", "name": "ready to be released", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "shakeelmohamed", "id": 1480063, "node_id": "MDQ6VXNlcjE0ODAwNjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1480063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shakeelmohamed", "html_url": "https://github.com/shakeelmohamed", "followers_url": "https://api.github.com/users/shakeelmohamed/followers", "following_url": "https://api.github.com/users/shakeelmohamed/following{/other_user}", "gists_url": "https://api.github.com/users/shakeelmohamed/gists{/gist_id}", "starred_url": "https://api.github.com/users/shakeelmohamed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shakeelmohamed/subscriptions", "organizations_url": "https://api.github.com/users/shakeelmohamed/orgs", "repos_url": "https://api.github.com/users/shakeelmohamed/repos", "events_url": "https://api.github.com/users/shakeelmohamed/events{/privacy}", "received_events_url": "https://api.github.com/users/shakeelmohamed/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shakeelmohamed", "id": 1480063, "node_id": "MDQ6VXNlcjE0ODAwNjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1480063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shakeelmohamed", "html_url": "https://github.com/shakeelmohamed", "followers_url": "https://api.github.com/users/shakeelmohamed/followers", "following_url": "https://api.github.com/users/shakeelmohamed/following{/other_user}", "gists_url": "https://api.github.com/users/shakeelmohamed/gists{/gist_id}", "starred_url": "https://api.github.com/users/shakeelmohamed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shakeelmohamed/subscriptions", "organizations_url": "https://api.github.com/users/shakeelmohamed/orgs", "repos_url": "https://api.github.com/users/shakeelmohamed/repos", "events_url": "https://api.github.com/users/shakeelmohamed/events{/privacy}", "received_events_url": "https://api.github.com/users/shakeelmohamed/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2014-08-19T17:18:26Z", "updated_at": "2015-08-05T00:58:43Z", "closed_at": "2015-08-05T00:58:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Attempting to retrieve the type parameter from a syslog stanza in outputs.conf using `service[\"outputs\"][\"foo\"].content[\"type\"]` fails. It turns out type collides with another value parsed form the atom feed result, which is also called type but denotes the entity's content type. Thus, each entity has a type field which looks something like `[\"tcp\", \"text/xml\"]`. And before assigning Stanza.content, the type field is stripped out as \"filtering some of the noise\". All of this seems to indicate the problem is caused by a mixture of the property's name and a small bug in the Atom feed parser you're using.\n\nThe property is still accessible via a direct call to the REST API using `service.get(\"properties/outputs/foo/type\")`, but its absence from the SDK is quite inconvenient.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/91", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/91/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/91/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/91", "id": 39558108, "node_id": "MDU6SXNzdWUzOTU1ODEwOA==", "number": 91, "title": "Support Python 3", "user": {"login": "tylereaves", "id": 637265, "node_id": "MDQ6VXNlcjYzNzI2NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/637265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tylereaves", "html_url": "https://github.com/tylereaves", "followers_url": "https://api.github.com/users/tylereaves/followers", "following_url": "https://api.github.com/users/tylereaves/following{/other_user}", "gists_url": "https://api.github.com/users/tylereaves/gists{/gist_id}", "starred_url": "https://api.github.com/users/tylereaves/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tylereaves/subscriptions", "organizations_url": "https://api.github.com/users/tylereaves/orgs", "repos_url": "https://api.github.com/users/tylereaves/repos", "events_url": "https://api.github.com/users/tylereaves/events{/privacy}", "received_events_url": "https://api.github.com/users/tylereaves/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 135641, "node_id": "MDU6TGFiZWwxMzU2NDE=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/enhancement", "name": "enhancement", "color": "02e10c", "default": true, "description": null}, {"id": 138551728, "node_id": "MDU6TGFiZWwxMzg1NTE3Mjg=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/hold", "name": "hold", "color": "c7def8", "default": false, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 49, "created_at": "2014-08-05T19:51:03Z", "updated_at": "2018-02-26T18:26:30Z", "closed_at": "2018-02-26T18:25:36Z", "author_association": "NONE", "active_lock_reason": "off-topic", "body": "Currently splunklib only suppports Python 2. This is quite a bit annoying for those of us that have made the jump to Python 3,  especially as the spunk api is not easily handleable via standard Python XML tools.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/90", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/90/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/90/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/90", "id": 38507883, "node_id": "MDU6SXNzdWUzODUwNzg4Mw==", "number": 90, "title": "Modular input event writer does not support non-unicode encoding", "user": {"login": "gangtao", "id": 3509037, "node_id": "MDQ6VXNlcjM1MDkwMzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/3509037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gangtao", "html_url": "https://github.com/gangtao", "followers_url": "https://api.github.com/users/gangtao/followers", "following_url": "https://api.github.com/users/gangtao/following{/other_user}", "gists_url": "https://api.github.com/users/gangtao/gists{/gist_id}", "starred_url": "https://api.github.com/users/gangtao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gangtao/subscriptions", "organizations_url": "https://api.github.com/users/gangtao/orgs", "repos_url": "https://api.github.com/users/gangtao/repos", "events_url": "https://api.github.com/users/gangtao/events{/privacy}", "received_events_url": "https://api.github.com/users/gangtao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-07-23T08:28:25Z", "updated_at": "2014-07-23T17:54:53Z", "closed_at": "2014-07-23T17:54:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Current  splunklib/modularinput/event.py does not support text encoding other than unicode.\nRefer to the attachment for a possible solution.\n\n![screen shot 2014-07-23 at 4 39 18 pm](https://cloud.githubusercontent.com/assets/3509037/3670523/e0b89daa-1244-11e4-8c60-e3c1026a2381.png)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/88", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/88/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/88/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/88", "id": 37480314, "node_id": "MDU6SXNzdWUzNzQ4MDMxNA==", "number": 88, "title": "splunklib.modularinput | <done/> written even when done=False", "user": {"login": "Jaykul", "id": 192942, "node_id": "MDQ6VXNlcjE5Mjk0Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/192942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jaykul", "html_url": "https://github.com/Jaykul", "followers_url": "https://api.github.com/users/Jaykul/followers", "following_url": "https://api.github.com/users/Jaykul/following{/other_user}", "gists_url": "https://api.github.com/users/Jaykul/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jaykul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jaykul/subscriptions", "organizations_url": "https://api.github.com/users/Jaykul/orgs", "repos_url": "https://api.github.com/users/Jaykul/repos", "events_url": "https://api.github.com/users/Jaykul/events{/privacy}", "received_events_url": "https://api.github.com/users/Jaykul/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 147804028, "node_id": "MDU6TGFiZWwxNDc4MDQwMjg=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/in%20progress", "name": "in progress", "color": "d4c5f9", "default": false, "description": null}, {"id": 217138045, "node_id": "MDU6TGFiZWwyMTcxMzgwNDU=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/ready%20to%20be%20released", "name": "ready to be released", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-07-09T15:52:51Z", "updated_at": "2015-10-02T00:13:12Z", "closed_at": "2015-10-02T00:13:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I promised myself I wouldn't gripe about how long it took us to figure out that there was a bug in the SDK and not in our code or in Splunk's handling of our input ....\n\nBottom line: in event.py line 103 you are checking if \"done is not None\" but you default it to \"True\" so we obviously set it to \"False,\" (not \"None\") -- you should just be evaluating it for true.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/87", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/87/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/87/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/87", "id": 35414046, "node_id": "MDU6SXNzdWUzNTQxNDA0Ng==", "number": 87, "title": "Modular Input Script should accept inputs if validate_input is not set", "user": {"login": "shakeelmohamed", "id": 1480063, "node_id": "MDQ6VXNlcjE0ODAwNjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1480063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shakeelmohamed", "html_url": "https://github.com/shakeelmohamed", "followers_url": "https://api.github.com/users/shakeelmohamed/followers", "following_url": "https://api.github.com/users/shakeelmohamed/following{/other_user}", "gists_url": "https://api.github.com/users/shakeelmohamed/gists{/gist_id}", "starred_url": "https://api.github.com/users/shakeelmohamed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shakeelmohamed/subscriptions", "organizations_url": "https://api.github.com/users/shakeelmohamed/orgs", "repos_url": "https://api.github.com/users/shakeelmohamed/repos", "events_url": "https://api.github.com/users/shakeelmohamed/events{/privacy}", "received_events_url": "https://api.github.com/users/shakeelmohamed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-06-10T19:04:29Z", "updated_at": "2014-06-10T19:10:58Z", "closed_at": "2014-06-10T19:10:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Here, we should check if validate_input is not defined, and return 0... otherwise business as usual\nhttps://github.com/splunk/splunk-sdk-python/blob/master/splunklib/modularinput/script.py#L92\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/86", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/86/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/86/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/86", "id": 34542210, "node_id": "MDU6SXNzdWUzNDU0MjIxMA==", "number": 86, "title": "examples/submit.py packs multiple lines in a single event", "user": {"login": "alexntt", "id": 6974884, "node_id": "MDQ6VXNlcjY5NzQ4ODQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6974884?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexntt", "html_url": "https://github.com/alexntt", "followers_url": "https://api.github.com/users/alexntt/followers", "following_url": "https://api.github.com/users/alexntt/following{/other_user}", "gists_url": "https://api.github.com/users/alexntt/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexntt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexntt/subscriptions", "organizations_url": "https://api.github.com/users/alexntt/orgs", "repos_url": "https://api.github.com/users/alexntt/repos", "events_url": "https://api.github.com/users/alexntt/events{/privacy}", "received_events_url": "https://api.github.com/users/alexntt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-05-29T09:50:53Z", "updated_at": "2014-06-22T17:58:27Z", "closed_at": "2014-06-22T17:58:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nWe have a tool that generates CSVs to stdout and we are trying to pipe its output to examples/submit.py in order to create an event in Splunk for each line in the CSV. Playing around, we've noticed that:\n\n```\n#\n# The following code uses the Splunk streaming receiver in order\n# to reduce the buffering of event data read from stdin, which makes\n# this tool a little friendlier for submitting large event streams,\n# however if the buffering is not a concern, you can achieve the\n# submit somewhat more directly using Splunk's 'simple' receiver,\n# as follows:\n#\n# event = sys.stdin.read()\n# service.indexes[index].submit(event, **kwargs_submit)\n#\n\ncn = service.indexes[index].attach(**kwargs_submit)\ntry:\n    while True:\n        line = sys.stdin.readline().rstrip('\\r\\n')\n        if len(line) == 0: break\n        cn.write(line)\nfinally:\n    cn.close()\n```\n\n, using the version shown, all lines get bunched up into the same event. However, if we use the commented version, it works perfectly.\n\nI'm not sure what's the right thing to do, but the latter behavior seems to be much more useful\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/85", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/85/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/85/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/85", "id": 34482734, "node_id": "MDU6SXNzdWUzNDQ4MjczNA==", "number": 85, "title": "Can't set eventsource from command line in examples/submit.py", "user": {"login": "alexntt", "id": 6974884, "node_id": "MDQ6VXNlcjY5NzQ4ODQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6974884?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexntt", "html_url": "https://github.com/alexntt", "followers_url": "https://api.github.com/users/alexntt/followers", "following_url": "https://api.github.com/users/alexntt/following{/other_user}", "gists_url": "https://api.github.com/users/alexntt/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexntt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexntt/subscriptions", "organizations_url": "https://api.github.com/users/alexntt/orgs", "repos_url": "https://api.github.com/users/alexntt/repos", "events_url": "https://api.github.com/users/alexntt/events{/privacy}", "received_events_url": "https://api.github.com/users/alexntt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "shakeelmohamed", "id": 1480063, "node_id": "MDQ6VXNlcjE0ODAwNjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1480063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shakeelmohamed", "html_url": "https://github.com/shakeelmohamed", "followers_url": "https://api.github.com/users/shakeelmohamed/followers", "following_url": "https://api.github.com/users/shakeelmohamed/following{/other_user}", "gists_url": "https://api.github.com/users/shakeelmohamed/gists{/gist_id}", "starred_url": "https://api.github.com/users/shakeelmohamed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shakeelmohamed/subscriptions", "organizations_url": "https://api.github.com/users/shakeelmohamed/orgs", "repos_url": "https://api.github.com/users/shakeelmohamed/repos", "events_url": "https://api.github.com/users/shakeelmohamed/events{/privacy}", "received_events_url": "https://api.github.com/users/shakeelmohamed/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shakeelmohamed", "id": 1480063, "node_id": "MDQ6VXNlcjE0ODAwNjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1480063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shakeelmohamed", "html_url": "https://github.com/shakeelmohamed", "followers_url": "https://api.github.com/users/shakeelmohamed/followers", "following_url": "https://api.github.com/users/shakeelmohamed/following{/other_user}", "gists_url": "https://api.github.com/users/shakeelmohamed/gists{/gist_id}", "starred_url": "https://api.github.com/users/shakeelmohamed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shakeelmohamed/subscriptions", "organizations_url": "https://api.github.com/users/shakeelmohamed/orgs", "repos_url": "https://api.github.com/users/shakeelmohamed/repos", "events_url": "https://api.github.com/users/shakeelmohamed/events{/privacy}", "received_events_url": "https://api.github.com/users/shakeelmohamed/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2014-05-28T16:22:04Z", "updated_at": "2014-11-14T01:33:30Z", "closed_at": "2014-11-14T01:25:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "$ echo hola | ./submit.py --host my.splunk --port 8089 --username=admin --password=pwd --eventsource=foo my.index\nTraceback (most recent call last):\n  File \"./submit.py\", line 83, in <module>\n    main(sys.argv[1:])\n  File \"./submit.py\", line 59, in main\n    {'eventhost':'host'}, 'source', 'sourcetype')\n  File \"./../utils/**init**.py\", line 93, in dslice\n    if value.has_key(arg): result[arg]\nKeyError: 'source'\n\nhttps://github.com/ntteurope/splunk-sdk-python/commit/86a58fc14876c1c1a0d952d9c0ce39a21e62444c seems to fix the problem, but I'm not sure it's very correct...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/84", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/84/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/84/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/84", "id": 33609278, "node_id": "MDU6SXNzdWUzMzYwOTI3OA==", "number": 84, "title": "Documentation Error with binding.Context.connect() ", "user": {"login": "d6e", "id": 2476055, "node_id": "MDQ6VXNlcjI0NzYwNTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2476055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d6e", "html_url": "https://github.com/d6e", "followers_url": "https://api.github.com/users/d6e/followers", "following_url": "https://api.github.com/users/d6e/following{/other_user}", "gists_url": "https://api.github.com/users/d6e/gists{/gist_id}", "starred_url": "https://api.github.com/users/d6e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d6e/subscriptions", "organizations_url": "https://api.github.com/users/d6e/orgs", "repos_url": "https://api.github.com/users/d6e/repos", "events_url": "https://api.github.com/users/d6e/events{/privacy}", "received_events_url": "https://api.github.com/users/d6e/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-05-15T17:58:28Z", "updated_at": "2014-05-15T20:18:15Z", "closed_at": "2014-05-15T20:18:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "The documentation for splunklib.binding.Context.connect() says it returns \"A Socket\", but it actually returns a splunklib.binding.Context object.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/83", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/83/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/83/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/83", "id": 33509720, "node_id": "MDU6SXNzdWUzMzUwOTcyMA==", "number": 83, "title": "EventWriter should be compatible with logging", "user": {"login": "Jaykul", "id": 192942, "node_id": "MDQ6VXNlcjE5Mjk0Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/192942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jaykul", "html_url": "https://github.com/Jaykul", "followers_url": "https://api.github.com/users/Jaykul/followers", "following_url": "https://api.github.com/users/Jaykul/following{/other_user}", "gists_url": "https://api.github.com/users/Jaykul/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jaykul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jaykul/subscriptions", "organizations_url": "https://api.github.com/users/Jaykul/orgs", "repos_url": "https://api.github.com/users/Jaykul/repos", "events_url": "https://api.github.com/users/Jaykul/events{/privacy}", "received_events_url": "https://api.github.com/users/Jaykul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-05-14T16:38:05Z", "updated_at": "2018-06-29T17:53:09Z", "closed_at": "2018-06-29T17:53:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "That is, it should be more similar to the [logging](https://docs.python.org/2/library/logging.html) class.\n\nAt a minimum, the `log` method of EventWriter should take an integer [LoggingLevel](https://docs.python.org/2/library/logging.html#logging-levels) rather than a string as it's first argument.\n\nThere's really no reason good enough to make this incompatible. It's **almost** [this easy](https://github.com/splunk/ipfix/blob/master/app/Splunk_TA_IPFIX/bin/SplunkLogger/__init__.py), you'd just have to use stdout and stderr (or set the log file to output in splunk's log folder), and you'd be 90% done ...\n\nIt would make life so much easier (particularly when bringing existing code) if a modular input could just set their [logger](https://docs.python.org/2/library/logging.html#logger-objects) to the writer that gets passed to them in order to switch things from python logging to splunk logging.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/82", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/82/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/82/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/82", "id": 33218609, "node_id": "MDU6SXNzdWUzMzIxODYwOQ==", "number": 82, "title": "ModularInput Error handling needs to write the traceback", "user": {"login": "Jaykul", "id": 192942, "node_id": "MDQ6VXNlcjE5Mjk0Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/192942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jaykul", "html_url": "https://github.com/Jaykul", "followers_url": "https://api.github.com/users/Jaykul/followers", "following_url": "https://api.github.com/users/Jaykul/following{/other_user}", "gists_url": "https://api.github.com/users/Jaykul/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jaykul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jaykul/subscriptions", "organizations_url": "https://api.github.com/users/Jaykul/orgs", "repos_url": "https://api.github.com/users/Jaykul/repos", "events_url": "https://api.github.com/users/Jaykul/events{/privacy}", "received_events_url": "https://api.github.com/users/Jaykul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-05-09T23:33:22Z", "updated_at": "2018-06-29T17:53:31Z", "closed_at": "2018-06-29T17:53:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "After one attempt and seeing the error handling you're providing I had to put in a wrapper of my own to manually write to your event writer:\n\n```\n    except Exception as e:\n        import traceback\n        writer.log(\"ERROR\", \"{}: {}: {}\".format(type(e).__name__, e, traceback.format_exc()))\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/81", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/81/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/81/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/81", "id": 33218504, "node_id": "MDU6SXNzdWUzMzIxODUwNA==", "number": 81, "title": "</stream> written without <stream>", "user": {"login": "Jaykul", "id": 192942, "node_id": "MDQ6VXNlcjE5Mjk0Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/192942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jaykul", "html_url": "https://github.com/Jaykul", "followers_url": "https://api.github.com/users/Jaykul/followers", "following_url": "https://api.github.com/users/Jaykul/following{/other_user}", "gists_url": "https://api.github.com/users/Jaykul/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jaykul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jaykul/subscriptions", "organizations_url": "https://api.github.com/users/Jaykul/orgs", "repos_url": "https://api.github.com/users/Jaykul/repos", "events_url": "https://api.github.com/users/Jaykul/events{/privacy}", "received_events_url": "https://api.github.com/users/Jaykul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-05-09T23:30:53Z", "updated_at": "2014-08-25T18:39:25Z", "closed_at": "2014-08-25T18:37:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "If there's an error early in the process (which I handle and .log()) \n\nI get an ERROR to stderr, and then a </stream> tag to stdout....\n\nThe writer should write the opening <stream> tag during init -- this would have a beneficial side effect of making this whole thing more threadsafe.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/80", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/80/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/80/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/80", "id": 32085927, "node_id": "MDU6SXNzdWUzMjA4NTkyNw==", "number": 80, "title": "ReadMe doesn't cover modular input use", "user": {"login": "Jaykul", "id": 192942, "node_id": "MDQ6VXNlcjE5Mjk0Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/192942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jaykul", "html_url": "https://github.com/Jaykul", "followers_url": "https://api.github.com/users/Jaykul/followers", "following_url": "https://api.github.com/users/Jaykul/following{/other_user}", "gists_url": "https://api.github.com/users/Jaykul/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jaykul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jaykul/subscriptions", "organizations_url": "https://api.github.com/users/Jaykul/orgs", "repos_url": "https://api.github.com/users/Jaykul/repos", "events_url": "https://api.github.com/users/Jaykul/events{/privacy}", "received_events_url": "https://api.github.com/users/Jaykul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-04-23T18:21:40Z", "updated_at": "2014-05-01T21:59:53Z", "closed_at": "2014-05-01T21:59:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "The readme should cover how to use this to write modular inputs.  Specifically, how much of it do I need to ship in my modinput to get it to work with Splunk's python?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/73", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/73/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/73/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/73", "id": 24267799, "node_id": "MDU6SXNzdWUyNDI2Nzc5OQ==", "number": 73, "title": "1.1 Release Checklist", "user": {"login": "glennblock", "id": 141124, "node_id": "MDQ6VXNlcjE0MTEyNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/141124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glennblock", "html_url": "https://github.com/glennblock", "followers_url": "https://api.github.com/users/glennblock/followers", "following_url": "https://api.github.com/users/glennblock/following{/other_user}", "gists_url": "https://api.github.com/users/glennblock/gists{/gist_id}", "starred_url": "https://api.github.com/users/glennblock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glennblock/subscriptions", "organizations_url": "https://api.github.com/users/glennblock/orgs", "repos_url": "https://api.github.com/users/glennblock/repos", "events_url": "https://api.github.com/users/glennblock/events{/privacy}", "received_events_url": "https://api.github.com/users/glennblock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-12-13T19:40:41Z", "updated_at": "2014-06-25T20:58:25Z", "closed_at": "2014-06-25T20:58:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Splunk Python SDK Release Instructions\n\nThese are instructions on the various steps necessary to cut out a new\nrelease of the Splunk Python SDK. Even though the instructions are public,\nthese steps are only meant to be taken by the SDK maintainers.\n### Prerequisites\n- [ ] Read through all of these release instructions.\n  - Update if necessary. (For example, the version numbers will need updating.)\n  - For updates that could apply to other SDKs as well, update the release instructions page for every other SDK.\n- [ ] Update changelog.\n- [ ] Run test suite on full test matrix.\n- [ ] Install `random_numbers.spl` and `github_forks.spl` (found in `build/` after running `python setup.py dist` on the respository) on Linux (32-bit and 64-bit), MacOS X (64-bit), and Windows (32-bit and 64-bit). Add a new data input for both kinds, and check that they generate events by running the search \"*\" with time range \"Real time (all time)\".\n- [ ] Run all examples.\n- [ ]Run all dev.splunk.com code samples.\n- [ ] Remove old temporary branches. This includes feature branches, old release branches, and most branches that have been merged to develop.\n  - (Exception: The \"promises-old\" branch in the JavaScript SDK should be retained for the time being.)\n### Release Steps\n- [ ] Create release branch off of develop (`release/1.1`)\n  - `git checkout develop`\n  - `git pull`\n  - `git checkout -b release/1.1`\n- [ ] Update the version number in `splunk/__init__.py`.\n- [ ] Make sure the version number change didn't break anything:\n  - Install the SDK in a clean VM and in a clean virtualenv.\n  - Run test suite.\n  - Run the SDK examples.\n- [ ] Merge to `master` locally. Ensure the commit message is \"Release 1.1\".\n  - `git checkout master`\n  - `git merge --no-ff -m \"Release 1.1\" release/1.1`\n- [ ] Tag the above commit as `1.1`.\n  - `git tag 1.1`\n- [ ] Push the `master` and the `1.1` tag to GitHub.\n  - `git push origin master`\n  - `git push --tags`\n- [ ] Upload to PyPI:\n  - `python setup.py register sdist upload`\n  - It will ask you for login info, which you can find on the\n    internal [ESWiki](http://eswiki.splunk.com/Python_SDK_Release).\n- [ ] Delete the release branch:\n  - `git push origin :release/1.1`\n  - `git branch -d release/1.1`\n- [ ] Sanity check that released version works:\n  - _Check with the Product Manager for what should be done here. (And update this bullet with the decision!)_\n- [ ] Create a ZIP of the SDK and send it to your Docs team:\n  - Make sure the file reflects the current version (for example, splunk-splunk-sdk-python-1.1.zip).\n  - Docs team will get the ZIP file posted to Dev Portal.\n- [ ] Work with Docs team to:\n  - Post ZIP file.\n  - Update Readme. For point releases, the version number needs to be updated at a minimum.\n  - Update Changelog, includes a list of changes for the current version.\n  - Push Dev Portal updates. For point releases, the \"What's new\" page and download links need to be updated at the very least.\n  - Publish updated API Reference (docs.splunk.com/Documentation/SDK).\n  - Create both MD5 and SHA-512 hashes from _final_ ZIP download. Docs will contact the Web team to upload these files.\n- [ ] Hand off to marketing to announce. See next section.\n### Announce!\n\nHurrah, the new release is basically done! You can now announce it on the\nfollowing channels:\n- Twitter (@splunkdev, maybe @splunk)\n- Google Groups (splunkdev)\n- Dev Portal (http://dev.splunk.com)\n- Dev Blog (http://blogs.splunk.com/dev)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/72", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/72/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/72/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/72", "id": 23357274, "node_id": "MDU6SXNzdWUyMzM1NzI3NA==", "number": 72, "title": "Get requests for particular monitor inputs fail because paths are not converted before sending the request", "user": {"login": "jasonbeyers", "id": 1383640, "node_id": "MDQ6VXNlcjEzODM2NDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1383640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonbeyers", "html_url": "https://github.com/jasonbeyers", "followers_url": "https://api.github.com/users/jasonbeyers/followers", "following_url": "https://api.github.com/users/jasonbeyers/following{/other_user}", "gists_url": "https://api.github.com/users/jasonbeyers/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonbeyers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonbeyers/subscriptions", "organizations_url": "https://api.github.com/users/jasonbeyers/orgs", "repos_url": "https://api.github.com/users/jasonbeyers/repos", "events_url": "https://api.github.com/users/jasonbeyers/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonbeyers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-11-26T23:45:11Z", "updated_at": "2014-09-15T17:36:17Z", "closed_at": "2014-09-15T17:36:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "It's probably easiest to describe the issue with an example.\n\nFirst, create a new monitor input\n\ns = splunklib.connect(...)\ns.inputs.create('/home/myuser/log', kind='monitor')\n\nI see a POST with name='%2Fhome%2Fmyuser%2Flog' in the message body, and the splunk instance correctly handles it.  However, the subsequent GET (which I presume is used to update the state locally) uses the path I provided, /home/myuser/log.  Because of this, or maybe something else, I immediately get this:\n\nsplunklib.binding.HTTPError: HTTP 404 Not Found -- In handler 'monitor': Invalid custom action for this internal handler (handler: monitor, custom action: myuser, eai action: list).\n\nAny subsequent attempts to lookup the Input object for this monitor input, using:\n\ns.inputs['/home/myuser/log']\n\nOR\n\ns.inputs[('/home/myuser/log', 'monitor')]\n\n...Fail with a KeyError.  However, the following does work:\n\ns.inputs['%2Fhome%2Fmyuser%2Flog']\n\nThis is pretty confusing.  It seems like /home/myuser/log should work everytime from a custom script that uses the SDK, and that the URL-valid paths (with the %2F sequences) should remain from the user.\n\nIs this intended behavior?\n\nThanks,\n-Jason\njbeyers@splunk.com (perf)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/71", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/71/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/71/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/71", "id": 20989230, "node_id": "MDU6SXNzdWUyMDk4OTIzMA==", "number": 71, "title": "login routine does not follow HTTP redirects?", "user": {"login": "bcavagnolo", "id": 289954, "node_id": "MDQ6VXNlcjI4OTk1NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/289954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bcavagnolo", "html_url": "https://github.com/bcavagnolo", "followers_url": "https://api.github.com/users/bcavagnolo/followers", "following_url": "https://api.github.com/users/bcavagnolo/following{/other_user}", "gists_url": "https://api.github.com/users/bcavagnolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/bcavagnolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bcavagnolo/subscriptions", "organizations_url": "https://api.github.com/users/bcavagnolo/orgs", "repos_url": "https://api.github.com/users/bcavagnolo/repos", "events_url": "https://api.github.com/users/bcavagnolo/events{/privacy}", "received_events_url": "https://api.github.com/users/bcavagnolo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-10-15T00:02:23Z", "updated_at": "2013-10-18T16:37:07Z", "closed_at": "2013-10-18T16:37:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using the 1.1.0 release currently available in pip.  I attempt to connect to my local splunk 6.0 install using the following:\n\n```\nservice.client.connect(\n            host='localhost',\n            scheme='https',\n            port=8443,\n            app='myapp',\n            username=\"myuser\",\n            password=\"********\")\n```\n\nBut this fails like so:\n\n```\nTraceback (most recent call last):\n  File \"./trtool.py\", line 188, in <module>\n    session_report.run_report(subargs[0])\n  File \"/home/brian/tableau-reporting/sessions.py\", line 668, in run_report\n    self.connect_splunk()\n  File \"/home/brian/tableau-reporting/sessions.py\", line 665, in connect_splunk\n    password=\"MappyTabl3au\")\n  File \"/usr/local/lib/python2.7/dist-packages/splunklib/client.py\", line 289, in connect\n    return Service(**kwargs).login()\n  File \"/usr/local/lib/python2.7/dist-packages/splunklib/binding.py\", line 753, in login\n    session = XML(body).findtext(\"./sessionKey\")\n  File \"/usr/lib/python2.7/xml/etree/ElementTree.py\", line 1302, in XML\n    return parser.close()\n  File \"/usr/lib/python2.7/xml/etree/ElementTree.py\", line 1655, in close\n    self._raiseerror(v)\n  File \"/usr/lib/python2.7/xml/etree/ElementTree.py\", line 1507, in _raiseerror\n    raise err\nxml.etree.ElementTree.ParseError: no element found: line 1, column 0\n```\n\nI added some debug printing and found that the library is getting a 303 redirecting to https://localhost/en-US/services/auth/login.  Manually following this redirect reveals a 404, however.  And notably, the Location header in the response does not have the expected port.  Am I missing something dumb? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/70", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/70/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/70/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/70", "id": 18628869, "node_id": "MDU6SXNzdWUxODYyODg2OQ==", "number": 70, "title": "Empty text node raises 'NoneType' object has no attribute 'encode'", "user": {"login": "aarcro", "id": 279725, "node_id": "MDQ6VXNlcjI3OTcyNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/279725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aarcro", "html_url": "https://github.com/aarcro", "followers_url": "https://api.github.com/users/aarcro/followers", "following_url": "https://api.github.com/users/aarcro/following{/other_user}", "gists_url": "https://api.github.com/users/aarcro/gists{/gist_id}", "starred_url": "https://api.github.com/users/aarcro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aarcro/subscriptions", "organizations_url": "https://api.github.com/users/aarcro/orgs", "repos_url": "https://api.github.com/users/aarcro/repos", "events_url": "https://api.github.com/users/aarcro/events{/privacy}", "received_events_url": "https://api.github.com/users/aarcro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-08-27T19:32:05Z", "updated_at": "2014-07-07T17:26:56Z", "closed_at": "2014-07-07T17:26:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "In splunklib/results.py at line 257 `values.append(elem.text.encode('utf8'))` can raise an AttributeError for encode.\n\nIf the xml looks like:\n\n```\n<field k='named_field'>\n    <value><text></text></value>\n</field>\n```\n\nelem.text will be the None object, not an empty string as one might expect. I've used this instead:\n\n```\nt = elem.text\nif not t:\n    t = ''\n values.append(t.encode('utf8'))\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/69", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/69/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/69/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/69", "id": 17393196, "node_id": "MDU6SXNzdWUxNzM5MzE5Ng==", "number": 69, "title": "client port should be passed to httplib as integer not string", "user": {"login": "bcavagnolo", "id": 289954, "node_id": "MDQ6VXNlcjI4OTk1NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/289954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bcavagnolo", "html_url": "https://github.com/bcavagnolo", "followers_url": "https://api.github.com/users/bcavagnolo/followers", "following_url": "https://api.github.com/users/bcavagnolo/following{/other_user}", "gists_url": "https://api.github.com/users/bcavagnolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/bcavagnolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bcavagnolo/subscriptions", "organizations_url": "https://api.github.com/users/bcavagnolo/orgs", "repos_url": "https://api.github.com/users/bcavagnolo/repos", "events_url": "https://api.github.com/users/bcavagnolo/events{/privacy}", "received_events_url": "https://api.github.com/users/bcavagnolo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-07-30T12:32:02Z", "updated_at": "2014-07-09T19:04:25Z", "closed_at": "2014-07-09T19:04:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I pass an unresolved hostname to client.connect, I get an exception:\n\n```\n<snip>\n  File \"/usr/local/lib/python2.7/dist-packages/splunklib/client.py\", line 288, in connect\n    return Service(**kwargs).login()\n  File \"/usr/local/lib/python2.7/dist-packages/splunklib/binding.py\", line 751, in login\n    password=self.password)\n  File \"/usr/local/lib/python2.7/dist-packages/splunklib/binding.py\", line 1079, in post\n    return self.request(url, message)\n  File \"/usr/local/lib/python2.7/dist-packages/splunklib/binding.py\", line 1096, in request\n    response = self.handler(url, message, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/splunklib/binding.py\", line 1195, in request\n    connection.request(method, path, body, head)\n  File \"/usr/lib/python2.7/httplib.py\", line 958, in request\n    self._send_request(method, url, body, headers)\n  File \"/usr/lib/python2.7/httplib.py\", line 992, in _send_request\n    self.endheaders(body)\n  File \"/usr/lib/python2.7/httplib.py\", line 954, in endheaders\n    self._send_output(message_body)\n  File \"/usr/lib/python2.7/httplib.py\", line 814, in _send_output\n    self.send(msg)\n  File \"/usr/lib/python2.7/httplib.py\", line 776, in send\n    self.connect()\n  File \"/usr/lib/python2.7/httplib.py\", line 1157, in connect\n    self.timeout, self.source_address)\n  File \"/usr/local/lib/python2.7/dist-packages/gevent/socket.py\", line 637, in create_connection\n    for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n  File \"/usr/local/lib/python2.7/dist-packages/gevent/socket.py\", line 737, in getaddrinfo\n    raise gaierror(EAI_SERVICE, 'Servname not supported for ai_socktype')\nsocket.gaierror: [Errno -8] Servname not supported for ai_socktype\n```\n\nbinding.py:hander.request extracts the port as a string from a url argument.  This gets passed down the stack eventually (on my system, anyway) to gevent/socket.py.  getaddrinfo sees the port as a string and tries to look it up in /etc/services instead of accepting it as an integer.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/66", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/66/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/66/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/66", "id": 15707768, "node_id": "MDU6SXNzdWUxNTcwNzc2OA==", "number": 66, "title": "When our Splunk machine is heavily in use, a REST call to get the results of a search job will fail unexpectedly", "user": {"login": "borisdev", "id": 367522, "node_id": "MDQ6VXNlcjM2NzUyMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/367522?v=4", "gravatar_id": "", "url": "https://api.github.com/users/borisdev", "html_url": "https://github.com/borisdev", "followers_url": "https://api.github.com/users/borisdev/followers", "following_url": "https://api.github.com/users/borisdev/following{/other_user}", "gists_url": "https://api.github.com/users/borisdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/borisdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/borisdev/subscriptions", "organizations_url": "https://api.github.com/users/borisdev/orgs", "repos_url": "https://api.github.com/users/borisdev/repos", "events_url": "https://api.github.com/users/borisdev/events{/privacy}", "received_events_url": "https://api.github.com/users/borisdev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-06-18T19:44:26Z", "updated_at": "2014-07-03T19:02:05Z", "closed_at": "2014-07-03T19:02:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "When our Splunk machine is heavily in use, a REST call to get the results of a search job will fail unexpectedly, as below:\n\n```\njob.refresh()\n  File \"splunk-sdk-python/splunklib/client.py\", line 955, in refresh\n    self._state = self.read()\n  File \"/splunk-sdk-python/splunklib/client.py\", line 1014, in read\n    results = self._load_state(response)\n  File \"splunk-sdk-python/splunklib/client.py\", line 878, in _load_state\n    entry = self._load_atom_entry(response)\n  File \"splunk-sdk-python/splunklib/client.py\", line 2379, in _load_atom_entry\n    return _load_atom(response).entry\nAttributeError: 'NoneType' object has no attribute 'entry'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/65", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/65/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/65/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/65", "id": 15617395, "node_id": "MDU6SXNzdWUxNTYxNzM5NQ==", "number": 65, "title": "XML parse error with \"Connection: keep-alive\"", "user": {"login": "mic159", "id": 849426, "node_id": "MDQ6VXNlcjg0OTQyNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/849426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mic159", "html_url": "https://github.com/mic159", "followers_url": "https://api.github.com/users/mic159/followers", "following_url": "https://api.github.com/users/mic159/following{/other_user}", "gists_url": "https://api.github.com/users/mic159/gists{/gist_id}", "starred_url": "https://api.github.com/users/mic159/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mic159/subscriptions", "organizations_url": "https://api.github.com/users/mic159/orgs", "repos_url": "https://api.github.com/users/mic159/repos", "events_url": "https://api.github.com/users/mic159/events{/privacy}", "received_events_url": "https://api.github.com/users/mic159/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2013-06-17T05:40:32Z", "updated_at": "2014-09-08T17:29:07Z", "closed_at": "2014-09-08T17:27:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "The python splunk SDK currently breaks when the server uses \"Connection: keep-alive\".\n\nThe issue is in splunklib.binding:handler, in the request method, you get the response object, then call close on the connection, then try to read the data.\n\nWhen the server is using keep-alive, httplib will give you an empty response after you call connection.close().\n\nWe currently have NginX running in front of Splunk, which was changing it to keep-alive.\n\nI'm using python2.7 on ubuntu 13.04 and ubuntu 12.04.\nThe error I get is:\n\n```\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/aaa/.virtualenvs/splunk/local/lib/python2.7/site-packages/splunklib/client.py\", line 288, in connect\n    return Service(**kwargs).login()\n  File \"/home/aaa/.virtualenvs/splunk/local/lib/python2.7/site-packages/splunklib/binding.py\", line 753, in login\n    session = XML(body).findtext(\"./sessionKey\")\n  File \"/usr/lib/python2.7/xml/etree/ElementTree.py\", line 1302, in XML\n    return parser.close()\n  File \"/usr/lib/python2.7/xml/etree/ElementTree.py\", line 1655, in close\n    self._raiseerror(v)\n  File \"/usr/lib/python2.7/xml/etree/ElementTree.py\", line 1507, in _raiseerror\n    raise err\nxml.etree.ElementTree.ParseError: no element found: line 1, column 0\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/64", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/64/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/64/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/64", "id": 15171067, "node_id": "MDU6SXNzdWUxNTE3MTA2Nw==", "number": 64, "title": "UrlEncoded __repr__ recurses infinitely", "user": {"login": "aarcro", "id": 279725, "node_id": "MDQ6VXNlcjI3OTcyNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/279725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aarcro", "html_url": "https://github.com/aarcro", "followers_url": "https://api.github.com/users/aarcro/followers", "following_url": "https://api.github.com/users/aarcro/following{/other_user}", "gists_url": "https://api.github.com/users/aarcro/gists{/gist_id}", "starred_url": "https://api.github.com/users/aarcro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aarcro/subscriptions", "organizations_url": "https://api.github.com/users/aarcro/orgs", "repos_url": "https://api.github.com/users/aarcro/repos", "events_url": "https://api.github.com/users/aarcro/events{/privacy}", "received_events_url": "https://api.github.com/users/aarcro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-06-05T13:57:28Z", "updated_at": "2013-06-05T21:28:26Z", "closed_at": "2013-06-05T21:28:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/splunk/splunk-sdk-python/blob/master/splunklib/binding.py#L157\n\nreplace with this:\n\nreturn \"UrlEncoded(%s)\" % repr(urllib.unquote(str(self)))\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/63", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/63/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/63/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/63", "id": 13131578, "node_id": "MDU6SXNzdWUxMzEzMTU3OA==", "number": 63, "title": "problem while installing splunk-sdk-python", "user": {"login": "preetigarg", "id": 4138735, "node_id": "MDQ6VXNlcjQxMzg3MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/4138735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/preetigarg", "html_url": "https://github.com/preetigarg", "followers_url": "https://api.github.com/users/preetigarg/followers", "following_url": "https://api.github.com/users/preetigarg/following{/other_user}", "gists_url": "https://api.github.com/users/preetigarg/gists{/gist_id}", "starred_url": "https://api.github.com/users/preetigarg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/preetigarg/subscriptions", "organizations_url": "https://api.github.com/users/preetigarg/orgs", "repos_url": "https://api.github.com/users/preetigarg/repos", "events_url": "https://api.github.com/users/preetigarg/events{/privacy}", "received_events_url": "https://api.github.com/users/preetigarg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-04-12T17:50:09Z", "updated_at": "2013-05-03T06:31:30Z", "closed_at": "2013-05-03T06:31:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "As mentioned in the document, i cloned the splunk-sdk-python setup from github. when i try to install the sdk using command \"python setup.py install\", it throws the error that \"could not find coverage module. Please install it and try again\". \n\nPlease tell what could be the possible reason for error. Are there any path settings required?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/45", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/45/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/45/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/45", "id": 6422231, "node_id": "MDU6SXNzdWU2NDIyMjMx", "number": 45, "title": "[default] stanza not showing up in props.conf", "user": {"login": "parhamfh", "id": 1158754, "node_id": "MDQ6VXNlcjExNTg3NTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1158754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/parhamfh", "html_url": "https://github.com/parhamfh", "followers_url": "https://api.github.com/users/parhamfh/followers", "following_url": "https://api.github.com/users/parhamfh/following{/other_user}", "gists_url": "https://api.github.com/users/parhamfh/gists{/gist_id}", "starred_url": "https://api.github.com/users/parhamfh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/parhamfh/subscriptions", "organizations_url": "https://api.github.com/users/parhamfh/orgs", "repos_url": "https://api.github.com/users/parhamfh/repos", "events_url": "https://api.github.com/users/parhamfh/events{/privacy}", "received_events_url": "https://api.github.com/users/parhamfh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2012-08-23T23:11:57Z", "updated_at": "2014-07-02T21:19:05Z", "closed_at": "2014-07-02T21:19:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running into a problem that is really boggling me. I am listing the stanzas in `props.conf`. Basically the one under `system/default`. (from the `nobody/system` namespace)\n\nThe problem is that the `[default]`-stanza doesn't show up. I have tried adding new stanzas after and before the [default] stanza and they show up when you list the stanzas in the props.conf SDK `Conf` object. \n\nI tried listing stuff that gets parsed in the splunklib/client.py and I noticed a `default-mode` title string popping up here and there when listing. The default-mode didn't get listed as a stanza though. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/43", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/43/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/43/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/43", "id": 6088383, "node_id": "MDU6SXNzdWU2MDg4Mzgz", "number": 43, "title": "output_mode=csv when fetching results breaks results parser?", "user": {"login": "parhamfh", "id": 1158754, "node_id": "MDQ6VXNlcjExNTg3NTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1158754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/parhamfh", "html_url": "https://github.com/parhamfh", "followers_url": "https://api.github.com/users/parhamfh/followers", "following_url": "https://api.github.com/users/parhamfh/following{/other_user}", "gists_url": "https://api.github.com/users/parhamfh/gists{/gist_id}", "starred_url": "https://api.github.com/users/parhamfh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/parhamfh/subscriptions", "organizations_url": "https://api.github.com/users/parhamfh/orgs", "repos_url": "https://api.github.com/users/parhamfh/repos", "events_url": "https://api.github.com/users/parhamfh/events{/privacy}", "received_events_url": "https://api.github.com/users/parhamfh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2012-08-07T20:45:40Z", "updated_at": "2012-08-20T20:38:25Z", "closed_at": "2012-08-20T20:38:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "With reference to JIRA issue SPL-53634 I am translating the Java SDK example described in http://dev.staging.splunk.com/view/SP-CAAAECN#search to a Helmut example. The code can be seen below. It seems to work when I omit writing output_mode='csv'. In case I don't omit it I get the following error.\n\n```\nTraceback (most recent call last):\n  File \"./fetcheventstest.htest.py\", line 37, in <module>\n    for r in job.get_results(output_mode='csv',count=max_result_rows,offset=get_offset):\n  File \"/Users/phashemi/gitdepot/splunk-helmut/helmut/manager/jobs/sdk/job.py\", line 176, in get_results\n    return _build_results_from_sdk_response(response)\n  File \"/Users/phashemi/gitdepot/splunk-helmut/helmut/manager/jobs/sdk/job.py\", line 206, in     _build_results_from_sdk_response\n    while reader.read():\n  File \"/Users/phashemi/gitdepot/splunk-helmut/helmut/contrib/splunk-sdk-python/splunklib/results.py\", line 397, in read\n        kind = self._scan()\n  File \"/Users/phashemi/gitdepot/splunk-helmut/helmut/contrib/splunk-sdk-python/splunklib/results.py\", line 364, in _scan\n    self._reader.read()\n  File \"/Users/phashemi/gitdepot/splunk-helmut/helmut/contrib/splunk-sdk-python/splunklib/results.py\", line 197, in read\n    self._item = self._scan()\n  File \"/Users/phashemi/gitdepot/splunk-helmut/helmut/contrib/splunk-sdk-python/splunklib/results.py\", line 147, in _scan\n    item = self._items.next()\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/xml/dom/pulldom.py\", line 232, in next\n    rc = self.getEvent()\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/xml/dom/pulldom.py\", line 265, in getEvent\n    self.parser.feed(buf)\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/xml/sax/expatreader.py\", line 211, in feed\n    self._err_handler.fatalError(exc)\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/xml/sax/handler.py\", line 38, in fatalError\n    raise exception\nxml.sax._exceptions.SAXParseException: <unknown>:1:5: not well-formed (invalid token)\n```\n\nThe code is this:\n\n``` python\nSPLUNK_HOME = '/Users/phashemi/splh/'\nsplunk = LocalSplunk(SPLUNK_HOME)\n\njob = splunk.jobs.create('search index=_internal')\njob.wait()\n\nmax_result_rows = int(splunk.confs['limits']['restapi']['maxresultrows'])\neventcount = int(job.get_event_count())\n\nget_offset = 0\nnum = 0\nwhile get_offset < eventcount:\n\n    for r in job.get_results(output_mode='csv',count=max_result_rows,offset=get_offset):\n        print num\n        num = num + 1\n\n    get_offset = get_offset + max_result_rows\n\nprint \"Done parsing all events.\"\n```\n\nand in helmut:\n\n```\ndef get_results(self, **kwargs):\n    response = self.raw_sdk_job.results(**kwargs)\n    return _build_results_from_sdk_response(response)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/41", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/41/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/41/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/41", "id": 5740182, "node_id": "MDU6SXNzdWU1NzQwMTgy", "number": 41, "title": "Endpoint in client for changing port(s) (server/settings)", "user": {"login": "parhamfh", "id": 1158754, "node_id": "MDQ6VXNlcjExNTg3NTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1158754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/parhamfh", "html_url": "https://github.com/parhamfh", "followers_url": "https://api.github.com/users/parhamfh/followers", "following_url": "https://api.github.com/users/parhamfh/following{/other_user}", "gists_url": "https://api.github.com/users/parhamfh/gists{/gist_id}", "starred_url": "https://api.github.com/users/parhamfh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/parhamfh/subscriptions", "organizations_url": "https://api.github.com/users/parhamfh/orgs", "repos_url": "https://api.github.com/users/parhamfh/repos", "events_url": "https://api.github.com/users/parhamfh/events{/privacy}", "received_events_url": "https://api.github.com/users/parhamfh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2012-07-20T15:48:18Z", "updated_at": "2014-07-02T21:19:28Z", "closed_at": "2014-07-02T21:19:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "It is possible to change the port of Splunk via the rest endpoint. if you hit the http://docs.splunk.com/Documentation/Splunk/4.3.3/RESTAPI/RESTsystem#POST_server.2Fsettings.2F.7Bname.7D\nendpoint. It would be really nice to be able to do this since the current only way of doing it in my framework is by executing the binary. \n\nExample:\n<code>~> curl -k -u admin:changeme https://localhost:8089/services/server/settings/settings -d httpport=990</code>\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/35", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/35/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/35/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/35", "id": 5008526, "node_id": "MDU6SXNzdWU1MDA4NTI2", "number": 35, "title": "Hostnames are ambiguously resolved on Dual Stack IPv4/6 Networks", "user": {"login": "andydoubleyou", "id": 656851, "node_id": "MDQ6VXNlcjY1Njg1MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/656851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andydoubleyou", "html_url": "https://github.com/andydoubleyou", "followers_url": "https://api.github.com/users/andydoubleyou/followers", "following_url": "https://api.github.com/users/andydoubleyou/following{/other_user}", "gists_url": "https://api.github.com/users/andydoubleyou/gists{/gist_id}", "starred_url": "https://api.github.com/users/andydoubleyou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andydoubleyou/subscriptions", "organizations_url": "https://api.github.com/users/andydoubleyou/orgs", "repos_url": "https://api.github.com/users/andydoubleyou/repos", "events_url": "https://api.github.com/users/andydoubleyou/events{/privacy}", "received_events_url": "https://api.github.com/users/andydoubleyou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "shakeelmohamed", "id": 1480063, "node_id": "MDQ6VXNlcjE0ODAwNjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1480063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shakeelmohamed", "html_url": "https://github.com/shakeelmohamed", "followers_url": "https://api.github.com/users/shakeelmohamed/followers", "following_url": "https://api.github.com/users/shakeelmohamed/following{/other_user}", "gists_url": "https://api.github.com/users/shakeelmohamed/gists{/gist_id}", "starred_url": "https://api.github.com/users/shakeelmohamed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shakeelmohamed/subscriptions", "organizations_url": "https://api.github.com/users/shakeelmohamed/orgs", "repos_url": "https://api.github.com/users/shakeelmohamed/repos", "events_url": "https://api.github.com/users/shakeelmohamed/events{/privacy}", "received_events_url": "https://api.github.com/users/shakeelmohamed/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shakeelmohamed", "id": 1480063, "node_id": "MDQ6VXNlcjE0ODAwNjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1480063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shakeelmohamed", "html_url": "https://github.com/shakeelmohamed", "followers_url": "https://api.github.com/users/shakeelmohamed/followers", "following_url": "https://api.github.com/users/shakeelmohamed/following{/other_user}", "gists_url": "https://api.github.com/users/shakeelmohamed/gists{/gist_id}", "starred_url": "https://api.github.com/users/shakeelmohamed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shakeelmohamed/subscriptions", "organizations_url": "https://api.github.com/users/shakeelmohamed/orgs", "repos_url": "https://api.github.com/users/shakeelmohamed/repos", "events_url": "https://api.github.com/users/shakeelmohamed/events{/privacy}", "received_events_url": "https://api.github.com/users/shakeelmohamed/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2012-06-11T17:56:46Z", "updated_at": "2015-11-21T01:29:42Z", "closed_at": "2015-11-21T01:29:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Steps to reproduce:\nNetwork like Splunk's, with support for both IPv4 and IPv6.\nTwo machines configured for both protocols.\nOne running Splunk.\nOne running Splunk Python SDK.\n\nWhen hostname is provided, Splunk Python SDK will attempt to connect using IPv6 if the machine being reached has a AAAA record.  Unfortunately, Splunkd does not come configured automatically to listen on IPv6.  So the service attempts to connect and times out.  We should have a default of using IPv4 to connect, with a suite of configurable options akin to Splunk's own \"connectUsingIpVersion\" directive.\n\nhttp://docs.splunk.com/Documentation/Splunk/latest/Admin/ConfigureSplunkforIPv6#Configure_Splunk_to_listen_on_an_IPv6_network\n\nhttp://docs.python.org/library/socket.html\n\nThis is a common issue with any utility using php, perl, python... pretty much any language that utilizes the getHostByHostname family of underlying routines.  Sadly, this is not elegantly configurable as IPv6 support for python's socket is a compile time option.  Best work around is to use socket directly to resolve the hostname at connect time (do not cache this data) and use the appropriate returned IP address(es) for the connect option desired.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/34", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/34/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/34/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/34", "id": 4616205, "node_id": "MDU6SXNzdWU0NjE2MjA1", "number": 34, "title": "Unable to pass the hostname as unicode string?", "user": {"login": "hsebastian", "id": 107400, "node_id": "MDQ6VXNlcjEwNzQwMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/107400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hsebastian", "html_url": "https://github.com/hsebastian", "followers_url": "https://api.github.com/users/hsebastian/followers", "following_url": "https://api.github.com/users/hsebastian/following{/other_user}", "gists_url": "https://api.github.com/users/hsebastian/gists{/gist_id}", "starred_url": "https://api.github.com/users/hsebastian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hsebastian/subscriptions", "organizations_url": "https://api.github.com/users/hsebastian/orgs", "repos_url": "https://api.github.com/users/hsebastian/repos", "events_url": "https://api.github.com/users/hsebastian/events{/privacy}", "received_events_url": "https://api.github.com/users/hsebastian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-05-16T23:24:59Z", "updated_at": "2014-07-02T21:21:02Z", "closed_at": "2014-07-02T21:21:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \n\nWe're using splunk-sdk and in our code we're getting the hostname as unicode string and pass it in like the example below. Is this be a bug or should my code handle it?\n\n```\n(env26_test)16:19 hsebastian@jemli ~> cat unicode.py \nimport splunklib.client\n\nservice = splunklib.client.connect(host=u'localhost')\n(env26_test)16:19 hsebastian@jemli ~> python unicode.py \nTraceback (most recent call last):\n  File \"unicode.py\", line 3, in <module>\n    service = splunklib.client.connect(host=u'localhost')\n  File \"/Users/hsebastian/storm_repo/env26_test/lib/python2.6/site-packages/splunklib/client.py\", line 162, in connect\n    return Service(**kwargs).login()\n  File \"/Users/hsebastian/storm_repo/env26_test/lib/python2.6/site-packages/splunklib/binding.py\", line 206, in login\n    password=self.password)\n  File \"/Users/hsebastian/storm_repo/env26_test/lib/python2.6/site-packages/splunklib/binding.py\", line 372, in post\n    return self.request(url, message)\n  File \"/Users/hsebastian/storm_repo/env26_test/lib/python2.6/site-packages/splunklib/binding.py\", line 375, in request\n    response = self.handler(url, message, **kwargs)\n  File \"/Users/hsebastian/storm_repo/env26_test/lib/python2.6/site-packages/splunklib/binding.py\", line 430, in request\n    connection.request(method, path, body, head)\n  File \"/Users/hsebastian/python267/lib/python2.6/httplib.py\", line 914, in request\n    self._send_request(method, url, body, headers)\n  File \"/Users/hsebastian/python267/lib/python2.6/httplib.py\", line 951, in _send_request\n    self.endheaders()\n  File \"/Users/hsebastian/python267/lib/python2.6/httplib.py\", line 908, in endheaders\n    self._send_output()\n  File \"/Users/hsebastian/python267/lib/python2.6/httplib.py\", line 780, in _send_output\n    self.send(msg)\n  File \"/Users/hsebastian/python267/lib/python2.6/httplib.py\", line 739, in send\n    self.connect()\n  File \"/Users/hsebastian/python267/lib/python2.6/httplib.py\", line 1112, in connect\n    sock = socket.create_connection((self.host, self.port), self.timeout)\n  File \"/Users/hsebastian/python267/lib/python2.6/socket.py\", line 547, in create_connection\n    for res in getaddrinfo(host, port, 0, SOCK_STREAM):\nsocket.error: Int or String expected\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/33", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/33/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/33/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/33", "id": 4582168, "node_id": "MDU6SXNzdWU0NTgyMTY4", "number": 33, "title": "Supplying multiple roles when creating an User", "user": {"login": "parhamfh", "id": 1158754, "node_id": "MDQ6VXNlcjExNTg3NTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1158754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/parhamfh", "html_url": "https://github.com/parhamfh", "followers_url": "https://api.github.com/users/parhamfh/followers", "following_url": "https://api.github.com/users/parhamfh/following{/other_user}", "gists_url": "https://api.github.com/users/parhamfh/gists{/gist_id}", "starred_url": "https://api.github.com/users/parhamfh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/parhamfh/subscriptions", "organizations_url": "https://api.github.com/users/parhamfh/orgs", "repos_url": "https://api.github.com/users/parhamfh/repos", "events_url": "https://api.github.com/users/parhamfh/events{/privacy}", "received_events_url": "https://api.github.com/users/parhamfh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-05-15T11:39:24Z", "updated_at": "2012-07-18T18:46:25Z", "closed_at": "2012-05-15T20:20:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is related to issue #32.\n\nWhen creating a User you must provide a role too: admin or user for instance. As specified in http://docs.splunk.com/Documentation/Splunk/latest/RESTAPI/RESTaccess#authentication.2Fusers under the header \"POST authentication/users\" which describes creation of a user, you can also specify a list of roles:\n\n_\"... To assign multiple roles, send them in separate roles parameters.\"_\n\nthat means writing something like _-d roles=admin -d roles=user_. This obviously will not work in our python implementation seeing as we are using a dict. I tried experimenting with different ways of supplying both the roles in one **-d roles=**-option using _&_ , _;_ and _{}_. _[]_ but couldn't figure it out. So I assume you must supply separate **roles** options.\n\nDo you guys have any idea of how to fix/work around this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/32", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/32/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/32/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/32", "id": 4582044, "node_id": "MDU6SXNzdWU0NTgyMDQ0", "number": 32, "title": "Adding parameters to Users.create ", "user": {"login": "parhamfh", "id": 1158754, "node_id": "MDQ6VXNlcjExNTg3NTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1158754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/parhamfh", "html_url": "https://github.com/parhamfh", "followers_url": "https://api.github.com/users/parhamfh/followers", "following_url": "https://api.github.com/users/parhamfh/following{/other_user}", "gists_url": "https://api.github.com/users/parhamfh/gists{/gist_id}", "starred_url": "https://api.github.com/users/parhamfh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/parhamfh/subscriptions", "organizations_url": "https://api.github.com/users/parhamfh/orgs", "repos_url": "https://api.github.com/users/parhamfh/repos", "events_url": "https://api.github.com/users/parhamfh/events{/privacy}", "received_events_url": "https://api.github.com/users/parhamfh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-05-15T11:31:13Z", "updated_at": "2012-05-21T18:55:26Z", "closed_at": "2012-05-21T18:55:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am working on Helmuts Users manager and I noticed something. To create a user you need to specify password as well as roles. This can be done in the kwargs, but shouldn't these be positional arguments? I think that if the method breaks when arguments are not provided in kwargs they should be.\n\nExample response is:\n\nTraceback (most recent call last):\n  File \"./usermanager.htest.py\", line 20, in <module>\n    splunk.users.create_user('Khorde', 'testar')\n  File \"/Users/phashemi/gitdepot/splunk-helmut/helmut/manager/users/sdk/**init**.py\", line 29, in create_user\n    self.connector.service.users.create(username, *_kwargs))\n  File \"/Users/phashemi/gitdepot/splunk-helmut/helmut/contrib/splunk-sdk-python/splunklib/client.py\", line 1004, in create\n    return Collection.create(self, name.lower(), *_kwargs)\n  File \"/Users/phashemi/gitdepot/splunk-helmut/helmut/contrib/splunk-sdk-python/splunklib/client.py\", line 450, in create\n    self.post(name=name, *_kwargs)\n  File \"/Users/phashemi/gitdepot/splunk-helmut/helmut/contrib/splunk-sdk-python/splunklib/client.py\", line 309, in post\n    return self.service.post(\"%s%s\" % (self.path, relpath), *_kwargs)\n  File \"/Users/phashemi/gitdepot/splunk-helmut/helmut/contrib/splunk-sdk-python/splunklib/binding.py\", line 185, in post\n    return self.http.post(self.url(path), self._headers(), **kwargs)\n  File \"/Users/phashemi/gitdepot/splunk-helmut/helmut/contrib/splunk-sdk-python/splunklib/binding.py\", line 372, in post\n    return self.request(url, message)\n  File \"/Users/phashemi/gitdepot/splunk-helmut/helmut/contrib/splunk-sdk-python/splunklib/binding.py\", line 378, in request\n    raise HTTPError(response) \nsplunklib.binding.HTTPError: HTTP 400 Bad Request -- In handler 'users': Users must be given at least one role\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/29", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/29/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/29/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/29", "id": 4405529, "node_id": "MDU6SXNzdWU0NDA1NTI5", "number": 29, "title": "Will Index.clean() perform its task eventhough it is timed out?", "user": {"login": "parhamfh", "id": 1158754, "node_id": "MDQ6VXNlcjExNTg3NTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1158754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/parhamfh", "html_url": "https://github.com/parhamfh", "followers_url": "https://api.github.com/users/parhamfh/followers", "following_url": "https://api.github.com/users/parhamfh/following{/other_user}", "gists_url": "https://api.github.com/users/parhamfh/gists{/gist_id}", "starred_url": "https://api.github.com/users/parhamfh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/parhamfh/subscriptions", "organizations_url": "https://api.github.com/users/parhamfh/orgs", "repos_url": "https://api.github.com/users/parhamfh/repos", "events_url": "https://api.github.com/users/parhamfh/events{/privacy}", "received_events_url": "https://api.github.com/users/parhamfh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-05-03T14:02:39Z", "updated_at": "2014-07-02T21:21:20Z", "closed_at": "2014-07-02T21:21:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "A _different_ issue, but the way **clean** is implemented with shrinking bucket sizes and rolling, can this not cause a situation where the operation times out, but the cleaning has actually been performed? I.e **OperationTimeout** is raised, but the **clean()** was actually successful? What would **timeout** mean in this situation? \n\nThe reason I am asking is because I think that this might be the situation in my test. Since **clean()** throws the **OperationTimeout** but there are no events left when I manually check **eventcount**. \n# \n\nSecondly, a new sidenote: Isn't the timeout on 60 seconds that now has been put in place also a breaking change? It broke a little in helmut since cleaning sometimes takes longer than 60 seconds, and before Index.clean() ran indefinitely. What I am also curious about, is 60 seconds a good default value? I mean, our test logfile only has 10000 events and it is timing out sometimes, when cleaning out the index holding the data.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/27", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/27/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/27/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/27", "id": 4389753, "node_id": "MDU6SXNzdWU0Mzg5NzUz", "number": 27, "title": "Cannot pass a pre-existing session token to Service/Context", "user": {"login": "itay", "id": 3266, "node_id": "MDQ6VXNlcjMyNjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itay", "html_url": "https://github.com/itay", "followers_url": "https://api.github.com/users/itay/followers", "following_url": "https://api.github.com/users/itay/following{/other_user}", "gists_url": "https://api.github.com/users/itay/gists{/gist_id}", "starred_url": "https://api.github.com/users/itay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itay/subscriptions", "organizations_url": "https://api.github.com/users/itay/orgs", "repos_url": "https://api.github.com/users/itay/repos", "events_url": "https://api.github.com/users/itay/events{/privacy}", "received_events_url": "https://api.github.com/users/itay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2012-05-02T17:46:42Z", "updated_at": "2012-05-02T18:14:36Z", "closed_at": "2012-05-02T18:14:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The comment for `Context` specifies that you can pass in an optional session token (using `token` kwarg) to the Context `__init__` method. However, the method never looks it up and always initialize it to `None`, which is a bug.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/25", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/25/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/25/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/25", "id": 4312177, "node_id": "MDU6SXNzdWU0MzEyMTc3", "number": 25, "title": "Removing attributes from Stanza?", "user": {"login": "parhamfh", "id": 1158754, "node_id": "MDQ6VXNlcjExNTg3NTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1158754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/parhamfh", "html_url": "https://github.com/parhamfh", "followers_url": "https://api.github.com/users/parhamfh/followers", "following_url": "https://api.github.com/users/parhamfh/following{/other_user}", "gists_url": "https://api.github.com/users/parhamfh/gists{/gist_id}", "starred_url": "https://api.github.com/users/parhamfh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/parhamfh/subscriptions", "organizations_url": "https://api.github.com/users/parhamfh/orgs", "repos_url": "https://api.github.com/users/parhamfh/repos", "events_url": "https://api.github.com/users/parhamfh/events{/privacy}", "received_events_url": "https://api.github.com/users/parhamfh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "shakeelmohamed", "id": 1480063, "node_id": "MDQ6VXNlcjE0ODAwNjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1480063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shakeelmohamed", "html_url": "https://github.com/shakeelmohamed", "followers_url": "https://api.github.com/users/shakeelmohamed/followers", "following_url": "https://api.github.com/users/shakeelmohamed/following{/other_user}", "gists_url": "https://api.github.com/users/shakeelmohamed/gists{/gist_id}", "starred_url": "https://api.github.com/users/shakeelmohamed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shakeelmohamed/subscriptions", "organizations_url": "https://api.github.com/users/shakeelmohamed/orgs", "repos_url": "https://api.github.com/users/shakeelmohamed/repos", "events_url": "https://api.github.com/users/shakeelmohamed/events{/privacy}", "received_events_url": "https://api.github.com/users/shakeelmohamed/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shakeelmohamed", "id": 1480063, "node_id": "MDQ6VXNlcjE0ODAwNjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1480063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shakeelmohamed", "html_url": "https://github.com/shakeelmohamed", "followers_url": "https://api.github.com/users/shakeelmohamed/followers", "following_url": "https://api.github.com/users/shakeelmohamed/following{/other_user}", "gists_url": "https://api.github.com/users/shakeelmohamed/gists{/gist_id}", "starred_url": "https://api.github.com/users/shakeelmohamed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shakeelmohamed/subscriptions", "organizations_url": "https://api.github.com/users/shakeelmohamed/orgs", "repos_url": "https://api.github.com/users/shakeelmohamed/repos", "events_url": "https://api.github.com/users/shakeelmohamed/events{/privacy}", "received_events_url": "https://api.github.com/users/shakeelmohamed/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2012-04-26T21:46:25Z", "updated_at": "2015-11-21T01:29:16Z", "closed_at": "2015-11-21T01:29:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using the new conf stuff in Helmut, great stuf guys! Got one question though, what is the preferred way of removing attributes from stanzas?\n\nRight now I simply do this:\n\n```\n        self.raw_sdk_stanza.update(**{key : ''})\n        self.raw_sdk_stanza.refresh()\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/24", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/24/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/24/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/24", "id": 4250182, "node_id": "MDU6SXNzdWU0MjUwMTgy", "number": 24, "title": "\"git clone https://github.com/splunk/splunk-sdk-python.git\" does not check out code", "user": {"login": "archankr", "id": 1672125, "node_id": "MDQ6VXNlcjE2NzIxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1672125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/archankr", "html_url": "https://github.com/archankr", "followers_url": "https://api.github.com/users/archankr/followers", "following_url": "https://api.github.com/users/archankr/following{/other_user}", "gists_url": "https://api.github.com/users/archankr/gists{/gist_id}", "starred_url": "https://api.github.com/users/archankr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/archankr/subscriptions", "organizations_url": "https://api.github.com/users/archankr/orgs", "repos_url": "https://api.github.com/users/archankr/repos", "events_url": "https://api.github.com/users/archankr/events{/privacy}", "received_events_url": "https://api.github.com/users/archankr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2012-04-23T22:08:51Z", "updated_at": "2012-04-24T19:21:33Z", "closed_at": "2012-04-24T19:21:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI get the following issue while trying to check out code\n\nsudo git clone https://github.com/splunk/splunk-sdk-python.git\nCloning into splunk-sdk-python...\nwarning: remote HEAD refers to nonexistent ref, unable to checkout.\n\nThe directory is empty except for a .git folder with some sub-directories. Any thoughts on this? From sites on the internet, seems like server info needs to be updated on the repo side. \n\nWaiting for your input.\n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/23", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/23/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/23/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/23", "id": 2435725, "node_id": "MDU6SXNzdWUyNDM1NzI1", "number": 23, "title": "__delitem__()", "user": {"login": "parhamfh", "id": 1158754, "node_id": "MDQ6VXNlcjExNTg3NTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1158754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/parhamfh", "html_url": "https://github.com/parhamfh", "followers_url": "https://api.github.com/users/parhamfh/followers", "following_url": "https://api.github.com/users/parhamfh/following{/other_user}", "gists_url": "https://api.github.com/users/parhamfh/gists{/gist_id}", "starred_url": "https://api.github.com/users/parhamfh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/parhamfh/subscriptions", "organizations_url": "https://api.github.com/users/parhamfh/orgs", "repos_url": "https://api.github.com/users/parhamfh/repos", "events_url": "https://api.github.com/users/parhamfh/events{/privacy}", "received_events_url": "https://api.github.com/users/parhamfh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2011-12-03T02:50:34Z", "updated_at": "2012-02-28T03:40:40Z", "closed_at": "2012-02-28T03:40:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys!\n\nJust curious about what your thoughts are on using the 'del' keyword in Python. It could for instance be used with Inputs and Input instances. Have you guys looked into using for example **delitem**(..) ?\n\nCheers\n- Pizza\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/22", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/22/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/22/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/22", "id": 2333902, "node_id": "MDU6SXNzdWUyMzMzOTAy", "number": 22, "title": "When adding a oneshot an object should be returned", "user": {"login": "ansman", "id": 102883, "node_id": "MDQ6VXNlcjEwMjg4Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/102883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ansman", "html_url": "https://github.com/ansman", "followers_url": "https://api.github.com/users/ansman/followers", "following_url": "https://api.github.com/users/ansman/following{/other_user}", "gists_url": "https://api.github.com/users/ansman/gists{/gist_id}", "starred_url": "https://api.github.com/users/ansman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ansman/subscriptions", "organizations_url": "https://api.github.com/users/ansman/orgs", "repos_url": "https://api.github.com/users/ansman/repos", "events_url": "https://api.github.com/users/ansman/events{/privacy}", "received_events_url": "https://api.github.com/users/ansman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 135645, "node_id": "MDU6TGFiZWwxMzU2NDU=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/core", "name": "core", "color": "d7e102", "default": false, "description": null}, {"id": 135641, "node_id": "MDU6TGFiZWwxMzU2NDE=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/enhancement", "name": "enhancement", "color": "02e10c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2011-11-23T19:56:48Z", "updated_at": "2014-08-25T18:43:40Z", "closed_at": "2014-08-25T18:43:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently when you add a oneshot nothing is returned.\n\nSince the oneshot contains data about the indexing progress an object should be returned instead.\n\nThis object should also have a wait method that waits for the oneshot to disappear from the REST API.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/21", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/21/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/21/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/21", "id": 2214515, "node_id": "MDU6SXNzdWUyMjE0NTE1", "number": 21, "title": "Update Twitter Examples to Use HTTPS", "user": {"login": "PaulSanford", "id": 828517, "node_id": "MDQ6VXNlcjgyODUxNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/828517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PaulSanford", "html_url": "https://github.com/PaulSanford", "followers_url": "https://api.github.com/users/PaulSanford/followers", "following_url": "https://api.github.com/users/PaulSanford/following{/other_user}", "gists_url": "https://api.github.com/users/PaulSanford/gists{/gist_id}", "starred_url": "https://api.github.com/users/PaulSanford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PaulSanford/subscriptions", "organizations_url": "https://api.github.com/users/PaulSanford/orgs", "repos_url": "https://api.github.com/users/PaulSanford/repos", "events_url": "https://api.github.com/users/PaulSanford/events{/privacy}", "received_events_url": "https://api.github.com/users/PaulSanford/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 135642, "node_id": "MDU6TGFiZWwxMzU2NDI=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 135644, "node_id": "MDU6TGFiZWwxMzU2NDQ=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/samples", "name": "samples", "color": "02d7e1", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2011-11-11T23:03:56Z", "updated_at": "2012-02-28T04:49:37Z", "closed_at": "2012-02-28T04:49:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Twitter has changed their auth to require https.  Change connection method call in all twitter examples to HTTPS\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/20", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/20/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/20/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/20", "id": 2189264, "node_id": "MDU6SXNzdWUyMTg5MjY0", "number": 20, "title": "Test files does not allow empty lines in .splunkrc", "user": {"login": "mraxus", "id": 837533, "node_id": "MDQ6VXNlcjgzNzUzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/837533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mraxus", "html_url": "https://github.com/mraxus", "followers_url": "https://api.github.com/users/mraxus/followers", "following_url": "https://api.github.com/users/mraxus/following{/other_user}", "gists_url": "https://api.github.com/users/mraxus/gists{/gist_id}", "starred_url": "https://api.github.com/users/mraxus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mraxus/subscriptions", "organizations_url": "https://api.github.com/users/mraxus/orgs", "repos_url": "https://api.github.com/users/mraxus/repos", "events_url": "https://api.github.com/users/mraxus/events{/privacy}", "received_events_url": "https://api.github.com/users/mraxus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 135642, "node_id": "MDU6TGFiZWwxMzU2NDI=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 135644, "node_id": "MDU6TGFiZWwxMzU2NDQ=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/samples", "name": "samples", "color": "02d7e1", "default": false, "description": null}, {"id": 188334, "node_id": "MDU6TGFiZWwxODgzMzQ=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/tests", "name": "tests", "color": "0b02e1", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2011-11-09T18:19:44Z", "updated_at": "2012-02-28T05:03:41Z", "closed_at": "2012-02-28T05:03:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using windows 7 x64\n\nWhen using the .splunkrc for authentication, empty lines are not allowed to be used. If doing so, the file is not read correctly, giving _HTTPError: HTTP 401 Unauthorized -- Login failed_.\n\nVerified for the files:\n- tests\\test_binding.py\n- tests\\test_client.py\n- tests\\test_examples.py\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/19", "repository_url": "https://api.github.com/repos/splunk/splunk-sdk-python", "labels_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/19/comments", "events_url": "https://api.github.com/repos/splunk/splunk-sdk-python/issues/19/events", "html_url": "https://github.com/splunk/splunk-sdk-python/issues/19", "id": 2181909, "node_id": "MDU6SXNzdWUyMTgxOTA5", "number": 19, "title": "Test files does not handle authentication arguments", "user": {"login": "mraxus", "id": 837533, "node_id": "MDQ6VXNlcjgzNzUzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/837533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mraxus", "html_url": "https://github.com/mraxus", "followers_url": "https://api.github.com/users/mraxus/followers", "following_url": "https://api.github.com/users/mraxus/following{/other_user}", "gists_url": "https://api.github.com/users/mraxus/gists{/gist_id}", "starred_url": "https://api.github.com/users/mraxus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mraxus/subscriptions", "organizations_url": "https://api.github.com/users/mraxus/orgs", "repos_url": "https://api.github.com/users/mraxus/repos", "events_url": "https://api.github.com/users/mraxus/events{/privacy}", "received_events_url": "https://api.github.com/users/mraxus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 135642, "node_id": "MDU6TGFiZWwxMzU2NDI=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 188334, "node_id": "MDU6TGFiZWwxODgzMzQ=", "url": "https://api.github.com/repos/splunk/splunk-sdk-python/labels/tests", "name": "tests", "color": "0b02e1", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2011-11-09T01:26:04Z", "updated_at": "2012-04-20T02:15:35Z", "closed_at": "2012-02-28T00:21:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Tested on Windows 7 x64.\n\nWhen running the test cases:\n- test_binding.py\n- test_client.py\n- test_data.py\n- test_examples.py\n\nOnly test_binding.py can handle the --username and --password arguments. The rest of the files does not recognize the arguments.\n### Example:\n\n> python test_binding.py --username=admin --password=changeme\n> ## ..........\n> \n> Ran 10 tests in 2.247s\n\nOK\n\n> python test_examples.py --username=admin --password=changeme\n> option --username not recognized\n> Usage: test_examples.py [options] [test] [...]\n\nOptions:\n...\n", "performed_via_github_app": null, "score": 1.0}]}