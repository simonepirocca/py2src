{"total_count": 17, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/ethereum/py_ecc/issues/98", "repository_url": "https://api.github.com/repos/ethereum/py_ecc", "labels_url": "https://api.github.com/repos/ethereum/py_ecc/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/py_ecc/issues/98/comments", "events_url": "https://api.github.com/repos/ethereum/py_ecc/issues/98/events", "html_url": "https://github.com/ethereum/py_ecc/issues/98", "id": 622695192, "node_id": "MDU6SXNzdWU2MjI2OTUxOTI=", "number": 98, "title": "Fails test vectors from hash_to_curve v7", "user": {"login": "paulmillr", "id": 574696, "node_id": "MDQ6VXNlcjU3NDY5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/574696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulmillr", "html_url": "https://github.com/paulmillr", "followers_url": "https://api.github.com/users/paulmillr/followers", "following_url": "https://api.github.com/users/paulmillr/following{/other_user}", "gists_url": "https://api.github.com/users/paulmillr/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulmillr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulmillr/subscriptions", "organizations_url": "https://api.github.com/users/paulmillr/orgs", "repos_url": "https://api.github.com/users/paulmillr/repos", "events_url": "https://api.github.com/users/paulmillr/events{/privacy}", "received_events_url": "https://api.github.com/users/paulmillr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-21T18:32:54Z", "updated_at": "2020-05-22T10:43:55Z", "closed_at": "2020-05-22T10:43:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "See [hash_to_curve spec version 7](https://tools.ietf.org/html/draft-irtf-cfrg-hash-to-curve-07#appendix-G.10.1), specifically msg=abc.\r\n\r\n## Expected\r\n\r\nIt should produce (stripping hex to 4 chars):\r\n\r\n```\r\nu[0]    = 0a7d + I * 1630\r\nu[1]    = 0a1c + I * 07aa\r\nP.x     = 1953 + I * 0357\r\nP.y     = 0882 + I * 0184\r\n```\r\n\r\n## Actual\r\n\r\nu0 and u1 are correct, everything else is not.\r\n\r\n```\r\nhash_to_curve u0=(0a7d...55f2 + 1630...b378\u00d7i), u1=(0a1c...f96b + 07aa...b788\u00d7i)\r\nQ0 Point<x=0265...f2c4 + 1957...bd53\u00d7i, y=0824...2918 + 0d1a...9589\u00d7i>\r\nQ1 Point<x=0368...80fe + 156d...19b1\u00d7i, y=0cda...087e + 0cc7...c12e\u00d7i>\r\nR Point<x=07e2...67a9 + 04cf...29ec\u00d7i, y=13db...0fd6 + 12b9...364a\u00d7i>\r\nPoint<x=0a4a...ab29 + 073f...766e\u00d7i, y=0e92...6bd4 + 1695...13eb\u00d7i>\r\n```\r\n\r\n## Test code\r\n\r\n(copy-paste helper methods to hash_to_curve.py if you want to log u, Q, R)\r\n\r\n```python\r\nfrom hashlib import sha256\r\nimport py_ecc\r\nfrom py_ecc.bls.hash_to_curve import hash_to_G2\r\n\r\ndef fq_to_hex(fq):\r\n    h = hex(fq)[2:].rjust(96, '0')\r\n    return '{}...{}'.format(h[:4], h[-4:])\r\ndef fq2_to_hex(fq2):\r\n    a, b = fq2.coeffs\r\n    return '{} + {}\u00d7i'.format(*map(fq_to_hex, fq2.coeffs))\r\ndef point_3d_to_2d(P):\r\n    z3inv = (P[2] ** 3).inv()\r\n    return (P[0] * P[2] * z3inv, P[1] * z3inv)\r\ndef ppp(p): # pretty print point\r\n    x, y = point_3d_to_2d(p)\r\n    return 'Point<x={}, y={}>'.format(fq2_to_hex(x), fq2_to_hex(y))\r\n\r\nmsg = b'abc'\r\ndst = b'BLS12381G2_XMD:SHA-256_SSWU_RO_TESTGEN'\r\nprint(ppp(hash_to_G2(msg, dst, sha256)))\r\n```\r\n\r\ncc @hwwhww @CarlBeek ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/py_ecc/issues/96", "repository_url": "https://api.github.com/repos/ethereum/py_ecc", "labels_url": "https://api.github.com/repos/ethereum/py_ecc/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/py_ecc/issues/96/comments", "events_url": "https://api.github.com/repos/ethereum/py_ecc/issues/96/events", "html_url": "https://github.com/ethereum/py_ecc/issues/96", "id": 615064081, "node_id": "MDU6SXNzdWU2MTUwNjQwODE=", "number": 96, "title": "Mysterious for... else statement in `optimized_swu`", "user": {"login": "hwwhww", "id": 9263930, "node_id": "MDQ6VXNlcjkyNjM5MzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9263930?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hwwhww", "html_url": "https://github.com/hwwhww", "followers_url": "https://api.github.com/users/hwwhww/followers", "following_url": "https://api.github.com/users/hwwhww/following{/other_user}", "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}", "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions", "organizations_url": "https://api.github.com/users/hwwhww/orgs", "repos_url": "https://api.github.com/users/hwwhww/repos", "events_url": "https://api.github.com/users/hwwhww/events{/privacy}", "received_events_url": "https://api.github.com/users/hwwhww/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-09T01:40:58Z", "updated_at": "2020-05-12T15:27:22Z", "closed_at": "2020-05-12T15:27:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### What is wrong?\r\n\r\nThis `else` clause on loop is never triggered without a break statement:\r\nhttps://github.com/ethereum/py_ecc/blob/50ee33abc9edb0ffd60acc88cf41614598bd9149/py_ecc/optimized_bls12_381/optimized_swu.py#L60-L63\r\n\r\n### How can it be fixed\r\nIs it okay to remove this clause?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/py_ecc/issues/90", "repository_url": "https://api.github.com/repos/ethereum/py_ecc", "labels_url": "https://api.github.com/repos/ethereum/py_ecc/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/py_ecc/issues/90/comments", "events_url": "https://api.github.com/repos/ethereum/py_ecc/issues/90/events", "html_url": "https://github.com/ethereum/py_ecc/issues/90", "id": 591124915, "node_id": "MDU6SXNzdWU1OTExMjQ5MTU=", "number": 90, "title": "Add Python 3.8 env", "user": {"login": "hwwhww", "id": 9263930, "node_id": "MDQ6VXNlcjkyNjM5MzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9263930?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hwwhww", "html_url": "https://github.com/hwwhww", "followers_url": "https://api.github.com/users/hwwhww/followers", "following_url": "https://api.github.com/users/hwwhww/following{/other_user}", "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}", "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions", "organizations_url": "https://api.github.com/users/hwwhww/orgs", "repos_url": "https://api.github.com/users/hwwhww/repos", "events_url": "https://api.github.com/users/hwwhww/events{/privacy}", "received_events_url": "https://api.github.com/users/hwwhww/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-31T13:48:08Z", "updated_at": "2020-05-06T14:25:21Z", "closed_at": "2020-05-06T14:25:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### What is wrong?\r\n\r\nAdd Python 3.8 env to the CI setting.\r\n\r\n### How can it be fixed\r\n\r\nFill this in if you know how to fix it.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/py_ecc/issues/76", "repository_url": "https://api.github.com/repos/ethereum/py_ecc", "labels_url": "https://api.github.com/repos/ethereum/py_ecc/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/py_ecc/issues/76/comments", "events_url": "https://api.github.com/repos/ethereum/py_ecc/issues/76/events", "html_url": "https://github.com/ethereum/py_ecc/issues/76", "id": 466671024, "node_id": "MDU6SXNzdWU0NjY2NzEwMjQ=", "number": 76, "title": "Introduce the `Domain` type", "user": {"login": "ralexstokes", "id": 3113781, "node_id": "MDQ6VXNlcjMxMTM3ODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3113781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ralexstokes", "html_url": "https://github.com/ralexstokes", "followers_url": "https://api.github.com/users/ralexstokes/followers", "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}", "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}", "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions", "organizations_url": "https://api.github.com/users/ralexstokes/orgs", "repos_url": "https://api.github.com/users/ralexstokes/repos", "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}", "received_events_url": "https://api.github.com/users/ralexstokes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ralexstokes", "id": 3113781, "node_id": "MDQ6VXNlcjMxMTM3ODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3113781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ralexstokes", "html_url": "https://github.com/ralexstokes", "followers_url": "https://api.github.com/users/ralexstokes/followers", "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}", "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}", "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions", "organizations_url": "https://api.github.com/users/ralexstokes/orgs", "repos_url": "https://api.github.com/users/ralexstokes/repos", "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}", "received_events_url": "https://api.github.com/users/ralexstokes/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ralexstokes", "id": 3113781, "node_id": "MDQ6VXNlcjMxMTM3ODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3113781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ralexstokes", "html_url": "https://github.com/ralexstokes", "followers_url": "https://api.github.com/users/ralexstokes/followers", "following_url": "https://api.github.com/users/ralexstokes/following{/other_user}", "gists_url": "https://api.github.com/users/ralexstokes/gists{/gist_id}", "starred_url": "https://api.github.com/users/ralexstokes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ralexstokes/subscriptions", "organizations_url": "https://api.github.com/users/ralexstokes/orgs", "repos_url": "https://api.github.com/users/ralexstokes/repos", "events_url": "https://api.github.com/users/ralexstokes/events{/privacy}", "received_events_url": "https://api.github.com/users/ralexstokes/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-07-11T05:30:59Z", "updated_at": "2019-07-12T01:12:58Z", "closed_at": "2019-07-12T01:12:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### What is wrong?\r\n\r\nA new type was introduced for the BLS domain here: https://github.com/ethereum/eth2.0-specs/pull/1246\r\n\r\nRight now, `py_ecc` takes the domain as an `int`.\r\n\r\n### How can it be fixed\r\n\r\nAdd the `Domain` type and update the `bls` API.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/py_ecc/issues/68", "repository_url": "https://api.github.com/repos/ethereum/py_ecc", "labels_url": "https://api.github.com/repos/ethereum/py_ecc/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/py_ecc/issues/68/comments", "events_url": "https://api.github.com/repos/ethereum/py_ecc/issues/68/events", "html_url": "https://github.com/ethereum/py_ecc/issues/68", "id": 441358679, "node_id": "MDU6SXNzdWU0NDEzNTg2Nzk=", "number": 68, "title": "Move to SHA256", "user": {"login": "zilm13", "id": 6196452, "node_id": "MDQ6VXNlcjYxOTY0NTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6196452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zilm13", "html_url": "https://github.com/zilm13", "followers_url": "https://api.github.com/users/zilm13/followers", "following_url": "https://api.github.com/users/zilm13/following{/other_user}", "gists_url": "https://api.github.com/users/zilm13/gists{/gist_id}", "starred_url": "https://api.github.com/users/zilm13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zilm13/subscriptions", "organizations_url": "https://api.github.com/users/zilm13/orgs", "repos_url": "https://api.github.com/users/zilm13/repos", "events_url": "https://api.github.com/users/zilm13/events{/privacy}", "received_events_url": "https://api.github.com/users/zilm13/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-07T17:50:46Z", "updated_at": "2019-05-23T21:56:40Z", "closed_at": "2019-05-23T21:56:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "* py-evm Version: 1.6.0\r\n* OS: osx/linux/win\r\n* Python Version (python --version):\r\n* Environment (output of `pip freeze`):\r\n\r\n### What is wrong?\r\n\r\nETH2.0 is using SHA256 instead of Keccak256 since v0.6.0 following this PR https://github.com/ethereum/eth2.0-specs/pull/779  \r\nPy-ecc is still using Keccak256: https://github.com/ethereum/py_ecc/blob/master/py_ecc/bls/hash.py  \r\nPy-ecc is used in BLS test generators etc.\r\n\r\n### How can it be fixed\r\n\r\nBy changing hashing algo to SHA256 + new version release, so it could be used as dependency.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/py_ecc/issues/59", "repository_url": "https://api.github.com/repos/ethereum/py_ecc", "labels_url": "https://api.github.com/repos/ethereum/py_ecc/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/py_ecc/issues/59/comments", "events_url": "https://api.github.com/repos/ethereum/py_ecc/issues/59/events", "html_url": "https://github.com/ethereum/py_ecc/issues/59", "id": 417854599, "node_id": "MDU6SXNzdWU0MTc4NTQ1OTk=", "number": 59, "title": "py-evm tests will fail with current master branch of py_ecc", "user": {"login": "ChihChengLiang", "id": 3391420, "node_id": "MDQ6VXNlcjMzOTE0MjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3391420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChihChengLiang", "html_url": "https://github.com/ChihChengLiang", "followers_url": "https://api.github.com/users/ChihChengLiang/followers", "following_url": "https://api.github.com/users/ChihChengLiang/following{/other_user}", "gists_url": "https://api.github.com/users/ChihChengLiang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChihChengLiang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChihChengLiang/subscriptions", "organizations_url": "https://api.github.com/users/ChihChengLiang/orgs", "repos_url": "https://api.github.com/users/ChihChengLiang/repos", "events_url": "https://api.github.com/users/ChihChengLiang/events{/privacy}", "received_events_url": "https://api.github.com/users/ChihChengLiang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2019-03-06T15:14:26Z", "updated_at": "2019-03-12T03:48:23Z", "closed_at": "2019-03-12T03:48:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* py-evm Version: master branch at d6adf9039647b6fc39b9d79725e9331008a5c438\r\n* OS: osx\r\n* Python Version (python --version): Python 3.7.0\r\n* Environment (output of `pip freeze`):\r\n\r\n### What is wrong?\r\n\r\nPlease include information like:\r\n\r\n* full output of the error you received\r\n* what command you ran: `(in py-evm)$ pytest tests/json-fixtures/test_blockchain.py::test_blockchain_fixtures[.../py-evm/fixtures/BlockchainTests/GeneralStateTests/stCreate2/create2callPrecompiles_d5g0v0.json:create2callPrecompiles_d5g0v0_Constantinople:Constantinople] ` replace ... with your absolute path\r\n* the code that caused the failure: `py_ecc.optimized_bn128.optimized_field_elements.FQ`\r\n\r\n```                                                                                                                     \r\n\r\ntests/json-fixtures/test_blockchain.py F                                                                                             [100%]\r\n\r\n================================================================= FAILURES =================================================================\r\n test_blockchain_fixtures[py-evm/fixtures/BlockchainTests/GeneralStateTests/stCreate2/create2callPrecompiles_d5g0v0.json:create2callPrecompiles_d5g0v0_Constantinople:Constantinople] \r\n\r\nfixture_data = ('py-evm/fixtures/BlockchainTests/GeneralStateTests/stCreate2/create2callPrecompiles_d5g0v0.json', 'create2callPrecompiles_d5g0v0_Constantinople', 'Constantinople')\r\nfixture = {'blocks': [{'blockHeader': {'bloom': 0, 'coinbase': b'*\\xdc%fP\\x18\\xaa\\x1f\\xe0\\xe6\\xbcfm\\xac\\x8f\\xc2i\\x7f\\xf9\\xba', '... 'lastblockhash': b'\\xd3\\x92\\r\\x904,\\x0f\\t\\xaex$f/\\x964\\xd7\\x8d\\x8d\\xfb\\xf95\\xdfK\\x0f\\x04\\n\\x81\\xa5\\x0c\\xa2g\\x95', ...}\r\n\r\n    def test_blockchain_fixtures(fixture_data, fixture):\r\n        try:\r\n            chain = new_chain_from_fixture(fixture)\r\n        except ValueError as e:\r\n            raise AssertionError(\"could not load chain for {}\".format((fixture_data,))) from e\r\n    \r\n        genesis_params = genesis_params_from_fixture(fixture)\r\n        expected_genesis_header = BlockHeader(**genesis_params)\r\n    \r\n        # TODO: find out if this is supposed to pass?\r\n        # if 'genesisRLP' in fixture:\r\n        #     assert rlp.encode(genesis_header) == fixture['genesisRLP']\r\n    \r\n        genesis_block = chain.get_canonical_block_by_number(0)\r\n        genesis_header = genesis_block.header\r\n    \r\n        assert_imported_genesis_header_unchanged(expected_genesis_header, genesis_header)\r\n    \r\n        # 1 - mine the genesis block\r\n        # 2 - loop over blocks:\r\n        #     - apply transactions\r\n        #     - mine block\r\n        # 3 - diff resulting state with expected state\r\n        # 4 - check that all previous blocks were valid\r\n    \r\n        mined_blocks = list()\r\n        for block_fixture in fixture['blocks']:\r\n            should_be_good_block = 'blockHeader' in block_fixture\r\n    \r\n            if 'rlp_error' in block_fixture:\r\n                assert not should_be_good_block\r\n                continue\r\n    \r\n            if should_be_good_block:\r\n                (block, mined_block, block_rlp) = apply_fixture_block_to_chain(\r\n                    block_fixture,\r\n                    chain,\r\n>                   perform_validation=False  # we manually validate below\r\n                )\r\n\r\nblock_fixture = {'blockHeader': {'bloom': 0, 'coinbase': b'*\\xdc%fP\\x18\\xaa\\x1f\\xe0\\xe6\\xbcfm\\xac\\x8f\\xc2i\\x7f\\xf9\\xba', 'difficulty':...x00a\\x01\\x00`\\x00`\\x00`\\x06b\\t'\\xc0\\xf1`\\x02U`\\x00Q`\\x00U\\x00\", 'gasLimit': 15000000, 'gasPrice': 1, 'nonce': 0, ...}]}\r\nchain      = <abc.ChainFromFixture object at 0x10d834278>\r\nexpected_genesis_header = <BlockHeader #0 8a27153c>\r\nfixture    = {'blocks': [{'blockHeader': {'bloom': 0, 'coinbase': b'*\\xdc%fP\\x18\\xaa\\x1f\\xe0\\xe6\\xbcfm\\xac\\x8f\\xc2i\\x7f\\xf9\\xba', '... 'lastblockhash': b'\\xd3\\x92\\r\\x904,\\x0f\\t\\xaex$f/\\x964\\xd7\\x8d\\x8d\\xfb\\xf95\\xdfK\\x0f\\x04\\n\\x81\\xa5\\x0c\\xa2g\\x95', ...}\r\nfixture_data = ('py-evm/fixtures/BlockchainTests/GeneralStateTests/stCreate2/create2callPrecompiles_d5g0v0.json', 'create2callPrecompiles_d5g0v0_Constantinople', 'Constantinople')\r\ngenesis_block = <ConstantinopleBlock(#Block #0)>\r\ngenesis_header = <BlockHeader #0 8a27153c>\r\ngenesis_params = {'block_number': 0, 'bloom': 0, 'coinbase': b'*\\xdc%fP\\x18\\xaa\\x1f\\xe0\\xe6\\xbcfm\\xac\\x8f\\xc2i\\x7f\\xf9\\xba', 'difficulty': 131072, ...}\r\nmined_blocks = []\r\nshould_be_good_block = True\r\n\r\ntests/json-fixtures/test_blockchain.py:269: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\neth/tools/fixtures/helpers.py:232: in apply_fixture_block_to_chain\r\n    mined_block, _, _ = chain.import_block(block, perform_validation=perform_validation)\r\neth/chains/base.py:726: in import_block\r\n    imported_block = self.get_vm(base_header_for_import).import_block(block)\r\neth/vm/base.py:539: in import_block\r\n    new_header, receipts, _ = self.apply_all_transactions(block.transactions, self.block.header)\r\neth/vm/base.py:492: in apply_all_transactions\r\n    transaction,\r\neth/vm/base.py:408: in apply_transaction\r\n    state_root, computation = self.state.apply_transaction(transaction)\r\neth/vm/state.py:256: in apply_transaction\r\n    computation = self.execute_transaction(transaction)\r\neth/vm/forks/frontier/state.py:201: in execute_transaction\r\n    return executor(transaction)\r\neth/vm/state.py:307: in __call__\r\n    computation = self.build_computation(message, valid_transaction)\r\neth/vm/forks/frontier/state.py:133: in build_computation\r\n    transaction_context,\r\neth/vm/forks/spurious_dragon/computation.py:33: in apply_create_message\r\n    computation = self.apply_message()\r\neth/vm/forks/frontier/computation.py:76: in apply_message\r\n    self.transaction_context,\r\neth/vm/computation.py:583: in apply_computation\r\n    opcode_fn(computation=computation)\r\neth/vm/logic/system.py:215: in __call__\r\n    return super().__call__(computation)\r\neth/vm/logic/system.py:193: in __call__\r\n    self.apply_create_message(computation, child_msg)\r\neth/vm/logic/system.py:252: in apply_create_message\r\n    child_computation = computation.apply_child_computation(child_msg)\r\neth/vm/computation.py:395: in apply_child_computation\r\n    child_computation = self.generate_child_computation(child_msg)\r\neth/vm/computation.py:404: in generate_child_computation\r\n    self.transaction_context,\r\neth/vm/forks/spurious_dragon/computation.py:33: in apply_create_message\r\n    computation = self.apply_message()\r\neth/vm/forks/frontier/computation.py:76: in apply_message\r\n    self.transaction_context,\r\neth/vm/computation.py:583: in apply_computation\r\n    opcode_fn(computation=computation)\r\neth/vm/logic/call.py:136: in __call__\r\n    child_computation = computation.apply_child_computation(child_msg)\r\neth/vm/computation.py:395: in apply_child_computation\r\n    child_computation = self.generate_child_computation(child_msg)\r\neth/vm/computation.py:410: in generate_child_computation\r\n    self.transaction_context,\r\neth/vm/forks/frontier/computation.py:76: in apply_message\r\n    self.transaction_context,\r\neth/vm/computation.py:569: in apply_computation\r\n    computation.precompiles[message.code_address](computation)\r\neth/precompiles/ecadd.py:35: in ecadd\r\n    result = _ecadd(computation.msg.data_as_bytes)\r\neth/precompiles/ecadd.py:59: in _ecadd\r\n    p1 = validate_point(x1, y1)\r\neth/_utils/bn128.py:26: in validate_point\r\n    if not bn128.is_on_curve(p1, bn128.b):\r\n../py_ecc/py_ecc/optimized_bn128/optimized_curve.py:69: in is_on_curve\r\n    return y**2 * z - x**3 == b * z**3\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = 3, other = 1\r\n\r\n    def __mul__(self, other: IntOrFQ) -> \"FQ\":\r\n        if isinstance(other, FQ):\r\n            on = other.n\r\n        elif isinstance(other, int):\r\n            on = other\r\n        else:\r\n            raise TypeError(\r\n                \"Expected an int or FQ object, but got object of type {}\"\r\n>               .format(type(other))\r\n            )\r\nE           TypeError: Expected an int or FQ object, but got object of type <class 'py_ecc.optimized_bn128.optimized_field_elements.FQ'>\r\n\r\nother      = 1\r\nself       = 3\r\n\r\n../py_ecc/py_ecc/fields/optimized_field_elements.py:67: TypeError\r\n========================================================= 1 failed in 8.43 seconds =========================================================\r\n```\r\n\r\n### How can it be fixed\r\n\r\n- might need a separate branch for the release", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/py_ecc/issues/53", "repository_url": "https://api.github.com/repos/ethereum/py_ecc", "labels_url": "https://api.github.com/repos/ethereum/py_ecc/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/py_ecc/issues/53/comments", "events_url": "https://api.github.com/repos/ethereum/py_ecc/issues/53/events", "html_url": "https://github.com/ethereum/py_ecc/issues/53", "id": 416540534, "node_id": "MDU6SXNzdWU0MTY1NDA1MzQ=", "number": 53, "title": "Fix BLS Signature byte representation of G1 and G2 points", "user": {"login": "ChihChengLiang", "id": 3391420, "node_id": "MDQ6VXNlcjMzOTE0MjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3391420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChihChengLiang", "html_url": "https://github.com/ChihChengLiang", "followers_url": "https://api.github.com/users/ChihChengLiang/followers", "following_url": "https://api.github.com/users/ChihChengLiang/following{/other_user}", "gists_url": "https://api.github.com/users/ChihChengLiang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChihChengLiang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChihChengLiang/subscriptions", "organizations_url": "https://api.github.com/users/ChihChengLiang/orgs", "repos_url": "https://api.github.com/users/ChihChengLiang/repos", "events_url": "https://api.github.com/users/ChihChengLiang/events{/privacy}", "received_events_url": "https://api.github.com/users/ChihChengLiang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-03T17:28:07Z", "updated_at": "2019-03-14T09:05:53Z", "closed_at": "2019-03-14T09:05:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### What is wrong?\r\n\r\nIn the BLS Signature, points in G1 and G2 consist of 381 bits integers. An integer should be converted to a total 384 bits byte format with extra specified 3 bits flags, while it is converted with simple `pt.to_bytes(48, \"big\")` in the [current implementation](#52).\r\n\r\n### How can it be fixed\r\n\r\n- Fix `G1_to_pubkey`, `pubkey_to_G1`, `G2_to_signature`, and `signature_to_G2`\r\n- Should fix in #52", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/py_ecc/issues/51", "repository_url": "https://api.github.com/repos/ethereum/py_ecc", "labels_url": "https://api.github.com/repos/ethereum/py_ecc/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/py_ecc/issues/51/comments", "events_url": "https://api.github.com/repos/ethereum/py_ecc/issues/51/events", "html_url": "https://github.com/ethereum/py_ecc/issues/51", "id": 415077542, "node_id": "MDU6SXNzdWU0MTUwNzc1NDI=", "number": 51, "title": "Port BLS module", "user": {"login": "ChihChengLiang", "id": 3391420, "node_id": "MDQ6VXNlcjMzOTE0MjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3391420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChihChengLiang", "html_url": "https://github.com/ChihChengLiang", "followers_url": "https://api.github.com/users/ChihChengLiang/followers", "following_url": "https://api.github.com/users/ChihChengLiang/following{/other_user}", "gists_url": "https://api.github.com/users/ChihChengLiang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChihChengLiang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChihChengLiang/subscriptions", "organizations_url": "https://api.github.com/users/ChihChengLiang/orgs", "repos_url": "https://api.github.com/users/ChihChengLiang/repos", "events_url": "https://api.github.com/users/ChihChengLiang/events{/privacy}", "received_events_url": "https://api.github.com/users/ChihChengLiang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-27T11:28:34Z", "updated_at": "2019-03-14T09:05:54Z", "closed_at": "2019-03-14T09:05:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### What is wrong?\r\n\r\nThis is a step of https://github.com/ethereum/trinity/issues/329\r\n\r\n### How can it be fixed\r\n\r\n1. Depends on new release of eth_typing after https://github.com/ethereum/eth-typing/issues/12 is resolved.\r\n2. Copy the [implementation in Trinity](https://github.com/ethereum/trinity/blob/master/eth2/_utils/bls.py)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/py_ecc/issues/47", "repository_url": "https://api.github.com/repos/ethereum/py_ecc", "labels_url": "https://api.github.com/repos/ethereum/py_ecc/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/py_ecc/issues/47/comments", "events_url": "https://api.github.com/repos/ethereum/py_ecc/issues/47/events", "html_url": "https://github.com/ethereum/py_ecc/issues/47", "id": 403856375, "node_id": "MDU6SXNzdWU0MDM4NTYzNzU=", "number": 47, "title": "FQP initialization should take the mod of input coefficients", "user": {"login": "mratsim", "id": 22738317, "node_id": "MDQ6VXNlcjIyNzM4MzE3", "avatar_url": "https://avatars3.githubusercontent.com/u/22738317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mratsim", "html_url": "https://github.com/mratsim", "followers_url": "https://api.github.com/users/mratsim/followers", "following_url": "https://api.github.com/users/mratsim/following{/other_user}", "gists_url": "https://api.github.com/users/mratsim/gists{/gist_id}", "starred_url": "https://api.github.com/users/mratsim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mratsim/subscriptions", "organizations_url": "https://api.github.com/users/mratsim/orgs", "repos_url": "https://api.github.com/users/mratsim/repos", "events_url": "https://api.github.com/users/mratsim/events{/privacy}", "received_events_url": "https://api.github.com/users/mratsim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-28T15:03:05Z", "updated_at": "2019-02-14T17:33:36Z", "closed_at": "2019-02-14T17:33:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Full context: https://github.com/ethereum/eth2.0-specs/issues/508\r\n\r\n### What is wrong?\r\n\r\nFor BN and BLS, FQP object should take the modulo of the input during initialization.\r\n\r\nTest case:\r\n\r\n```python\r\nfrom py_ecc.optimized_bls12_381 import FQ, FQ2\r\n\r\nx = FQ(-1)\r\ny = FQ2([-1,-1])\r\n\r\nprint(x) # 4002409555221667393417789825735904156556882819939007885332058136124031650490837864442687629129015664037894272559786\r\nprint(y) # (-1, -1)\r\n```\r\n\r\nThis is used in  `modular_squareroot` part of Eth2.0 spec (https://github.com/ethereum/eth2.0-specs/blob/928f9772fa51ed2e251b99c4795097da976c4bde/specs/bls_signature.md#modular_squareroot) and Trinity (https://github.com/ethereum/trinity/blob/a1b0f058e7bc8e385c8dac3164c49098967fd5bb/eth2/_utils/bls.py#L63-L77)\r\n\r\n### How can it be fixed\r\n\r\nTake the mod of the inputs in FQP `__init__`\r\n\r\nhttps://github.com/ethereum/py_ecc/blob/e9c42c76f1cc4f535dedec01b4c7ab2a59e46119/py_ecc/optimized_bls12_381/optimized_field_elements.py#L126-L133\r\n\r\nLike it's done for FQ\r\n\r\nhttps://github.com/ethereum/py_ecc/blob/e9c42c76f1cc4f535dedec01b4c7ab2a59e46119/py_ecc/optimized_bls12_381/optimized_field_elements.py#L25-L31\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/py_ecc/issues/36", "repository_url": "https://api.github.com/repos/ethereum/py_ecc", "labels_url": "https://api.github.com/repos/ethereum/py_ecc/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/py_ecc/issues/36/comments", "events_url": "https://api.github.com/repos/ethereum/py_ecc/issues/36/events", "html_url": "https://github.com/ethereum/py_ecc/issues/36", "id": 389574915, "node_id": "MDU6SXNzdWUzODk1NzQ5MTU=", "number": 36, "title": "Error during pip installation", "user": {"login": "hwwhww", "id": 9263930, "node_id": "MDQ6VXNlcjkyNjM5MzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9263930?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hwwhww", "html_url": "https://github.com/hwwhww", "followers_url": "https://api.github.com/users/hwwhww/followers", "following_url": "https://api.github.com/users/hwwhww/following{/other_user}", "gists_url": "https://api.github.com/users/hwwhww/gists{/gist_id}", "starred_url": "https://api.github.com/users/hwwhww/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hwwhww/subscriptions", "organizations_url": "https://api.github.com/users/hwwhww/orgs", "repos_url": "https://api.github.com/users/hwwhww/repos", "events_url": "https://api.github.com/users/hwwhww/events{/privacy}", "received_events_url": "https://api.github.com/users/hwwhww/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-12-11T02:53:24Z", "updated_at": "2018-12-12T15:14:44Z", "closed_at": "2018-12-12T15:14:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Environment\r\nPython 3.6.1\r\n\r\n```\r\npip list\r\nPackage    Version\r\n---------- -------\r\npip        18.1\r\nsetuptools 28.8.0\r\n```\r\n\r\n\r\n### What is wrong?\r\n\r\nPlease include information like:\r\n\r\ncommand:\r\n```\r\npip install py_ecc==1.4.5\r\n```\r\nlog:\r\n```\r\nCollecting py_ecc==1.4.5\r\nException:\r\nTraceback (most recent call last):\r\n  File \"/Users/hwwang/.pyenv/versions/3.6.1/envs/pyeth36b/lib/python3.6/site-packages/pip/_vendor/pkg_resources/__init__.py\", line 2883, in _dep_map\r\n    return self.__dep_map\r\n  File \"/Users/hwwang/.pyenv/versions/3.6.1/envs/pyeth36b/lib/python3.6/site-packages/pip/_vendor/pkg_resources/__init__.py\", line 2677, in __getattr__\r\n    raise AttributeError(attr)\r\nAttributeError: _DistInfoDistribution__dep_map\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/hwwang/.pyenv/versions/3.6.1/envs/pyeth36b/lib/python3.6/site-packages/pip/_vendor/packaging/requirements.py\", line 93, in __init__\r\n    req = REQUIREMENT.parseString(requirement_string)\r\n  File \"/Users/hwwang/.pyenv/versions/3.6.1/envs/pyeth36b/lib/python3.6/site-packages/pip/_vendor/pyparsing.py\", line 1654, in parseString\r\n    raise exc\r\n  File \"/Users/hwwang/.pyenv/versions/3.6.1/envs/pyeth36b/lib/python3.6/site-packages/pip/_vendor/pyparsing.py\", line 1644, in parseString\r\n    loc, tokens = self._parse( instring, 0 )\r\n  File \"/Users/hwwang/.pyenv/versions/3.6.1/envs/pyeth36b/lib/python3.6/site-packages/pip/_vendor/pyparsing.py\", line 1402, in _parseNoCache\r\n    loc,tokens = self.parseImpl( instring, preloc, doActions )\r\n  File \"/Users/hwwang/.pyenv/versions/3.6.1/envs/pyeth36b/lib/python3.6/site-packages/pip/_vendor/pyparsing.py\", line 3417, in parseImpl\r\n    loc, exprtokens = e._parse( instring, loc, doActions )\r\n  File \"/Users/hwwang/.pyenv/versions/3.6.1/envs/pyeth36b/lib/python3.6/site-packages/pip/_vendor/pyparsing.py\", line 1406, in _parseNoCache\r\n    loc,tokens = self.parseImpl( instring, preloc, doActions )\r\n  File \"/Users/hwwang/.pyenv/versions/3.6.1/envs/pyeth36b/lib/python3.6/site-packages/pip/_vendor/pyparsing.py\", line 3205, in parseImpl\r\n    raise ParseException(instring, loc, self.errmsg, self)\r\npip._vendor.pyparsing.ParseException: Expected stringEnd (at char 7), (line:1, col:8)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/hwwang/.pyenv/versions/3.6.1/envs/pyeth36b/lib/python3.6/site-packages/pip/_vendor/pkg_resources/__init__.py\", line 2963, in __init__\r\n    super(Requirement, self).__init__(requirement_string)\r\n  File \"/Users/hwwang/.pyenv/versions/3.6.1/envs/pyeth36b/lib/python3.6/site-packages/pip/_vendor/packaging/requirements.py\", line 96, in __init__\r\n    requirement_string[e.loc:e.loc + 8], e.msg\r\npip._vendor.packaging.requirements.InvalidRequirement: Parse error at \"'(===3.2.'\": Expected stringEnd\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/hwwang/.pyenv/versions/3.6.1/envs/pyeth36b/lib/python3.6/site-packages/pip/_internal/cli/base_command.py\", line 143, in main\r\n    status = self.run(options, args)\r\n  File \"/Users/hwwang/.pyenv/versions/3.6.1/envs/pyeth36b/lib/python3.6/site-packages/pip/_internal/commands/install.py\", line 318, in run\r\n    resolver.resolve(requirement_set)\r\n  File \"/Users/hwwang/.pyenv/versions/3.6.1/envs/pyeth36b/lib/python3.6/site-packages/pip/_internal/resolve.py\", line 102, in resolve\r\n    self._resolve_one(requirement_set, req)\r\n  File \"/Users/hwwang/.pyenv/versions/3.6.1/envs/pyeth36b/lib/python3.6/site-packages/pip/_internal/resolve.py\", line 306, in _resolve_one\r\n    set(req_to_install.extras) - set(dist.extras)\r\n  File \"/Users/hwwang/.pyenv/versions/3.6.1/envs/pyeth36b/lib/python3.6/site-packages/pip/_vendor/pkg_resources/__init__.py\", line 2840, in extras\r\n    return [dep for dep in self._dep_map if dep]\r\n  File \"/Users/hwwang/.pyenv/versions/3.6.1/envs/pyeth36b/lib/python3.6/site-packages/pip/_vendor/pkg_resources/__init__.py\", line 2885, in _dep_map\r\n    self.__dep_map = self._compute_dependencies()\r\n  File \"/Users/hwwang/.pyenv/versions/3.6.1/envs/pyeth36b/lib/python3.6/site-packages/pip/_vendor/pkg_resources/__init__.py\", line 2895, in _compute_dependencies\r\n    reqs.extend(parse_requirements(req))\r\n  File \"/Users/hwwang/.pyenv/versions/3.6.1/envs/pyeth36b/lib/python3.6/site-packages/pip/_vendor/pkg_resources/__init__.py\", line 2956, in parse_requirements\r\n    yield Requirement(line)\r\n  File \"/Users/hwwang/.pyenv/versions/3.6.1/envs/pyeth36b/lib/python3.6/site-packages/pip/_vendor/pkg_resources/__init__.py\", line 2965, in __init__\r\n    raise RequirementParseError(str(e))\r\npip._vendor.pkg_resources.RequirementParseError: Parse error at \"'(===3.2.'\": Expected stringEnd\r\n```\r\n\r\n### How can it be fixed\r\n\r\nFill this in if you know how to fix it.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/py_ecc/issues/14", "repository_url": "https://api.github.com/repos/ethereum/py_ecc", "labels_url": "https://api.github.com/repos/ethereum/py_ecc/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/py_ecc/issues/14/comments", "events_url": "https://api.github.com/repos/ethereum/py_ecc/issues/14/events", "html_url": "https://github.com/ethereum/py_ecc/issues/14", "id": 371139568, "node_id": "MDU6SXNzdWUzNzExMzk1Njg=", "number": 14, "title": "Migrate CI to CircleCI", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-17T15:34:07Z", "updated_at": "2018-10-18T15:25:47Z", "closed_at": "2018-10-18T15:25:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This library should be migrated to circle CI.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/py_ecc/issues/13", "repository_url": "https://api.github.com/repos/ethereum/py_ecc", "labels_url": "https://api.github.com/repos/ethereum/py_ecc/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/py_ecc/issues/13/comments", "events_url": "https://api.github.com/repos/ethereum/py_ecc/issues/13/events", "html_url": "https://github.com/ethereum/py_ecc/issues/13", "id": 371136049, "node_id": "MDU6SXNzdWUzNzExMzYwNDk=", "number": 13, "title": "Modernize project", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1094629818, "node_id": "MDU6TGFiZWwxMDk0NjI5ODE4", "url": "https://api.github.com/repos/ethereum/py_ecc/labels/Good%20First%20Issue", "name": "Good First Issue", "color": "3bbf76", "default": false, "description": ""}, {"id": 1094628907, "node_id": "MDU6TGFiZWwxMDk0NjI4OTA3", "url": "https://api.github.com/repos/ethereum/py_ecc/labels/Good%20For%20Bounty", "name": "Good For Bounty", "color": "8b37f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-10-17T15:28:00Z", "updated_at": "2018-10-23T09:59:21Z", "closed_at": "2018-10-18T15:33:23Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This project was made without the use of our standard project template.\r\n\r\nhttps://github.com/carver/ethereum-python-project-template\r\n\r\nThe following should be cleaned up to closer match our *modern* project structure.\r\n\r\n- remove `requirements-dev.txt` in favor of using `extras_require` pattern.\r\n- add `classifiers` to `setup.py`\r\n- update the readme to contain the appropriate badgest, title and general structure.\r\n- use the `long_description_content_type` as described here: https://github.com/pypa/setuptools/issues/1236\r\n- update the `tox.ini` `flake8` environment to use the more modern `lint` name as well as the same approach, installing from `extras_require`.\r\n- change licence to be the string `MIT`\r\n- add `python_requires` (and exclude `python==3.5.2`)\r\n- add `Makefile` and `bumpfile` based version management.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/py_ecc/issues/12", "repository_url": "https://api.github.com/repos/ethereum/py_ecc", "labels_url": "https://api.github.com/repos/ethereum/py_ecc/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/py_ecc/issues/12/comments", "events_url": "https://api.github.com/repos/ethereum/py_ecc/issues/12/events", "html_url": "https://github.com/ethereum/py_ecc/issues/12", "id": 371132550, "node_id": "MDU6SXNzdWUzNzExMzI1NTA=", "number": 12, "title": "Expose type hints via PEP561", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1094629818, "node_id": "MDU6TGFiZWwxMDk0NjI5ODE4", "url": "https://api.github.com/repos/ethereum/py_ecc/labels/Good%20First%20Issue", "name": "Good First Issue", "color": "3bbf76", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-17T15:20:42Z", "updated_at": "2018-10-19T21:52:39Z", "closed_at": "2018-10-19T17:18:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "blocked until #11 is complete\r\n\r\n## What was wrong?\r\n\r\n[PEP561](https://www.python.org/dev/peps/pep-0561/) allows us to expose type hints from this library to other libraries which use it.  Without this, any library which uses `py_ecc` and `mypy` style type checking doesn't benefit from the additional type safety.\r\n\r\n## Definition of done?\r\n\r\nDo what was done in https://github.com/ethereum/eth-typing/pull/10 to allow this data to be exposed when this library is installed as a package.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/py_ecc/issues/11", "repository_url": "https://api.github.com/repos/ethereum/py_ecc", "labels_url": "https://api.github.com/repos/ethereum/py_ecc/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/py_ecc/issues/11/comments", "events_url": "https://api.github.com/repos/ethereum/py_ecc/issues/11/events", "html_url": "https://github.com/ethereum/py_ecc/issues/11", "id": 371130102, "node_id": "MDU6SXNzdWUzNzExMzAxMDI=", "number": 11, "title": "Add type hinting", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1094629818, "node_id": "MDU6TGFiZWwxMDk0NjI5ODE4", "url": "https://api.github.com/repos/ethereum/py_ecc/labels/Good%20First%20Issue", "name": "Good First Issue", "color": "3bbf76", "default": false, "description": ""}, {"id": 1094628907, "node_id": "MDU6TGFiZWwxMDk0NjI4OTA3", "url": "https://api.github.com/repos/ethereum/py_ecc/labels/Good%20For%20Bounty", "name": "Good For Bounty", "color": "8b37f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 47, "created_at": "2018-10-17T15:15:34Z", "updated_at": "2019-06-13T15:05:07Z", "closed_at": "2019-03-23T20:47:30Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "> Largely copy/pasted from https://github.com/ethereum/py-evm/issues/1398\r\n\r\n### Background\r\n\r\n[Type hints](https://www.python.org/dev/peps/pep-0484/) allow us to perform static type checking, among other things. They raise the security bar by catching bugs at development time that, without type support, may turn into runtime bugs.\r\n\r\n[This stackoverflow answer](https://stackoverflow.com/questions/32557920/what-are-type-hints-in-python-3-5/32558710#32558710) does a great job at describing their main benefits.\r\n\r\n### What is wrong?\r\n\r\nThis library currently does not have any type hints.\r\n\r\nThis needs to be fixed by:\r\n\r\n1. Adding all missing type hints.\r\n2. Enforcing (stricter) type checking in CI\r\n\r\n### How\r\n\r\nThere does exist tooling ([monkeytype](https://engineering.instagram.com/let-your-code-type-hint-itself-introducing-open-source-monkeytype-a855c7284881)) to the generation of type hints for existing code bases. From my personal experience `monkeytype` *can* be helpful but does still require manual fine tuning. Also, manually adding these type hints does serve as a great boost to the general understanding of the code base as it forces one to think about the code.\r\n\r\n1. Run `mypy --follow-imports=silent --warn-unused-ignores --ignore-missing-imports --no-strict-optional --check-untyped-defs --disallow-incomplete-defs --disallow-untyped-defs --disallow-any-generics -p eth`\r\n\r\n2. Eliminate every reported error by adding the right type hint\r\n\r\nBecause this library supports older versions of python, the type hints will not be able to use the modern python3.6 syntax.\r\n\r\n### Definition of done\r\n\r\nThis issue is done when the following criteria are met:\r\n\r\n1. `mypy` is run in CI\r\n\r\nAdd a new command to the `flake8` environment in the `tox.ini` file that runs:\r\n\r\n```\r\nmypy --follow-imports=silent --warn-unused-ignores --ignore-missing-imports --no-strict-optional --check-untyped-defs --disallow-incomplete-defs --disallow-untyped-defs --disallow-any-generics -p py_ecc`\r\n```\r\n\r\n2. Usage of `type: ignore` (silencing the type checker) is minimized and there's a reasonable explanation for its usage \r\n\r\n### Stretch goals\r\n\r\nWhen this issue is done, stretch goals can be applied (and individually get funded) to tighten type support to qualify:\r\n\r\n1. `mypy --strict --follow-imports=silent --ignore-missing-imports --no-strict-optional -p py_ecc`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/py_ecc/issues/10", "repository_url": "https://api.github.com/repos/ethereum/py_ecc", "labels_url": "https://api.github.com/repos/ethereum/py_ecc/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/py_ecc/issues/10/comments", "events_url": "https://api.github.com/repos/ethereum/py_ecc/issues/10/events", "html_url": "https://github.com/ethereum/py_ecc/issues/10", "id": 371128148, "node_id": "MDU6SXNzdWUzNzExMjgxNDg=", "number": 10, "title": "Support for python 3.7", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1094629818, "node_id": "MDU6TGFiZWwxMDk0NjI5ODE4", "url": "https://api.github.com/repos/ethereum/py_ecc/labels/Good%20First%20Issue", "name": "Good First Issue", "color": "3bbf76", "default": false, "description": ""}, {"id": 1094628907, "node_id": "MDU6TGFiZWwxMDk0NjI4OTA3", "url": "https://api.github.com/repos/ethereum/py_ecc/labels/Good%20For%20Bounty", "name": "Good For Bounty", "color": "8b37f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2018-10-17T15:11:32Z", "updated_at": "2019-03-10T10:21:55Z", "closed_at": "2018-10-22T15:53:11Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Add support for python 3.7\r\n\r\n- Add test run to `tox.ini`\r\n- Add test run to `.travis.yml`\r\n- Fix any issues that show up in tests.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/py_ecc/issues/4", "repository_url": "https://api.github.com/repos/ethereum/py_ecc", "labels_url": "https://api.github.com/repos/ethereum/py_ecc/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/py_ecc/issues/4/comments", "events_url": "https://api.github.com/repos/ethereum/py_ecc/issues/4/events", "html_url": "https://github.com/ethereum/py_ecc/issues/4", "id": 270730642, "node_id": "MDU6SXNzdWUyNzA3MzA2NDI=", "number": 4, "title": "secp256k1.py fails on Python 3.4", "user": {"login": "albpal", "id": 18371158, "node_id": "MDQ6VXNlcjE4MzcxMTU4", "avatar_url": "https://avatars0.githubusercontent.com/u/18371158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albpal", "html_url": "https://github.com/albpal", "followers_url": "https://api.github.com/users/albpal/followers", "following_url": "https://api.github.com/users/albpal/following{/other_user}", "gists_url": "https://api.github.com/users/albpal/gists{/gist_id}", "starred_url": "https://api.github.com/users/albpal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albpal/subscriptions", "organizations_url": "https://api.github.com/users/albpal/orgs", "repos_url": "https://api.github.com/users/albpal/repos", "events_url": "https://api.github.com/users/albpal/events{/privacy}", "received_events_url": "https://api.github.com/users/albpal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-02T16:59:16Z", "updated_at": "2017-11-15T03:31:47Z", "closed_at": "2017-11-15T03:29:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Error test:\r\n\r\n```python\r\nimport binascii\r\nimport rlp\r\n# sha3 from module `pysha3` not `ssh3`\r\nimport sha3\r\nfrom py_ecc.secp256k1 import ecdsa_raw_recover\r\n\r\nn = 0\r\np = 20000000000\r\ng = 100000\r\nv = 1000\r\nTn = ''\r\nTp = p.to_bytes((p.bit_length()//8) + 1,byteorder='big')\r\nTg = g.to_bytes((g.bit_length()//8) + 1,byteorder='big')\r\nTt = binascii.unhexlify(\"687422eEA2cB73B5d3e242bA5456b782919AFc85\")\r\nTv = v.to_bytes((v.bit_length()//8) + 1,byteorder='big')\r\nTd = binascii.unhexlify(\"c0de\")\r\ntransaction = [Tn, Tp, Tg, Tt, Tv, Td]\r\nrlp_data=rlp.encode(transaction)\r\nunsigned_message=sha3.keccak_256(rlp_data).hexdigest()\r\nv = 28\r\nr = int(\"5897c2c7c7412b0a555fb6f053ddb6047c59666bbebc6f5573134e074992d841\",16)\r\ns = int(\"1c71d1c62b74caff8695a186e2a24dd701070ba9946748318135e3ac0950b1d4\",16)\r\necdsa_raw_recover(unsigned_message, (v, r, s))\r\n```\r\n\r\nError message:\r\n\r\n> Traceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/apalau/python3.4/lib64/python3.4/site-packages/py_ecc/secp256k1/secp256k1.py\", line 132, in ecdsa_raw_recover\r\n    z = bytes_to_int(msghash)\r\n  File \"/home/apalau/python3.4/lib64/python3.4/site-packages/py_ecc/secp256k1/secp256k1.py\", line 21, in bytes_to_int\r\n    o = (o << 8) + safe_ord(b)\r\nTypeError: unsupported operand type(s) for +: 'int' and 'str'\r\n\r\nOn Python 2.7 the same `ecdsa_raw_recover(unsigned_message, (v, r, s))` works well.\r\n\r\nPython version:\r\n\r\n> python --version\r\n> Python 3.4.5\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/py_ecc/issues/1", "repository_url": "https://api.github.com/repos/ethereum/py_ecc", "labels_url": "https://api.github.com/repos/ethereum/py_ecc/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/py_ecc/issues/1/comments", "events_url": "https://api.github.com/repos/ethereum/py_ecc/issues/1/events", "html_url": "https://github.com/ethereum/py_ecc/issues/1", "id": 243444796, "node_id": "MDU6SXNzdWUyNDM0NDQ3OTY=", "number": 1, "title": "When install the py_ecc  by pip, it raises error: 'error: README.md: No such file or directory'", "user": {"login": "poshboytl", "id": 5960, "node_id": "MDQ6VXNlcjU5NjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poshboytl", "html_url": "https://github.com/poshboytl", "followers_url": "https://api.github.com/users/poshboytl/followers", "following_url": "https://api.github.com/users/poshboytl/following{/other_user}", "gists_url": "https://api.github.com/users/poshboytl/gists{/gist_id}", "starred_url": "https://api.github.com/users/poshboytl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poshboytl/subscriptions", "organizations_url": "https://api.github.com/users/poshboytl/orgs", "repos_url": "https://api.github.com/users/poshboytl/repos", "events_url": "https://api.github.com/users/poshboytl/events{/privacy}", "received_events_url": "https://api.github.com/users/poshboytl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-07-17T16:01:53Z", "updated_at": "2017-11-15T03:12:04Z", "closed_at": "2017-11-15T03:12:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Platform: MacOS 10.12.5\r\n\r\nOutPut: \r\n\r\n```\r\n~/work/pyethereum(develop) $ pip install py_ecc\r\nCollecting py_ecc\r\n/Users/terrytai/.pyenv/versions/2.7.6/lib/python2.7/site-packages/pip/_vendor/requests/packages/urllib3/util/ssl_.py:318: SNIMissingWarning: An HTTPS request has been made, but the SNI (Subject Name Indication) extension to TLS is not available on this platform. This may cause the server to present an incorrect TLS certificate, which can cause validation failures. You can upgrade to a newer version of Python to solve this. For more information, see https://urllib3.readthedocs.io/en/latest/security.html#snimissingwarning.\r\n  SNIMissingWarning\r\n/Users/terrytai/.pyenv/versions/2.7.6/lib/python2.7/site-packages/pip/_vendor/requests/packages/urllib3/util/ssl_.py:122: InsecurePlatformWarning: A true SSLContext object is not available. This prevents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. You can upgrade to a newer version of Python to solve this. For more information, see https://urllib3.readthedocs.io/en/latest/security.html#insecureplatformwarning.\r\n  InsecurePlatformWarning\r\n  Using cached py_ecc-1.1.0.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/private/var/folders/gd/2jkp088j3d96slmx_5gllmc40000gn/T/pip-build-vmYHRm/py-ecc/setup.py\", line 6, in <module>\r\n        with open('README.md') as f:\r\n    IOError: [Errno 2] No such file or directory: 'README.md'\r\n\r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /private/var/folders/gd/2jkp088j3d96slmx_5gllmc40000gn/T/pip-build-vmYHRm/py-ecc/\r\n```\r\n\r\nI found the setup.py try to open README.md and LICENSE, but the two files are not in the package: https://pypi.python.org/pypi/py_ecc", "performed_via_github_app": null, "score": 1.0}]}