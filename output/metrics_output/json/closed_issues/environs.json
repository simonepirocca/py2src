{"total_count": 34, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/sloria/environs/issues/151", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/151/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/151/events", "html_url": "https://github.com/sloria/environs/issues/151", "id": 590178623, "node_id": "MDU6SXNzdWU1OTAxNzg2MjM=", "number": 151, "title": "Add subcast for key in dict", "user": {"login": "AugPro", "id": 26441932, "node_id": "MDQ6VXNlcjI2NDQxOTMy", "avatar_url": "https://avatars1.githubusercontent.com/u/26441932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AugPro", "html_url": "https://github.com/AugPro", "followers_url": "https://api.github.com/users/AugPro/followers", "following_url": "https://api.github.com/users/AugPro/following{/other_user}", "gists_url": "https://api.github.com/users/AugPro/gists{/gist_id}", "starred_url": "https://api.github.com/users/AugPro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AugPro/subscriptions", "organizations_url": "https://api.github.com/users/AugPro/orgs", "repos_url": "https://api.github.com/users/AugPro/repos", "events_url": "https://api.github.com/users/AugPro/events{/privacy}", "received_events_url": "https://api.github.com/users/AugPro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 363619018, "node_id": "MDU6TGFiZWwzNjM2MTkwMTg=", "url": "https://api.github.com/repos/sloria/environs/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 363619019, "node_id": "MDU6TGFiZWwzNjM2MTkwMTk=", "url": "https://api.github.com/repos/sloria/environs/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-30T10:31:14Z", "updated_at": "2020-04-18T20:00:11Z", "closed_at": "2020-04-18T20:00:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello, I haven't found a clear explanation in the doc but from what I understand from the source code in `_preprocess_dict`, `subcast` parameter only impacts the **value** of the duct, not the key. It would be nice to have two different parameters for subcasting. Like `subcast_key` and `subcast_value`.\r\n\r\nHappy to submit PR If you think this is a good improvement!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/147", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/147/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/147/events", "html_url": "https://github.com/sloria/environs/issues/147", "id": 587802734, "node_id": "MDU6SXNzdWU1ODc4MDI3MzQ=", "number": 147, "title": "No module named 'environs'", "user": {"login": "CraneJen", "id": 5238605, "node_id": "MDQ6VXNlcjUyMzg2MDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/5238605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraneJen", "html_url": "https://github.com/CraneJen", "followers_url": "https://api.github.com/users/CraneJen/followers", "following_url": "https://api.github.com/users/CraneJen/following{/other_user}", "gists_url": "https://api.github.com/users/CraneJen/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraneJen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraneJen/subscriptions", "organizations_url": "https://api.github.com/users/CraneJen/orgs", "repos_url": "https://api.github.com/users/CraneJen/repos", "events_url": "https://api.github.com/users/CraneJen/events{/privacy}", "received_events_url": "https://api.github.com/users/CraneJen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-25T15:57:25Z", "updated_at": "2020-03-26T04:36:49Z", "closed_at": "2020-03-26T04:36:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Platform: WSL Ubuntu18.04\r\nPython: Python3.8\r\n\r\n```bash\r\n\u279c  ~ cd Test\r\n\u279c  Test  python3.8 -m venv .venv\r\n\u279c  Test source .venv/bin/activate\r\n(.venv) \u279c  Test pip install environs\r\nCollecting environs\r\n  Using cached https://files.pythonhosted.org/packages/b3/4f/99d49bf40e46d86992b4dd5ceb6e23530c5a06fbc4322007a9b4810ad6c1/environs-7.3.1-py2.py3-none-any.whl\r\nCollecting python-dotenv (from environs)\r\n  Using cached https://files.pythonhosted.org/packages/7f/ee/e0cd2d8ba548e4c3e8c9e70d76e423b3e8b8e4eec351f51292d828c735d2/python_dotenv-0.12.0-py2.py3-none-any.whl\r\nCollecting marshmallow>=2.7.0 (from environs)\r\n  Using cached https://files.pythonhosted.org/packages/d8/0b/bb43d7610e71d87e8537025841c248471dbf938c676d32b8f94c82148c04/marshmallow-3.5.1-py2.py3-none-any.whl\r\nInstalling collected packages: python-dotenv, marshmallow, environs\r\nSuccessfully installed environs-7.3.1 marshmallow-3.5.1 python-dotenv-0.12.0\r\nWARNING: You are using pip version 19.2.3, however version 20.0.2 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\r\n(.venv) \u279c  Test  python\r\nPython 3.8.2 (default, Feb 26 2020, 02:56:10)\r\n[GCC 7.4.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import environs\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nModuleNotFoundError: No module named 'environs'\r\n>>>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/142", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/142/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/142/events", "html_url": "https://github.com/sloria/environs/issues/142", "id": 573494373, "node_id": "MDU6SXNzdWU1NzM0OTQzNzM=", "number": 142, "title": "import environs fails on Ubuntu 16.04.6 LTS with Python 3.5.2", "user": {"login": "alxrmorozov", "id": 37315425, "node_id": "MDQ6VXNlcjM3MzE1NDI1", "avatar_url": "https://avatars3.githubusercontent.com/u/37315425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alxrmorozov", "html_url": "https://github.com/alxrmorozov", "followers_url": "https://api.github.com/users/alxrmorozov/followers", "following_url": "https://api.github.com/users/alxrmorozov/following{/other_user}", "gists_url": "https://api.github.com/users/alxrmorozov/gists{/gist_id}", "starred_url": "https://api.github.com/users/alxrmorozov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alxrmorozov/subscriptions", "organizations_url": "https://api.github.com/users/alxrmorozov/orgs", "repos_url": "https://api.github.com/users/alxrmorozov/repos", "events_url": "https://api.github.com/users/alxrmorozov/events{/privacy}", "received_events_url": "https://api.github.com/users/alxrmorozov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-01T06:31:35Z", "updated_at": "2020-05-09T15:34:21Z", "closed_at": "2020-05-09T15:34:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "```console\r\nuser@2fcfee34b4bd:~$ virtualenv -p python3 venv\r\nAlready using interpreter /usr/bin/python3\r\nUsing base prefix '/usr'\r\nNew python executable in /home/user/venv/bin/python3\r\nAlso creating executable in /home/user/venv/bin/python\r\nInstalling setuptools, pkg_resources, pip, wheel...done.\r\nuser@2fcfee34b4bd:~$ . venv/bin/activate\r\n(venv) user@2fcfee34b4bd:~$ pip install environs\r\nCollecting environs\r\n  Downloading environs-7.2.0-py2.py3-none-any.whl (11 kB)\r\nCollecting python-dotenv\r\n  Downloading python_dotenv-0.12.0-py2.py3-none-any.whl (17 kB)\r\nCollecting marshmallow>=2.7.0\r\n  Downloading marshmallow-3.5.0-py2.py3-none-any.whl (45 kB)\r\n     |################################| 45 kB 257 kB/s\r\nInstalling collected packages: python-dotenv, marshmallow, environs\r\nSuccessfully installed environs-7.2.0 marshmallow-3.5.0 python-dotenv-0.12.0\r\n(venv) user@2fcfee34b4bd:~$ python\r\nPython 3.5.2 (default, Oct  8 2019, 13:06:37)\r\n[GCC 5.4.0 20160609] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import environs\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/user/venv/lib/python3.5/site-packages/environs/__init__.py\", line 31, in <module>\r\n    Subcast = typing.Union[typing.Type, typing.Callable[..., _T]]\r\n  File \"/usr/lib/python3.5/typing.py\", line 552, in __getitem__\r\n    dict(self.__dict__), parameters, _root=True)\r\n  File \"/usr/lib/python3.5/typing.py\", line 512, in __new__\r\n    for t2 in all_params - {t1} if not isinstance(t2, TypeVar)):\r\n  File \"/usr/lib/python3.5/typing.py\", line 512, in <genexpr>\r\n    for t2 in all_params - {t1} if not isinstance(t2, TypeVar)):\r\n  File \"/usr/lib/python3.5/typing.py\", line 1077, in __subclasscheck__\r\n    if super().__subclasscheck__(cls):\r\n  File \"/home/user/venv/lib/python3.5/abc.py\", line 225, in __subclasscheck__\r\n    for scls in cls.__subclasses__():\r\nTypeError: descriptor '__subclasses__' of 'type' object needs an argument\r\n>>>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/141", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/141/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/141/events", "html_url": "https://github.com/sloria/environs/issues/141", "id": 572935792, "node_id": "MDU6SXNzdWU1NzI5MzU3OTI=", "number": 141, "title": "New handler 'timezone', using pytz.timezone()", "user": {"login": "gnarvaja", "id": 126963, "node_id": "MDQ6VXNlcjEyNjk2Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/126963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnarvaja", "html_url": "https://github.com/gnarvaja", "followers_url": "https://api.github.com/users/gnarvaja/followers", "following_url": "https://api.github.com/users/gnarvaja/following{/other_user}", "gists_url": "https://api.github.com/users/gnarvaja/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnarvaja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnarvaja/subscriptions", "organizations_url": "https://api.github.com/users/gnarvaja/orgs", "repos_url": "https://api.github.com/users/gnarvaja/repos", "events_url": "https://api.github.com/users/gnarvaja/events{/privacy}", "received_events_url": "https://api.github.com/users/gnarvaja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-28T18:44:04Z", "updated_at": "2020-05-09T15:38:06Z", "closed_at": "2020-05-09T15:38:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "A new handler for timezones, that returns a tzinfo object (returned by pytz.timezone).\r\n\r\nSee PR #139 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/140", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/140/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/140/events", "html_url": "https://github.com/sloria/environs/issues/140", "id": 572934290, "node_id": "MDU6SXNzdWU1NzI5MzQyOTA=", "number": 140, "title": "env.log_level(\"LOG_LEVEL\") with LOG_LEVEL=info returns \"logging.info\" function", "user": {"login": "gnarvaja", "id": 126963, "node_id": "MDQ6VXNlcjEyNjk2Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/126963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnarvaja", "html_url": "https://github.com/gnarvaja", "followers_url": "https://api.github.com/users/gnarvaja/followers", "following_url": "https://api.github.com/users/gnarvaja/following{/other_user}", "gists_url": "https://api.github.com/users/gnarvaja/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnarvaja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnarvaja/subscriptions", "organizations_url": "https://api.github.com/users/gnarvaja/orgs", "repos_url": "https://api.github.com/users/gnarvaja/repos", "events_url": "https://api.github.com/users/gnarvaja/events{/privacy}", "received_events_url": "https://api.github.com/users/gnarvaja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-28T18:41:06Z", "updated_at": "2020-03-01T17:41:14Z", "closed_at": "2020-03-01T17:41:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The current code of log_level handler, just does `getattr(value, logging)` to get the value, so if you put the log level in lowercase you don't get an error but instead the module funcion is returned.\r\n\r\nI made a fix that applies .upper() to the value and also validates the module member `getattr(logging, value)` is int for extra validation.\r\n\r\nPR #138  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/137", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/137/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/137/events", "html_url": "https://github.com/sloria/environs/issues/137", "id": 567698769, "node_id": "MDU6SXNzdWU1Njc2OTg3Njk=", "number": 137, "title": "Error when parsing empty list with subcast", "user": {"login": "sabdouni", "id": 22843716, "node_id": "MDQ6VXNlcjIyODQzNzE2", "avatar_url": "https://avatars2.githubusercontent.com/u/22843716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sabdouni", "html_url": "https://github.com/sabdouni", "followers_url": "https://api.github.com/users/sabdouni/followers", "following_url": "https://api.github.com/users/sabdouni/following{/other_user}", "gists_url": "https://api.github.com/users/sabdouni/gists{/gist_id}", "starred_url": "https://api.github.com/users/sabdouni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sabdouni/subscriptions", "organizations_url": "https://api.github.com/users/sabdouni/orgs", "repos_url": "https://api.github.com/users/sabdouni/repos", "events_url": "https://api.github.com/users/sabdouni/events{/privacy}", "received_events_url": "https://api.github.com/users/sabdouni/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 363619016, "node_id": "MDU6TGFiZWwzNjM2MTkwMTY=", "url": "https://api.github.com/repos/sloria/environs/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 363619019, "node_id": "MDU6TGFiZWwzNjM2MTkwMTk=", "url": "https://api.github.com/repos/sloria/environs/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-19T16:57:59Z", "updated_at": "2020-03-22T14:05:32Z", "closed_at": "2020-03-22T14:04:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\n\r\nThe `env.list` can't handle an empty list when using `subcast`\r\nIt raises an exception `environs.EnvValidationError: Environment variable \"LIST\" invalid: {0: ['Not a valid integer.']}`\r\nThis can be reproduced by e.g \r\n```\r\n    os.environ[\"LIST\"] = \"\"\r\n    env = Env()\r\n    LIST = env.list(\"LIST\", [], subcast=int)\r\n```\r\nIf you don't use `subcast` it works just fine by e.g \r\n```\r\n    os.environ[\"LIST\"] = \"\"\r\n    env = Env()\r\n    LIST = env.list(\"LIST\", [])\r\n```\r\n\r\nMaybe one solution is if the env variable is falsy (empty or doesn't exist) `env.list` should return the default value if defined\r\n\r\nHappy to submit a PR if that would be of interest. Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/135", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/135/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/135/events", "html_url": "https://github.com/sloria/environs/issues/135", "id": 563199077, "node_id": "MDU6SXNzdWU1NjMxOTkwNzc=", "number": 135, "title": "Exposing derived settings via Env() Objects.", "user": {"login": "gk-patel", "id": 42677721, "node_id": "MDQ6VXNlcjQyNjc3NzIx", "avatar_url": "https://avatars0.githubusercontent.com/u/42677721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gk-patel", "html_url": "https://github.com/gk-patel", "followers_url": "https://api.github.com/users/gk-patel/followers", "following_url": "https://api.github.com/users/gk-patel/following{/other_user}", "gists_url": "https://api.github.com/users/gk-patel/gists{/gist_id}", "starred_url": "https://api.github.com/users/gk-patel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gk-patel/subscriptions", "organizations_url": "https://api.github.com/users/gk-patel/orgs", "repos_url": "https://api.github.com/users/gk-patel/repos", "events_url": "https://api.github.com/users/gk-patel/events{/privacy}", "received_events_url": "https://api.github.com/users/gk-patel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 363619021, "node_id": "MDU6TGFiZWwzNjM2MTkwMjE=", "url": "https://api.github.com/repos/sloria/environs/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-11T13:15:16Z", "updated_at": "2020-02-11T20:30:03Z", "closed_at": "2020-02-11T14:52:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI would like to know if it is possible to add new varaibles to the Env() object after reading the file. \r\n\r\nFor example, lets say I have the screen HEIGHT and WIDTH and RESOLUTION = HEIGHT * WIDTH. This is a simple example, but there could also be cases where the output from some function could be assigned. \r\n\r\nNow in the code, I can access env(\"RESOLUTION\") instead of having to do the multiplication again and again. \r\n\r\nThanks for the great library and for considering my request. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/128", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/128/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/128/events", "html_url": "https://github.com/sloria/environs/issues/128", "id": 555261140, "node_id": "MDU6SXNzdWU1NTUyNjExNDA=", "number": 128, "title": "API is a bit strange", "user": {"login": "dAnjou", "id": 117147, "node_id": "MDQ6VXNlcjExNzE0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/117147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dAnjou", "html_url": "https://github.com/dAnjou", "followers_url": "https://api.github.com/users/dAnjou/followers", "following_url": "https://api.github.com/users/dAnjou/following{/other_user}", "gists_url": "https://api.github.com/users/dAnjou/gists{/gist_id}", "starred_url": "https://api.github.com/users/dAnjou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dAnjou/subscriptions", "organizations_url": "https://api.github.com/users/dAnjou/orgs", "repos_url": "https://api.github.com/users/dAnjou/repos", "events_url": "https://api.github.com/users/dAnjou/events{/privacy}", "received_events_url": "https://api.github.com/users/dAnjou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-26T17:33:13Z", "updated_at": "2020-02-15T18:24:02Z", "closed_at": "2020-02-09T18:00:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I know the title is a bit weird as well but bear with me, I'll explain where I'm coming from.\r\n\r\nInstances of classes usually hold and manage state related to their name. The main class in this library is called `Env`. That suggests to me that an instance of `Env` holds and manages the state of the environment. Now, let's look at some code:\r\n```python\r\n>>> from environs import Env\r\n>>> import os\r\n>>> env = Env()\r\n>>> env('FOO')\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 1, in <module>\r\n  File \"/home/user/project/env/lib64/python3.7/site-packages/environs/__init__.py\", line 74, in method\r\n    raise EnvValidationError('Environment variable \"{}\" not set'.format(source_key), [message])\r\nenvirons.EnvValidationError: Environment variable \"FOO\" not set\r\n>>> os.environ['FOO'] = 'bar'\r\n>>> env('FOO')\r\n'bar'\r\n```\r\nTo me that is quite unexpected. It looks like manipulating `os.environ` changes the state of `env`, that's not really nice behavior.\r\n\r\nI do know that this is actually not how the library works. `Env` does not actually hold and manage any state related to the environment. The only state it holds is the _parsing state_, as in the variables it has parsed so far. Let's look at some more code (continuing where I left off):\r\n```python\r\n>>> env.dump()\r\n{'FOO': 'bar'}\r\n>>> os.environ['FOO'] = 'lorem'\r\n>>> env.dump()\r\n{'FOO': 'bar'}\r\n>>> env('FOO')\r\n'lorem'\r\n>>> env.dump()\r\n{'FOO': 'lorem'}\r\n```\r\n`dump` seems to return all variables that have been parsed so far, including their values. But after changing the environment it still has the old value, quite unexpected again, it does keep some state. Only after parsing again, the new value shows up in the dump.\r\n\r\nAnother confusing behavior is that of `read_env` which does not suggest any side effects but it does change the current environment. Granted, it does not override anything but it's still not ideal behavior.\r\n\r\nSome of the confusion can probably be fixed with better documentation.\r\n\r\nHowever, the reason I started writing this is another one. I was hoping that this library could help me parse the environment of another system, specifically a Docker container. But while it has all the wonderful tools I can't do that without polluting my own environment, and `read_env` only accepts file system paths while the underlying library would happily accept file-like objects as well.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/126", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/126/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/126/events", "html_url": "https://github.com/sloria/environs/issues/126", "id": 552447067, "node_id": "MDU6SXNzdWU1NTI0NDcwNjc=", "number": 126, "title": "Add support for a cache_url for Django", "user": {"login": "epicserve", "id": 191620, "node_id": "MDQ6VXNlcjE5MTYyMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/191620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/epicserve", "html_url": "https://github.com/epicserve", "followers_url": "https://api.github.com/users/epicserve/followers", "following_url": "https://api.github.com/users/epicserve/following{/other_user}", "gists_url": "https://api.github.com/users/epicserve/gists{/gist_id}", "starred_url": "https://api.github.com/users/epicserve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/epicserve/subscriptions", "organizations_url": "https://api.github.com/users/epicserve/orgs", "repos_url": "https://api.github.com/users/epicserve/repos", "events_url": "https://api.github.com/users/epicserve/events{/privacy}", "received_events_url": "https://api.github.com/users/epicserve/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 363619018, "node_id": "MDU6TGFiZWwzNjM2MTkwMTg=", "url": "https://api.github.com/repos/sloria/environs/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 363619019, "node_id": "MDU6TGFiZWwzNjM2MTkwMTk=", "url": "https://api.github.com/repos/sloria/environs/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2020-01-20T18:14:20Z", "updated_at": "2020-02-09T17:28:48Z", "closed_at": "2020-02-09T15:42:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I just switched to this library from https://github.com/joke2k/django-environ. One thing that it had was a way to set a cache_url for configuring [Django's cache framework](https://docs.djangoproject.com/en/3.0/topics/cache/). It would be nice if you could just update the setup.py to install https://github.com/ghickman/django-cache-url, however it looks like it's deprecated. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/113", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/113/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/113/events", "html_url": "https://github.com/sloria/environs/issues/113", "id": 531217426, "node_id": "MDU6SXNzdWU1MzEyMTc0MjY=", "number": 113, "title": "Implement `__contains__` in `Env`", "user": {"login": "hukkinj1", "id": 3275109, "node_id": "MDQ6VXNlcjMyNzUxMDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3275109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hukkinj1", "html_url": "https://github.com/hukkinj1", "followers_url": "https://api.github.com/users/hukkinj1/followers", "following_url": "https://api.github.com/users/hukkinj1/following{/other_user}", "gists_url": "https://api.github.com/users/hukkinj1/gists{/gist_id}", "starred_url": "https://api.github.com/users/hukkinj1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hukkinj1/subscriptions", "organizations_url": "https://api.github.com/users/hukkinj1/orgs", "repos_url": "https://api.github.com/users/hukkinj1/repos", "events_url": "https://api.github.com/users/hukkinj1/events{/privacy}", "received_events_url": "https://api.github.com/users/hukkinj1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-02T15:52:00Z", "updated_at": "2020-02-09T18:02:13Z", "closed_at": "2020-02-09T18:02:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Feature request\r\nWould be nice if we could do\r\n```python\r\nenv = Env()\r\nif \"SOME_ENV_VAR\" in env:\r\n    ....\r\n```\r\nto check if an env variable exists. I.e. implement the `__contains__` dunder method.\r\n\r\nThe benefit of this compared to `\"SOME_ENV_VAR\" in os.environ` is that it could be used in a `with env.prefixed(\"PREFIX\"):` statement.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/109", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/109/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/109/events", "html_url": "https://github.com/sloria/environs/issues/109", "id": 517306436, "node_id": "MDU6SXNzdWU1MTczMDY0MzY=", "number": 109, "title": "Multiline values question", "user": {"login": "webknjaz", "id": 578543, "node_id": "MDQ6VXNlcjU3ODU0Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/578543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/webknjaz", "html_url": "https://github.com/webknjaz", "followers_url": "https://api.github.com/users/webknjaz/followers", "following_url": "https://api.github.com/users/webknjaz/following{/other_user}", "gists_url": "https://api.github.com/users/webknjaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/webknjaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/webknjaz/subscriptions", "organizations_url": "https://api.github.com/users/webknjaz/orgs", "repos_url": "https://api.github.com/users/webknjaz/repos", "events_url": "https://api.github.com/users/webknjaz/events{/privacy}", "received_events_url": "https://api.github.com/users/webknjaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-04T17:47:17Z", "updated_at": "2020-05-09T15:36:38Z", "closed_at": "2020-05-09T15:36:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI haven't noticed any explicit mentions of it but does environs support multiline values for env vars in `.env`?\r\nFor envparse, for example, I had to do nasty tricks to make it work (like use `env_var='many\\nlines\\nconnected\\nwith\\nexplicit\\nline\\nseparator'`) which may be PITA if there's a lot of lines and/or special chars.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/106", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/106/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/106/events", "html_url": "https://github.com/sloria/environs/issues/106", "id": 502978869, "node_id": "MDU6SXNzdWU1MDI5Nzg4Njk=", "number": 106, "title": "dump() is lazy?", "user": {"login": "jacopsd", "id": 210014, "node_id": "MDQ6VXNlcjIxMDAxNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/210014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jacopsd", "html_url": "https://github.com/jacopsd", "followers_url": "https://api.github.com/users/jacopsd/followers", "following_url": "https://api.github.com/users/jacopsd/following{/other_user}", "gists_url": "https://api.github.com/users/jacopsd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jacopsd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jacopsd/subscriptions", "organizations_url": "https://api.github.com/users/jacopsd/orgs", "repos_url": "https://api.github.com/users/jacopsd/repos", "events_url": "https://api.github.com/users/jacopsd/events{/privacy}", "received_events_url": "https://api.github.com/users/jacopsd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-05T15:42:20Z", "updated_at": "2019-10-06T07:26:14Z", "closed_at": "2019-10-06T04:31:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n> from environs import Env\r\n> env = Env()\r\n> env.read_env()\r\n> loaded_env = env.dump()\r\n> \r\n> loaded_env\r\n> {}\r\n> \r\n> mytest = env('MYVAR')\r\n> loaded_env = env.dump()\r\n> loaded_env\r\n> {'MYVAR': my value}\r\n> \r\n```\r\n\r\nSo loaded_env remains empty, even if there are valid entries in .env\r\nAfter a variable is accessed via env('MYVAR), it appears in the dump() result...\r\n\r\nWhy not in the first case?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/103", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/103/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/103/events", "html_url": "https://github.com/sloria/environs/issues/103", "id": 496215041, "node_id": "MDU6SXNzdWU0OTYyMTUwNDE=", "number": 103, "title": "IDE autocomplete support", "user": {"login": "rugleb", "id": 26823697, "node_id": "MDQ6VXNlcjI2ODIzNjk3", "avatar_url": "https://avatars3.githubusercontent.com/u/26823697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rugleb", "html_url": "https://github.com/rugleb", "followers_url": "https://api.github.com/users/rugleb/followers", "following_url": "https://api.github.com/users/rugleb/following{/other_user}", "gists_url": "https://api.github.com/users/rugleb/gists{/gist_id}", "starred_url": "https://api.github.com/users/rugleb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rugleb/subscriptions", "organizations_url": "https://api.github.com/users/rugleb/orgs", "repos_url": "https://api.github.com/users/rugleb/repos", "events_url": "https://api.github.com/users/rugleb/events{/privacy}", "received_events_url": "https://api.github.com/users/rugleb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 363619018, "node_id": "MDU6TGFiZWwzNjM2MTkwMTg=", "url": "https://api.github.com/repos/sloria/environs/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-09-20T08:20:35Z", "updated_at": "2019-12-15T21:59:28Z", "closed_at": "2019-09-22T18:29:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "HI!\r\nThanks for the package, looks amazing, but what about IDE autocomplete / IntelliSense / hints?\r\nThe IDE (I'm using PyCharm) does not prompt existing methods of the `Env` class instance (see picture below).\r\n\r\n![Screenshot from 2019-09-20 11-15-20](https://user-images.githubusercontent.com/26823697/65311230-9dc5ab00-db98-11e9-9c5d-1bc372f71db6.png)\r\n\r\nFor me, this is an important drawback of this package.\r\nWill it be decided?\r\nThanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/102", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/102/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/102/events", "html_url": "https://github.com/sloria/environs/issues/102", "id": 484583226, "node_id": "MDU6SXNzdWU0ODQ1ODMyMjY=", "number": 102, "title": "Error message within prefixed() context", "user": {"login": "AGeekInside", "id": 5620731, "node_id": "MDQ6VXNlcjU2MjA3MzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5620731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AGeekInside", "html_url": "https://github.com/AGeekInside", "followers_url": "https://api.github.com/users/AGeekInside/followers", "following_url": "https://api.github.com/users/AGeekInside/following{/other_user}", "gists_url": "https://api.github.com/users/AGeekInside/gists{/gist_id}", "starred_url": "https://api.github.com/users/AGeekInside/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AGeekInside/subscriptions", "organizations_url": "https://api.github.com/users/AGeekInside/orgs", "repos_url": "https://api.github.com/users/AGeekInside/repos", "events_url": "https://api.github.com/users/AGeekInside/events{/privacy}", "received_events_url": "https://api.github.com/users/AGeekInside/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 363619016, "node_id": "MDU6TGFiZWwzNjM2MTkwMTY=", "url": "https://api.github.com/repos/sloria/environs/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 363619019, "node_id": "MDU6TGFiZWwzNjM2MTkwMTk=", "url": "https://api.github.com/repos/sloria/environs/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-23T15:16:20Z", "updated_at": "2019-09-22T19:00:33Z", "closed_at": "2019-09-22T19:00:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "The error message does not prepend the prefix to error message output, when an error occurs in an env.prefixed() context. The code below illustrates the issue. The environment variable is named TEST_VAR, but the error message is showing VAR.\r\n\r\n```python\r\n\r\n######@shim-dev:~/workspace/shim (environ-adoption) \r\n$ export TEST_VAR=-1\r\n######@shim-dev:~/workspace/shim (environ-adoption) \r\n$ ipython\r\nPython 3.6.5 (default, Aug 15 2019, 19:51:45) \r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 7.7.0 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: from environs import Env                                                                                                                                                                                                                                                     \r\n\r\nIn [2]: env = Env()                                                                                                                                                                                                                                                                  \r\n\r\nIn [3]: with env.prefixed(\"TEST_\"): \r\n   ...:     invalid_test = env.int(\"VAR\", validate=lambda n: n > 0) \r\n   ...:                                                                                                                                                                                                                                                                              \r\n---------------------------------------------------------------------------\r\nValidationError                           Traceback (most recent call last)\r\n~/.pyenv/versions/3.6.5/lib/python3.6/site-packages/environs.py in method(self, name, default, subcast, **kwargs)\r\n     55         try:\r\n---> 56             value = field.deserialize(value)\r\n     57         except ma.ValidationError as error:\r\n\r\n~/.pyenv/versions/3.6.5/lib/python3.6/site-packages/marshmallow/fields.py in deserialize(self, value, attr, data)\r\n    265         output = self._deserialize(value, attr, data)\r\n--> 266         self._validate(output)\r\n    267         return output\r\n\r\n~/.pyenv/versions/3.6.5/lib/python3.6/site-packages/marshmallow/fields.py in _validate(self, value)\r\n    205         if errors:\r\n--> 206             raise ValidationError(errors, **kwargs)\r\n    207 \r\n\r\nValidationError: ['Invalid value.']\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nEnvError                                  Traceback (most recent call last)\r\n<ipython-input-3-be1d17efe506> in <module>\r\n      1 with env.prefixed(\"TEST_\"):\r\n----> 2     invalid_test = env.int(\"VAR\", validate=lambda n: n > 0)\r\n      3 \r\n\r\n~/.pyenv/versions/3.6.5/lib/python3.6/site-packages/environs.py in method(self, name, default, subcast, **kwargs)\r\n     56             value = field.deserialize(value)\r\n     57         except ma.ValidationError as error:\r\n---> 58             raise EnvError('Environment variable \"{}\" invalid: {}'.format(name, error.args[0])) from error\r\n     59         else:\r\n     60             self._values[parsed_key] = value\r\n\r\nEnvError: Environment variable \"VAR\" invalid: ['Invalid value.']\r\n\r\nIn [4]:  \r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/100", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/100/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/100/events", "html_url": "https://github.com/sloria/environs/issues/100", "id": 482984041, "node_id": "MDU6SXNzdWU0ODI5ODQwNDE=", "number": 100, "title": "The fix provided by #96 does not work", "user": {"login": "ribeaud", "id": 13186156, "node_id": "MDQ6VXNlcjEzMTg2MTU2", "avatar_url": "https://avatars0.githubusercontent.com/u/13186156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ribeaud", "html_url": "https://github.com/ribeaud", "followers_url": "https://api.github.com/users/ribeaud/followers", "following_url": "https://api.github.com/users/ribeaud/following{/other_user}", "gists_url": "https://api.github.com/users/ribeaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/ribeaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ribeaud/subscriptions", "organizations_url": "https://api.github.com/users/ribeaud/orgs", "repos_url": "https://api.github.com/users/ribeaud/repos", "events_url": "https://api.github.com/users/ribeaud/events{/privacy}", "received_events_url": "https://api.github.com/users/ribeaud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-20T17:18:07Z", "updated_at": "2020-05-28T03:20:32Z", "closed_at": "2020-05-28T03:18:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See #96.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/96", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/96/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/96/events", "html_url": "https://github.com/sloria/environs/issues/96", "id": 477434279, "node_id": "MDU6SXNzdWU0Nzc0MzQyNzk=", "number": 96, "title": "When looking for a specific file, working recursively should be possible", "user": {"login": "ribeaud", "id": 13186156, "node_id": "MDQ6VXNlcjEzMTg2MTU2", "avatar_url": "https://avatars0.githubusercontent.com/u/13186156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ribeaud", "html_url": "https://github.com/ribeaud", "followers_url": "https://api.github.com/users/ribeaud/followers", "following_url": "https://api.github.com/users/ribeaud/following{/other_user}", "gists_url": "https://api.github.com/users/ribeaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/ribeaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ribeaud/subscriptions", "organizations_url": "https://api.github.com/users/ribeaud/orgs", "repos_url": "https://api.github.com/users/ribeaud/repos", "events_url": "https://api.github.com/users/ribeaud/events{/privacy}", "received_events_url": "https://api.github.com/users/ribeaud/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 363619016, "node_id": "MDU6TGFiZWwzNjM2MTkwMTY=", "url": "https://api.github.com/repos/sloria/environs/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 363619019, "node_id": "MDU6TGFiZWwzNjM2MTkwMTk=", "url": "https://api.github.com/repos/sloria/environs/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-06T15:01:38Z", "updated_at": "2019-08-20T17:17:06Z", "closed_at": "2019-08-08T12:49:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Up to the documentation, it is possible to read a specific file:\r\n```\r\nenv = Env()\r\nenv.read_env(\".env.test\", recurse=False)\r\n```\r\nIf I switch _recursive_ to `True`, then it will look for `.env` file and NOT for the file specified as first argument (_path_), making recursion useless in such cases.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/90", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/90/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/90/events", "html_url": "https://github.com/sloria/environs/issues/90", "id": 465456324, "node_id": "MDU6SXNzdWU0NjU0NTYzMjQ=", "number": 90, "title": "Two proxied variables", "user": {"login": "zevisert", "id": 11222441, "node_id": "MDQ6VXNlcjExMjIyNDQx", "avatar_url": "https://avatars0.githubusercontent.com/u/11222441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zevisert", "html_url": "https://github.com/zevisert", "followers_url": "https://api.github.com/users/zevisert/followers", "following_url": "https://api.github.com/users/zevisert/following{/other_user}", "gists_url": "https://api.github.com/users/zevisert/gists{/gist_id}", "starred_url": "https://api.github.com/users/zevisert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zevisert/subscriptions", "organizations_url": "https://api.github.com/users/zevisert/orgs", "repos_url": "https://api.github.com/users/zevisert/repos", "events_url": "https://api.github.com/users/zevisert/events{/privacy}", "received_events_url": "https://api.github.com/users/zevisert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-08T20:56:53Z", "updated_at": "2019-07-08T23:33:13Z", "closed_at": "2019-07-08T23:33:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Suppose I'm trying to construct a variable by concatenating two proxied variables...\r\n\r\n```\r\nVAR_A=foo\r\nVAR_B=bar\r\n\r\nVAR_C={{VAR_A}}_{{VAR_B}\r\n```\r\n\r\nEnvirons will fail to parse the two proxies and claim that the a joined variable is not set\r\n\r\n```py\r\n>>> import environs\r\n>>> env = envions.Env()\r\n>>> env.read_env(...)\r\n>>> env('VAR_C') \r\nenvirons.EnvError:  Environment variable \"VAR_A}}_{{VAR_B\" not set\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/82", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/82/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/82/events", "html_url": "https://github.com/sloria/environs/issues/82", "id": 456272715, "node_id": "MDU6SXNzdWU0NTYyNzI3MTU=", "number": 82, "title": "env.dump() only shows pre-loaded variables", "user": {"login": "garettmd", "id": 7316933, "node_id": "MDQ6VXNlcjczMTY5MzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/7316933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garettmd", "html_url": "https://github.com/garettmd", "followers_url": "https://api.github.com/users/garettmd/followers", "following_url": "https://api.github.com/users/garettmd/following{/other_user}", "gists_url": "https://api.github.com/users/garettmd/gists{/gist_id}", "starred_url": "https://api.github.com/users/garettmd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garettmd/subscriptions", "organizations_url": "https://api.github.com/users/garettmd/orgs", "repos_url": "https://api.github.com/users/garettmd/repos", "events_url": "https://api.github.com/users/garettmd/events{/privacy}", "received_events_url": "https://api.github.com/users/garettmd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-14T14:17:07Z", "updated_at": "2019-06-15T18:52:06Z", "closed_at": "2019-06-15T18:36:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just started using environs, so let me know if I'm not understanding the best way to use it, but what I expect `env.dump()` to do is dump all the variables from .env. It appears that it only dumps variables which have already been called on (i.e. `env('FLASK_APP')`), and only then will it appear in the output of `env.dump()`. Is there/could there be a way to just show all the contents of a .env file in a dict without explicitly loading them? Or maybe I'm missing the correct usage of this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/81", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/81/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/81/events", "html_url": "https://github.com/sloria/environs/issues/81", "id": 455813587, "node_id": "MDU6SXNzdWU0NTU4MTM1ODc=", "number": 81, "title": "env.path => pathlib.Path", "user": {"login": "umrashrf", "id": 652326, "node_id": "MDQ6VXNlcjY1MjMyNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/652326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/umrashrf", "html_url": "https://github.com/umrashrf", "followers_url": "https://api.github.com/users/umrashrf/followers", "following_url": "https://api.github.com/users/umrashrf/following{/other_user}", "gists_url": "https://api.github.com/users/umrashrf/gists{/gist_id}", "starred_url": "https://api.github.com/users/umrashrf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/umrashrf/subscriptions", "organizations_url": "https://api.github.com/users/umrashrf/orgs", "repos_url": "https://api.github.com/users/umrashrf/repos", "events_url": "https://api.github.com/users/umrashrf/events{/privacy}", "received_events_url": "https://api.github.com/users/umrashrf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 363619018, "node_id": "MDU6TGFiZWwzNjM2MTkwMTg=", "url": "https://api.github.com/repos/sloria/environs/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-13T15:38:00Z", "updated_at": "2019-07-06T20:23:32Z", "closed_at": "2019-07-06T20:13:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\n>>> env.path('C:\\Users\\whoami\\Downloads')\r\nWindowsPath('C:/Users/whoami/Downloads')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/78", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/78/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/78/events", "html_url": "https://github.com/sloria/environs/issues/78", "id": 447831126, "node_id": "MDU6SXNzdWU0NDc4MzExMjY=", "number": 78, "title": "Prefixed Method Does Not Clear self._prefix On Error", "user": {"login": "rcuza", "id": 220180, "node_id": "MDQ6VXNlcjIyMDE4MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/220180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rcuza", "html_url": "https://github.com/rcuza", "followers_url": "https://api.github.com/users/rcuza/followers", "following_url": "https://api.github.com/users/rcuza/following{/other_user}", "gists_url": "https://api.github.com/users/rcuza/gists{/gist_id}", "starred_url": "https://api.github.com/users/rcuza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rcuza/subscriptions", "organizations_url": "https://api.github.com/users/rcuza/orgs", "repos_url": "https://api.github.com/users/rcuza/repos", "events_url": "https://api.github.com/users/rcuza/events{/privacy}", "received_events_url": "https://api.github.com/users/rcuza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-23T19:19:09Z", "updated_at": "2019-06-01T20:32:28Z", "closed_at": "2019-06-01T20:32:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "version: `4.1.3`\r\n\r\n# Problem\r\nWhen using the following code, the private variable `self._prefix` is not cleared on errors:\r\n\r\n```\r\nwith env.prefixed(PREFIX):\r\n    do_something()\r\n```\r\n\r\nIf `do_something()` raises an error, then session attempts to run `with env.prefixed()` again it will behave like it is a nested `with`. This can happen in an interactive shell or if exceptions are caught.\r\n\r\n# Details\r\nYou can do the following to reproduce. \r\n\r\n```\r\n$ export PREFIX_PNG=\"path/to/my.png\"\r\n$ ipython\r\n/usr/local/Cellar/ipython/7.5.0/libexec/lib/python3.7/site-packages/IPython/core/interactiveshell.py:925: UserWarning: Attempting to work in a virtualenv. If you encounter problems, please install IPython inside the virtualenv.\r\n  warn(\"Attempting to work in a virtualenv. If you encounter problems, please \"\r\nPython 3.7.3 (default, Mar 27 2019, 09:23:15)\r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 7.5.0 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: from environs import Env\r\n\r\nIn [2]: env = Env()\r\n\r\nIn [3]: with env.prefixed(\"PREFIX_\"):\r\n   ...:     print(env.str(\"PNG\"))\r\n   ...:\r\npath/to/my.png\r\n\r\nIn [4]: with env.prefixed(\"PREFIX_\"):\r\n   ...:     raise\r\n   ...:\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-4-6c7273e50e26> in <module>\r\n      1 with env.prefixed(\"PREFIX_\"):\r\n----> 2     raise\r\n      3\r\n\r\nRuntimeError: No active exception to reraise\r\n\r\nIn [5]: with env.prefixed(\"PREFIX_\"):\r\n   ...:     print(env.str(\"PNG\"))\r\n   ...:\r\n---------------------------------------------------------------------------\r\nEnvError                                  Traceback (most recent call last)\r\n<ipython-input-5-60d974fcda59> in <module>\r\n      1 with env.prefixed(\"PREFIX_\"):\r\n----> 2     print(env.str(\"PNG\"))\r\n      3\r\n\r\n~/dev/virtualenvs/tmp-da5b0d36b01c294/lib/python3.7/site-packages/environs.py in method(self, name, default, subcast, **kwargs)\r\n     51         if raw_value is ma.missing and field.missing is ma.missing:\r\n     52             raise EnvError(\r\n---> 53                 'Environment variable \"{}\" not set'.format(proxied_key or parsed_key)\r\n     54             )\r\n     55         if raw_value or raw_value == \"\":\r\n\r\nEnvError: Environment variable \"PREFIX_PREFIX_PNG\" not set\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/72", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/72/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/72/events", "html_url": "https://github.com/sloria/environs/issues/72", "id": 437931692, "node_id": "MDU6SXNzdWU0Mzc5MzE2OTI=", "number": 72, "title": "Proxy env var to prefixed env vars", "user": {"login": "Kamforka", "id": 16663089, "node_id": "MDQ6VXNlcjE2NjYzMDg5", "avatar_url": "https://avatars2.githubusercontent.com/u/16663089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kamforka", "html_url": "https://github.com/Kamforka", "followers_url": "https://api.github.com/users/Kamforka/followers", "following_url": "https://api.github.com/users/Kamforka/following{/other_user}", "gists_url": "https://api.github.com/users/Kamforka/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kamforka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kamforka/subscriptions", "organizations_url": "https://api.github.com/users/Kamforka/orgs", "repos_url": "https://api.github.com/users/Kamforka/repos", "events_url": "https://api.github.com/users/Kamforka/events{/privacy}", "received_events_url": "https://api.github.com/users/Kamforka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 363619016, "node_id": "MDU6TGFiZWwzNjM2MTkwMTY=", "url": "https://api.github.com/repos/sloria/environs/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 363619019, "node_id": "MDU6TGFiZWwzNjM2MTkwMTk=", "url": "https://api.github.com/repos/sloria/environs/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-27T10:54:32Z", "updated_at": "2019-05-04T16:08:28Z", "closed_at": "2019-05-04T16:08:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I proxy a non-prefixed env var to a prefixed one and try to load them an error is thrown.\r\n\r\n### Example: \r\n**.env**\r\n```\r\nFLASK_ENV=development\r\nAPP_ENV={{FLASK_ENV}}\r\n```\r\n\r\n**settings.py**\r\n```python\r\nfrom environs import Env\r\n\r\nenv = Env()\r\nenv.read_env()\r\n\r\n\r\nwith env.prefixed('APP_'):\r\n    ENV = env.str('ENV')\r\n```\r\n\r\n**Output:**\r\n```bash\r\nTraceback (most recent call last):\r\n  File \"settings.py\", line 8, in <module>\r\n    ENV = env.str('ENV')\r\n  File \"/.../venv/lib/python3.6/site-packages/environs.py\", line 47, in method\r\n    'Environment variable \"{}\" not set'.format(proxied_key or parsed_key)\r\nenvirons.EnvError: Environment variable \"FLASK_ENV\" not set\r\n```\r\n\r\nIs it intentional to only allow proxying variables within the prefix scope?\r\n\r\nObviously there are many possible workarounds to fix the error, however it feels unintuitive to restrict proxying to a prefix scope.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/71", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/71/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/71/events", "html_url": "https://github.com/sloria/environs/issues/71", "id": 437326391, "node_id": "MDU6SXNzdWU0MzczMjYzOTE=", "number": 71, "title": "Change (or at least document) surprising behavior parsing env var when explicitly set to empty string", "user": {"login": "twosigmajab", "id": 40300730, "node_id": "MDQ6VXNlcjQwMzAwNzMw", "avatar_url": "https://avatars0.githubusercontent.com/u/40300730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twosigmajab", "html_url": "https://github.com/twosigmajab", "followers_url": "https://api.github.com/users/twosigmajab/followers", "following_url": "https://api.github.com/users/twosigmajab/following{/other_user}", "gists_url": "https://api.github.com/users/twosigmajab/gists{/gist_id}", "starred_url": "https://api.github.com/users/twosigmajab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twosigmajab/subscriptions", "organizations_url": "https://api.github.com/users/twosigmajab/orgs", "repos_url": "https://api.github.com/users/twosigmajab/repos", "events_url": "https://api.github.com/users/twosigmajab/events{/privacy}", "received_events_url": "https://api.github.com/users/twosigmajab/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 363619016, "node_id": "MDU6TGFiZWwzNjM2MTkwMTY=", "url": "https://api.github.com/repos/sloria/environs/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 363619019, "node_id": "MDU6TGFiZWwzNjM2MTkwMTk=", "url": "https://api.github.com/repos/sloria/environs/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-25T18:00:49Z", "updated_at": "2019-05-04T16:06:12Z", "closed_at": "2019-05-04T16:06:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Environs users I'm supporting just hit this:\r\n\r\n```python\r\n\u279c cat config/foo.env \r\nMYINT=\"0\"\r\nMYFLOAT=\"0.0\"\r\nMYBOOL=\"False\"\r\nMYSTR=\"\"\r\n\r\n\u279c . config/foo.env\r\n\r\n\u279c python3\r\n...\r\n>>> from environs import Env\r\n>>> env = Env()\r\n>>> env.int(\"MYINT\")\r\n0\r\n>>> env.float(\"MYFLOAT\")\r\n0.0\r\n>>> env.bool(\"MYBOOL\")\r\nFalse\r\n>>> env.str(\"MYSTR\")\r\n<marshmallow.missing>\r\n```\r\nWhat? Expected empty string, as explicitly set:\r\n```python\r\n>>> from os import environ\r\n>>> environ[\"MYSTR\"]\r\n''\r\n```\r\nThis violates reasonable assumptions that the type of the value returned by `env.foo` is always `foo`, as is otherwise consistent with `env.bool`, `env.int`, `env.float`, etc.:\r\n```python\r\n>>> isinstance(env.str(\"MYSTR\"), str)\r\nFalse\r\n```\r\nIn this use case, the user should not need to know what a `marshmallow.missing` is, as it is an implementation detail, and should get back the explicitly set value of empty string rather than needing special logic that knows how to deal with `marshmallow.missing`.\r\n\r\nIf the current behavior cannot be changed e.g. for compatibility reasons, it should at least be documented, as this seems like a common use case.\r\n\r\nHappy to submit a PR if that would be of interest. Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/66", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/66/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/66/events", "html_url": "https://github.com/sloria/environs/issues/66", "id": 422496453, "node_id": "MDU6SXNzdWU0MjI0OTY0NTM=", "number": 66, "title": "Allow opening other files, not just .env", "user": {"login": "nvtkaszpir", "id": 1480252, "node_id": "MDQ6VXNlcjE0ODAyNTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1480252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nvtkaszpir", "html_url": "https://github.com/nvtkaszpir", "followers_url": "https://api.github.com/users/nvtkaszpir/followers", "following_url": "https://api.github.com/users/nvtkaszpir/following{/other_user}", "gists_url": "https://api.github.com/users/nvtkaszpir/gists{/gist_id}", "starred_url": "https://api.github.com/users/nvtkaszpir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nvtkaszpir/subscriptions", "organizations_url": "https://api.github.com/users/nvtkaszpir/orgs", "repos_url": "https://api.github.com/users/nvtkaszpir/repos", "events_url": "https://api.github.com/users/nvtkaszpir/events{/privacy}", "received_events_url": "https://api.github.com/users/nvtkaszpir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-19T00:55:34Z", "updated_at": "2019-05-16T03:18:14Z", "closed_at": "2019-05-16T03:14:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently environs read only hard-coded `.env` files, and only path is available.\r\nYet more and more tools allow custom .env files.\r\n\r\nI believe environs should add parameter like `file='.env'` to be able to override defaults. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/56", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/56/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/56/events", "html_url": "https://github.com/sloria/environs/issues/56", "id": 398700619, "node_id": "MDU6SXNzdWUzOTg3MDA2MTk=", "number": 56, "title": "Validation only happens one field at a time", "user": {"login": "robertlagrant", "id": 1766161, "node_id": "MDQ6VXNlcjE3NjYxNjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1766161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robertlagrant", "html_url": "https://github.com/robertlagrant", "followers_url": "https://api.github.com/users/robertlagrant/followers", "following_url": "https://api.github.com/users/robertlagrant/following{/other_user}", "gists_url": "https://api.github.com/users/robertlagrant/gists{/gist_id}", "starred_url": "https://api.github.com/users/robertlagrant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robertlagrant/subscriptions", "organizations_url": "https://api.github.com/users/robertlagrant/orgs", "repos_url": "https://api.github.com/users/robertlagrant/repos", "events_url": "https://api.github.com/users/robertlagrant/events{/privacy}", "received_events_url": "https://api.github.com/users/robertlagrant/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 363619018, "node_id": "MDU6TGFiZWwzNjM2MTkwMTg=", "url": "https://api.github.com/repos/sloria/environs/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 363619019, "node_id": "MDU6TGFiZWwzNjM2MTkwMTk=", "url": "https://api.github.com/repos/sloria/environs/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-13T21:21:30Z", "updated_at": "2019-11-03T17:18:21Z", "closed_at": "2019-11-03T17:18:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, with the following code:\r\n\r\n```\r\nfrom environs import Env\r\nenv = Env()\r\nvar1 = env(\"VAR1\")\r\nvar2 = env(\"VAR2\")\r\n```\r\n\r\nIf both env vars are missing, environs will simply display:\r\n```\r\nenvirons.EnvError: Environment variable \"VAR1\" not set\r\n```\r\n\r\nAnd only when that's set will it display the second error.\r\n\r\nIt'd be great to have it validate as far as possible all the required environment variables, perhaps with a manual flagging of when to start and stop such a process:\r\n\r\n```\r\nfrom environs import Env\r\nenv = Env(eager=False)\r\nvar1 = env(\"VAR1\")\r\nvar2 = env(\"VAR2\")\r\nvar3 = env.int(\"VAR3\")\r\nenv.read()\r\n\r\nenvirons.EnvError: Environment variables invalid: {\"VAR1\": \"missing\", \"VAR2\": \"missing\", \"VAR3\": \"wrong type\"]. \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/48", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/48/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/48/events", "html_url": "https://github.com/sloria/environs/issues/48", "id": 379157244, "node_id": "MDU6SXNzdWUzNzkxNTcyNDQ=", "number": 48, "title": "Dependabot couldn't fetch all your path-based dependencies", "user": {"login": "dependabot-preview[bot]", "id": 27856297, "node_id": "MDM6Qm90Mjc4NTYyOTc=", "avatar_url": "https://avatars3.githubusercontent.com/in/2141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dependabot-preview%5Bbot%5D", "html_url": "https://github.com/apps/dependabot-preview", "followers_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/followers", "following_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/repos", "events_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-09T13:14:39Z", "updated_at": "2018-11-09T14:10:47Z", "closed_at": "2018-11-09T14:10:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Dependabot couldn't fetch one or more of your project's path-based Python dependencies. The affected dependencies were `'./setup.py`.\n\nTo use path-based dependancies with Dependabot the paths must be relative and resolve to a directory in this project's source code.\n\nYou can mention @dependabot in the comments below to contact the Dependabot team.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/46", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/46/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/46/events", "html_url": "https://github.com/sloria/environs/issues/46", "id": 378282534, "node_id": "MDU6SXNzdWUzNzgyODI1MzQ=", "number": 46, "title": "Dependabot couldn't fetch all your path-based dependencies", "user": {"login": "dependabot-preview[bot]", "id": 27856297, "node_id": "MDM6Qm90Mjc4NTYyOTc=", "avatar_url": "https://avatars3.githubusercontent.com/in/2141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dependabot-preview%5Bbot%5D", "html_url": "https://github.com/apps/dependabot-preview", "followers_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/followers", "following_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/repos", "events_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-07T13:15:07Z", "updated_at": "2018-11-08T23:10:53Z", "closed_at": "2018-11-08T23:10:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Dependabot couldn't fetch one or more of your project's path-based Python dependencies. The affected dependencies were `'./setup.py`.\n\nTo use path-based dependancies with Dependabot the paths must be relative and resolve to a directory in this project's source code.\n\nYou can mention @dependabot in the comments below to contact the Dependabot team.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/17", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/17/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/17/events", "html_url": "https://github.com/sloria/environs/issues/17", "id": 348909014, "node_id": "MDU6SXNzdWUzNDg5MDkwMTQ=", "number": 17, "title": "Set default value once and reuse", "user": {"login": "konoufo", "id": 9636748, "node_id": "MDQ6VXNlcjk2MzY3NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/9636748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/konoufo", "html_url": "https://github.com/konoufo", "followers_url": "https://api.github.com/users/konoufo/followers", "following_url": "https://api.github.com/users/konoufo/following{/other_user}", "gists_url": "https://api.github.com/users/konoufo/gists{/gist_id}", "starred_url": "https://api.github.com/users/konoufo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/konoufo/subscriptions", "organizations_url": "https://api.github.com/users/konoufo/orgs", "repos_url": "https://api.github.com/users/konoufo/repos", "events_url": "https://api.github.com/users/konoufo/events{/privacy}", "received_events_url": "https://api.github.com/users/konoufo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-08T22:05:19Z", "updated_at": "2018-08-10T15:47:05Z", "closed_at": "2018-08-10T15:47:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Coming from django-environ, I thought  `env(varname, \"defaultval\")` would set a default to be automatically used on subsequent calls to `env(varname)`. There should be a way to set a default value for an environment var, to be overrided or not on subsequent calls. Something like `env.setdefault('varname', \"originaldefault\")` would do; then if `varname` is not defined in environment, susbsequent calls to `env(\"varname\")` would output `\"originaldefault\"` instead of raising the usual exception.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/11", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/11/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/11/events", "html_url": "https://github.com/sloria/environs/issues/11", "id": 309786305, "node_id": "MDU6SXNzdWUzMDk3ODYzMDU=", "number": 11, "title": "Integration with argparse", "user": {"login": "mheppner", "id": 2390428, "node_id": "MDQ6VXNlcjIzOTA0Mjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2390428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mheppner", "html_url": "https://github.com/mheppner", "followers_url": "https://api.github.com/users/mheppner/followers", "following_url": "https://api.github.com/users/mheppner/following{/other_user}", "gists_url": "https://api.github.com/users/mheppner/gists{/gist_id}", "starred_url": "https://api.github.com/users/mheppner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mheppner/subscriptions", "organizations_url": "https://api.github.com/users/mheppner/orgs", "repos_url": "https://api.github.com/users/mheppner/repos", "events_url": "https://api.github.com/users/mheppner/events{/privacy}", "received_events_url": "https://api.github.com/users/mheppner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-29T14:51:38Z", "updated_at": "2018-05-08T22:22:41Z", "closed_at": "2018-05-08T22:22:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a use-case where I need to support both command-line arguments, as well as environment variables. This pattern ends up looking like this:\r\n\r\n```python\r\ndef parse_env():\r\n    env = Env()\r\n    return {\r\n        'my_option': env.str('MY_OPTION', default='value'),\r\n        'positional': env.str('POSITIONAL')\r\n        'many_inputs': env.list('MANY_INPUTS')\r\n    }\r\n\r\ndef parse_cli():\r\n    parser = argparse.ArgumentParser()\r\n    parser.add_argument('-m', '--my-option', default='value')\r\n    parser.add_argument(dest='positional')\r\n    parser.add_argument(dest='many_inputs', nargs='+')\r\n    return vars(parser.parse_args())\r\n\r\nif __name__ == '__main__':\r\n    if os.environ.get('USE_ENV'):\r\n        args = parse_env()\r\n    else:\r\n        args = parse_cli()\r\n\r\n    do_something(**args)\r\n```\r\n\r\nIs there a better pattern for this? There's a lot of duplicate logic, making sure both variables are the same and defaults match. Could this be a feature request to add this to argparse, maybe with a subclass?\r\n\r\nI'm thinking something like this:\r\n\r\n```python\r\nfrom environs import EnvArgumentParser\r\nparser = EnvArgumentParser(\r\n    env_prefix='MY_PREFIX_'  # this would be neat\r\n)\r\nparser.add_argument('-m', '--my-option', default='value', env_name='MY_OPTION')\r\nparser.add_argument(dest='positional', env_name='CUSTOM_NAME')\r\nparser.add_argument(dest='many_inputs', nargs='+')  # default env_name to MANY_INPUTS\r\n```\r\n\r\nThoughts? If you think this would be useful for this library, I can try working on it. I don't know the internals of argparse very well though.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/10", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/10/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/10/events", "html_url": "https://github.com/sloria/environs/issues/10", "id": 295748513, "node_id": "MDU6SXNzdWUyOTU3NDg1MTM=", "number": 10, "title": "Don't throw IOError for missing .env file", "user": {"login": "lachlancooper", "id": 660954, "node_id": "MDQ6VXNlcjY2MDk1NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/660954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lachlancooper", "html_url": "https://github.com/lachlancooper", "followers_url": "https://api.github.com/users/lachlancooper/followers", "following_url": "https://api.github.com/users/lachlancooper/following{/other_user}", "gists_url": "https://api.github.com/users/lachlancooper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lachlancooper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lachlancooper/subscriptions", "organizations_url": "https://api.github.com/users/lachlancooper/orgs", "repos_url": "https://api.github.com/users/lachlancooper/repos", "events_url": "https://api.github.com/users/lachlancooper/events{/privacy}", "received_events_url": "https://api.github.com/users/lachlancooper/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 363619018, "node_id": "MDU6TGFiZWwzNjM2MTkwMTg=", "url": "https://api.github.com/repos/sloria/environs/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 363619019, "node_id": "MDU6TGFiZWwzNjM2MTkwMTk=", "url": "https://api.github.com/repos/sloria/environs/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-09T04:04:32Z", "updated_at": "2018-08-05T22:21:31Z", "closed_at": "2018-08-05T21:58:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all thanks very much for this beautiful library, I'm using it to replace a few others as well as a lot of manual type-casting.\r\n\r\nI would like to suggest making `read_env()` only opportunistically search for a `.env` file, and do nothing (or perhaps log a warning) if no file is found. This is the way django-environ, envparse, and python-dotenv all work.\r\n\r\nI think it makes sense to support `.env` files in situations where there is no better way to manage environment variables, such as running an application locally, but not _require_ them when running in production under, say, Docker or a traditional process manager.\r\n\r\nI can of course work around this with a simple try/catch, but a change like this would make the library even nicer to use.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/7", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/7/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/7/events", "html_url": "https://github.com/sloria/environs/issues/7", "id": 245374432, "node_id": "MDU6SXNzdWUyNDUzNzQ0MzI=", "number": 7, "title": "Add log_level handler", "user": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 363619018, "node_id": "MDU6TGFiZWwzNjM2MTkwMTg=", "url": "https://api.github.com/repos/sloria/environs/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 363619019, "node_id": "MDU6TGFiZWwzNjM2MTkwMTk=", "url": "https://api.github.com/repos/sloria/environs/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-25T11:44:56Z", "updated_at": "2019-07-13T20:03:41Z", "closed_at": "2019-07-13T20:03:41Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Support\r\n\r\n```\r\nLEVEL=DEBUG\r\n```\r\n\r\n```python\r\nlog_level = env.log_level('LEVEL') # => logging.DEBUG\r\n```  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/6", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/6/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/6/events", "html_url": "https://github.com/sloria/environs/issues/6", "id": 172667415, "node_id": "MDU6SXNzdWUxNzI2Njc0MTU=", "number": 6, "title": "Add .url() parser", "user": {"login": "IlyaSemenov", "id": 128121, "node_id": "MDQ6VXNlcjEyODEyMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/128121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IlyaSemenov", "html_url": "https://github.com/IlyaSemenov", "followers_url": "https://api.github.com/users/IlyaSemenov/followers", "following_url": "https://api.github.com/users/IlyaSemenov/following{/other_user}", "gists_url": "https://api.github.com/users/IlyaSemenov/gists{/gist_id}", "starred_url": "https://api.github.com/users/IlyaSemenov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IlyaSemenov/subscriptions", "organizations_url": "https://api.github.com/users/IlyaSemenov/orgs", "repos_url": "https://api.github.com/users/IlyaSemenov/repos", "events_url": "https://api.github.com/users/IlyaSemenov/events{/privacy}", "received_events_url": "https://api.github.com/users/IlyaSemenov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-23T10:44:48Z", "updated_at": "2017-01-09T23:56:35Z", "closed_at": "2017-01-09T23:56:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think URLs deserve first-class handling in environs, using `urllib.parse.urlparse` as the parser and throwing the corresponding exception when the value is formatted incorrectly.\n\nI know I can plug it in myself. But URLs are built-in Python functionality and framework-agnostic, I don't see how they are different from, say, timedeltas.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/3", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/3/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/3/events", "html_url": "https://github.com/sloria/environs/issues/3", "id": 151124828, "node_id": "MDU6SXNzdWUxNTExMjQ4Mjg=", "number": 3, "title": "Add schema API?", "user": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 364422802, "node_id": "MDU6TGFiZWwzNjQ0MjI4MDI=", "url": "https://api.github.com/repos/sloria/environs/labels/feedback%20welcome", "name": "feedback welcome", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-26T12:48:32Z", "updated_at": "2016-04-30T16:07:07Z", "closed_at": "2016-04-30T16:07:07Z", "author_association": "OWNER", "active_lock_reason": null, "body": "## Proposed API\n\n``` python\nenv = Env(BOOLEAN_VAR=bool, LIST_VAR=dict(cast=list, subcast=int))\nenv('BOOLEAN_VAR')\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/2", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/2/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/2/events", "html_url": "https://github.com/sloria/environs/issues/2", "id": 151124584, "node_id": "MDU6SXNzdWUxNTExMjQ1ODQ=", "number": 2, "title": "Support proxied variables", "user": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 363619018, "node_id": "MDU6TGFiZWwzNjM2MTkwMTg=", "url": "https://api.github.com/repos/sloria/environs/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/sloria/environs/milestones/1", "html_url": "https://github.com/sloria/environs/milestone/1", "labels_url": "https://api.github.com/repos/sloria/environs/milestones/1/labels", "id": 1740094, "node_id": "MDk6TWlsZXN0b25lMTc0MDA5NA==", "number": 1, "title": "1.0.0", "description": "", "creator": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "closed", "created_at": "2016-04-30T16:41:17Z", "updated_at": "2017-12-08T02:18:17Z", "due_on": null, "closed_at": "2017-12-08T02:18:17Z"}, "comments": 0, "created_at": "2016-04-26T12:47:35Z", "updated_at": "2016-04-30T18:04:04Z", "closed_at": "2016-04-30T18:04:04Z", "author_association": "OWNER", "active_lock_reason": null, "body": "## Proposed API\n\n```\n# export MAILGUN_SMTP_LOGIN=foo\n# export SMTP_LOGIN='{{MAILGUN_SMTP_LOGIN}}'\n\nsmtp_login = env('SMTP_LOGIN')  # => 'foo'\n```\n\nSee https://github.com/rconradharris/envparse#usage\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sloria/environs/issues/1", "repository_url": "https://api.github.com/repos/sloria/environs", "labels_url": "https://api.github.com/repos/sloria/environs/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/sloria/environs/issues/1/comments", "events_url": "https://api.github.com/repos/sloria/environs/issues/1/events", "html_url": "https://github.com/sloria/environs/issues/1", "id": 151030868, "node_id": "MDU6SXNzdWUxNTEwMzA4Njg=", "number": 1, "title": "Read .env files", "user": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 363619018, "node_id": "MDU6TGFiZWwzNjM2MTkwMTg=", "url": "https://api.github.com/repos/sloria/environs/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/sloria/environs/milestones/1", "html_url": "https://github.com/sloria/environs/milestone/1", "labels_url": "https://api.github.com/repos/sloria/environs/milestones/1/labels", "id": 1740094, "node_id": "MDk6TWlsZXN0b25lMTc0MDA5NA==", "number": 1, "title": "1.0.0", "description": "", "creator": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "closed", "created_at": "2016-04-30T16:41:17Z", "updated_at": "2017-12-08T02:18:17Z", "due_on": null, "closed_at": "2017-12-08T02:18:17Z"}, "comments": 1, "created_at": "2016-04-26T03:25:36Z", "updated_at": "2016-04-30T16:41:29Z", "closed_at": "2016-04-30T16:38:45Z", "author_association": "OWNER", "active_lock_reason": null, "body": "## Proposed API\n\n``` python\nenv.read_env()  # searches for a .env in the file hierarchy, parses it into os.environ\n```\n## Considerations\n\nThis is already implemented by envparse and django-environ (it's hard to tell, but I think original credit goes to the author of this gist: https://gist.github.com/bennylope/2999704).\n\nI'm hesitant to just copy and paste the implementation from one of these sources into this library. I'm more inclined to release a separate library and just import that library here. That way, other libraries could reuse this code. Also, users may want to read `.env` files without having to use environs, envparse, etc.\n", "performed_via_github_app": null, "score": 1.0}]}