{"total_count": 270, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/mongomock/mongomock/issues/664", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/664/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/664/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/664/events", "html_url": "https://github.com/mongomock/mongomock/issues/664", "id": 687234265, "node_id": "MDU6SXNzdWU2ODcyMzQyNjU=", "number": 664, "title": "support boolean_operators in aggregate", "user": {"login": "smadarbmeir", "id": 70328304, "node_id": "MDQ6VXNlcjcwMzI4MzA0", "avatar_url": "https://avatars2.githubusercontent.com/u/70328304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smadarbmeir", "html_url": "https://github.com/smadarbmeir", "followers_url": "https://api.github.com/users/smadarbmeir/followers", "following_url": "https://api.github.com/users/smadarbmeir/following{/other_user}", "gists_url": "https://api.github.com/users/smadarbmeir/gists{/gist_id}", "starred_url": "https://api.github.com/users/smadarbmeir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smadarbmeir/subscriptions", "organizations_url": "https://api.github.com/users/smadarbmeir/orgs", "repos_url": "https://api.github.com/users/smadarbmeir/repos", "events_url": "https://api.github.com/users/smadarbmeir/events{/privacy}", "received_events_url": "https://api.github.com/users/smadarbmeir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-27T13:15:40Z", "updated_at": "2020-08-28T15:32:07Z", "closed_at": "2020-08-28T15:32:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "boolean_operation are not implemented on aggregate:\r\n\r\n```\r\ndef test__aggregate_and(self):\r\n        self.mongo.al_config.moments.insert_many(\r\n            [\r\n                {\"_id\": 2, \"parent_id\": 1, \"value\": 4},\r\n                {\"_id\": 3, \"parent_id\": 1, \"value\": 3},\r\n                {\"_id\": 4, \"parent_id\": 1, \"value\": 7},\r\n            ]\r\n        )\r\n        actual = self.mongo.al_config.moments.aggregate(\r\n            [\r\n                {\r\n                    \"$project\": {\r\n                        \"_id\": True,\r\n                        \"parent_id\": True,\r\n                        \"result\": {\r\n                            \"$and\": [\r\n                                {\"$eq\": [\"$_id\", 2]},\r\n>                               {\"$eq\": [\"$value\", 4]},\r\n                            ]\r\n                        },\r\n                    }\r\n                }\r\n            ]\r\n        )\r\n\r\nbase/logic/test_team_top_viewed_moments.py:706: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n../venv3_7/lib/python3.7/site-packages/mongomock/collection.py:1722: in aggregate\r\n    return aggregate.process_pipeline(in_collection, self.database, pipeline, session)\r\n../venv3_7/lib/python3.7/site-packages/mongomock/aggregate.py:1281: in process_pipeline\r\n    collection = handler(collection, database, options)\r\n../venv3_7/lib/python3.7/site-packages/mongomock/aggregate.py:1158: in _handle_project_stage\r\n    out_doc[field] = _parse_expression(value, in_doc, ignore_missing_keys=True)\r\n../venv3_7/lib/python3.7/site-packages/mongomock/aggregate.py:718: in _parse_expression\r\n    return _Parser(doc_dict, ignore_missing_keys=ignore_missing_keys).parse(expression)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <mongomock.aggregate._Parser object at 0x7f54acccfb90>\r\nexpression = {'$and': [{'$eq': ['$_id', 2]}, {'$eq': ['$value', 4]}]}\r\n\r\n    def parse(self, expression):\r\n        \"\"\"Parse a MongoDB expression.\"\"\"\r\n        if not isinstance(expression, dict):\r\n            return self._parse_basic_expression(expression)\r\n    \r\n        if len(expression) > 1 and any(key.startswith('$') for key in expression):\r\n            raise OperationFailure(\r\n                'an expression specification must contain exactly one field, '\r\n                'the name of the expression. Found %d fields in %s'\r\n                % (len(expression), expression))\r\n    \r\n        value_dict = {}\r\n        for k, v in six.iteritems(expression):\r\n            if k in arithmetic_operators:\r\n                return self._handle_arithmetic_operator(k, v)\r\n            if k in project_operators:\r\n                return self._handle_project_operator(k, v)\r\n            if k in projection_operators:\r\n                return self._handle_projection_operator(k, v)\r\n            if k in comparison_operators:\r\n                return self._handle_comparison_operator(k, v)\r\n            if k in date_operators:\r\n                return self._handle_date_operator(k, v)\r\n            if k in array_operators:\r\n                return self._handle_array_operator(k, v)\r\n            if k in conditional_operators:\r\n                return self._handle_conditional_operator(k, v)\r\n            if k in control_flow_operators:\r\n                return self._handle_control_flow_operator(k, v)\r\n            if k in set_operators:\r\n                return self._handle_set_operator(k, v)\r\n            if k in string_operators:\r\n                return self._handle_string_operator(k, v)\r\n            if k in type_convertion_operators:\r\n                return self._handle_type_convertion_operator(k, v)\r\n            if k in boolean_operators + \\\r\n                    text_search_operators + \\\r\n                    projection_operators + \\\r\n                    object_operators:\r\n                raise NotImplementedError(\r\n>                   \"'%s' is a valid operation but it is not supported by Mongomock yet.\" % k)\r\nE               NotImplementedError: '$and' is a valid operation but it is not supported by Mongomock yet.\r\n\r\n../venv3_7/lib/python3.7/site-packages/mongomock/aggregate.py:232: NotImplementedError\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/655", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/655/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/655/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/655/events", "html_url": "https://github.com/mongomock/mongomock/issues/655", "id": 677224325, "node_id": "MDU6SXNzdWU2NzcyMjQzMjU=", "number": 655, "title": "TTL index support - high level proposal", "user": {"login": "juannyG", "id": 7672379, "node_id": "MDQ6VXNlcjc2NzIzNzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7672379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juannyG", "html_url": "https://github.com/juannyG", "followers_url": "https://api.github.com/users/juannyG/followers", "following_url": "https://api.github.com/users/juannyG/following{/other_user}", "gists_url": "https://api.github.com/users/juannyG/gists{/gist_id}", "starred_url": "https://api.github.com/users/juannyG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juannyG/subscriptions", "organizations_url": "https://api.github.com/users/juannyG/orgs", "repos_url": "https://api.github.com/users/juannyG/repos", "events_url": "https://api.github.com/users/juannyG/events{/privacy}", "received_events_url": "https://api.github.com/users/juannyG/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 328052880, "node_id": "MDU6TGFiZWwzMjgwNTI4ODA=", "url": "https://api.github.com/repos/mongomock/mongomock/labels/discussion", "name": "discussion", "color": "006b75", "default": false, "description": null}, {"id": 1352860, "node_id": "MDU6TGFiZWwxMzUyODYw", "url": "https://api.github.com/repos/mongomock/mongomock/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": "Reporting a feature that is missing from mongomock."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-08-11T21:57:44Z", "updated_at": "2020-08-27T14:04:40Z", "closed_at": "2020-08-27T14:04:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While using \r\n* mongomock==3.19.0\r\n* mongonengine==0.20.0\r\n* pymongo==3.10.1\r\n\r\nI ran into an issue that appears with `update` that was resolved in https://github.com/mongomock/mongomock/pull/628\r\n\r\nSadly (for me) this was released in version 3.20.0 along side [a commit that raises a `NotImplementedError` when it sees TTL indexes](https://github.com/mongomock/mongomock/commit/cd034305d03534223db4b04d18252280fc29855e#diff-4901d650fcdfbe042f25fcaf722eb2cc) that makes my test suite explode with exceptions at this line when trying to upgrade from 3.19.0 to 3.20.0.\r\n\r\nI see that [expiring data is listed in one of the missing features](\r\nhttps://github.com/mongomock/mongomock/blob/develop/Missing_Features.rst) and before I went ahead and implemented anything, I thought it prudent to ask first if there were any considerations/gotchas/preferences of implementation - I haven't seen anything in the issues list, however.\r\n\r\nI think the expiry feature could (should) be done in a two prong approach: \r\n1. [one for the TTL index ](https://docs.mongodb.com/manual/tutorial/expire-data/#expire-documents-after-a-specified-number-of-seconds)\r\n2. [another for the specific clock time expiry](https://docs.mongodb.com/manual/tutorial/expire-data/#expire-documents-after-a-specified-number-of-seconds)\r\n\r\nWhile (1) is being implemented, a similar `NotImplemented` approach could be used for (2) (i.e. if we see `expireAt` - sorry, `raise NotImplementedError`)\r\n\r\nMy initial reaction to solve (1): \r\n* adding a sort of specialization to the collections store of indexes to track `expireAfterSeconds` - I think this might be the easier part...\r\n* when a document is first created, an extra hidden property is added to the \"record\", of \"now + expiry\" datetime, indicating when the record would/should be \"deleted\" - this feels a little trickier, mostly because I haven't dug into this area of the library (yet...:smile: )\r\n\r\nThe final piece of the puzzle lies in \"OK - you've expired - get out.\" Per the mongo documentation:\r\n\r\n> _The TTL feature relies on a background thread in mongod that reads the date-typed values in the index and removes expired documents from the collection._\r\n\r\nWell - we don't have that - we're locked in the GIL (I wouldn't recommend async for this either). At some point during collection and/or document access, some kind of examination of the collection could occur, effectively executing the responsibility of the `mongod` background thread, and remove the expired records.\r\n\r\nThat last piece would certainly benefit from some performance analysis. But before that, circling back to my original stated intent - I'd love any feedback (even if it's a simple \"Yep - if you can make this happen - you're a go\" or \"We've thought about that and it's not possible\") on this approach.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/654", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/654/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/654/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/654/events", "html_url": "https://github.com/mongomock/mongomock/issues/654", "id": 676647294, "node_id": "MDU6SXNzdWU2NzY2NDcyOTQ=", "number": 654, "title": "create_index doesn't raise an error in case of duplicate indexes", "user": {"login": "languitar", "id": 1336287, "node_id": "MDQ6VXNlcjEzMzYyODc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1336287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/languitar", "html_url": "https://github.com/languitar", "followers_url": "https://api.github.com/users/languitar/followers", "following_url": "https://api.github.com/users/languitar/following{/other_user}", "gists_url": "https://api.github.com/users/languitar/gists{/gist_id}", "starred_url": "https://api.github.com/users/languitar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/languitar/subscriptions", "organizations_url": "https://api.github.com/users/languitar/orgs", "repos_url": "https://api.github.com/users/languitar/repos", "events_url": "https://api.github.com/users/languitar/events{/privacy}", "received_events_url": "https://api.github.com/users/languitar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-11T07:25:19Z", "updated_at": "2020-08-13T13:35:39Z", "closed_at": "2020-08-12T22:38:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "MongoDB itself cannot create multiple indexes with the same set of fields and sorting options. However, `create_index` in mongomock doesn't replicate this behavior:\r\n\r\n```\r\nIn [17]: import pymongo                                                                                                                                                                                                                                                                     \r\n\r\nIn [18]: real_client = pymongo.MongoClient(\"mongodb://root:rootpass@localhost/\")                                                                                                                                                                                                            \r\n\r\nIn [19]: real_collection = real_client.test.index_test                                                                                                                                                                                                                                      \r\n\r\nIn [20]: real_collection.create_index([(\"foo\", -1)])                                                                                                                                                                                                                                        \r\nOut[20]: 'foo_-1'\r\n\r\nIn [21]: real_collection.create_index([(\"foo\", -1)], expireAfterSeconds=42)                                                                                                                                                                                                                 \r\n---------------------------------------------------------------------------\r\nOperationFailure                          Traceback (most recent call last)\r\n<ipython-input-21-7f046f171dde> in <module>\r\n----> 1 real_collection.create_index([(\"foo\", -1)], expireAfterSeconds=42)\r\n\r\n~/src/preprod-sync/.venv/lib/python3.8/site-packages/pymongo/collection.py in create_index(self, keys, session, **kwargs)\r\n   1993         if \"maxTimeMS\" in kwargs:\r\n   1994             cmd_options[\"maxTimeMS\"] = kwargs.pop(\"maxTimeMS\")\r\n-> 1995         self.__create_index(keys, kwargs, session, **cmd_options)\r\n   1996         return name\r\n   1997 \r\n\r\n~/src/preprod-sync/.venv/lib/python3.8/site-packages/pymongo/collection.py in __create_index(self, keys, index_options, session, **kwargs)\r\n   1888             cmd = SON([('createIndexes', self.name), ('indexes', [index])])\r\n   1889             cmd.update(kwargs)\r\n-> 1890             self._command(\r\n   1891                 sock_info, cmd, read_preference=ReadPreference.PRIMARY,\r\n   1892                 codec_options=_UNICODE_REPLACE_CODEC_OPTIONS,\r\n\r\n~/src/preprod-sync/.venv/lib/python3.8/site-packages/pymongo/collection.py in _command(self, sock_info, command, slave_ok, read_preference, codec_options, check, allowable_errors, read_concern, write_concern, collation, session, retryable_write, user_fields)\r\n    233         \"\"\"\r\n    234         with self.__database.client._tmp_session(session) as s:\r\n--> 235             return sock_info.command(\r\n    236                 self.__database.name,\r\n    237                 command,\r\n\r\n~/src/preprod-sync/.venv/lib/python3.8/site-packages/pymongo/pool.py in command(self, dbname, spec, slave_ok, read_preference, codec_options, check, allowable_errors, check_keys, read_concern, write_concern, parse_write_concern_error, collation, session, client, retryable_write, publish_events, user_fields)\r\n    601             self._raise_if_not_writable(unacknowledged)\r\n    602         try:\r\n--> 603             return command(self.sock, dbname, spec, slave_ok,\r\n    604                            self.is_mongos, read_preference, codec_options,\r\n    605                            session, client, check, allowable_errors,\r\n\r\n~/src/preprod-sync/.venv/lib/python3.8/site-packages/pymongo/network.py in command(sock, dbname, spec, slave_ok, is_mongos, read_preference, codec_options, session, client, check, allowable_errors, address, check_keys, listeners, max_bson_size, read_concern, parse_write_concern_error, collation, compression_ctx, use_op_msg, unacknowledged, user_fields)\r\n    163                 client._process_response(response_doc, session)\r\n    164             if check:\r\n--> 165                 helpers._check_command_response(\r\n    166                     response_doc, None, allowable_errors,\r\n    167                     parse_write_concern_error=parse_write_concern_error)\r\n\r\n~/src/preprod-sync/.venv/lib/python3.8/site-packages/pymongo/helpers.py in _check_command_response(response, msg, allowable_errors, parse_write_concern_error)\r\n    157 \r\n    158             msg = msg or \"%s\"\r\n--> 159             raise OperationFailure(msg % errmsg, code, response)\r\n    160 \r\n    161 \r\n\r\nOperationFailure: Index with name: foo_-1 already exists with different options\r\n```\r\n\r\nMongomock simply allows both calls to pass.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/653", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/653/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/653/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/653/events", "html_url": "https://github.com/mongomock/mongomock/issues/653", "id": 676643652, "node_id": "MDU6SXNzdWU2NzY2NDM2NTI=", "number": 653, "title": "Invalid arguments to create_index are not captured", "user": {"login": "languitar", "id": 1336287, "node_id": "MDQ6VXNlcjEzMzYyODc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1336287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/languitar", "html_url": "https://github.com/languitar", "followers_url": "https://api.github.com/users/languitar/followers", "following_url": "https://api.github.com/users/languitar/following{/other_user}", "gists_url": "https://api.github.com/users/languitar/gists{/gist_id}", "starred_url": "https://api.github.com/users/languitar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/languitar/subscriptions", "organizations_url": "https://api.github.com/users/languitar/orgs", "repos_url": "https://api.github.com/users/languitar/repos", "events_url": "https://api.github.com/users/languitar/events{/privacy}", "received_events_url": "https://api.github.com/users/languitar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-08-11T07:18:42Z", "updated_at": "2020-08-12T12:09:35Z", "closed_at": "2020-08-12T07:59:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, you can construct illegal indexes that later break for instance `list_indexes`:\r\n\r\n```\r\nIn [1]: import mongomock                                                                                                                                                                                                                                                                    \r\n\r\nIn [2]: client = mongomock.MongoClient()                                                                                                                                                                                                                                                    \r\n\r\nIn [3]: collection = client.foo.bar                                                                                                                                                                                                                                                         \r\n\r\nIn [4]: collection.create_index([(\"one\", -1, \"foo\", \"bar\")])                                                                                                                                                                                                                                \r\nOut[4]: 'one_-1_foo_bar'\r\n\r\nIn [5]: next(collection.list_indexes())                                                                                                                                                                                                                                                     \r\nOut[5]: {'key': {'_id': 1}, 'name': '_id_', 'v': 2, 'ns': 'foo.bar'}\r\n\r\nIn [6]: list(collection.list_indexes())                                                                                                                                                                                                                                                     \r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-6-59c676dc5fe4> in <module>\r\n----> 1 list(collection.list_indexes())\r\n\r\n~/src/preprod-sync/.venv/lib/python3.8/site-packages/mongomock/collection.py in list_indexes(self, session)\r\n   1473             yield dict(\r\n   1474                 information,\r\n-> 1475                 key=dict(information['key']),\r\n   1476                 name=name,\r\n   1477                 v=2,\r\n\r\nValueError: dictionary update sequence element #0 has length 4; 2 is required\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/650", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/650/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/650/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/650/events", "html_url": "https://github.com/mongomock/mongomock/issues/650", "id": 670020703, "node_id": "MDU6SXNzdWU2NzAwMjA3MDM=", "number": 650, "title": "Falsy values in mongomock are different than in MongoDB", "user": {"login": "kosqx", "id": 11116, "node_id": "MDQ6VXNlcjExMTE2", "avatar_url": "https://avatars2.githubusercontent.com/u/11116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kosqx", "html_url": "https://github.com/kosqx", "followers_url": "https://api.github.com/users/kosqx/followers", "following_url": "https://api.github.com/users/kosqx/following{/other_user}", "gists_url": "https://api.github.com/users/kosqx/gists{/gist_id}", "starred_url": "https://api.github.com/users/kosqx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kosqx/subscriptions", "organizations_url": "https://api.github.com/users/kosqx/orgs", "repos_url": "https://api.github.com/users/kosqx/repos", "events_url": "https://api.github.com/users/kosqx/events{/privacy}", "received_events_url": "https://api.github.com/users/kosqx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-31T17:04:45Z", "updated_at": "2020-08-01T14:00:27Z", "closed_at": "2020-08-01T14:00:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In MongoDB only the following values are falsy (the values that are considered false when encountered in a boolean context):\r\n\r\n- `false`\r\n- `null`\r\n- `0`\r\n- `undefined`\r\n\r\nThe official documentation points to [this description](https://docs.mongodb.com/manual/reference/operator/aggregation/and/#and-boolean-behavior):\r\n\r\n> In addition to the `false` boolean value, $and evaluates as false the following: `null`, `0`, and `undefined` values. The $and evaluates all other values as true, including non-zero numeric values and arrays.\r\n\r\nThe Python (and in result also `mongomock`) have much longer list of falsy values. To name a few:\r\n\r\n- `\"\"` (empty string)\r\n- `[]` (empty list)\r\n- `{}` (empty dict)\r\n\r\nAdding of the following test to the `tests/test__mongomock.py` will demonstrate the bug:\r\n\r\n```py\r\n    def test__aggregate_cond__falsy(self):\r\n        self.cmp.compare_ignore_order.aggregate([\r\n            {'$project': {\r\n                'new_value': {'$cond': ['', 2, 3]},  # <-- only important line, notice the empty string\r\n            }},\r\n        ])\r\n```\r\n\r\nRight now this affects (probably only) `$cond` but in future will affect also `$switch`, `$anyElementTrue`, `$allElementsTrue`, `$and`, `$or`, `$not`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/648", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/648/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/648/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/648/events", "html_url": "https://github.com/mongomock/mongomock/issues/648", "id": 669940340, "node_id": "MDU6SXNzdWU2Njk5NDAzNDA=", "number": 648, "title": "mongomock is not compatible with pymongo 3.11.0", "user": {"login": "kosqx", "id": 11116, "node_id": "MDQ6VXNlcjExMTE2", "avatar_url": "https://avatars2.githubusercontent.com/u/11116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kosqx", "html_url": "https://github.com/kosqx", "followers_url": "https://api.github.com/users/kosqx/followers", "following_url": "https://api.github.com/users/kosqx/following{/other_user}", "gists_url": "https://api.github.com/users/kosqx/gists{/gist_id}", "starred_url": "https://api.github.com/users/kosqx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kosqx/subscriptions", "organizations_url": "https://api.github.com/users/kosqx/orgs", "repos_url": "https://api.github.com/users/kosqx/repos", "events_url": "https://api.github.com/users/kosqx/events{/privacy}", "received_events_url": "https://api.github.com/users/kosqx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-31T15:35:27Z", "updated_at": "2020-07-31T16:10:12Z", "closed_at": "2020-07-31T16:10:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The [just released](https://pypi.org/project/pymongo/#history) pymongo 3.11.0 introduced the `hint` parameter to the following methods:\r\n\r\n- `add_update()`\r\n- `add_replace()`\r\n- `add_delete()`\r\n\r\nThis is causing the exceptions similar to:\r\n\r\n```\r\nTypeError: add_update() got an unexpected keyword argument 'hint'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/647", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/647/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/647/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/647/events", "html_url": "https://github.com/mongomock/mongomock/issues/647", "id": 666498555, "node_id": "MDU6SXNzdWU2NjY0OTg1NTU=", "number": 647, "title": "Support for '$regexMatch'", "user": {"login": "gwainer", "id": 2478582, "node_id": "MDQ6VXNlcjI0Nzg1ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2478582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gwainer", "html_url": "https://github.com/gwainer", "followers_url": "https://api.github.com/users/gwainer/followers", "following_url": "https://api.github.com/users/gwainer/following{/other_user}", "gists_url": "https://api.github.com/users/gwainer/gists{/gist_id}", "starred_url": "https://api.github.com/users/gwainer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gwainer/subscriptions", "organizations_url": "https://api.github.com/users/gwainer/orgs", "repos_url": "https://api.github.com/users/gwainer/repos", "events_url": "https://api.github.com/users/gwainer/events{/privacy}", "received_events_url": "https://api.github.com/users/gwainer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352860, "node_id": "MDU6TGFiZWwxMzUyODYw", "url": "https://api.github.com/repos/mongomock/mongomock/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": "Reporting a feature that is missing from mongomock."}], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-07-27T18:31:15Z", "updated_at": "2020-08-20T18:34:24Z", "closed_at": "2020-08-20T18:34:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, Using MongoMock version `3.19.0`, I was testing aggregation using new `$regexMatch` operator from mongoDB version `4.2`. Here are the docs: https://docs.mongodb.com/manual/reference/operator/aggregation/regexMatch/ .\r\n\r\nIt seems it's not supported yet. The following error arises when running the test:\r\n\r\n```\r\n  File \"/Users/gcw/.pyenv/versions/3.7.6/envs/tqtq-api-env/lib/python3.7/site-packages/mongomock/aggregate.py\", line 189, in parse\r\n    raise OperationFailure(\"Unrecognized expression '%s'\" % k)\r\npymongo.errors.OperationFailure: Unrecognized expression '$regexMatch'\r\n```\r\n\r\nThis would be a feature request. Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/639", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/639/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/639/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/639/events", "html_url": "https://github.com/mongomock/mongomock/issues/639", "id": 648060701, "node_id": "MDU6SXNzdWU2NDgwNjA3MDE=", "number": 639, "title": "GridFS: TypeError: database must be an instance of Database", "user": {"login": "anatoly-kor", "id": 30874961, "node_id": "MDQ6VXNlcjMwODc0OTYx", "avatar_url": "https://avatars1.githubusercontent.com/u/30874961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anatoly-kor", "html_url": "https://github.com/anatoly-kor", "followers_url": "https://api.github.com/users/anatoly-kor/followers", "following_url": "https://api.github.com/users/anatoly-kor/following{/other_user}", "gists_url": "https://api.github.com/users/anatoly-kor/gists{/gist_id}", "starred_url": "https://api.github.com/users/anatoly-kor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anatoly-kor/subscriptions", "organizations_url": "https://api.github.com/users/anatoly-kor/orgs", "repos_url": "https://api.github.com/users/anatoly-kor/repos", "events_url": "https://api.github.com/users/anatoly-kor/events{/privacy}", "received_events_url": "https://api.github.com/users/anatoly-kor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-30T10:28:18Z", "updated_at": "2020-08-05T21:49:56Z", "closed_at": "2020-08-05T21:49:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. I found some closed issues (#111, #526, #72). I have the same bug. \r\nMy thoughts: It looks like what bug in differences **pymongo.database.Database** and **mongomock.Database**. That's the reason for `TypeError: database must be an instance of Database` for GridFS.\r\n\r\n```python\r\nimport mongomock\r\nimport pymongo\r\n\r\ndb = pymongo.MongoClient().db_example\r\n\r\nprint(isinstance(db, pymongo.database.Database))  # True\r\nprint(isinstance(db, mongomock.Database))    # False\r\n```\r\n\r\nThe same error with **Collections**. If just comment lines of code with the checking instance in source code of GridFS all tests passed and no errors. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/638", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/638/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/638/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/638/events", "html_url": "https://github.com/mongomock/mongomock/issues/638", "id": 642085790, "node_id": "MDU6SXNzdWU2NDIwODU3OTA=", "number": 638, "title": "PyMongo 2.9.5 + mongoengine incompability - unexpected keyword argument 'snapshot'", "user": {"login": "juannyG", "id": 7672379, "node_id": "MDQ6VXNlcjc2NzIzNzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7672379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juannyG", "html_url": "https://github.com/juannyG", "followers_url": "https://api.github.com/users/juannyG/followers", "following_url": "https://api.github.com/users/juannyG/following{/other_user}", "gists_url": "https://api.github.com/users/juannyG/gists{/gist_id}", "starred_url": "https://api.github.com/users/juannyG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juannyG/subscriptions", "organizations_url": "https://api.github.com/users/juannyG/orgs", "repos_url": "https://api.github.com/users/juannyG/repos", "events_url": "https://api.github.com/users/juannyG/events{/privacy}", "received_events_url": "https://api.github.com/users/juannyG/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-19T16:19:53Z", "updated_at": "2020-08-05T18:46:20Z", "closed_at": "2020-08-05T18:46:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When running most mongomock versions against most `pymongo==2.9.5` + `mongoengine>=0.10.6` version, the following error is thrown:\r\n\r\n```    @property\r\n    def _cursor(self):\r\n        \"\"\"Return a PyMongo cursor object corresponding to this queryset.\"\"\"\r\n    \r\n        # If _cursor_obj already exists, return it immediately.\r\n        if self._cursor_obj is not None:\r\n            return self._cursor_obj\r\n    \r\n        # Create a new PyMongo cursor.\r\n        # XXX In PyMongo 3+, we define the read preference on a collection\r\n        # level, not a cursor level. Thus, we need to get a cloned collection\r\n        # object using `with_options` first.\r\n        if IS_PYMONGO_3 and self._read_preference is not None:\r\n            self._cursor_obj = self._collection\\\r\n                .with_options(read_preference=self._read_preference)\\\r\n                .find(self._query, **self._cursor_args)\r\n        else:\r\n            self._cursor_obj = self._collection.find(self._query,\r\n>                                                    **self._cursor_args)\r\nE           TypeError: find() got an unexpected keyword argument 'snapshot'\r\n\r\n/usr/local/lib/python2.7/site-packages/mongoengine/queryset/base.py:1569: TypeError\r\n```\r\nThis occurs with `mongoengine` versions from 0.10.6 all the way through 0.15.3 - maybe more but I was unable to test further version pairings.\r\n\r\nCause:\r\nWhen [mongonengine is generating the cursor args](https://github.com/MongoEngine/mongoengine/blob/v0.15.3/mongoengine/queryset/base.py#L1518-L1548), it adds the `snapshot` argument, which is [not defined in the mongomock's Collection.find method](https://github.com/mongomock/mongomock/blob/develop/mongomock/collection.py#L976-L980) - thus generating a `TypeError`. \r\n\r\nIt seems mongoengine is trying to juggle the pymongo<3 scenario, but that doesn't fit the expectations in mongomock.\r\n\r\nIs this expected behavior? Is pymongo<3 not supported by this library?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/637", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/637/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/637/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/637/events", "html_url": "https://github.com/mongomock/mongomock/issues/637", "id": 641166735, "node_id": "MDU6SXNzdWU2NDExNjY3MzU=", "number": 637, "title": "count_documents can't handle timezone-aware datetimes with tz_aware=True", "user": {"login": "languitar", "id": 1336287, "node_id": "MDQ6VXNlcjEzMzYyODc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1336287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/languitar", "html_url": "https://github.com/languitar", "followers_url": "https://api.github.com/users/languitar/followers", "following_url": "https://api.github.com/users/languitar/following{/other_user}", "gists_url": "https://api.github.com/users/languitar/gists{/gist_id}", "starred_url": "https://api.github.com/users/languitar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/languitar/subscriptions", "organizations_url": "https://api.github.com/users/languitar/orgs", "repos_url": "https://api.github.com/users/languitar/repos", "events_url": "https://api.github.com/users/languitar/events{/privacy}", "received_events_url": "https://api.github.com/users/languitar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-18T12:27:29Z", "updated_at": "2020-08-04T21:53:08Z", "closed_at": "2020-08-04T21:53:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n>>> import mongomock\r\n>>> from datetime import datetime, timezone\r\n>>> client = mongomock.MongoClient(tz_aware=True)\r\n>>> client.db.coll.count_documents({\"foo\": {\"$gt\": datetime.now(tz=timezone.utc)}})\r\n0\r\n>>> doc = {\"foo\": datetime.now(tz=timezone.utc)}\r\n>>> client.db.coll.insert_one(doc)\r\n<pymongo.results.InsertOneResult object at 0x7f905015c240>\r\n>>> client.db.coll.count_documents({\"foo\": {\"$gt\": datetime.now(tz=timezone.utc)}})\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/languitar/src/preprod-sync/.venv/lib/python3.8/site-packages/mongomock/collection.py\", line 1360, in count_documents\r\n    doc_num = len(list(self._iter_documents(filter)))\r\n  File \"/home/languitar/src/preprod-sync/.venv/lib/python3.8/site-packages/mongomock/collection.py\", line 1193, in <genexpr>\r\n    if filter_applies(filter, document))\r\n  File \"/home/languitar/src/preprod-sync/.venv/lib/python3.8/site-packages/mongomock/filtering.py\", line 46, in filter_applies\r\n    return _Filterer().apply(search_filter, document)\r\n  File \"/home/languitar/src/preprod-sync/.venv/lib/python3.8/site-packages/mongomock/filtering.py\", line 120, in apply\r\n    is_match = all(\r\n  File \"/home/languitar/src/preprod-sync/.venv/lib/python3.8/site-packages/mongomock/filtering.py\", line 122, in <genexpr>\r\n    self._operator_map[operator_string](doc_val, search_val) or\r\n  File \"/home/languitar/src/preprod-sync/.venv/lib/python3.8/site-packages/mongomock/filtering.py\", line 261, in <lambda>\r\n    return lambda v, l: v is not NOTHING and f(v, l)\r\n  File \"/home/languitar/src/preprod-sync/.venv/lib/python3.8/site-packages/mongomock/filtering.py\", line 378, in func\r\n    return f(doc_val, search_val)\r\n  File \"/home/languitar/src/preprod-sync/.venv/lib/python3.8/site-packages/mongomock/filtering.py\", line 272, in _wrapped\r\n    return bson_compare(op, a, b, can_compare_types=False)\r\n  File \"/home/languitar/src/preprod-sync/.venv/lib/python3.8/site-packages/mongomock/filtering.py\", line 317, in bson_compare\r\n    return op(a, b)\r\nTypeError: can't compare offset-naive and offset-aware datetimes\r\n```\r\n\r\nThis happens with version 3.19.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/635", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/635/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/635/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/635/events", "html_url": "https://github.com/mongomock/mongomock/issues/635", "id": 626863483, "node_id": "MDU6SXNzdWU2MjY4NjM0ODM=", "number": 635, "title": "$pull $in for nested documents.", "user": {"login": "kmjonsson", "id": 5999662, "node_id": "MDQ6VXNlcjU5OTk2NjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5999662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmjonsson", "html_url": "https://github.com/kmjonsson", "followers_url": "https://api.github.com/users/kmjonsson/followers", "following_url": "https://api.github.com/users/kmjonsson/following{/other_user}", "gists_url": "https://api.github.com/users/kmjonsson/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmjonsson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmjonsson/subscriptions", "organizations_url": "https://api.github.com/users/kmjonsson/orgs", "repos_url": "https://api.github.com/users/kmjonsson/repos", "events_url": "https://api.github.com/users/kmjonsson/events{/privacy}", "received_events_url": "https://api.github.com/users/kmjonsson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-05-28T22:45:41Z", "updated_at": "2020-08-05T22:16:48Z", "closed_at": "2020-08-05T22:16:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nThis does not work the same way in mongo db (2.6.10) as in mongomock 3.19.\r\n\r\nSee examples below.\r\n```\r\nimport pymongo\r\nimport mongomock\r\n\r\nmdb = mongomock.MongoClient()\r\n#mdb = pymongo.MongoClient('mongodb://localhost:27017/mdb')\r\nmdb.db.x.drop()\r\n\r\ntest_item = dict(_id=\"1\", a={\"b\": [\"c\"]},)\r\nprint(test_item)\r\n\r\nmdb.db.x.insert_one(test_item)\r\ni = mdb.db.x.find_one_and_update(\r\n        {\"_id\": \"1\"},\r\n        {\"$pull\": {\"a.b\": {\"$in\": ['c']}}},\r\n        return_document=pymongo.ReturnDocument.AFTER,\r\n    )\r\n\r\nprint(i)\r\n\r\ntest_item2 = dict(_id=\"2\", a=[\"c\"],)\r\nprint(test_item2)\r\nmdb.db.x.insert_one(test_item2)\r\ni = mdb.db.x.find_one_and_update(\r\n        {\"_id\": \"2\"},\r\n        {\"$pull\": {\"a\": {\"$in\": ['c']}}},\r\n        return_document=pymongo.ReturnDocument.AFTER,\r\n    )\r\n\r\nprint(i)\r\n```\r\n\r\nUsing mongomock\r\n```\r\n{'_id': '1', 'a': {'b': ['c']}}\r\n{'_id': '1', 'a': {'b': ['c']}}\r\n{'_id': '2', 'a': ['c']}\r\n{'_id': '2', 'a': []}\r\n```\r\n\r\nWith MongoDB\r\n```\r\n{'_id': '1', 'a': {'b': ['c']}}\r\n{'_id': '1', 'a': {'b': []}}\r\n{'_id': '2', 'a': ['c']}\r\n{'_id': '2', 'a': []}\r\n```\r\n\r\nThis is a scaled down example from a code I'm trying to add test coverage on. I have lot's of simular calls that I like to test.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/632", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/632/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/632/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/632/events", "html_url": "https://github.com/mongomock/mongomock/issues/632", "id": 624607532, "node_id": "MDU6SXNzdWU2MjQ2MDc1MzI=", "number": 632, "title": "[Question] Clarify the limitation of mongomock.patch", "user": {"login": "dayfine", "id": 26423504, "node_id": "MDQ6VXNlcjI2NDIzNTA0", "avatar_url": "https://avatars0.githubusercontent.com/u/26423504?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dayfine", "html_url": "https://github.com/dayfine", "followers_url": "https://api.github.com/users/dayfine/followers", "following_url": "https://api.github.com/users/dayfine/following{/other_user}", "gists_url": "https://api.github.com/users/dayfine/gists{/gist_id}", "starred_url": "https://api.github.com/users/dayfine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dayfine/subscriptions", "organizations_url": "https://api.github.com/users/dayfine/orgs", "repos_url": "https://api.github.com/users/dayfine/repos", "events_url": "https://api.github.com/users/dayfine/events{/privacy}", "received_events_url": "https://api.github.com/users/dayfine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-26T05:19:11Z", "updated_at": "2020-07-11T05:41:30Z", "closed_at": "2020-07-11T05:41:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi I was trying to use `@mongomock.patch` but couldn't get it to work. The situation is that I am using the [mongodbio](https://github.com/apache/beam/blob/master/sdks/python/apache_beam/io/mongodbio.py) connector for Beam. It is this function that internally creates a mongodb connection. I can specify the uri it should use and patch that uri, but internally it cannot connect to that address, e.g. `pymongo.errors.ServerSelectionTimeoutError: fakehost.com:27017: timed out`. If I use `localhost`, then data will actually be written to the local database.\r\n\r\nThis made me think `@mongomock.patch` isn't working here, and I wonder if the reason is because the code creating the client (e.g. beam code calling pymongo.MongoClient) is not within the scope of my test and module, and there is no way to inject it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/631", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/631/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/631/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/631/events", "html_url": "https://github.com/mongomock/mongomock/issues/631", "id": 624423311, "node_id": "MDU6SXNzdWU2MjQ0MjMzMTE=", "number": 631, "title": "Add '$switch' in the aggregate pipeline", "user": {"login": "haripriyan", "id": 5412113, "node_id": "MDQ6VXNlcjU0MTIxMTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/5412113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haripriyan", "html_url": "https://github.com/haripriyan", "followers_url": "https://api.github.com/users/haripriyan/followers", "following_url": "https://api.github.com/users/haripriyan/following{/other_user}", "gists_url": "https://api.github.com/users/haripriyan/gists{/gist_id}", "starred_url": "https://api.github.com/users/haripriyan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haripriyan/subscriptions", "organizations_url": "https://api.github.com/users/haripriyan/orgs", "repos_url": "https://api.github.com/users/haripriyan/repos", "events_url": "https://api.github.com/users/haripriyan/events{/privacy}", "received_events_url": "https://api.github.com/users/haripriyan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352860, "node_id": "MDU6TGFiZWwxMzUyODYw", "url": "https://api.github.com/repos/mongomock/mongomock/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": "Reporting a feature that is missing from mongomock."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-25T17:55:52Z", "updated_at": "2020-08-01T07:03:06Z", "closed_at": "2020-08-01T07:03:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "When executing aggregate functions via MongoEngine making use of the aggregation pipeline operation of `$switch`, mongomock raise an `pymongo.errors.OperationFailure: Unrecognized expression '$switch'` exception.\r\n\r\nExample\r\n```\r\npipeline = [{'$group': {'_id': {'$switch': {'branches': [\r\n            {'case': {'$gte': ['$COLUMN_VALUE', 50]}, 'then': 'HIGH'},\r\n            {'case': {'$gte': ['$COLUMN_VALUE, 30]}, 'then': 'MEDIUM'}\r\n        ],\r\n            'default': 'LOW'\r\n        }},\r\n      \"totalSum\": {'$sum': \"$AMOUNT\"}}}]\r\n\r\nMongoObjectModel.objects.all().aggregate(pipeline)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/630", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/630/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/630/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/630/events", "html_url": "https://github.com/mongomock/mongomock/issues/630", "id": 623475030, "node_id": "MDU6SXNzdWU2MjM0NzUwMzA=", "number": 630, "title": "$elemMatch with $gte raises unknown toplevel operator $gte", "user": {"login": "cchayden", "id": 84126, "node_id": "MDQ6VXNlcjg0MTI2", "avatar_url": "https://avatars3.githubusercontent.com/u/84126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cchayden", "html_url": "https://github.com/cchayden", "followers_url": "https://api.github.com/users/cchayden/followers", "following_url": "https://api.github.com/users/cchayden/following{/other_user}", "gists_url": "https://api.github.com/users/cchayden/gists{/gist_id}", "starred_url": "https://api.github.com/users/cchayden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cchayden/subscriptions", "organizations_url": "https://api.github.com/users/cchayden/orgs", "repos_url": "https://api.github.com/users/cchayden/repos", "events_url": "https://api.github.com/users/cchayden/events{/privacy}", "received_events_url": "https://api.github.com/users/cchayden/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-22T21:06:17Z", "updated_at": "2020-08-07T06:08:03Z", "closed_at": "2020-08-07T06:08:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "When filtering documents based on elements being part of a list, a pymongo exception (Unknown toplevel operator $gte) is raised\r\n\r\n### Expected\r\nThis query works as expected with an actual database connection.\r\nThis example comes directly from the [mongo documentation](https://docs.mongodb.com/manual/reference/operator/query/elemMatch/):\r\n\r\n```\r\ndb.scores.find(\r\n            {'results': { '$elemMatch': { '$gte': 80, '$lt': 85}}})\r\n        )\r\n```\r\n\r\n### Actual\r\nWith mongomock, it gives:\r\n\r\n```\r\n  File \"/home/cchayden/workspaces/skylight-vessel-service/consumers/vessel/test/test_elem_match.py\", line 11, in load_and_query\r\n    {'results': { '$elemMatch': { '$gte': 80, '$lt': 85}}})\r\n  File \"/home/cchayden/.virtualenvs/mda36/lib/python3.6/site-packages/mongomock/collection.py\", line 1769, in __next__\r\n    doc = self._compute_results(with_limit_and_skip=True)[self._emitted]\r\n  File \"/home/cchayden/.virtualenvs/mda36/lib/python3.6/site-packages/mongomock/collection.py\", line 1747, in _compute_results\r\n    results = list(self._factory())\r\n  File \"/home/cchayden/.virtualenvs/mda36/lib/python3.6/site-packages/mongomock/collection.py\", line 991, in _get_dataset\r\n    for document in dataset:\r\n  File \"/home/cchayden/.virtualenvs/mda36/lib/python3.6/site-packages/mongomock/collection.py\", line 1193, in <genexpr>\r\n    if filter_applies(filter, document))\r\n  File \"/home/cchayden/.virtualenvs/mda36/lib/python3.6/site-packages/mongomock/filtering.py\", line 46, in filter_applies\r\n    return _Filterer().apply(search_filter, document)\r\n  File \"/home/cchayden/.virtualenvs/mda36/lib/python3.6/site-packages/mongomock/filtering.py\", line 125, in apply\r\n    for operator_string, search_val in iteritems(search)\r\n  File \"/home/cchayden/.virtualenvs/mda36/lib/python3.6/site-packages/mongomock/filtering.py\", line 125, in <genexpr>\r\n    for operator_string, search_val in iteritems(search)\r\n  File \"/home/cchayden/.virtualenvs/mda36/lib/python3.6/site-packages/mongomock/filtering.py\", line 169, in _elem_match_op\r\n    return any(self.apply(query, item) for item in doc_val)\r\n  File \"/home/cchayden/.virtualenvs/mda36/lib/python3.6/site-packages/mongomock/filtering.py\", line 169, in <genexpr>\r\n    return any(self.apply(query, item) for item in doc_val)\r\n  File \"/home/cchayden/.virtualenvs/mda36/lib/python3.6/site-packages/mongomock/filtering.py\", line 87, in apply\r\n    raise OperationFailure('unknown top level operator: ' + key)\r\npymongo.errors.OperationFailure: unknown top level operator: $gte\r\n\r\n```\r\n\r\nThis seems to be similar to https://github.com/mongomock/mongomock/issues/611#issue-589882215\r\n\r\n\r\n### Unit Test\r\n```\r\nfrom unittest import TestCase\r\nimport mongomock\r\nfrom pymongo import MongoClient\r\n\r\n\r\nclass TestElemMatch(TestCase):\r\n    def load_and_query(self, db):\r\n        db.scores.insert_one({'results': [ 82, 85, 88 ] })\r\n        db.scores.insert_one({'results': [ 75, 88, 89 ]})\r\n        return list(db.scores.find(\r\n            {'results': { '$elemMatch': { '$gte': 80, '$lt': 85}}})\r\n        )\r\n\r\n    def test_mongo(self):\r\n        db = MongoClient().db\r\n        db.drop_collection('scores')\r\n        result = self.load_and_query(db)\r\n        self.assertEqual(1, len(result))\r\n        self.assertEqual([ 82, 85, 88], result[0]['results'])\r\n\r\n    def test_mock(self):\r\n        db = mongomock.MongoClient().db\r\n        result = self.load_and_query(db)\r\n        self.assertEqual(1, len(result))\r\n        self.assertEqual([ 82, 85, 88], result[0]['results'])\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/629", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/629/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/629/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/629/events", "html_url": "https://github.com/mongomock/mongomock/issues/629", "id": 623474813, "node_id": "MDU6SXNzdWU2MjM0NzQ4MTM=", "number": 629, "title": "$elemMatch with $lt raises unknown toplevel operator $lt", "user": {"login": "cchayden", "id": 84126, "node_id": "MDQ6VXNlcjg0MTI2", "avatar_url": "https://avatars3.githubusercontent.com/u/84126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cchayden", "html_url": "https://github.com/cchayden", "followers_url": "https://api.github.com/users/cchayden/followers", "following_url": "https://api.github.com/users/cchayden/following{/other_user}", "gists_url": "https://api.github.com/users/cchayden/gists{/gist_id}", "starred_url": "https://api.github.com/users/cchayden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cchayden/subscriptions", "organizations_url": "https://api.github.com/users/cchayden/orgs", "repos_url": "https://api.github.com/users/cchayden/repos", "events_url": "https://api.github.com/users/cchayden/events{/privacy}", "received_events_url": "https://api.github.com/users/cchayden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-22T21:05:43Z", "updated_at": "2020-05-22T21:07:02Z", "closed_at": "2020-05-22T21:07:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Expected\r\nThis query works as expected with an actual database connection.\r\nThis example comes directly from the [mongo documentation](https://docs.mongodb.com/manual/reference/operator/query/elemMatch/):\r\n\r\n```\r\ndb.scores.find(\r\n            {'results': { '$elemMatch': { '$gte': 80, '$lt': 85}}})\r\n        )\r\n```\r\n\r\n### Actual\r\nWith mongomock, it gives:\r\n\r\n```\r\n  File \"/home/cchayden/workspaces/skylight-vessel-service/consumers/vessel/test/test_elem_match.py\", line 11, in load_and_query\r\n    {'results': { '$elemMatch': { '$gte': 80, '$lt': 85}}})\r\n  File \"/home/cchayden/.virtualenvs/mda36/lib/python3.6/site-packages/mongomock/collection.py\", line 1769, in __next__\r\n    doc = self._compute_results(with_limit_and_skip=True)[self._emitted]\r\n  File \"/home/cchayden/.virtualenvs/mda36/lib/python3.6/site-packages/mongomock/collection.py\", line 1747, in _compute_results\r\n    results = list(self._factory())\r\n  File \"/home/cchayden/.virtualenvs/mda36/lib/python3.6/site-packages/mongomock/collection.py\", line 991, in _get_dataset\r\n    for document in dataset:\r\n  File \"/home/cchayden/.virtualenvs/mda36/lib/python3.6/site-packages/mongomock/collection.py\", line 1193, in <genexpr>\r\n    if filter_applies(filter, document))\r\n  File \"/home/cchayden/.virtualenvs/mda36/lib/python3.6/site-packages/mongomock/filtering.py\", line 46, in filter_applies\r\n    return _Filterer().apply(search_filter, document)\r\n  File \"/home/cchayden/.virtualenvs/mda36/lib/python3.6/site-packages/mongomock/filtering.py\", line 125, in apply\r\n    for operator_string, search_val in iteritems(search)\r\n  File \"/home/cchayden/.virtualenvs/mda36/lib/python3.6/site-packages/mongomock/filtering.py\", line 125, in <genexpr>\r\n    for operator_string, search_val in iteritems(search)\r\n  File \"/home/cchayden/.virtualenvs/mda36/lib/python3.6/site-packages/mongomock/filtering.py\", line 169, in _elem_match_op\r\n    return any(self.apply(query, item) for item in doc_val)\r\n  File \"/home/cchayden/.virtualenvs/mda36/lib/python3.6/site-packages/mongomock/filtering.py\", line 169, in <genexpr>\r\n    return any(self.apply(query, item) for item in doc_val)\r\n  File \"/home/cchayden/.virtualenvs/mda36/lib/python3.6/site-packages/mongomock/filtering.py\", line 87, in apply\r\n    raise OperationFailure('unknown top level operator: ' + key)\r\npymongo.errors.OperationFailure: unknown top level operator: $gte\r\n\r\n```\r\n\r\nThis seems to be similar to https://github.com/mongomock/mongomock/issues/611#issue-589882215\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/627", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/627/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/627/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/627/events", "html_url": "https://github.com/mongomock/mongomock/issues/627", "id": 619847478, "node_id": "MDU6SXNzdWU2MTk4NDc0Nzg=", "number": 627, "title": "'$geoWithin' is a valid operation but it is not supported by Mongomock yet", "user": {"login": "PragmaticCoder", "id": 57084882, "node_id": "MDQ6VXNlcjU3MDg0ODgy", "avatar_url": "https://avatars3.githubusercontent.com/u/57084882?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PragmaticCoder", "html_url": "https://github.com/PragmaticCoder", "followers_url": "https://api.github.com/users/PragmaticCoder/followers", "following_url": "https://api.github.com/users/PragmaticCoder/following{/other_user}", "gists_url": "https://api.github.com/users/PragmaticCoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/PragmaticCoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PragmaticCoder/subscriptions", "organizations_url": "https://api.github.com/users/PragmaticCoder/orgs", "repos_url": "https://api.github.com/users/PragmaticCoder/repos", "events_url": "https://api.github.com/users/PragmaticCoder/events{/privacy}", "received_events_url": "https://api.github.com/users/PragmaticCoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-18T01:29:12Z", "updated_at": "2020-05-23T21:37:58Z", "closed_at": "2020-05-23T21:37:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "ERROR - application.main | Server Error: code=500, message='$geoWithin' is a valid operation but it is not supported by Mongomock yet.\r\n\r\nThis seems to be happening when I try doing something like:\r\n`SomeLocationModel.objects(coordinates__geo_within_center=[(latitude, longitude), radius])`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/626", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/626/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/626/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/626/events", "html_url": "https://github.com/mongomock/mongomock/issues/626", "id": 616853691, "node_id": "MDU6SXNzdWU2MTY4NTM2OTE=", "number": 626, "title": "command `getParameter` not implemented", "user": {"login": "yhager", "id": 65973, "node_id": "MDQ6VXNlcjY1OTcz", "avatar_url": "https://avatars3.githubusercontent.com/u/65973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yhager", "html_url": "https://github.com/yhager", "followers_url": "https://api.github.com/users/yhager/followers", "following_url": "https://api.github.com/users/yhager/following{/other_user}", "gists_url": "https://api.github.com/users/yhager/gists{/gist_id}", "starred_url": "https://api.github.com/users/yhager/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yhager/subscriptions", "organizations_url": "https://api.github.com/users/yhager/orgs", "repos_url": "https://api.github.com/users/yhager/repos", "events_url": "https://api.github.com/users/yhager/events{/privacy}", "received_events_url": "https://api.github.com/users/yhager/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-12T18:05:37Z", "updated_at": "2020-05-12T18:16:04Z", "closed_at": "2020-05-12T18:16:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "My code has the following call:\r\n```\r\n        cmd = SON([('getParameter', 1), ('rs_id', 1)])\r\n        response = client[\"admin\"].command(cmd)\r\n```\r\nwhich fails with `mongomock` with\r\n```\r\nE   NotImplementedError: command is a valid Database method but is not implemented in Mongomock yet\r\n```\r\n\r\nThis blocks me from using mongomock at the moment. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/625", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/625/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/625/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/625/events", "html_url": "https://github.com/mongomock/mongomock/issues/625", "id": 615781189, "node_id": "MDU6SXNzdWU2MTU3ODExODk=", "number": 625, "title": "mongoengine compatibility with new version 0.20.0", "user": {"login": "realHorst", "id": 9116468, "node_id": "MDQ6VXNlcjkxMTY0Njg=", "avatar_url": "https://avatars3.githubusercontent.com/u/9116468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/realHorst", "html_url": "https://github.com/realHorst", "followers_url": "https://api.github.com/users/realHorst/followers", "following_url": "https://api.github.com/users/realHorst/following{/other_user}", "gists_url": "https://api.github.com/users/realHorst/gists{/gist_id}", "starred_url": "https://api.github.com/users/realHorst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/realHorst/subscriptions", "organizations_url": "https://api.github.com/users/realHorst/orgs", "repos_url": "https://api.github.com/users/realHorst/repos", "events_url": "https://api.github.com/users/realHorst/events{/privacy}", "received_events_url": "https://api.github.com/users/realHorst/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-11T10:38:44Z", "updated_at": "2020-05-23T21:27:40Z", "closed_at": "2020-05-23T21:27:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Similar to issue #406 the new version of mongoengine stopped working with mongomock. Likely cause is the missing implementation of the function set_read_write_concern.\r\n\r\nSample code producing the TypeError:\r\n```python\r\nfrom mongoengine import connect, Document, fields\r\n\r\nconnect('mongoenginetest', host='mongomock://localhost')\r\n\r\nclass User(Document):\r\n    _id = fields.IntField(primary_key=True)\r\n    name = fields.StringField()\r\n\r\n\r\ndef print_all(collection):\r\n    for obj in collection:\r\n        print(obj.name)\r\n\r\n\r\nuser = User(_id=1, name=\"Max\")\r\nUser.objects.insert(user)\r\nprint_all(User.objects)\r\n\r\nUser.objects(_id=1).update_one(name=\"Moritz\")\r\nprint_all(User.objects)\r\n```\r\n\r\nWith the output:\r\n```\r\nMax\r\nTraceback (most recent call last):\r\n[...]\r\nFile \"venv/lib/python3.8/site-packages/mongoengine/context_managers.py\", line 270, in set_read_write_concern\r\n    combined_read_concerns = dict(collection.read_concern.document.items())\r\nTypeError: 'Collection' object is not callable\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/620", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/620/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/620/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/620/events", "html_url": "https://github.com/mongomock/mongomock/issues/620", "id": 599763716, "node_id": "MDU6SXNzdWU1OTk3NjM3MTY=", "number": 620, "title": "Readme.rst file has an invalid link", "user": {"login": "k-pratyush", "id": 32244337, "node_id": "MDQ6VXNlcjMyMjQ0MzM3", "avatar_url": "https://avatars1.githubusercontent.com/u/32244337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/k-pratyush", "html_url": "https://github.com/k-pratyush", "followers_url": "https://api.github.com/users/k-pratyush/followers", "following_url": "https://api.github.com/users/k-pratyush/following{/other_user}", "gists_url": "https://api.github.com/users/k-pratyush/gists{/gist_id}", "starred_url": "https://api.github.com/users/k-pratyush/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/k-pratyush/subscriptions", "organizations_url": "https://api.github.com/users/k-pratyush/orgs", "repos_url": "https://api.github.com/users/k-pratyush/repos", "events_url": "https://api.github.com/users/k-pratyush/events{/privacy}", "received_events_url": "https://api.github.com/users/k-pratyush/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-14T18:12:07Z", "updated_at": "2020-04-14T18:33:27Z", "closed_at": "2020-04-14T18:33:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the contributing section in readme file, reference link for example in tests throws a 404 error.\r\nInvalid link: https://github.com/mongomock/mongomock/blob/master/tests/test__mongomock.py#L108\r\n\r\nI suppose it should be this:\r\nhttps://github.com/mongomock/mongomock/blob/develop/tests/test__mongomock.py", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/614", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/614/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/614/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/614/events", "html_url": "https://github.com/mongomock/mongomock/issues/614", "id": 592981378, "node_id": "MDU6SXNzdWU1OTI5ODEzNzg=", "number": 614, "title": "Please support start_session", "user": {"login": "mildewey", "id": 1483496, "node_id": "MDQ6VXNlcjE0ODM0OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1483496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mildewey", "html_url": "https://github.com/mildewey", "followers_url": "https://api.github.com/users/mildewey/followers", "following_url": "https://api.github.com/users/mildewey/following{/other_user}", "gists_url": "https://api.github.com/users/mildewey/gists{/gist_id}", "starred_url": "https://api.github.com/users/mildewey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mildewey/subscriptions", "organizations_url": "https://api.github.com/users/mildewey/orgs", "repos_url": "https://api.github.com/users/mildewey/repos", "events_url": "https://api.github.com/users/mildewey/events{/privacy}", "received_events_url": "https://api.github.com/users/mildewey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352860, "node_id": "MDU6TGFiZWwxMzUyODYw", "url": "https://api.github.com/repos/mongomock/mongomock/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": "Reporting a feature that is missing from mongomock."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-02T23:36:17Z", "updated_at": "2020-08-07T06:10:56Z", "closed_at": "2020-08-07T06:10:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nconn = mongomock.MongoClient(\"mongodb://bogus/ngs_dev_pipey?ssl=false\")\r\n\r\nwith conn.start_session():\r\n    pass\r\n```\r\n\r\nThis will error because `TypeError: 'Database' object is not callable`. I believe this is because start_session is not defined and so that is interpreted as trying to fetch the Database called \"start_session\", which obviously is not callable.\r\n\r\nRelated to #435 as they both deal with sessions.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/613", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/613/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/613/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/613/events", "html_url": "https://github.com/mongomock/mongomock/issues/613", "id": 592876610, "node_id": "MDU6SXNzdWU1OTI4NzY2MTA=", "number": 613, "title": "Doesnt patch the alias import of pymongo.MongoClient", "user": {"login": "coolkp", "id": 22536797, "node_id": "MDQ6VXNlcjIyNTM2Nzk3", "avatar_url": "https://avatars2.githubusercontent.com/u/22536797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coolkp", "html_url": "https://github.com/coolkp", "followers_url": "https://api.github.com/users/coolkp/followers", "following_url": "https://api.github.com/users/coolkp/following{/other_user}", "gists_url": "https://api.github.com/users/coolkp/gists{/gist_id}", "starred_url": "https://api.github.com/users/coolkp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coolkp/subscriptions", "organizations_url": "https://api.github.com/users/coolkp/orgs", "repos_url": "https://api.github.com/users/coolkp/repos", "events_url": "https://api.github.com/users/coolkp/events{/privacy}", "received_events_url": "https://api.github.com/users/coolkp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352863, "node_id": "MDU6TGFiZWwxMzUyODYz", "url": "https://api.github.com/repos/mongomock/mongomock/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-02T19:33:59Z", "updated_at": "2020-05-23T21:40:02Z", "closed_at": "2020-05-23T21:40:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "When i import \r\nfrom pymongo import MongoClient as client \r\nthe decorator patching @mongomock.patch(servers=(('127.0.0.1', 27017),)) does not work. \r\nfor client('127.0.0.1'). \r\nOnly pymongo.MongoClient('127.0.0.1') works", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/611", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/611/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/611/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/611/events", "html_url": "https://github.com/mongomock/mongomock/issues/611", "id": 589882215, "node_id": "MDU6SXNzdWU1ODk4ODIyMTU=", "number": 611, "title": "$elemMatch with $in raises unknown toplevel operator $in", "user": {"login": "MeKot", "id": 25671654, "node_id": "MDQ6VXNlcjI1NjcxNjU0", "avatar_url": "https://avatars0.githubusercontent.com/u/25671654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MeKot", "html_url": "https://github.com/MeKot", "followers_url": "https://api.github.com/users/MeKot/followers", "following_url": "https://api.github.com/users/MeKot/following{/other_user}", "gists_url": "https://api.github.com/users/MeKot/gists{/gist_id}", "starred_url": "https://api.github.com/users/MeKot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MeKot/subscriptions", "organizations_url": "https://api.github.com/users/MeKot/orgs", "repos_url": "https://api.github.com/users/MeKot/repos", "events_url": "https://api.github.com/users/MeKot/events{/privacy}", "received_events_url": "https://api.github.com/users/MeKot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-29T20:48:23Z", "updated_at": "2020-08-07T06:09:11Z", "closed_at": "2020-08-07T06:09:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "When filtering documents based on elements being part of a list, a pymongo exception (`Unknown toplevel operator $in`) is raised   \r\n## Expected\r\nThis query works as expected with an actual database connection:\r\n```python\r\ncollection.find({\r\n           \"key1\": {\r\n                \"$elemMatch\": {\r\n                    \"$in\": [\"a1\", \"a2\", \"a3\"]\r\n                }\r\n            }\r\n      })\r\n```\r\nThe result is all documents with nested array `key1` having at least one of `['a1', 'a2', 'a3']`.\r\n\r\n## Actual\r\nWhen run against `mongomock` it produces this error:\r\n```python\r\nself = <mongomock.filtering._Filterer object...>\r\nsearch_filter = {'$in': ['a1', 'a2']}, document = 'a1'\r\n\r\n    def apply(self, search_filter, document):\r\n        if not isinstance(search_filter, dict):\r\n            raise OperationFailure('the match filter must be an expression in an object')\r\n    \r\n        for key, search in iteritems(search_filter):\r\n            # Top level operators.\r\n            if key == '$comment':\r\n                continue\r\n            if key in LOGICAL_OPERATOR_MAP:\r\n                if not search:\r\n                    raise OperationFailure('BadValue $and/$or/$nor must be a nonempty array')\r\n                if not LOGICAL_OPERATOR_MAP[key](document, search, self.apply):\r\n                    return False\r\n                continue\r\n            if key in _TOP_LEVEL_OPERATORS:\r\n                raise NotImplementedError(\r\n                    'The {} operator is not implemented in mongomock yet'.format(key))\r\n            if key.startswith('$'):\r\n>               raise OperationFailure('unknown top level operator: ' + key)\r\nE               pymongo.errors.OperationFailure: unknown top level operator: $in\r\n```\r\n\r\nIt seems to decompose the query in `Filterer().apply(...)` recursively and at some point ends up with applying the `$elemMatch` part of the query. While applying, it matches the element  against `$in` and since `$in` is not implemented as a special case, it raises this error.\r\n\r\n`apply()` with the toplevel `$in` seems to be called from the `_elem_match_op` here:\r\n\r\n```python\r\nself = <mongomock.filtering._Filterer object...>\r\ndoc_val = ['a1'], query = {'$in': ['a1', 'a2']}\r\n\r\n    def _elem_match_op(self, doc_val, query):\r\n        if not isinstance(doc_val, list):\r\n            return False\r\n        if not isinstance(query, dict):\r\n            raise OperationFailure('$elemMatch needs an Object')\r\n>       return any(self.apply(query, item) for item in doc_val)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/609", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/609/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/609/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/609/events", "html_url": "https://github.com/mongomock/mongomock/issues/609", "id": 588374547, "node_id": "MDU6SXNzdWU1ODgzNzQ1NDc=", "number": 609, "title": "[BUG] Cannot compare UUID fields", "user": {"login": "voegtlel", "id": 5764745, "node_id": "MDQ6VXNlcjU3NjQ3NDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/5764745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/voegtlel", "html_url": "https://github.com/voegtlel", "followers_url": "https://api.github.com/users/voegtlel/followers", "following_url": "https://api.github.com/users/voegtlel/following{/other_user}", "gists_url": "https://api.github.com/users/voegtlel/gists{/gist_id}", "starred_url": "https://api.github.com/users/voegtlel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/voegtlel/subscriptions", "organizations_url": "https://api.github.com/users/voegtlel/orgs", "repos_url": "https://api.github.com/users/voegtlel/repos", "events_url": "https://api.github.com/users/voegtlel/events{/privacy}", "received_events_url": "https://api.github.com/users/voegtlel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-26T12:12:25Z", "updated_at": "2020-04-05T15:10:44Z", "closed_at": "2020-04-05T15:10:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Error description\r\nI'm getting\r\n```\r\nNotImplementedError: Mongomock does not know how to sort 'c4be03d6-6e0f-42ef-a043-d35b269692ec' of type '<class 'uuid.UUID'>'\r\n```\r\nwhen trying to run (minimal example):\r\n```Python\r\nfrom mongomock import MongoClient\r\nfrom uuid import UUID\r\n\r\ncoll1 = MongoClient()['db'].coll1\r\ncoll1.insert_one({'_id': UUID(int=1)})\r\ncoll1.find({}, sort=[('_id', 1)])\r\n```\r\n\r\n### Probable solution\r\nProbably, that's caused by https://github.com/mongomock/mongomock/blob/50ad34e438d2d12e4ccb2926fba1a76d508fd052/mongomock/filtering.py#L322-L352\r\nmissing `UUID` as a type. My guess from here: https://github.com/mongodb/mongo/blob/f10f21467c2c0ae7586c5c9d327f2328f09d655c/src/mongo/bson/bsontypes.h#L175 is that it could suffice to replace:\r\n```Python\r\nif isinstance(val, (bytes, UUID)):\r\n    return 30\r\n```\r\n?\r\n\r\n### Why?\r\nTo illustrate, why this makes sense: When using `timestamp` (with higher precision that `ObjectID`) to make sure, objects with the same timestamp are deterministically ordered:\r\n```Python\r\nfrom mongomock import MongoClient\r\nfrom uuid import UUID\r\n\r\ncoll1 = MongoClient()['db'].coll1\r\ncoll1.insert_many([\r\n  {'_id': UUID(int=3), 'timestamp': 99},\r\n  {'_id': UUID(int=1), 'timestamp': 100},\r\n  {'_id': UUID(int=2), 'timestamp': 100},\r\n])\r\ncoll1.find({}, sort=[('timestamp', 1), ('_id', 1)])\r\n```\r\n\r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/604", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/604/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/604/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/604/events", "html_url": "https://github.com/mongomock/mongomock/issues/604", "id": 578899242, "node_id": "MDU6SXNzdWU1Nzg4OTkyNDI=", "number": 604, "title": "Test failure in 3.19.0", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-03-10T22:31:10Z", "updated_at": "2020-08-04T06:06:36Z", "closed_at": "2020-08-04T06:06:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got the following test failure since the upgrade to 3.19.0:\r\n\r\n```\r\n======================================================================\r\nFAIL: test__insert_do_not_modify_input (tests.test__collection_api.CollectionAPITest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/build/python-mongomock/src/mongomock-3.19.0/tests/test__collection_api.py\", line 4743, in test__insert_do_not_modify_input\r\n    self.assertEqual(\r\nAssertionError: 946722630012 != 946719030012.0\r\n\r\n----------------------------------------------------------------------\r\nRan 679 tests in 0.395s\r\n```\r\n\r\nInterestingly the value differs on different machine so it could be a timezone issue? The one above is a UTC+1 machine, and the one below is on a UTC+8 one:\r\n\r\n```\r\n======================================================================\r\nFAIL: test__insert_do_not_modify_input (tests.test__collection_api.CollectionAPITest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/build/python-mongomock/src/mongomock-3.19.0/tests/test__collection_api.py\", line 4743, in test__insert_do_not_modify_input\r\n    self.assertEqual(\r\nAssertionError: 946722630012 != 946693830012.0\r\n\r\n----------------------------------------------------------------------\r\nRan 679 tests in 0.346s\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/594", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/594/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/594/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/594/events", "html_url": "https://github.com/mongomock/mongomock/issues/594", "id": 565758934, "node_id": "MDU6SXNzdWU1NjU3NTg5MzQ=", "number": 594, "title": "$size combined with $all gives incorrect results", "user": {"login": "ml-evs", "id": 7916000, "node_id": "MDQ6VXNlcjc5MTYwMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/7916000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ml-evs", "html_url": "https://github.com/ml-evs", "followers_url": "https://api.github.com/users/ml-evs/followers", "following_url": "https://api.github.com/users/ml-evs/following{/other_user}", "gists_url": "https://api.github.com/users/ml-evs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ml-evs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ml-evs/subscriptions", "organizations_url": "https://api.github.com/users/ml-evs/orgs", "repos_url": "https://api.github.com/users/ml-evs/repos", "events_url": "https://api.github.com/users/ml-evs/events{/privacy}", "received_events_url": "https://api.github.com/users/ml-evs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-15T14:57:54Z", "updated_at": "2020-03-02T12:11:57Z", "closed_at": "2020-03-02T12:11:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Here's a MWE where I've found some disagreement between mongomock (3.19) and pymongo (3.10.1) when using the `$all` and `$size` together on an array.\r\n\r\n```python\r\nimport mongomock\r\nimport pymongo\r\n\r\ndocs = [\r\n    {\"values\": [\"Abcd\"]},\r\n    {\"values\": [\"Abcd\", \"Bcdef\"]},\r\n    {\"values\": [\"Abcd\", \"Bcdef\", \"Cdefg\"]},\r\n]\r\n\r\nmm_db = mongomock.MongoClient().db.coll\r\nmm_db.drop()\r\nmm_db.insert_many(docs)\r\npm_db = pymongo.MongoClient().db.coll\r\npm_db.drop()\r\npm_db.insert_many(docs)\r\n\r\n# works fine\r\nquery = {\"values\": {\"$all\": [\"Abcd\"]}}\r\npm_curs = list(pm_db.find(query))\r\nmm_curs = list(mm_db.find(query))\r\nassert (\r\n    len(pm_curs) == len(mm_curs) == 3\r\n), f\"mm returned {len(mm_curs)} results vs pm {len(pm_curs)}\"\r\n\r\n# works fine\r\nquery = {\"values\": {\"$size\": 1}}\r\npm_curs = list(pm_db.find(query))\r\nmm_curs = list(mm_db.find(query))\r\nassert (\r\n    len(pm_curs) == len(mm_curs) == 1\r\n), f\"mm returned {len(mm_curs)} results vs pm {len(pm_curs)}\"\r\n\r\n# fails, mm returns all 3 documents\r\nquery = {\"values\": {\"$size\": 1, \"$all\": [\"Abcd\"]}}\r\npm_curs = list(pm_db.find(query))\r\nmm_curs = list(mm_db.find(query))\r\nassert (\r\n    len(pm_curs) == len(mm_curs) == 1\r\n), f\"mm returned {len(mm_curs)} results vs pm {len(pm_curs)}\"\r\n\r\n# works\r\nquery = {\"values\": {\"$all\": [\"Abcd\", \"Bcdef\"]}}\r\npm_curs = list(pm_db.find(query))\r\nmm_curs = list(mm_db.find(query))\r\nassert (\r\n    len(pm_curs) == len(mm_curs) == 2\r\n), f\"mm returned {len(mm_curs)} results vs pm {len(pm_curs)}\"\r\n\r\n\r\n# fails, mm returns all 3 again\r\nquery = {\"values\": {\"$size\": 2, \"$all\": [\"Abcd\", \"Bcdef\"]}}\r\npm_curs = list(pm_db.find(query))\r\nmm_curs = list(mm_db.find(query))\r\nassert (\r\n    len(pm_curs) == len(mm_curs) == 1\r\n), f\"mm returned {len(mm_curs)} results vs pm {len(pm_curs)}\"\r\n```\r\n\r\nOutput:\r\n```\r\n$ python --version\r\nPython 3.7.6\r\n\r\n$ python mongomock_test.py\r\nTraceback (most recent call last):\r\n  File \"mongomock_test.py\", line 29, in <module>\r\n    ), f\"mm returned {len(mm_curs)} results vs pm {len(pm_curs)}\"\r\nAssertionError: mm returned 3 results vs pm 1\r\n```\r\n\r\nHappy to try to fix this myself if it's a genuine bug!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/592", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/592/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/592/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/592/events", "html_url": "https://github.com/mongomock/mongomock/issues/592", "id": 563955317, "node_id": "MDU6SXNzdWU1NjM5NTUzMTc=", "number": 592, "title": "inserting a bson.Timestamp(0, 0) not setting it to current date", "user": {"login": "languitar", "id": 1336287, "node_id": "MDQ6VXNlcjEzMzYyODc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1336287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/languitar", "html_url": "https://github.com/languitar", "followers_url": "https://api.github.com/users/languitar/followers", "following_url": "https://api.github.com/users/languitar/following{/other_user}", "gists_url": "https://api.github.com/users/languitar/gists{/gist_id}", "starred_url": "https://api.github.com/users/languitar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/languitar/subscriptions", "organizations_url": "https://api.github.com/users/languitar/orgs", "repos_url": "https://api.github.com/users/languitar/repos", "events_url": "https://api.github.com/users/languitar/events{/privacy}", "received_events_url": "https://api.github.com/users/languitar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-12T12:06:00Z", "updated_at": "2020-02-16T11:14:50Z", "closed_at": "2020-02-13T09:19:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "In MongoDB, inserting a `bson.Timestamp(0, 0)` results in a document where this timestamp is set to the current date with increment 1:\r\n\r\n```\r\n(Pdb) import bson\r\n(Pdb) collection.insert_one({'x': bson.Timestamp(0, 0)})\r\n<pymongo.results.InsertOneResult object at 0x7f58991af2c0>\r\n(Pdb) collection.find_one({'x': {'$exists': True}})\r\n{'_id': ObjectId('5e43e9d9fb5c6747e957f8e1'), 'x': Timestamp(1581509081, 1)}\r\n```\r\n\r\nmongomock does not implement this behavior and the Timestamp remains at 0, 0.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/591", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/591/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/591/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/591/events", "html_url": "https://github.com/mongomock/mongomock/issues/591", "id": 558923496, "node_id": "MDU6SXNzdWU1NTg5MjM0OTY=", "number": 591, "title": "Request for release of new version", "user": {"login": "oudingfan", "id": 2810552, "node_id": "MDQ6VXNlcjI4MTA1NTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2810552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oudingfan", "html_url": "https://github.com/oudingfan", "followers_url": "https://api.github.com/users/oudingfan/followers", "following_url": "https://api.github.com/users/oudingfan/following{/other_user}", "gists_url": "https://api.github.com/users/oudingfan/gists{/gist_id}", "starred_url": "https://api.github.com/users/oudingfan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oudingfan/subscriptions", "organizations_url": "https://api.github.com/users/oudingfan/orgs", "repos_url": "https://api.github.com/users/oudingfan/repos", "events_url": "https://api.github.com/users/oudingfan/events{/privacy}", "received_events_url": "https://api.github.com/users/oudingfan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-03T08:31:26Z", "updated_at": "2020-02-03T11:12:28Z", "closed_at": "2020-02-03T10:43:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using Python3.8, and can't work well without https://github.com/mongomock/mongomock/commit/7fc6ae4dc991cbdf73596bfb278d8cb0092ee1a5.\r\nSo I wish a new version could be released.\r\nI appreciate for your work, thank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/585", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/585/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/585/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/585/events", "html_url": "https://github.com/mongomock/mongomock/issues/585", "id": 550748689, "node_id": "MDU6SXNzdWU1NTA3NDg2ODk=", "number": 585, "title": "collection.Collection.document_count() returns negative value", "user": {"login": "mgalka", "id": 144975, "node_id": "MDQ6VXNlcjE0NDk3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/144975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgalka", "html_url": "https://github.com/mgalka", "followers_url": "https://api.github.com/users/mgalka/followers", "following_url": "https://api.github.com/users/mgalka/following{/other_user}", "gists_url": "https://api.github.com/users/mgalka/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgalka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgalka/subscriptions", "organizations_url": "https://api.github.com/users/mgalka/orgs", "repos_url": "https://api.github.com/users/mgalka/repos", "events_url": "https://api.github.com/users/mgalka/events{/privacy}", "received_events_url": "https://api.github.com/users/mgalka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-16T11:31:19Z", "updated_at": "2020-01-16T15:25:01Z", "closed_at": "2020-01-16T15:25:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When the `skip` parameter passed to the `collection.Collection.document_count()` is greater than a number of documents retrieved from db the mocked method returns negative value, while the one from `pymongo` returns 0.\r\n\r\nTested on PyMongo 3.10.1 and Mongomock 3.18.0\r\n\r\nExample:\r\n\r\n**Running the code on a local MongoDB instance:**\r\n\r\n```python\r\nimport pymongo\r\n\r\n\r\ndef do_something(client):\r\n    db = client['testdb']\r\n    col = db['testcol']\r\n    doc = {'key1': 'value1', 'key2': 'value2'}\r\n    col.insert_one(doc)\r\n    return col.count_documents({}, skip=10)\r\n\r\n\r\nif __name__  == '__main__':\r\n    client = pymongo.MongoClient(\"mongodb://localhost:27017/\")\r\n    print(do_something(client))\r\n```\r\n\r\nThis code prints 0\r\n\r\n**Running a test using mongomock:**\r\n\r\n```python\r\nimport mongomock\r\n\r\n\r\ndef do_something(client):\r\n    db = client['testdb']\r\n    col = db['testcol']\r\n    doc = {'key1': 'value1', 'key2': 'value2'}\r\n    col.insert_one(doc)\r\n    return col.count_documents({}, skip=10)\r\n\r\n\r\ndef test_something():\r\n    client = mongomock.MongoClient()\r\n    assert do_something(client) == 0\r\n```\r\n\r\nThe test fails:\r\n\r\n```\r\n   def test_something():\r\n        client = mongomock.MongoClient()\r\n>       assert do_something(client) == 0\r\nE       AssertionError: assert -9 == 0\r\nE        +  where -9 = do_something(mongomock.MongoClient('localhost', 27017))\r\n\r\ntest_mongo_skip.py:12: AssertionError\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/584", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/584/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/584/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/584/events", "html_url": "https://github.com/mongomock/mongomock/issues/584", "id": 550267576, "node_id": "MDU6SXNzdWU1NTAyNjc1NzY=", "number": 584, "title": "Aggregation breaks if $group receives DBRef as _id", "user": {"login": "AlexMurmour", "id": 33135290, "node_id": "MDQ6VXNlcjMzMTM1Mjkw", "avatar_url": "https://avatars3.githubusercontent.com/u/33135290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexMurmour", "html_url": "https://github.com/AlexMurmour", "followers_url": "https://api.github.com/users/AlexMurmour/followers", "following_url": "https://api.github.com/users/AlexMurmour/following{/other_user}", "gists_url": "https://api.github.com/users/AlexMurmour/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexMurmour/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexMurmour/subscriptions", "organizations_url": "https://api.github.com/users/AlexMurmour/orgs", "repos_url": "https://api.github.com/users/AlexMurmour/repos", "events_url": "https://api.github.com/users/AlexMurmour/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexMurmour/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-15T15:44:20Z", "updated_at": "2020-08-07T06:10:04Z", "closed_at": "2020-08-07T06:10:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "When we execute the aggregate command with DBRef as '_id', that raises a NotImplementedError exception.\r\n```\r\npipeline = [\r\n            {\r\n                '$group': {\r\n                    '_id': '$visit',\r\n                    ...\r\n                }\r\n            },\r\n        ]\r\nresult = db.collection.aggregate(pipeline)\r\n```\r\nError message:\r\n```\r\nNotImplementedError: Mongomock does not know how to sort 'DBRef('visits', ObjectId('...'))' of type '<class 'bson.dbref.DBRef'>\r\n```\r\nHowever, it works with pymongo.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/580", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/580/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/580/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/580/events", "html_url": "https://github.com/mongomock/mongomock/issues/580", "id": 539040254, "node_id": "MDU6SXNzdWU1MzkwNDAyNTQ=", "number": 580, "title": "$subtract doesn't support subtracting milliseconds from a date", "user": {"login": "danielcrisp", "id": 1104814, "node_id": "MDQ6VXNlcjExMDQ4MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1104814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielcrisp", "html_url": "https://github.com/danielcrisp", "followers_url": "https://api.github.com/users/danielcrisp/followers", "following_url": "https://api.github.com/users/danielcrisp/following{/other_user}", "gists_url": "https://api.github.com/users/danielcrisp/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielcrisp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielcrisp/subscriptions", "organizations_url": "https://api.github.com/users/danielcrisp/orgs", "repos_url": "https://api.github.com/users/danielcrisp/repos", "events_url": "https://api.github.com/users/danielcrisp/events{/privacy}", "received_events_url": "https://api.github.com/users/danielcrisp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "danielcrisp", "id": 1104814, "node_id": "MDQ6VXNlcjExMDQ4MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1104814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielcrisp", "html_url": "https://github.com/danielcrisp", "followers_url": "https://api.github.com/users/danielcrisp/followers", "following_url": "https://api.github.com/users/danielcrisp/following{/other_user}", "gists_url": "https://api.github.com/users/danielcrisp/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielcrisp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielcrisp/subscriptions", "organizations_url": "https://api.github.com/users/danielcrisp/orgs", "repos_url": "https://api.github.com/users/danielcrisp/repos", "events_url": "https://api.github.com/users/danielcrisp/events{/privacy}", "received_events_url": "https://api.github.com/users/danielcrisp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "danielcrisp", "id": 1104814, "node_id": "MDQ6VXNlcjExMDQ4MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1104814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielcrisp", "html_url": "https://github.com/danielcrisp", "followers_url": "https://api.github.com/users/danielcrisp/followers", "following_url": "https://api.github.com/users/danielcrisp/following{/other_user}", "gists_url": "https://api.github.com/users/danielcrisp/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielcrisp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielcrisp/subscriptions", "organizations_url": "https://api.github.com/users/danielcrisp/orgs", "repos_url": "https://api.github.com/users/danielcrisp/repos", "events_url": "https://api.github.com/users/danielcrisp/events{/privacy}", "received_events_url": "https://api.github.com/users/danielcrisp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-12-17T12:37:09Z", "updated_at": "2019-12-18T10:12:46Z", "closed_at": "2019-12-18T10:12:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This sort of aggregation pipeline groups documents by 5 minute intervals:\r\n\r\n```python\r\n[{\r\n    '$group': {\r\n        '_id': {\r\n            'timestamp': {\r\n                '$subtract' : ['$timestamp', {\r\n                    '$mod': [{\r\n                        '$subtract' : ['$timestamp', an_example_datetime]\r\n                     }, 5 * 60 * 1000]\r\n                }]\r\n            }\r\n        }\r\n    }\r\n]}\r\n```\r\n\r\nBut it results in this exception:\r\n\r\n```\r\nTypeError: unsupported operand type(s) for -: 'datetime.datetime' and 'float'\r\n```\r\n\r\nBecause the `$mod` resolves to a `float`, but `$timestamp` is a datetime.\r\n\r\nIt works however when run within MongoDB.\r\n\r\nSee the documentation here:\r\n\r\nhttps://docs.mongodb.com/manual/reference/operator/aggregation/subtract/#subtract-milliseconds-from-a-date\r\n\r\nPR incoming.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/579", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/579/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/579/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/579/events", "html_url": "https://github.com/mongomock/mongomock/issues/579", "id": 538537557, "node_id": "MDU6SXNzdWU1Mzg1Mzc1NTc=", "number": 579, "title": "Missing  bypass_document_validation parameter on several methods", "user": {"login": "jeromemartin", "id": 25756297, "node_id": "MDQ6VXNlcjI1NzU2Mjk3", "avatar_url": "https://avatars1.githubusercontent.com/u/25756297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeromemartin", "html_url": "https://github.com/jeromemartin", "followers_url": "https://api.github.com/users/jeromemartin/followers", "following_url": "https://api.github.com/users/jeromemartin/following{/other_user}", "gists_url": "https://api.github.com/users/jeromemartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeromemartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeromemartin/subscriptions", "organizations_url": "https://api.github.com/users/jeromemartin/orgs", "repos_url": "https://api.github.com/users/jeromemartin/repos", "events_url": "https://api.github.com/users/jeromemartin/events{/privacy}", "received_events_url": "https://api.github.com/users/jeromemartin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-12-16T17:02:46Z", "updated_at": "2019-12-29T13:24:35Z", "closed_at": "2019-12-29T13:24:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Several methods such as insert_one, insert_many, replace_one, update_one, update_many have a parameter named bypass_document_validation. \r\nTo be compatible with pymongo 3.2, this parameter is need", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/577", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/577/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/577/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/577/events", "html_url": "https://github.com/mongomock/mongomock/issues/577", "id": 526954765, "node_id": "MDU6SXNzdWU1MjY5NTQ3NjU=", "number": 577, "title": "$ne doesn't work properly for array fields", "user": {"login": "ridi-lkw", "id": 51401150, "node_id": "MDQ6VXNlcjUxNDAxMTUw", "avatar_url": "https://avatars3.githubusercontent.com/u/51401150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ridi-lkw", "html_url": "https://github.com/ridi-lkw", "followers_url": "https://api.github.com/users/ridi-lkw/followers", "following_url": "https://api.github.com/users/ridi-lkw/following{/other_user}", "gists_url": "https://api.github.com/users/ridi-lkw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ridi-lkw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ridi-lkw/subscriptions", "organizations_url": "https://api.github.com/users/ridi-lkw/orgs", "repos_url": "https://api.github.com/users/ridi-lkw/repos", "events_url": "https://api.github.com/users/ridi-lkw/events{/privacy}", "received_events_url": "https://api.github.com/users/ridi-lkw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-22T02:46:23Z", "updated_at": "2019-11-25T01:32:03Z", "closed_at": "2019-11-25T01:32:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "```Python\r\nimport mongomock\r\ndb = mongomock.MongoClient()['test']\r\ndb.collection.insert({'_id': 1, 'test_list': []})\r\ndata_in_db = db.collection.find({'test_list': {'$ne': []}})\r\nprint(list(data_in_db))\r\n```\r\nWhat I expected is...\r\n```\r\n[]\r\n```\r\nbut I got...\r\n```\r\n[{'_id': 1, 'test_list': []}]\r\n```\r\n\r\nI checked that I'm using the latest version. At this time, it is `3.18.0`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/576", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/576/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/576/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/576/events", "html_url": "https://github.com/mongomock/mongomock/issues/576", "id": 522833278, "node_id": "MDU6SXNzdWU1MjI4MzMyNzg=", "number": 576, "title": "Aggregation breaks if $group receives uuid as _id", "user": {"login": "NazarTopolsky", "id": 7715385, "node_id": "MDQ6VXNlcjc3MTUzODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/7715385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NazarTopolsky", "html_url": "https://github.com/NazarTopolsky", "followers_url": "https://api.github.com/users/NazarTopolsky/followers", "following_url": "https://api.github.com/users/NazarTopolsky/following{/other_user}", "gists_url": "https://api.github.com/users/NazarTopolsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/NazarTopolsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NazarTopolsky/subscriptions", "organizations_url": "https://api.github.com/users/NazarTopolsky/orgs", "repos_url": "https://api.github.com/users/NazarTopolsky/repos", "events_url": "https://api.github.com/users/NazarTopolsky/events{/privacy}", "received_events_url": "https://api.github.com/users/NazarTopolsky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-14T12:43:16Z", "updated_at": "2020-04-05T15:10:46Z", "closed_at": "2020-04-05T15:10:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "If a field used as `_id` in `$group` stage of aggregation pipeline receives uuid, aggregation breaks. Reproducible with:\r\n\r\n```\r\nimport mongomock\r\nimport uuid\r\n\r\n\r\ndef test():\r\n    client = mongomock.MongoClient()\r\n    collection = client.db.collection\r\n    collection.insert_many([\r\n        {'uuid_field': uuid.uuid4()},\r\n        {'uuid_field': uuid.uuid4()},\r\n    ])\r\n    list(collection.aggregate([\r\n        {'$group': {'_id': '$uuid_field'}}\r\n    ]))\r\n\r\n\r\nif __name__ == '__main__':\r\n    test()\r\n```\r\n\r\nThis breaks with the exception:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/nazar/projects/sandbox/mongomock_uuid/mongomock_uuid/test.py\", line 22, in <module>\r\n    test()\r\n  File \"/home/nazar/projects/sandbox/mongomock_uuid/mongomock_uuid/test.py\", line 16, in test\r\n    'values': {'$sum': 1},\r\n  File \"/home/nazar/projects/sandbox/mongomock_uuid/venv/lib/python3.7/site-packages/mongomock/collection.py\", line 1640, in aggregate\r\n    return aggregate.process_pipeline(in_collection, self.database, pipeline, session)\r\n  File \"/home/nazar/projects/sandbox/mongomock_uuid/venv/lib/python3.7/site-packages/mongomock/aggregate.py\", line 999, in process_pipeline\r\n    collection = handler(collection, database, options)\r\n  File \"/home/nazar/projects/sandbox/mongomock_uuid/venv/lib/python3.7/site-packages/mongomock/aggregate.py\", line 649, in _handle_group_stage\r\n    sorted_collection = sorted(in_collection, key=_sort_key_getter)\r\n  File \"/home/nazar/projects/sandbox/mongomock_uuid/venv/lib/python3.7/site-packages/mongomock/filtering.py\", line 475, in __lt__\r\n    return bson_compare(operator.lt, self.obj, other.obj)\r\n  File \"/home/nazar/projects/sandbox/mongomock_uuid/venv/lib/python3.7/site-packages/mongomock/filtering.py\", line 269, in bson_compare\r\n    a_type = _get_compare_type(a)\r\n  File \"/home/nazar/projects/sandbox/mongomock_uuid/venv/lib/python3.7/site-packages/mongomock/filtering.py\", line 331, in _get_compare_type\r\n    (val, type(val)))\r\nNotImplementedError: Mongomock does not know how to sort 'ef96fe1b-8017-4b67-809d-877b66beb8cc' of type '<class 'uuid.UUID'>'\r\n```\r\n\r\nThis code works fine with pymongo.\r\n\r\nThe offender seems to be `mongomock.filtering._get_compare_type` - it doesn't know about UUIDs. If I understand everything correctly, pymongo stores UUIDs as BinData, so ordering [would be same as for binary data](https://docs.mongodb.com/manual/reference/bson-type-comparison-order/#bson-types-comparison-order). Looking at `_get_compare_type` source, I think it should have same ordering as bytes, but I'm not sure this is correct.\r\n\r\nSomething else I feel I should mention is that this worked in 3.14.0, and broke in one of the newer releases.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/573", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/573/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/573/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/573/events", "html_url": "https://github.com/mongomock/mongomock/issues/573", "id": 509023454, "node_id": "MDU6SXNzdWU1MDkwMjM0NTQ=", "number": 573, "title": "MongoMock changes inserted datetime in inserted documents?", "user": {"login": "jschlyter", "id": 37379, "node_id": "MDQ6VXNlcjM3Mzc5", "avatar_url": "https://avatars2.githubusercontent.com/u/37379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jschlyter", "html_url": "https://github.com/jschlyter", "followers_url": "https://api.github.com/users/jschlyter/followers", "following_url": "https://api.github.com/users/jschlyter/following{/other_user}", "gists_url": "https://api.github.com/users/jschlyter/gists{/gist_id}", "starred_url": "https://api.github.com/users/jschlyter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jschlyter/subscriptions", "organizations_url": "https://api.github.com/users/jschlyter/orgs", "repos_url": "https://api.github.com/users/jschlyter/repos", "events_url": "https://api.github.com/users/jschlyter/events{/privacy}", "received_events_url": "https://api.github.com/users/jschlyter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-10-18T11:32:14Z", "updated_at": "2019-10-24T06:36:05Z", "closed_at": "2019-10-24T06:36:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm experiencing problems with MongoMock (3.18.0) changing data upon insertion, something that does not occur when using PyMongo. If the document contains a datetime with timezone, the datatime is converted to UTC and the timezone dropped. Fetching the document again brings back the timezone.\r\n\r\nExample code to trigger error:\r\n\r\n```\r\nfrom datetime import datetime, timezone, timedelta\r\nimport pymongo\r\nimport mongomock\r\n\r\ndef test_with_client(client):\r\n    doc = {\r\n        'dt': datetime.now(tz=timezone(timedelta(hours=2)))\r\n    }\r\n    print(\"Before save:  \", doc['dt'])\r\n    res = client.test.broken.insert_one(doc)\r\n    print(\"After save:   \", doc['dt'])\r\n\r\n    res = client.test.broken.find_one({'_id': res.inserted_id})\r\n    print(\"After get:    \", res['dt'])\r\n\r\nprint(\"Test with MongoDB\")\r\ntest_with_client(pymongo.MongoClient(tz_aware=True))\r\nprint(\"\")\r\n\r\nprint(\"Test with MongoMock\")\r\ntest_with_client(mongomock.MongoClient(tz_aware=True))\r\nprint(\"\")\r\n\r\n```\r\n\r\nOutputs:\r\n\r\n```\r\nTest with MongoDB\r\nBefore save:   2019-10-18 13:27:08.209182+02:00\r\nAfter save:    2019-10-18 13:27:08.209182+02:00\r\nAfter get:     2019-10-18 11:27:08.209000+00:00\r\n\r\nTest with MongoMock\r\nBefore save:   2019-10-18 13:27:08.215341+02:00\r\nAfter save:    2019-10-18 11:27:08.215000\r\nAfter get:     2019-10-18 11:27:08.215000+00:00\r\n````\r\n\r\nPerhaps related to #410.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/569", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/569/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/569/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/569/events", "html_url": "https://github.com/mongomock/mongomock/issues/569", "id": 500652199, "node_id": "MDU6SXNzdWU1MDA2NTIxOTk=", "number": 569, "title": "NotImplementedError for sessions!!", "user": {"login": "sachinavina", "id": 25772187, "node_id": "MDQ6VXNlcjI1NzcyMTg3", "avatar_url": "https://avatars1.githubusercontent.com/u/25772187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sachinavina", "html_url": "https://github.com/sachinavina", "followers_url": "https://api.github.com/users/sachinavina/followers", "following_url": "https://api.github.com/users/sachinavina/following{/other_user}", "gists_url": "https://api.github.com/users/sachinavina/gists{/gist_id}", "starred_url": "https://api.github.com/users/sachinavina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sachinavina/subscriptions", "organizations_url": "https://api.github.com/users/sachinavina/orgs", "repos_url": "https://api.github.com/users/sachinavina/repos", "events_url": "https://api.github.com/users/sachinavina/events{/privacy}", "received_events_url": "https://api.github.com/users/sachinavina/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-01T04:25:30Z", "updated_at": "2020-05-02T21:53:09Z", "closed_at": "2019-10-01T07:11:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Wherever session is passed to a method, NotImplementedError is raised, instead can be logged as a warning. So that one can test their units with their other functionality.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/568", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/568/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/568/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/568/events", "html_url": "https://github.com/mongomock/mongomock/issues/568", "id": 497700775, "node_id": "MDU6SXNzdWU0OTc3MDA3NzU=", "number": 568, "title": "Regression: mongomock $ne operator doesn't properly work on arrays in 3.17.0 and 3.18.0", "user": {"login": "boxmansf", "id": 20337439, "node_id": "MDQ6VXNlcjIwMzM3NDM5", "avatar_url": "https://avatars0.githubusercontent.com/u/20337439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boxmansf", "html_url": "https://github.com/boxmansf", "followers_url": "https://api.github.com/users/boxmansf/followers", "following_url": "https://api.github.com/users/boxmansf/following{/other_user}", "gists_url": "https://api.github.com/users/boxmansf/gists{/gist_id}", "starred_url": "https://api.github.com/users/boxmansf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boxmansf/subscriptions", "organizations_url": "https://api.github.com/users/boxmansf/orgs", "repos_url": "https://api.github.com/users/boxmansf/repos", "events_url": "https://api.github.com/users/boxmansf/events{/privacy}", "received_events_url": "https://api.github.com/users/boxmansf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-24T13:48:01Z", "updated_at": "2019-09-28T17:20:29Z", "closed_at": "2019-09-28T06:17:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here's a code snippet to reproduce:\r\n\r\n```py\r\ntest_colc.insert_many([\r\n\t{'arr': ['a', 'b']},\r\n\t{'arr': ['a', 'b', 'c']},\r\n\t{'arr': ['b', 'c']},\r\n\t{'arr': ['d']}])\r\n\r\nres = test_colc.find({}).distinct('arr')\r\nassert len(res) == 4\r\n\r\nassert set(res) == {'a', 'b', 'c', 'd'}\r\n\r\nres = test_colc.find({'arr': {'$ne': ['d']}}).distinct('arr')\r\nassert len(res) == 3\r\nassert set(res) == {'a', 'b', 'c'}\r\n```\r\nThis succeeds on mongomock 3.16.0 but fails on 3.17.0 and 3.18.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/566", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/566/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/566/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/566/events", "html_url": "https://github.com/mongomock/mongomock/issues/566", "id": 497445762, "node_id": "MDU6SXNzdWU0OTc0NDU3NjI=", "number": 566, "title": "Creating index with custom name !!", "user": {"login": "sachinavina", "id": 25772187, "node_id": "MDQ6VXNlcjI1NzcyMTg3", "avatar_url": "https://avatars1.githubusercontent.com/u/25772187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sachinavina", "html_url": "https://github.com/sachinavina", "followers_url": "https://api.github.com/users/sachinavina/followers", "following_url": "https://api.github.com/users/sachinavina/following{/other_user}", "gists_url": "https://api.github.com/users/sachinavina/gists{/gist_id}", "starred_url": "https://api.github.com/users/sachinavina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sachinavina/subscriptions", "organizations_url": "https://api.github.com/users/sachinavina/orgs", "repos_url": "https://api.github.com/users/sachinavina/repos", "events_url": "https://api.github.com/users/sachinavina/events{/privacy}", "received_events_url": "https://api.github.com/users/sachinavina/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-09-24T04:20:13Z", "updated_at": "2019-09-24T12:58:20Z", "closed_at": "2019-09-24T07:13:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "In latest Mongo(4.2)/pymongo(3.9.0), supports creating index by providing custom name but in mongomock this is not supported yet. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/565", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/565/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/565/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/565/events", "html_url": "https://github.com/mongomock/mongomock/issues/565", "id": 496363726, "node_id": "MDU6SXNzdWU0OTYzNjM3MjY=", "number": 565, "title": "drop_database not removing stored data", "user": {"login": "anon4777", "id": 54989678, "node_id": "MDQ6VXNlcjU0OTg5Njc4", "avatar_url": "https://avatars0.githubusercontent.com/u/54989678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anon4777", "html_url": "https://github.com/anon4777", "followers_url": "https://api.github.com/users/anon4777/followers", "following_url": "https://api.github.com/users/anon4777/following{/other_user}", "gists_url": "https://api.github.com/users/anon4777/gists{/gist_id}", "starred_url": "https://api.github.com/users/anon4777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anon4777/subscriptions", "organizations_url": "https://api.github.com/users/anon4777/orgs", "repos_url": "https://api.github.com/users/anon4777/repos", "events_url": "https://api.github.com/users/anon4777/events{/privacy}", "received_events_url": "https://api.github.com/users/anon4777/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-20T13:49:03Z", "updated_at": "2019-09-23T08:38:37Z", "closed_at": "2019-09-23T08:38:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Drop_database method is not removing stored data in some cases, see example below:\r\n\r\n    import mongoengine\r\n    from mongoengine import Document, StringField\r\n\r\n    ALIAS = \"alias\"\r\n\r\n    class Content(Document):\r\n\r\n        slug = StringField(required=True)\r\n\r\n        meta = {'allow_inheritance': True,\r\n                'db_alias': ALIAS}\r\n\r\n    class Foo(Content):\r\n\r\n        pass\r\n\r\n    database = mongoengine.connect(ALIAS, host=\"mongomock://localhost\")\r\n    mongoengine.register_connection(alias=ALIAS, host=\"mongomock://localhost\")\r\n\r\n    foo1 = Foo(slug=\"slug1\")\r\n    foo1.save()\r\n    foo2 = Foo(slug=\"slug2\")\r\n    foo2.save()\r\n\r\n    print(Foo.objects.all(), \"result before drop\")\r\n\r\n    database.drop_database(ALIAS)\r\n\r\n    print(Foo.objects.all(), \"result after drop\")\r\n\r\n\r\nOutput:\r\n\r\n    [<Foo: Foo object>, <Foo: Foo object>] result before drop\r\n    [<Foo: Foo object>, <Foo: Foo object>] result after drop\r\n\r\nTested with mongomock 3.17.0.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/562", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/562/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/562/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/562/events", "html_url": "https://github.com/mongomock/mongomock/issues/562", "id": 490349537, "node_id": "MDU6SXNzdWU0OTAzNDk1Mzc=", "number": 562, "title": "TypeError when a value used in an index is not hashable (e.g. a dict)", "user": {"login": "anon4777", "id": 54989678, "node_id": "MDQ6VXNlcjU0OTg5Njc4", "avatar_url": "https://avatars0.githubusercontent.com/u/54989678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anon4777", "html_url": "https://github.com/anon4777", "followers_url": "https://api.github.com/users/anon4777/followers", "following_url": "https://api.github.com/users/anon4777/following{/other_user}", "gists_url": "https://api.github.com/users/anon4777/gists{/gist_id}", "starred_url": "https://api.github.com/users/anon4777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anon4777/subscriptions", "organizations_url": "https://api.github.com/users/anon4777/orgs", "repos_url": "https://api.github.com/users/anon4777/repos", "events_url": "https://api.github.com/users/anon4777/events{/privacy}", "received_events_url": "https://api.github.com/users/anon4777/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-09-06T14:10:57Z", "updated_at": "2019-09-13T15:18:14Z", "closed_at": "2019-09-13T15:18:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Mongomock crashes when using GenericReferenceField in an index. MongoDB can create the index without any errors. Sample code:\r\n\r\n```py\r\n    import mongoengine\r\n    from mongoengine import Document, StringField, IntField, GenericReferenceField\r\n    ALIAS = \"my_alias\"\r\n\r\n    class Content(Document):\r\n\r\n        parent = GenericReferenceField()\r\n        slug = StringField(required=True, max_length=90)\r\n        title = StringField(required=True, max_length=60)\r\n        sort_index = IntField(default=50)\r\n\r\n        meta = {\r\n            'allow_inheritance': True,\r\n            'db_alias': ALIAS,\r\n            'collection': 'content',\r\n            'indexes': [\r\n                {\r\n                    \"fields\": ['parent', 'slug'],\r\n                    \"unique\": True\r\n                },\r\n                ('parent', '+sort_index'),\r\n            ],\r\n            'ordering': ['+sort_index'],}\r\n\r\n    class Foo(Content):\r\n\r\n        pass\r\n\r\n    class Bar(Content):\r\n\r\n        pass\r\n\r\n    def bootstrap_data():\r\n\r\n        foo = Foo(slug=\"slug1\", title=\"title1\")\r\n        foo.save()\r\n        print(\"object saved\", foo.to_json())\r\n\r\n        bar2 = Bar(parent=foo, slug=\"slug2\", title=\"title2\", sort_index=2)\r\n        bar2.save()\r\n        print(\"object saved\", bar2.to_json())\r\n        bar3 = Bar(parent=foo, slug=\"slug3\", title=\"title3\", sort_index=3)\r\n        bar3.save()\r\n        print(\"object saved\", bar3.to_json())\r\n\r\n\r\n    # using MongoDB, comment if unused\r\n    database = mongoengine.connect(ALIAS, host=\"localhost\")\r\n    mongoengine.register_connection(alias=ALIAS, name=ALIAS, host=\"localhost\", username=\"some_username\", password=\"some_password\", authentication_source=\"some_db\")\r\n    bootstrap_data()\r\n\r\n    # using mongomock, comment if unused\r\n    database = mongoengine.connect(ALIAS, host=\"mongomock://localhost\")\r\n    mongoengine.register_connection(alias=ALIAS, host=\"mongomock://localhost\")\r\n    bootstrap_data()\r\n```\r\n\r\nOutput when using MongoDB v4.0.12:\r\n\r\n```sh\r\n    object saved {\"_id\": {\"$oid\": \"5d72637583896c8ee0fef5f1\"}, \"_cls\": \"Content.Foo\", \"slug\": \"slug1\", \"title\": \"title1\", \"sort_index\": 50}\r\n    object saved {\"_id\": {\"$oid\": \"5d72637583896c8ee0fef5f2\"}, \"_cls\": \"Content.Bar\", \"parent\": {\"_cls\": \"Content.Foo\", \"_ref\": {\"$ref\": \"content\", \"$id\": {\"$oid\": \"5d72637583896c8ee0fef5f1\"}}}, \"slug\": \"slug2\", \"title\": \"title2\", \"sort_index\": 2}\r\n    object saved {\"_id\": {\"$oid\": \"5d72637583896c8ee0fef5f3\"}, \"_cls\": \"Content.Bar\", \"parent\": {\"_cls\": \"Content.Foo\", \"_ref\": {\"$ref\": \"content\", \"$id\": {\"$oid\": \"5d72637583896c8ee0fef5f1\"}}}, \"slug\": \"slug3\", \"title\": \"title3\", \"sort_index\": 3}\r\n```\r\n\r\nOutput when using mongomock 3.17.0:\r\n\r\n```sh\r\n    object saved {\"_id\": {\"$oid\": \"5d7262ee61b3fb3ec3863a6d\"}, \"_cls\": \"Content.Foo\", \"slug\": \"slug1\", \"title\": \"title1\", \"sort_index\": 50}\r\n    object saved {\"_id\": {\"$oid\": \"5d7262ee61b3fb3ec3863a6e\"}, \"_cls\": \"Content.Bar\", \"parent\": {\"_cls\": \"Content.Foo\", \"_ref\": {\"$ref\": \"content\", \"$id\": {\"$oid\": \"5d7262ee61b3fb3ec3863a6d\"}}}, \"slug\": \"slug2\", \"title\": \"title2\", \"sort_index\": 2}\r\n    Traceback (most recent call last):\r\n        bootstrap_data()\r\n        bar3.save()\r\n    File \"mongoengine/document.py\", line 383, in save\r\n        self.ensure_indexes()\r\n    File \"mongoengine/document.py\", line 888, in ensure_indexes\r\n        collection.create_index(fields, background=background, **opts)\r\n    File \"mongomock/collection.py\", line 1389, in create_index\r\n        if index in indexed:\r\n    TypeError: unhashable type: 'dict'\r\n```\r\n\r\nMongoengine version is 0.18.2.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/561", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/561/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/561/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/561/events", "html_url": "https://github.com/mongomock/mongomock/issues/561", "id": 490180440, "node_id": "MDU6SXNzdWU0OTAxODA0NDA=", "number": 561, "title": "Support bson.regex in \"$not\": Regex..", "user": {"login": "vainu-jussi", "id": 46669903, "node_id": "MDQ6VXNlcjQ2NjY5OTAz", "avatar_url": "https://avatars1.githubusercontent.com/u/46669903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vainu-jussi", "html_url": "https://github.com/vainu-jussi", "followers_url": "https://api.github.com/users/vainu-jussi/followers", "following_url": "https://api.github.com/users/vainu-jussi/following{/other_user}", "gists_url": "https://api.github.com/users/vainu-jussi/gists{/gist_id}", "starred_url": "https://api.github.com/users/vainu-jussi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vainu-jussi/subscriptions", "organizations_url": "https://api.github.com/users/vainu-jussi/orgs", "repos_url": "https://api.github.com/users/vainu-jussi/repos", "events_url": "https://api.github.com/users/vainu-jussi/events{/privacy}", "received_events_url": "https://api.github.com/users/vainu-jussi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-06T07:44:28Z", "updated_at": "2019-09-06T11:13:57Z", "closed_at": "2019-09-06T11:13:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Regular python regex with both mongomock and pymongo as expected:\r\n\r\nimport re\r\ncollection.find_one({\"field\": {\"$not\": re.compile(\"searchstr\", re.IGNORECASE)}})\r\n\r\nbson.regex works with pymongo but not mongomock:\r\nfrom bson.regex import Regex\r\ncollection.find_one({\"field\": {\"$not\": Regex(\"^searchstr\")}})\r\n\r\nI created a pull request with fix:\r\nhttps://github.com/mongomock/mongomock/pull/560", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/554", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/554/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/554/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/554/events", "html_url": "https://github.com/mongomock/mongomock/issues/554", "id": 479900571, "node_id": "MDU6SXNzdWU0Nzk5MDA1NzE=", "number": 554, "title": "Search Using bson.Regex Does Not Match Anything", "user": {"login": "macdjord", "id": 4250155, "node_id": "MDQ6VXNlcjQyNTAxNTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/4250155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macdjord", "html_url": "https://github.com/macdjord", "followers_url": "https://api.github.com/users/macdjord/followers", "following_url": "https://api.github.com/users/macdjord/following{/other_user}", "gists_url": "https://api.github.com/users/macdjord/gists{/gist_id}", "starred_url": "https://api.github.com/users/macdjord/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macdjord/subscriptions", "organizations_url": "https://api.github.com/users/macdjord/orgs", "repos_url": "https://api.github.com/users/macdjord/repos", "events_url": "https://api.github.com/users/macdjord/events{/privacy}", "received_events_url": "https://api.github.com/users/macdjord/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1352860, "node_id": "MDU6TGFiZWwxMzUyODYw", "url": "https://api.github.com/repos/mongomock/mongomock/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": "Reporting a feature that is missing from mongomock."}], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2019-08-12T23:59:43Z", "updated_at": "2019-08-25T05:15:38Z", "closed_at": "2019-08-23T16:46:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "MongoMock does not correctly handle a regex search where the regex is passed in as a `bson.Regex` object instead of in extended-JSON format (i.e. `{\"$regex\": \"...\"}`)\r\n\r\n# Steps to Reproduce:\r\n```python\r\nfrom bson.regex import Regex\r\nfrom mongomock import MongoClient\r\n\r\nDB = MongoClient()['test_db']\r\n\r\nDB['test_collection'].insert_many([\r\n    {'text_field': 'string a'},\r\n    {'text_field': 'string b'},\r\n])\r\n\r\nprint(list(DB['test_collection'].find(\r\n    filter={'text_field': Regex('[bB]')},\r\n    projection={'_id': False},\r\n)))\r\n```\r\n\r\n# Expected result:\r\n* `[{'text_field': 'string b'}]`\r\n\r\n# Actual results:\r\n* `[]`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/553", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/553/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/553/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/553/events", "html_url": "https://github.com/mongomock/mongomock/issues/553", "id": 479210089, "node_id": "MDU6SXNzdWU0NzkyMTAwODk=", "number": 553, "title": "Errors not generated on invalid query operators or operands", "user": {"login": "macdjord", "id": 4250155, "node_id": "MDQ6VXNlcjQyNTAxNTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/4250155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macdjord", "html_url": "https://github.com/macdjord", "followers_url": "https://api.github.com/users/macdjord/followers", "following_url": "https://api.github.com/users/macdjord/following{/other_user}", "gists_url": "https://api.github.com/users/macdjord/gists{/gist_id}", "starred_url": "https://api.github.com/users/macdjord/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macdjord/subscriptions", "organizations_url": "https://api.github.com/users/macdjord/orgs", "repos_url": "https://api.github.com/users/macdjord/repos", "events_url": "https://api.github.com/users/macdjord/events{/privacy}", "received_events_url": "https://api.github.com/users/macdjord/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-10T00:42:54Z", "updated_at": "2019-08-23T04:14:59Z", "closed_at": "2019-08-23T04:14:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "MongoMock does not raise an error if a query uses an invalid operator or operand like the real MongoDB does\r\n\r\n# Steps to Reproduce:\r\n* `find({'some_field': {'$foo': 'bar'}})`\r\n* `find({'some_field': {'$in': 'not a list'}})`\r\n\r\n# Expected result:\r\n* Both operations fail, the first because there is no '$foo' operator and the second because '$in' takes a list, not a single value\r\n  * This is, in fact, what the real MongoDB does on receiving those queries\r\n\r\n# Actual results:\r\n* Both operations run successfully, returning 0 results", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/552", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/552/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/552/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/552/events", "html_url": "https://github.com/mongomock/mongomock/issues/552", "id": 479209282, "node_id": "MDU6SXNzdWU0NzkyMDkyODI=", "number": 552, "title": "Incorrect pymongo version requirements", "user": {"login": "macdjord", "id": 4250155, "node_id": "MDQ6VXNlcjQyNTAxNTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/4250155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macdjord", "html_url": "https://github.com/macdjord", "followers_url": "https://api.github.com/users/macdjord/followers", "following_url": "https://api.github.com/users/macdjord/following{/other_user}", "gists_url": "https://api.github.com/users/macdjord/gists{/gist_id}", "starred_url": "https://api.github.com/users/macdjord/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macdjord/subscriptions", "organizations_url": "https://api.github.com/users/macdjord/orgs", "repos_url": "https://api.github.com/users/macdjord/repos", "events_url": "https://api.github.com/users/macdjord/events{/privacy}", "received_events_url": "https://api.github.com/users/macdjord/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-08-10T00:35:35Z", "updated_at": "2019-08-23T11:54:25Z", "closed_at": "2019-08-23T11:54:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "MongoMock 3.17.0 is incompatible with PyMongo 3.6.1, but this dependency is not declared in `pip`\r\n\r\n# Steps to Reproduce:\r\n```bash\r\necho > requirements.txt <<HERE\r\nmongomock == 3.17.0\r\npymongo == 3.6.1\r\nHERE\r\npip install -r requirements.txt\r\n```\r\n\r\n# Expected result:\r\n* `pip` warns of incompatible version requirements\r\n\r\n# Actual results:\r\n* No warning is emitted\r\n* MongoMock fails, IIRC, on setting up the connection\r\n\r\n# Suggested fix:\r\n* Configure MongoMock's test suite to use a specific PyMongo version\r\n* Declare `pip` a dependency on `pymongo >= $FOO` where `$FOO` is the version used for testing\r\n* If MongoMock needs to upgrade to a newer PyMongo version to take advantage of newer features, increment both the test suite and `pip` version requirements", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/551", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/551/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/551/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/551/events", "html_url": "https://github.com/mongomock/mongomock/issues/551", "id": 472709687, "node_id": "MDU6SXNzdWU0NzI3MDk2ODc=", "number": 551, "title": "Implicitly-created collections do not check name validity", "user": {"login": "TBBle", "id": 138397, "node_id": "MDQ6VXNlcjEzODM5Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/138397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TBBle", "html_url": "https://github.com/TBBle", "followers_url": "https://api.github.com/users/TBBle/followers", "following_url": "https://api.github.com/users/TBBle/following{/other_user}", "gists_url": "https://api.github.com/users/TBBle/gists{/gist_id}", "starred_url": "https://api.github.com/users/TBBle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TBBle/subscriptions", "organizations_url": "https://api.github.com/users/TBBle/orgs", "repos_url": "https://api.github.com/users/TBBle/repos", "events_url": "https://api.github.com/users/TBBle/events{/privacy}", "received_events_url": "https://api.github.com/users/TBBle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-25T07:31:48Z", "updated_at": "2019-07-29T15:08:54Z", "closed_at": "2019-07-29T15:08:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "When a `Collection` is created via `Database.__getitem__`, ending up in the `except KeyError` path of `Database.get_collection`, it never calls `Database._ensure_valid_collection_name`.\r\n\r\nThe unit test `CollectionAPITest.test__create_collection_bad_names` passes when it is:\r\n```py\r\n        for name in bad_names:\r\n            with self.assertRaises(mongomock.InvalidName, msg=name):\r\n                self.db.create_collection(name)\r\n```\r\n\r\nI expect that the following would not pass:\r\n```py\r\n        for name in bad_names:\r\n            with self.assertRaises(mongomock.InvalidName, msg=name):\r\n                self.db[name]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/548", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/548/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/548/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/548/events", "html_url": "https://github.com/mongomock/mongomock/issues/548", "id": 469986267, "node_id": "MDU6SXNzdWU0Njk5ODYyNjc=", "number": 548, "title": "Projecting to `_id` in aggregation not working as expected", "user": {"login": "valerierose", "id": 2015436, "node_id": "MDQ6VXNlcjIwMTU0MzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/2015436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/valerierose", "html_url": "https://github.com/valerierose", "followers_url": "https://api.github.com/users/valerierose/followers", "following_url": "https://api.github.com/users/valerierose/following{/other_user}", "gists_url": "https://api.github.com/users/valerierose/gists{/gist_id}", "starred_url": "https://api.github.com/users/valerierose/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/valerierose/subscriptions", "organizations_url": "https://api.github.com/users/valerierose/orgs", "repos_url": "https://api.github.com/users/valerierose/repos", "events_url": "https://api.github.com/users/valerierose/events{/privacy}", "received_events_url": "https://api.github.com/users/valerierose/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-18T20:58:30Z", "updated_at": "2019-08-22T17:21:09Z", "closed_at": "2019-08-22T17:21:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I project a field to `_id`, it does not replace the original `_id` and thus does not reproduce what I would get directly from MongoDB.\r\n\r\n**How to reproduce:**\r\n```\r\nid0 = bson.ObjectId()\r\nid1 = bson.ObjectId()\r\nid2 = bson.ObjectId()\r\nid3 = bson.ObjectId()\r\n\r\nc1 = [{'_id': id0, 'c2': [{'c2_id': id1, 'o': 'x'}, {'c2_id': id2, 'o': 'y'}, {'c2_id': id3, 'o': 'z'}]}]\r\nc2 = [{'_id': id1, 'foo': 'bar'},\r\n     {'_id': id2, 'foo': 'buzz'},\r\n     {'_id': id3, 'foo': 'biz'}]\r\ndb = mongomock.MongoClient()\r\ndb.db.c1.insert(c1)\r\ndb.db.c2.insert(c2)\r\nprint(list(db.db.c1.aggregate([{'$match': {'_id': id0}},\r\n    {'$project': {'c2_id': '$c2.c2_id'}},\r\n    {'$lookup': {'from': 'c2', 'localField': 'c2_id', 'foreignField': '_id', 'as': 'c2'}},\r\n    {'$unwind': '$c2'},\r\n    {'$project': {'_id': '$c2._id', 'foo': '$c2.foo'}}\r\n    ])))\r\n```\r\n\r\n**Expected output:**\r\n```\r\n[{'_id': id1, 'foo': 'bar'}, {'_id': id2, 'foo': 'buzz'}, {'_id': id3, 'foo': 'biz'}]\r\n```\r\n\r\n**Actual output:**\r\n```\r\n[{'_id': id0, 'foo': 'bar'}, {'_id': id0, 'foo': 'buzz'}, {'_id': id0, 'foo': 'biz'}]\r\n```\r\n\r\nI know I can now do `{'$replaceRoot': {'newRoot': '$c2'}}` in this case, but there may be cases where that cannot work, and it seems that mongomock should reproduce what MongoDB produces.\r\n\r\nI realize this is related to https://github.com/mongomock/mongomock/issues/504, but I am experiencing it with version 3.17.0, which appears to have the fix for this issue which was closed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/546", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/546/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/546/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/546/events", "html_url": "https://github.com/mongomock/mongomock/issues/546", "id": 466316824, "node_id": "MDU6SXNzdWU0NjYzMTY4MjQ=", "number": 546, "title": "Aggregation operator '$first' raise `IndexError` if `values` is empty", "user": {"login": "icohen88", "id": 31587842, "node_id": "MDQ6VXNlcjMxNTg3ODQy", "avatar_url": "https://avatars0.githubusercontent.com/u/31587842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/icohen88", "html_url": "https://github.com/icohen88", "followers_url": "https://api.github.com/users/icohen88/followers", "following_url": "https://api.github.com/users/icohen88/following{/other_user}", "gists_url": "https://api.github.com/users/icohen88/gists{/gist_id}", "starred_url": "https://api.github.com/users/icohen88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/icohen88/subscriptions", "organizations_url": "https://api.github.com/users/icohen88/orgs", "repos_url": "https://api.github.com/users/icohen88/repos", "events_url": "https://api.github.com/users/icohen88/events{/privacy}", "received_events_url": "https://api.github.com/users/icohen88/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-07-10T13:41:37Z", "updated_at": "2019-07-11T21:46:24Z", "closed_at": "2019-07-11T21:46:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using the aggregation operator `$first` (or `$last`), and no data exists in the group, we will get `IndexError` exception.\r\n\r\nSuggestion for a fix:\r\nIn `aggregate._accumulate_group`, instead of:\r\n```\r\n            elif operator == '$first':\r\n                doc_dict[field] = values[0]\r\n            elif operator == '$last':\r\n                doc_dict[field] = values[-1]\r\n```\r\ndo\r\n```\r\n            elif operator == '$first':\r\n                doc_dict[field] = values[:1]\r\n            elif operator == '$last':\r\n                doc_dict[field] = values[-1:]\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/545", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/545/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/545/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/545/events", "html_url": "https://github.com/mongomock/mongomock/issues/545", "id": 465434769, "node_id": "MDU6SXNzdWU0NjU0MzQ3Njk=", "number": 545, "title": "README demo TypeError", "user": {"login": "MasahiroYoshida", "id": 33169818, "node_id": "MDQ6VXNlcjMzMTY5ODE4", "avatar_url": "https://avatars1.githubusercontent.com/u/33169818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MasahiroYoshida", "html_url": "https://github.com/MasahiroYoshida", "followers_url": "https://api.github.com/users/MasahiroYoshida/followers", "following_url": "https://api.github.com/users/MasahiroYoshida/following{/other_user}", "gists_url": "https://api.github.com/users/MasahiroYoshida/gists{/gist_id}", "starred_url": "https://api.github.com/users/MasahiroYoshida/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MasahiroYoshida/subscriptions", "organizations_url": "https://api.github.com/users/MasahiroYoshida/orgs", "repos_url": "https://api.github.com/users/MasahiroYoshida/repos", "events_url": "https://api.github.com/users/MasahiroYoshida/events{/privacy}", "received_events_url": "https://api.github.com/users/MasahiroYoshida/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-07-08T20:01:44Z", "updated_at": "2019-07-09T06:18:12Z", "closed_at": "2019-07-09T06:18:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "In demo option 3, it returns TypeError: 'NoneType' object is not subscriptable.\r\nfind_one returns None object because `obj['_id'] = collection.insert_one(obj)` returns object. \r\n\r\nquick fix is to make `obj['_id'] = collection.insert_one(obj).inserted_id` instead", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/544", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/544/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/544/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/544/events", "html_url": "https://github.com/mongomock/mongomock/issues/544", "id": 463750830, "node_id": "MDU6SXNzdWU0NjM3NTA4MzA=", "number": 544, "title": "Compound unique index not checked on object update", "user": {"login": "faustow", "id": 1881979, "node_id": "MDQ6VXNlcjE4ODE5Nzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1881979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faustow", "html_url": "https://github.com/faustow", "followers_url": "https://api.github.com/users/faustow/followers", "following_url": "https://api.github.com/users/faustow/following{/other_user}", "gists_url": "https://api.github.com/users/faustow/gists{/gist_id}", "starred_url": "https://api.github.com/users/faustow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faustow/subscriptions", "organizations_url": "https://api.github.com/users/faustow/orgs", "repos_url": "https://api.github.com/users/faustow/repos", "events_url": "https://api.github.com/users/faustow/events{/privacy}", "received_events_url": "https://api.github.com/users/faustow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1032344533, "node_id": "MDU6TGFiZWwxMDMyMzQ0NTMz", "url": "https://api.github.com/repos/mongomock/mongomock/labels/cannot%20reproduce", "name": "cannot reproduce", "color": "4a61f7", "default": false, "description": "A maintainer has tried reproducing the bug but need help from the initial reporter."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-03T13:23:17Z", "updated_at": "2019-08-23T11:58:20Z", "closed_at": "2019-08-23T11:58:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using `mongomock==3.9.0`\r\nTake a model declaration that looks like:\r\n```python\r\nclass Flower(Document):\r\n    meta = {\r\n        'indexes': [\r\n            'name',\r\n            'email',\r\n            {'fields': ['email', 'tree'], 'unique': True},\r\n        ],\r\n    }\r\n    name = StringField(required=True)\r\n    email = StringField(required=True)\r\n    tree = ReferenceField(Tree, required=True, reverse_delete_rule=CASCADE)\r\n    created_at = DateTimeField(default=datetime.datetime.utcnow)\r\n```\r\nand two objects like\r\n```python\r\nfirst = Flower(name='First', email='first@flower.net', tree=some_tree).save()\r\nsecond = Flower(name='Second', email='second@flower.net', tree=some_tree).save()\r\n```\r\nDoing \r\n```python\r\nthird = Flower(name='Third', email='second@flower.net', tree=some_tree).save()\r\n```\r\ncorrectly throws `*** mongoengine.errors.NotUniqueError: Tried to save duplicate unique keys (E11000 Duplicate Key Error)`\r\n*But* the following works:\r\n```python\r\nsecond.update(email=first.email, tree=first.tree)\r\n```\r\nwhen it should throw a `NotUniqueError` instead.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/543", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/543/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/543/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/543/events", "html_url": "https://github.com/mongomock/mongomock/issues/543", "id": 460184113, "node_id": "MDU6SXNzdWU0NjAxODQxMTM=", "number": 543, "title": "$all doesn't work", "user": {"login": "hpx7", "id": 5400947, "node_id": "MDQ6VXNlcjU0MDA5NDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5400947?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpx7", "html_url": "https://github.com/hpx7", "followers_url": "https://api.github.com/users/hpx7/followers", "following_url": "https://api.github.com/users/hpx7/following{/other_user}", "gists_url": "https://api.github.com/users/hpx7/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpx7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpx7/subscriptions", "organizations_url": "https://api.github.com/users/hpx7/orgs", "repos_url": "https://api.github.com/users/hpx7/repos", "events_url": "https://api.github.com/users/hpx7/events{/privacy}", "received_events_url": "https://api.github.com/users/hpx7/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-25T03:00:53Z", "updated_at": "2019-07-01T08:50:33Z", "closed_at": "2019-07-01T08:50:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Repro:\r\n```\r\ndb = mongomock.MongoClient().db.collection\r\ndb.collection.insert_one({\r\n   \"code\": \"ijk\",\r\n   \"tags\": [ \"electronics\", \"school\" ],\r\n   \"qty\": [\r\n          { \"size\": \"M\", \"num\": 100, \"color\": \"green\" }\r\n        ]\r\n})\r\ndb.collection.insert_one({\r\n   \"code\": \"efg\",\r\n   \"tags\": [ \"school\", \"book\" ],\r\n   \"qty\": [\r\n          { \"size\": \"S\", \"num\": 10, \"color\": \"blue\" },\r\n          { \"size\": \"M\", \"num\": 100, \"color\": \"blue\" },\r\n          { \"size\": \"L\", \"num\": 100, \"color\": \"green\" }\r\n        ]\r\n})\r\nprint(db.collection.count_documents({\"qty.size\": {\"$all\": [\"M\",\"L\"]}})) # -> 0\r\nprint(db.collection.count_documents({\"$and\": [{\"qty.size\": \"M\"}, {\"qty.size\": \"L\"}]})) # -> 1\r\n```\r\n\r\nAccording to https://docs.mongodb.com/manual/reference/operator/query/all/ these should both print the same thing", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/542", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/542/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/542/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/542/events", "html_url": "https://github.com/mongomock/mongomock/issues/542", "id": 459964438, "node_id": "MDU6SXNzdWU0NTk5NjQ0Mzg=", "number": 542, "title": "tz_aware-ness broken in 3.17", "user": {"login": "languitar", "id": 1336287, "node_id": "MDQ6VXNlcjEzMzYyODc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1336287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/languitar", "html_url": "https://github.com/languitar", "followers_url": "https://api.github.com/users/languitar/followers", "following_url": "https://api.github.com/users/languitar/following{/other_user}", "gists_url": "https://api.github.com/users/languitar/gists{/gist_id}", "starred_url": "https://api.github.com/users/languitar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/languitar/subscriptions", "organizations_url": "https://api.github.com/users/languitar/orgs", "repos_url": "https://api.github.com/users/languitar/repos", "events_url": "https://api.github.com/users/languitar/events{/privacy}", "received_events_url": "https://api.github.com/users/languitar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-06-24T15:42:13Z", "updated_at": "2019-07-02T10:32:58Z", "closed_at": "2019-07-02T10:32:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "The `tz_aware` flag is not passed correctly from the `MongoClient` constructor to the `codec_options`. This worked before:\r\n\r\n```\r\nIn [7]: mongomock.MongoClient(tz_aware=True).codec_options.tz_aware                                                                                                                                                 \r\nOut[7]: False\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/541", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/541/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/541/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/541/events", "html_url": "https://github.com/mongomock/mongomock/issues/541", "id": 458888819, "node_id": "MDU6SXNzdWU0NTg4ODg4MTk=", "number": 541, "title": "Please release the newest version to pypa", "user": {"login": "epicfaace", "id": 1689183, "node_id": "MDQ6VXNlcjE2ODkxODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1689183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/epicfaace", "html_url": "https://github.com/epicfaace", "followers_url": "https://api.github.com/users/epicfaace/followers", "following_url": "https://api.github.com/users/epicfaace/following{/other_user}", "gists_url": "https://api.github.com/users/epicfaace/gists{/gist_id}", "starred_url": "https://api.github.com/users/epicfaace/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/epicfaace/subscriptions", "organizations_url": "https://api.github.com/users/epicfaace/orgs", "repos_url": "https://api.github.com/users/epicfaace/repos", "events_url": "https://api.github.com/users/epicfaace/events{/privacy}", "received_events_url": "https://api.github.com/users/epicfaace/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-20T21:21:30Z", "updated_at": "2019-06-21T15:43:59Z", "closed_at": "2019-06-21T15:43:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Otherwise, I'm getting errors like the one in https://github.com/mongomock/mongomock/issues/511.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/540", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/540/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/540/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/540/events", "html_url": "https://github.com/mongomock/mongomock/issues/540", "id": 457497764, "node_id": "MDU6SXNzdWU0NTc0OTc3NjQ=", "number": 540, "title": "sort() with empty list works with mongomock but not with pymongo.", "user": {"login": "DusanMadar", "id": 1886585, "node_id": "MDQ6VXNlcjE4ODY1ODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1886585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DusanMadar", "html_url": "https://github.com/DusanMadar", "followers_url": "https://api.github.com/users/DusanMadar/followers", "following_url": "https://api.github.com/users/DusanMadar/following{/other_user}", "gists_url": "https://api.github.com/users/DusanMadar/gists{/gist_id}", "starred_url": "https://api.github.com/users/DusanMadar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DusanMadar/subscriptions", "organizations_url": "https://api.github.com/users/DusanMadar/orgs", "repos_url": "https://api.github.com/users/DusanMadar/repos", "events_url": "https://api.github.com/users/DusanMadar/events{/privacy}", "received_events_url": "https://api.github.com/users/DusanMadar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-06-18T13:55:35Z", "updated_at": "2019-06-19T07:35:41Z", "closed_at": "2019-06-18T22:21:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "`cursor.sort([])` does not raise `ValueError(\"key_or_list must not be the empty list\")` with `mongomock` but it does with `pymongo`.\r\n\r\nTests with the code below pass with `mongomock`\r\n```\r\nmongo_client = mongomock.MongoClient()\r\nsorting = []\r\ncursor = mongo_client.db.collection.sort(sorting)\r\n```\r\n\r\nBut with `pymongo` I have to do\r\n```\r\nmongo_client = mongomock.MongoClient()\r\ncursor = mongo_client.db.collection\r\nsorting = []\r\nif sorting:\r\n    cursor = cursor.sorting(sorting)\r\n```\r\n\r\nVersions:\r\nPython 3.6.7\r\nMongoDB 4.0.3\r\nmongomock==3.16.0\r\npymongo==3.8.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/539", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/539/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/539/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/539/events", "html_url": "https://github.com/mongomock/mongomock/issues/539", "id": 453663362, "node_id": "MDU6SXNzdWU0NTM2NjMzNjI=", "number": 539, "title": "Find on an array containing embedded documents does not return results.", "user": {"login": "bmckalla", "id": 9140701, "node_id": "MDQ6VXNlcjkxNDA3MDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9140701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmckalla", "html_url": "https://github.com/bmckalla", "followers_url": "https://api.github.com/users/bmckalla/followers", "following_url": "https://api.github.com/users/bmckalla/following{/other_user}", "gists_url": "https://api.github.com/users/bmckalla/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmckalla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmckalla/subscriptions", "organizations_url": "https://api.github.com/users/bmckalla/orgs", "repos_url": "https://api.github.com/users/bmckalla/repos", "events_url": "https://api.github.com/users/bmckalla/events{/privacy}", "received_events_url": "https://api.github.com/users/bmckalla/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-06-07T19:34:39Z", "updated_at": "2019-06-08T07:30:34Z", "closed_at": "2019-06-08T07:30:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider the following document structure in the \"payment\" collection:\r\n\r\n```\r\n{\r\n    'payment_id': {\r\n         'id': 'abdc-1234-faf4',\r\n         'type': 2\r\n         'version': 'v1'\r\n    },\r\n    'payment_overview': {\r\n        'paid_goods_reference': [\r\n            {'id': 'abcd-34f3-fdaf, 'type': 3, 'version': 'v1'},\r\n        ]\r\n     }\r\n```\r\n\r\nPerforming this function via the mongo client/collection:\r\n\r\n```\r\nresult_set = payment_collection.find({'payment_overview.paid_goods_reference' : {'id': 'abcd-34f3-fdaf, 'type': 3, 'version': 'v1'}})\r\n```\r\n\r\nUsing an actual mongo instance returns the given payment in the result set. Using mongomock does not. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/537", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/537/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/537/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/537/events", "html_url": "https://github.com/mongomock/mongomock/issues/537", "id": 450904765, "node_id": "MDU6SXNzdWU0NTA5MDQ3NjU=", "number": 537, "title": "Collection.with_options only accepts kwargs", "user": {"login": "nathan-steyer", "id": 25715469, "node_id": "MDQ6VXNlcjI1NzE1NDY5", "avatar_url": "https://avatars0.githubusercontent.com/u/25715469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathan-steyer", "html_url": "https://github.com/nathan-steyer", "followers_url": "https://api.github.com/users/nathan-steyer/followers", "following_url": "https://api.github.com/users/nathan-steyer/following{/other_user}", "gists_url": "https://api.github.com/users/nathan-steyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathan-steyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathan-steyer/subscriptions", "organizations_url": "https://api.github.com/users/nathan-steyer/orgs", "repos_url": "https://api.github.com/users/nathan-steyer/repos", "events_url": "https://api.github.com/users/nathan-steyer/events{/privacy}", "received_events_url": "https://api.github.com/users/nathan-steyer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-05-31T17:30:36Z", "updated_at": "2019-06-08T07:10:21Z", "closed_at": "2019-06-08T07:10:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have some code that calls `with_options` with the codec options as a positional arg\r\n```python\r\noptions = CodecOptions(tz_aware=True)\r\nmodified_collection = collection.with_options(options)\r\n```\r\nwhich works for pymongo since the method definition lists out the supported kwargs, but not for mongomock since it doesn't. Minor, I know, but ideally it should work in mongomock", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/533", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/533/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/533/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/533/events", "html_url": "https://github.com/mongomock/mongomock/issues/533", "id": 447808920, "node_id": "MDU6SXNzdWU0NDc4MDg5MjA=", "number": 533, "title": "BulkWriteError doesn't correctly support ordered=False", "user": {"login": "danielcrisp", "id": 1104814, "node_id": "MDQ6VXNlcjExMDQ4MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1104814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielcrisp", "html_url": "https://github.com/danielcrisp", "followers_url": "https://api.github.com/users/danielcrisp/followers", "following_url": "https://api.github.com/users/danielcrisp/following{/other_user}", "gists_url": "https://api.github.com/users/danielcrisp/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielcrisp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielcrisp/subscriptions", "organizations_url": "https://api.github.com/users/danielcrisp/orgs", "repos_url": "https://api.github.com/users/danielcrisp/repos", "events_url": "https://api.github.com/users/danielcrisp/events{/privacy}", "received_events_url": "https://api.github.com/users/danielcrisp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-05-23T18:25:26Z", "updated_at": "2019-05-24T07:58:15Z", "closed_at": "2019-05-24T07:30:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm working around mongoengine's lack of support for `insert_many` with `ordered=False` by doing this to get to the underlying pyMongo collection:\r\n\r\n```python\r\ndoc_list = [doc.to_mongo() for doc in me_doc_list]\r\n\r\ntry:\r\n    DocClass._get_collection().insert_many(doc_list, ordered=False)\r\nexcept BulkWriteError as bwe:\r\n    print(bwe.details)\r\n```\r\n\r\nHowever I'm getting unexpected results in my mongomock test. Essentially, if I try to insert multiple documents whose unique keys are already present in the mocked database I get a `BulkWriteError` but it only includes the details of the first document.\r\n\r\nWith `ordered=False` I'd expect to get `writeError` info for every duplicate document.\r\n\r\nI wondered if by calling the protected `_get_collection()` method I'm somehow bypassing some essential part of the mocking?\r\n\r\nI'll provide an example tomorrow.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/532", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/532/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/532/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/532/events", "html_url": "https://github.com/mongomock/mongomock/issues/532", "id": 447288431, "node_id": "MDU6SXNzdWU0NDcyODg0MzE=", "number": 532, "title": "findOneAndUpdate with return new document is not atomic", "user": {"login": "Downchuck", "id": 141466, "node_id": "MDQ6VXNlcjE0MTQ2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/141466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Downchuck", "html_url": "https://github.com/Downchuck", "followers_url": "https://api.github.com/users/Downchuck/followers", "following_url": "https://api.github.com/users/Downchuck/following{/other_user}", "gists_url": "https://api.github.com/users/Downchuck/gists{/gist_id}", "starred_url": "https://api.github.com/users/Downchuck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Downchuck/subscriptions", "organizations_url": "https://api.github.com/users/Downchuck/orgs", "repos_url": "https://api.github.com/users/Downchuck/repos", "events_url": "https://api.github.com/users/Downchuck/events{/privacy}", "received_events_url": "https://api.github.com/users/Downchuck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-22T18:46:14Z", "updated_at": "2019-05-22T18:47:46Z", "closed_at": "2019-05-22T18:47:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using findOneAndUpdate with returnNewDocument may return the current version of a document as updated by another call - it should return the document as modified by the current request.\r\n\r\nWe noticed this using $inc of 1 for a sequence. Sometimes it would return the same value, as the returnNewDocument is likely waiting till the next event loop.\r\n\r\nSo this presently breaks the ability to mock auto increment.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/531", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/531/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/531/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/531/events", "html_url": "https://github.com/mongomock/mongomock/issues/531", "id": 445968893, "node_id": "MDU6SXNzdWU0NDU5Njg4OTM=", "number": 531, "title": "Sorting on DictField generates an error", "user": {"login": "LaundroMat", "id": 42320, "node_id": "MDQ6VXNlcjQyMzIw", "avatar_url": "https://avatars1.githubusercontent.com/u/42320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LaundroMat", "html_url": "https://github.com/LaundroMat", "followers_url": "https://api.github.com/users/LaundroMat/followers", "following_url": "https://api.github.com/users/LaundroMat/following{/other_user}", "gists_url": "https://api.github.com/users/LaundroMat/gists{/gist_id}", "starred_url": "https://api.github.com/users/LaundroMat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LaundroMat/subscriptions", "organizations_url": "https://api.github.com/users/LaundroMat/orgs", "repos_url": "https://api.github.com/users/LaundroMat/repos", "events_url": "https://api.github.com/users/LaundroMat/events{/privacy}", "received_events_url": "https://api.github.com/users/LaundroMat/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-05-20T07:46:25Z", "updated_at": "2019-05-22T09:30:37Z", "closed_at": "2019-05-22T09:30:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a Document containing a DictField:\r\n\r\n    class Box(DynamicDocument):\r\n        ...\r\n        location = mongoengine.DictField(required=True)  \r\n        ...\r\n        meta = {\r\n            'ordering': ['location']\r\n        }\r\n\r\nIn production, calling e.g. `Box.objects.count()` works fine, but when testing and using pymongo, I'm getting this error:\r\n\r\n    def _get_dataset(self, spec, sort, fields, as_class):\r\n        dataset = self._iter_documents(spec)\r\n        if sort:\r\n            for sort_key, sort_direction in reversed(sort):\r\n                if sort_key == '$natural':\r\n                    if sort_direction < 0:\r\n                        dataset = iter(reversed(list(dataset)))\r\n                    continue\r\n                dataset = iter(sorted(\r\n                    dataset, key=lambda x: resolve_sort_key(sort_key, x),\r\n                   reverse=sort_direction < 0))\r\n                 \r\n    E TypeError: '<' not supported between instances of 'dict' and 'dict'\r\n\r\n\r\nIs this a bug in pymongo?\r\n\r\n(FWIW, I fixed this by adding a class property that calculates a string based on the location dict. The queryset ordering is based on that property. I just wanted to mention this behaviour in case it's a bug).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/530", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/530/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/530/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/530/events", "html_url": "https://github.com/mongomock/mongomock/issues/530", "id": 445223063, "node_id": "MDU6SXNzdWU0NDUyMjMwNjM=", "number": 530, "title": "No testable archive available", "user": {"login": "jayvdb", "id": 15092, "node_id": "MDQ6VXNlcjE1MDky", "avatar_url": "https://avatars1.githubusercontent.com/u/15092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayvdb", "html_url": "https://github.com/jayvdb", "followers_url": "https://api.github.com/users/jayvdb/followers", "following_url": "https://api.github.com/users/jayvdb/following{/other_user}", "gists_url": "https://api.github.com/users/jayvdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayvdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayvdb/subscriptions", "organizations_url": "https://api.github.com/users/jayvdb/orgs", "repos_url": "https://api.github.com/users/jayvdb/repos", "events_url": "https://api.github.com/users/jayvdb/events{/privacy}", "received_events_url": "https://api.github.com/users/jayvdb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-05-17T01:21:53Z", "updated_at": "2019-06-01T08:43:56Z", "closed_at": "2019-06-01T08:43:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "PyPI only has wheels, without tests.\r\n\r\nWhen I attempt to use the GitHub tag archive tarballs, pbr complains that it isnt a versioned sdist:\r\n\r\n```py\r\n$ python setup.py build\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/pbr/core.py\", line 96, in pbr\r\n    attrs = util.cfg_to_args(path, dist.script_args)\r\n  File \"/usr/lib/python3.7/site-packages/pbr/util.py\", line 256, in cfg_to_args\r\n    pbr.hooks.setup_hook(config)\r\n  File \"/usr/lib/python3.7/site-packages/pbr/hooks/__init__.py\", line 25, in setup_hook\r\n    metadata_config.run()\r\n  File \"/usr/lib/python3.7/site-packages/pbr/hooks/base.py\", line 27, in run\r\n    self.hook()\r\n  File \"/usr/lib/python3.7/site-packages/pbr/hooks/metadata.py\", line 26, in hook\r\n    self.config['name'], self.config.get('version', None))\r\n  File \"/usr/lib/python3.7/site-packages/pbr/packaging.py\", line 849, in get_version\r\n    name=package_name))\r\nException: Versioning for this project requires either an sdist tarball, or access to an upstream git repository. It's also possible that there is a mismatch between the package name in setup.cfg and the argument given to pbr.version.VersionInfo. Project name mongomock was given, but was not able to be found.\r\nerror in setup command: Error parsing /tmp/4ia8nh44/mongomock-3.14.0/setup.cfg: Exception: Versioning for this project requires either an sdist tarball, or access to an upstream git repository. It's also possible that there is a mismatch between the package name in setup.cfg and the argument given to pbr.version.VersionInfo. Project name mongomock was given, but was not able to be found.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/529", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/529/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/529/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/529/events", "html_url": "https://github.com/mongomock/mongomock/issues/529", "id": 443915603, "node_id": "MDU6SXNzdWU0NDM5MTU2MDM=", "number": 529, "title": "$pull with $in fails in mock", "user": {"login": "ymoran00", "id": 1379619, "node_id": "MDQ6VXNlcjEzNzk2MTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1379619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymoran00", "html_url": "https://github.com/ymoran00", "followers_url": "https://api.github.com/users/ymoran00/followers", "following_url": "https://api.github.com/users/ymoran00/following{/other_user}", "gists_url": "https://api.github.com/users/ymoran00/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymoran00/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymoran00/subscriptions", "organizations_url": "https://api.github.com/users/ymoran00/orgs", "repos_url": "https://api.github.com/users/ymoran00/repos", "events_url": "https://api.github.com/users/ymoran00/events{/privacy}", "received_events_url": "https://api.github.com/users/ymoran00/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-05-14T13:28:01Z", "updated_at": "2019-05-17T07:41:24Z", "closed_at": "2019-05-17T07:41:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've tried the following:\r\n`db.collection.update({}, {'$pull': {'arr': {'$in': ['a1']}}})`\r\nThis for a collection with documents in the form:\r\n`{\r\n        \"b\": 0,\r\n        \"arr\": [\r\n            \"a1\",\r\n            \"a2\"\r\n        ]\r\n    }`\r\nIt's suppoed to the delete the 'a1' list item, but when using the mock I get:\r\n`pymongo.errors.OperationFailure: unknown top level operator: $in`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/527", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/527/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/527/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/527/events", "html_url": "https://github.com/mongomock/mongomock/issues/527", "id": 441084070, "node_id": "MDU6SXNzdWU0NDEwODQwNzA=", "number": 527, "title": "aggregate function with '$out' parameter fails if no rows returned from $match stage", "user": {"login": "icohen88", "id": 31587842, "node_id": "MDQ6VXNlcjMxNTg3ODQy", "avatar_url": "https://avatars0.githubusercontent.com/u/31587842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/icohen88", "html_url": "https://github.com/icohen88", "followers_url": "https://api.github.com/users/icohen88/followers", "following_url": "https://api.github.com/users/icohen88/following{/other_user}", "gists_url": "https://api.github.com/users/icohen88/gists{/gist_id}", "starred_url": "https://api.github.com/users/icohen88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/icohen88/subscriptions", "organizations_url": "https://api.github.com/users/icohen88/orgs", "repos_url": "https://api.github.com/users/icohen88/repos", "events_url": "https://api.github.com/users/icohen88/events{/privacy}", "received_events_url": "https://api.github.com/users/icohen88/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-07T07:36:06Z", "updated_at": "2019-05-07T20:52:12Z", "closed_at": "2019-05-07T20:52:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "aggregate function with '$out' parameter fails if no rows returned from $match stage\r\n\r\nAssume we have an empty collection 'colc', and we run the next code:\r\n```python\r\ncolc.aggregate([\r\n\t\t{'$match': {}},\r\n\t\t{'$out': 'out_colc'}\r\n\t])\r\n```\r\nSo mongomock will raise the next exception:\r\n```    raise TypeError('documents must be a non-empty list')\r\nTypeError: documents must be a non-empty list\r\n```\r\n\r\nAlthough this is not the behavior in real mongo, which won't fail for that.\r\n\r\nIn order to fix that, need to check in `mongomock.aggregate._handle_out_stage` that `in_collection` is not empty, before using `insert_many`.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/526", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/526/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/526/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/526/events", "html_url": "https://github.com/mongomock/mongomock/issues/526", "id": 440673746, "node_id": "MDU6SXNzdWU0NDA2NzM3NDY=", "number": 526, "title": "Error when trying to use gridfs", "user": {"login": "JarnoRFB", "id": 8550270, "node_id": "MDQ6VXNlcjg1NTAyNzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/8550270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JarnoRFB", "html_url": "https://github.com/JarnoRFB", "followers_url": "https://api.github.com/users/JarnoRFB/followers", "following_url": "https://api.github.com/users/JarnoRFB/following{/other_user}", "gists_url": "https://api.github.com/users/JarnoRFB/gists{/gist_id}", "starred_url": "https://api.github.com/users/JarnoRFB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JarnoRFB/subscriptions", "organizations_url": "https://api.github.com/users/JarnoRFB/orgs", "repos_url": "https://api.github.com/users/JarnoRFB/repos", "events_url": "https://api.github.com/users/JarnoRFB/events{/privacy}", "received_events_url": "https://api.github.com/users/JarnoRFB/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-06T12:23:05Z", "updated_at": "2020-06-30T10:20:19Z", "closed_at": "2019-08-29T08:36:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "From what I have read in #311 seems to be somehow there, but some people still encounter errors. I tried to use the gridfs integration like\r\n```python\r\nimport gridfs\r\nfrom mongomock.gridfs import enable_gridfs_integration\r\nenable_gridfs_integration()\r\n\r\nclient = mongomock.MongoClient()\r\ndb = client.db\r\nruns = db.runs\r\nmetrics = db.metrics\r\nfs = gridfs.GridFS(db)\r\n```\r\n\r\nHowever, then I get the error\r\n\r\n```python\r\n../../../venv/lib/python3.5/site-packages/gridfs/__init__.py:65: in __init__\r\n    database = _clear_entity_type_registry(database)\r\n../../../venv/lib/python3.5/site-packages/gridfs/grid_file.py:103: in _clear_entity_type_registry\r\n    codecopts = entity.codec_options.with_options(type_registry=None)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = Collection(Database(mongomock.MongoClient('localhost', 27721), 'db'), 'codec_options')\r\nkwargs = {'type_registry': None}, forbidden_kwargs = set()\r\n\r\n    def with_options(self, **kwargs):\r\n        forbidden_kwargs = set(kwargs.keys()) - set(_WITH_OPTIONS_KWARGS)\r\n        if forbidden_kwargs:\r\n            raise TypeError(\r\n>               \"with_options() got an unexpected keyword argument '%s'\" % forbidden_kwargs.pop())\r\nE           TypeError: with_options() got an unexpected keyword argument 'type_registry'\r\n```\r\n\r\nIs there any way around this? I am using mongomock version 3.16 and Python 3.5. Thanks in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/519", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/519/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/519/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/519/events", "html_url": "https://github.com/mongomock/mongomock/issues/519", "id": 438219616, "node_id": "MDU6SXNzdWU0MzgyMTk2MTY=", "number": 519, "title": "[Feature request] Add $facet aggregation operator pipeline", "user": {"login": "Joachim-Hease", "id": 49161409, "node_id": "MDQ6VXNlcjQ5MTYxNDA5", "avatar_url": "https://avatars2.githubusercontent.com/u/49161409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Joachim-Hease", "html_url": "https://github.com/Joachim-Hease", "followers_url": "https://api.github.com/users/Joachim-Hease/followers", "following_url": "https://api.github.com/users/Joachim-Hease/following{/other_user}", "gists_url": "https://api.github.com/users/Joachim-Hease/gists{/gist_id}", "starred_url": "https://api.github.com/users/Joachim-Hease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Joachim-Hease/subscriptions", "organizations_url": "https://api.github.com/users/Joachim-Hease/orgs", "repos_url": "https://api.github.com/users/Joachim-Hease/repos", "events_url": "https://api.github.com/users/Joachim-Hease/events{/privacy}", "received_events_url": "https://api.github.com/users/Joachim-Hease/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352860, "node_id": "MDU6TGFiZWwxMzUyODYw", "url": "https://api.github.com/repos/mongomock/mongomock/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": "Reporting a feature that is missing from mongomock."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-29T09:15:10Z", "updated_at": "2019-09-17T06:49:49Z", "closed_at": "2019-09-17T06:49:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello ! \r\n\r\nThank for the awesome project. I am currently using it for one of my projects (Mongo 3.4 Mongomock 3.16.0) and I am facing the following issue:\r\n\r\n```\r\nNotImplementedError: Although '$facet' is a valid operator for the aggregation pipeline, it is currently not implemented in Mongomock.\r\n``` \r\n\r\nIs it currently work in progress ?\r\n\r\nI also use other operator. Have you a list of supported aggregate operator ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/518", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/518/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/518/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/518/events", "html_url": "https://github.com/mongomock/mongomock/issues/518", "id": 437752384, "node_id": "MDU6SXNzdWU0Mzc3NTIzODQ=", "number": 518, "title": "$eq and $ne behaviour is different from Mongo for array fields", "user": {"login": "NazarTopolsky", "id": 7715385, "node_id": "MDQ6VXNlcjc3MTUzODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/7715385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NazarTopolsky", "html_url": "https://github.com/NazarTopolsky", "followers_url": "https://api.github.com/users/NazarTopolsky/followers", "following_url": "https://api.github.com/users/NazarTopolsky/following{/other_user}", "gists_url": "https://api.github.com/users/NazarTopolsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/NazarTopolsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NazarTopolsky/subscriptions", "organizations_url": "https://api.github.com/users/NazarTopolsky/orgs", "repos_url": "https://api.github.com/users/NazarTopolsky/repos", "events_url": "https://api.github.com/users/NazarTopolsky/events{/privacy}", "received_events_url": "https://api.github.com/users/NazarTopolsky/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-04-26T16:31:51Z", "updated_at": "2019-04-29T23:05:14Z", "closed_at": "2019-04-29T23:05:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "In MongoDB, it is possible to test if array field contains some value by using following query: `{\"array\": \"value\"}`.\r\n\r\nhttps://docs.mongodb.com/manual/reference/operator/query/eq/#array-element-equals-a-value\r\n\r\n>**Array Element Equals a Value**\r\nThe following example queries the inventory collection to select all documents where the tags array contains an element with the value \"B\" [1]:\r\n`db.inventory.find( { tags: { $eq: \"B\" } } )`\r\nThe query is equivalent to:\r\n`db.inventory.find( { tags: \"B\" } )`\r\nBoth queries match the following documents:\r\n`{ _id: 1, item: { name: \"ab\", code: \"123\" }, qty: 15, tags: [ \"A\", \"B\", \"C\" ] }`\r\n`{ _id: 2, item: { name: \"cd\", code: \"123\" }, qty: 20, tags: [ \"B\" ] }`\r\n`{ _id: 3, item: { name: \"ij\", code: \"456\" }, qty: 25, tags: [ \"A\", \"B\" ] }`\r\n`{ _id: 4, item: { name: \"xy\", code: \"456\" }, qty: 30, tags: [ \"B\", \"A\" ] }`\r\n\r\n\r\nSo, the aforementioned query would match a document like `{\"_id\": 1, \"array\": [\"value\", \"another value\"]}`.\r\n\r\nDocs don't explicitly state that `$ne` behaves similarly, but, in practice, I noticed that it does, and it would make sense since the operators are counterparts of each other.\r\n\r\nhttps://docs.mongodb.com/manual/reference/operator/query/ne/\r\n\r\nThis issue has been previously reported in #323 and was closed, but I was able to reproduce it under mongomock 3.16.0, so maybe it's a regression?\r\n\r\nAdding a piece of code to reproduce. Using regular `MongoClient` against a real database, these tests work, but with mongomock they fail.\r\n\r\n```python\r\nimport mongomock\r\n\r\n\r\ndef test_eq_array():\r\n    client = mongomock.MongoClient()\r\n    collection = client.test_db.test_collection\r\n    collection.insert_one({'_id': 1, 'array_field': [1]})\r\n    query = {'array_field': {'$eq': 1}}  # {'array_field' : 1} would work similarly to explicit $eq\r\n    matching_documents = collection.find(query)\r\n    assert matching_documents[0]['_id'] == 1\r\n\r\n\r\ndef test_ne_array():\r\n    client = mongomock.MongoClient()\r\n    collection = client.test_db.test_collection\r\n    collection.insert_one({'_id': 1, 'array_field': [1]})\r\n    query = {'array_field': {'$ne': 1}}\r\n    matching_documents = collection.find(query)\r\n    assert list(matching_documents) == []\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/514", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/514/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/514/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/514/events", "html_url": "https://github.com/mongomock/mongomock/issues/514", "id": 432178830, "node_id": "MDU6SXNzdWU0MzIxNzg4MzA=", "number": 514, "title": "KeyError in aggregation", "user": {"login": "Lrcezimbra", "id": 7042915, "node_id": "MDQ6VXNlcjcwNDI5MTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/7042915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lrcezimbra", "html_url": "https://github.com/Lrcezimbra", "followers_url": "https://api.github.com/users/Lrcezimbra/followers", "following_url": "https://api.github.com/users/Lrcezimbra/following{/other_user}", "gists_url": "https://api.github.com/users/Lrcezimbra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lrcezimbra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lrcezimbra/subscriptions", "organizations_url": "https://api.github.com/users/Lrcezimbra/orgs", "repos_url": "https://api.github.com/users/Lrcezimbra/repos", "events_url": "https://api.github.com/users/Lrcezimbra/events{/privacy}", "received_events_url": "https://api.github.com/users/Lrcezimbra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-11T18:42:22Z", "updated_at": "2019-04-28T20:24:43Z", "closed_at": "2019-04-28T20:24:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have an aggregate working with pymongo + MongoDB, but not working when I use with mongomock:\r\n```\r\nself.aggregate(\r\n    {'$group': {\r\n        '_id': {\r\n            'key1': '$key1',\r\n            'key2': '$key2',\r\n            'key3': '$key3',\r\n        },\r\n        'my_keys': {'$addToSet': '$my_key'}\r\n    }},\r\n)\r\n```\r\n\r\nError:\r\n```\r\n    def get_value_by_dot(doc, key, can_generate_array=False):\r\n        \"\"\"Get dictionary value using dotted key\"\"\"\r\n        result = doc\r\n        key_items = key.split('.')\r\n        for key_index, key_item in enumerate(key_items):\r\n            if isinstance(result, dict):\r\n>               result = result[key_item]\r\nE               KeyError: 'my_key'\r\n\r\n.venv/lib/python3.6/site-packages/mongomock/helpers.py:318: KeyError\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/512", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/512/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/512/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/512/events", "html_url": "https://github.com/mongomock/mongomock/issues/512", "id": 428092508, "node_id": "MDU6SXNzdWU0MjgwOTI1MDg=", "number": 512, "title": "create_collection", "user": {"login": "ilias-ant", "id": 42189572, "node_id": "MDQ6VXNlcjQyMTg5NTcy", "avatar_url": "https://avatars0.githubusercontent.com/u/42189572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilias-ant", "html_url": "https://github.com/ilias-ant", "followers_url": "https://api.github.com/users/ilias-ant/followers", "following_url": "https://api.github.com/users/ilias-ant/following{/other_user}", "gists_url": "https://api.github.com/users/ilias-ant/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilias-ant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilias-ant/subscriptions", "organizations_url": "https://api.github.com/users/ilias-ant/orgs", "repos_url": "https://api.github.com/users/ilias-ant/repos", "events_url": "https://api.github.com/users/ilias-ant/events{/privacy}", "received_events_url": "https://api.github.com/users/ilias-ant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-02T08:34:55Z", "updated_at": "2019-04-02T08:37:14Z", "closed_at": "2019-04-02T08:35:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "please ignore or delete. it was created by mistake", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/511", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/511/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/511/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/511/events", "html_url": "https://github.com/mongomock/mongomock/issues/511", "id": 426922436, "node_id": "MDU6SXNzdWU0MjY5MjI0MzY=", "number": 511, "title": "mongomock.patch from the README fails", "user": {"login": "ikhlestov", "id": 9900548, "node_id": "MDQ6VXNlcjk5MDA1NDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/9900548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikhlestov", "html_url": "https://github.com/ikhlestov", "followers_url": "https://api.github.com/users/ikhlestov/followers", "following_url": "https://api.github.com/users/ikhlestov/following{/other_user}", "gists_url": "https://api.github.com/users/ikhlestov/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikhlestov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikhlestov/subscriptions", "organizations_url": "https://api.github.com/users/ikhlestov/orgs", "repos_url": "https://api.github.com/users/ikhlestov/repos", "events_url": "https://api.github.com/users/ikhlestov/events{/privacy}", "received_events_url": "https://api.github.com/users/ikhlestov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-29T10:37:38Z", "updated_at": "2019-04-16T12:49:31Z", "closed_at": "2019-04-16T12:49:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "while executing simple snippet from the README:\r\n\r\n```python\r\nimport mongomock\r\nimport pymongo\r\n\r\n\r\n@mongomock.patch(servers=(('localhost', 27017),))\r\ndef test_increate_votes_endpoint():\r\n    objects = [dict(votes=1), dict(votes=2), ...]\r\n    client = pymongo.MongoClient('localhost')\r\n    client.db.collection.insert_many(objects)\r\n    call_endpoint('/votes')\r\n```\r\n\r\nI've got the following error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"fail_mongomock.py\", line 5, in <module>\r\n    @mongomock.patch(servers=(('localhost', 27017),))\r\n  File \"/Users/illarionkhliestov/Projects/mongomock_fail/.venv/lib/python3.6/site-packages/mongomock/patch.py\", line 67, in patch\r\n    parsed_servers.update(_parse_any_host(server))\r\n  File \"/Users/illarionkhliestov/Projects/mongomock_fail/.venv/lib/python3.6/site-packages/mongomock/patch.py\", line 26, in _parse_any_host\r\n    return split_hosts(host)\r\n  File \"/Users/illarionkhliestov/Projects/mongomock_fail/.venv/lib/python3.6/site-packages/pymongo/uri_parser.py\", line 252, in split_hosts\r\n    for entity in hosts.split(','):\r\nAttributeError: 'tuple' object has no attribute 'split'\r\n```\r\n\r\nmy test env is:\r\n\r\n```\r\nPython 3.6.7 (default, Feb  7 2019, 18:06:27)\r\n[GCC 4.2.1 Compatible Apple LLVM 10.0.0 (clang-1000.10.44.4)] on darwin\r\nmongomock==3.16.0\r\npymongo==3.7.2\r\nsentinels==1.0.0\r\nsix==1.12.0\r\n```\r\n\r\nAfter brief debugging, it seems that [split_hosts](https://github.com/mongomock/mongomock/blob/develop/mongomock/patch.py#L26) method should be called not with tuple argument (hosts, port), but with extracted arguments like `split_hosts(*host)`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/508", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/508/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/508/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/508/events", "html_url": "https://github.com/mongomock/mongomock/issues/508", "id": 421931172, "node_id": "MDU6SXNzdWU0MjE5MzExNzI=", "number": 508, "title": "'list_database_names' in mongo client is not supported", "user": {"login": "boxmansf", "id": 20337439, "node_id": "MDQ6VXNlcjIwMzM3NDM5", "avatar_url": "https://avatars0.githubusercontent.com/u/20337439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boxmansf", "html_url": "https://github.com/boxmansf", "followers_url": "https://api.github.com/users/boxmansf/followers", "following_url": "https://api.github.com/users/boxmansf/following{/other_user}", "gists_url": "https://api.github.com/users/boxmansf/gists{/gist_id}", "starred_url": "https://api.github.com/users/boxmansf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boxmansf/subscriptions", "organizations_url": "https://api.github.com/users/boxmansf/orgs", "repos_url": "https://api.github.com/users/boxmansf/repos", "events_url": "https://api.github.com/users/boxmansf/events{/privacy}", "received_events_url": "https://api.github.com/users/boxmansf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-03-17T14:42:39Z", "updated_at": "2019-03-19T18:44:39Z", "closed_at": "2019-03-19T18:44:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a new function that was added in pymongo 3.6\r\nhttp://api.mongodb.com/python/current/api/pymongo/mongo_client.html#pymongo.mongo_client.MongoClient.list_database_names\r\n\r\n(The currently existing 'database_names' function is deprecated)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/507", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/507/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/507/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/507/events", "html_url": "https://github.com/mongomock/mongomock/issues/507", "id": 421906257, "node_id": "MDU6SXNzdWU0MjE5MDYyNTc=", "number": 507, "title": "Implement '$setUnion' in the aggregation", "user": {"login": "YuvalPruss", "id": 17891322, "node_id": "MDQ6VXNlcjE3ODkxMzIy", "avatar_url": "https://avatars3.githubusercontent.com/u/17891322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YuvalPruss", "html_url": "https://github.com/YuvalPruss", "followers_url": "https://api.github.com/users/YuvalPruss/followers", "following_url": "https://api.github.com/users/YuvalPruss/following{/other_user}", "gists_url": "https://api.github.com/users/YuvalPruss/gists{/gist_id}", "starred_url": "https://api.github.com/users/YuvalPruss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YuvalPruss/subscriptions", "organizations_url": "https://api.github.com/users/YuvalPruss/orgs", "repos_url": "https://api.github.com/users/YuvalPruss/repos", "events_url": "https://api.github.com/users/YuvalPruss/events{/privacy}", "received_events_url": "https://api.github.com/users/YuvalPruss/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352860, "node_id": "MDU6TGFiZWwxMzUyODYw", "url": "https://api.github.com/repos/mongomock/mongomock/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": "Reporting a feature that is missing from mongomock."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-17T10:28:47Z", "updated_at": "2019-03-20T21:09:04Z", "closed_at": "2019-03-20T21:09:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a mongo operation that includes the `$setUnion` pipeline operation in an aggregation operation. I received this error:\r\n\r\n    NotImplementedError: Although '$setUnion' is a valid set operator for the aggregation pipeline, it is currently not implemented in Mongomock.\r\n\r\nCan u implement this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/505", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/505/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/505/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/505/events", "html_url": "https://github.com/mongomock/mongomock/issues/505", "id": 418879392, "node_id": "MDU6SXNzdWU0MTg4NzkzOTI=", "number": 505, "title": "Problem with $or in 3.15.0 but not 3.14.0", "user": {"login": "finnhughes", "id": 6408429, "node_id": "MDQ6VXNlcjY0MDg0Mjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6408429?v=4", "gravatar_id": "", "url": "https://api.github.com/users/finnhughes", "html_url": "https://github.com/finnhughes", "followers_url": "https://api.github.com/users/finnhughes/followers", "following_url": "https://api.github.com/users/finnhughes/following{/other_user}", "gists_url": "https://api.github.com/users/finnhughes/gists{/gist_id}", "starred_url": "https://api.github.com/users/finnhughes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/finnhughes/subscriptions", "organizations_url": "https://api.github.com/users/finnhughes/orgs", "repos_url": "https://api.github.com/users/finnhughes/repos", "events_url": "https://api.github.com/users/finnhughes/events{/privacy}", "received_events_url": "https://api.github.com/users/finnhughes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-08T17:18:34Z", "updated_at": "2019-03-10T22:07:26Z", "closed_at": "2019-03-10T22:07:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n$ python2.7\r\nPython 2.7.16 (default, Mar  4 2019, 09:01:38)\r\n[GCC 4.2.1 Compatible Apple LLVM 10.0.0 (clang-1000.11.45.5)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import mongomock\r\n>>> db = mongomock.MongoClient().db\r\n>>> db.test.insert_one({'x': 1, 'y': 1, 'z': 1})\r\n<pymongo.results.InsertOneResult object at 0x1090b5368>\r\n>>> [x for x in db.test.find()]\r\n[{'y': 1, 'x': 1, 'z': 1, '_id': ObjectId('5c82a21324fb1674d1ebeb96')}]\r\n>>> [x for x in db.test.find({'$or': [{'x': 1}, {'y': 2}], 'z': 2})]\r\n[{'y': 1, 'x': 1, 'z': 1, '_id': ObjectId('5c82a21324fb1674d1ebeb96')}]\r\n>>> [x for x in db.test.find({'$or': [{'x': 2}, {'y': 2}], 'z': 2})]\r\n[]\r\n```\r\nAfter the `$or` condition my` 'z': 2` condition is ignored but only since 3.15.0\r\nAfter reverting to 3.14.0 with `pip install mongomock==3.14.0` I get my expected results:\r\n```\r\n>>> import mongomock\r\n>>> db = mongomock.MongoClient().db\r\n>>> db.test.insert_one({'x': 1, 'y': 1, 'z': 1})\r\n<pymongo.results.InsertOneResult object at 0x10e917fc8>\r\n>>> [x for x in db.test.find()]\r\n[{'y': 1, 'x': 1, 'z': 1, '_id': ObjectId('5c82a2bf24fb167549c94d7a')}]\r\n>>> [x for x in db.test.find({'$or': [{'x': 1}, {'y': 2}], 'z': 2})]\r\n[]\r\n>>> [x for x in db.test.find({'$or': [{'x': 2}, {'y': 2}], 'z': 2})]\r\n[]\r\n```\r\nAlso reproducible with python3.7", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/504", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/504/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/504/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/504/events", "html_url": "https://github.com/mongomock/mongomock/issues/504", "id": 416681248, "node_id": "MDU6SXNzdWU0MTY2ODEyNDg=", "number": 504, "title": "$project '_id' not working as expected", "user": {"login": "Ponewor", "id": 15972522, "node_id": "MDQ6VXNlcjE1OTcyNTIy", "avatar_url": "https://avatars3.githubusercontent.com/u/15972522?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ponewor", "html_url": "https://github.com/Ponewor", "followers_url": "https://api.github.com/users/Ponewor/followers", "following_url": "https://api.github.com/users/Ponewor/following{/other_user}", "gists_url": "https://api.github.com/users/Ponewor/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ponewor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ponewor/subscriptions", "organizations_url": "https://api.github.com/users/Ponewor/orgs", "repos_url": "https://api.github.com/users/Ponewor/repos", "events_url": "https://api.github.com/users/Ponewor/events{/privacy}", "received_events_url": "https://api.github.com/users/Ponewor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-04T08:18:17Z", "updated_at": "2019-03-13T19:15:54Z", "closed_at": "2019-03-13T19:15:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following test fails:\r\n```    def test__project_id(self):\r\n        self.cmp.do.remove()\r\n\r\n        data = [\r\n            {'_id': 4},\r\n            {'a': 5},\r\n            {}\r\n        ]\r\n        self.cmp.do.insert(data)\r\n\r\n        pipeline = [\r\n            {'$project': {'_id': 0}},\r\n        ]\r\n        self.cmp.compare_ignore_order.aggregate(pipeline)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/500", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/500/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/500/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/500/events", "html_url": "https://github.com/mongomock/mongomock/issues/500", "id": 411987770, "node_id": "MDU6SXNzdWU0MTE5ODc3NzA=", "number": 500, "title": "Support for max_time_ms in find()", "user": {"login": "orik123", "id": 8554183, "node_id": "MDQ6VXNlcjg1NTQxODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/8554183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orik123", "html_url": "https://github.com/orik123", "followers_url": "https://api.github.com/users/orik123/followers", "following_url": "https://api.github.com/users/orik123/following{/other_user}", "gists_url": "https://api.github.com/users/orik123/gists{/gist_id}", "starred_url": "https://api.github.com/users/orik123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orik123/subscriptions", "organizations_url": "https://api.github.com/users/orik123/orgs", "repos_url": "https://api.github.com/users/orik123/repos", "events_url": "https://api.github.com/users/orik123/events{/privacy}", "received_events_url": "https://api.github.com/users/orik123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-19T15:41:02Z", "updated_at": "2019-02-20T13:00:17Z", "closed_at": "2019-02-20T13:00:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm getting `find() got an unexpected keyword argument 'max_time_ms'` and I think adding `max_time_ms=None` to `def find()` would solve it easily as a first step, even without an actual implementation yet.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/499", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/499/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/499/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/499/events", "html_url": "https://github.com/mongomock/mongomock/issues/499", "id": 406046016, "node_id": "MDU6SXNzdWU0MDYwNDYwMTY=", "number": 499, "title": "Mongomock does not support dot in field names", "user": {"login": "Zaspire", "id": 295397, "node_id": "MDQ6VXNlcjI5NTM5Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/295397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zaspire", "html_url": "https://github.com/Zaspire", "followers_url": "https://api.github.com/users/Zaspire/followers", "following_url": "https://api.github.com/users/Zaspire/following{/other_user}", "gists_url": "https://api.github.com/users/Zaspire/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zaspire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zaspire/subscriptions", "organizations_url": "https://api.github.com/users/Zaspire/orgs", "repos_url": "https://api.github.com/users/Zaspire/repos", "events_url": "https://api.github.com/users/Zaspire/events{/privacy}", "received_events_url": "https://api.github.com/users/Zaspire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-03T02:44:41Z", "updated_at": "2019-02-03T15:47:36Z", "closed_at": "2019-02-03T15:47:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "This restriction was lifted in mongo 3.6.1\r\nhttps://docs.mongodb.com/manual/reference/limits/#Restrictions-on-Field-Names\r\n\r\n```\r\n----> 1 db.collection.insert_one({'_id': 'id2', '1.2':2})\r\n\r\n/home/zaspire/tmp/VE/local/lib/python2.7/site-packages/mongomock/collection.pyc in insert_one(self, document, session)\r\n    373     def insert_one(self, document, session=None):\r\n    374         validate_is_mutable_mapping('document', document)\r\n--> 375         return InsertOneResult(self._insert(document, session), acknowledged=True)\r\n    376 \r\n    377     def insert_many(self, documents, ordered=True, session=None):\r\n\r\n/home/zaspire/tmp/VE/local/lib/python2.7/site-packages/mongomock/collection.pyc in _insert(self, data, session)\r\n    413         if BSON:\r\n    414             # bson validation\r\n--> 415             BSON.encode(data, check_keys=True)\r\n    416 \r\n    417         if '_id' not in data:\r\n\r\n/home/zaspire/tmp/VE/local/lib/python2.7/site-packages/bson/__init__.pyc in encode(cls, document, check_keys, codec_options)\r\n   1025             raise _CODEC_OPTIONS_TYPE_ERROR\r\n   1026 \r\n-> 1027         return cls(_dict_to_bson(document, check_keys, codec_options))\r\n   1028 \r\n   1029     def decode(self, codec_options=DEFAULT_CODEC_OPTIONS):\r\n\r\nInvalidDocument: key '1.2' must not contain '.'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/498", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/498/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/498/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/498/events", "html_url": "https://github.com/mongomock/mongomock/issues/498", "id": 405813507, "node_id": "MDU6SXNzdWU0MDU4MTM1MDc=", "number": 498, "title": "'$ne' None should not match missing field", "user": {"login": "belph", "id": 4998607, "node_id": "MDQ6VXNlcjQ5OTg2MDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/4998607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/belph", "html_url": "https://github.com/belph", "followers_url": "https://api.github.com/users/belph/followers", "following_url": "https://api.github.com/users/belph/following{/other_user}", "gists_url": "https://api.github.com/users/belph/gists{/gist_id}", "starred_url": "https://api.github.com/users/belph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/belph/subscriptions", "organizations_url": "https://api.github.com/users/belph/orgs", "repos_url": "https://api.github.com/users/belph/repos", "events_url": "https://api.github.com/users/belph/events{/privacy}", "received_events_url": "https://api.github.com/users/belph/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-02-01T18:07:53Z", "updated_at": "2019-02-01T21:56:57Z", "closed_at": "2019-02-01T21:56:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "(Note: This might be related to #323?)\r\nI have discovered some (seemingly incorrect) behavior of `$ne` in Mongomock 3.14.0 which is inconsistent with PyMongo 3.7.2. Here is a program which can reproduce:\r\n```python\r\nimport pymongo\r\nimport mongomock\r\n\r\nCOLLECTION = 'test_collection'\r\nreal_client = pymongo.MongoClient('localhost', 33437)\r\nmock_client = mongomock.MongoClient()\r\n\r\n\r\ndef run_test(client):\r\n    coll = client['test_db'][COLLECTION]\r\n    coll.insert_many([\r\n        {'field1': 'foo', 'field2': 'bar'},\r\n        {'field1': 'baz'}\r\n    ])\r\n    return list(coll.find({'field1': 'baz', 'field2': {'$ne': None}}))\r\n\r\n\r\nprint(f\"Real results: {run_test(real_client)}\")\r\nprint(f\"Mock results: {run_test(mock_client)}\")\r\n```\r\n\r\nThis prints the following:\r\n```\r\nReal results: []\r\nMock results: [{'field1': 'baz', '_id': ObjectId('5c5489f249604330933dd551')}]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/495", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/495/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/495/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/495/events", "html_url": "https://github.com/mongomock/mongomock/issues/495", "id": 403506832, "node_id": "MDU6SXNzdWU0MDM1MDY4MzI=", "number": 495, "title": "MongoMock doesn't error on bad top level operator", "user": {"login": "chdsbd", "id": 1929960, "node_id": "MDQ6VXNlcjE5Mjk5NjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1929960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chdsbd", "html_url": "https://github.com/chdsbd", "followers_url": "https://api.github.com/users/chdsbd/followers", "following_url": "https://api.github.com/users/chdsbd/following{/other_user}", "gists_url": "https://api.github.com/users/chdsbd/gists{/gist_id}", "starred_url": "https://api.github.com/users/chdsbd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chdsbd/subscriptions", "organizations_url": "https://api.github.com/users/chdsbd/orgs", "repos_url": "https://api.github.com/users/chdsbd/repos", "events_url": "https://api.github.com/users/chdsbd/events{/privacy}", "received_events_url": "https://api.github.com/users/chdsbd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-01-27T02:39:59Z", "updated_at": "2019-01-27T17:17:46Z", "closed_at": "2019-01-27T17:16:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I run the following snippet with a real mongo database, I get: \"pymongo.errors.OperationFailure: unknown top level operator: $ne\"\r\n```python\r\n{'$and': [{'$ne': False}]}\r\n```\r\n\r\nWith MongoMock, I receive no error.\r\n\r\nI think MongoMock should raise a similar error in this case.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/493", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/493/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/493/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/493/events", "html_url": "https://github.com/mongomock/mongomock/issues/493", "id": 403377664, "node_id": "MDU6SXNzdWU0MDMzNzc2NjQ=", "number": 493, "title": "`bulk_write` returns the wrong `matched_count`", "user": {"login": "ajaskier", "id": 8076184, "node_id": "MDQ6VXNlcjgwNzYxODQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/8076184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajaskier", "html_url": "https://github.com/ajaskier", "followers_url": "https://api.github.com/users/ajaskier/followers", "following_url": "https://api.github.com/users/ajaskier/following{/other_user}", "gists_url": "https://api.github.com/users/ajaskier/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajaskier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajaskier/subscriptions", "organizations_url": "https://api.github.com/users/ajaskier/orgs", "repos_url": "https://api.github.com/users/ajaskier/repos", "events_url": "https://api.github.com/users/ajaskier/events{/privacy}", "received_events_url": "https://api.github.com/users/ajaskier/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-26T00:01:12Z", "updated_at": "2019-01-28T08:19:20Z", "closed_at": "2019-01-28T08:19:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've prepared a simple test where using `bulk_write` and `ReplaceOne` with Mongomock gives different results than pure MongoDB with `pymongo`. Mongomock fails on `test_bulk_replace_multiple_objects` and `test_bulk_replace_no_changes` and MongoDB passes all 4 tests.\r\n\r\nMongomock version: `3.14.0`\r\nPymongo: `3.7.2`\r\nMongo: `4.0`\r\n\r\nI'm also attaching a link to repo with this problem encapsulated in `docker-compose`: https://github.com/ajaskier/mongomock_bulk\r\n\r\n```python\r\nimport copy\r\nimport os\r\nimport unittest\r\n\r\nimport mongomock\r\nfrom pymongo import ReplaceOne\r\n\r\n\r\ndef bulk_replace(collection, docs):\r\n    bulks = []\r\n    for current, update in docs:\r\n        bulk = ReplaceOne(current, update)\r\n        bulks.append(bulk)\r\n\r\n    return collection.bulk_write(bulks)\r\n\r\n\r\nclass TestBulkReplace(unittest.TestCase):\r\n\r\n    @classmethod\r\n    def setUpClass(cls):\r\n\r\n        if 'USE_MONGODB' in os.environ and os.environ['USE_MONGODB'] == 'True' and 'REAL_MONGO_CONNECTION_STRING' in os.environ:\r\n            from pymongo import MongoClient\r\n            client = MongoClient(os.environ['REAL_MONGO_CONNECTION_STRING'])\r\n        else:\r\n            client = mongomock.MongoClient('mongodb://example.server.com/testdb')\r\n\r\n        cls.db = client.get_database()\r\n\r\n    def setUp(self):\r\n\r\n        dummy_docs = [\r\n            {\r\n                'name': 'Luke',\r\n                'age': 40\r\n            },\r\n            {\r\n                'name': 'Anna',\r\n                'age': 42\r\n            },\r\n            {\r\n                'name': 'Tom',\r\n                'age': 16\r\n            },\r\n        ]\r\n        self.db.people.insert_many(dummy_docs)\r\n\r\n    def tearDown(self):\r\n        self.db.people.drop()\r\n\r\n    def test_bulk_replace_single_object(self):\r\n        luke = list(self.db.people.find({'name': 'Luke'}))[0]\r\n        older_luke = copy.deepcopy(luke)\r\n        older_luke['age'] = 100\r\n\r\n        update = [\r\n            (luke, older_luke)\r\n        ]\r\n\r\n        res = bulk_replace(self.db.people, update)\r\n        self.assertEqual(res.matched_count, 1)\r\n        self.assertEqual(res.modified_count, 1)\r\n\r\n    def test_bulk_replace_no_changes(self):\r\n        luke = list(self.db.people.find({'name': 'Luke'}))[0]\r\n        also_luke = copy.deepcopy(luke)\r\n\r\n        update = [\r\n            (luke, also_luke)\r\n        ]\r\n\r\n        res = bulk_replace(self.db.people, update)\r\n        self.assertEqual(res.matched_count, 1)\r\n        self.assertEqual(res.modified_count, 0)\r\n\r\n    def test_bulk_replace_multiple_objects(self):\r\n        luke = list(self.db.people.find({'name': 'Luke'}))[0]\r\n        also_luke = copy.deepcopy(luke)\r\n\r\n        anna = list(self.db.people.find({'name': 'Anna'}))[0]\r\n        older_anna = copy.deepcopy(anna)\r\n        older_anna['age'] = 100\r\n\r\n        update = [\r\n            (luke, also_luke),\r\n            (anna, older_anna)\r\n        ]\r\n\r\n        res = bulk_replace(self.db.people, update)\r\n        self.assertEqual(res.matched_count, 2)\r\n        self.assertEqual(res.modified_count, 1)\r\n\r\n    def test_bulk_replace_multiple_objects_partial_modify(self):\r\n        luke = list(self.db.people.find({'name': 'Luke'}))[0]\r\n        older_luke = copy.deepcopy(luke)\r\n        older_luke['age'] = 100\r\n\r\n        anna = list(self.db.people.find({'name': 'Anna'}))[0]\r\n        older_anna = copy.deepcopy(anna)\r\n        older_anna['age'] = 100\r\n\r\n        update = [\r\n            (luke, older_luke),\r\n            (anna, older_anna)\r\n        ]\r\n\r\n        res = bulk_replace(self.db.people, update)\r\n        self.assertEqual(res.matched_count, 2)\r\n        self.assertEqual(res.modified_count, 2)\r\n\r\n\r\nif __name__ == '__main__':\r\n    unittest.main()\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/488", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/488/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/488/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/488/events", "html_url": "https://github.com/mongomock/mongomock/issues/488", "id": 400672178, "node_id": "MDU6SXNzdWU0MDA2NzIxNzg=", "number": 488, "title": "The mongomock didn't work as expection", "user": {"login": "mendickxiao", "id": 6678485, "node_id": "MDQ6VXNlcjY2Nzg0ODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6678485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mendickxiao", "html_url": "https://github.com/mendickxiao", "followers_url": "https://api.github.com/users/mendickxiao/followers", "following_url": "https://api.github.com/users/mendickxiao/following{/other_user}", "gists_url": "https://api.github.com/users/mendickxiao/gists{/gist_id}", "starred_url": "https://api.github.com/users/mendickxiao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mendickxiao/subscriptions", "organizations_url": "https://api.github.com/users/mendickxiao/orgs", "repos_url": "https://api.github.com/users/mendickxiao/repos", "events_url": "https://api.github.com/users/mendickxiao/events{/privacy}", "received_events_url": "https://api.github.com/users/mendickxiao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-01-18T10:50:27Z", "updated_at": "2019-01-18T22:46:50Z", "closed_at": "2019-01-18T22:46:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a sample project, the folder like this:\r\n```\r\nsrc\r\n    database.py\r\ntest\r\n    test_database.py\r\n```\r\n\r\nIn my database source file, the code like this:\r\n```py\r\nfrom pymongo import MongoClient\r\nimport uuid\r\n\r\nconnection = MongoClient('mongodb://localhost:27017/').hawkeye.github\r\n\r\ndef query_data():\r\n    return connection.count({'rate_remaining': {'$gt': 5}})`\r\n\r\nIn my test code, the code like this:\r\n`class MockupDBDatabaseTest(unittest.TestCase):\r\n    @mongomock.patch(('mongodb://localhost:27017/'))\r\n    def test_query_data(self):\r\n        client1 = pymongo.MongoClient('mongodb://localhost:27017/')\r\n        database1 = client1.hawkeye\r\n        database1.create_collection('github').insert_one({'_id': str(uuid.uuid4()), 'addat': 1541424928, 'encrypted_password': b'7Y4zYdOiezoD7J+UXZ...8xI8vD/Qv', 'mask_password': 'T3****56', 'password': '', 'rate_limit': 30, 'rate_remaining': 30, 'username': 'TomasenChen'})\r\n        count = database.query_data()\r\n        print(count)\r\n        self.assertGreater(count, 0)`\r\n```\r\nIn finally, the test result is failed, count is zero. So I will think the mongomock is not working.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/486", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/486/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/486/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/486/events", "html_url": "https://github.com/mongomock/mongomock/issues/486", "id": 398735601, "node_id": "MDU6SXNzdWUzOTg3MzU2MDE=", "number": 486, "title": "aggregation $min and $max ignore falsy values", "user": {"login": "vdwees", "id": 24944371, "node_id": "MDQ6VXNlcjI0OTQ0Mzcx", "avatar_url": "https://avatars0.githubusercontent.com/u/24944371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vdwees", "html_url": "https://github.com/vdwees", "followers_url": "https://api.github.com/users/vdwees/followers", "following_url": "https://api.github.com/users/vdwees/following{/other_user}", "gists_url": "https://api.github.com/users/vdwees/gists{/gist_id}", "starred_url": "https://api.github.com/users/vdwees/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vdwees/subscriptions", "organizations_url": "https://api.github.com/users/vdwees/orgs", "repos_url": "https://api.github.com/users/vdwees/repos", "events_url": "https://api.github.com/users/vdwees/events{/privacy}", "received_events_url": "https://api.github.com/users/vdwees/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-01-14T03:14:42Z", "updated_at": "2019-01-15T07:57:00Z", "closed_at": "2019-01-15T07:57:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "In these lines:\r\nhttps://github.com/mongomock/mongomock/blob/b39e6f335dbbfb99a43a857b7dea43f069e72e33/mongomock/aggregate.py#L115-L116\r\n\r\nthe `$min` and `$max` operators ignore falsy values, e.g. when `val` is zero, it evaluates to `False` and is ignored. \r\n\r\nTo demonstrate the problem: \r\n\r\n```python\r\n>>> my_min = lambda values: min(val or 100 for val in values)\r\n>>> my_min([2,3,4])\r\n2\r\n>>> my_min([2,0,4])\r\n2\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/484", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/484/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/484/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/484/events", "html_url": "https://github.com/mongomock/mongomock/issues/484", "id": 395640536, "node_id": "MDU6SXNzdWUzOTU2NDA1MzY=", "number": 484, "title": "Collection name checks are not performed", "user": {"login": "Colin-b", "id": 7591933, "node_id": "MDQ6VXNlcjc1OTE5MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7591933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Colin-b", "html_url": "https://github.com/Colin-b", "followers_url": "https://api.github.com/users/Colin-b/followers", "following_url": "https://api.github.com/users/Colin-b/following{/other_user}", "gists_url": "https://api.github.com/users/Colin-b/gists{/gist_id}", "starred_url": "https://api.github.com/users/Colin-b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Colin-b/subscriptions", "organizations_url": "https://api.github.com/users/Colin-b/orgs", "repos_url": "https://api.github.com/users/Colin-b/repos", "events_url": "https://api.github.com/users/Colin-b/events{/privacy}", "received_events_url": "https://api.github.com/users/Colin-b/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-01-03T16:34:16Z", "updated_at": "2019-01-03T18:32:44Z", "closed_at": "2019-01-03T17:13:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am using the creation of a Collection to ensure that provided name is a valid one,\r\nCould we ensure that pymongo checks are also performed on mongomock when creating a new Collection ?\r\n\r\nYou can refer to pymongo code here: https://github.com/mongodb/mongo-python-driver/blob/master/pymongo/collection.py#L158\r\n\r\nThis change will introduce regression for some users but in my point of view the current behavior is more a side effect than an expected one (as test case would fail with pymongo).\r\n\r\nHowever I would understand the negative impact for users using mongomock as a production in-memory database (if there is any?).\r\n\r\nI can submit a PR if you do not have time to look into this, just ask me to :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/482", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/482/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/482/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/482/events", "html_url": "https://github.com/mongomock/mongomock/issues/482", "id": 392631126, "node_id": "MDU6SXNzdWUzOTI2MzExMjY=", "number": 482, "title": "Cannot update document with id 0 or ''", "user": {"login": "zozoens31", "id": 8383947, "node_id": "MDQ6VXNlcjgzODM5NDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8383947?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zozoens31", "html_url": "https://github.com/zozoens31", "followers_url": "https://api.github.com/users/zozoens31/followers", "following_url": "https://api.github.com/users/zozoens31/following{/other_user}", "gists_url": "https://api.github.com/users/zozoens31/gists{/gist_id}", "starred_url": "https://api.github.com/users/zozoens31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zozoens31/subscriptions", "organizations_url": "https://api.github.com/users/zozoens31/orgs", "repos_url": "https://api.github.com/users/zozoens31/repos", "events_url": "https://api.github.com/users/zozoens31/events{/privacy}", "received_events_url": "https://api.github.com/users/zozoens31/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-19T14:40:08Z", "updated_at": "2018-12-19T21:15:06Z", "closed_at": "2018-12-19T21:15:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When updating a document if it has _id with a falsy value (`0`, `False`, `''`, ...) it raises a KeyError:\r\n\r\nTo reproduce:\r\n```python\r\n    db.collection.insert_one({'_id': ''})\r\n    db.collection.update_one({'_id': '', {'a': 1}}  # raises KeyError: '_id'\r\n    db.collection.find_one({'_id': ''})\r\n```\r\nExpected behavior:\r\n\r\nthe previous code should return\r\n```python\r\n    {'_id': '', 'a': 1}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/481", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/481/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/481/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/481/events", "html_url": "https://github.com/mongomock/mongomock/issues/481", "id": 391411634, "node_id": "MDU6SXNzdWUzOTE0MTE2MzQ=", "number": 481, "title": "Bulk operation doesn't raise an exception as a mongod instance would.", "user": {"login": "thestick613", "id": 1608525, "node_id": "MDQ6VXNlcjE2MDg1MjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1608525?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestick613", "html_url": "https://github.com/thestick613", "followers_url": "https://api.github.com/users/thestick613/followers", "following_url": "https://api.github.com/users/thestick613/following{/other_user}", "gists_url": "https://api.github.com/users/thestick613/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestick613/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestick613/subscriptions", "organizations_url": "https://api.github.com/users/thestick613/orgs", "repos_url": "https://api.github.com/users/thestick613/repos", "events_url": "https://api.github.com/users/thestick613/events{/privacy}", "received_events_url": "https://api.github.com/users/thestick613/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-15T21:05:11Z", "updated_at": "2018-12-16T21:48:41Z", "closed_at": "2018-12-16T21:48:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "This code is wrong, i don't neet to set the _id again in the update document:\r\n\r\n    bulk = col.initialize_unordered_bulk_op()\r\n    bulk.find({\"_id\": {\"a\": 1, \"b\": 2}}).upsert().update({\"$set\": {\"field\": \"value\", \"_id\": {\"a\": 1, \"b\": 2}}\r\n    bulk.execute()\r\n\r\nMongomock doesn't complain about it, and does as it is requested. However, a real mongod instance throws this:\r\n\r\n    {'writeErrors': [{'index': 0, 'code': 66, 'errmsg': \"Performing an update on the path '_id' would modify the immutable field '_id'\", 'op': SON([('q', {'_id': {'a': 1, 'b': 2}})\r\n\r\nThis isn't really a big deal, but it will make mongomock closer to the original.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/477", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/477/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/477/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/477/events", "html_url": "https://github.com/mongomock/mongomock/issues/477", "id": 388225102, "node_id": "MDU6SXNzdWUzODgyMjUxMDI=", "number": 477, "title": "multiple bulk.find.update(..) don't raise BulkWriteError", "user": {"login": "ronyf", "id": 29537945, "node_id": "MDQ6VXNlcjI5NTM3OTQ1", "avatar_url": "https://avatars3.githubusercontent.com/u/29537945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronyf", "html_url": "https://github.com/ronyf", "followers_url": "https://api.github.com/users/ronyf/followers", "following_url": "https://api.github.com/users/ronyf/following{/other_user}", "gists_url": "https://api.github.com/users/ronyf/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronyf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronyf/subscriptions", "organizations_url": "https://api.github.com/users/ronyf/orgs", "repos_url": "https://api.github.com/users/ronyf/repos", "events_url": "https://api.github.com/users/ronyf/events{/privacy}", "received_events_url": "https://api.github.com/users/ronyf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-06T13:57:14Z", "updated_at": "2018-12-08T15:48:31Z", "closed_at": "2018-12-08T15:48:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running the following code\r\n\r\n\tbulk = agent_class.get_collection().initialize_unordered_bulk_op()\r\n\tfor bulk_op in bulk_data:\r\n\t\tbulk.find(bulk_op['query']).upsert().update(bulk_op['update'])\r\n\tresult = bulk.execute()\r\n\r\nraises `DuplicateKeyError` instead of `BulkWriteError`\r\nwhile `pymongo` raises `BulkWriteError`.\r\n\r\nlooks like it ignores the whole `unordered` setting, which means that it should continue despite the dup key errors...\r\n\r\nwhile debugging the issue, I noticed that `mongomock`'s `Collection._update(..)` function receives a single value both in `spec` and `document`, which means that `Collection_data(..)` receives data of type `dict` instead of `list`.\r\n\r\nI would expect the same behavior on both pymongo and mongomock..", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/476", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/476/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/476/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/476/events", "html_url": "https://github.com/mongomock/mongomock/issues/476", "id": 385472054, "node_id": "MDU6SXNzdWUzODU0NzIwNTQ=", "number": 476, "title": "Aggregation framework for $sample does not support sizes larger than collection size", "user": {"login": "DarwinLYang", "id": 6865356, "node_id": "MDQ6VXNlcjY4NjUzNTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6865356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DarwinLYang", "html_url": "https://github.com/DarwinLYang", "followers_url": "https://api.github.com/users/DarwinLYang/followers", "following_url": "https://api.github.com/users/DarwinLYang/following{/other_user}", "gists_url": "https://api.github.com/users/DarwinLYang/gists{/gist_id}", "starred_url": "https://api.github.com/users/DarwinLYang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DarwinLYang/subscriptions", "organizations_url": "https://api.github.com/users/DarwinLYang/orgs", "repos_url": "https://api.github.com/users/DarwinLYang/repos", "events_url": "https://api.github.com/users/DarwinLYang/events{/privacy}", "received_events_url": "https://api.github.com/users/DarwinLYang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-28T21:51:01Z", "updated_at": "2018-12-03T09:04:14Z", "closed_at": "2018-12-03T09:04:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to use $sample with a size of 1 on an empty collection I get an IndexError as the sequence for random is empty. Normally, MongoDB would return nothing in this situation. \r\n\r\nIn addition, when using $sample, if a size of 5 is used with a collection size of only 1. The aggregation framework should only return the 1 document but it seems that your code may potentially return the 1 document five times.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/473", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/473/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/473/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/473/events", "html_url": "https://github.com/mongomock/mongomock/issues/473", "id": 383512403, "node_id": "MDU6SXNzdWUzODM1MTI0MDM=", "number": 473, "title": "$sum and $add inside aggregate operator yield incorrect value", "user": {"login": "gmauch", "id": 32968300, "node_id": "MDQ6VXNlcjMyOTY4MzAw", "avatar_url": "https://avatars1.githubusercontent.com/u/32968300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gmauch", "html_url": "https://github.com/gmauch", "followers_url": "https://api.github.com/users/gmauch/followers", "following_url": "https://api.github.com/users/gmauch/following{/other_user}", "gists_url": "https://api.github.com/users/gmauch/gists{/gist_id}", "starred_url": "https://api.github.com/users/gmauch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gmauch/subscriptions", "organizations_url": "https://api.github.com/users/gmauch/orgs", "repos_url": "https://api.github.com/users/gmauch/repos", "events_url": "https://api.github.com/users/gmauch/events{/privacy}", "received_events_url": "https://api.github.com/users/gmauch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-11-22T12:21:51Z", "updated_at": "2018-11-23T09:18:02Z", "closed_at": "2018-11-23T09:18:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Suppose I have a collection with this single document:\r\n\r\n{\r\n\t\"_id\" : ObjectId(\"5bf5bd7e06366d73684a80b5\"),\r\n\t\"name\" : \"first\",\r\n\t\"base_value\" : 100,\r\n\t\"values_list\" : [\r\n\t\t{\r\n\t\t\t\"updated_value\" : 5\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"updated_value\" : 15\r\n\t\t}\r\n\t]\r\n\r\nand I wish to sum the _base_value_ with the last _updated_value_ value in the _values_list_. the following query would achieve this and output the results to a new collection (through the _$out_ operator):\r\n\r\ndb.collection_name.aggregate({'$project': {'name': 1,\r\n                     'base_value': {'$sum': ['$base_value', {'$arrayElemAt': ['$values_list.updated_value', -1]}]}\r\n                      },\r\n                      {'$out': 'new_collection_name'}\r\n        }\r\n\r\nWhen running this query on a local instance of MongoDB, the result for the new _base_value_ is 115 (being 100 the current value and 15 the last value on the list). However, when running using Mongomock (versions 3.12.0 and 3.14.0) the result is 100. I also tried replacing the $sum for a $add, but the problem keeps happening.\r\nI read other open issues and this [one seems](https://github.com/mongomock/mongomock/issues/349) related, but I'm not sure is the same problem.\r\nAt last, I attached a Python script that shows this problem happening, which should be useful to test and validate the error condition.\r\n[mongomock_test.txt](https://github.com/mongomock/mongomock/files/2608045/mongomock_test.txt)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/472", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/472/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/472/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/472/events", "html_url": "https://github.com/mongomock/mongomock/issues/472", "id": 383433381, "node_id": "MDU6SXNzdWUzODM0MzMzODE=", "number": 472, "title": "mongomock does not support with_options(write_concern=...)", "user": {"login": "boxmansf", "id": 20337439, "node_id": "MDQ6VXNlcjIwMzM3NDM5", "avatar_url": "https://avatars0.githubusercontent.com/u/20337439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boxmansf", "html_url": "https://github.com/boxmansf", "followers_url": "https://api.github.com/users/boxmansf/followers", "following_url": "https://api.github.com/users/boxmansf/following{/other_user}", "gists_url": "https://api.github.com/users/boxmansf/gists{/gist_id}", "starred_url": "https://api.github.com/users/boxmansf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boxmansf/subscriptions", "organizations_url": "https://api.github.com/users/boxmansf/orgs", "repos_url": "https://api.github.com/users/boxmansf/repos", "events_url": "https://api.github.com/users/boxmansf/events{/privacy}", "received_events_url": "https://api.github.com/users/boxmansf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352860, "node_id": "MDU6TGFiZWwxMzUyODYw", "url": "https://api.github.com/repos/mongomock/mongomock/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": "Reporting a feature that is missing from mongomock."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-22T08:48:49Z", "updated_at": "2018-11-24T18:10:54Z", "closed_at": "2018-11-24T18:10:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "See below syntax:\r\nwrite_concern = WriteConcern(w=2, wtimeout = 60000)\r\ncolc.with_options(write_concern=write_concern).update_one(...)\r\n\r\nI would suggest implementing by just ignoring this param when passed to with_options, as mongomock is not simulating a cluster.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/470", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/470/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/470/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/470/events", "html_url": "https://github.com/mongomock/mongomock/issues/470", "id": 382543843, "node_id": "MDU6SXNzdWUzODI1NDM4NDM=", "number": 470, "title": "KeyError in aggregation", "user": {"login": "ulyssejdv", "id": 12152859, "node_id": "MDQ6VXNlcjEyMTUyODU5", "avatar_url": "https://avatars3.githubusercontent.com/u/12152859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulyssejdv", "html_url": "https://github.com/ulyssejdv", "followers_url": "https://api.github.com/users/ulyssejdv/followers", "following_url": "https://api.github.com/users/ulyssejdv/following{/other_user}", "gists_url": "https://api.github.com/users/ulyssejdv/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulyssejdv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulyssejdv/subscriptions", "organizations_url": "https://api.github.com/users/ulyssejdv/orgs", "repos_url": "https://api.github.com/users/ulyssejdv/repos", "events_url": "https://api.github.com/users/ulyssejdv/events{/privacy}", "received_events_url": "https://api.github.com/users/ulyssejdv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-20T08:05:36Z", "updated_at": "2018-11-23T08:56:14Z", "closed_at": "2018-11-21T08:45:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "When we execute the aggregate command with a key who not exists that raise an KeyError exception.\r\n\r\nExemple :\r\n\r\nData :\r\n```\r\n [\r\n            {'k1': 'value1', 'k2': 'value2', 'k3': 'value3'},\r\n            {'k1': 'value1', 'k2': 'value22', 'k3': 'value3'},\r\n            {'k1': 'value11', 'k2': 'value2', 'k3': 'value3'},\r\n            {'kk1': 'value11', 'k2': 'value2', 'k3': 'value3'},\r\n ] \r\n``` \r\n\r\nCommand :\r\n`db.my_collection.aggregate([{'$project': {}}, {'$group': {'_id': {'k1': '$k1'}, 'k2': {'$addToSet': '$k2'}}}])`\r\n\r\nResult : \r\n\r\n```\r\nobj = {'_id': ObjectId('5bf3bfd66284912384ef5af0'), 'k2': 'value2', 'k3': 'value3', 'kk1': 'value11'}\r\nkey = 'k1'\r\n\r\n    def recurse_embedded(obj, key):\r\n        ret = obj\r\n        for k in key.split('.'):\r\n>           ret = ret[k]\r\nE           KeyError: 'k1'\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/469", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/469/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/469/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/469/events", "html_url": "https://github.com/mongomock/mongomock/issues/469", "id": 382376021, "node_id": "MDU6SXNzdWUzODIzNzYwMjE=", "number": 469, "title": "Implement Database.command, at least the ping command", "user": {"login": "Colin-b", "id": 7591933, "node_id": "MDQ6VXNlcjc1OTE5MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7591933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Colin-b", "html_url": "https://github.com/Colin-b", "followers_url": "https://api.github.com/users/Colin-b/followers", "following_url": "https://api.github.com/users/Colin-b/following{/other_user}", "gists_url": "https://api.github.com/users/Colin-b/gists{/gist_id}", "starred_url": "https://api.github.com/users/Colin-b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Colin-b/subscriptions", "organizations_url": "https://api.github.com/users/Colin-b/orgs", "repos_url": "https://api.github.com/users/Colin-b/repos", "events_url": "https://api.github.com/users/Colin-b/events{/privacy}", "received_events_url": "https://api.github.com/users/Colin-b/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352860, "node_id": "MDU6TGFiZWwxMzUyODYw", "url": "https://api.github.com/repos/mongomock/mongomock/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": "Reporting a feature that is missing from mongomock."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-11-19T20:15:17Z", "updated_at": "2018-11-21T07:33:39Z", "closed_at": "2018-11-21T07:33:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "My application health check is sending a ping command but I noticed command method is not implemented in Database, leading to command being interpreted as a Collection.\r\n\r\nMaybe we could foresee a first implementation only handling 'ping' command and returning {'ok': 1.0} ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/468", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/468/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/468/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/468/events", "html_url": "https://github.com/mongomock/mongomock/issues/468", "id": 382359232, "node_id": "MDU6SXNzdWUzODIzNTkyMzI=", "number": 468, "title": "Microseconds rounded when saving objects", "user": {"login": "wbaelen", "id": 14276582, "node_id": "MDQ6VXNlcjE0Mjc2NTgy", "avatar_url": "https://avatars0.githubusercontent.com/u/14276582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wbaelen", "html_url": "https://github.com/wbaelen", "followers_url": "https://api.github.com/users/wbaelen/followers", "following_url": "https://api.github.com/users/wbaelen/following{/other_user}", "gists_url": "https://api.github.com/users/wbaelen/gists{/gist_id}", "starred_url": "https://api.github.com/users/wbaelen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wbaelen/subscriptions", "organizations_url": "https://api.github.com/users/wbaelen/orgs", "repos_url": "https://api.github.com/users/wbaelen/repos", "events_url": "https://api.github.com/users/wbaelen/events{/privacy}", "received_events_url": "https://api.github.com/users/wbaelen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1032344533, "node_id": "MDU6TGFiZWwxMDMyMzQ0NTMz", "url": "https://api.github.com/repos/mongomock/mongomock/labels/cannot%20reproduce", "name": "cannot reproduce", "color": "4a61f7", "default": false, "description": "A maintainer has tried reproducing the bug but need help from the initial reporter."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-19T19:25:45Z", "updated_at": "2018-11-19T23:50:45Z", "closed_at": "2018-11-19T23:50:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "When saving an document object with a time field and comparing to the time specified in the test, they are off by microseconds in Python2.7.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/466", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/466/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/466/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/466/events", "html_url": "https://github.com/mongomock/mongomock/issues/466", "id": 381426665, "node_id": "MDU6SXNzdWUzODE0MjY2NjU=", "number": 466, "title": "Is there any plan to add \"$in\" to aggregation  or replacement for the \"$in\" ", "user": {"login": "Motor-taxi-master-rider", "id": 24244971, "node_id": "MDQ6VXNlcjI0MjQ0OTcx", "avatar_url": "https://avatars1.githubusercontent.com/u/24244971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Motor-taxi-master-rider", "html_url": "https://github.com/Motor-taxi-master-rider", "followers_url": "https://api.github.com/users/Motor-taxi-master-rider/followers", "following_url": "https://api.github.com/users/Motor-taxi-master-rider/following{/other_user}", "gists_url": "https://api.github.com/users/Motor-taxi-master-rider/gists{/gist_id}", "starred_url": "https://api.github.com/users/Motor-taxi-master-rider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Motor-taxi-master-rider/subscriptions", "organizations_url": "https://api.github.com/users/Motor-taxi-master-rider/orgs", "repos_url": "https://api.github.com/users/Motor-taxi-master-rider/repos", "events_url": "https://api.github.com/users/Motor-taxi-master-rider/events{/privacy}", "received_events_url": "https://api.github.com/users/Motor-taxi-master-rider/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-11-16T03:02:39Z", "updated_at": "2018-11-20T23:19:23Z", "closed_at": "2018-11-20T23:19:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to add some `set in` logic in the *$project* pipeline like:\r\n```\r\n{'$in': ['impressive', '$tags']}\r\n```\r\nIt will raise an exception says that *$in*  is unrecognized expression in *aggregate.py* line 150. Seems because it is not included in the *set_operators* list. I know the *set_operators* is not implemented yet, just want to know if *$in* will be included in the list.\r\nIf there is not a replacement for the *$in* operator to do the set operation, it will be kind of you if you tell me!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/465", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/465/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/465/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/465/events", "html_url": "https://github.com/mongomock/mongomock/issues/465", "id": 380859376, "node_id": "MDU6SXNzdWUzODA4NTkzNzY=", "number": 465, "title": "collection.with_options with default write_concern is choking", "user": {"login": "mcsloe", "id": 37410212, "node_id": "MDQ6VXNlcjM3NDEwMjEy", "avatar_url": "https://avatars2.githubusercontent.com/u/37410212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcsloe", "html_url": "https://github.com/mcsloe", "followers_url": "https://api.github.com/users/mcsloe/followers", "following_url": "https://api.github.com/users/mcsloe/following{/other_user}", "gists_url": "https://api.github.com/users/mcsloe/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcsloe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcsloe/subscriptions", "organizations_url": "https://api.github.com/users/mcsloe/orgs", "repos_url": "https://api.github.com/users/mcsloe/repos", "events_url": "https://api.github.com/users/mcsloe/events{/privacy}", "received_events_url": "https://api.github.com/users/mcsloe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2018-11-14T19:49:50Z", "updated_at": "2018-11-22T08:49:51Z", "closed_at": "2018-11-14T20:36:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using mongomock and mongoengine (0.16.1) results in mongomock raising a NotImplementedError.\r\nSee https://github.com/MongoEngine/mongoengine/issues/1953.\r\n\r\nThis is currently making it impossible to use mongomock in unit tests.\r\n\r\nIs there any chance this can be changed in mongomock or can anyone suggest a simple work-around?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/463", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/463/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/463/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/463/events", "html_url": "https://github.com/mongomock/mongomock/issues/463", "id": 376376286, "node_id": "MDU6SXNzdWUzNzYzNzYyODY=", "number": 463, "title": "Implement System Variables in Aggregation Expressions", "user": {"login": "NazarTopolsky", "id": 7715385, "node_id": "MDQ6VXNlcjc3MTUzODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/7715385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NazarTopolsky", "html_url": "https://github.com/NazarTopolsky", "followers_url": "https://api.github.com/users/NazarTopolsky/followers", "following_url": "https://api.github.com/users/NazarTopolsky/following{/other_user}", "gists_url": "https://api.github.com/users/NazarTopolsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/NazarTopolsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NazarTopolsky/subscriptions", "organizations_url": "https://api.github.com/users/NazarTopolsky/orgs", "repos_url": "https://api.github.com/users/NazarTopolsky/repos", "events_url": "https://api.github.com/users/NazarTopolsky/events{/privacy}", "received_events_url": "https://api.github.com/users/NazarTopolsky/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352860, "node_id": "MDU6TGFiZWwxMzUyODYw", "url": "https://api.github.com/repos/mongomock/mongomock/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": "Reporting a feature that is missing from mongomock."}], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-11-01T12:40:56Z", "updated_at": "2018-11-02T23:33:45Z", "closed_at": "2018-11-02T23:33:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have encountered a problem with aggregation and $$ROOT on `mongomock==3.13.0`. Tested under python 3.6 (shipped with Ubuntu 18.04) and python 3.7.0\r\n\r\nMy usecase: I need to group documents by some field, and retrieve lists mapped to said field value (think nested comments mapped to parent ids). Listed below, I have written the query for this purpose. The code seems to work fine on pymongo and produces desired result. However, with mongomock it fails with `KeyError` - seems like mongomock thinks that `$$ROOT` is supposed to be a field.\r\n\r\nBelow is the smallest example I was able to reproduce this with:\r\n\r\n```python3\r\nimport mongomock\r\n\r\n\r\ndef query(client, parent_ids):\r\n    \"\"\"\r\n    Retrieve child documents for specified parents, mapped to parent id, i.e.:\r\n    {\r\n        1: [{'_id': 2, 'parent_id': 1],\r\n        2: [{'_id': 4, 'parent_id': 2],\r\n    }\r\n    \"\"\"\r\n    match = {'$match': {'parent_id': {'$in': parent_ids}}}\r\n    group = {\r\n        '$group': {\r\n            '_id': '$parent_id',\r\n            'docs': {'$push': '$$ROOT'}\r\n        }\r\n    }\r\n    aggregates = client.test.test.aggregate([match, group])\r\n    children = {}\r\n    for aggregate in aggregates:\r\n        children[aggregate['_id']] = aggregate['docs']\r\n    return children\r\n\r\n\r\ndef works_on_pymongo_but_fails_with_mongomock():\r\n    parent = {'_id': 1}\r\n    docs = [{'_id': 2, 'parent_id': 1},\r\n            {'_id': 3, 'parent_id': 1}]\r\n    client = mongomock.MongoClient()\r\n    client.test.test.insert_many([parent] + docs)\r\n    query(client, [parent['_id']])\r\n\r\n\r\nif __name__ == '__main__':\r\n    works_on_pymongo_but_fails_with_mongomock()\r\n```\r\n\r\nAnd here's stack trace:\r\n\r\n```Python traceback\r\n  File \"mongomock_test.py\", line 36, in <module>\r\n    works_on_pymongo_but_fails_with_mongomock()\r\n  File \"mongomock_test.py\", line 32, in works_on_pymongo_but_fails_with_mongomock\r\n    query(client, [parent['_id']])\r\n  File \"mongomock_test.py\", line 19, in query\r\n    aggregates = client.test.test.aggregate([match, group])\r\n  File \"/home/pc/venv/lib/python3.7/site-packages/mongomock/collection.py\", line 1762, in aggregate\r\n    doc_dict = _accumulate_group(v, group_list)\r\n  File \"/home/pc/venv/lib/python3.7/site-packages/mongomock/collection.py\", line 1672, in _accumulate_group\r\n    values = [key_getter(doc) for doc in group_list]\r\n  File \"/home/pc/venv/lib/python3.7/site-packages/mongomock/collection.py\", line 1672, in <listcomp>\r\n    values = [key_getter(doc) for doc in group_list]\r\n  File \"/home/pc/venv/lib/python3.7/site-packages/mongomock/aggregate.py\", line 296, in parse_expression\r\n    return Parser(doc_dict).parse(expression)\r\n  File \"/home/pc/venv/lib/python3.7/site-packages/mongomock/aggregate.py\", line 108, in parse\r\n    return self._parse_basic_expression(expression)\r\n  File \"/home/pc/venv/lib/python3.7/site-packages/mongomock/aggregate.py\", line 139, in _parse_basic_expression\r\n    return get_value(self._doc_dict)\r\n  File \"/home/pc/venv/lib/python3.7/site-packages/mongomock/helpers.py\", line 243, in g\r\n    return recurse_embedded(obj, item)\r\n  File \"/home/pc/venv/lib/python3.7/site-packages/mongomock/helpers.py\", line 236, in recurse_embedded\r\n    ret = ret[k]\r\nKeyError: 'ROOT'\r\n```\r\n\r\nThis is strange because I seem to remember using mongomock for similar queries before, and it worked.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/461", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/461/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/461/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/461/events", "html_url": "https://github.com/mongomock/mongomock/issues/461", "id": 374239364, "node_id": "MDU6SXNzdWUzNzQyMzkzNjQ=", "number": 461, "title": "Mongomock usage raises UserWarning: \"collection_names is deprecated. Use list_collection_names instead\"", "user": {"login": "boxmansf", "id": 20337439, "node_id": "MDQ6VXNlcjIwMzM3NDM5", "avatar_url": "https://avatars0.githubusercontent.com/u/20337439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boxmansf", "html_url": "https://github.com/boxmansf", "followers_url": "https://api.github.com/users/boxmansf/followers", "following_url": "https://api.github.com/users/boxmansf/following{/other_user}", "gists_url": "https://api.github.com/users/boxmansf/gists{/gist_id}", "starred_url": "https://api.github.com/users/boxmansf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boxmansf/subscriptions", "organizations_url": "https://api.github.com/users/boxmansf/orgs", "repos_url": "https://api.github.com/users/boxmansf/repos", "events_url": "https://api.github.com/users/boxmansf/events{/privacy}", "received_events_url": "https://api.github.com/users/boxmansf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1032344533, "node_id": "MDU6TGFiZWwxMDMyMzQ0NTMz", "url": "https://api.github.com/repos/mongomock/mongomock/labels/cannot%20reproduce", "name": "cannot reproduce", "color": "4a61f7", "default": false, "description": "A maintainer has tried reproducing the bug but need help from the initial reporter."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-26T06:07:03Z", "updated_at": "2018-10-26T09:06:26Z", "closed_at": "2018-10-26T09:06:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "mongomock/database.py:41: UserWarning:\r\n\r\n  collection_names is deprecated. Use list_collection_names instead.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/460", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/460/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/460/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/460/events", "html_url": "https://github.com/mongomock/mongomock/issues/460", "id": 374004254, "node_id": "MDU6SXNzdWUzNzQwMDQyNTQ=", "number": 460, "title": "insert_many fails insertion if called with a generator", "user": {"login": "gpetretto", "id": 8665734, "node_id": "MDQ6VXNlcjg2NjU3MzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/8665734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gpetretto", "html_url": "https://github.com/gpetretto", "followers_url": "https://api.github.com/users/gpetretto/followers", "following_url": "https://api.github.com/users/gpetretto/following{/other_user}", "gists_url": "https://api.github.com/users/gpetretto/gists{/gist_id}", "starred_url": "https://api.github.com/users/gpetretto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gpetretto/subscriptions", "organizations_url": "https://api.github.com/users/gpetretto/orgs", "repos_url": "https://api.github.com/users/gpetretto/repos", "events_url": "https://api.github.com/users/gpetretto/events{/privacy}", "received_events_url": "https://api.github.com/users/gpetretto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-10-25T15:25:31Z", "updated_at": "2018-10-25T21:38:49Z", "closed_at": "2018-10-25T21:38:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Calling the `insert_many` method of a collection and giving a generator as an argument results in no document being inserted in the db, at variance with what happens in pymongo. \r\nHere is a snippet of code demonstrating the problem:\r\n\r\n```python\r\nimport mongomock\r\nimport pymongo\r\n\r\ndata = (x for x in [{\"a\": 1}, {\"b\": 2}])\r\n\r\nclient = mongomock.MongoClient(\"mongodb://host1/foo\")\r\ndb = client.get_default_database()\r\n\r\ncoll = db.test_coll\r\ncoll.insert_many(data)\r\n\r\nprint(\"results in mongomock: \", coll.find().count())\r\n\r\ndata = (x for x in [{\"a\": 1}, {\"b\": 2}])\r\n\r\nclient = pymongo.MongoClient(\"localhost\", 27017)\r\ndb = client.test_db\r\ncoll_mongo = db.test_coll\r\ncoll_mongo.remove()\r\n\r\ncoll_mongo.insert_many(data)\r\nprint(\"results in pymongo: \", coll_mongo.find().count())\r\n```\r\nwith its output:\r\n\r\n> results in mongomock:  0\r\n> results in pymongo:  2\r\n\r\n\r\nThe problem originates from the fact that in `insert_many` the generator is iterated to validate its content. So, when it is passed to the `_insert` method, the generator has already been exhausted and no document is inserted in the db.\r\n\r\nA simple fix could be to just generate the list if it is a generator:\r\n```python\r\n    def insert_many(self, documents, ordered=True, session=None):\r\n        if not isinstance(documents, Iterable) or not documents:\r\n            raise TypeError('documents must be a non-empty list')\r\n        if isinstance(documents, types.GeneratorType):\r\n            documents = list(documents)\r\n        for document in documents:\r\n            validate_is_mutable_mapping('document', document)\r\n        return InsertManyResult(self._insert(documents, session), acknowledged=True)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/459", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/459/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/459/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/459/events", "html_url": "https://github.com/mongomock/mongomock/issues/459", "id": 368062649, "node_id": "MDU6SXNzdWUzNjgwNjI2NDk=", "number": 459, "title": "Cannot infer query fields to set, both paths", "user": {"login": "vnpt2324", "id": 6795377, "node_id": "MDQ6VXNlcjY3OTUzNzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/6795377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnpt2324", "html_url": "https://github.com/vnpt2324", "followers_url": "https://api.github.com/users/vnpt2324/followers", "following_url": "https://api.github.com/users/vnpt2324/following{/other_user}", "gists_url": "https://api.github.com/users/vnpt2324/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnpt2324/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnpt2324/subscriptions", "organizations_url": "https://api.github.com/users/vnpt2324/orgs", "repos_url": "https://api.github.com/users/vnpt2324/repos", "events_url": "https://api.github.com/users/vnpt2324/events{/privacy}", "received_events_url": "https://api.github.com/users/vnpt2324/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352860, "node_id": "MDU6TGFiZWwxMzUyODYw", "url": "https://api.github.com/repos/mongomock/mongomock/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": "Reporting a feature that is missing from mongomock."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-09T06:44:30Z", "updated_at": "2018-10-11T08:49:19Z", "closed_at": "2018-10-11T08:49:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I hope: Project will support updating (upsert=true) with subdocment in spec query as soon as.\r\nExample:\r\n```py\r\nspec = {\r\n    \"a\" : 1,\r\n    \"b.c.\": 2,\r\n    \"b.d\": 3\r\n}\r\ndata = {\r\n    \"$set\" : {\r\n        \"a\": 1\r\n    }\r\n}\r\nmongo.db['test'].update(spec, data, upsert=True)\r\n```\r\n\r\nThank you so much!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/458", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/458/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/458/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/458/events", "html_url": "https://github.com/mongomock/mongomock/issues/458", "id": 367812059, "node_id": "MDU6SXNzdWUzNjc4MTIwNTk=", "number": 458, "title": "mongomock+mongoengine update_one error", "user": {"login": "nullscc", "id": 17700282, "node_id": "MDQ6VXNlcjE3NzAwMjgy", "avatar_url": "https://avatars1.githubusercontent.com/u/17700282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nullscc", "html_url": "https://github.com/nullscc", "followers_url": "https://api.github.com/users/nullscc/followers", "following_url": "https://api.github.com/users/nullscc/following{/other_user}", "gists_url": "https://api.github.com/users/nullscc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nullscc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nullscc/subscriptions", "organizations_url": "https://api.github.com/users/nullscc/orgs", "repos_url": "https://api.github.com/users/nullscc/repos", "events_url": "https://api.github.com/users/nullscc/events{/privacy}", "received_events_url": "https://api.github.com/users/nullscc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-10-08T14:17:23Z", "updated_at": "2018-10-13T09:23:04Z", "closed_at": "2018-10-08T19:41:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have encountered a problem when using mongomock to run some tests. But it is just ok when I use a real mongdb server address.\r\n\r\n## environment\r\n```\r\npython 3.6.5\r\nmongoengine==0.15.3\r\npymongo==3.7.1\r\nmongomock==3.12.0\r\n```\r\n\r\n## code sample\r\n```\r\nfrom mongoengine import *\r\nfrom mongoengine.fields import *\r\n\r\nclass Test(Document):\r\n    meta = {\r\n        'db_alias': 'aa',\r\n        'collection': 'tt'\r\n    }\r\n\r\n    userid = StringField(required=True)\r\n    remark = StringField(required=False, default='')\r\n\r\n    @classmethod\r\n    def update_by_id(cls, id, **kwargs):\r\n        return cls.objects.filter(id=id).update_one(**kwargs)\r\n\r\nconnect(alias='aa', host='mongomock://127.0.0.1')\r\n# connect(alias='aa', host='mongodb://127.0.0.1')\r\ntid = str(Test(userid='123').save().id)\r\nprint(Test.update_by_id(tid, remark='test zero'))\r\n```\r\n\r\n## traceback\r\nWhen I run the code showed above, the error happens:\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 21, in <module>\r\n    print(Test.update_by_id(tid, remark='test zero'))\r\n  File \"test.py\", line 15, in update_by_id\r\n    return cls.objects.filter(id=id).update_one(**kwargs)\r\n  File \"/Users/null/.virtualenvs/sibbay_fc/lib/python3.6/site-packages/mongoengine/queryset/base.py\", line 585, in update_one\r\n    upsert=upsert, multi=False, write_concern=write_concern, **update)\r\n  File \"/Users/null/.virtualenvs/sibbay_fc/lib/python3.6/site-packages/mongoengine/queryset/base.py\", line 526, in update\r\n    with set_write_concern(queryset._collection, write_concern) as collection:\r\n  File \"/usr/local/Cellar/python/3.6.5/Frameworks/Python.framework/Versions/3.6/lib/python3.6/contextlib.py\", line 81, in __enter__\r\n    return next(self.gen)\r\n  File \"/Users/null/.virtualenvs/sibbay_fc/lib/python3.6/site-packages/mongoengine/context_managers.py\", line 226, in set_write_concern\r\n    yield collection.with_options(write_concern=WriteConcern(**combined_concerns))\r\n  File \"/Users/null/.virtualenvs/sibbay_fc/lib/python3.6/site-packages/mongomock/collection.py\", line 1917, in with_options\r\n    if value is not None and value != default_value:\r\n  File \"/Users/null/.virtualenvs/sibbay_fc/lib/python3.6/site-packages/pymongo/write_concern.py\", line 119, in __ne__\r\n    return self.__document != other.document\r\nAttributeError: 'NoneType' object has no attribute 'document'\r\n```\r\n\r\nAny help will be appreciated!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/457", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/457/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/457/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/457/events", "html_url": "https://github.com/mongomock/mongomock/issues/457", "id": 367797788, "node_id": "MDU6SXNzdWUzNjc3OTc3ODg=", "number": 457, "title": "mongomock does not validate the find filter when running on an empty collection", "user": {"login": "boxmansf", "id": 20337439, "node_id": "MDQ6VXNlcjIwMzM3NDM5", "avatar_url": "https://avatars0.githubusercontent.com/u/20337439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boxmansf", "html_url": "https://github.com/boxmansf", "followers_url": "https://api.github.com/users/boxmansf/followers", "following_url": "https://api.github.com/users/boxmansf/following{/other_user}", "gists_url": "https://api.github.com/users/boxmansf/gists{/gist_id}", "starred_url": "https://api.github.com/users/boxmansf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boxmansf/subscriptions", "organizations_url": "https://api.github.com/users/boxmansf/orgs", "repos_url": "https://api.github.com/users/boxmansf/repos", "events_url": "https://api.github.com/users/boxmansf/events{/privacy}", "received_events_url": "https://api.github.com/users/boxmansf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-08T13:45:20Z", "updated_at": "2018-10-08T19:46:48Z", "closed_at": "2018-10-08T19:46:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "In real mongo, when using a {'$or': []} query set, the following error is emitted:\r\n\r\n[0m >               response = {'code': 2, 'codeName': 'BadValue', 'errmsg': '$and/$or/$nor must be a nonempty array', \r\n....\r\n[0m >               raise OperationFailure(msg % errmsg, code, response)\r\n[0m E               OperationFailure: $and/$or/$nor must be a nonempty array", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/456", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/456/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/456/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/456/events", "html_url": "https://github.com/mongomock/mongomock/issues/456", "id": 367647524, "node_id": "MDU6SXNzdWUzNjc2NDc1MjQ=", "number": 456, "title": "method find_one with projection not return nested document [v3.12]", "user": {"login": "lukaszkiszka", "id": 12901052, "node_id": "MDQ6VXNlcjEyOTAxMDUy", "avatar_url": "https://avatars1.githubusercontent.com/u/12901052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukaszkiszka", "html_url": "https://github.com/lukaszkiszka", "followers_url": "https://api.github.com/users/lukaszkiszka/followers", "following_url": "https://api.github.com/users/lukaszkiszka/following{/other_user}", "gists_url": "https://api.github.com/users/lukaszkiszka/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukaszkiszka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukaszkiszka/subscriptions", "organizations_url": "https://api.github.com/users/lukaszkiszka/orgs", "repos_url": "https://api.github.com/users/lukaszkiszka/repos", "events_url": "https://api.github.com/users/lukaszkiszka/events{/privacy}", "received_events_url": "https://api.github.com/users/lukaszkiszka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-08T05:58:17Z", "updated_at": "2018-10-08T19:25:16Z", "closed_at": "2018-10-08T19:25:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "In database I have document:\r\n```javascript\r\n{\r\n'_id': ObjectId('5bbaf01a93d3e0147981ba4d')\r\n'name': 'test schedule', \r\n'mail_subject': 'Mail subject', \r\n'recipients': ['test@test.com'], \r\n'reports': [\r\n{'report_id': ObjectId('5b7e6af3ded0de64bf1f40c8'), 'format': 'csv'}, \r\n{'report_id': ObjectId('5b7e6af3ded0de64bf1f40c8'), 'format': 'pdf'}\r\n], \r\n'periodic_task_id': ObjectId('5bbaf01a93d3e0147981ba4e')\r\n}\r\n```\r\nWhen I run query:\r\n```python\r\nresult = ctx.mongo.db.report_schedule_definitions.find_one({'_id': ObjectId(Id)}, {'field': 0})\r\n```\r\nThen result is (not returns all document fields):\r\n```javascript\r\n{'name': 'test schedule', 'mail_subject': 'Mail subject', 'periodic_task_id': ObjectId('5bbaefe893d3e0141297f898'), '_id': ObjectId('5bbaefe893d3e0141297f897')}\r\n```\r\nWhen I run the same query without projection:\r\n```python\r\nresult = ctx.mongo.db.report_schedule_definitions.find_one({'_id': ObjectId(Id)})\r\n```\r\nthen query return corect document.\r\n\r\nAs you see when projection is setting in query then query not return nested object fields (recipients, reports fields). When I debug code I see in `collection.py` method `_project_by_spec` commnet `# copy only scalar values` - in this palace mockmongo omnit my nested object fields. why? \r\n\r\nIn mockmongo v3.10 this projection works fine.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/455", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/455/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/455/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/455/events", "html_url": "https://github.com/mongomock/mongomock/issues/455", "id": 366712220, "node_id": "MDU6SXNzdWUzNjY3MTIyMjA=", "number": 455, "title": "Deprecation warning for Python 3.8 (collections)", "user": {"login": "Biskit1943", "id": 17250956, "node_id": "MDQ6VXNlcjE3MjUwOTU2", "avatar_url": "https://avatars2.githubusercontent.com/u/17250956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Biskit1943", "html_url": "https://github.com/Biskit1943", "followers_url": "https://api.github.com/users/Biskit1943/followers", "following_url": "https://api.github.com/users/Biskit1943/following{/other_user}", "gists_url": "https://api.github.com/users/Biskit1943/gists{/gist_id}", "starred_url": "https://api.github.com/users/Biskit1943/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Biskit1943/subscriptions", "organizations_url": "https://api.github.com/users/Biskit1943/orgs", "repos_url": "https://api.github.com/users/Biskit1943/repos", "events_url": "https://api.github.com/users/Biskit1943/events{/privacy}", "received_events_url": "https://api.github.com/users/Biskit1943/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-04T10:00:27Z", "updated_at": "2018-10-04T13:12:39Z", "closed_at": "2018-10-04T13:12:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\npython3.7/site-packages/mongomock/collection.py:67: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n  if not isinstance(value, collections.Mapping):\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/453", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/453/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/453/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/453/events", "html_url": "https://github.com/mongomock/mongomock/issues/453", "id": 365437746, "node_id": "MDU6SXNzdWUzNjU0Mzc3NDY=", "number": 453, "title": "collection_names is deprecated", "user": {"login": "moonso", "id": 405278, "node_id": "MDQ6VXNlcjQwNTI3OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/405278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moonso", "html_url": "https://github.com/moonso", "followers_url": "https://api.github.com/users/moonso/followers", "following_url": "https://api.github.com/users/moonso/following{/other_user}", "gists_url": "https://api.github.com/users/moonso/gists{/gist_id}", "starred_url": "https://api.github.com/users/moonso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moonso/subscriptions", "organizations_url": "https://api.github.com/users/moonso/orgs", "repos_url": "https://api.github.com/users/moonso/repos", "events_url": "https://api.github.com/users/moonso/events{/privacy}", "received_events_url": "https://api.github.com/users/moonso/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-01T12:27:43Z", "updated_at": "2018-10-04T16:03:26Z", "closed_at": "2018-10-04T16:03:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As mentioned [here](\r\nhttp://api.mongodb.com/python/current/api/pymongo/database.html#pymongo.database.Database.collection_names) this will be replaced by [list_collection_names](\r\nhttp://api.mongodb.com/python/current/api/pymongo/database.html#pymongo.database.Database.list_collection_names)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/451", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/451/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/451/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/451/events", "html_url": "https://github.com/mongomock/mongomock/issues/451", "id": 363384707, "node_id": "MDU6SXNzdWUzNjMzODQ3MDc=", "number": 451, "title": "upsert does not ignore comparison operators in the query ", "user": {"login": "garhiggins", "id": 9663880, "node_id": "MDQ6VXNlcjk2NjM4ODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9663880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garhiggins", "html_url": "https://github.com/garhiggins", "followers_url": "https://api.github.com/users/garhiggins/followers", "following_url": "https://api.github.com/users/garhiggins/following{/other_user}", "gists_url": "https://api.github.com/users/garhiggins/gists{/gist_id}", "starred_url": "https://api.github.com/users/garhiggins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garhiggins/subscriptions", "organizations_url": "https://api.github.com/users/garhiggins/orgs", "repos_url": "https://api.github.com/users/garhiggins/repos", "events_url": "https://api.github.com/users/garhiggins/events{/privacy}", "received_events_url": "https://api.github.com/users/garhiggins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-25T02:16:39Z", "updated_at": "2018-09-25T07:49:49Z", "closed_at": "2018-09-25T07:49:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "From the MongoDB Docs (https://docs.mongodb.com/manual/reference/method/db.collection.update/#upsert-behavior):\r\n```\r\nThe update creates a base document from the equality clauses in the <query> parameter, and then applies the update expressions from the <update> parameter. **Comparison operations** from the <query> **will not be included** in the new document.\r\n```\r\nExample:\r\n```\r\nquery = {'$or': [{'name': 'billy'}, {'name': 'Billy'}]}\r\nupdate = {'$set': {'name': 'Billy', 'age': 5}}\r\ndb.widgets.update(query, update, upsert=True)\r\n```\r\nThis should insert `{name: 'Billy', age: 5}`, but instead results in the following exception:\r\n```\r\n  File \"/Users/garhiggins/cambly/Cambly-Backend/venv/lib/python2.7/site-packages/mongomock/collection.py\", line 535, in update\r\n    check_keys, **kwargs)\r\n  File \"/Users/garhiggins/cambly/Cambly-Backend/venv/lib/python2.7/site-packages/mongomock/collection.py\", line 822, in _update\r\n    upserted_id = self._insert(existing_document)\r\n  File \"/Users/garhiggins/cambly/Cambly-Backend/venv/lib/python2.7/site-packages/mongomock/collection.py\", line 463, in _insert\r\n    BSON.encode(data, check_keys=True)\r\n  File \"/Users/garhiggins/cambly/Cambly-Backend/venv/lib/python2.7/site-packages/bson/__init__.py\", line 1027, in encode\r\n    return cls(_dict_to_bson(document, check_keys, codec_options))\r\nbson.errors.InvalidDocument: key '$or' must not start with '$'\r\n```\r\nIf I print `data` from L463 of collection.py, I find that the comparison operation from the query has been included in the document:\r\n`{'$or': [{'name': 'billy'}, {'name': 'Billy'}], 'age': 5, '_id': ObjectId('5ba99a4f5c1f751e7e962eb7'), 'name': 'Billy'}`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mongomock/mongomock/issues/450", "repository_url": "https://api.github.com/repos/mongomock/mongomock", "labels_url": "https://api.github.com/repos/mongomock/mongomock/issues/450/labels{/name}", "comments_url": "https://api.github.com/repos/mongomock/mongomock/issues/450/comments", "events_url": "https://api.github.com/repos/mongomock/mongomock/issues/450/events", "html_url": "https://github.com/mongomock/mongomock/issues/450", "id": 362205946, "node_id": "MDU6SXNzdWUzNjIyMDU5NDY=", "number": 450, "title": "Regression in mongomock 3.12.0, when updating a value to a Counter() object", "user": {"login": "boxmansf", "id": 20337439, "node_id": "MDQ6VXNlcjIwMzM3NDM5", "avatar_url": "https://avatars0.githubusercontent.com/u/20337439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boxmansf", "html_url": "https://github.com/boxmansf", "followers_url": "https://api.github.com/users/boxmansf/followers", "following_url": "https://api.github.com/users/boxmansf/following{/other_user}", "gists_url": "https://api.github.com/users/boxmansf/gists{/gist_id}", "starred_url": "https://api.github.com/users/boxmansf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boxmansf/subscriptions", "organizations_url": "https://api.github.com/users/boxmansf/orgs", "repos_url": "https://api.github.com/users/boxmansf/repos", "events_url": "https://api.github.com/users/boxmansf/events{/privacy}", "received_events_url": "https://api.github.com/users/boxmansf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1352858, "node_id": "MDU6TGFiZWwxMzUyODU4", "url": "https://api.github.com/repos/mongomock/mongomock/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcorpet", "id": 7937848, "node_id": "MDQ6VXNlcjc5Mzc4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7937848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcorpet", "html_url": "https://github.com/pcorpet", "followers_url": "https://api.github.com/users/pcorpet/followers", "following_url": "https://api.github.com/users/pcorpet/following{/other_user}", "gists_url": "https://api.github.com/users/pcorpet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcorpet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcorpet/subscriptions", "organizations_url": "https://api.github.com/users/pcorpet/orgs", "repos_url": "https://api.github.com/users/pcorpet/repos", "events_url": "https://api.github.com/users/pcorpet/events{/privacy}", "received_events_url": "https://api.github.com/users/pcorpet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2018-09-20T14:08:52Z", "updated_at": "2018-09-20T20:44:03Z", "closed_at": "2018-09-20T20:44:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}]}