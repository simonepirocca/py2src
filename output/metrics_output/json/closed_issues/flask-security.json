{"total_count": 382, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/mattupstate/flask-security/issues/861", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/861/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/861/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/861/events", "html_url": "https://github.com/mattupstate/flask-security/issues/861", "id": 609488906, "node_id": "MDU6SXNzdWU2MDk0ODg5MDY=", "number": 861, "title": "Challenges with @http_auth_required", "user": {"login": "NexPlex", "id": 34607168, "node_id": "MDQ6VXNlcjM0NjA3MTY4", "avatar_url": "https://avatars0.githubusercontent.com/u/34607168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NexPlex", "html_url": "https://github.com/NexPlex", "followers_url": "https://api.github.com/users/NexPlex/followers", "following_url": "https://api.github.com/users/NexPlex/following{/other_user}", "gists_url": "https://api.github.com/users/NexPlex/gists{/gist_id}", "starred_url": "https://api.github.com/users/NexPlex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NexPlex/subscriptions", "organizations_url": "https://api.github.com/users/NexPlex/orgs", "repos_url": "https://api.github.com/users/NexPlex/repos", "events_url": "https://api.github.com/users/NexPlex/events{/privacy}", "received_events_url": "https://api.github.com/users/NexPlex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-30T01:26:47Z", "updated_at": "2020-04-30T04:54:24Z", "closed_at": "2020-04-30T04:53:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to use @http_auth_required but it does not seem to accept the password.  \r\ncurl -u 'me@someaddress.net':'=eers3e^X:7' http://localhost:8080/oauth/token \r\n\r\nThis line always returns false?\r\n```python\r\nverified = _pwd_context.verify(get_hmac(password), user.password)\r\n```\r\nThe same username and password via json post works fine in the /api/loginuser\r\n\r\nWhat am I doing wrong or missing?\r\n\r\n```python\r\n\r\nSECURITY_PASSWORD_HASH = 'pbkdf2_sha512'\r\nSECURITY_PASSWORD_SALT = 'kfkladsf-mdfadsy-dfsdf-dfadssaf'\r\n\r\n@app.route('/oauth/token')\r\n@http_auth_required\r\ndef token():\r\n    \"\"\"View function for login view.\"\"\"\r\n    logger.info('Logged in user')\r\n verified = _pwd_context.verify(get_hmac(password), user.password)\r\n\r\n\r\n@app.route('/api/loginuser', methods=['POST'])\r\ndef login():\r\n    \"\"\"View function for login view.\"\"\"\r\n    logger.info('Logged in user')\r\n    return token_login.login_with_token(request, app)\r\n\r\n\r\ndef verify_and_update_password(password, user):\r\n    \"\"\"Returns ``True`` if the password is valid for the specified user.\r\n\r\n    Additionally, the hashed password in the database is updated if the\r\n    hashing algorithm happens to have changed.\r\n\r\n    :param password: A plaintext password to verify\r\n    :param user: The user to verify against\r\n    \"\"\"\r\n    if use_double_hash(user.password):\r\n        verified = _pwd_context.verify(get_hmac(password), user.password)\r\n    else:\r\n        # Try with original password.\r\n        verified = _pwd_context.verify(password, user.password)\r\n\r\n    if verified and _pwd_context.needs_update(user.password):\r\n        user.password = hash_password(password)\r\n        _datastore.put(user)\r\n    return verified\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/857", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/857/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/857/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/857/events", "html_url": "https://github.com/mattupstate/flask-security/issues/857", "id": 563810008, "node_id": "MDU6SXNzdWU1NjM4MTAwMDg=", "number": 857, "title": "AttributeError: 'LoginManager' object has no attribute 'request_callback'", "user": {"login": "zazayaya", "id": 4928026, "node_id": "MDQ6VXNlcjQ5MjgwMjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4928026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zazayaya", "html_url": "https://github.com/zazayaya", "followers_url": "https://api.github.com/users/zazayaya/followers", "following_url": "https://api.github.com/users/zazayaya/following{/other_user}", "gists_url": "https://api.github.com/users/zazayaya/gists{/gist_id}", "starred_url": "https://api.github.com/users/zazayaya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zazayaya/subscriptions", "organizations_url": "https://api.github.com/users/zazayaya/orgs", "repos_url": "https://api.github.com/users/zazayaya/repos", "events_url": "https://api.github.com/users/zazayaya/events{/privacy}", "received_events_url": "https://api.github.com/users/zazayaya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-12T07:36:07Z", "updated_at": "2020-02-12T07:36:31Z", "closed_at": "2020-02-12T07:36:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Flask-Login==0.5.0\r\nAttributeError: 'LoginManager' object has no attribute 'request_callback'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/855", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/855/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/855/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/855/events", "html_url": "https://github.com/mattupstate/flask-security/issues/855", "id": 541358390, "node_id": "MDU6SXNzdWU1NDEzNTgzOTA=", "number": 855, "title": "__main__.UserDoesNotExist", "user": {"login": "shawnlawyer", "id": 3595257, "node_id": "MDQ6VXNlcjM1OTUyNTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/3595257?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shawnlawyer", "html_url": "https://github.com/shawnlawyer", "followers_url": "https://api.github.com/users/shawnlawyer/followers", "following_url": "https://api.github.com/users/shawnlawyer/following{/other_user}", "gists_url": "https://api.github.com/users/shawnlawyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/shawnlawyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shawnlawyer/subscriptions", "organizations_url": "https://api.github.com/users/shawnlawyer/orgs", "repos_url": "https://api.github.com/users/shawnlawyer/repos", "events_url": "https://api.github.com/users/shawnlawyer/events{/privacy}", "received_events_url": "https://api.github.com/users/shawnlawyer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-21T18:51:05Z", "updated_at": "2019-12-22T03:36:36Z", "closed_at": "2019-12-22T03:36:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey folks,\r\n\r\nI'm getting an exception in datastore.py at ln 352\r\n\r\nnot sure why this is happening since this in in a try statement.\r\n\r\nreturn self.user_model.get(self.user_model.id == identifier)\r\n\r\nbut when i submit the from i get:\r\n__main__.UserDoesNotExist\r\nUserDoesNotExist: <Model: User> instance matching query does not exist:\r\nSQL: SELECT `t1`.`id`, `t1`.`email`, `t1`.`password`, `t1`.`active` FROM `user` AS `t1` WHERE (`t1`.`id` = %s) LIMIT %s OFFSET %s\r\nParams: ['admin@example.com', 1, 0]\r\n\r\nnot sure what is going wrong here. i'm using an example for peewee and flask-admin\r\n\r\nbut this exception coming out of a try statement that should just pass on except is odd to me.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/854", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/854/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/854/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/854/events", "html_url": "https://github.com/mattupstate/flask-security/issues/854", "id": 523072628, "node_id": "MDU6SXNzdWU1MjMwNzI2Mjg=", "number": 854, "title": "Maintainers - Who?", "user": {"login": "italomaia", "id": 14670, "node_id": "MDQ6VXNlcjE0Njcw", "avatar_url": "https://avatars1.githubusercontent.com/u/14670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/italomaia", "html_url": "https://github.com/italomaia", "followers_url": "https://api.github.com/users/italomaia/followers", "following_url": "https://api.github.com/users/italomaia/following{/other_user}", "gists_url": "https://api.github.com/users/italomaia/gists{/gist_id}", "starred_url": "https://api.github.com/users/italomaia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/italomaia/subscriptions", "organizations_url": "https://api.github.com/users/italomaia/orgs", "repos_url": "https://api.github.com/users/italomaia/repos", "events_url": "https://api.github.com/users/italomaia/events{/privacy}", "received_events_url": "https://api.github.com/users/italomaia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-14T19:57:56Z", "updated_at": "2020-05-02T09:47:30Z", "closed_at": "2020-05-02T09:47:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. Currently, who are the official maintainers for this extension? I ask because, if memory serves me right, some time ago there was this discussion about who was maintaining the project and new maintainers stepped up. \r\nIs that still the case? Are new maintainers needed? Is someone looking into the PRs? Some are really old.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/851", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/851/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/851/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/851/events", "html_url": "https://github.com/mattupstate/flask-security/issues/851", "id": 503050012, "node_id": "MDU6SXNzdWU1MDMwNTAwMTI=", "number": 851, "title": "Is there a plan to migrate this module to Python 3?", "user": {"login": "gonwi", "id": 16006676, "node_id": "MDQ6VXNlcjE2MDA2Njc2", "avatar_url": "https://avatars1.githubusercontent.com/u/16006676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gonwi", "html_url": "https://github.com/gonwi", "followers_url": "https://api.github.com/users/gonwi/followers", "following_url": "https://api.github.com/users/gonwi/following{/other_user}", "gists_url": "https://api.github.com/users/gonwi/gists{/gist_id}", "starred_url": "https://api.github.com/users/gonwi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gonwi/subscriptions", "organizations_url": "https://api.github.com/users/gonwi/orgs", "repos_url": "https://api.github.com/users/gonwi/repos", "events_url": "https://api.github.com/users/gonwi/events{/privacy}", "received_events_url": "https://api.github.com/users/gonwi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-06T04:20:10Z", "updated_at": "2019-12-09T20:59:43Z", "closed_at": "2019-12-09T20:59:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey guys,\r\n\r\nI really like this package to build on, I am just wondering if anyone is building a python 3 version of it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/845", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/845/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/845/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/845/events", "html_url": "https://github.com/mattupstate/flask-security/issues/845", "id": 464984163, "node_id": "MDU6SXNzdWU0NjQ5ODQxNjM=", "number": 845, "title": "Can't use 'authentication-token' generated by custom login code", "user": {"login": "booherbg", "id": 159698, "node_id": "MDQ6VXNlcjE1OTY5OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/booherbg", "html_url": "https://github.com/booherbg", "followers_url": "https://api.github.com/users/booherbg/followers", "following_url": "https://api.github.com/users/booherbg/following{/other_user}", "gists_url": "https://api.github.com/users/booherbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/booherbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/booherbg/subscriptions", "organizations_url": "https://api.github.com/users/booherbg/orgs", "repos_url": "https://api.github.com/users/booherbg/repos", "events_url": "https://api.github.com/users/booherbg/events{/privacy}", "received_events_url": "https://api.github.com/users/booherbg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-07-07T19:22:42Z", "updated_at": "2019-07-08T01:15:36Z", "closed_at": "2019-07-07T21:06:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi everyone. I've lost most of my day to this bug and it's driving me crazy. I've finally nailed down what does and doesn't work, but I can't make heads or tails of it.\r\n\r\nIn short, I have an endpoint that logs a user in via an api request. This endpoint isn't anything fancy, but it exists so that I can still have CSRF enabled globally, but have a single endpoint that ignores CSRF for the sole purpose of logging in and getting an authentication-token. Once we have the token, we can use it for other API endpoints without triggering CSRF violations. I like this approach because I can still keep CSRF enabled but provide a JSON api as well.\r\n\r\nThe issue seems to be that any authentication token returned from my custom login function doesn't actually work. However, any authentication token generated from the flask shell (user.get_auth_token()) or from a regular session login work just fine.\r\n\r\nI'm confused because at the end of the day, my code is literally just calling user.get_auth_token() and returning it, but the seemingly valid token gets rejected by future api requests. It's really weird.\r\n\r\nHere's my custom login code (that works other than returning a broken auth token):\r\n``` python\r\nfrom flask import request, Blueprint, jsonify\r\nfrom flask_security.utils import verify_and_update_password, login_user\r\nfrom ..models.User import User\r\nfrom ..schemas.UserSchema import UserSchema # Marshmallow Schema\r\n\r\n# ... blueprint boilerplate ...\r\n\r\n# A login just for json -- requires no CSRF token. This is great because\r\n# it allows us to login with just username/password to get an auth token,\r\n# but still keep CSRF support for the rest of the site!\r\n@bp.route('/api/login', methods=['POST'])\r\ndef login():\r\n   content = request.json\r\n   email = content.get('email', None)\r\n   password = content.get('password', None)\r\n\r\n   # Fail before DB lookup if either field is missing\r\n   if ((email is None) or (password is None) or (len(email) < 3)):\r\n      return (\r\n         jsonify({\r\n            'error': 'Email and Password fields are required'\r\n            }), 400)\r\n\r\n   # Find the user (try both email and username fields)\r\n   user = User.query.filter_by(email=email).first()\r\n   if (user is None):\r\n      user = User.query.filter_by(username=email).first()\r\n\r\n   if (user and verify_and_update_password(password, user)):\r\n      login_user(user) # NOTE: disabling this does not fix the bug\r\n      \r\n      # auth token is dangerous so it doesnt live in schema... this is\r\n      # the only time we ever expose it to the client\r\n      authentication_token = user.get_auth_token()\r\n      \r\n      schema = UserSchema(only=('id', 'username', 'authentication_token', 'email'))\r\n      data = schema.dump(user).data\r\n      data['authentication_token'] = authentication_token\r\n      return jsonify(data)\r\n   else:\r\n      return (jsonify({\r\n         'error': 'Email/Username or Password are not correct'\r\n         }), 401)\r\n```\r\n\r\nNow that I've reviewed this, maybe it has to do with the verify_and_update_password call? I'm using that to verify that the password provided is correct. If this is the culprit, maybe there's a better way? This is the only function I've found that easily lets me verify that a password is correct, but perhaps a side effect of this is somehow invalidating the auth token (even though it's generated immediately after the function call, so you would think that it would generate a valid token!).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/840", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/840/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/840/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/840/events", "html_url": "https://github.com/mattupstate/flask-security/issues/840", "id": 442747645, "node_id": "MDU6SXNzdWU0NDI3NDc2NDU=", "number": 840, "title": "Is the project abandoned?", "user": {"login": "michaelbukachi", "id": 10145850, "node_id": "MDQ6VXNlcjEwMTQ1ODUw", "avatar_url": "https://avatars1.githubusercontent.com/u/10145850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbukachi", "html_url": "https://github.com/michaelbukachi", "followers_url": "https://api.github.com/users/michaelbukachi/followers", "following_url": "https://api.github.com/users/michaelbukachi/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbukachi/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbukachi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbukachi/subscriptions", "organizations_url": "https://api.github.com/users/michaelbukachi/orgs", "repos_url": "https://api.github.com/users/michaelbukachi/repos", "events_url": "https://api.github.com/users/michaelbukachi/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbukachi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-10T14:28:25Z", "updated_at": "2019-05-10T17:59:46Z", "closed_at": "2019-05-10T17:59:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "The last commit was made on Oct 30, 2018. Many issues don't receive an answer. Is this project still active?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/837", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/837/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/837/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/837/events", "html_url": "https://github.com/mattupstate/flask-security/issues/837", "id": 432836374, "node_id": "MDU6SXNzdWU0MzI4MzYzNzQ=", "number": 837, "title": "Can't get translations to work", "user": {"login": "rhaamo", "id": 8625, "node_id": "MDQ6VXNlcjg2MjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8625?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhaamo", "html_url": "https://github.com/rhaamo", "followers_url": "https://api.github.com/users/rhaamo/followers", "following_url": "https://api.github.com/users/rhaamo/following{/other_user}", "gists_url": "https://api.github.com/users/rhaamo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhaamo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhaamo/subscriptions", "organizations_url": "https://api.github.com/users/rhaamo/orgs", "repos_url": "https://api.github.com/users/rhaamo/repos", "events_url": "https://api.github.com/users/rhaamo/events{/privacy}", "received_events_url": "https://api.github.com/users/rhaamo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-13T11:14:39Z", "updated_at": "2019-06-19T23:02:36Z", "closed_at": "2019-06-19T23:02:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using flask_babelex in my app and the app translation itself works fine, but the flask-security part stays in english.\r\n\r\n```python\r\ndef create_app():\r\n...\r\n    babel = Babel(app)  # noqa: F841\r\n...\r\n    security = Security(  # noqa: F841\r\n        app, user_datastore, register_form=ExtendedRegisterForm, confirm_register_form=ExtendedRegisterForm\r\n    )\r\n...\r\n    @babel.localeselector\r\n    def get_locale():\r\n        # if a user is logged in, use the locale from the user settings\r\n        identity = getattr(g, \"identity\", None)\r\n        if identity is not None and identity.id:\r\n            return identity.user.locale\r\n        # otherwise try to guess the language from the user accept\r\n        # header the browser transmits.  We support fr/en in this\r\n        # example.  The best match wins.\r\n        print(f\"Best locale choosed: {request.accept_languages.best_match(AVAILABLE_LOCALES)}\")\r\n        return request.accept_languages.best_match(AVAILABLE_LOCALES)\r\n\r\n    @babel.timezoneselector\r\n    def get_timezone():\r\n        identity = getattr(g, \"identity\", None)\r\n        if identity is not None and identity.id:\r\n            return identity.user.timezone\r\n```\r\n\r\nMy `get_locale` returns \"fr\" as my browser have been set in french, but flask-security form labels and error messages stays in english.\r\n\r\nAny ideas on how I can try to debug that ?\r\n\r\n(running `git+https://github.com/mattupstate/flask-security@develop#egg=Flask-Security` actually because I need fixes not currently released)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/817", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/817/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/817/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/817/events", "html_url": "https://github.com/mattupstate/flask-security/issues/817", "id": 391609272, "node_id": "MDU6SXNzdWUzOTE2MDkyNzI=", "number": 817, "title": "Help debugging login process", "user": {"login": "beldaz", "id": 1341993, "node_id": "MDQ6VXNlcjEzNDE5OTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1341993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beldaz", "html_url": "https://github.com/beldaz", "followers_url": "https://api.github.com/users/beldaz/followers", "following_url": "https://api.github.com/users/beldaz/following{/other_user}", "gists_url": "https://api.github.com/users/beldaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/beldaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beldaz/subscriptions", "organizations_url": "https://api.github.com/users/beldaz/orgs", "repos_url": "https://api.github.com/users/beldaz/repos", "events_url": "https://api.github.com/users/beldaz/events{/privacy}", "received_events_url": "https://api.github.com/users/beldaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-17T08:46:06Z", "updated_at": "2018-12-18T02:35:43Z", "closed_at": "2018-12-18T02:35:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an application using Flask security that decorates a route with login_required, but the login process keeps redirecting back to the login page. I suspect the problem lies in the reverse proxy architecture (internally HTTP, but externally HTTPS), but I could it do with some advice on how to debug things. Is there a way to pin down where the redirection occurs internally? Another route that uses basic authentication appears to work fine... ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/816", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/816/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/816/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/816/events", "html_url": "https://github.com/mattupstate/flask-security/issues/816", "id": 389940299, "node_id": "MDU6SXNzdWUzODk5NDAyOTk=", "number": 816, "title": "Flask-Bcrypt compatibility? Invalid password when login", "user": {"login": "ivymichael", "id": 3784905, "node_id": "MDQ6VXNlcjM3ODQ5MDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3784905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivymichael", "html_url": "https://github.com/ivymichael", "followers_url": "https://api.github.com/users/ivymichael/followers", "following_url": "https://api.github.com/users/ivymichael/following{/other_user}", "gists_url": "https://api.github.com/users/ivymichael/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivymichael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivymichael/subscriptions", "organizations_url": "https://api.github.com/users/ivymichael/orgs", "repos_url": "https://api.github.com/users/ivymichael/repos", "events_url": "https://api.github.com/users/ivymichael/events{/privacy}", "received_events_url": "https://api.github.com/users/ivymichael/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-11T20:29:34Z", "updated_at": "2019-06-28T15:28:15Z", "closed_at": "2019-03-12T02:19:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n\r\nI disabled the Flask-Security registration form, and use my previous registration form, here is how I store the password based on user submitted form data:\r\n```\r\n...\r\nhashed_password = bcrypt.generate_password_hash(form.password.data).decode('utf-8')\r\nuser = User(username=form.username.data,email=form.email.data, password=hashed_password)\r\ndb.session.add(user)\r\n...\r\n```\r\nHowever, when try to login by using Flask-Security built-in login form, it says invalid password,\r\nthen I checked the documentation, I found it might be related to the HMAC idea here,\r\nis it possible that somehow I generate the hashed password by Flask-Bcrypt and finally can be accepted by Flask-Security login backend? I have very limited cryptography knowledge and stuck this for whole night : (\r\n\r\nor the mentioned `flask_security.utils.encrypt_password` in #143 is still available and also the only way to manage this? \r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/807", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/807/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/807/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/807/events", "html_url": "https://github.com/mattupstate/flask-security/issues/807", "id": 366254819, "node_id": "MDU6SXNzdWUzNjYyNTQ4MTk=", "number": 807, "title": "How to  exempt children URLs from parent @auth_token_required", "user": {"login": "micfan", "id": 2443027, "node_id": "MDQ6VXNlcjI0NDMwMjc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2443027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micfan", "html_url": "https://github.com/micfan", "followers_url": "https://api.github.com/users/micfan/followers", "following_url": "https://api.github.com/users/micfan/following{/other_user}", "gists_url": "https://api.github.com/users/micfan/gists{/gist_id}", "starred_url": "https://api.github.com/users/micfan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micfan/subscriptions", "organizations_url": "https://api.github.com/users/micfan/orgs", "repos_url": "https://api.github.com/users/micfan/repos", "events_url": "https://api.github.com/users/micfan/events{/privacy}", "received_events_url": "https://api.github.com/users/micfan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-03T09:44:19Z", "updated_at": "2018-11-06T09:34:20Z", "closed_at": "2018-11-06T09:34:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Hi author, I'd like to learn that how to exampt a child router URL from his parent router's `@auth_token_required`, is there someone have any idea?\r\n\r\n* And promote the SQL performance is better", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/795", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/795/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/795/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/795/events", "html_url": "https://github.com/mattupstate/flask-security/issues/795", "id": 346723388, "node_id": "MDU6SXNzdWUzNDY3MjMzODg=", "number": 795, "title": "Email Confirmation raises sqlalchemy.exc.InvalidRequestError", "user": {"login": "apmechev", "id": 5056220, "node_id": "MDQ6VXNlcjUwNTYyMjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5056220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apmechev", "html_url": "https://github.com/apmechev", "followers_url": "https://api.github.com/users/apmechev/followers", "following_url": "https://api.github.com/users/apmechev/following{/other_user}", "gists_url": "https://api.github.com/users/apmechev/gists{/gist_id}", "starred_url": "https://api.github.com/users/apmechev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apmechev/subscriptions", "organizations_url": "https://api.github.com/users/apmechev/orgs", "repos_url": "https://api.github.com/users/apmechev/repos", "events_url": "https://api.github.com/users/apmechev/events{/privacy}", "received_events_url": "https://api.github.com/users/apmechev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-01T18:49:54Z", "updated_at": "2018-08-01T22:01:57Z", "closed_at": "2018-08-01T22:01:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all, \r\n\r\nI'm attempting to use the ConfirmRegisterForm in flask-security, however when the confirmation email is clicked, I get an sqlalchemy.exc.InvalidRequestError\r\n\r\nviews.py:\r\n~~~~\r\nfrom flask import render_template, flash, redirect, request, session\r\nfrom my_app.database import db_session, init_db\r\nfrom my_app import app\r\n\r\nfrom flask_security import Security, UserMixin, RoleMixin, login_required, SQLAlchemySessionUserDatastore\r\nfrom .forms import LoginForm\r\nfrom flask_oauth import OAuth\r\nfrom my_app import models\r\nfrom my_app.models import User, Role\r\nfrom flask_security.forms import RegisterForm\r\nfrom flask_security.forms import ConfirmRegisterForm, Required, StringField\r\n\r\nfrom my_app import db\r\n\r\nuser_datastore = SQLAlchemySessionUserDatastore(db_session,\r\n                                                User, Role)\r\n\r\nclass ExtendedConfirmRegisterForm(ConfirmRegisterForm):\r\n    username = StringField('Username', [Required()])\r\n\r\nsecurity = Security(app, user_datastore , confirm_register_form=ExtendedConfirmRegisterForm)\r\n\r\n@app.teardown_appcontext\r\ndef shutdown_session(exception=None):\r\n    db_session.remove()\r\n~~~~\r\n\r\n\\_\\_init\\_\\_.py\r\n~~~~\r\nfrom flask import Flask\r\nfrom flask_sqlalchemy import SQLAlchemy\r\nfrom flask_login import LoginManager\r\nfrom flask_migrate import Migrate\r\n\r\napp = Flask(__name__)\r\napp.config.from_pyfile('config.py')\r\ndb = SQLAlchemy(app)\r\nmigrate = Migrate(app, db)\r\n\r\nModel = db.Model\r\nfrom my_app import views, models\r\n~~~~\r\n\r\nmodel.py\r\n~~~~\r\nfrom my_app.database import Base\r\nfrom my_app import Model\r\nfrom flask_security import UserMixin, RoleMixin\r\nfrom sqlalchemy import create_engine\r\nfrom sqlalchemy.orm import relationship, backref\r\nfrom sqlalchemy import Boolean, DateTime, Column, Integer, String, ForeignKey, Float\r\nfrom flask_migrate import Migrate\r\n\r\nclass User(Model, UserMixin):\r\n ....\r\n~~~~\r\n\r\ndatabase.py\r\n~~~~\r\nfrom sqlalchemy import create_engine\r\nfrom sqlalchemy.orm import scoped_session, sessionmaker\r\nfrom sqlalchemy.ext.declarative import declarative_base\r\nfrom my_app.config import SQLALCHEMY_DATABASE_URI\r\n\r\nengine = create_engine(SQLALCHEMY_DATABASE_URI, \\\r\n                       convert_unicode=True)\r\n\r\ndb_session = scoped_session(sessionmaker(autocommit=True,\r\n                                         autoflush=False,\r\n                                         bind=engine))\r\nBase = declarative_base()\r\nBase.query = db_session.query_property()\r\n~~~~\r\n\r\n\r\nI would guess there's an issue with the order of imports, since the rest of my code is taken from the flask and flask-security tutorials, and I'm just using the regular ConfirmRegisterForm with an extra field. \r\n\r\nhere is the backtrace I get when I click on the confirmation email:\r\n\r\n~~~~\r\nERROR in app: Exception on /confirm/WyIxMyIsIiQ1JHJvdW5kcz01MzUwMDAkakp0dElmUXBhWkZ2RDJ4MCRvNVlleWQ5cmJYMUJKUTdtM1J0VE9Vd1dJR3JpdW9sSGpUSFZWMzV2ZWo1Il0.DkOGCQ.sgV8Z0T5AAVNn85VBS8rby0qnyU [GET]\r\nTraceback (most recent call last):\r\n  File \"/home/apmechev/apmechev_files/my_app/flask/lib/python3.5/site-packages/flask/app.py\", line 2292, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/home/apmechev/apmechev_files/my_app/flask/lib/python3.5/site-packages/flask/app.py\", line 1815, in full_dispatch_request\r\n  rv = self.handle_user_exception(e)\r\nFile \"/home/apmechev/apmechev_files/my_app/flask/lib/python3.5/site-packages/flask/app.py\", line 1718, in handle_user_exception\r\n  reraise(exc_type, exc_value, tb)\r\nFile \"/home/apmechev/apmechev_files/my_app/flask/lib/python3.5/site-packages/flask/_compat.py\", line 35, in reraise\r\n  raise value\r\nFile \"/home/apmechev/apmechev_files/my_app/flask/lib/python3.5/site-packages/flask/app.py\", line 1813, in full_dispatch_request\r\n  rv = self.dispatch_request()\r\nFile \"/home/apmechev/apmechev_files/my_app/flask/lib/python3.5/site-packages/flask/app.py\", line 1799, in dispatch_request\r\n  return self.view_functions[rule.endpoint](**req.view_args)\r\nFile \"/home/apmechev/apmechev_files/my_app/flask/lib/python3.5/site-packages/flask_security/views.py\", line 236, in confirm_email\r\n  if confirm_user(user):\r\nFile \"/home/apmechev/apmechev_files/my_app/flask/lib/python3.5/site-packages/flask_security/confirmable.py\", line 90, in confirm_user\r\n  _datastore.put(user)\r\nFile \"/home/apmechev/apmechev_files/my_app/flask/lib/python3.5/site-packages/flask_security/datastore.py\", line 34, in put\r\n  self.db.session.add(model)\r\nFile \"/home/apmechev/apmechev_files/my_app/flask/lib/python3.5/site-packages/sqlalchemy/orm/scoping.py\", line 153, in do \r\n  return getattr(self.registry(), name)(*args, **kwargs)\r\nFile \"/home/apmechev/apmechev_files/my_app/flask/lib/python3.5/site-packages/sqlalchemy/orm/session.py\", line 1776, in add\r\n  self._save_or_update_state(state)\r\nFile \"/home/apmechev/apmechev_files/my_app/flask/lib/python3.5/site-packages/sqlalchemy/orm/session.py\", line 1789, in _save_or_update_state\r\n  self._save_or_update_impl(state)\r\nFile \"/home/apmechev/apmechev_files/my_app/flask/lib/python3.5/site-packages/sqlalchemy/orm/session.py\", line 2106, in _save_or_update_impl\r\n  self._update_impl(state)\r\nFile \"/home/apmechev/apmechev_files/my_app/flask/lib/python3.5/site-packages/sqlalchemy/orm/session.py\", line 2089, in _update_impl\r\n  to_attach = self._before_attach(state, obj)\r\nFile \"/home/apmechev/apmechev_files/my_app/flask/lib/python3.5/site-packages/sqlalchemy/orm/session.py\", line 2179, in \r\n _before_attach\r\n    state.session_id, self.hash_key))\r\nsqlalchemy.exc.InvalidRequestError: Object '<User at 0x7f3ed4d7f908>' is already attached to session '1' (this is '2')\r\n~~~~\r\n\r\n\r\nThanks in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/778", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/778/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/778/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/778/events", "html_url": "https://github.com/mattupstate/flask-security/issues/778", "id": 323632995, "node_id": "MDU6SXNzdWUzMjM2MzI5OTU=", "number": 778, "title": "Template errors", "user": {"login": "alxvallejo", "id": 947203, "node_id": "MDQ6VXNlcjk0NzIwMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/947203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alxvallejo", "html_url": "https://github.com/alxvallejo", "followers_url": "https://api.github.com/users/alxvallejo/followers", "following_url": "https://api.github.com/users/alxvallejo/following{/other_user}", "gists_url": "https://api.github.com/users/alxvallejo/gists{/gist_id}", "starred_url": "https://api.github.com/users/alxvallejo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alxvallejo/subscriptions", "organizations_url": "https://api.github.com/users/alxvallejo/orgs", "repos_url": "https://api.github.com/users/alxvallejo/repos", "events_url": "https://api.github.com/users/alxvallejo/events{/privacy}", "received_events_url": "https://api.github.com/users/alxvallejo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-16T13:57:07Z", "updated_at": "2018-05-16T14:29:45Z", "closed_at": "2018-05-16T14:29:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm encountering an error when I try to override the forgot_template.html template:\r\n\r\n> web_1  |   File \"/usr/local/lib/python3.6/site-packages/flask/templating.py\", line 86, in _get_source_fast\r\n> web_1  |     raise TemplateNotFound(template)\r\n> web_1  | jinja2.exceptions.TemplateNotFound: security/base.html\r\n\r\nSteps to reproduce:\r\n1. Add `myApp/templates/security/forgot_password.html`\r\n2. Copy the template from [https://github.com/mattupstate/flask-security/blob/develop/flask_security/templates/security/forgot_password.html](https://github.com/mattupstate/flask-security/blob/develop/flask_security/templates/security/forgot_password.html)\r\n3. Refresh localhost/reset\r\n\r\nWhat am I doing wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/775", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/775/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/775/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/775/events", "html_url": "https://github.com/mattupstate/flask-security/issues/775", "id": 317615065, "node_id": "MDU6SXNzdWUzMTc2MTUwNjU=", "number": 775, "title": "Redirect unauthorized user to specific url", "user": {"login": "Usman17", "id": 27857036, "node_id": "MDQ6VXNlcjI3ODU3MDM2", "avatar_url": "https://avatars0.githubusercontent.com/u/27857036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Usman17", "html_url": "https://github.com/Usman17", "followers_url": "https://api.github.com/users/Usman17/followers", "following_url": "https://api.github.com/users/Usman17/following{/other_user}", "gists_url": "https://api.github.com/users/Usman17/gists{/gist_id}", "starred_url": "https://api.github.com/users/Usman17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Usman17/subscriptions", "organizations_url": "https://api.github.com/users/Usman17/orgs", "repos_url": "https://api.github.com/users/Usman17/repos", "events_url": "https://api.github.com/users/Usman17/events{/privacy}", "received_events_url": "https://api.github.com/users/Usman17/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 932611, "node_id": "MDU6TGFiZWw5MzI2MTE=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-25T12:53:35Z", "updated_at": "2018-07-05T10:52:02Z", "closed_at": "2018-07-05T10:52:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to redirect user to specific url if user tries open a restricted page without login.\r\ni.e\r\n```\r\n@roles_accepted('admin')\r\ndef dashboard():\r\n //code\r\n```\r\nAnd in config.py i have added this line\r\nSECURITY_UNAUTHORIZED_VIEW = '/login'\r\nto redirect user to login page but it always redirect user to home page('/').", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/769", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/769/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/769/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/769/events", "html_url": "https://github.com/mattupstate/flask-security/issues/769", "id": 309842680, "node_id": "MDU6SXNzdWUzMDk4NDI2ODA=", "number": 769, "title": "roles_accepted and roles_required redirects instead of calling unauthorized_handler", "user": {"login": "HarrySky", "id": 8982851, "node_id": "MDQ6VXNlcjg5ODI4NTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/8982851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HarrySky", "html_url": "https://github.com/HarrySky", "followers_url": "https://api.github.com/users/HarrySky/followers", "following_url": "https://api.github.com/users/HarrySky/following{/other_user}", "gists_url": "https://api.github.com/users/HarrySky/gists{/gist_id}", "starred_url": "https://api.github.com/users/HarrySky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HarrySky/subscriptions", "organizations_url": "https://api.github.com/users/HarrySky/orgs", "repos_url": "https://api.github.com/users/HarrySky/repos", "events_url": "https://api.github.com/users/HarrySky/events{/privacy}", "received_events_url": "https://api.github.com/users/HarrySky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-29T17:39:06Z", "updated_at": "2018-11-02T12:42:00Z", "closed_at": "2018-04-04T22:58:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "If using decorators `roles_accepted` or `roles_required` and user don't have the role that is needed - he will be redirected from domain.com/tester to domain.com/ , when it is expected that `unauthorized_handler` should be called. Decorator `login_required` works fine. What is the problem? Maybe for roles I need to define another callback?\r\n\r\n```\r\n@auth_bp.route(\"/tester\")\r\n@decorators.login_required\r\n@decorators.roles_accepted('tester')\r\ndef tester():\r\n\treturn \"Hello, Tester\"\r\n\r\n@app.login_manager.unauthorized_handler\r\ndef unauthorized_callback():\r\n\treturn unauthorized_response\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/766", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/766/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/766/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/766/events", "html_url": "https://github.com/mattupstate/flask-security/issues/766", "id": 303810700, "node_id": "MDU6SXNzdWUzMDM4MTA3MDA=", "number": 766, "title": "SQLAlchemy models outside flask app", "user": {"login": "nbob", "id": 3524322, "node_id": "MDQ6VXNlcjM1MjQzMjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3524322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbob", "html_url": "https://github.com/nbob", "followers_url": "https://api.github.com/users/nbob/followers", "following_url": "https://api.github.com/users/nbob/following{/other_user}", "gists_url": "https://api.github.com/users/nbob/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbob/subscriptions", "organizations_url": "https://api.github.com/users/nbob/orgs", "repos_url": "https://api.github.com/users/nbob/repos", "events_url": "https://api.github.com/users/nbob/events{/privacy}", "received_events_url": "https://api.github.com/users/nbob/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 932611, "node_id": "MDU6TGFiZWw5MzI2MTE=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-09T11:28:31Z", "updated_at": "2018-07-05T10:49:56Z", "closed_at": "2018-07-05T10:49:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "My Alchemy models extended from `sqlalchemy.ext.declarative.declarative_base()` and it is not possible to subclass from `db.Model`, because I want to use my model not only in flask app.\r\n\r\nHow can I use plain SQLAlchemy models in my flask-security application?\r\nOr it is not possible by design?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/763", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/763/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/763/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/763/events", "html_url": "https://github.com/mattupstate/flask-security/issues/763", "id": 301945781, "node_id": "MDU6SXNzdWUzMDE5NDU3ODE=", "number": 763, "title": "@anonymous_user_required for confirm views?", "user": {"login": "jeffoneill", "id": 166472, "node_id": "MDQ6VXNlcjE2NjQ3Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/166472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeffoneill", "html_url": "https://github.com/jeffoneill", "followers_url": "https://api.github.com/users/jeffoneill/followers", "following_url": "https://api.github.com/users/jeffoneill/following{/other_user}", "gists_url": "https://api.github.com/users/jeffoneill/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeffoneill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeffoneill/subscriptions", "organizations_url": "https://api.github.com/users/jeffoneill/orgs", "repos_url": "https://api.github.com/users/jeffoneill/repos", "events_url": "https://api.github.com/users/jeffoneill/events{/privacy}", "received_events_url": "https://api.github.com/users/jeffoneill/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9116315, "node_id": "MDU6TGFiZWw5MTE2MzE1", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/discussion", "name": "discussion", "color": "444444", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-03T00:16:40Z", "updated_at": "2018-06-28T11:32:48Z", "closed_at": "2018-06-28T11:32:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Shouldn't the `send_confirmation` and `confirm_email` views have the `@anonymous_user_required` decorator?\r\n\r\nIf a user is authenticated, then it seems that they had to have previously confirmed.  Or am I misunderstanding something?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/761", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/761/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/761/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/761/events", "html_url": "https://github.com/mattupstate/flask-security/issues/761", "id": 300489539, "node_id": "MDU6SXNzdWUzMDA0ODk1Mzk=", "number": 761, "title": "Recover Password button does nothing", "user": {"login": "chriscate", "id": 3527720, "node_id": "MDQ6VXNlcjM1Mjc3MjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3527720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chriscate", "html_url": "https://github.com/chriscate", "followers_url": "https://api.github.com/users/chriscate/followers", "following_url": "https://api.github.com/users/chriscate/following{/other_user}", "gists_url": "https://api.github.com/users/chriscate/gists{/gist_id}", "starred_url": "https://api.github.com/users/chriscate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chriscate/subscriptions", "organizations_url": "https://api.github.com/users/chriscate/orgs", "repos_url": "https://api.github.com/users/chriscate/repos", "events_url": "https://api.github.com/users/chriscate/events{/privacy}", "received_events_url": "https://api.github.com/users/chriscate/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-02-27T04:26:19Z", "updated_at": "2018-03-02T02:50:35Z", "closed_at": "2018-03-02T02:50:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have made a few changes to allow users to log in with a username rather than an email address. That all works fine. I'm now setting up password reset functionality, and when I click the button to recover the password using the default template, nothing happens other than I see a POST request to the reset URL (the page I am already on) with a 200 response.  I don't get redirected anywhere and no email gets sent.  I have configured mail.\r\n\r\nHere are the changes I made to forms.py:\r\n```\r\nclass ExtendedLoginForm(LoginForm):\r\n    email = StringField('Username', [Required()])\r\n\r\nclass ExtendedForgotPasswordForm(ForgotPasswordForm):\r\n    username = StringField('Username')\r\n```\r\n\r\nand this change to config.py\r\n`SECURITY_USER_IDENTITY_ATTRIBUTES = 'username'`\r\n\r\nI also set the following in config.py\r\n```\r\nSECURITY_RECOVERABLE = True\r\nSECURITY_SEND_PASSWORD_RESET_EMAIL = True\r\n```\r\n\r\nAny thoughts on what might be going on here?\r\n\r\nThanks\r\n\r\nEDIT: fixed typo pointed out by @scraggelz ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/759", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/759/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/759/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/759/events", "html_url": "https://github.com/mattupstate/flask-security/issues/759", "id": 299094169, "node_id": "MDU6SXNzdWUyOTkwOTQxNjk=", "number": 759, "title": "RuntimeError: The configuration value `SECURITY_PASSWORD_SALT` must not be None when the value of `SECURITY_PASSWORD_HASH` is set to \"bcrypt\"", "user": {"login": "eliaperantoni", "id": 6002855, "node_id": "MDQ6VXNlcjYwMDI4NTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6002855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eliaperantoni", "html_url": "https://github.com/eliaperantoni", "followers_url": "https://api.github.com/users/eliaperantoni/followers", "following_url": "https://api.github.com/users/eliaperantoni/following{/other_user}", "gists_url": "https://api.github.com/users/eliaperantoni/gists{/gist_id}", "starred_url": "https://api.github.com/users/eliaperantoni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eliaperantoni/subscriptions", "organizations_url": "https://api.github.com/users/eliaperantoni/orgs", "repos_url": "https://api.github.com/users/eliaperantoni/repos", "events_url": "https://api.github.com/users/eliaperantoni/events{/privacy}", "received_events_url": "https://api.github.com/users/eliaperantoni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-21T19:17:54Z", "updated_at": "2019-12-03T19:28:53Z", "closed_at": "2018-05-04T21:42:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've tried running the example script at https://pythonhosted.org/Flask-Security/quickstart.html#id1 but when I open the url I get this error\r\n\r\n```\r\nRuntimeError: The configuration value `SECURITY_PASSWORD_SALT` must not be None when the value of `SECURITY_PASSWORD_HASH` is set to \"bcrypt\"\r\n```\r\n\r\nWhat am I doing wrong?\r\nIs settings the security password hash config to `bcrypt.gensalt()` on startup a good idea?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/757", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/757/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/757/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/757/events", "html_url": "https://github.com/mattupstate/flask-security/issues/757", "id": 298148585, "node_id": "MDU6SXNzdWUyOTgxNDg1ODU=", "number": 757, "title": "Typo in documentation > Quick Start > Proxy Configuration", "user": {"login": "gouyou", "id": 4737592, "node_id": "MDQ6VXNlcjQ3Mzc1OTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4737592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gouyou", "html_url": "https://github.com/gouyou", "followers_url": "https://api.github.com/users/gouyou/followers", "following_url": "https://api.github.com/users/gouyou/following{/other_user}", "gists_url": "https://api.github.com/users/gouyou/gists{/gist_id}", "starred_url": "https://api.github.com/users/gouyou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gouyou/subscriptions", "organizations_url": "https://api.github.com/users/gouyou/orgs", "repos_url": "https://api.github.com/users/gouyou/repos", "events_url": "https://api.github.com/users/gouyou/events{/privacy}", "received_events_url": "https://api.github.com/users/gouyou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-19T02:52:18Z", "updated_at": "2018-09-17T22:45:50Z", "closed_at": "2018-06-28T11:31:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the documentation for Quick Start > [Proxy Configuration](https://pythonhosted.org/Flask-Security/quickstart.html#id8), the line:\r\n``` python\r\nfrom werkzeug.config.fixers import ProxyFix\r\n```\r\nShould be:\r\n``` python\r\nfrom werkzeug.contrib.fixers import ProxyFix\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/754", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/754/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/754/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/754/events", "html_url": "https://github.com/mattupstate/flask-security/issues/754", "id": 296226012, "node_id": "MDU6SXNzdWUyOTYyMjYwMTI=", "number": 754, "title": "Flask-Security doesn't recover from error", "user": {"login": "Avamander", "id": 5392141, "node_id": "MDQ6VXNlcjUzOTIxNDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/5392141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Avamander", "html_url": "https://github.com/Avamander", "followers_url": "https://api.github.com/users/Avamander/followers", "following_url": "https://api.github.com/users/Avamander/following{/other_user}", "gists_url": "https://api.github.com/users/Avamander/gists{/gist_id}", "starred_url": "https://api.github.com/users/Avamander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Avamander/subscriptions", "organizations_url": "https://api.github.com/users/Avamander/orgs", "repos_url": "https://api.github.com/users/Avamander/repos", "events_url": "https://api.github.com/users/Avamander/events{/privacy}", "received_events_url": "https://api.github.com/users/Avamander/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 932612, "node_id": "MDU6TGFiZWw5MzI2MTI=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-02-11T21:11:53Z", "updated_at": "2019-07-25T13:43:12Z", "closed_at": "2018-07-01T18:11:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "For some reason my webpage one day decided to take itself down for some reason, giving me these stacktraces:\r\n\r\n```\r\n(psycopg2.OperationalError) SSL connection has been closed unexpectedly\r\n [SQL: 'SELECT \"user\".id AS user_id, \"user\".email AS user_email, \"user\".username AS user_username, \"user\".password AS user_password, \"user\".active AS user_active, \"user\".confirmed_at AS user_confirmed_at \\nFROM \"user\" \\nWHERE \"user\".id = %(id_1)s \\n LIMIT %(param_1)s'] [parameters: {'param_1': 1, 'id_1': '0'}] (Background on this error at: http://sqlalche.me/e/e3q8)\r\nTraceback (most recent call last):\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 1193, in _execute_context\r\n    context)\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/engine/default.py\", line 507, in do_execute\r\n    cursor.execute(statement, parameters)\r\npsycopg2.OperationalError: SSL connection has been closed unexpectedly\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/raven/contrib/flask.py\", line 238, in before_request\r\n    self.client.user_context(self.get_user_info(request))\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/raven/contrib/flask.py\", line 163, in get_user_info\r\n    is_authenticated = current_user.is_authenticated\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/werkzeug/local.py\", line 347, in __getattr__\r\n    return getattr(self._get_current_object(), name)\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/werkzeug/local.py\", line 306, in _get_current_object\r\n    return self.__local()\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/flask_login/utils.py\", line 26, in <lambda>\r\n    current_user = LocalProxy(lambda: _get_user())\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/flask_login/utils.py\", line 335, in _get_user\r\n    current_app.login_manager._load_user()\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/flask_login/login_manager.py\", line 359, in _load_user\r\n    return self.reload_user()\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/flask_login/login_manager.py\", line 321, in reload_user\r\n    user = self.user_callback(user_id)\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/flask_security/core.py\", line 221, in _user_loader\r\n    return _security.datastore.find_user(id=user_id)\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/flask_security/datastore.py\", line 254, in find_user\r\n    return self.user_model.query.filter_by(**kwargs).first()\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/orm/query.py\", line 2778, in first\r\n    ret = list(self[0:1])\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/orm/query.py\", line 2570, in __getitem__\r\n    return list(res)\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/orm/query.py\", line 2878, in __iter__\r\n    return self._execute_and_instances(context)\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/orm/query.py\", line 2901, in _execute_and_instances\r\n    result = conn.execute(querycontext.statement, self._params)\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 948, in execute\r\n    return meth(self, multiparams, params)\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/sql/elements.py\", line 269, in _execute_on_connection\r\n    return connection._execute_clauseelement(self, multiparams, params)\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 1060, in _execute_clauseelement\r\n    compiled_sql, distilled_params\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 1200, in _execute_context\r\n    context)\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 1413, in _handle_dbapi_exception\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 1413, in _handle_dbapi_exception\r\n    exc_info\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/util/compat.py\", line 203, in raise_from_cause\r\n    reraise(type(exception), exception, tb=exc_tb, cause=cause)\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/util/compat.py\", line 186, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 1193, in _execute_context\r\n    context)\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/engine/default.py\", line 507, in do_execute\r\n    cursor.execute(statement, parameters)\r\nsqlalchemy.exc.OperationalError: (psycopg2.OperationalError) SSL connection has been closed unexpectedly\r\n [SQL: 'SELECT \"user\".id AS user_id, \"user\".email AS user_email, \"user\".username AS user_username, \"user\".password AS user_password, \"user\".active AS user_active, \"user\".confirmed_at AS user_confirmed_at \\nFROM \"user\" \\nWHERE \"user\".id = %(id_1)s \\n LIMIT %(param_1)s'] [parameters: {'param_1': 1, 'id_1': '0'}] (Background on this error at: http://sqlalche.me/e/e3q8)\r\n(sqlalchemy.exc.InvalidRequestError) Can't reconnect until invalid transaction is rolled back [SQL: 'SELECT \"user\".id AS user_id, \"user\".email AS user_email, \"user\".username AS user_username, \"user\".password AS user_password, \"user\".active AS user_active, \"user\".confirmed_at AS user_confirmed_at \\nFROM \"user\" \\nWHERE \"user\".id = %(id_1)s \\n LIMIT %(param_1)s'] [parameters: [{}]]\r\nTraceback (most recent call last):\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 1125, in _execute_context\r\n    conn = self._revalidate_connection()\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 427, in _revalidate_connection\r\n    \"Can't reconnect until invalid \"\r\nsqlalchemy.exc.InvalidRequestError: Can't reconnect until invalid transaction is rolled back\r\n\r\nThe above exception was the direct cause of the following exception:\r\nTraceback (most recent call last):\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/flask/app.py\", line 1982, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/flask/app.py\", line 1614, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/flask/app.py\", line 1517, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/flask/_compat.py\", line 33, in reraise\r\n    raise value\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/flask/app.py\", line 1610, in full_dispatch_request\r\n    rv = self.preprocess_request()\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/flask/app.py\", line 1831, in preprocess_request\r\n    rv = func()\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/flask_principal.py\", line 477, in _on_before_request\r\n    identity = loader()\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/flask_security/core.py\", line 245, in _identity_loader\r\n    if not isinstance(current_user._get_current_object(), AnonymousUserMixin):\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/werkzeug/local.py\", line 306, in _get_current_object\r\n    return self.__local()\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/flask_login/utils.py\", line 26, in <lambda>\r\n    current_user = LocalProxy(lambda: _get_user())\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/flask_login/utils.py\", line 335, in _get_user\r\n    current_app.login_manager._load_user()\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/flask_login/login_manager.py\", line 359, in _load_user\r\n    return self.reload_user()\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/flask_login/login_manager.py\", line 321, in reload_user\r\n    user = self.user_callback(user_id)\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/flask_security/core.py\", line 221, in _user_loader\r\n    return _security.datastore.find_user(id=user_id)\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/flask_security/datastore.py\", line 254, in find_user\r\n    return self.user_model.query.filter_by(**kwargs).first()\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/orm/query.py\", line 2778, in first\r\n    ret = list(self[0:1])\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/orm/query.py\", line 2570, in __getitem__\r\n    return list(res)\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/orm/query.py\", line 2878, in __iter__\r\n    return self._execute_and_instances(context)\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/orm/query.py\", line 2901, in _execute_and_instances\r\n    result = conn.execute(querycontext.statement, self._params)\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 948, in execute\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/sql/elements.py\", line 269, in _execute_on_connection\r\n    return connection._execute_clauseelement(self, multiparams, params)\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 1060, in _execute_clauseelement\r\n    compiled_sql, distilled_params\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 1132, in _execute_context\r\n    None, None)\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 1413, in _handle_dbapi_exception\r\n    exc_info\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/util/compat.py\", line 203, in raise_from_cause\r\n    reraise(type(exception), exception, tb=exc_tb, cause=cause)\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/util/compat.py\", line 186, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 1125, in _execute_context\r\n    conn = self._revalidate_connection()\r\n  File \"/home/avamander/.local/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 427, in _revalidate_connection\r\n    \"Can't reconnect until invalid \"\r\n\r\nRepeats indefinetly...\r\n```\r\nAny ideas how to avoid situations like these in the future?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/752", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/752/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/752/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/752/events", "html_url": "https://github.com/mattupstate/flask-security/issues/752", "id": 294923950, "node_id": "MDU6SXNzdWUyOTQ5MjM5NTA=", "number": 752, "title": "After how long is the password reset token expired?", "user": {"login": "sdiepend", "id": 1036833, "node_id": "MDQ6VXNlcjEwMzY4MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1036833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdiepend", "html_url": "https://github.com/sdiepend", "followers_url": "https://api.github.com/users/sdiepend/followers", "following_url": "https://api.github.com/users/sdiepend/following{/other_user}", "gists_url": "https://api.github.com/users/sdiepend/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdiepend/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdiepend/subscriptions", "organizations_url": "https://api.github.com/users/sdiepend/orgs", "repos_url": "https://api.github.com/users/sdiepend/repos", "events_url": "https://api.github.com/users/sdiepend/events{/privacy}", "received_events_url": "https://api.github.com/users/sdiepend/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 932611, "node_id": "MDU6TGFiZWw5MzI2MTE=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-02-06T21:45:47Z", "updated_at": "2018-07-01T18:09:02Z", "closed_at": "2018-07-01T18:09:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Where can I find after how long the token in the password reset url expires?\r\nCan I set it to expire after x time somewhere?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/750", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/750/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/750/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/750/events", "html_url": "https://github.com/mattupstate/flask-security/issues/750", "id": 292913434, "node_id": "MDU6SXNzdWUyOTI5MTM0MzQ=", "number": 750, "title": "Minor doc issue: wrong import mentioned", "user": {"login": "stoneroad", "id": 236997, "node_id": "MDQ6VXNlcjIzNjk5Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/236997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stoneroad", "html_url": "https://github.com/stoneroad", "followers_url": "https://api.github.com/users/stoneroad/followers", "following_url": "https://api.github.com/users/stoneroad/following{/other_user}", "gists_url": "https://api.github.com/users/stoneroad/gists{/gist_id}", "starred_url": "https://api.github.com/users/stoneroad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stoneroad/subscriptions", "organizations_url": "https://api.github.com/users/stoneroad/orgs", "repos_url": "https://api.github.com/users/stoneroad/repos", "events_url": "https://api.github.com/users/stoneroad/events{/privacy}", "received_events_url": "https://api.github.com/users/stoneroad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-30T19:46:04Z", "updated_at": "2018-06-28T08:28:42Z", "closed_at": "2018-06-28T08:28:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "flask-security/docs/quickstart.rst:\r\n```\r\nfrom werkzeug.config.fixers import ProxyFix\r\n```\r\nshould be changed to\r\n```\r\nfrom werkzeug.contrib.fixers import ProxyFix\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/746", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/746/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/746/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/746/events", "html_url": "https://github.com/mattupstate/flask-security/issues/746", "id": 290532667, "node_id": "MDU6SXNzdWUyOTA1MzI2Njc=", "number": 746, "title": "The hash_password function takes None as the password parameter", "user": {"login": "mluettecke", "id": 4482510, "node_id": "MDQ6VXNlcjQ0ODI1MTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4482510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mluettecke", "html_url": "https://github.com/mluettecke", "followers_url": "https://api.github.com/users/mluettecke/followers", "following_url": "https://api.github.com/users/mluettecke/following{/other_user}", "gists_url": "https://api.github.com/users/mluettecke/gists{/gist_id}", "starred_url": "https://api.github.com/users/mluettecke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mluettecke/subscriptions", "organizations_url": "https://api.github.com/users/mluettecke/orgs", "repos_url": "https://api.github.com/users/mluettecke/repos", "events_url": "https://api.github.com/users/mluettecke/events{/privacy}", "received_events_url": "https://api.github.com/users/mluettecke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 932611, "node_id": "MDU6TGFiZWw5MzI2MTE=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-22T16:39:36Z", "updated_at": "2018-01-28T13:55:41Z", "closed_at": "2018-01-28T13:55:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it intended that the function `verify_password` takes None as an password argument? \r\n\r\n```\r\n>>> from flask_security.utils import hash_password\r\n>>> password_hash = hash_password(None)\r\n>>> password_hash\r\n'$2b$12$TKE9Eg3IO4d0zHEz2RvE8eTA6TrYFQcJXRfTDHAnTnwXQZ5LHl2Ii'\r\n>>> verify_password(None, password_hash)\r\nTrue \r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/742", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/742/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/742/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/742/events", "html_url": "https://github.com/mattupstate/flask-security/issues/742", "id": 286572622, "node_id": "MDU6SXNzdWUyODY1NzI2MjI=", "number": 742, "title": "Flask-Security doesn't set cookie security flags by default", "user": {"login": "Avamander", "id": 5392141, "node_id": "MDQ6VXNlcjUzOTIxNDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/5392141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Avamander", "html_url": "https://github.com/Avamander", "followers_url": "https://api.github.com/users/Avamander/followers", "following_url": "https://api.github.com/users/Avamander/following{/other_user}", "gists_url": "https://api.github.com/users/Avamander/gists{/gist_id}", "starred_url": "https://api.github.com/users/Avamander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Avamander/subscriptions", "organizations_url": "https://api.github.com/users/Avamander/orgs", "repos_url": "https://api.github.com/users/Avamander/repos", "events_url": "https://api.github.com/users/Avamander/events{/privacy}", "received_events_url": "https://api.github.com/users/Avamander/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9116315, "node_id": "MDU6TGFiZWw5MTE2MzE1", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/discussion", "name": "discussion", "color": "444444", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-07T14:22:12Z", "updated_at": "2018-07-01T18:03:51Z", "closed_at": "2018-06-28T11:28:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be really nice if Flask-Security nicely set Secure, HttpOnly and [SameSite](https://github.com/pallets/flask/issues/2030)(not fully supported yet) flags to it's cookies by default. \r\n\r\nThe flags can be indeed enabled manually by specifying but I think especially a security package should be secure by-default.\r\n```\r\n    SESSION_COOKIE_SECURE = True\r\n    REMEMBER_COOKIE_SECURE = True\r\n    SESSION_COOKIE_HTTPONLY = True\r\n    REMEMBER_COOKIE_HTTPONLY = True\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/740", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/740/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/740/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/740/events", "html_url": "https://github.com/mattupstate/flask-security/issues/740", "id": 285286503, "node_id": "MDU6SXNzdWUyODUyODY1MDM=", "number": 740, "title": "Slowness", "user": {"login": "BillSchumacher", "id": 34168009, "node_id": "MDQ6VXNlcjM0MTY4MDA5", "avatar_url": "https://avatars2.githubusercontent.com/u/34168009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BillSchumacher", "html_url": "https://github.com/BillSchumacher", "followers_url": "https://api.github.com/users/BillSchumacher/followers", "following_url": "https://api.github.com/users/BillSchumacher/following{/other_user}", "gists_url": "https://api.github.com/users/BillSchumacher/gists{/gist_id}", "starred_url": "https://api.github.com/users/BillSchumacher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BillSchumacher/subscriptions", "organizations_url": "https://api.github.com/users/BillSchumacher/orgs", "repos_url": "https://api.github.com/users/BillSchumacher/repos", "events_url": "https://api.github.com/users/BillSchumacher/events{/privacy}", "received_events_url": "https://api.github.com/users/BillSchumacher/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 932608, "node_id": "MDU6TGFiZWw5MzI2MDg=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-01-01T03:17:17Z", "updated_at": "2018-06-28T11:25:50Z", "closed_at": "2018-06-28T11:25:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "All Flask-Security related functions take ~20-30 seconds to complete. It did not use to be so slow. I thought maybe it was the emails but I moved those to a celery task, the slowness persists. I implemented other logic that uses email and it is instant.\r\n\r\nNot sure why but this library has a huge delay for some reason.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/738", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/738/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/738/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/738/events", "html_url": "https://github.com/mattupstate/flask-security/issues/738", "id": 284894760, "node_id": "MDU6SXNzdWUyODQ4OTQ3NjA=", "number": 738, "title": "Error sending email", "user": {"login": "lormayna", "id": 5850251, "node_id": "MDQ6VXNlcjU4NTAyNTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5850251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lormayna", "html_url": "https://github.com/lormayna", "followers_url": "https://api.github.com/users/lormayna/followers", "following_url": "https://api.github.com/users/lormayna/following{/other_user}", "gists_url": "https://api.github.com/users/lormayna/gists{/gist_id}", "starred_url": "https://api.github.com/users/lormayna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lormayna/subscriptions", "organizations_url": "https://api.github.com/users/lormayna/orgs", "repos_url": "https://api.github.com/users/lormayna/repos", "events_url": "https://api.github.com/users/lormayna/events{/privacy}", "received_events_url": "https://api.github.com/users/lormayna/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 932612, "node_id": "MDU6TGFiZWw5MzI2MTI=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-12-28T11:19:07Z", "updated_at": "2018-06-28T11:26:28Z", "closed_at": "2018-06-28T11:26:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm trying to use flask-security to authenticate users.\r\nEverything seems working fine except the email sending. \r\nThis is the traceback of the error:\r\n\r\n`Traceback (most recent call last):\r\n  File \"/home/lorenzo/project/security/lib/python3.5/site-packages/flask/app.py\", line 1997, in __call__\r\n    return self.wsgi_app(environ, start_response)\r\n  File \"/home/lorenzo/project/security/lib/python3.5/site-packages/flask/app.py\", line 1985, in wsgi_app\r\n    response = self.handle_exception(e)\r\n  File \"/home/lorenzo/project/security/lib/python3.5/site-packages/flask/app.py\", line 1540, in handle_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/home/lorenzo/project/security/lib/python3.5/site-packages/flask/_compat.py\", line 33, in reraise\r\n    raise value\r\n  File \"/home/lorenzo/project/security/lib/python3.5/site-packages/flask/app.py\", line 1982, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/home/lorenzo/project/security/lib/python3.5/site-packages/flask/app.py\", line 1614, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/home/lorenzo/project/security/lib/python3.5/site-packages/flask/app.py\", line 1517, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/home/lorenzo/project/security/lib/python3.5/site-packages/flask/_compat.py\", line 33, in reraise\r\n    raise value\r\n  File \"/home/lorenzo/project/security/lib/python3.5/site-packages/flask/app.py\", line 1612, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/home/lorenzo/project/security/lib/python3.5/site-packages/flask/app.py\", line 1598, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/home/lorenzo/project/security/lib/python3.5/site-packages/flask_security/views.py\", line 198, in send_confirmation\r\n    send_confirmation_instructions(form.user)\r\n  File \"/home/lorenzo/project/security/lib/python3.5/site-packages/flask_security/confirmable.py\", line 44, in send_confirmation_instructions\r\n    confirmation_link=confirmation_link)\r\n  File \"/home/lorenzo/project/security/lib/python3.5/site-packages/flask_security/utils.py\", line 401, in send_mail\r\n    mail.send(msg)\r\n  File \"/home/lorenzo/project/security/lib/python3.5/site-packages/flask_mail.py\", line 492, in send\r\n    message.send(connection)\r\n  File \"/home/lorenzo/project/security/lib/python3.5/site-packages/flask_mail.py\", line 427, in send\r\n    connection.send(self)\r\n  File \"/home/lorenzo/project/security/lib/python3.5/site-packages/flask_mail.py\", line 188, in send\r\n    self.host.sendmail(sanitize_address(envelope_from or message.sender),\r\n  File \"/home/lorenzo/project/security/lib/python3.5/site-packages/flask_mail.py\", line 105, in sanitize_address\r\n    nm, addr = addr\r\nValueError: too many values to unpack (expected 2)\r\n`\r\n\r\nI have installed everything with pip.\r\n\r\nLet me know if you need more informations.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/737", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/737/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/737/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/737/events", "html_url": "https://github.com/mattupstate/flask-security/issues/737", "id": 284172958, "node_id": "MDU6SXNzdWUyODQxNzI5NTg=", "number": 737, "title": "@login_required behind https proxy", "user": {"login": "lucilecoutouly", "id": 20299472, "node_id": "MDQ6VXNlcjIwMjk5NDcy", "avatar_url": "https://avatars1.githubusercontent.com/u/20299472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucilecoutouly", "html_url": "https://github.com/lucilecoutouly", "followers_url": "https://api.github.com/users/lucilecoutouly/followers", "following_url": "https://api.github.com/users/lucilecoutouly/following{/other_user}", "gists_url": "https://api.github.com/users/lucilecoutouly/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucilecoutouly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucilecoutouly/subscriptions", "organizations_url": "https://api.github.com/users/lucilecoutouly/orgs", "repos_url": "https://api.github.com/users/lucilecoutouly/repos", "events_url": "https://api.github.com/users/lucilecoutouly/events{/privacy}", "received_events_url": "https://api.github.com/users/lucilecoutouly/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 932611, "node_id": "MDU6TGFiZWw5MzI2MTE=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-22T14:13:52Z", "updated_at": "2018-01-10T15:39:07Z", "closed_at": "2018-01-10T15:39:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello ,\r\nI am triyng to use the \r\n```\r\n\r\nhttps://rsdb.obs-nancay.fr/WRITE/instrument/getIntegre/Nrh/0\r\n\r\n@app.route('/instrument/getIntegre/<string:name>/<string:option>', methods=['POST'])\r\n@login_required\r\n\r\n```\r\n\r\nbut the redirection sent is \r\n```\r\nRequest URL:http://rsdb.obs-nancay.fr/READ/login?next=%2Finstrument%2FgetIntegre%2FOrfees%2F0\r\n```\r\ni want it to be https ...\r\n\r\nany help ...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/736", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/736/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/736/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/736/events", "html_url": "https://github.com/mattupstate/flask-security/issues/736", "id": 284097787, "node_id": "MDU6SXNzdWUyODQwOTc3ODc=", "number": 736, "title": "Setting exception code for required roles", "user": {"login": "ProstoMaxim", "id": 1978546, "node_id": "MDQ6VXNlcjE5Nzg1NDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1978546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ProstoMaxim", "html_url": "https://github.com/ProstoMaxim", "followers_url": "https://api.github.com/users/ProstoMaxim/followers", "following_url": "https://api.github.com/users/ProstoMaxim/following{/other_user}", "gists_url": "https://api.github.com/users/ProstoMaxim/gists{/gist_id}", "starred_url": "https://api.github.com/users/ProstoMaxim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ProstoMaxim/subscriptions", "organizations_url": "https://api.github.com/users/ProstoMaxim/orgs", "repos_url": "https://api.github.com/users/ProstoMaxim/repos", "events_url": "https://api.github.com/users/ProstoMaxim/events{/privacy}", "received_events_url": "https://api.github.com/users/ProstoMaxim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-22T08:00:36Z", "updated_at": "2017-12-22T12:30:20Z", "closed_at": "2017-12-22T12:30:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've setup my resource with roles_required('my_role'). But how can I set status code? I want 403 obviously, but instead I recieve 302 -> 404.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/735", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/735/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/735/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/735/events", "html_url": "https://github.com/mattupstate/flask-security/issues/735", "id": 282096395, "node_id": "MDU6SXNzdWUyODIwOTYzOTU=", "number": 735, "title": "flask-security allows username enumeration", "user": {"login": "jplatte", "id": 951129, "node_id": "MDQ6VXNlcjk1MTEyOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/951129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jplatte", "html_url": "https://github.com/jplatte", "followers_url": "https://api.github.com/users/jplatte/followers", "following_url": "https://api.github.com/users/jplatte/following{/other_user}", "gists_url": "https://api.github.com/users/jplatte/gists{/gist_id}", "starred_url": "https://api.github.com/users/jplatte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jplatte/subscriptions", "organizations_url": "https://api.github.com/users/jplatte/orgs", "repos_url": "https://api.github.com/users/jplatte/repos", "events_url": "https://api.github.com/users/jplatte/events{/privacy}", "received_events_url": "https://api.github.com/users/jplatte/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 932608, "node_id": "MDU6TGFiZWw5MzI2MDg=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-14T13:13:50Z", "updated_at": "2017-12-14T13:39:23Z", "closed_at": "2017-12-14T13:39:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Having separate error messages for a username / email not being registered and the password not matching is a bad idea: https://security.stackexchange.com/q/42872/46812\r\n\r\nI couldn't find anything in the configuration or view customization docs that points to these error messages being customizable in any way.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/734", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/734/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/734/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/734/events", "html_url": "https://github.com/mattupstate/flask-security/issues/734", "id": 279959292, "node_id": "MDU6SXNzdWUyNzk5NTkyOTI=", "number": 734, "title": "error when sending registration email (too many values to unpack (expected 2))", "user": {"login": "velerodro", "id": 23364809, "node_id": "MDQ6VXNlcjIzMzY0ODA5", "avatar_url": "https://avatars3.githubusercontent.com/u/23364809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/velerodro", "html_url": "https://github.com/velerodro", "followers_url": "https://api.github.com/users/velerodro/followers", "following_url": "https://api.github.com/users/velerodro/following{/other_user}", "gists_url": "https://api.github.com/users/velerodro/gists{/gist_id}", "starred_url": "https://api.github.com/users/velerodro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/velerodro/subscriptions", "organizations_url": "https://api.github.com/users/velerodro/orgs", "repos_url": "https://api.github.com/users/velerodro/repos", "events_url": "https://api.github.com/users/velerodro/events{/privacy}", "received_events_url": "https://api.github.com/users/velerodro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-07T00:44:04Z", "updated_at": "2019-03-06T11:19:27Z", "closed_at": "2017-12-07T20:40:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using the last version available with pip of flask-security and flask-mail.\r\n\r\nWhen I try to register a patient I get:\r\n``` \r\nregistered_user = register_user(**register_user_form.to_dict())\r\nFile \"/Users/k/3virtualenvs/p1/lib/python3.6/site-packages/flask_security/registerable.py\", line 41, in register_user\r\n  'welcome', user=user, confirmation_link=confirmation_link)\r\nFile \"/Users/k/3virtualenvs/p1/lib/python3.6/site-packages/flask_security/utils.py\", line 401, in send_mail\r\n  mail.send(msg)\r\nFile \"/Users/k/3virtualenvs/p1/lib/python3.6/site-packages/flask_mail.py\", line 492, in send\r\n  message.send(connection)\r\nFile \"/Users/k/3virtualenvs/p1/lib/python3.6/site-packages/flask_mail.py\", line 427, in send\r\n  connection.send(self)\r\nFile \"/Users/k/3virtualenvs/p1/lib/python3.6/site-packages/flask_mail.py\", line 188, in send\r\n  self.host.sendmail(sanitize_address(envelope_from or message.sender),\r\nFile \"/Users/k/3virtualenvs/p1/lib/python3.6/site-packages/flask_mail.py\", line 105, in sanitize_address\r\n  nm, addr = addr\r\nValueError: too many values to unpack (expected 2)\r\n```\r\n\r\nHowever I get no errors when manually sending email:\r\n\r\n```\r\nfrom appl import mail, app\r\nfrom flask_mail import Message\r\n\r\nwith app.app_context():\r\n\tmsg = Message(\"Hello\",\r\n\t              sender=\"miemail@gmail.com\",\r\n\t              recipients=[\"destination@gmail.com\"])\r\n\tmail.send(msg)\r\n```\r\nAny hint will be very much appreciated!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/729", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/729/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/729/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/729/events", "html_url": "https://github.com/mattupstate/flask-security/issues/729", "id": 271423864, "node_id": "MDU6SXNzdWUyNzE0MjM4NjQ=", "number": 729, "title": "Add extra_headers to send_mail", "user": {"login": "podolskyi", "id": 11211662, "node_id": "MDQ6VXNlcjExMjExNjYy", "avatar_url": "https://avatars0.githubusercontent.com/u/11211662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/podolskyi", "html_url": "https://github.com/podolskyi", "followers_url": "https://api.github.com/users/podolskyi/followers", "following_url": "https://api.github.com/users/podolskyi/following{/other_user}", "gists_url": "https://api.github.com/users/podolskyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/podolskyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/podolskyi/subscriptions", "organizations_url": "https://api.github.com/users/podolskyi/orgs", "repos_url": "https://api.github.com/users/podolskyi/repos", "events_url": "https://api.github.com/users/podolskyi/events{/privacy}", "received_events_url": "https://api.github.com/users/podolskyi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-06T10:21:34Z", "updated_at": "2017-11-06T10:47:47Z", "closed_at": "2017-11-06T10:47:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Add extra_headers param to function send_mail\r\n\r\nflask_mail support external headers \r\nextra_headers \u2013 A dictionary of additional headers for the message", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/728", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/728/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/728/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/728/events", "html_url": "https://github.com/mattupstate/flask-security/issues/728", "id": 269473750, "node_id": "MDU6SXNzdWUyNjk0NzM3NTA=", "number": 728, "title": "FLASH_MESSAGES configuration does not seem to be working.", "user": {"login": "Ben095", "id": 13024547, "node_id": "MDQ6VXNlcjEzMDI0NTQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/13024547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ben095", "html_url": "https://github.com/Ben095", "followers_url": "https://api.github.com/users/Ben095/followers", "following_url": "https://api.github.com/users/Ben095/following{/other_user}", "gists_url": "https://api.github.com/users/Ben095/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ben095/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ben095/subscriptions", "organizations_url": "https://api.github.com/users/Ben095/orgs", "repos_url": "https://api.github.com/users/Ben095/repos", "events_url": "https://api.github.com/users/Ben095/events{/privacy}", "received_events_url": "https://api.github.com/users/Ben095/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 932610, "node_id": "MDU6TGFiZWw5MzI2MTA=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}, {"id": 932611, "node_id": "MDU6TGFiZWw5MzI2MTE=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2017-10-30T03:44:33Z", "updated_at": "2018-06-28T11:23:37Z", "closed_at": "2018-06-28T11:23:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to disable flash messages in general; using the following \r\nFLASH_MESSAGES = False\r\n\r\nWhen I try an login with invalid credentails it still displays the flash message. Why is that? How do I turn it off.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/720", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/720/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/720/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/720/events", "html_url": "https://github.com/mattupstate/flask-security/issues/720", "id": 267467931, "node_id": "MDU6SXNzdWUyNjc0Njc5MzE=", "number": 720, "title": "Different registration and login forms for different roles", "user": {"login": "velerodro", "id": 23364809, "node_id": "MDQ6VXNlcjIzMzY0ODA5", "avatar_url": "https://avatars3.githubusercontent.com/u/23364809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/velerodro", "html_url": "https://github.com/velerodro", "followers_url": "https://api.github.com/users/velerodro/followers", "following_url": "https://api.github.com/users/velerodro/following{/other_user}", "gists_url": "https://api.github.com/users/velerodro/gists{/gist_id}", "starred_url": "https://api.github.com/users/velerodro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/velerodro/subscriptions", "organizations_url": "https://api.github.com/users/velerodro/orgs", "repos_url": "https://api.github.com/users/velerodro/repos", "events_url": "https://api.github.com/users/velerodro/events{/privacy}", "received_events_url": "https://api.github.com/users/velerodro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 16453606, "node_id": "MDU6TGFiZWwxNjQ1MzYwNg==", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/documentation", "name": "documentation", "color": "ededed", "default": true, "description": null}, {"id": 978036790, "node_id": "MDU6TGFiZWw5NzgwMzY3OTA=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/help%20wanted%20:sos:", "name": "help wanted :sos:", "color": "0e8a16", "default": false, "description": ""}, {"id": 932611, "node_id": "MDU6TGFiZWw5MzI2MTE=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-22T14:09:55Z", "updated_at": "2018-07-01T18:13:28Z", "closed_at": "2018-07-01T18:13:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'd like to make different forms for different roles. They share the basic fields, but then each role must have extra fields. Also they have different behaviour, for example one of the roles require manual activation by us.\r\n\r\nI know I could import the forms, then extend them, and then create custom views/routes for this forms. In these views I can use e.g. `from flask_security.registerable import register_user` to register the users. Is there any issue with doing it like that? Is there a better way?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/718", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/718/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/718/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/718/events", "html_url": "https://github.com/mattupstate/flask-security/issues/718", "id": 267368242, "node_id": "MDU6SXNzdWUyNjczNjgyNDI=", "number": 718, "title": "RecursionError: maximum recursion depth exceeded in comparison", "user": {"login": "velerodro", "id": 23364809, "node_id": "MDQ6VXNlcjIzMzY0ODA5", "avatar_url": "https://avatars3.githubusercontent.com/u/23364809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/velerodro", "html_url": "https://github.com/velerodro", "followers_url": "https://api.github.com/users/velerodro/followers", "following_url": "https://api.github.com/users/velerodro/following{/other_user}", "gists_url": "https://api.github.com/users/velerodro/gists{/gist_id}", "starred_url": "https://api.github.com/users/velerodro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/velerodro/subscriptions", "organizations_url": "https://api.github.com/users/velerodro/orgs", "repos_url": "https://api.github.com/users/velerodro/repos", "events_url": "https://api.github.com/users/velerodro/events{/privacy}", "received_events_url": "https://api.github.com/users/velerodro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-21T10:04:20Z", "updated_at": "2017-12-15T09:00:26Z", "closed_at": "2017-10-21T18:49:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nThe way I create the flask app is the following. I have:\r\n```\r\n/manage.py\r\n/appl/__init.py__\r\n```\r\n\r\nWhere `manage.py` contains:\r\n```\r\n  from appl import manager\r\n  manager.run()\r\n```\r\n\r\nAnd `__init__.py` contains:\r\n```\r\nfrom flask import Flask\r\nfrom flask_sqlalchemy import SQLAlchemy\r\nfrom flask_script import Manager\r\nfrom flask_migrate import Migrate, MigrateCommand\r\nfrom flask_security import Security, SQLAlchemyUserDatastore\r\n\r\napp = Flask(__name__, static_url_path = \"\")\r\napp.config.from_pyfile('config.py')\r\n\r\ndb = SQLAlchemy(app)\r\nmigrate = Migrate(app, db)\r\nmanager = Manager(app)\r\nmanager.add_command('db', MigrateCommand)\r\n\r\n# for some reason this lines have to be in here\r\nfrom appl import views, models\r\n\r\n# Setup Flask-Security\r\nuser_datastore = SQLAlchemyUserDatastore(db, models.User, models.Role)\r\nsecurity = Security(app, user_datastore)\r\n```\r\n\r\nWith this configuration, whenever I try to visit `/register` I get:\r\n`RecursionError: maximum recursion depth exceeded in comparison`\r\n(I put the traceback at the end)\r\n\r\nI am using python 3.6. I used to use this same approach in the past with python2.7 and former flask-security versions and worked without errors. \r\n\r\nAny ideas about how could I solve this issue?\r\n\r\nThanks!\r\n\r\n```\r\n127.0.0.1 - - [21/Oct/2017 17:08:23] \"GET /register HTTP/1.1\" 500 -\r\nTraceback (most recent call last):\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/flask/app.py\", line 1997, in __call__\r\n    return self.wsgi_app(environ, start_response)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/flask/app.py\", line 1985, in wsgi_app\r\n    response = self.handle_exception(e)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/flask/app.py\", line 1540, in handle_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/flask/_compat.py\", line 33, in reraise\r\n    raise value\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/flask/app.py\", line 1982, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/flask/app.py\", line 1614, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/flask/app.py\", line 1517, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/flask/_compat.py\", line 33, in reraise\r\n    raise value\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/flask/app.py\", line 1612, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/flask/app.py\", line 1598, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/flask_security/decorators.py\", line 230, in wrapper\r\n    return f(*args, **kwargs)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/flask_security/views.py\", line 139, in register\r\n    **_ctx('register'))\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/flask_security/core.py\", line 528, in render_template\r\n    return render_template(*args, **kwargs)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/flask/templating.py\", line 134, in render_template\r\n    context, ctx.app)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/flask/templating.py\", line 116, in _render\r\n    rv = template.render(context)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/jinja2/asyncsupport.py\", line 76, in render\r\n    return original_render(self, *args, **kwargs)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/jinja2/environment.py\", line 1008, in render\r\n    return self.environment.handle_exception(exc_info, True)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/jinja2/environment.py\", line 780, in handle_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/jinja2/_compat.py\", line 37, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/flask_security/templates/security/register_user.html\", line 6, in top-level template code\r\n    {{ render_field_with_errors(register_user_form.email) }}\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/jinja2/runtime.py\", line 553, in _invoke\r\n    rv = self._func(*arguments)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/flask_security/templates/security/_macros.html\", line 3, in template\r\n    {{ field.label }} {{ field(**kwargs)|safe }}\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/wtforms/fields/core.py\", line 390, in __html__\r\n    return self()\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/wtforms/fields/core.py\", line 399, in __call__\r\n    return widgets.HTMLString('<label %s>%s</label>' % (attributes, text or self.text))\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/speaklater.py\", line 133, in __str__\r\n    return str(self.value)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/speaklater.py\", line 177, in __getattr__\r\n    return getattr(self.value, name)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/speaklater.py\", line 177, in __getattr__\r\n    return getattr(self.value, name)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/speaklater.py\", line 177, in __getattr__\r\n    return getattr(self.value, name)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/speaklater.py\", line 177, in __getattr__\r\n    return getattr(self.value, name)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/speaklater.py\", line 177, in __getattr__\r\n    return getattr(self.value, name)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/speaklater.py\", line 177, in __getattr__\r\n    return getattr(self.value, name)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/speaklater.py\", line 177, in __getattr__\r\n    return getattr(self.value, name)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/speaklater.py\", line 177, in __getattr__\r\n    return getattr(self.value, name)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/speaklater.py\", line 177, in __getattr__\r\n    return getattr(self.value, name)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/speaklater.py\", line 177, in __getattr__\r\n    return getattr(self.value, name)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/speaklater.py\", line 177, in __getattr__\r\n    return getattr(self.value, name)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/speaklater.py\", line 177, in __getattr__\r\n\r\n......... goes on like this for a bunch of lines more\r\n\r\n File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/speaklater.py\", line 115, in <lambda>\r\n    value = property(lambda x: x._func(*x._args, **x._kwargs))\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/werkzeug/local.py\", line 375, in <lambda>\r\n    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/werkzeug/local.py\", line 306, in _get_current_object\r\n    return self.__local()\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/flask_security/utils.py\", line 47, in <lambda>\r\n    localize_callback = LocalProxy(lambda: _security.i18n_domain.gettext)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/werkzeug/local.py\", line 347, in __getattr__\r\n    return getattr(self._get_current_object(), name)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/werkzeug/local.py\", line 306, in _get_current_object\r\n    return self.__local()\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/flask_security/utils.py\", line 39, in <lambda>\r\n    _security = LocalProxy(lambda: current_app.extensions['security'])\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/werkzeug/local.py\", line 347, in __getattr__\r\n    return getattr(self._get_current_object(), name)\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/werkzeug/local.py\", line 306, in _get_current_object\r\n    return self.__local()\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/flask/globals.py\", line 49, in _find_app\r\n    top = _app_ctx_stack.top\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/werkzeug/local.py\", line 166, in top\r\n    return self._local.stack[-1]\r\n  File \"/Users/u/3virtualenvs/project/lib/python3.6/site-packages/werkzeug/local.py\", line 70, in __getattr__\r\n    return self.__storage__[self.__ident_func__()][name]\r\nRecursionError: maximum recursion depth exceeded in comparison\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/705", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/705/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/705/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/705/events", "html_url": "https://github.com/mattupstate/flask-security/issues/705", "id": 255055240, "node_id": "MDU6SXNzdWUyNTUwNTUyNDA=", "number": 705, "title": "Document how to change config", "user": {"login": "johnfrancisgit", "id": 15270496, "node_id": "MDQ6VXNlcjE1MjcwNDk2", "avatar_url": "https://avatars2.githubusercontent.com/u/15270496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnfrancisgit", "html_url": "https://github.com/johnfrancisgit", "followers_url": "https://api.github.com/users/johnfrancisgit/followers", "following_url": "https://api.github.com/users/johnfrancisgit/following{/other_user}", "gists_url": "https://api.github.com/users/johnfrancisgit/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnfrancisgit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnfrancisgit/subscriptions", "organizations_url": "https://api.github.com/users/johnfrancisgit/orgs", "repos_url": "https://api.github.com/users/johnfrancisgit/repos", "events_url": "https://api.github.com/users/johnfrancisgit/events{/privacy}", "received_events_url": "https://api.github.com/users/johnfrancisgit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-04T14:17:19Z", "updated_at": "2017-09-04T14:21:59Z", "closed_at": "2017-09-04T14:21:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "The configuration options are documented, however how to go about changing them in your application is missing. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/702", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/702/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/702/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/702/events", "html_url": "https://github.com/mattupstate/flask-security/issues/702", "id": 253219262, "node_id": "MDU6SXNzdWUyNTMyMTkyNjI=", "number": 702, "title": "Whoops, wrong tracker. I'm a derp.", "user": {"login": "fake-name", "id": 1401239, "node_id": "MDQ6VXNlcjE0MDEyMzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1401239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fake-name", "html_url": "https://github.com/fake-name", "followers_url": "https://api.github.com/users/fake-name/followers", "following_url": "https://api.github.com/users/fake-name/following{/other_user}", "gists_url": "https://api.github.com/users/fake-name/gists{/gist_id}", "starred_url": "https://api.github.com/users/fake-name/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fake-name/subscriptions", "organizations_url": "https://api.github.com/users/fake-name/orgs", "repos_url": "https://api.github.com/users/fake-name/repos", "events_url": "https://api.github.com/users/fake-name/events{/privacy}", "received_events_url": "https://api.github.com/users/fake-name/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-28T03:43:09Z", "updated_at": "2017-08-28T03:46:44Z", "closed_at": "2017-08-28T03:46:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "[deleted]\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/701", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/701/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/701/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/701/events", "html_url": "https://github.com/mattupstate/flask-security/issues/701", "id": 253075763, "node_id": "MDU6SXNzdWUyNTMwNzU3NjM=", "number": 701, "title": "I would like to add support for pt_BR as a language.", "user": {"login": "argolo", "id": 7275870, "node_id": "MDQ6VXNlcjcyNzU4NzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7275870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/argolo", "html_url": "https://github.com/argolo", "followers_url": "https://api.github.com/users/argolo/followers", "following_url": "https://api.github.com/users/argolo/following{/other_user}", "gists_url": "https://api.github.com/users/argolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/argolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/argolo/subscriptions", "organizations_url": "https://api.github.com/users/argolo/orgs", "repos_url": "https://api.github.com/users/argolo/repos", "events_url": "https://api.github.com/users/argolo/events{/privacy}", "received_events_url": "https://api.github.com/users/argolo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-26T08:41:21Z", "updated_at": "2017-09-28T22:48:22Z", "closed_at": "2017-09-28T22:48:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to add support for pt_BR as a language. How can I do this? I volunteer to translate.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/700", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/700/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/700/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/700/events", "html_url": "https://github.com/mattupstate/flask-security/issues/700", "id": 251423403, "node_id": "MDU6SXNzdWUyNTE0MjM0MDM=", "number": 700, "title": "Anchor links in website are not working", "user": {"login": "alemangui", "id": 1225929, "node_id": "MDQ6VXNlcjEyMjU5Mjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1225929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alemangui", "html_url": "https://github.com/alemangui", "followers_url": "https://api.github.com/users/alemangui/followers", "following_url": "https://api.github.com/users/alemangui/following{/other_user}", "gists_url": "https://api.github.com/users/alemangui/gists{/gist_id}", "starred_url": "https://api.github.com/users/alemangui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alemangui/subscriptions", "organizations_url": "https://api.github.com/users/alemangui/orgs", "repos_url": "https://api.github.com/users/alemangui/repos", "events_url": "https://api.github.com/users/alemangui/events{/privacy}", "received_events_url": "https://api.github.com/users/alemangui/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-19T12:54:57Z", "updated_at": "2019-04-24T13:35:48Z", "closed_at": "2017-10-24T13:16:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Some anchor links in the website are not functional.\r\n\r\nFor example in the [Quickstart](http://flask-security.readthedocs.io/en/latest/quickstart.html) page, there are anchor links (e.g., _Basic MongoEngine Application_) which link to inexistent html ```id``` elements.\r\n\r\nTo continue with the example of the _Basic MongoEngine Application_ link, it references the id ```#basic-mongoengine-application```:\r\n\r\n```html\r\n<a class=\"reference external\" href=\"#basic-mongoengine-application\">Basic MongoEngine Application</a>\r\n```\r\n\r\nHowever the target has an id of ```id5```:\r\n\r\n```html\r\n<div class=\"section\" id=\"id5\">\r\n```\r\n\r\nThis means that this url lands correctly in the mongo section:\r\nhttp://flask-security.readthedocs.io/en/latest/quickstart.html#id5\r\n\r\nwhereas this one doesn't:\r\nhttp://flask-security.readthedocs.io/en/latest/quickstart.html#basic-mongoengine-application", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/693", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/693/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/693/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/693/events", "html_url": "https://github.com/mattupstate/flask-security/issues/693", "id": 250012892, "node_id": "MDU6SXNzdWUyNTAwMTI4OTI=", "number": 693, "title": "Cannot send registration email", "user": {"login": "ochronus", "id": 17214, "node_id": "MDQ6VXNlcjE3MjE0", "avatar_url": "https://avatars0.githubusercontent.com/u/17214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ochronus", "html_url": "https://github.com/ochronus", "followers_url": "https://api.github.com/users/ochronus/followers", "following_url": "https://api.github.com/users/ochronus/following{/other_user}", "gists_url": "https://api.github.com/users/ochronus/gists{/gist_id}", "starred_url": "https://api.github.com/users/ochronus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ochronus/subscriptions", "organizations_url": "https://api.github.com/users/ochronus/orgs", "repos_url": "https://api.github.com/users/ochronus/repos", "events_url": "https://api.github.com/users/ochronus/events{/privacy}", "received_events_url": "https://api.github.com/users/ochronus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-08-14T12:13:08Z", "updated_at": "2018-01-05T10:58:45Z", "closed_at": "2017-10-06T10:50:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When I configure the app to send registration emails, registration fails with:\r\n\r\nValueError: too many values to unpack\r\n\r\nSee https://github.com/mattupstate/flask-mail/issues/148\r\n\r\nI traced back the error to this line:\r\nhttps://github.com/mattupstate/flask-security/blob/develop/flask_security/utils.py#L387\r\nthe _security var is a LocalProxy\r\n\r\ncc @filipmihal", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/688", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/688/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/688/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/688/events", "html_url": "https://github.com/mattupstate/flask-security/issues/688", "id": 247909739, "node_id": "MDU6SXNzdWUyNDc5MDk3Mzk=", "number": 688, "title": "How to POST request when endpoint is protected by the decorator @auth_token_required", "user": {"login": "arlejeun", "id": 4977163, "node_id": "MDQ6VXNlcjQ5NzcxNjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4977163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arlejeun", "html_url": "https://github.com/arlejeun", "followers_url": "https://api.github.com/users/arlejeun/followers", "following_url": "https://api.github.com/users/arlejeun/following{/other_user}", "gists_url": "https://api.github.com/users/arlejeun/gists{/gist_id}", "starred_url": "https://api.github.com/users/arlejeun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arlejeun/subscriptions", "organizations_url": "https://api.github.com/users/arlejeun/orgs", "repos_url": "https://api.github.com/users/arlejeun/repos", "events_url": "https://api.github.com/users/arlejeun/events{/privacy}", "received_events_url": "https://api.github.com/users/arlejeun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-04T05:55:18Z", "updated_at": "2017-08-04T06:08:12Z", "closed_at": "2017-08-04T06:06:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have read a lot of documentation about it and I've found a [good tutorial ](http://mandarvaze.github.io/2015/01/token-auth-with-flask-security.html) to explain how to GET resource from @auth_token_required and it worked just fine but I have't been able to POST a request with data.\r\n\r\n```python\r\n@viz_api.route('/', methods=['POST'])\r\n@auth_token_required\r\n@admin_permission.require(http_exception=403)\r\ndef post_visualization_api():\r\n    payload = request.json\r\n    validfields = set(Visualizations._fields) & set(payload)\r\n    subset = {k: payload[k] for k in validfields}\r\n    viz = Visualizations(**subset)\r\n    viz.save()\r\n    return jsonify({'result': viz})\r\n```\r\nThe view is working just fine if i remove the decoratior @auth_token_required or when I replace it with @http_auth_required.\r\n\r\nCan you give me an example how to POST a request with a data like the one described below with the decoratior @auth_token_required?\r\n\r\n```javascript\r\n{\r\n    \"name\" : \"Treemap\",\r\n    \"image_src\":\"pulse/upload/assets/screenshots/alejeune@genesys.com/treemap-viz.png\",\r\n    \"short_desc\":\"This visualization helps supervisors to look at a glance if teams are properly staffed or not to handle the customer inquiries and monitor the # agents by status across several teams with a customized heatmap visualization.\",\r\n    \"contributor\":\"Arnaud Lejeune\"\r\n}\r\n````\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/685", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/685/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/685/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/685/events", "html_url": "https://github.com/mattupstate/flask-security/issues/685", "id": 245748407, "node_id": "MDU6SXNzdWUyNDU3NDg0MDc=", "number": 685, "title": "email sender", "user": {"login": "williamcheng-web", "id": 26004109, "node_id": "MDQ6VXNlcjI2MDA0MTA5", "avatar_url": "https://avatars3.githubusercontent.com/u/26004109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/williamcheng-web", "html_url": "https://github.com/williamcheng-web", "followers_url": "https://api.github.com/users/williamcheng-web/followers", "following_url": "https://api.github.com/users/williamcheng-web/following{/other_user}", "gists_url": "https://api.github.com/users/williamcheng-web/gists{/gist_id}", "starred_url": "https://api.github.com/users/williamcheng-web/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/williamcheng-web/subscriptions", "organizations_url": "https://api.github.com/users/williamcheng-web/orgs", "repos_url": "https://api.github.com/users/williamcheng-web/repos", "events_url": "https://api.github.com/users/williamcheng-web/events{/privacy}", "received_events_url": "https://api.github.com/users/williamcheng-web/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-07-26T14:50:02Z", "updated_at": "2018-11-14T10:41:29Z", "closed_at": "2017-10-06T14:22:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "if set `MAIL_DEFAULT_SENDER` not set `SECURITY_EMAIL_SENDER`, email can't be sent.\r\nIn utils.py `send_mail` function:\r\n\r\n    msg = Message(subject,\r\n                  sender=_security.email_sender, \r\n                  recipients=[recipient])`,  \r\n`sender` is a `LocalProxy` instance. So, `mail.send(msg)`  will happen `ValueError: too many values to unpack`. Because in flask-mail `sanitize_address` function:\r\n\r\n    def sanitize_address(addr, encoding='utf-8'):\r\n        if isinstance(addr, string_types):\r\n            addr = parseaddr(force_text(addr))\r\n        nm, addr = addr\r\n\r\n`addr` is a `LocalProxy` instance. `isinstance(addr, string_types)` is `False`. So, `nm, addr = addr` goes wrong, `ValueError: too many values to unpack`.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/684", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/684/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/684/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/684/events", "html_url": "https://github.com/mattupstate/flask-security/issues/684", "id": 244891995, "node_id": "MDU6SXNzdWUyNDQ4OTE5OTU=", "number": 684, "title": "\"Unauthorized\" When I send my token to server", "user": {"login": "tim-hub", "id": 2884320, "node_id": "MDQ6VXNlcjI4ODQzMjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2884320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tim-hub", "html_url": "https://github.com/tim-hub", "followers_url": "https://api.github.com/users/tim-hub/followers", "following_url": "https://api.github.com/users/tim-hub/following{/other_user}", "gists_url": "https://api.github.com/users/tim-hub/gists{/gist_id}", "starred_url": "https://api.github.com/users/tim-hub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tim-hub/subscriptions", "organizations_url": "https://api.github.com/users/tim-hub/orgs", "repos_url": "https://api.github.com/users/tim-hub/repos", "events_url": "https://api.github.com/users/tim-hub/events{/privacy}", "received_events_url": "https://api.github.com/users/tim-hub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-07-23T06:29:19Z", "updated_at": "2018-12-17T22:27:29Z", "closed_at": "2018-12-17T22:27:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "flask + flask security + uwsgi + nginx\r\nOn vuejs frontend, they give me this:\r\n```\r\n<h1>Unauthorized</h1>\r\n<p>The server could not verify that you are authorized to access the URL\r\nrequested. You either supplied the wrong credentials (e.g. a bad password),\r\nor your browser doesn't understand how to supply the credentials required.\r\n</p>\r\n```\r\n\r\nI am sure all is good when I run the server locally. The authorization is running well. But not on remote server. **Every post/get with token required** return me the **unauthorized error.**\r\n\r\nAnyone know the reason? I got know ideas? Should I consider some config of **nginx or uwsgi**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/681", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/681/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/681/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/681/events", "html_url": "https://github.com/mattupstate/flask-security/issues/681", "id": 243668422, "node_id": "MDU6SXNzdWUyNDM2Njg0MjI=", "number": 681, "title": "Error when request is JSON but a list rather than an object", "user": {"login": "rossgray", "id": 5103732, "node_id": "MDQ6VXNlcjUxMDM3MzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5103732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rossgray", "html_url": "https://github.com/rossgray", "followers_url": "https://api.github.com/users/rossgray/followers", "following_url": "https://api.github.com/users/rossgray/following{/other_user}", "gists_url": "https://api.github.com/users/rossgray/gists{/gist_id}", "starred_url": "https://api.github.com/users/rossgray/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rossgray/subscriptions", "organizations_url": "https://api.github.com/users/rossgray/orgs", "repos_url": "https://api.github.com/users/rossgray/repos", "events_url": "https://api.github.com/users/rossgray/events{/privacy}", "received_events_url": "https://api.github.com/users/rossgray/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-07-18T10:21:35Z", "updated_at": "2018-07-05T20:41:59Z", "closed_at": "2017-07-19T19:36:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWe are hitting an issue when upgrading to version 3.0.0 with the following line of code:\r\nhttps://github.com/mattupstate/flask-security/blob/develop/flask_security/core.py#L231\r\n\r\nOur application responds to JSON-RPC requests and it is perfectly acceptable to send batch requests, in which case the JSON request is actually an array of requests. This means `request.get_json()` returns a list rather than a dict, and so `data.get(args_key, token)` fails with `'list' object has no attribute 'get'`.\r\n\r\nAs a side note - from what I can see, it is not possible to bypass Flask-Security for certain requests (even if the view doesn't require auth, it still goes through the Flask-Security middleware to identify the user, etc). In our case we would like to use Flask-Security for our admin views but we use our own authentication for our API views. Is there any way we can bypass the middleware for our API views? If not, having some mechanism like what Flask-Principal does for static files would be useful: https://github.com/mattupstate/flask-principal/blob/0b5cd06b464ae8b60939857784bda86c03dda1eb/flask_principal.py#L471-L473\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/678", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/678/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/678/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/678/events", "html_url": "https://github.com/mattupstate/flask-security/issues/678", "id": 242943173, "node_id": "MDU6SXNzdWUyNDI5NDMxNzM=", "number": 678, "title": "AttributeError: 'NoneType' object has no attribute 'password'", "user": {"login": "amuzeev", "id": 1411727, "node_id": "MDQ6VXNlcjE0MTE3Mjc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1411727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amuzeev", "html_url": "https://github.com/amuzeev", "followers_url": "https://api.github.com/users/amuzeev/followers", "following_url": "https://api.github.com/users/amuzeev/following{/other_user}", "gists_url": "https://api.github.com/users/amuzeev/gists{/gist_id}", "starred_url": "https://api.github.com/users/amuzeev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amuzeev/subscriptions", "organizations_url": "https://api.github.com/users/amuzeev/orgs", "repos_url": "https://api.github.com/users/amuzeev/repos", "events_url": "https://api.github.com/users/amuzeev/events{/privacy}", "received_events_url": "https://api.github.com/users/amuzeev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 932607, "node_id": "MDU6TGFiZWw5MzI2MDc=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-14T09:22:43Z", "updated_at": "2017-10-24T13:14:32Z", "closed_at": "2017-10-24T13:14:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "1.7.5 and 3.0.0\r\nflask_security/recoverable.py:77\r\n`if user.password:`\r\nI get **user** as None because of this:\r\nflask_security/utils.py:428\r\n`\r\n    if data:\r\n        user = _datastore.find_user(id=data[0])\r\n`\r\n**_datastore** can't get user by id because user isn't exist.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/670", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/670/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/670/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/670/events", "html_url": "https://github.com/mattupstate/flask-security/issues/670", "id": 239527286, "node_id": "MDU6SXNzdWUyMzk1MjcyODY=", "number": 670, "title": "_get_unauthorized_view() results in a redirect loop if the referrer is the page we just came from", "user": {"login": "nfvs", "id": 163961, "node_id": "MDQ6VXNlcjE2Mzk2MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/163961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nfvs", "html_url": "https://github.com/nfvs", "followers_url": "https://api.github.com/users/nfvs/followers", "following_url": "https://api.github.com/users/nfvs/following{/other_user}", "gists_url": "https://api.github.com/users/nfvs/gists{/gist_id}", "starred_url": "https://api.github.com/users/nfvs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nfvs/subscriptions", "organizations_url": "https://api.github.com/users/nfvs/orgs", "repos_url": "https://api.github.com/users/nfvs/repos", "events_url": "https://api.github.com/users/nfvs/events{/privacy}", "received_events_url": "https://api.github.com/users/nfvs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 932607, "node_id": "MDU6TGFiZWw5MzI2MDc=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-29T15:55:00Z", "updated_at": "2017-07-05T07:26:04Z", "closed_at": "2017-07-05T07:26:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`_get_unauthorized_view()` is blindly redirecting to the location in referrer; if we just came from there, this will result in a redirect loop.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/666", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/666/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/666/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/666/events", "html_url": "https://github.com/mattupstate/flask-security/issues/666", "id": 238633617, "node_id": "MDU6SXNzdWUyMzg2MzM2MTc=", "number": 666, "title": "Update website", "user": {"login": "patrickyan", "id": 858647, "node_id": "MDQ6VXNlcjg1ODY0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/858647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patrickyan", "html_url": "https://github.com/patrickyan", "followers_url": "https://api.github.com/users/patrickyan/followers", "following_url": "https://api.github.com/users/patrickyan/following{/other_user}", "gists_url": "https://api.github.com/users/patrickyan/gists{/gist_id}", "starred_url": "https://api.github.com/users/patrickyan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patrickyan/subscriptions", "organizations_url": "https://api.github.com/users/patrickyan/orgs", "repos_url": "https://api.github.com/users/patrickyan/repos", "events_url": "https://api.github.com/users/patrickyan/events{/privacy}", "received_events_url": "https://api.github.com/users/patrickyan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-26T18:43:28Z", "updated_at": "2017-06-29T12:49:45Z", "closed_at": "2017-06-27T08:32:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://pythonhosted.org/Flask-Security/ still thinks the latest is 1.7.5", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/663", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/663/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/663/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/663/events", "html_url": "https://github.com/mattupstate/flask-security/issues/663", "id": 238143595, "node_id": "MDU6SXNzdWUyMzgxNDM1OTU=", "number": 663, "title": "v3 making tests run slowly", "user": {"login": "mafrosis", "id": 243851, "node_id": "MDQ6VXNlcjI0Mzg1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/243851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mafrosis", "html_url": "https://github.com/mafrosis", "followers_url": "https://api.github.com/users/mafrosis/followers", "following_url": "https://api.github.com/users/mafrosis/following{/other_user}", "gists_url": "https://api.github.com/users/mafrosis/gists{/gist_id}", "starred_url": "https://api.github.com/users/mafrosis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mafrosis/subscriptions", "organizations_url": "https://api.github.com/users/mafrosis/orgs", "repos_url": "https://api.github.com/users/mafrosis/repos", "events_url": "https://api.github.com/users/mafrosis/events{/privacy}", "received_events_url": "https://api.github.com/users/mafrosis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-06-23T13:33:03Z", "updated_at": "2017-06-23T15:24:14Z", "closed_at": "2017-06-23T15:24:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey @jirikuncar, thanks for all your recent work on Flask-Security.\r\n\r\nI've been having a pretty weird time with the recent v3 release. Our tests now run about 10 times more slowly than before - and debugging suggests it's down to our calls to `/login` endpoint. I saw this in the changelog:\r\n\r\n    Upgraded passlib, and removed bcrypt version restriction.\r\n\r\nAlso profiling suggests 98.9% of a test's time is spent in `<built-in method _crypt.crypt>`.\r\n\r\nThis all leads me to believe a change to underlying hash algo is causing 1 second-ish pauses on calls to `utils.verify_hash`?\r\n\r\nCan you confirm any of this please? :D ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/662", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/662/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/662/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/662/events", "html_url": "https://github.com/mattupstate/flask-security/issues/662", "id": 237967873, "node_id": "MDU6SXNzdWUyMzc5Njc4NzM=", "number": 662, "title": "Email confirmation behavior", "user": {"login": "kesara", "id": 1027692, "node_id": "MDQ6VXNlcjEwMjc2OTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1027692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kesara", "html_url": "https://github.com/kesara", "followers_url": "https://api.github.com/users/kesara/followers", "following_url": "https://api.github.com/users/kesara/following{/other_user}", "gists_url": "https://api.github.com/users/kesara/gists{/gist_id}", "starred_url": "https://api.github.com/users/kesara/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kesara/subscriptions", "organizations_url": "https://api.github.com/users/kesara/orgs", "repos_url": "https://api.github.com/users/kesara/repos", "events_url": "https://api.github.com/users/kesara/events{/privacy}", "received_events_url": "https://api.github.com/users/kesara/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 932607, "node_id": "MDU6TGFiZWw5MzI2MDc=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-06-22T20:41:52Z", "updated_at": "2019-05-03T17:16:22Z", "closed_at": "2017-10-09T09:20:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "At the moment confirmation token can be logs user in automatically.\r\nI suggest this behavior should be, so this can be configured as required.\r\n\r\nOther issue with the current confirmation tokens is they can be reused to login without using password as long as that token is not expired.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/661", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/661/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/661/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/661/events", "html_url": "https://github.com/mattupstate/flask-security/issues/661", "id": 237813405, "node_id": "MDU6SXNzdWUyMzc4MTM0MDU=", "number": 661, "title": "Error when trying to assign role to user", "user": {"login": "achanda", "id": 2165463, "node_id": "MDQ6VXNlcjIxNjU0NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2165463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/achanda", "html_url": "https://github.com/achanda", "followers_url": "https://api.github.com/users/achanda/followers", "following_url": "https://api.github.com/users/achanda/following{/other_user}", "gists_url": "https://api.github.com/users/achanda/gists{/gist_id}", "starred_url": "https://api.github.com/users/achanda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/achanda/subscriptions", "organizations_url": "https://api.github.com/users/achanda/orgs", "repos_url": "https://api.github.com/users/achanda/repos", "events_url": "https://api.github.com/users/achanda/events{/privacy}", "received_events_url": "https://api.github.com/users/achanda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-06-22T11:23:28Z", "updated_at": "2017-06-26T14:37:42Z", "closed_at": "2017-06-26T14:37:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to use flask-security to implement RBAC. This is how I am trying to use the signals to assign roles to users (using SQLAlchemy)\r\n\r\n```\r\n@user_registered.connect_via(app)\r\ndef user_registered_sighandler(sender, **extra):\r\n    user  = extra.get('user')\r\n    admin_role = user_datastore.find_or_create_role(name='admin', description='Administrator')\r\n    user_role = user_datastore.find_or_create_role(name='user', description='User')\r\n    user_datastore.add_role_to_user(user, admin_role)\r\n```\r\n\r\nThis gives me this error\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/Abhishek/anaconda3/lib/python3.6/site-packages/flask/app.py\", line 1997, in __call__\r\n    return self.wsgi_app(environ, start_response)\r\n  File \"/Users/Abhishek/anaconda3/lib/python3.6/site-packages/flask/app.py\", line 1985, in wsgi_app\r\n    response = self.handle_exception(e)\r\n  File \"/Users/Abhishek/anaconda3/lib/python3.6/site-packages/flask_cors/extension.py\", line 161, in wrapped_function\r\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\r\n  File \"/Users/Abhishek/anaconda3/lib/python3.6/site-packages/flask/app.py\", line 1540, in handle_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/Users/Abhishek/anaconda3/lib/python3.6/site-packages/flask/_compat.py\", line 33, in reraise\r\n    raise value\r\n  File \"/Users/Abhishek/anaconda3/lib/python3.6/site-packages/flask/app.py\", line 1982, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/Users/Abhishek/anaconda3/lib/python3.6/site-packages/flask/app.py\", line 1614, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/Users/Abhishek/anaconda3/lib/python3.6/site-packages/flask_cors/extension.py\", line 161, in wrapped_function\r\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\r\n  File \"/Users/Abhishek/anaconda3/lib/python3.6/site-packages/flask/app.py\", line 1517, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/Users/Abhishek/anaconda3/lib/python3.6/site-packages/flask/_compat.py\", line 33, in reraise\r\n    raise value\r\n  File \"/Users/Abhishek/anaconda3/lib/python3.6/site-packages/flask/app.py\", line 1612, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/Users/Abhishek/anaconda3/lib/python3.6/site-packages/flask/app.py\", line 1598, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/Users/Abhishek/anaconda3/lib/python3.6/site-packages/flask_security/decorators.py\", line 230, in wrapper\r\n    return f(*args, **kwargs)\r\n  File \"/Users/Abhishek/anaconda3/lib/python3.6/site-packages/flask_security/views.py\", line 118, in register\r\n    user = register_user(**form.to_dict())\r\n  File \"/Users/Abhishek/anaconda3/lib/python3.6/site-packages/flask_security/registerable.py\", line 37, in register_user\r\n    user=user, confirm_token=token)\r\n  File \"/Users/Abhishek/anaconda3/lib/python3.6/site-packages/blinker/base.py\", line 267, in send\r\n    for receiver in self.receivers_for(sender)]\r\n  File \"/Users/Abhishek/anaconda3/lib/python3.6/site-packages/blinker/base.py\", line 267, in <listcomp>\r\n    for receiver in self.receivers_for(sender)]\r\n  File \"/Users/Abhishek/src/datasine/canopy/canopy/routes/__init__.py\", line 78, in user_registered_sighandler\r\n    user_datastore.add_role_to_user(user, admin_role)\r\n  File \"/Users/Abhishek/anaconda3/lib/python3.6/site-packages/flask_security/datastore.py\", line 156, in add_role_to_user\r\n    user.roles.append(role)\r\n  File \"/Users/Abhishek/anaconda3/lib/python3.6/site-packages/sqlalchemy/orm/collections.py\", line 1045, in append\r\n    item = __set(self, item, _sa_initiator)\r\n  File \"/Users/Abhishek/anaconda3/lib/python3.6/site-packages/sqlalchemy/orm/collections.py\", line 1017, in __set\r\n    item = executor.fire_append_event(item, _sa_initiator)\r\n  File \"/Users/Abhishek/anaconda3/lib/python3.6/site-packages/sqlalchemy/orm/collections.py\", line 680, in fire_append_event\r\n    item, initiator)\r\n  File \"/Users/Abhishek/anaconda3/lib/python3.6/site-packages/sqlalchemy/orm/attributes.py\", line 951, in fire_append_event\r\n    initiator or self._append_token or self._init_append_token())\r\n  File \"/Users/Abhishek/anaconda3/lib/python3.6/site-packages/sqlalchemy/orm/unitofwork.py\", line 47, in append\r\n    sess._save_or_update_state(item_state)\r\n  File \"/Users/Abhishek/anaconda3/lib/python3.6/site-packages/sqlalchemy/orm/session.py\", line 1691, in _save_or_update_state\r\n    self._save_or_update_impl(state)\r\n  File \"/Users/Abhishek/anaconda3/lib/python3.6/site-packages/sqlalchemy/orm/session.py\", line 1997, in _save_or_update_impl\r\n    self._update_impl(state)\r\n  File \"/Users/Abhishek/anaconda3/lib/python3.6/site-packages/sqlalchemy/orm/session.py\", line 1980, in _update_impl\r\n    to_attach = self._before_attach(state, obj)\r\n  File \"/Users/Abhishek/anaconda3/lib/python3.6/site-packages/sqlalchemy/orm/session.py\", line 2064, in _before_attach\r\n    state.session_id, self.hash_key))\r\nsqlalchemy.exc.InvalidRequestError: Object '<Role at 0x109f45a58>' is already attached to session '2' (this is '3')\r\n```\r\nI tried running a `db_session.commit()` right after doing the role assignment which had the same problem. What am I doing wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/659", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/659/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/659/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/659/events", "html_url": "https://github.com/mattupstate/flask-security/issues/659", "id": 235823321, "node_id": "MDU6SXNzdWUyMzU4MjMzMjE=", "number": 659, "title": "security issue concerning username/password combination", "user": {"login": "wisepotato", "id": 1401260, "node_id": "MDQ6VXNlcjE0MDEyNjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1401260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wisepotato", "html_url": "https://github.com/wisepotato", "followers_url": "https://api.github.com/users/wisepotato/followers", "following_url": "https://api.github.com/users/wisepotato/following{/other_user}", "gists_url": "https://api.github.com/users/wisepotato/gists{/gist_id}", "starred_url": "https://api.github.com/users/wisepotato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wisepotato/subscriptions", "organizations_url": "https://api.github.com/users/wisepotato/orgs", "repos_url": "https://api.github.com/users/wisepotato/repos", "events_url": "https://api.github.com/users/wisepotato/events{/privacy}", "received_events_url": "https://api.github.com/users/wisepotato/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 932608, "node_id": "MDU6TGFiZWw5MzI2MDg=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-14T09:49:13Z", "updated_at": "2017-06-19T15:46:35Z", "closed_at": "2017-06-19T15:46:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Now this seems like a glaring security issue. When I input a wrong password but a correct username it gives back : this password is incorrect. SHouldn't it return:\r\n```\r\nUsername/password combination is incorrect\r\n```\r\nInstead of  allowing me to guess a username first?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/658", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/658/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/658/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/658/events", "html_url": "https://github.com/mattupstate/flask-security/issues/658", "id": 235653024, "node_id": "MDU6SXNzdWUyMzU2NTMwMjQ=", "number": 658, "title": "CircleCI: invalid input syntax for integer: \"untrackable\"", "user": {"login": "RedCraig", "id": 1644211, "node_id": "MDQ6VXNlcjE2NDQyMTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1644211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RedCraig", "html_url": "https://github.com/RedCraig", "followers_url": "https://api.github.com/users/RedCraig/followers", "following_url": "https://api.github.com/users/RedCraig/following{/other_user}", "gists_url": "https://api.github.com/users/RedCraig/gists{/gist_id}", "starred_url": "https://api.github.com/users/RedCraig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RedCraig/subscriptions", "organizations_url": "https://api.github.com/users/RedCraig/orgs", "repos_url": "https://api.github.com/users/RedCraig/repos", "events_url": "https://api.github.com/users/RedCraig/events{/privacy}", "received_events_url": "https://api.github.com/users/RedCraig/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-13T18:45:47Z", "updated_at": "2017-06-14T12:12:35Z", "closed_at": "2017-06-14T12:12:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running on CircleCI I'm getting:\r\n```\r\nsqlalchemy.exc.InvalidRequestError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (raised as a result of Query-invoked autoflush; consider using a session.no_autoflush block if this flush is occurring prematurely) (psycopg2.DataError) invalid input syntax for integer: \"untrackable\"\r\nLINE 1: ...-06-13T18:27:27.207671'::timestamp, last_login_ip='untrackab...\r\n```\r\nI have:\r\n`SECURITY_TRACKABLE = True`\r\nand\r\nmy `Users` model is:\r\n```python\r\n\r\nclass Users(db.Model, UserMixin):\r\n    id = db.Column(db.Integer, primary_key=True)\r\n    email = db.Column(db.String(255), unique=True)\r\n    password = db.Column(db.String(255))\r\n    active = db.Column(db.Boolean())\r\n    confirmed_at = db.Column(db.DateTime())\r\n    last_login_at = db.Column(db.DateTime())\r\n    current_login_at = db.Column(db.DateTime())\r\n    last_login_ip = db.Column(db.Integer)\r\n    current_login_ip = db.Column(db.Integer)\r\n    login_count = db.Column(db.Integer)\r\n\r\n    roles = db.relationship('Role',\r\n                            secondary=roles_users,\r\n                            backref=db.backref('users', lazy='dynamic'))\r\n```\r\nthe `last_login_ip` is an int, which obviously won't work with a string `'untrackable'` value.\r\n\r\nWhat am I doing wrong here? Should I change the table model, or is there some way to change the default untrackable value?\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/652", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/652/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/652/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/652/events", "html_url": "https://github.com/mattupstate/flask-security/issues/652", "id": 233776375, "node_id": "MDU6SXNzdWUyMzM3NzYzNzU=", "number": 652, "title": "encrypt_password requires app context", "user": {"login": "mixmastamyk", "id": 767039, "node_id": "MDQ6VXNlcjc2NzAzOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/767039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mixmastamyk", "html_url": "https://github.com/mixmastamyk", "followers_url": "https://api.github.com/users/mixmastamyk/followers", "following_url": "https://api.github.com/users/mixmastamyk/following{/other_user}", "gists_url": "https://api.github.com/users/mixmastamyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/mixmastamyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mixmastamyk/subscriptions", "organizations_url": "https://api.github.com/users/mixmastamyk/orgs", "repos_url": "https://api.github.com/users/mixmastamyk/repos", "events_url": "https://api.github.com/users/mixmastamyk/events{/privacy}", "received_events_url": "https://api.github.com/users/mixmastamyk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 932612, "node_id": "MDU6TGFiZWw5MzI2MTI=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-06T04:31:20Z", "updated_at": "2017-06-06T06:22:02Z", "closed_at": "2017-06-06T06:21:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, have a model, with a password field to encrypt:\r\n\r\n```\r\nclass User(BaseModel, UserMixin):\r\n    def __init__(self, name='', email='', password=None, ...)\r\n        self.password = encrypt_password(password)\r\n```\r\nBut this raises: `RuntimeError: Working outside of application context.`\r\n\r\nSeems like password hashing should not be tied to the flask app?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/648", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/648/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/648/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/648/events", "html_url": "https://github.com/mattupstate/flask-security/issues/648", "id": 232074677, "node_id": "MDU6SXNzdWUyMzIwNzQ2Nzc=", "number": 648, "title": "signal for login/logout", "user": {"login": "RedCraig", "id": 1644211, "node_id": "MDQ6VXNlcjE2NDQyMTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1644211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RedCraig", "html_url": "https://github.com/RedCraig", "followers_url": "https://api.github.com/users/RedCraig/followers", "following_url": "https://api.github.com/users/RedCraig/following{/other_user}", "gists_url": "https://api.github.com/users/RedCraig/gists{/gist_id}", "starred_url": "https://api.github.com/users/RedCraig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RedCraig/subscriptions", "organizations_url": "https://api.github.com/users/RedCraig/orgs", "repos_url": "https://api.github.com/users/RedCraig/repos", "events_url": "https://api.github.com/users/RedCraig/events{/privacy}", "received_events_url": "https://api.github.com/users/RedCraig/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-29T18:05:33Z", "updated_at": "2017-05-29T19:15:25Z", "closed_at": "2017-05-29T19:15:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there,\r\n\r\nIs there a way to execute my own code after a login or logout of a user?\r\n\r\nRight now I'm using all flask-security defaults, so logins/outs go straight through flask-security methods.\r\nThere don't appear to be any signals for login/outs.\r\n\r\nThanks for any help,\r\nCraig", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/645", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/645/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/645/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/645/events", "html_url": "https://github.com/mattupstate/flask-security/issues/645", "id": 231978780, "node_id": "MDU6SXNzdWUyMzE5Nzg3ODA=", "number": 645, "title": "Storing LB ip in current_login_ip and last_login_ip", "user": {"login": "kvnaveen7", "id": 9314223, "node_id": "MDQ6VXNlcjkzMTQyMjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/9314223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvnaveen7", "html_url": "https://github.com/kvnaveen7", "followers_url": "https://api.github.com/users/kvnaveen7/followers", "following_url": "https://api.github.com/users/kvnaveen7/following{/other_user}", "gists_url": "https://api.github.com/users/kvnaveen7/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvnaveen7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvnaveen7/subscriptions", "organizations_url": "https://api.github.com/users/kvnaveen7/orgs", "repos_url": "https://api.github.com/users/kvnaveen7/repos", "events_url": "https://api.github.com/users/kvnaveen7/events{/privacy}", "received_events_url": "https://api.github.com/users/kvnaveen7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-29T09:58:14Z", "updated_at": "2017-05-29T19:22:29Z", "closed_at": "2017-05-29T19:22:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, When tracking is enabled flask security is storing Load Balancer ip i.e remote_addr is storing not x-forwarded-for.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/644", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/644/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/644/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/644/events", "html_url": "https://github.com/mattupstate/flask-security/issues/644", "id": 231294819, "node_id": "MDU6SXNzdWUyMzEyOTQ4MTk=", "number": 644, "title": "Update pypi to version 2", "user": {"login": "yoursdearboy", "id": 4808043, "node_id": "MDQ6VXNlcjQ4MDgwNDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4808043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoursdearboy", "html_url": "https://github.com/yoursdearboy", "followers_url": "https://api.github.com/users/yoursdearboy/followers", "following_url": "https://api.github.com/users/yoursdearboy/following{/other_user}", "gists_url": "https://api.github.com/users/yoursdearboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoursdearboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoursdearboy/subscriptions", "organizations_url": "https://api.github.com/users/yoursdearboy/orgs", "repos_url": "https://api.github.com/users/yoursdearboy/repos", "events_url": "https://api.github.com/users/yoursdearboy/events{/privacy}", "received_events_url": "https://api.github.com/users/yoursdearboy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jirikuncar", "id": 189798, "node_id": "MDQ6VXNlcjE4OTc5OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/189798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jirikuncar", "html_url": "https://github.com/jirikuncar", "followers_url": "https://api.github.com/users/jirikuncar/followers", "following_url": "https://api.github.com/users/jirikuncar/following{/other_user}", "gists_url": "https://api.github.com/users/jirikuncar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jirikuncar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jirikuncar/subscriptions", "organizations_url": "https://api.github.com/users/jirikuncar/orgs", "repos_url": "https://api.github.com/users/jirikuncar/repos", "events_url": "https://api.github.com/users/jirikuncar/events{/privacy}", "received_events_url": "https://api.github.com/users/jirikuncar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jirikuncar", "id": 189798, "node_id": "MDQ6VXNlcjE4OTc5OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/189798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jirikuncar", "html_url": "https://github.com/jirikuncar", "followers_url": "https://api.github.com/users/jirikuncar/followers", "following_url": "https://api.github.com/users/jirikuncar/following{/other_user}", "gists_url": "https://api.github.com/users/jirikuncar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jirikuncar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jirikuncar/subscriptions", "organizations_url": "https://api.github.com/users/jirikuncar/orgs", "repos_url": "https://api.github.com/users/jirikuncar/repos", "events_url": "https://api.github.com/users/jirikuncar/events{/privacy}", "received_events_url": "https://api.github.com/users/jirikuncar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-05-25T09:56:39Z", "updated_at": "2017-06-14T13:37:16Z", "closed_at": "2017-06-14T13:37:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Current version on [pypi](https://pypi.python.org/pypi/Flask-Security) is 1.7.5 and miss new functions such as i18n, etc..\r\n\r\nIt would be nice to be able to install releases from pypi or at least have git tags to use with pip.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/643", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/643/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/643/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/643/events", "html_url": "https://github.com/mattupstate/flask-security/issues/643", "id": 231294213, "node_id": "MDU6SXNzdWUyMzEyOTQyMTM=", "number": 643, "title": "Missing Flask-Peewee dependency", "user": {"login": "yoursdearboy", "id": 4808043, "node_id": "MDQ6VXNlcjQ4MDgwNDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4808043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoursdearboy", "html_url": "https://github.com/yoursdearboy", "followers_url": "https://api.github.com/users/yoursdearboy/followers", "following_url": "https://api.github.com/users/yoursdearboy/following{/other_user}", "gists_url": "https://api.github.com/users/yoursdearboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoursdearboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoursdearboy/subscriptions", "organizations_url": "https://api.github.com/users/yoursdearboy/orgs", "repos_url": "https://api.github.com/users/yoursdearboy/repos", "events_url": "https://api.github.com/users/yoursdearboy/events{/privacy}", "received_events_url": "https://api.github.com/users/yoursdearboy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-05-25T09:53:53Z", "updated_at": "2017-05-29T19:16:44Z", "closed_at": "2017-05-29T19:16:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi. I have a problem with `develop` version. Probably it's because of missing Flask-Pewee dependency in setup.py's `install_requires`?\r\n\r\n> Traceback (most recent call last):\r\n>   File \"/Users/kirill.voronin/Work/apps_ng_2/hsctbio/hsctbio.py\", line 15, in <module>\r\n>     from flask_security import SQLAlchemyUserDatastore, Security\r\n>   File \"/Users/kirill.voronin/.virtualenvs/hsctbio/lib/python3.5/site-packages/flask_security/__init__.py\", line 14, in <module>\r\n>     from .datastore import SQLAlchemyUserDatastore, MongoEngineUserDatastore, \\\r\n>   File \"/Users/kirill.voronin/.virtualenvs/hsctbio/lib/python3.5/site-packages/flask_security/datastore.py\", line 12, in <module>\r\n>     from peewee import fn as peeweeFn\r\n> ImportError: No module named 'peewee'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/640", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/640/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/640/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/640/events", "html_url": "https://github.com/mattupstate/flask-security/issues/640", "id": 228635801, "node_id": "MDU6SXNzdWUyMjg2MzU4MDE=", "number": 640, "title": "Reset password functionality doesn't work", "user": {"login": "HwangGwa", "id": 19251100, "node_id": "MDQ6VXNlcjE5MjUxMTAw", "avatar_url": "https://avatars2.githubusercontent.com/u/19251100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HwangGwa", "html_url": "https://github.com/HwangGwa", "followers_url": "https://api.github.com/users/HwangGwa/followers", "following_url": "https://api.github.com/users/HwangGwa/following{/other_user}", "gists_url": "https://api.github.com/users/HwangGwa/gists{/gist_id}", "starred_url": "https://api.github.com/users/HwangGwa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HwangGwa/subscriptions", "organizations_url": "https://api.github.com/users/HwangGwa/orgs", "repos_url": "https://api.github.com/users/HwangGwa/repos", "events_url": "https://api.github.com/users/HwangGwa/events{/privacy}", "received_events_url": "https://api.github.com/users/HwangGwa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 932611, "node_id": "MDU6TGFiZWw5MzI2MTE=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-15T08:07:07Z", "updated_at": "2017-06-06T08:05:18Z", "closed_at": "2017-06-06T08:05:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have same problem.\r\nFlask-Security ==1.7.5\r\nFlask-SQLAlchemy==2.2\r\nSQLAlchemy==1.1.9\r\n```\r\nmain.py\r\nfrom flask_sqlalchemy import SQLAlchemy\r\nfrom flask_security import current_user, login_required, RoleMixin, Security, \\\r\n\tSQLAlchemyUserDatastore, UserMixin, utils\r\napp = Flask(__name__)\r\napp.config.from_object('config')\r\ndb = SQLAlchemy(app)\r\n```\r\n```\r\nconfig.py\r\n\r\n#SQLALCHEMY_COMMIT_ON_TEARDOWN = True\r\n```\r\nWhen I didn't  set SQLALCHEMY_COMMIT_ON_TEARDOWN = True,  after submit the reset_password_form, it appears **sqlalchemy.orm.exc.DetachedInstanceError: Parent instance <User at 0x6d415c0> is not bound to a Session; lazy load operation of attribute 'roles' cannot proceed** and the new password didn't put into the database.\r\n\r\nWhen I set SQLALCHEMY_COMMIT_ON_TEARDOWN = True, click RecoverPassword button , it appears **sqlalchemy.orm.exc.DetachedInstanceError: Instance <User at 0x6af0320> is not bound to a Session; attribute refresh operation cannot proceed**, but i can through the email link change my password..", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/630", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/630/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/630/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/630/events", "html_url": "https://github.com/mattupstate/flask-security/issues/630", "id": 226134963, "node_id": "MDU6SXNzdWUyMjYxMzQ5NjM=", "number": 630, "title": "Add support for Argon2", "user": {"login": "inkadnb", "id": 349044, "node_id": "MDQ6VXNlcjM0OTA0NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/349044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inkadnb", "html_url": "https://github.com/inkadnb", "followers_url": "https://api.github.com/users/inkadnb/followers", "following_url": "https://api.github.com/users/inkadnb/following{/other_user}", "gists_url": "https://api.github.com/users/inkadnb/gists{/gist_id}", "starred_url": "https://api.github.com/users/inkadnb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inkadnb/subscriptions", "organizations_url": "https://api.github.com/users/inkadnb/orgs", "repos_url": "https://api.github.com/users/inkadnb/repos", "events_url": "https://api.github.com/users/inkadnb/events{/privacy}", "received_events_url": "https://api.github.com/users/inkadnb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 932611, "node_id": "MDU6TGFiZWw5MzI2MTE=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-03T22:40:06Z", "updated_at": "2018-05-15T19:20:20Z", "closed_at": "2017-05-05T07:32:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since Passlib has been updated, would like to see support for Argon2. I assume this simply needs to be added to the PASSWORD_SCHEMES list in core.py?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/628", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/628/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/628/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/628/events", "html_url": "https://github.com/mattupstate/flask-security/issues/628", "id": 225811819, "node_id": "MDU6SXNzdWUyMjU4MTE4MTk=", "number": 628, "title": "Forms are not being translated", "user": {"login": "themylogin", "id": 669257, "node_id": "MDQ6VXNlcjY2OTI1Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/669257?v=4", "gravatar_id": "", "url": "https://api.github.com/users/themylogin", "html_url": "https://github.com/themylogin", "followers_url": "https://api.github.com/users/themylogin/followers", "following_url": "https://api.github.com/users/themylogin/following{/other_user}", "gists_url": "https://api.github.com/users/themylogin/gists{/gist_id}", "starred_url": "https://api.github.com/users/themylogin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/themylogin/subscriptions", "organizations_url": "https://api.github.com/users/themylogin/orgs", "repos_url": "https://api.github.com/users/themylogin/repos", "events_url": "https://api.github.com/users/themylogin/events{/privacy}", "received_events_url": "https://api.github.com/users/themylogin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-02T20:29:40Z", "updated_at": "2017-05-22T18:30:14Z", "closed_at": "2017-05-22T18:30:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "All flask-security form fields were constructed with plain English strings. I did not understand how this is supposed to work and just hacked this: https://github.com/themylogin/flask-security/commit/6753200e3799d7fe02681c1c992965d5007604d7. Why were not form translations working out of the box?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/627", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/627/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/627/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/627/events", "html_url": "https://github.com/mattupstate/flask-security/issues/627", "id": 225797197, "node_id": "MDU6SXNzdWUyMjU3OTcxOTc=", "number": 627, "title": "Putting .mo files into repository", "user": {"login": "themylogin", "id": 669257, "node_id": "MDQ6VXNlcjY2OTI1Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/669257?v=4", "gravatar_id": "", "url": "https://api.github.com/users/themylogin", "html_url": "https://github.com/themylogin", "followers_url": "https://api.github.com/users/themylogin/followers", "following_url": "https://api.github.com/users/themylogin/following{/other_user}", "gists_url": "https://api.github.com/users/themylogin/gists{/gist_id}", "starred_url": "https://api.github.com/users/themylogin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/themylogin/subscriptions", "organizations_url": "https://api.github.com/users/themylogin/orgs", "repos_url": "https://api.github.com/users/themylogin/repos", "events_url": "https://api.github.com/users/themylogin/events{/privacy}", "received_events_url": "https://api.github.com/users/themylogin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9116315, "node_id": "MDU6TGFiZWw5MTE2MzE1", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/discussion", "name": "discussion", "color": "444444", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-02T19:31:40Z", "updated_at": "2017-05-03T07:13:47Z", "closed_at": "2017-05-03T07:13:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "As I've understood, Flask-Admin is [considered](https://github.com/mattupstate/flask-security/issues/626) to be an example of well-done internationalized Flask extension. They [put](https://github.com/flask-admin/flask-admin/tree/master/flask_admin/translations/de/LC_MESSAGES) compiled .mo files along with .po files into repository (and thus, PyPi distribution), because it is really [inconvenient](https://github.com/mattupstate/flask-security/issues/622) to run `python setup.py compile_catalog` manually (e.g. how do I run it when installing Flask-Security from requirements.txt with CI?). Maybe, Flask-Security should also do so?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/622", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/622/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/622/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/622/events", "html_url": "https://github.com/mattupstate/flask-security/issues/622", "id": 224763381, "node_id": "MDU6SXNzdWUyMjQ3NjMzODE=", "number": 622, "title": "Wrong I18N_DOMAIN or po-files names", "user": {"login": "yoursdearboy", "id": 4808043, "node_id": "MDQ6VXNlcjQ4MDgwNDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4808043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoursdearboy", "html_url": "https://github.com/yoursdearboy", "followers_url": "https://api.github.com/users/yoursdearboy/followers", "following_url": "https://api.github.com/users/yoursdearboy/following{/other_user}", "gists_url": "https://api.github.com/users/yoursdearboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoursdearboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoursdearboy/subscriptions", "organizations_url": "https://api.github.com/users/yoursdearboy/orgs", "repos_url": "https://api.github.com/users/yoursdearboy/repos", "events_url": "https://api.github.com/users/yoursdearboy/events{/privacy}", "received_events_url": "https://api.github.com/users/yoursdearboy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 932607, "node_id": "MDU6TGFiZWw5MzI2MDc=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jirikuncar", "id": 189798, "node_id": "MDQ6VXNlcjE4OTc5OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/189798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jirikuncar", "html_url": "https://github.com/jirikuncar", "followers_url": "https://api.github.com/users/jirikuncar/followers", "following_url": "https://api.github.com/users/jirikuncar/following{/other_user}", "gists_url": "https://api.github.com/users/jirikuncar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jirikuncar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jirikuncar/subscriptions", "organizations_url": "https://api.github.com/users/jirikuncar/orgs", "repos_url": "https://api.github.com/users/jirikuncar/repos", "events_url": "https://api.github.com/users/jirikuncar/events{/privacy}", "received_events_url": "https://api.github.com/users/jirikuncar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jirikuncar", "id": 189798, "node_id": "MDQ6VXNlcjE4OTc5OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/189798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jirikuncar", "html_url": "https://github.com/jirikuncar", "followers_url": "https://api.github.com/users/jirikuncar/followers", "following_url": "https://api.github.com/users/jirikuncar/following{/other_user}", "gists_url": "https://api.github.com/users/jirikuncar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jirikuncar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jirikuncar/subscriptions", "organizations_url": "https://api.github.com/users/jirikuncar/orgs", "repos_url": "https://api.github.com/users/jirikuncar/repos", "events_url": "https://api.github.com/users/jirikuncar/events{/privacy}", "received_events_url": "https://api.github.com/users/jirikuncar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-04-27T12:11:25Z", "updated_at": "2017-04-28T07:45:51Z", "closed_at": "2017-04-28T07:45:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Greetings. I can't get translations work with default value of `I18N_DOMAIN='flask_security'`. It seems to be incorrect because translations po-file has name `messages.po`. As I understand from [Flask-BabelEx documentation](http://pythonhosted.org/Flask-BabelEx/#flask.ext.babelex.Domain) then filename should be `flask_security.po`:\r\n\r\n> class flask.ext.babelex.Domain(dirname=None, domain='messages')\r\n> Localization domain. By default will use look for tranlations in Flask application directory and \u201cmessages\u201d domain - all message catalogs should be called messages.mo.\r\n\r\nI've installed flask-security with pip using git://..@develop and then compiled messages manually with `pybabel compile -d translations`. Have I missed some keys?\r\n\r\nAlso, it would be nice to have an option to override domain to use custom translations from applications directory (or maybe just set a constant with path), then `I18N_DOMAIN` definitely should be `flask_security`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/621", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/621/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/621/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/621/events", "html_url": "https://github.com/mattupstate/flask-security/issues/621", "id": 224762180, "node_id": "MDU6SXNzdWUyMjQ3NjIxODA=", "number": 621, "title": "Login message doesn't translated", "user": {"login": "yoursdearboy", "id": 4808043, "node_id": "MDQ6VXNlcjQ4MDgwNDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4808043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoursdearboy", "html_url": "https://github.com/yoursdearboy", "followers_url": "https://api.github.com/users/yoursdearboy/followers", "following_url": "https://api.github.com/users/yoursdearboy/following{/other_user}", "gists_url": "https://api.github.com/users/yoursdearboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoursdearboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoursdearboy/subscriptions", "organizations_url": "https://api.github.com/users/yoursdearboy/orgs", "repos_url": "https://api.github.com/users/yoursdearboy/repos", "events_url": "https://api.github.com/users/yoursdearboy/events{/privacy}", "received_events_url": "https://api.github.com/users/yoursdearboy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 932607, "node_id": "MDU6TGFiZWw5MzI2MDc=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-04-27T12:05:58Z", "updated_at": "2017-05-10T07:22:41Z", "closed_at": "2017-05-10T07:22:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Login message \"Please log in to access this page.\" doesn't translated.\r\nProbably Flask-Login translation should be configured:\r\n```python\r\nsecurity = app.extensions['security']\r\nsecurity.login_manager.localize_callback = security.i18n_domain.gettext\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/618", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/618/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/618/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/618/events", "html_url": "https://github.com/mattupstate/flask-security/issues/618", "id": 224007055, "node_id": "MDU6SXNzdWUyMjQwMDcwNTU=", "number": 618, "title": "Can't custom login_form when create the instance of Security", "user": {"login": "stamaimer", "id": 3755338, "node_id": "MDQ6VXNlcjM3NTUzMzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3755338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stamaimer", "html_url": "https://github.com/stamaimer", "followers_url": "https://api.github.com/users/stamaimer/followers", "following_url": "https://api.github.com/users/stamaimer/following{/other_user}", "gists_url": "https://api.github.com/users/stamaimer/gists{/gist_id}", "starred_url": "https://api.github.com/users/stamaimer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stamaimer/subscriptions", "organizations_url": "https://api.github.com/users/stamaimer/orgs", "repos_url": "https://api.github.com/users/stamaimer/repos", "events_url": "https://api.github.com/users/stamaimer/events{/privacy}", "received_events_url": "https://api.github.com/users/stamaimer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-04-25T03:03:15Z", "updated_at": "2017-04-27T14:19:29Z", "closed_at": "2017-04-25T06:07:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use the factory pattern of Flask. I create Security instance with `security = Security(datastore=user_datastore, login_form=AppLoginForm)`, and then init it with `security.init_app(app)`. But the login_form still the default of Flask-Security. It works use follows code`security = Security(datastore=user_datastore)` and `security.init_app(app, login_form=AppLoginForm`. I want to use a consistent method to init all my extension in a for loop. But if i can't assign the custom login form of Flask-Security, It might break that consistent.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/609", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/609/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/609/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/609/events", "html_url": "https://github.com/mattupstate/flask-security/issues/609", "id": 216190791, "node_id": "MDU6SXNzdWUyMTYxOTA3OTE=", "number": 609, "title": "How to disable all routes and views", "user": {"login": "r0b1n1sl4m", "id": 6296015, "node_id": "MDQ6VXNlcjYyOTYwMTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/6296015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r0b1n1sl4m", "html_url": "https://github.com/r0b1n1sl4m", "followers_url": "https://api.github.com/users/r0b1n1sl4m/followers", "following_url": "https://api.github.com/users/r0b1n1sl4m/following{/other_user}", "gists_url": "https://api.github.com/users/r0b1n1sl4m/gists{/gist_id}", "starred_url": "https://api.github.com/users/r0b1n1sl4m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r0b1n1sl4m/subscriptions", "organizations_url": "https://api.github.com/users/r0b1n1sl4m/orgs", "repos_url": "https://api.github.com/users/r0b1n1sl4m/repos", "events_url": "https://api.github.com/users/r0b1n1sl4m/events{/privacy}", "received_events_url": "https://api.github.com/users/r0b1n1sl4m/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-22T20:02:41Z", "updated_at": "2017-03-22T20:13:21Z", "closed_at": "2017-03-22T20:13:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been building a REST API & using flask-security to manage user accounts. I'm using it's inner functions but I don't need any routes and views as I've developed something custom with it. So for some reason I need to disable the routes and views so that nobody can access anything like /login,/confirm etc. Is there any option available? If yes please help me with that.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/607", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/607/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/607/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/607/events", "html_url": "https://github.com/mattupstate/flask-security/issues/607", "id": 215391353, "node_id": "MDU6SXNzdWUyMTUzOTEzNTM=", "number": 607, "title": "AttributeError: 'AnonymousUserMixin' object has no attribute 'roles'", "user": {"login": "threemonks", "id": 5317790, "node_id": "MDQ6VXNlcjUzMTc3OTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5317790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/threemonks", "html_url": "https://github.com/threemonks", "followers_url": "https://api.github.com/users/threemonks/followers", "following_url": "https://api.github.com/users/threemonks/following{/other_user}", "gists_url": "https://api.github.com/users/threemonks/gists{/gist_id}", "starred_url": "https://api.github.com/users/threemonks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/threemonks/subscriptions", "organizations_url": "https://api.github.com/users/threemonks/orgs", "repos_url": "https://api.github.com/users/threemonks/repos", "events_url": "https://api.github.com/users/threemonks/events{/privacy}", "received_events_url": "https://api.github.com/users/threemonks/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jirikuncar", "id": 189798, "node_id": "MDQ6VXNlcjE4OTc5OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/189798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jirikuncar", "html_url": "https://github.com/jirikuncar", "followers_url": "https://api.github.com/users/jirikuncar/followers", "following_url": "https://api.github.com/users/jirikuncar/following{/other_user}", "gists_url": "https://api.github.com/users/jirikuncar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jirikuncar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jirikuncar/subscriptions", "organizations_url": "https://api.github.com/users/jirikuncar/orgs", "repos_url": "https://api.github.com/users/jirikuncar/repos", "events_url": "https://api.github.com/users/jirikuncar/events{/privacy}", "received_events_url": "https://api.github.com/users/jirikuncar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jirikuncar", "id": 189798, "node_id": "MDQ6VXNlcjE4OTc5OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/189798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jirikuncar", "html_url": "https://github.com/jirikuncar", "followers_url": "https://api.github.com/users/jirikuncar/followers", "following_url": "https://api.github.com/users/jirikuncar/following{/other_user}", "gists_url": "https://api.github.com/users/jirikuncar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jirikuncar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jirikuncar/subscriptions", "organizations_url": "https://api.github.com/users/jirikuncar/orgs", "repos_url": "https://api.github.com/users/jirikuncar/repos", "events_url": "https://api.github.com/users/jirikuncar/events{/privacy}", "received_events_url": "https://api.github.com/users/jirikuncar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-03-20T11:22:21Z", "updated_at": "2017-04-27T07:02:43Z", "closed_at": "2017-04-27T07:02:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I logout, I got this error:\r\n\r\nAttributeError: 'AnonymousUserMixin' object has no attribute 'roles'\r\n\r\nDebugging shows that it comes from core.py:_on_identity_loaded() line 218:\r\n```\r\n    for role in current_user.roles:\r\n        identity.provides.add(RoleNeed(role.name))\r\n```\r\n\r\nRight after logout, current_user is a AnonymousUserMixin from flask_login.mixins, which does not have such attribute roles.\r\n\r\nCan you add a check if current_user have attribute 'roles' before you loop through it?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/603", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/603/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/603/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/603/events", "html_url": "https://github.com/mattupstate/flask-security/issues/603", "id": 213521998, "node_id": "MDU6SXNzdWUyMTM1MjE5OTg=", "number": 603, "title": "Some templates ignored", "user": {"login": "JetForMe", "id": 401600, "node_id": "MDQ6VXNlcjQwMTYwMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/401600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JetForMe", "html_url": "https://github.com/JetForMe", "followers_url": "https://api.github.com/users/JetForMe/followers", "following_url": "https://api.github.com/users/JetForMe/following{/other_user}", "gists_url": "https://api.github.com/users/JetForMe/gists{/gist_id}", "starred_url": "https://api.github.com/users/JetForMe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JetForMe/subscriptions", "organizations_url": "https://api.github.com/users/JetForMe/orgs", "repos_url": "https://api.github.com/users/JetForMe/repos", "events_url": "https://api.github.com/users/JetForMe/events{/privacy}", "received_events_url": "https://api.github.com/users/JetForMe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-03-11T10:56:51Z", "updated_at": "2017-06-06T08:17:49Z", "closed_at": "2017-06-06T08:17:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that flask-security ignores some templates, and not others. For example, I have a working `security/forgot_password.html`, but my `security/login_user.html` is completely ignored.\r\n\r\n```\r\nSECURITY_FORGOT_PASSWORD_TEMPLATE = security/forgot_password.html\r\nSECURITY_LOGIN_USER_TEMPLATE = security/login_user.html\r\n```\r\n\r\n```\r\n$ ls -R templates/\r\n_macros.html\tbase.html\tindex.html\tsecurity/\r\n\r\ntemplates//security:\r\nchange_password.html\tforgot_password.html\tlogin_user.html\t\treset_password.html\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/602", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/602/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/602/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/602/events", "html_url": "https://github.com/mattupstate/flask-security/issues/602", "id": 213486201, "node_id": "MDU6SXNzdWUyMTM0ODYyMDE=", "number": 602, "title": "Anything more than getting started documentation?", "user": {"login": "JetForMe", "id": 401600, "node_id": "MDQ6VXNlcjQwMTYwMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/401600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JetForMe", "html_url": "https://github.com/JetForMe", "followers_url": "https://api.github.com/users/JetForMe/followers", "following_url": "https://api.github.com/users/JetForMe/following{/other_user}", "gists_url": "https://api.github.com/users/JetForMe/gists{/gist_id}", "starred_url": "https://api.github.com/users/JetForMe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JetForMe/subscriptions", "organizations_url": "https://api.github.com/users/JetForMe/orgs", "repos_url": "https://api.github.com/users/JetForMe/repos", "events_url": "https://api.github.com/users/JetForMe/events{/privacy}", "received_events_url": "https://api.github.com/users/JetForMe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-11T00:15:10Z", "updated_at": "2017-03-22T12:07:18Z", "closed_at": "2017-03-22T08:11:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've gone through the docs, and successfully integrated Flask-Security into my fledgling app, getting it to show a login form for the home page as described in the Getting Started section.\r\n\r\nNow I'm looking to see how to do a number of additional things, and I can't find documentation describing how to use F-S to do these things (I did find lots of information on how to customize these, implying there's a default behavior available):\r\n\r\n- Present a registration form\r\n- Accept a registration form and create a new user record with a role (how do I define what roles get assigned)?\r\n- Initiate forgot-password flow?\r\n- Use a different auth mechanism (e.g. token-based)\r\n- Initiate flow through any of the other forms implied by the section on templates.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/601", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/601/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/601/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/601/events", "html_url": "https://github.com/mattupstate/flask-security/issues/601", "id": 212553319, "node_id": "MDU6SXNzdWUyMTI1NTMzMTk=", "number": 601, "title": "SECURITY_CONFIRMABLE mixup between confirm password and confirm email", "user": {"login": "sdiepend", "id": 1036833, "node_id": "MDQ6VXNlcjEwMzY4MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1036833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdiepend", "html_url": "https://github.com/sdiepend", "followers_url": "https://api.github.com/users/sdiepend/followers", "following_url": "https://api.github.com/users/sdiepend/following{/other_user}", "gists_url": "https://api.github.com/users/sdiepend/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdiepend/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdiepend/subscriptions", "organizations_url": "https://api.github.com/users/sdiepend/orgs", "repos_url": "https://api.github.com/users/sdiepend/repos", "events_url": "https://api.github.com/users/sdiepend/events{/privacy}", "received_events_url": "https://api.github.com/users/sdiepend/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 932612, "node_id": "MDU6TGFiZWw5MzI2MTI=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-03-07T20:45:18Z", "updated_at": "2017-05-05T07:37:48Z", "closed_at": "2017-04-27T14:17:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I think there is some weird behaviour when using SECURITY_CONFIRMABLE.\r\n\r\nThe documentation states the following, so this is a flag to enable confirmation of an email address.\r\n\r\n> SECURITY_CONFIRMABLE \t\r\n> Specifies if users are required to confirm their email address when registering a new account. If this value is True, Flask-Security creates an endpoint to handle confirmations and requests to resend confirmation instructions. The URL for this endpoint is specified by the SECURITY_CONFIRM_URL configuration option. Defaults to False.\r\n\r\nBut when set to True it also removes the second password field, so I think this is mixing up email confirimation and password confirmation. \r\n\r\nregister_user.html\r\n```\r\n{% if register_user_form.password_confirm %}\r\n    {{ render_field_with_errors(register_user_form.password_confirm) }}\r\n  {% endif %}\r\n```\r\n\r\nI think it has to do with the following two forms:\r\nforms.py\r\n```\r\nclass ConfirmRegisterForm(Form, RegisterFormMixin,\r\n                          UniqueEmailFormMixin, NewPasswordFormMixin):\r\n    pass\r\n\r\n\r\nclass RegisterForm(ConfirmRegisterForm, PasswordConfirmFormMixin,\r\n                   NextFormMixin):\r\n    def __init__(self, *args, **kwargs):\r\n        super(RegisterForm, self).__init__(*args, **kwargs)\r\n        if not self.next.data:\r\n            self.next.data = request.args.get('next', '')\r\n```\r\n\r\nviews.py\r\n```\r\ndef register():\r\n    \"\"\"View function which handles a registration request.\"\"\"\r\n\r\n    if _security.confirmable or request.json:\r\n        form_class = _security.confirm_register_form\r\n    else:\r\n        form_class = _security.register_form\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/600", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/600/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/600/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/600/events", "html_url": "https://github.com/mattupstate/flask-security/issues/600", "id": 210222081, "node_id": "MDU6SXNzdWUyMTAyMjIwODE=", "number": 600, "title": "peewee.OperationalError: Connection already open - on first run of example app", "user": {"login": "oz123", "id": 1083045, "node_id": "MDQ6VXNlcjEwODMwNDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1083045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oz123", "html_url": "https://github.com/oz123", "followers_url": "https://api.github.com/users/oz123/followers", "following_url": "https://api.github.com/users/oz123/following{/other_user}", "gists_url": "https://api.github.com/users/oz123/gists{/gist_id}", "starred_url": "https://api.github.com/users/oz123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oz123/subscriptions", "organizations_url": "https://api.github.com/users/oz123/orgs", "repos_url": "https://api.github.com/users/oz123/repos", "events_url": "https://api.github.com/users/oz123/events{/privacy}", "received_events_url": "https://api.github.com/users/oz123/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 932612, "node_id": "MDU6TGFiZWw5MzI2MTI=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-25T08:53:39Z", "updated_at": "2017-06-06T12:44:23Z", "closed_at": "2017-06-06T12:44:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI ran the example as shown in the docs. Upon first run, I got the above exception.\r\n\r\nRefreshing the page, makes this disappear. This scares me a be that if I use Peewee with flask I might\r\nencounter more problems. Is there a chance someone looks into this?\r\n\r\n### update \r\n\r\nif I call the function  directly I don't see this error, e.g.:\r\n```\r\n# @app.before_first_request\r\ndef create_user():\r\n    for Model in (Role, User, UserRoles):\r\n        Model.drop_table(fail_silently=True)\r\n        Model.create_table(fail_silently=True)\r\n    user_datastore.create_user(email='matt@nobien.net', password='password')\r\n\r\ncreate_user()\r\n```\r\nMaybe it is an issue in flask_peewee?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/599", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/599/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/599/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/599/events", "html_url": "https://github.com/mattupstate/flask-security/issues/599", "id": 208943079, "node_id": "MDU6SXNzdWUyMDg5NDMwNzk=", "number": 599, "title": "Unable to add role to user.", "user": {"login": "goelanshul", "id": 3419445, "node_id": "MDQ6VXNlcjM0MTk0NDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3419445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goelanshul", "html_url": "https://github.com/goelanshul", "followers_url": "https://api.github.com/users/goelanshul/followers", "following_url": "https://api.github.com/users/goelanshul/following{/other_user}", "gists_url": "https://api.github.com/users/goelanshul/gists{/gist_id}", "starred_url": "https://api.github.com/users/goelanshul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goelanshul/subscriptions", "organizations_url": "https://api.github.com/users/goelanshul/orgs", "repos_url": "https://api.github.com/users/goelanshul/repos", "events_url": "https://api.github.com/users/goelanshul/events{/privacy}", "received_events_url": "https://api.github.com/users/goelanshul/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 932611, "node_id": "MDU6TGFiZWw5MzI2MTE=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-02-20T17:30:36Z", "updated_at": "2017-06-14T13:19:55Z", "closed_at": "2017-06-14T13:19:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to add role to user but get error always.\r\nHere's the code for the same.\r\n\r\n@app.before_first_request\r\ndef create_user():\r\n    db.create_all()\r\n    role_end_user = user_datastore.find_or_create_role(name='admin', description='Administrator')\r\n    role_admin = user_datastore.find_or_create_role(name='end-user', description='End user')\r\n    db.session.commit()\r\n    password = utils.encrypt_password(\"test123\")\r\nuser_datastore.create_user(email='t123@gmail.com', password=password,mobile_number=\"8611120316\",roles= ['admin'])\r\n    print user_datastore.add_role_to_user('t123@gmail.com','admin')\r\n    db.session.commit()\r\n\r\n\r\nError I get all the time is : \r\n\r\nInvalidRequestError: Object '<User at 0x111866910>' is already attached to session '2' (this is '3')\r\n\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1994, in __call__\r\n    return self.wsgi_app(environ, start_response)\r\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1985, in wsgi_app\r\n    response = self.handle_exception(e)\r\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1540, in handle_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1982, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1607, in full_dispatch_request\r\n    self.try_trigger_before_first_request_functions()\r\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1654, in try_trigger_before_first_request_functions\r\n    func()\r\n  File \"/Users/Anshul/PycharmProjects/ikinanki/server.py\", line 33, in create_user\r\n    print user_datastore.add_role_to_user('t123@gmail.com','admin')\r\n  File \"/usr/local/lib/python2.7/site-packages/flask_security/datastore.py\", line 108, in add_role_to_user\r\n    self.put(user)\r\n  File \"/usr/local/lib/python2.7/site-packages/flask_security/datastore.py\", line 34, in put\r\n    self.db.session.add(model)\r\n  File \"/usr/local/lib/python2.7/site-packages/sqlalchemy/orm/scoping.py\", line 157, in do\r\n    return getattr(self.registry(), name)(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/site-packages/sqlalchemy/orm/session.py\", line 1679, in add\r\n    self._save_or_update_state(state)\r\n  File \"/usr/local/lib/python2.7/site-packages/sqlalchemy/orm/session.py\", line 1691, in _save_or_update_state\r\n    self._save_or_update_impl(state)\r\n  File \"/usr/local/lib/python2.7/site-packages/sqlalchemy/orm/session.py\", line 1997, in _save_or_update_impl\r\n    self._update_impl(state)\r\n  File \"/usr/local/lib/python2.7/site-packages/sqlalchemy/orm/session.py\", line 1980, in _update_impl\r\n    to_attach = self._before_attach(state, obj)\r\n  File \"/usr/local/lib/python2.7/site-packages/sqlalchemy/orm/session.py\", line 2064, in _before_attach\r\n    state.session_id, self.hash_key))\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/598", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/598/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/598/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/598/events", "html_url": "https://github.com/mattupstate/flask-security/issues/598", "id": 207540240, "node_id": "MDU6SXNzdWUyMDc1NDAyNDA=", "number": 598, "title": "SQLAlchemyUserDatastore create_user creates user with plain text password", "user": {"login": "imaia", "id": 14771411, "node_id": "MDQ6VXNlcjE0NzcxNDEx", "avatar_url": "https://avatars1.githubusercontent.com/u/14771411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imaia", "html_url": "https://github.com/imaia", "followers_url": "https://api.github.com/users/imaia/followers", "following_url": "https://api.github.com/users/imaia/following{/other_user}", "gists_url": "https://api.github.com/users/imaia/gists{/gist_id}", "starred_url": "https://api.github.com/users/imaia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imaia/subscriptions", "organizations_url": "https://api.github.com/users/imaia/orgs", "repos_url": "https://api.github.com/users/imaia/repos", "events_url": "https://api.github.com/users/imaia/events{/privacy}", "received_events_url": "https://api.github.com/users/imaia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9116315, "node_id": "MDU6TGFiZWw5MTE2MzE1", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/discussion", "name": "discussion", "color": "444444", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-02-14T15:03:27Z", "updated_at": "2017-04-27T07:40:47Z", "closed_at": "2017-04-27T07:40:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "As in description. An call to create_user for SQLAlchemyUserDatastore creates a new user with password in plain text; regardless of config.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/597", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/597/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/597/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/597/events", "html_url": "https://github.com/mattupstate/flask-security/issues/597", "id": 207226570, "node_id": "MDU6SXNzdWUyMDcyMjY1NzA=", "number": 597, "title": "Improve successful JSON login response format", "user": {"login": "imaia", "id": 14771411, "node_id": "MDQ6VXNlcjE0NzcxNDEx", "avatar_url": "https://avatars1.githubusercontent.com/u/14771411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imaia", "html_url": "https://github.com/imaia", "followers_url": "https://api.github.com/users/imaia/followers", "following_url": "https://api.github.com/users/imaia/following{/other_user}", "gists_url": "https://api.github.com/users/imaia/gists{/gist_id}", "starred_url": "https://api.github.com/users/imaia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imaia/subscriptions", "organizations_url": "https://api.github.com/users/imaia/orgs", "repos_url": "https://api.github.com/users/imaia/repos", "events_url": "https://api.github.com/users/imaia/events{/privacy}", "received_events_url": "https://api.github.com/users/imaia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-13T14:01:24Z", "updated_at": "2017-02-13T16:00:07Z", "closed_at": "2017-02-13T16:00:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Right now, a successful json login resturns something like {meta: {status: int}, response: {user: {id: int, authentication_token: str}}}\r\n\r\nWhy not make is simpler, like this: {id: int, authentication_token: str}", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/596", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/596/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/596/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/596/events", "html_url": "https://github.com/mattupstate/flask-security/issues/596", "id": 206920434, "node_id": "MDU6SXNzdWUyMDY5MjA0MzQ=", "number": 596, "title": "Incorrect link for documentation", "user": {"login": "dneyirp", "id": 13450224, "node_id": "MDQ6VXNlcjEzNDUwMjI0", "avatar_url": "https://avatars1.githubusercontent.com/u/13450224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dneyirp", "html_url": "https://github.com/dneyirp", "followers_url": "https://api.github.com/users/dneyirp/followers", "following_url": "https://api.github.com/users/dneyirp/following{/other_user}", "gists_url": "https://api.github.com/users/dneyirp/gists{/gist_id}", "starred_url": "https://api.github.com/users/dneyirp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dneyirp/subscriptions", "organizations_url": "https://api.github.com/users/dneyirp/orgs", "repos_url": "https://api.github.com/users/dneyirp/repos", "events_url": "https://api.github.com/users/dneyirp/events{/privacy}", "received_events_url": "https://api.github.com/users/dneyirp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-02-10T22:15:47Z", "updated_at": "2017-05-19T14:29:31Z", "closed_at": "2017-04-27T07:42:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. The current README file and links at https://pypi.python.org/pypi/Flask-Security point to old documentation. This can be easily rectified by simply changing the documentation links to http://flask-security.readthedocs.io/en/latest/.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/585", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/585/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/585/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/585/events", "html_url": "https://github.com/mattupstate/flask-security/issues/585", "id": 204876998, "node_id": "MDU6SXNzdWUyMDQ4NzY5OTg=", "number": 585, "title": "Best way to help?", "user": {"login": "imaia", "id": 14771411, "node_id": "MDQ6VXNlcjE0NzcxNDEx", "avatar_url": "https://avatars1.githubusercontent.com/u/14771411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imaia", "html_url": "https://github.com/imaia", "followers_url": "https://api.github.com/users/imaia/followers", "following_url": "https://api.github.com/users/imaia/following{/other_user}", "gists_url": "https://api.github.com/users/imaia/gists{/gist_id}", "starred_url": "https://api.github.com/users/imaia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imaia/subscriptions", "organizations_url": "https://api.github.com/users/imaia/orgs", "repos_url": "https://api.github.com/users/imaia/repos", "events_url": "https://api.github.com/users/imaia/events{/privacy}", "received_events_url": "https://api.github.com/users/imaia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-02T13:42:18Z", "updated_at": "2017-04-20T08:24:15Z", "closed_at": "2017-04-20T08:24:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Which is the best way to help flask-security? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/584", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/584/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/584/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/584/events", "html_url": "https://github.com/mattupstate/flask-security/issues/584", "id": 204755478, "node_id": "MDU6SXNzdWUyMDQ3NTU0Nzg=", "number": 584, "title": "malformed pbkdf2_sha512 hash (checksum must be exactly 64 bytes)", "user": {"login": "christopherthomson", "id": 1092387, "node_id": "MDQ6VXNlcjEwOTIzODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1092387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/christopherthomson", "html_url": "https://github.com/christopherthomson", "followers_url": "https://api.github.com/users/christopherthomson/followers", "following_url": "https://api.github.com/users/christopherthomson/following{/other_user}", "gists_url": "https://api.github.com/users/christopherthomson/gists{/gist_id}", "starred_url": "https://api.github.com/users/christopherthomson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christopherthomson/subscriptions", "organizations_url": "https://api.github.com/users/christopherthomson/orgs", "repos_url": "https://api.github.com/users/christopherthomson/repos", "events_url": "https://api.github.com/users/christopherthomson/events{/privacy}", "received_events_url": "https://api.github.com/users/christopherthomson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-02T01:14:05Z", "updated_at": "2017-02-02T23:13:42Z", "closed_at": "2017-02-02T23:13:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using Flask-Security 1.7.5 with Flask-Admin 1.4.2 in development, using the example app [here](https://github.com/flask-admin/flask-admin/tree/master/examples/auth). The example app works for me, but when applying the same code to my own project I get this [error.txt](https://github.com/mattupstate/flask-security/files/746551/error.txt)\r\n\r\nHere is my User table:\r\n\r\nCREATE TABLE `user` (\r\n  `id` INTEGER NOT NULL AUTO_INCREMENT,\r\n  `name` VARCHAR(120) NULL DEFAULT NULL,\r\n  `email` VARCHAR(120) UNIQUE DEFAULT NULL,\r\n  `password` VARCHAR(120) NULL DEFAULT NULL,\r\n  `active` BIT NULL DEFAULT 0,\r\n  `confirmed_at` DATETIME NULL DEFAULT NULL,\r\n  PRIMARY KEY (`id`)\r\n);\r\n\r\nI then\r\n1. Register a new user via /admin (success)\r\n2. Logout \r\n3. Attempt login new user again\r\n\r\nI get the 'malformed pbkdf2_sha512 hash' error. The hashed password string being created is 120 chars long, and my db field is varchar(120). Any help would be great! ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/582", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/582/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/582/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/582/events", "html_url": "https://github.com/mattupstate/flask-security/issues/582", "id": 202760907, "node_id": "MDU6SXNzdWUyMDI3NjA5MDc=", "number": 582, "title": "send_reset_password_instructions() created invalid token when user ID is None", "user": {"login": "sybrenstuvel", "id": 1092128, "node_id": "MDQ6VXNlcjEwOTIxMjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1092128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sybrenstuvel", "html_url": "https://github.com/sybrenstuvel", "followers_url": "https://api.github.com/users/sybrenstuvel/followers", "following_url": "https://api.github.com/users/sybrenstuvel/following{/other_user}", "gists_url": "https://api.github.com/users/sybrenstuvel/gists{/gist_id}", "starred_url": "https://api.github.com/users/sybrenstuvel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sybrenstuvel/subscriptions", "organizations_url": "https://api.github.com/users/sybrenstuvel/orgs", "repos_url": "https://api.github.com/users/sybrenstuvel/repos", "events_url": "https://api.github.com/users/sybrenstuvel/events{/privacy}", "received_events_url": "https://api.github.com/users/sybrenstuvel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-01-24T09:07:27Z", "updated_at": "2017-04-27T07:45:36Z", "closed_at": "2017-04-27T07:45:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "We've run into an issue where we have an admin interface to create new users. This interface has an `on_model_change(user)` callback, which is called when a new user is created. However, unbeknown to us, that user doesn't have a database ID set yet. As a result, we call `flask_security.recoverable.send_reset_password_instructions(user)` with`user.id = None`. When using this token to reset their password, the user causes the following exception:\r\n\r\n```\r\n2017-01-24 10:00:34,252     INFO werkzeug 127.0.0.1 - - [24/Jan/2017 10:00:34] \"GET /reset/WyJOb25lIiwiZjdiMzhiZmJkZWU3Yjg1NDc5ZWFlNDEzMDkzZmM5YjYiXQ.C2ioAw.9HIuMSEvLDxTyu4Hutoc-gbd6ew HTTP/1.1\" 500 -\r\nTraceback (most recent call last):\r\n  File \"/home/sybren/.virtualenvs/blender-id/lib/python2.7/site-packages/flask/app.py\", line 1836, in __call__\r\n    return self.wsgi_app(environ, start_response)\r\n  File \"/home/sybren/.virtualenvs/blender-id/lib/python2.7/site-packages/flask/app.py\", line 1820, in wsgi_app\r\n    response = self.make_response(self.handle_exception(e))\r\n  File \"/home/sybren/.virtualenvs/blender-id/lib/python2.7/site-packages/flask/app.py\", line 1403, in handle_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/home/sybren/.virtualenvs/blender-id/lib/python2.7/site-packages/flask/app.py\", line 1817, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/home/sybren/.virtualenvs/blender-id/lib/python2.7/site-packages/flask/app.py\", line 1477, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/home/sybren/.virtualenvs/blender-id/lib/python2.7/site-packages/flask/app.py\", line 1381, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/home/sybren/.virtualenvs/blender-id/lib/python2.7/site-packages/flask/app.py\", line 1475, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/home/sybren/.virtualenvs/blender-id/lib/python2.7/site-packages/flask/app.py\", line 1461, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/home/sybren/.virtualenvs/blender-id/lib/python2.7/site-packages/flask_security/decorators.py\", line 225, in wrapper\r\n    return f(*args, **kwargs)\r\n  File \"/home/sybren/.virtualenvs/blender-id/lib/python2.7/site-packages/flask_security/views.py\", line 269, in reset_password\r\n    expired, invalid, user = reset_password_token_status(token)\r\n  File \"/home/sybren/.virtualenvs/blender-id/lib/python2.7/site-packages/flask_security/recoverable.py\", line 73, in reset_password_token_status\r\n    if user.password:\r\nAttributeError: 'NoneType' object has no attribute 'password'\r\n```\r\nTo me it seems like a bug that an unusable token is generated. It is especially nasty because the admin who creates the user doesn't see that there is anything wrong.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/581", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/581/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/581/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/581/events", "html_url": "https://github.com/mattupstate/flask-security/issues/581", "id": 200860064, "node_id": "MDU6SXNzdWUyMDA4NjAwNjQ=", "number": 581, "title": "sqlalchemy.exc.IntegrityError", "user": {"login": "tlaskyd", "id": 22202203, "node_id": "MDQ6VXNlcjIyMjAyMjAz", "avatar_url": "https://avatars3.githubusercontent.com/u/22202203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tlaskyd", "html_url": "https://github.com/tlaskyd", "followers_url": "https://api.github.com/users/tlaskyd/followers", "following_url": "https://api.github.com/users/tlaskyd/following{/other_user}", "gists_url": "https://api.github.com/users/tlaskyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tlaskyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tlaskyd/subscriptions", "organizations_url": "https://api.github.com/users/tlaskyd/orgs", "repos_url": "https://api.github.com/users/tlaskyd/repos", "events_url": "https://api.github.com/users/tlaskyd/events{/privacy}", "received_events_url": "https://api.github.com/users/tlaskyd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 932611, "node_id": "MDU6TGFiZWw5MzI2MTE=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-01-15T10:10:18Z", "updated_at": "2017-06-23T08:45:48Z", "closed_at": "2017-06-14T11:02:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Register err\r\nWhen I try to register the email that is already registered, there is `sqlalchemy.exc.IntegrityError`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/580", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/580/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/580/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/580/events", "html_url": "https://github.com/mattupstate/flask-security/issues/580", "id": 199966086, "node_id": "MDU6SXNzdWUxOTk5NjYwODY=", "number": 580, "title": "Customizing register view switches which form class is used unexpectedly", "user": {"login": "matthewliu", "id": 4960567, "node_id": "MDQ6VXNlcjQ5NjA1Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/4960567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewliu", "html_url": "https://github.com/matthewliu", "followers_url": "https://api.github.com/users/matthewliu/followers", "following_url": "https://api.github.com/users/matthewliu/following{/other_user}", "gists_url": "https://api.github.com/users/matthewliu/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewliu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewliu/subscriptions", "organizations_url": "https://api.github.com/users/matthewliu/orgs", "repos_url": "https://api.github.com/users/matthewliu/repos", "events_url": "https://api.github.com/users/matthewliu/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewliu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 932608, "node_id": "MDU6TGFiZWw5MzI2MDg=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-10T23:47:13Z", "updated_at": "2017-06-14T10:56:39Z", "closed_at": "2017-06-14T10:56:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "1. I've created my own ExtendedRegisterForm class.\r\n\r\nclass ExtendedRegisterForm(RegisterForm):\r\n\tfirst_name = StringField('First Name', [validators.required()])\r\n\tlast_name = StringField('Last Name', [validators.required()])\r\n\tphone_number = StringField('Phone Number', [validators.required()])\r\n\r\n2. I am passing this into the Security object as such:\r\n\r\nsecurity = Security(app, user_datastore, register_form=ExtendedRegisterForm)\r\n\r\n3. Concurrently, I have SECURITY_CONFIRMABLE set to True as I want to do email confirmation AND avoid having the password confirm field. I want to minimize unnecessary UI fields as you mention with this flag.\r\n\r\nSECURITY_CONFIRMABLE = True\r\n\r\n4. Finally, I've added new template variables to show my form inputs.\r\n\r\n{{ render_field_with_errors(register_user_form.first_name, class_=\"form-control input-lg\", placeholder=\"First Name\") }}\r\n{{ render_field_with_errors(register_user_form.last_name, class_=\"form-control input-lg\", placeholder=\"Last Name\") }}\r\n{{ render_field_with_errors(register_user_form.phone_number, class_=\"form-control input-lg\", placeholder=\"Phone Number\") }}\r\n\r\n5. However, now when I render my template, I get an exception stating that the ConfirmRegisterForm does not have any of these fields. It appears that Flask-Security is now choosing to render the ConfirmRegisterForm instead of the RegisterForm override. If I change my Security initializer, the form renders, but of course has the extra confirm password field.\r\n\r\nsecurity = Security(app, user_datastore, register_form=ExtendedRegisterForm, confirm_register_form=ExtendedRegisterForm)\r\n\r\nThe expected behavior would be to show the ExtendedRegisterForm in place of RegisterForm instead of ConfirmRegisterForm, and for the template to avoid having that password confirm field.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/579", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/579/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/579/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/579/events", "html_url": "https://github.com/mattupstate/flask-security/issues/579", "id": 199732746, "node_id": "MDU6SXNzdWUxOTk3MzI3NDY=", "number": 579, "title": "can't work with gunicorn with multiple works?", "user": {"login": "stamaimer", "id": 3755338, "node_id": "MDQ6VXNlcjM3NTUzMzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3755338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stamaimer", "html_url": "https://github.com/stamaimer", "followers_url": "https://api.github.com/users/stamaimer/followers", "following_url": "https://api.github.com/users/stamaimer/following{/other_user}", "gists_url": "https://api.github.com/users/stamaimer/gists{/gist_id}", "starred_url": "https://api.github.com/users/stamaimer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stamaimer/subscriptions", "organizations_url": "https://api.github.com/users/stamaimer/orgs", "repos_url": "https://api.github.com/users/stamaimer/repos", "events_url": "https://api.github.com/users/stamaimer/events{/privacy}", "received_events_url": "https://api.github.com/users/stamaimer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 932612, "node_id": "MDU6TGFiZWw5MzI2MTI=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-01-10T04:55:04Z", "updated_at": "2017-06-14T12:12:05Z", "closed_at": "2017-06-14T12:11:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm writing a website with Flask. I use `Flask-Secuirty` to do authentication. I use `nginx + gunicorn` to deploy it. And I use `gunicorn -w worker_number -k gevent run:app -p app.pid -b 127.0.0.1:5000` to start gunicorn. If the `worker_number` is `1`, everything is ok. If the `worker_number` is greater than `1` like `3`, I can't login in with `Flask-Security`. The output of server said the post request of login is 200. But the server redirect me to login page again.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/578", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/578/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/578/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/578/events", "html_url": "https://github.com/mattupstate/flask-security/issues/578", "id": 199483052, "node_id": "MDU6SXNzdWUxOTk0ODMwNTI=", "number": 578, "title": "Upgrade PassLib for better hashes", "user": {"login": "BitLooter", "id": 1131883, "node_id": "MDQ6VXNlcjExMzE4ODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1131883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BitLooter", "html_url": "https://github.com/BitLooter", "followers_url": "https://api.github.com/users/BitLooter/followers", "following_url": "https://api.github.com/users/BitLooter/following{/other_user}", "gists_url": "https://api.github.com/users/BitLooter/gists{/gist_id}", "starred_url": "https://api.github.com/users/BitLooter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BitLooter/subscriptions", "organizations_url": "https://api.github.com/users/BitLooter/orgs", "repos_url": "https://api.github.com/users/BitLooter/repos", "events_url": "https://api.github.com/users/BitLooter/events{/privacy}", "received_events_url": "https://api.github.com/users/BitLooter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-09T06:04:20Z", "updated_at": "2017-04-27T07:47:06Z", "closed_at": "2017-04-27T07:47:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "PassLib released 1.7.0 in November, bringing some new features - notably, support for argon2 and scrypt hashes. Argon2 especially, as it's a new algorithm built to be resistant to GPU-based attacks and was designed to replace bcrypt, scrypt, etc. Updating Flask-Security to use PassLib 1.7.0 would allow it to use these algorithms.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/574", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/574/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/574/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/574/events", "html_url": "https://github.com/mattupstate/flask-security/issues/574", "id": 198255731, "node_id": "MDU6SXNzdWUxOTgyNTU3MzE=", "number": 574, "title": "No reference table error when using the quickstart code ", "user": {"login": "scraggelz", "id": 9123904, "node_id": "MDQ6VXNlcjkxMjM5MDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/9123904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scraggelz", "html_url": "https://github.com/scraggelz", "followers_url": "https://api.github.com/users/scraggelz/followers", "following_url": "https://api.github.com/users/scraggelz/following{/other_user}", "gists_url": "https://api.github.com/users/scraggelz/gists{/gist_id}", "starred_url": "https://api.github.com/users/scraggelz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scraggelz/subscriptions", "organizations_url": "https://api.github.com/users/scraggelz/orgs", "repos_url": "https://api.github.com/users/scraggelz/repos", "events_url": "https://api.github.com/users/scraggelz/events{/privacy}", "received_events_url": "https://api.github.com/users/scraggelz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-01T03:50:40Z", "updated_at": "2017-01-10T18:31:35Z", "closed_at": "2017-01-10T18:31:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, when trying to copy and paste the basic quickstart tutorial I get the following error: \r\n\"\r\nsqlalchemy.exc.NoReferencedTableError: Foreign key associated with column 'roles_users.user_id' could not find table 'users' with which to generate a foreign key to target column 'id'\r\n\"\r\nHowever adding `__tablename__= \"users\"` into the User class fixes the problem. \r\nAdding this to the quickstart tutorial would probably be helpful to a lot of new Flask users like myself. Unless it's just my machine complaining about this. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/573", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/573/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/573/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/573/events", "html_url": "https://github.com/mattupstate/flask-security/issues/573", "id": 198246178, "node_id": "MDU6SXNzdWUxOTgyNDYxNzg=", "number": 573, "title": "How to config the login view, form more? or write my own one?", "user": {"login": "tim-hub", "id": 2884320, "node_id": "MDQ6VXNlcjI4ODQzMjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2884320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tim-hub", "html_url": "https://github.com/tim-hub", "followers_url": "https://api.github.com/users/tim-hub/followers", "following_url": "https://api.github.com/users/tim-hub/following{/other_user}", "gists_url": "https://api.github.com/users/tim-hub/gists{/gist_id}", "starred_url": "https://api.github.com/users/tim-hub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tim-hub/subscriptions", "organizations_url": "https://api.github.com/users/tim-hub/orgs", "repos_url": "https://api.github.com/users/tim-hub/repos", "events_url": "https://api.github.com/users/tim-hub/events{/privacy}", "received_events_url": "https://api.github.com/users/tim-hub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-31T20:43:33Z", "updated_at": "2017-06-14T12:09:06Z", "closed_at": "2017-06-14T12:09:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I read this. https://pythonhosted.org/Flask-Security/customizing.html\r\n\r\nBut how can I config more?\r\n\r\nFor example, I want to add a validator for the password field, how can I do that?\r\n\r\nIf I want to have my own view, can I? how?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/570", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/570/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/570/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/570/events", "html_url": "https://github.com/mattupstate/flask-security/issues/570", "id": 195770165, "node_id": "MDU6SXNzdWUxOTU3NzAxNjU=", "number": 570, "title": "Breaking changes in Mongoengine", "user": {"login": "jirikuncar", "id": 189798, "node_id": "MDQ6VXNlcjE4OTc5OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/189798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jirikuncar", "html_url": "https://github.com/jirikuncar", "followers_url": "https://api.github.com/users/jirikuncar/followers", "following_url": "https://api.github.com/users/jirikuncar/following{/other_user}", "gists_url": "https://api.github.com/users/jirikuncar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jirikuncar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jirikuncar/subscriptions", "organizations_url": "https://api.github.com/users/jirikuncar/orgs", "repos_url": "https://api.github.com/users/jirikuncar/repos", "events_url": "https://api.github.com/users/jirikuncar/events{/privacy}", "received_events_url": "https://api.github.com/users/jirikuncar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-12-15T10:34:10Z", "updated_at": "2017-04-27T06:18:50Z", "closed_at": "2017-04-27T06:18:50Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "- [ ] drop Python 2.6 support\r\n- [ ] amend imports\r\n\r\nMore details on https://github.com/MongoEngine/mongoengine/releases/tag/v0.11.0\r\n\r\n(solved in https://github.com/inveniosoftware/flask-security-fork/pull/4)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/569", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/569/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/569/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/569/events", "html_url": "https://github.com/mattupstate/flask-security/issues/569", "id": 194148438, "node_id": "MDU6SXNzdWUxOTQxNDg0Mzg=", "number": 569, "title": "user registration is trying to send confirmation email even though its disabled", "user": {"login": "clovehitch", "id": 8883967, "node_id": "MDQ6VXNlcjg4ODM5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8883967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clovehitch", "html_url": "https://github.com/clovehitch", "followers_url": "https://api.github.com/users/clovehitch/followers", "following_url": "https://api.github.com/users/clovehitch/following{/other_user}", "gists_url": "https://api.github.com/users/clovehitch/gists{/gist_id}", "starred_url": "https://api.github.com/users/clovehitch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clovehitch/subscriptions", "organizations_url": "https://api.github.com/users/clovehitch/orgs", "repos_url": "https://api.github.com/users/clovehitch/repos", "events_url": "https://api.github.com/users/clovehitch/events{/privacy}", "received_events_url": "https://api.github.com/users/clovehitch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-07T19:42:58Z", "updated_at": "2017-06-14T11:01:39Z", "closed_at": "2017-06-14T11:01:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like flask is trying to still send a confirmation email even though I have the option disabled. Is there something else that could be causing this? The user is still created but an error page is shown.\r\n\r\nThe setting I have configured:\r\napp.config['SECURITY_REGISTERABLE'] = True\r\napp.config['SECURITY_CONFIRMABLE'] = False\r\n\r\nI have attached the error page.\r\n[error.txt](https://github.com/mattupstate/flask-security/files/637586/error.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/568", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/568/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/568/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/568/events", "html_url": "https://github.com/mattupstate/flask-security/issues/568", "id": 193024490, "node_id": "MDU6SXNzdWUxOTMwMjQ0OTA=", "number": 568, "title": "Kwargs not accepted at creation of Security object without both app and datastore", "user": {"login": "ianzimmerman", "id": 18133011, "node_id": "MDQ6VXNlcjE4MTMzMDEx", "avatar_url": "https://avatars3.githubusercontent.com/u/18133011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianzimmerman", "html_url": "https://github.com/ianzimmerman", "followers_url": "https://api.github.com/users/ianzimmerman/followers", "following_url": "https://api.github.com/users/ianzimmerman/following{/other_user}", "gists_url": "https://api.github.com/users/ianzimmerman/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianzimmerman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianzimmerman/subscriptions", "organizations_url": "https://api.github.com/users/ianzimmerman/orgs", "repos_url": "https://api.github.com/users/ianzimmerman/repos", "events_url": "https://api.github.com/users/ianzimmerman/events{/privacy}", "received_events_url": "https://api.github.com/users/ianzimmerman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-02T03:21:41Z", "updated_at": "2017-06-14T11:12:08Z", "closed_at": "2017-06-14T11:12:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to create the security object at security.py like so:\r\n\r\n    from flask_security import Security, SQLAlchemyUserDatastore\r\n    from flask_security.forms import RegisterForm, ConfirmRegisterForm\r\n    from .models import db, User, Role\r\n\r\n    user_datastore = SQLAlchemyUserDatastore(db, User, Role)\r\n\r\n    class ExtendedRegisterForm(RegisterForm):\r\n        username = StringField(*ext_reg)\r\n\r\n    ...\r\n\r\n    security = Security(datastore=user_datastore, register_form=ExtendedRegisterForm)\r\n\r\nThen in my create_app.py:\r\n   \r\n    app = Flask(__name__)\r\n    from .security import security\r\n    security.init_app(app)\r\n\r\nThe security instance does not get the extended reg form because it does not accept kwargs without the app AND the datastore\r\n\r\n    class Security(object):\r\n        \"\"\"The :class:`Security` class initializes the Flask-Security extension.\r\n        :param app: The application.\r\n        :param datastore: An instance of a user datastore.\r\n        \"\"\"\r\n        def __init__(self, app=None, datastore=None, **kwargs):\r\n            self.app = app\r\n            self.datastore = datastore\r\n\r\n            if app is not None and datastore is not None:\r\n                self._state = self.init_app(app, datastore, **kwargs)\r\n\r\n        def init_app(self, app, datastore=None, register_blueprint=True,\r\n                     login_form=None, confirm_register_form=None,\r\n                     register_form=None, forgot_password_form=None,\r\n                     reset_password_form=None, change_password_form=None,\r\n                     send_confirmation_form=None, passwordless_login_form=None,\r\n                     anonymous_user=None):\r\n\r\nSo then I have to import it to app factory and re-init the app with extended registration forms. \r\n\r\n    from ..security import security, user_datastore, \r\n        ExtendedConfirmRegisterForm, ExtendedRegisterForm\r\n    security.init_app(app,\r\n                      datastore=user_datastore,\r\n                      register_form=ExtendedRegisterForm,\r\n                      confirm_register_form=ExtendedConfirmRegisterForm\r\n                      )\r\n\r\nIs there a way to lazy load in the extended class forms?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/566", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/566/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/566/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/566/events", "html_url": "https://github.com/mattupstate/flask-security/issues/566", "id": 190354694, "node_id": "MDU6SXNzdWUxOTAzNTQ2OTQ=", "number": 566, "title": "TRACKABLE info is not stored when using login_user directly", "user": {"login": "avilaton", "id": 2209022, "node_id": "MDQ6VXNlcjIyMDkwMjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2209022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avilaton", "html_url": "https://github.com/avilaton", "followers_url": "https://api.github.com/users/avilaton/followers", "following_url": "https://api.github.com/users/avilaton/following{/other_user}", "gists_url": "https://api.github.com/users/avilaton/gists{/gist_id}", "starred_url": "https://api.github.com/users/avilaton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avilaton/subscriptions", "organizations_url": "https://api.github.com/users/avilaton/orgs", "repos_url": "https://api.github.com/users/avilaton/repos", "events_url": "https://api.github.com/users/avilaton/events{/privacy}", "received_events_url": "https://api.github.com/users/avilaton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 932612, "node_id": "MDU6TGFiZWw5MzI2MTI=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-11-18T16:00:38Z", "updated_at": "2017-06-06T09:20:35Z", "closed_at": "2017-06-06T08:16:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We use\r\n```\r\nfrom flask_security import login_user\r\n@app.route('/custom_login', methods=['POST'])\r\ndef custom_login():\r\n    login_user(some_user)\r\n    return redirect(...)\r\n```\r\nand noticed that information regarding current_login, last login, etc is not stored into the DB (sqlalchemy for us) unless we add a `db.session.commit()` after the `login_user(...)` call. \r\n\r\nAfter reading a bit the code, it looks like it could be fixed by adding a call to `after_this_request(db.session.commit)` in the `flask_securtity.utils.login_user` method. Not sure where we should add a unit test for this. Please if @mattupstate can hint us a bit on where is a good place to write the test for it, it would be great help to submit a PR and save you some work.\r\n\r\nThanks a lot.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/564", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/564/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/564/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/564/events", "html_url": "https://github.com/mattupstate/flask-security/issues/564", "id": 189138349, "node_id": "MDU6SXNzdWUxODkxMzgzNDk=", "number": 564, "title": "[Feature Request] Please provide flask-social login", "user": {"login": "lohriialo", "id": 4565035, "node_id": "MDQ6VXNlcjQ1NjUwMzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4565035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lohriialo", "html_url": "https://github.com/lohriialo", "followers_url": "https://api.github.com/users/lohriialo/followers", "following_url": "https://api.github.com/users/lohriialo/following{/other_user}", "gists_url": "https://api.github.com/users/lohriialo/gists{/gist_id}", "starred_url": "https://api.github.com/users/lohriialo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lohriialo/subscriptions", "organizations_url": "https://api.github.com/users/lohriialo/orgs", "repos_url": "https://api.github.com/users/lohriialo/repos", "events_url": "https://api.github.com/users/lohriialo/events{/privacy}", "received_events_url": "https://api.github.com/users/lohriialo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-14T15:17:42Z", "updated_at": "2017-04-20T08:37:46Z", "closed_at": "2017-04-20T08:37:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "_**Wondering when will flask-social be part of flask-security?**_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/563", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/563/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/563/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/563/events", "html_url": "https://github.com/mattupstate/flask-security/issues/563", "id": 188321873, "node_id": "MDU6SXNzdWUxODgzMjE4NzM=", "number": 563, "title": "How to merge login form and register form into the same form?", "user": {"login": "velerodro", "id": 23364809, "node_id": "MDQ6VXNlcjIzMzY0ODA5", "avatar_url": "https://avatars3.githubusercontent.com/u/23364809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/velerodro", "html_url": "https://github.com/velerodro", "followers_url": "https://api.github.com/users/velerodro/followers", "following_url": "https://api.github.com/users/velerodro/following{/other_user}", "gists_url": "https://api.github.com/users/velerodro/gists{/gist_id}", "starred_url": "https://api.github.com/users/velerodro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/velerodro/subscriptions", "organizations_url": "https://api.github.com/users/velerodro/orgs", "repos_url": "https://api.github.com/users/velerodro/repos", "events_url": "https://api.github.com/users/velerodro/events{/privacy}", "received_events_url": "https://api.github.com/users/velerodro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-11-09T18:45:46Z", "updated_at": "2017-06-14T11:01:14Z", "closed_at": "2017-06-14T11:01:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to have the login form and register form into one form. There is boolean \"new_user\", if it is True, I want it to register the new user, otherwise I want it to log the user in.\r\n\r\nI have tried to do this by inheriting the existing forms instead of making a new one, but it does not work. What I have tried is the following:\r\n\r\n```python\r\nclass FrontpageForm(LoginForm, RegisterForm):\r\n  attribute = StringField('attribute , validators=[DataRequired()])\r\n  new_user = BooleanField('new_user', default=True)\r\n\r\n  def validate(self):\r\n    if self.new_user.data:\r\n      if not RegisterForm.validate(self):\r\n        return False\r\n    else:\r\n      if not LoginForm.validate(self):\r\n        return False\r\n    return True\r\n```\r\n\r\nThis code does not work (users are not logged in neither registered), but it does not raise any errors. I do not even know how to debbug this. Any help would be very much appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/562", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/562/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/562/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/562/events", "html_url": "https://github.com/mattupstate/flask-security/issues/562", "id": 188175589, "node_id": "MDU6SXNzdWUxODgxNzU1ODk=", "number": 562, "title": "Send confirmation mail on register user in flask_security", "user": {"login": "kartikdanidhariya", "id": 9051467, "node_id": "MDQ6VXNlcjkwNTE0Njc=", "avatar_url": "https://avatars1.githubusercontent.com/u/9051467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kartikdanidhariya", "html_url": "https://github.com/kartikdanidhariya", "followers_url": "https://api.github.com/users/kartikdanidhariya/followers", "following_url": "https://api.github.com/users/kartikdanidhariya/following{/other_user}", "gists_url": "https://api.github.com/users/kartikdanidhariya/gists{/gist_id}", "starred_url": "https://api.github.com/users/kartikdanidhariya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kartikdanidhariya/subscriptions", "organizations_url": "https://api.github.com/users/kartikdanidhariya/orgs", "repos_url": "https://api.github.com/users/kartikdanidhariya/repos", "events_url": "https://api.github.com/users/kartikdanidhariya/events{/privacy}", "received_events_url": "https://api.github.com/users/kartikdanidhariya/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 932611, "node_id": "MDU6TGFiZWw5MzI2MTE=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-09T06:29:07Z", "updated_at": "2017-06-14T14:00:29Z", "closed_at": "2017-06-14T14:00:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi,\r\ni used flask_security in my flask project\r\nwhen i register user it not send any confirmation mail to user\r\ni want to send that mail whe n register is done and user can confirm registration from that link\r\nhow can i do that in flask-security.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/561", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/561/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/561/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/561/events", "html_url": "https://github.com/mattupstate/flask-security/issues/561", "id": 188171325, "node_id": "MDU6SXNzdWUxODgxNzEzMjU=", "number": 561, "title": "Redirect Issue in @login_required decorator in flask_security", "user": {"login": "kartikdanidhariya", "id": 9051467, "node_id": "MDQ6VXNlcjkwNTE0Njc=", "avatar_url": "https://avatars1.githubusercontent.com/u/9051467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kartikdanidhariya", "html_url": "https://github.com/kartikdanidhariya", "followers_url": "https://api.github.com/users/kartikdanidhariya/followers", "following_url": "https://api.github.com/users/kartikdanidhariya/following{/other_user}", "gists_url": "https://api.github.com/users/kartikdanidhariya/gists{/gist_id}", "starred_url": "https://api.github.com/users/kartikdanidhariya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kartikdanidhariya/subscriptions", "organizations_url": "https://api.github.com/users/kartikdanidhariya/orgs", "repos_url": "https://api.github.com/users/kartikdanidhariya/repos", "events_url": "https://api.github.com/users/kartikdanidhariya/events{/privacy}", "received_events_url": "https://api.github.com/users/kartikdanidhariya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-11-09T05:47:34Z", "updated_at": "2017-06-06T12:45:59Z", "closed_at": "2017-06-06T12:45:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi i am using flask_security in my flask project \r\ni make successfully login using login_user(user) method \r\ni check it return true \r\nbut after that it redirect to login page again\r\nhow can i solve this issue", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/560", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/560/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/560/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/560/events", "html_url": "https://github.com/mattupstate/flask-security/issues/560", "id": 186558341, "node_id": "MDU6SXNzdWUxODY1NTgzNDE=", "number": 560, "title": "Add token timeout after inactivity ", "user": {"login": "cydan33", "id": 23193852, "node_id": "MDQ6VXNlcjIzMTkzODUy", "avatar_url": "https://avatars0.githubusercontent.com/u/23193852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cydan33", "html_url": "https://github.com/cydan33", "followers_url": "https://api.github.com/users/cydan33/followers", "following_url": "https://api.github.com/users/cydan33/following{/other_user}", "gists_url": "https://api.github.com/users/cydan33/gists{/gist_id}", "starred_url": "https://api.github.com/users/cydan33/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cydan33/subscriptions", "organizations_url": "https://api.github.com/users/cydan33/orgs", "repos_url": "https://api.github.com/users/cydan33/repos", "events_url": "https://api.github.com/users/cydan33/events{/privacy}", "received_events_url": "https://api.github.com/users/cydan33/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-01T15:08:53Z", "updated_at": "2017-06-14T11:11:37Z", "closed_at": "2017-06-14T11:11:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be a great feature if Flask-Security allowed to specify a specific time for token timeout after x minutes of inactivity (just like the SECURITY_TOKEN_MAX_AGE configuration)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/559", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/559/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/559/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/559/events", "html_url": "https://github.com/mattupstate/flask-security/issues/559", "id": 185908691, "node_id": "MDU6SXNzdWUxODU5MDg2OTE=", "number": 559, "title": "Integration and release processes.", "user": {"login": "jirikuncar", "id": 189798, "node_id": "MDQ6VXNlcjE4OTc5OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/189798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jirikuncar", "html_url": "https://github.com/jirikuncar", "followers_url": "https://api.github.com/users/jirikuncar/followers", "following_url": "https://api.github.com/users/jirikuncar/following{/other_user}", "gists_url": "https://api.github.com/users/jirikuncar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jirikuncar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jirikuncar/subscriptions", "organizations_url": "https://api.github.com/users/jirikuncar/orgs", "repos_url": "https://api.github.com/users/jirikuncar/repos", "events_url": "https://api.github.com/users/jirikuncar/events{/privacy}", "received_events_url": "https://api.github.com/users/jirikuncar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 31, "created_at": "2016-10-28T12:15:20Z", "updated_at": "2017-06-22T15:48:10Z", "closed_at": "2017-04-27T06:18:52Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Dear @mattupstate and @jonafato:\n\nIn the light of recent Flask-Login release, I would like to ask you about plans for this package. There are many useful PRs that deserve to be merged (#494 #502 #519 #526 #528 #537 #538 #542 #544 #549 and more). Some of them are over a year old without any comment from maintainers.\n\nIf there is an interest I would offer my help with maintaining this package. Until the reply I am going to manage our [fork](https://github.com/inveniosoftware/flask-security-fork) so we can take benefits of the latest comunity work in both Flask-Login and Flask-Security packages.\n\nKind regards,\nJiri\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/557", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/557/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/557/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/557/events", "html_url": "https://github.com/mattupstate/flask-security/issues/557", "id": 185543303, "node_id": "MDU6SXNzdWUxODU1NDMzMDM=", "number": 557, "title": "token_loader method of Flask-Login's LoginManager object has been removed", "user": {"login": "PierreRochard", "id": 6299681, "node_id": "MDQ6VXNlcjYyOTk2ODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/6299681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PierreRochard", "html_url": "https://github.com/PierreRochard", "followers_url": "https://api.github.com/users/PierreRochard/followers", "following_url": "https://api.github.com/users/PierreRochard/following{/other_user}", "gists_url": "https://api.github.com/users/PierreRochard/gists{/gist_id}", "starred_url": "https://api.github.com/users/PierreRochard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PierreRochard/subscriptions", "organizations_url": "https://api.github.com/users/PierreRochard/orgs", "repos_url": "https://api.github.com/users/PierreRochard/repos", "events_url": "https://api.github.com/users/PierreRochard/events{/privacy}", "received_events_url": "https://api.github.com/users/PierreRochard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-10-27T00:16:25Z", "updated_at": "2017-04-27T06:18:49Z", "closed_at": "2017-04-27T06:18:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "The token_loader method of Flask-Login's LoginManager object has been removed, predictably causing a `AttributeError: 'LoginManager' object has no attribute 'token_loader'` error.\n\nThe method is used here: https://github.com/mattupstate/flask-security/blob/9e5865d9735b0b292360f63588ed4725c376757e/flask_security/core.py#L226\n\nThe method was removed by @alanhamlett in this commit: https://github.com/maxcountryman/flask-login/commit/f4ff19c33356999e96e3c5b4e80bc7788c85d7a3#diff-ef9a1bd470a8fcf8c774e8f67e4ccc40L205\n\nI'm not sure how to fix this issue so I wanted to share it. I searched the relevant keywords and did not find an existing issue. Please let me know if you have any questions.\n\nThank you, I've enjoyed using this package.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/556", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/556/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/556/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/556/events", "html_url": "https://github.com/mattupstate/flask-security/issues/556", "id": 185424463, "node_id": "MDU6SXNzdWUxODU0MjQ0NjM=", "number": 556, "title": "User clicking confirmation link after confirmation and expiration causes confirmation email to resend", "user": {"login": "michaelmahony", "id": 10393951, "node_id": "MDQ6VXNlcjEwMzkzOTUx", "avatar_url": "https://avatars0.githubusercontent.com/u/10393951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelmahony", "html_url": "https://github.com/michaelmahony", "followers_url": "https://api.github.com/users/michaelmahony/followers", "following_url": "https://api.github.com/users/michaelmahony/following{/other_user}", "gists_url": "https://api.github.com/users/michaelmahony/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelmahony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelmahony/subscriptions", "organizations_url": "https://api.github.com/users/michaelmahony/orgs", "repos_url": "https://api.github.com/users/michaelmahony/repos", "events_url": "https://api.github.com/users/michaelmahony/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelmahony/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 932607, "node_id": "MDU6TGFiZWw5MzI2MDc=", "url": "https://api.github.com/repos/mattupstate/flask-security/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jirikuncar", "id": 189798, "node_id": "MDQ6VXNlcjE4OTc5OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/189798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jirikuncar", "html_url": "https://github.com/jirikuncar", "followers_url": "https://api.github.com/users/jirikuncar/followers", "following_url": "https://api.github.com/users/jirikuncar/following{/other_user}", "gists_url": "https://api.github.com/users/jirikuncar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jirikuncar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jirikuncar/subscriptions", "organizations_url": "https://api.github.com/users/jirikuncar/orgs", "repos_url": "https://api.github.com/users/jirikuncar/repos", "events_url": "https://api.github.com/users/jirikuncar/events{/privacy}", "received_events_url": "https://api.github.com/users/jirikuncar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jirikuncar", "id": 189798, "node_id": "MDQ6VXNlcjE4OTc5OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/189798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jirikuncar", "html_url": "https://github.com/jirikuncar", "followers_url": "https://api.github.com/users/jirikuncar/followers", "following_url": "https://api.github.com/users/jirikuncar/following{/other_user}", "gists_url": "https://api.github.com/users/jirikuncar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jirikuncar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jirikuncar/subscriptions", "organizations_url": "https://api.github.com/users/jirikuncar/orgs", "repos_url": "https://api.github.com/users/jirikuncar/repos", "events_url": "https://api.github.com/users/jirikuncar/events{/privacy}", "received_events_url": "https://api.github.com/users/jirikuncar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2016-10-26T15:16:39Z", "updated_at": "2017-06-14T13:37:18Z", "closed_at": "2017-06-14T13:37:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "If the user follows the confirmation email after it has expired, a new confirmation email is sent even if the account has already been confirmed.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/555", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/555/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/555/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/555/events", "html_url": "https://github.com/mattupstate/flask-security/issues/555", "id": 185308090, "node_id": "MDU6SXNzdWUxODUzMDgwOTA=", "number": 555, "title": "Script fails on DeactivateUserCommand", "user": {"login": "Speedy1991", "id": 15920408, "node_id": "MDQ6VXNlcjE1OTIwNDA4", "avatar_url": "https://avatars3.githubusercontent.com/u/15920408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Speedy1991", "html_url": "https://github.com/Speedy1991", "followers_url": "https://api.github.com/users/Speedy1991/followers", "following_url": "https://api.github.com/users/Speedy1991/following{/other_user}", "gists_url": "https://api.github.com/users/Speedy1991/gists{/gist_id}", "starred_url": "https://api.github.com/users/Speedy1991/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Speedy1991/subscriptions", "organizations_url": "https://api.github.com/users/Speedy1991/orgs", "repos_url": "https://api.github.com/users/Speedy1991/repos", "events_url": "https://api.github.com/users/Speedy1991/events{/privacy}", "received_events_url": "https://api.github.com/users/Speedy1991/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-26T06:31:59Z", "updated_at": "2017-04-27T14:05:11Z", "closed_at": "2017-04-27T14:05:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "`manager = Manager(app)\nsecurity = Security(app=app, user_datastore=user_datastore)\nmanager.add_command('deactivate_user', DeactivateUserCommand())`\n\ncalling it:\n`python3 manage.py deactivate_user -u test@example.com`\n\nleads to\n\n```\n File \"/usr/local/lib/python3.4/dist-packages/flask_security/datastore.py\", line 136, in deactivate_user\n    if user.active:\nAttributeError: 'str' object has no attribute 'active'\n\n```\n\nActivateUserCommand with same issue\n\nget_user in datastore is **_never_** called, so the \"NotImplemented\" is never raised.\nThat was really confusing.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/554", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/554/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/554/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/554/events", "html_url": "https://github.com/mattupstate/flask-security/issues/554", "id": 184006852, "node_id": "MDU6SXNzdWUxODQwMDY4NTI=", "number": 554, "title": "Invalidate sessions on Reset Password", "user": {"login": "karpitsky", "id": 558554, "node_id": "MDQ6VXNlcjU1ODU1NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/558554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karpitsky", "html_url": "https://github.com/karpitsky", "followers_url": "https://api.github.com/users/karpitsky/followers", "following_url": "https://api.github.com/users/karpitsky/following{/other_user}", "gists_url": "https://api.github.com/users/karpitsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/karpitsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karpitsky/subscriptions", "organizations_url": "https://api.github.com/users/karpitsky/orgs", "repos_url": "https://api.github.com/users/karpitsky/repos", "events_url": "https://api.github.com/users/karpitsky/events{/privacy}", "received_events_url": "https://api.github.com/users/karpitsky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-19T16:09:36Z", "updated_at": "2017-04-27T14:06:14Z", "closed_at": "2017-04-27T14:06:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nIs it possible to invalidate all previous sessions on reset password with flask-security?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/552", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/552/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/552/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/552/events", "html_url": "https://github.com/mattupstate/flask-security/issues/552", "id": 183255618, "node_id": "MDU6SXNzdWUxODMyNTU2MTg=", "number": 552, "title": "FlaskWTFDeprecationWarning", "user": {"login": "swedishmike", "id": 8100625, "node_id": "MDQ6VXNlcjgxMDA2MjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8100625?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swedishmike", "html_url": "https://github.com/swedishmike", "followers_url": "https://api.github.com/users/swedishmike/followers", "following_url": "https://api.github.com/users/swedishmike/following{/other_user}", "gists_url": "https://api.github.com/users/swedishmike/gists{/gist_id}", "starred_url": "https://api.github.com/users/swedishmike/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swedishmike/subscriptions", "organizations_url": "https://api.github.com/users/swedishmike/orgs", "repos_url": "https://api.github.com/users/swedishmike/repos", "events_url": "https://api.github.com/users/swedishmike/events{/privacy}", "received_events_url": "https://api.github.com/users/swedishmike/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-10-16T08:27:25Z", "updated_at": "2017-06-12T07:14:28Z", "closed_at": "2017-06-12T07:14:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get the following error when running a Flask app at the moment:\n\n<- Cut ->\nsphuc.py:34: FlaskWTFDeprecationWarning: \"flask_wtf.Form\" has been renamed to \"FlaskForm\" and will be removed in 1.0.\n  form = NameForm()\n<- Cut ->\n\nHaving looked at the issue it seems that the warning is coming from/due to flask-security, more specifically this line in forms.py:\n\n`from flask_wtf import Form as BaseForm`\n\nIf I understand things correctly that should instead read:\n\n`from flask_wtf import FlaskForm as BaseForm`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/551", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/551/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/551/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/551/events", "html_url": "https://github.com/mattupstate/flask-security/issues/551", "id": 182158073, "node_id": "MDU6SXNzdWUxODIxNTgwNzM=", "number": 551, "title": "view.py still using request.json instead of request.get_json", "user": {"login": "merlineus", "id": 410710, "node_id": "MDQ6VXNlcjQxMDcxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/410710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/merlineus", "html_url": "https://github.com/merlineus", "followers_url": "https://api.github.com/users/merlineus/followers", "following_url": "https://api.github.com/users/merlineus/following{/other_user}", "gists_url": "https://api.github.com/users/merlineus/gists{/gist_id}", "starred_url": "https://api.github.com/users/merlineus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/merlineus/subscriptions", "organizations_url": "https://api.github.com/users/merlineus/orgs", "repos_url": "https://api.github.com/users/merlineus/repos", "events_url": "https://api.github.com/users/merlineus/events{/privacy}", "received_events_url": "https://api.github.com/users/merlineus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-10-11T02:22:26Z", "updated_at": "2017-06-12T15:37:07Z", "closed_at": "2017-06-12T15:37:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mattupstate/flask-security/issues/550", "repository_url": "https://api.github.com/repos/mattupstate/flask-security", "labels_url": "https://api.github.com/repos/mattupstate/flask-security/issues/550/labels{/name}", "comments_url": "https://api.github.com/repos/mattupstate/flask-security/issues/550/comments", "events_url": "https://api.github.com/repos/mattupstate/flask-security/issues/550/events", "html_url": "https://github.com/mattupstate/flask-security/issues/550", "id": 181895751, "node_id": "MDU6SXNzdWUxODE4OTU3NTE=", "number": 550, "title": "LICENSE file is missing on pypi ", "user": {"login": "tigerfoot", "id": 788864, "node_id": "MDQ6VXNlcjc4ODg2NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/788864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tigerfoot", "html_url": "https://github.com/tigerfoot", "followers_url": "https://api.github.com/users/tigerfoot/followers", "following_url": "https://api.github.com/users/tigerfoot/following{/other_user}", "gists_url": "https://api.github.com/users/tigerfoot/gists{/gist_id}", "starred_url": "https://api.github.com/users/tigerfoot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tigerfoot/subscriptions", "organizations_url": "https://api.github.com/users/tigerfoot/orgs", "repos_url": "https://api.github.com/users/tigerfoot/repos", "events_url": "https://api.github.com/users/tigerfoot/events{/privacy}", "received_events_url": "https://api.github.com/users/tigerfoot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-09T16:20:40Z", "updated_at": "2016-10-27T15:48:15Z", "closed_at": "2016-10-27T15:48:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "To help packaging, and especially legal review, it would be cool to have LICENSE file included in pypi targ.gz.\n", "performed_via_github_app": null, "score": 1.0}]}