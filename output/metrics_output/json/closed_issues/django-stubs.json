{"total_count": 119, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/435", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/435/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/435/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/435/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/435", "id": 668565228, "node_id": "MDU6SXNzdWU2Njg1NjUyMjg=", "number": 435, "title": "Incompatibility with mypy 0.78x", "user": {"login": "cihati", "id": 461998, "node_id": "MDQ6VXNlcjQ2MTk5OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/461998?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cihati", "html_url": "https://github.com/cihati", "followers_url": "https://api.github.com/users/cihati/followers", "following_url": "https://api.github.com/users/cihati/following{/other_user}", "gists_url": "https://api.github.com/users/cihati/gists{/gist_id}", "starred_url": "https://api.github.com/users/cihati/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cihati/subscriptions", "organizations_url": "https://api.github.com/users/cihati/orgs", "repos_url": "https://api.github.com/users/cihati/repos", "events_url": "https://api.github.com/users/cihati/events{/privacy}", "received_events_url": "https://api.github.com/users/cihati/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-30T09:59:15Z", "updated_at": "2020-07-30T10:00:11Z", "closed_at": "2020-07-30T10:00:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Bug report\r\n\r\n## What's wrong\r\nI recently upgrade to mypy 0.782 and I started seeing the following:\r\n\r\n```\r\n\t ERROR: django-stubs 1.5.0 has requirement mypy<0.780,>=0.770, but you'll have mypy 0.782 which is incompatible.\r\n```\r\n\r\n## System information\r\n\r\n- OS:\r\n- `python` version: 3.7.7\r\n- `django` version: 2.2.13\r\n- `mypy` version: 0.782\r\n- `django-stubs` version: 1.5.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/434", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/434/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/434/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/434/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/434", "id": 668559577, "node_id": "MDU6SXNzdWU2Njg1NTk1Nzc=", "number": 434, "title": "Incorrect type annotation for update_fields parameter to Model.save", "user": {"login": "ljodal", "id": 544451, "node_id": "MDQ6VXNlcjU0NDQ1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/544451?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljodal", "html_url": "https://github.com/ljodal", "followers_url": "https://api.github.com/users/ljodal/followers", "following_url": "https://api.github.com/users/ljodal/following{/other_user}", "gists_url": "https://api.github.com/users/ljodal/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljodal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljodal/subscriptions", "organizations_url": "https://api.github.com/users/ljodal/orgs", "repos_url": "https://api.github.com/users/ljodal/repos", "events_url": "https://api.github.com/users/ljodal/events{/privacy}", "received_events_url": "https://api.github.com/users/ljodal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-30T09:52:24Z", "updated_at": "2020-07-31T07:14:36Z", "closed_at": "2020-07-31T07:14:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Bug report\r\n\r\n## What's wrong\r\n\r\nHi there, it looks like the type annotation for the `update_fields` parameter to `Model.save` and `Model.save_base` is incorrect. It's currently typed as `Optional[Union[Sequence[str], str]]` which indicates that a single string can be sent as an argument, but it doesn't look like Django actually supports that. If `update_fields` is not `None`, Django calls `frozenset(update_fields)` which in the case of a single string being submitted will result in a set of one-character strings for each character in the initial string.\r\n\r\nThe relevant type annotations are here:\r\nhttps://github.com/typeddjango/django-stubs/blob/master/django-stubs/db/models/base.pyi#L41-L55\r\n\r\nThe relevant Django code is here:\r\nhttps://github.com/django/django/blob/stable/3.0.x/django/db/models/base.py#L717\r\n\r\n## How is that should be\r\n\r\nI think that the correct type for the `update_fields` parameter should be `Optional[Iterable[str]]`. As mentioned above Django passes the value to `frozenset()`, which accepts any `Iterable`, not just `Sequence`.\r\n\r\nI realize that this doesn't make much of a difference, as `str` is an `Iterable[str]` so you're allowed to make an invalid call either way, but I think it would be good to have a type annotation that doesn't mislead people into thinking they can pass a single `str` as `update_fields`.\r\n\r\nIs there a specific reason why it's typed like this or should I submit a PR to update the type annotation?\r\n\r\n## System information\r\n\r\n- OS: macOS 10.15.6\r\n- `python` version: `3.7.8`\r\n- `django` version: `3.0.8`\r\n- `mypy` version: `0.770`\r\n- `django-stubs` version: `1.5.0`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/430", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/430/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/430/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/430/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/430", "id": 663401704, "node_id": "MDU6SXNzdWU2NjM0MDE3MDQ=", "number": 430, "title": "Module 'django.conf.urls' has no attribute 're_path'mypy", "user": {"login": "jaredlockhart", "id": 119884, "node_id": "MDQ6VXNlcjExOTg4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/119884?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredlockhart", "html_url": "https://github.com/jaredlockhart", "followers_url": "https://api.github.com/users/jaredlockhart/followers", "following_url": "https://api.github.com/users/jaredlockhart/following{/other_user}", "gists_url": "https://api.github.com/users/jaredlockhart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredlockhart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredlockhart/subscriptions", "organizations_url": "https://api.github.com/users/jaredlockhart/orgs", "repos_url": "https://api.github.com/users/jaredlockhart/repos", "events_url": "https://api.github.com/users/jaredlockhart/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredlockhart/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-22T01:12:36Z", "updated_at": "2020-08-01T21:11:21Z", "closed_at": "2020-08-01T21:11:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Bug report\r\n\r\n<!--\r\nHi, thanks for submitting a bug. We appreciate that.\r\n\r\nBut, we will need some information about what's wrong to help you.\r\n-->\r\n\r\n## What's wrong\r\n\r\n`Module 'django.conf.urls' has no attribute 're_path' mypy(error)`\r\n\r\n\r\n## How is that should be\r\n\r\n`re_path` is defined here:\r\n\r\nhttps://github.com/django/django/blob/3.0.7/django/urls/__init__.py#L6\r\nhttps://github.com/django/django/blob/3.0.7/django/urls/conf.py#L77\r\n\r\nand appears here in the typestubs:\r\n\r\nhttps://github.com/typeddjango/django-stubs/blob/v1.5.0/django-stubs/urls/__init__.pyi#L17\r\nhttps://github.com/typeddjango/django-stubs/blob/v1.5.0/django-stubs/urls/conf.pyi#L8\r\n\r\nso it seems that mypy should not be complaining about it?\r\n\r\n## System information\r\n\r\n- OS: MacOS 10.15.3\r\n- `python` version: 3.8.2\r\n- `django` version: Django==3.0.7\r\n- `mypy` version: mypy==0.770\r\n- `django-stubs` version: django-stubs==1.5.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/423", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/423/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/423/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/423/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/423", "id": 655326306, "node_id": "MDU6SXNzdWU2NTUzMjYzMDY=", "number": 423, "title": "mypy crash when .mypy_cache is present", "user": {"login": "danifus", "id": 706362, "node_id": "MDQ6VXNlcjcwNjM2Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/706362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danifus", "html_url": "https://github.com/danifus", "followers_url": "https://api.github.com/users/danifus/followers", "following_url": "https://api.github.com/users/danifus/following{/other_user}", "gists_url": "https://api.github.com/users/danifus/gists{/gist_id}", "starred_url": "https://api.github.com/users/danifus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danifus/subscriptions", "organizations_url": "https://api.github.com/users/danifus/orgs", "repos_url": "https://api.github.com/users/danifus/repos", "events_url": "https://api.github.com/users/danifus/events{/privacy}", "received_events_url": "https://api.github.com/users/danifus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": {"login": "kszmigiel", "id": 16846111, "node_id": "MDQ6VXNlcjE2ODQ2MTEx", "avatar_url": "https://avatars2.githubusercontent.com/u/16846111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kszmigiel", "html_url": "https://github.com/kszmigiel", "followers_url": "https://api.github.com/users/kszmigiel/followers", "following_url": "https://api.github.com/users/kszmigiel/following{/other_user}", "gists_url": "https://api.github.com/users/kszmigiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/kszmigiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kszmigiel/subscriptions", "organizations_url": "https://api.github.com/users/kszmigiel/orgs", "repos_url": "https://api.github.com/users/kszmigiel/repos", "events_url": "https://api.github.com/users/kszmigiel/events{/privacy}", "received_events_url": "https://api.github.com/users/kszmigiel/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "kszmigiel", "id": 16846111, "node_id": "MDQ6VXNlcjE2ODQ2MTEx", "avatar_url": "https://avatars2.githubusercontent.com/u/16846111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kszmigiel", "html_url": "https://github.com/kszmigiel", "followers_url": "https://api.github.com/users/kszmigiel/followers", "following_url": "https://api.github.com/users/kszmigiel/following{/other_user}", "gists_url": "https://api.github.com/users/kszmigiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/kszmigiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kszmigiel/subscriptions", "organizations_url": "https://api.github.com/users/kszmigiel/orgs", "repos_url": "https://api.github.com/users/kszmigiel/repos", "events_url": "https://api.github.com/users/kszmigiel/events{/privacy}", "received_events_url": "https://api.github.com/users/kszmigiel/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-07-12T04:04:26Z", "updated_at": "2020-07-21T23:48:08Z", "closed_at": "2020-07-21T12:31:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## What's wrong\r\nUnder certain circumstances, a project with a typing error will produce correct mypy errors and hints when `.mypy_cache`  is not present but a stack trace if it is.\r\n\r\nHere is a simplified reproduction repo demonstrating this behaviour: https://github.com/danifus/djstubs-reproduce2\r\n\r\n- pip install `django` and `django-stubs`\r\n- `cd` to directory containing `mypy.ini`\r\n- run `mypy . --tb`\r\n- run `mypy . --tb`\r\n\r\nThe first `mypy . --tb` produces:\r\n\r\n```\r\nsecond_app/models.py:10: error: Incompatible types in assignment (expression has type \"str\", variable has type \"int\")\r\nFound 1 error in 1 file (checked 28 source files)\r\n```\r\n\r\nThe second run produces:\r\n\r\n```\r\n./test_app/models.py:6: error: INTERNAL ERROR -- Please try using mypy master on Github:\r\nhttps://mypy.rtfd.io/en/latest/common_issues.html#using-a-development-mypy-build\r\nPlease report a bug at https://github.com/python/mypy/issues\r\nversion: 0.770\r\nTraceback (most recent call last):\r\n  File \"mypy/semanal.py\", line 4679, in accept\r\n  File \"mypy/nodes.py\", line 939, in accept\r\n  File \"mypy/semanal.py\", line 1001, in visit_class_def\r\n  File \"mypy/semanal.py\", line 1078, in analyze_class\r\n  File \"mypy/semanal.py\", line 1087, in analyze_class_body_common\r\n  File \"mypy/semanal.py\", line 1147, in apply_class_plugin_hooks\r\n  File \"<venv>/mypytest/lib/python3.7/site-packages/mypy_django_plugin/main.py\", line 37, in transform_model_class\r\n    process_model_class(ctx, django_context)\r\n  File \"<venv>/mypytest/lib/python3.7/site-packages/mypy_django_plugin/transformers/models.py\", line 357, in process_model_class\r\n    initializer_cls(ctx, django_context).run()\r\n  File \"<venv>/mypytest/lib/python3.7/site-packages/mypy_django_plugin/transformers/models.py\", line 71, in run\r\n    self.run_with_model_cls(model_cls)\r\n  File \"<venv>/mypytest/lib/python3.7/site-packages/mypy_django_plugin/transformers/models.py\", line 231, in run_with_model_cls\r\n    base_manager_info=manager_info)\r\n  File \"<venv>/mypytest/lib/python3.7/site-packages/mypy_django_plugin/transformers/models.py\", line 186, in create_new_model_parametrized_manager\r\n    method_node=sym.node)\r\n  File \"<venv>/mypytest/lib/python3.7/site-packages/mypy_django_plugin/lib/helpers.py\", line 329, in copy_method_to_another_class\r\n    arguments, return_type = build_unannotated_method_args(method_node)\r\n  File \"<venv>/mypytest/lib/python3.7/site-packages/mypy_django_plugin/lib/helpers.py\", line 314, in build_unannotated_method_args\r\n    for argument in method_node.arguments[1:]:\r\nAttributeError: attribute 'arguments' of 'FuncItem' undefined\r\n./test_app/models.py:6: : note: use --pdb to drop into pdb\r\n```\r\n\r\nThis behaviour occurs if the error is in either `test_app/models.py` or `second_app/models.py` (it currently is only in `second_app/models.py`).\r\n\r\n## How is that should be\r\n\r\nEvery run should produce the same (initial) output\r\n\r\n## System information\r\n\r\n- OS: mac\r\n- `python` version: 3.7\r\n- `django` version: 3.0.8\r\n- `mypy` version: 0.770\r\n- `django-stubs` version: 1.5\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/420", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/420/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/420/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/420/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/420", "id": 653651638, "node_id": "MDU6SXNzdWU2NTM2NTE2Mzg=", "number": 420, "title": "Exceptions should be reported in a more clear way", "user": {"login": "snejus", "id": 16212750, "node_id": "MDQ6VXNlcjE2MjEyNzUw", "avatar_url": "https://avatars2.githubusercontent.com/u/16212750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snejus", "html_url": "https://github.com/snejus", "followers_url": "https://api.github.com/users/snejus/followers", "following_url": "https://api.github.com/users/snejus/following{/other_user}", "gists_url": "https://api.github.com/users/snejus/gists{/gist_id}", "starred_url": "https://api.github.com/users/snejus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snejus/subscriptions", "organizations_url": "https://api.github.com/users/snejus/orgs", "repos_url": "https://api.github.com/users/snejus/repos", "events_url": "https://api.github.com/users/snejus/events{/privacy}", "received_events_url": "https://api.github.com/users/snejus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 1008401223, "node_id": "MDU6TGFiZWwxMDA4NDAxMjIz", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-08T23:11:12Z", "updated_at": "2020-08-09T08:27:21Z", "closed_at": "2020-08-09T08:27:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Technical improvement suggestion\r\nNot exactly a bug something that should get some more attention: exception handling and reporting them to the user. I've been working on the configuration reading in `main.py` module and found that _handled exceptions_ end up being reported like this:\r\n```bash\r\n$ mypy -p django-stubs --config-file ./test-data/plugins.ini\r\nError constructing plugin instance of NewSemanalDjangoPlugin\r\n\r\ntest-data/plugins.ini:0: error: 'django_settings_module' is not set: no section [mypy.plugins.django-stubs]\r\nFound 1 error in 1 file (checked 477 source files)\r\n```\r\n![image](https://user-images.githubusercontent.com/16212750/86977324-466ae880-c174-11ea-9d46-5329753c9725.png)\r\n\r\nin comparison to\r\n\r\n**mypy error with a cmd line argument**\r\n```bash\r\n$ mypy -p django-stubs --config-file ./tst-data/plugins.ini\r\nusage: mypy [-h] [-v] [-V] [more options; see below]\r\n            [-m MODULE] [-p PACKAGE] [-c PROGRAM_TEXT] [files ...]\r\nmypy: error: Cannot find config file './tst/plugins.ini'\r\n```\r\nor the unhandled default\r\n \r\n```bash\r\nYou must install the lxml package before you can run mypy with `--html-report`.\r\nYou can do this with `python3 -m pip install lxml`.\r\nTraceback (most recent call last):\r\n  File \"/home/sarunas/.pyenv/versions/django-stubs-3.6.11/bin/mypy\", line 11, in <module>\r\n    sys.exit(console_entry())\r\n  File \"/home/sarunas/.pyenv/versions/3.6.11/envs/django-stubs-3.6.11/lib/python3.6/site-packages/mypy/__main__.py\", line 8, in console_entry\r\n    main(None, sys.stdout, sys.stderr)\r\n  File \"mypy/main.py\", line 89, in main\r\n  File \"mypy/build.py\", line 180, in build\r\n  File \"mypy/build.py\", line 217, in _build\r\n  File \"mypy/report.py\", line 58, in __init__\r\n  File \"mypy/report.py\", line 71, in add_report\r\nImportError\r\n```\r\n\r\nWhile the output is the most visually appealing, I find it very quite opaque and misleading. No source files have been checked by that point, so including the count isn't correct; it's also formatted like an issue, so my first reaction (which is basically muscle memory now) is to switch back to the source code and to have a look at the most recent change that has been made. It takes a lot to find that this is an internal problem rather than something that is related to my source files. \r\n\r\nI'd think that `mypy.Errors` may not be the best solution for this - even though it's a very convenient one. There are a couple of unneeded calls made until it reaches a more related `CompileError` - though it gets thrown plainly, without using its `report_internal_error` method - which seems like a good option that would include some extras for the user for debugging. Though I guess `mypy` may have to change into something more related to this project. Though I haven't seen any of them writing to `stderr` instead of `stdout`. Also, once the issues are raised, they return `None` instead of `NoReturn` - could this indicate that they are not meant to cut off the execution completely?\r\n\r\nThough, correct if I'm wrong (I probably am, since I haven't spent days on this :) ), but both of the above seem to be used _during the parsing / linting stage_. Would it be wrong to assume that reading the configuration should be treated as the setup stage? This way, it could report the error in the same format like `mypy` does - could also reuse their stuff. This shouldn't be a significant change I reckon. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/412", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/412/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/412/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/412/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/412", "id": 648878510, "node_id": "MDU6SXNzdWU2NDg4Nzg1MTA=", "number": 412, "title": "Partition type signature can be improved", "user": {"login": "Swamii", "id": 1793777, "node_id": "MDQ6VXNlcjE3OTM3Nzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1793777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Swamii", "html_url": "https://github.com/Swamii", "followers_url": "https://api.github.com/users/Swamii/followers", "following_url": "https://api.github.com/users/Swamii/following{/other_user}", "gists_url": "https://api.github.com/users/Swamii/gists{/gist_id}", "starred_url": "https://api.github.com/users/Swamii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Swamii/subscriptions", "organizations_url": "https://api.github.com/users/Swamii/orgs", "repos_url": "https://api.github.com/users/Swamii/repos", "events_url": "https://api.github.com/users/Swamii/events{/privacy}", "received_events_url": "https://api.github.com/users/Swamii/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-01T10:43:54Z", "updated_at": "2020-07-01T12:35:36Z", "closed_at": "2020-07-01T12:35:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Partition type signature can be improved\r\n\r\n<!--\r\nHi, thanks for submitting a bug. We appreciate that.\r\n\r\nBut, we will need some information about what's wrong to help you.\r\n-->\r\n\r\n## What's wrong\r\n\r\nIt narrows the use case to Model only, even though it works for all kinds of objects.\r\n\r\n<!--\r\nDescribe what is not working.\r\n\r\nPlease, attach a traceback.\r\nWe would also appreciate a failing test case.\r\nThat is EXTREMELY helpful!\r\n-->\r\n\r\n## How is that should be\r\n\r\nIt should take a `TypeVar` and return the same type, but divided by the callables return value.\r\n\r\n<!-- Describe how it should work. -->\r\n\r\n## System information\r\n\r\n- OS:\r\n- `python` version:\r\n- `django` version:\r\n- `mypy` version:\r\n- `django-stubs` version:\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/411", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/411/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/411/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/411/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/411", "id": 648472607, "node_id": "MDU6SXNzdWU2NDg0NzI2MDc=", "number": 411, "title": "Bump max mypy version", "user": {"login": "mschoettle", "id": 9328433, "node_id": "MDQ6VXNlcjkzMjg0MzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/9328433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mschoettle", "html_url": "https://github.com/mschoettle", "followers_url": "https://api.github.com/users/mschoettle/followers", "following_url": "https://api.github.com/users/mschoettle/following{/other_user}", "gists_url": "https://api.github.com/users/mschoettle/gists{/gist_id}", "starred_url": "https://api.github.com/users/mschoettle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mschoettle/subscriptions", "organizations_url": "https://api.github.com/users/mschoettle/orgs", "repos_url": "https://api.github.com/users/mschoettle/repos", "events_url": "https://api.github.com/users/mschoettle/events{/privacy}", "received_events_url": "https://api.github.com/users/mschoettle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-30T20:31:41Z", "updated_at": "2020-07-06T07:34:17Z", "closed_at": "2020-07-06T07:34:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just updated `mypy` to `0.782` and got the following error:\r\n\r\n> ERROR: django-stubs 1.5.0 has requirement mypy<0.780,>=0.770, but you'll have mypy 0.782 which is incompatible.\r\n\r\nSo far I have not encountered any issues despite this error (it still installed it regardless).\r\n\r\nCan the max version requirement be safely increased?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/407", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/407/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/407/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/407/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/407", "id": 642939551, "node_id": "MDU6SXNzdWU2NDI5Mzk1NTE=", "number": 407, "title": "Unable to subclass HttpRequest to override type of User", "user": {"login": "bullfest", "id": 4342153, "node_id": "MDQ6VXNlcjQzNDIxNTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/4342153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bullfest", "html_url": "https://github.com/bullfest", "followers_url": "https://api.github.com/users/bullfest/followers", "following_url": "https://api.github.com/users/bullfest/following{/other_user}", "gists_url": "https://api.github.com/users/bullfest/gists{/gist_id}", "starred_url": "https://api.github.com/users/bullfest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bullfest/subscriptions", "organizations_url": "https://api.github.com/users/bullfest/orgs", "repos_url": "https://api.github.com/users/bullfest/repos", "events_url": "https://api.github.com/users/bullfest/events{/privacy}", "received_events_url": "https://api.github.com/users/bullfest/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": {"login": "kszmigiel", "id": 16846111, "node_id": "MDQ6VXNlcjE2ODQ2MTEx", "avatar_url": "https://avatars2.githubusercontent.com/u/16846111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kszmigiel", "html_url": "https://github.com/kszmigiel", "followers_url": "https://api.github.com/users/kszmigiel/followers", "following_url": "https://api.github.com/users/kszmigiel/following{/other_user}", "gists_url": "https://api.github.com/users/kszmigiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/kszmigiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kszmigiel/subscriptions", "organizations_url": "https://api.github.com/users/kszmigiel/orgs", "repos_url": "https://api.github.com/users/kszmigiel/repos", "events_url": "https://api.github.com/users/kszmigiel/events{/privacy}", "received_events_url": "https://api.github.com/users/kszmigiel/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "kszmigiel", "id": 16846111, "node_id": "MDQ6VXNlcjE2ODQ2MTEx", "avatar_url": "https://avatars2.githubusercontent.com/u/16846111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kszmigiel", "html_url": "https://github.com/kszmigiel", "followers_url": "https://api.github.com/users/kszmigiel/followers", "following_url": "https://api.github.com/users/kszmigiel/following{/other_user}", "gists_url": "https://api.github.com/users/kszmigiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/kszmigiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kszmigiel/subscriptions", "organizations_url": "https://api.github.com/users/kszmigiel/orgs", "repos_url": "https://api.github.com/users/kszmigiel/repos", "events_url": "https://api.github.com/users/kszmigiel/events{/privacy}", "received_events_url": "https://api.github.com/users/kszmigiel/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2020-06-22T10:11:52Z", "updated_at": "2020-07-07T09:52:21Z", "closed_at": "2020-07-07T09:52:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'd like to create a `AuthenticatedHttpRequest` to indicate that a user has been authenticated (for example to annotate the `request` parameter for views with the `login_required` decorator).\r\n\r\nI'd expect this to be done like so:\r\n```python\r\nclass AuthenticatedHttpRequest(HttpRequest):\r\n    user: User\r\n```\r\n\r\nThe problem is that the type of `user` is changed by this transformer https://github.com/typeddjango/django-stubs/blob/574a87e68cfb2e6ff66b3d7e1a0bb75f51148a8c/mypy_django_plugin/transformers/request.py#L10-L26\r\nThat's called here https://github.com/typeddjango/django-stubs/blob/574a87e68cfb2e6ff66b3d7e1a0bb75f51148a8c/mypy_django_plugin/main.py#L244-L245\r\n\r\nrendering it somewhat impossible to declare these kinds of subclasses.\r\n\r\n--------------------------------\r\nNot sure what a solution would be here. \r\n\r\nOnly changing the type of `user` if the object it's accessed on is an instance of `HttpRequest` (not for subclasses) would possibly be a solution, but would require that all `HttpRequest`-subclasses declare the type of `user` to not fall back to the imprecise type annotations in the `.pyi` file.\r\n\r\nWould it be possible to check the type and only change it if it's what's expected from the `.pyi`-file (`Union[AbstractBaseUser, AnonymousUser]`)?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/404", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/404/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/404/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/404/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/404", "id": 642316316, "node_id": "MDU6SXNzdWU2NDIzMTYzMTY=", "number": 404, "title": " save incompatible with supertype \"Model\" ", "user": {"login": "AdrienLemaire", "id": 260983, "node_id": "MDQ6VXNlcjI2MDk4Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/260983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdrienLemaire", "html_url": "https://github.com/AdrienLemaire", "followers_url": "https://api.github.com/users/AdrienLemaire/followers", "following_url": "https://api.github.com/users/AdrienLemaire/following{/other_user}", "gists_url": "https://api.github.com/users/AdrienLemaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdrienLemaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdrienLemaire/subscriptions", "organizations_url": "https://api.github.com/users/AdrienLemaire/orgs", "repos_url": "https://api.github.com/users/AdrienLemaire/repos", "events_url": "https://api.github.com/users/AdrienLemaire/events{/privacy}", "received_events_url": "https://api.github.com/users/AdrienLemaire/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-20T05:56:18Z", "updated_at": "2020-07-09T00:11:59Z", "closed_at": "2020-07-09T00:11:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Bug report\r\n\r\n## What's wrong\r\nmypy raises an error for the model save method defined as follow:\r\n\r\n```py\r\nclass MyModel(models.Model):\r\n    def save(self, *args: list, **kwargs: dict) -> None:\r\n```\r\n\r\nerror: `[mypy error] [E] Signature of \"save\" incompatible with supertype \"Model\"`\r\n\r\n## How is that should be\r\nNo error, or something more meaningful to help me fix my typing.\r\n\r\nI can see the [model type definition here](https://github.com/typeddjango/django-stubs/blob/master/django-stubs/db/models/base.pyi#L41), and my save method does look compatible with it.\r\n\r\n## System information\r\n\r\n- OS: Arch linux\r\n- `python` version: 3.8.3\r\n- `django` version: 3.0.7\r\n- `mypy` version: 0.770\r\n- `django-stubs` version: 1.5.0\r\n\r\nRelated to #402\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/402", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/402/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/402/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/402/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/402", "id": 640819382, "node_id": "MDU6SXNzdWU2NDA4MTkzODI=", "number": 402, "title": "\"AbstractBaseUser\" has no attribute \"is_staff\"", "user": {"login": "AdrienLemaire", "id": 260983, "node_id": "MDQ6VXNlcjI2MDk4Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/260983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdrienLemaire", "html_url": "https://github.com/AdrienLemaire", "followers_url": "https://api.github.com/users/AdrienLemaire/followers", "following_url": "https://api.github.com/users/AdrienLemaire/following{/other_user}", "gists_url": "https://api.github.com/users/AdrienLemaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdrienLemaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdrienLemaire/subscriptions", "organizations_url": "https://api.github.com/users/AdrienLemaire/orgs", "repos_url": "https://api.github.com/users/AdrienLemaire/repos", "events_url": "https://api.github.com/users/AdrienLemaire/events{/privacy}", "received_events_url": "https://api.github.com/users/AdrienLemaire/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": {"login": "kszmigiel", "id": 16846111, "node_id": "MDQ6VXNlcjE2ODQ2MTEx", "avatar_url": "https://avatars2.githubusercontent.com/u/16846111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kszmigiel", "html_url": "https://github.com/kszmigiel", "followers_url": "https://api.github.com/users/kszmigiel/followers", "following_url": "https://api.github.com/users/kszmigiel/following{/other_user}", "gists_url": "https://api.github.com/users/kszmigiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/kszmigiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kszmigiel/subscriptions", "organizations_url": "https://api.github.com/users/kszmigiel/orgs", "repos_url": "https://api.github.com/users/kszmigiel/repos", "events_url": "https://api.github.com/users/kszmigiel/events{/privacy}", "received_events_url": "https://api.github.com/users/kszmigiel/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "kszmigiel", "id": 16846111, "node_id": "MDQ6VXNlcjE2ODQ2MTEx", "avatar_url": "https://avatars2.githubusercontent.com/u/16846111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kszmigiel", "html_url": "https://github.com/kszmigiel", "followers_url": "https://api.github.com/users/kszmigiel/followers", "following_url": "https://api.github.com/users/kszmigiel/following{/other_user}", "gists_url": "https://api.github.com/users/kszmigiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/kszmigiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kszmigiel/subscriptions", "organizations_url": "https://api.github.com/users/kszmigiel/orgs", "repos_url": "https://api.github.com/users/kszmigiel/repos", "events_url": "https://api.github.com/users/kszmigiel/events{/privacy}", "received_events_url": "https://api.github.com/users/kszmigiel/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2020-06-18T00:21:01Z", "updated_at": "2020-06-20T05:50:12Z", "closed_at": "2020-06-20T05:50:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Bug report\r\n\r\n\r\n## What's wrong\r\ndjango-stubs incorrectly associates `HttpRequest.user` to AbstractBaseUser when my user extends AbstractUser.\r\n\r\n## How is that should be\r\nGiven the `settings.py`:\r\n```py\r\nAUTH_USER_MODEL = \"app.User\"\r\n```\r\nand the `app/models.py`:\r\n```py\r\nfrom django.contrib.auth.models import AbstractUser\r\n\r\nclass User(AbstractUser):\r\n    ...\r\n```\r\n\r\nWhen calling an AbstractUser property:\r\n```py\r\n    def get_context(self, request: HttpRequest) -> dict:\r\n        context: dict = super().get_context(request)\r\n        if not request.user.is_staff and request.user.has_perm(\"app.student\"):\r\n```\r\nNo type error should be raised, but I get:\r\n```\r\n[mypy error] [E] \"AbstractBaseUser\" has no attribute \"is_staff\"\r\n```\r\n\r\nI suppose the simplest of fixes would be to change https://github.com/typeddjango/django-stubs/blob/master/django-stubs/http/request.pyi#L55\r\n```diff\r\n- from django.contrib.auth.base_user import AbstractBaseUser\r\n+ from django.contrib.auth.models import AbstractUser\r\n\r\n-    user: Union[AbstractBaseUser, AnonymousUser]\r\n+    user: Union[AbstractUser, AnonymousUser]\r\n```\r\n\r\nSince the definition of AbstractUser is\r\n```py\r\nclass AbstractUser(AbstractBaseUser, PermissionsMixin):\r\n```\r\n\r\n## System information\r\n\r\n- OS: Arch linux\r\n- `python` version: 3.8.3\r\n- `django` version: 3.0.7\r\n- `mypy` version: 0.770\r\n- `django-stubs` version: 1.5.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/400", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/400/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/400/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/400/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/400", "id": 639747385, "node_id": "MDU6SXNzdWU2Mzk3NDczODU=", "number": 400, "title": "update_session_auth_hash() type doesn't match documentation and functionality", "user": {"login": "coiax", "id": 609465, "node_id": "MDQ6VXNlcjYwOTQ2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/609465?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coiax", "html_url": "https://github.com/coiax", "followers_url": "https://api.github.com/users/coiax/followers", "following_url": "https://api.github.com/users/coiax/following{/other_user}", "gists_url": "https://api.github.com/users/coiax/gists{/gist_id}", "starred_url": "https://api.github.com/users/coiax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coiax/subscriptions", "organizations_url": "https://api.github.com/users/coiax/orgs", "repos_url": "https://api.github.com/users/coiax/repos", "events_url": "https://api.github.com/users/coiax/events{/privacy}", "received_events_url": "https://api.github.com/users/coiax/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-16T15:06:15Z", "updated_at": "2020-07-24T03:05:56Z", "closed_at": "2020-06-16T16:19:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Bug report\r\n\r\n<!--\r\nHi, thanks for submitting a bug. We appreciate that.\r\n\r\nBut, we will need some information about what's wrong to help you.\r\n-->\r\n\r\n## What's wrong\r\n\r\nThe stub for update_session_auth_hash() is inaccurate, it asks for a WSGIRequest, when\r\nthe function itself expects a HttpRequest (with a .session attribute).\r\n\r\nIn the [documentation](https://docs.djangoproject.com/en/2.2/_modules/django/contrib/auth/#update_session_auth_hash), it is also passed a request.\r\n<!--\r\nDescribe what is not working.\r\n\r\nPlease, attach a traceback.\r\nWe would also appreciate a failing test case.\r\nThat is EXTREMELY helpful!\r\n-->\r\n\r\n## How is that should be\r\n\r\nThe stub should be:\r\n\r\n```def update_session_auth_hash(request: HttpRequest, user: AbstractUser) -> None: ...```\r\n<!-- Describe how it should work. -->\r\n\r\n## System information\r\n\r\n- OS: Ubuntu 18.04\r\n- `python` version: 3.8.3\r\n- `django` version: 2.2.13\r\n- `mypy` version: 0.750\r\n- `django-stubs` version: 1.3.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/392", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/392/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/392/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/392/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/392", "id": 634258110, "node_id": "MDU6SXNzdWU2MzQyNTgxMTA=", "number": 392, "title": "Wrong supported python versions in PyPi metadata", "user": {"login": "AndreyMZ", "id": 9609370, "node_id": "MDQ6VXNlcjk2MDkzNzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9609370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreyMZ", "html_url": "https://github.com/AndreyMZ", "followers_url": "https://api.github.com/users/AndreyMZ/followers", "following_url": "https://api.github.com/users/AndreyMZ/following{/other_user}", "gists_url": "https://api.github.com/users/AndreyMZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreyMZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreyMZ/subscriptions", "organizations_url": "https://api.github.com/users/AndreyMZ/orgs", "repos_url": "https://api.github.com/users/AndreyMZ/repos", "events_url": "https://api.github.com/users/AndreyMZ/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreyMZ/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-08T06:58:34Z", "updated_at": "2020-06-08T07:55:32Z", "closed_at": "2020-06-08T07:55:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "According to [README](https://github.com/typeddjango/django-stubs/blob/54f5f63e719bb16bb51f19b20c5241227db7bc54/README.md#version-compatibility) and [the test configuration](https://github.com/typeddjango/django-stubs/blob/54f5f63e719bb16bb51f19b20c5241227db7bc54/.travis.yml#L8) it looks like django-stubs supports Python 3.8.\r\n\r\nBut [the metadata](https://github.com/typeddjango/django-stubs/blob/master/setup.py#L47-L48) of the [`django-stubs`](https://pypi.org/project/django-stubs/) project on PyPi differs.\r\n\r\n## What's wrong\r\n\r\nhttps://pypi.org/project/django-stubs/\r\n\r\n> Programming Language\r\n> * Python :: 3.6\r\n> * Python :: 3.7\r\n\r\n## How is that should be\r\n\r\n> Programming Language\r\n> * Python :: 3\r\n> * Python :: 3.6\r\n> * Python :: 3.7\r\n> * Python :: 3.8\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/388", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/388/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/388/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/388/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/388", "id": 630639777, "node_id": "MDU6SXNzdWU2MzA2Mzk3Nzc=", "number": 388, "title": "mypy@0.780 is out", "user": {"login": "sobolevn", "id": 4660275, "node_id": "MDQ6VXNlcjQ2NjAyNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4660275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sobolevn", "html_url": "https://github.com/sobolevn", "followers_url": "https://api.github.com/users/sobolevn/followers", "following_url": "https://api.github.com/users/sobolevn/following{/other_user}", "gists_url": "https://api.github.com/users/sobolevn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sobolevn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sobolevn/subscriptions", "organizations_url": "https://api.github.com/users/sobolevn/orgs", "repos_url": "https://api.github.com/users/sobolevn/repos", "events_url": "https://api.github.com/users/sobolevn/events{/privacy}", "received_events_url": "https://api.github.com/users/sobolevn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401222, "node_id": "MDU6TGFiZWwxMDA4NDAxMjIy", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 1008401223, "node_id": "MDU6TGFiZWwxMDA4NDAxMjIz", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": {"login": "kszmigiel", "id": 16846111, "node_id": "MDQ6VXNlcjE2ODQ2MTEx", "avatar_url": "https://avatars2.githubusercontent.com/u/16846111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kszmigiel", "html_url": "https://github.com/kszmigiel", "followers_url": "https://api.github.com/users/kszmigiel/followers", "following_url": "https://api.github.com/users/kszmigiel/following{/other_user}", "gists_url": "https://api.github.com/users/kszmigiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/kszmigiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kszmigiel/subscriptions", "organizations_url": "https://api.github.com/users/kszmigiel/orgs", "repos_url": "https://api.github.com/users/kszmigiel/repos", "events_url": "https://api.github.com/users/kszmigiel/events{/privacy}", "received_events_url": "https://api.github.com/users/kszmigiel/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "kszmigiel", "id": 16846111, "node_id": "MDQ6VXNlcjE2ODQ2MTEx", "avatar_url": "https://avatars2.githubusercontent.com/u/16846111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kszmigiel", "html_url": "https://github.com/kszmigiel", "followers_url": "https://api.github.com/users/kszmigiel/followers", "following_url": "https://api.github.com/users/kszmigiel/following{/other_user}", "gists_url": "https://api.github.com/users/kszmigiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/kszmigiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kszmigiel/subscriptions", "organizations_url": "https://api.github.com/users/kszmigiel/orgs", "repos_url": "https://api.github.com/users/kszmigiel/repos", "events_url": "https://api.github.com/users/kszmigiel/events{/privacy}", "received_events_url": "https://api.github.com/users/kszmigiel/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-06-04T08:56:15Z", "updated_at": "2020-06-27T15:13:21Z", "closed_at": "2020-06-06T08:35:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We need to test if everything works on this new version and update the dependency.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/382", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/382/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/382/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/382/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/382", "id": 629279878, "node_id": "MDU6SXNzdWU2MjkyNzk4Nzg=", "number": 382, "title": "Incorect type for items method of Sitemap class", "user": {"login": "Anto59290", "id": 6287044, "node_id": "MDQ6VXNlcjYyODcwNDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/6287044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Anto59290", "html_url": "https://github.com/Anto59290", "followers_url": "https://api.github.com/users/Anto59290/followers", "following_url": "https://api.github.com/users/Anto59290/following{/other_user}", "gists_url": "https://api.github.com/users/Anto59290/gists{/gist_id}", "starred_url": "https://api.github.com/users/Anto59290/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Anto59290/subscriptions", "organizations_url": "https://api.github.com/users/Anto59290/orgs", "repos_url": "https://api.github.com/users/Anto59290/repos", "events_url": "https://api.github.com/users/Anto59290/events{/privacy}", "received_events_url": "https://api.github.com/users/Anto59290/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 1008401223, "node_id": "MDU6TGFiZWwxMDA4NDAxMjIz", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": {"login": "kszmigiel", "id": 16846111, "node_id": "MDQ6VXNlcjE2ODQ2MTEx", "avatar_url": "https://avatars2.githubusercontent.com/u/16846111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kszmigiel", "html_url": "https://github.com/kszmigiel", "followers_url": "https://api.github.com/users/kszmigiel/followers", "following_url": "https://api.github.com/users/kszmigiel/following{/other_user}", "gists_url": "https://api.github.com/users/kszmigiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/kszmigiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kszmigiel/subscriptions", "organizations_url": "https://api.github.com/users/kszmigiel/orgs", "repos_url": "https://api.github.com/users/kszmigiel/repos", "events_url": "https://api.github.com/users/kszmigiel/events{/privacy}", "received_events_url": "https://api.github.com/users/kszmigiel/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "kszmigiel", "id": 16846111, "node_id": "MDQ6VXNlcjE2ODQ2MTEx", "avatar_url": "https://avatars2.githubusercontent.com/u/16846111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kszmigiel", "html_url": "https://github.com/kszmigiel", "followers_url": "https://api.github.com/users/kszmigiel/followers", "following_url": "https://api.github.com/users/kszmigiel/following{/other_user}", "gists_url": "https://api.github.com/users/kszmigiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/kszmigiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kszmigiel/subscriptions", "organizations_url": "https://api.github.com/users/kszmigiel/orgs", "repos_url": "https://api.github.com/users/kszmigiel/repos", "events_url": "https://api.github.com/users/kszmigiel/events{/privacy}", "received_events_url": "https://api.github.com/users/kszmigiel/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-06-02T15:06:16Z", "updated_at": "2020-06-03T10:16:25Z", "closed_at": "2020-06-03T09:58:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Bug report\r\n\r\n<!--\r\nHi, thanks for submitting a bug. We appreciate that.\r\n\r\nBut, we will need some information about what's wrong to help you.\r\n-->\r\n\r\n## What's wrong\r\nWhen using the Sitemap class in the following way: \r\n```py\r\nclass ProductSitemap(Sitemap):\r\n\r\n    def items(self) -> QuerySet[Product]:\r\n        return Product.objects.all()\r\n```\r\nWill raise the following error:\r\n`Return type \"QuerySet[Product]\" of \"items\" incompatible with return type \"List[Any]\" in supertype \"Sitemap\"`\r\n\r\n\r\n## How is that should be\r\n\r\nThe given snippet should not raise any error. In the Django documentation we can find some example [using a QuerySet](https://docs.djangoproject.com/en/3.0/ref/contrib/sitemaps/#an-example). The type defined in [django-stubs](https://github.com/typeddjango/django-stubs/blob/5c6be7ad121abb2bc8020b0a51c5c0a3981f7216/django-stubs/contrib/sitemaps/__init__.pyi#L19) seems a little bit to restrictive.\r\nIt could be replace by: \r\n- `Iterable[Any]`\r\n- Something similar to [what is done in the paginator](https://github.com/typeddjango/django-stubs/blob/ef8850348b5862d39bfe529a39e71625c5d9c89d/django-stubs/core/paginator.pyi#L27). As the Sitemap class from Django uses Paginator under the hood, this seems the best option to me.\r\n\r\nI can do a PR if option number 2 seems good to you.\r\n\r\n<!-- Describe how it should work. -->\r\n\r\n## System information\r\n\r\n- OS:\r\n- `python` version: 3.7.7\r\n- `django` version: 2.2.12\r\n- `mypy` version: 0.770\r\n- `django-stubs` version: 1.5.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/380", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/380/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/380/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/380/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/380", "id": 628802948, "node_id": "MDU6SXNzdWU2Mjg4MDI5NDg=", "number": 380, "title": "__init__ for OrderedSet missing", "user": {"login": "bullfest", "id": 4342153, "node_id": "MDQ6VXNlcjQzNDIxNTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/4342153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bullfest", "html_url": "https://github.com/bullfest", "followers_url": "https://api.github.com/users/bullfest/followers", "following_url": "https://api.github.com/users/bullfest/following{/other_user}", "gists_url": "https://api.github.com/users/bullfest/gists{/gist_id}", "starred_url": "https://api.github.com/users/bullfest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bullfest/subscriptions", "organizations_url": "https://api.github.com/users/bullfest/orgs", "repos_url": "https://api.github.com/users/bullfest/repos", "events_url": "https://api.github.com/users/bullfest/events{/privacy}", "received_events_url": "https://api.github.com/users/bullfest/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-01T23:58:20Z", "updated_at": "2020-06-02T10:56:12Z", "closed_at": "2020-06-02T10:56:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Typechecking this snippet\r\n```\r\nfrom django.utils.datastructures import OrderedSet\r\ns = OrderedSet([1, 2, 3])\r\n``` \r\nGives the error:\r\n```\r\nutil/lists.py:19: error: Too many arguments for \"OrderedSet\"\r\n``` \r\n\r\n## Expected behaviour\r\nI'd expect it to work as `OrderedSet` accepts an optional parameter `iterable`: https://github.com/django/django/blob/ecaac9e42f497be04ddc72dfebb6e397ccca9517/django/utils/datastructures.py#L10", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/379", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/379/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/379/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/379/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/379", "id": 628790168, "node_id": "MDU6SXNzdWU2Mjg3OTAxNjg=", "number": 379, "title": "[Proposal] Tests for Python 3.8", "user": {"login": "kszmigiel", "id": 16846111, "node_id": "MDQ6VXNlcjE2ODQ2MTEx", "avatar_url": "https://avatars2.githubusercontent.com/u/16846111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kszmigiel", "html_url": "https://github.com/kszmigiel", "followers_url": "https://api.github.com/users/kszmigiel/followers", "following_url": "https://api.github.com/users/kszmigiel/following{/other_user}", "gists_url": "https://api.github.com/users/kszmigiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/kszmigiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kszmigiel/subscriptions", "organizations_url": "https://api.github.com/users/kszmigiel/orgs", "repos_url": "https://api.github.com/users/kszmigiel/repos", "events_url": "https://api.github.com/users/kszmigiel/events{/privacy}", "received_events_url": "https://api.github.com/users/kszmigiel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401222, "node_id": "MDU6TGFiZWwxMDA4NDAxMjIy", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 1008401223, "node_id": "MDU6TGFiZWwxMDA4NDAxMjIz", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": {"login": "kszmigiel", "id": 16846111, "node_id": "MDQ6VXNlcjE2ODQ2MTEx", "avatar_url": "https://avatars2.githubusercontent.com/u/16846111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kszmigiel", "html_url": "https://github.com/kszmigiel", "followers_url": "https://api.github.com/users/kszmigiel/followers", "following_url": "https://api.github.com/users/kszmigiel/following{/other_user}", "gists_url": "https://api.github.com/users/kszmigiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/kszmigiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kszmigiel/subscriptions", "organizations_url": "https://api.github.com/users/kszmigiel/orgs", "repos_url": "https://api.github.com/users/kszmigiel/repos", "events_url": "https://api.github.com/users/kszmigiel/events{/privacy}", "received_events_url": "https://api.github.com/users/kszmigiel/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "kszmigiel", "id": 16846111, "node_id": "MDQ6VXNlcjE2ODQ2MTEx", "avatar_url": "https://avatars2.githubusercontent.com/u/16846111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kszmigiel", "html_url": "https://github.com/kszmigiel", "followers_url": "https://api.github.com/users/kszmigiel/followers", "following_url": "https://api.github.com/users/kszmigiel/following{/other_user}", "gists_url": "https://api.github.com/users/kszmigiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/kszmigiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kszmigiel/subscriptions", "organizations_url": "https://api.github.com/users/kszmigiel/orgs", "repos_url": "https://api.github.com/users/kszmigiel/repos", "events_url": "https://api.github.com/users/kszmigiel/events{/privacy}", "received_events_url": "https://api.github.com/users/kszmigiel/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-06-01T23:21:35Z", "updated_at": "2020-06-06T11:28:29Z", "closed_at": "2020-06-06T11:28:29Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Hi!\r\n\r\nDuring writing tests for my contributions I've noticed that `typing` module is slightly different for Python 3.7 and 3.8, i.e. `TypedDict` is part of `typing_extensions` in 3.7, whereas it's included in `typing` in 3.8. In case we plan to support 3.8 in the future I'd suggest to:\r\n\r\n1) refactor our tests so they'd work for both versions\r\n2) go hardcore and drop testing for 3.7 and switch to newer (this would probably be easier)\r\n\r\nWhat do you think guys?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/378", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/378/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/378/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/378/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/378", "id": 628657374, "node_id": "MDU6SXNzdWU2Mjg2NTczNzQ=", "number": 378, "title": "django.shortcuts.redirect should use a type Literal overload for return value", "user": {"login": "silviogutierrez", "id": 92824, "node_id": "MDQ6VXNlcjkyODI0", "avatar_url": "https://avatars0.githubusercontent.com/u/92824?v=4", "gravatar_id": "", "url": "https://api.github.com/users/silviogutierrez", "html_url": "https://github.com/silviogutierrez", "followers_url": "https://api.github.com/users/silviogutierrez/followers", "following_url": "https://api.github.com/users/silviogutierrez/following{/other_user}", "gists_url": "https://api.github.com/users/silviogutierrez/gists{/gist_id}", "starred_url": "https://api.github.com/users/silviogutierrez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/silviogutierrez/subscriptions", "organizations_url": "https://api.github.com/users/silviogutierrez/orgs", "repos_url": "https://api.github.com/users/silviogutierrez/repos", "events_url": "https://api.github.com/users/silviogutierrez/events{/privacy}", "received_events_url": "https://api.github.com/users/silviogutierrez/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401222, "node_id": "MDU6TGFiZWwxMDA4NDAxMjIy", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 1008401223, "node_id": "MDU6TGFiZWwxMDA4NDAxMjIz", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": {"login": "kszmigiel", "id": 16846111, "node_id": "MDQ6VXNlcjE2ODQ2MTEx", "avatar_url": "https://avatars2.githubusercontent.com/u/16846111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kszmigiel", "html_url": "https://github.com/kszmigiel", "followers_url": "https://api.github.com/users/kszmigiel/followers", "following_url": "https://api.github.com/users/kszmigiel/following{/other_user}", "gists_url": "https://api.github.com/users/kszmigiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/kszmigiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kszmigiel/subscriptions", "organizations_url": "https://api.github.com/users/kszmigiel/orgs", "repos_url": "https://api.github.com/users/kszmigiel/repos", "events_url": "https://api.github.com/users/kszmigiel/events{/privacy}", "received_events_url": "https://api.github.com/users/kszmigiel/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "kszmigiel", "id": 16846111, "node_id": "MDQ6VXNlcjE2ODQ2MTEx", "avatar_url": "https://avatars2.githubusercontent.com/u/16846111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kszmigiel", "html_url": "https://github.com/kszmigiel", "followers_url": "https://api.github.com/users/kszmigiel/followers", "following_url": "https://api.github.com/users/kszmigiel/following{/other_user}", "gists_url": "https://api.github.com/users/kszmigiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/kszmigiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kszmigiel/subscriptions", "organizations_url": "https://api.github.com/users/kszmigiel/orgs", "repos_url": "https://api.github.com/users/kszmigiel/repos", "events_url": "https://api.github.com/users/kszmigiel/events{/privacy}", "received_events_url": "https://api.github.com/users/kszmigiel/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-06-01T19:03:03Z", "updated_at": "2020-06-03T20:46:30Z", "closed_at": "2020-06-03T20:46:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Bug report\r\n\r\n## What's wrong\r\nAs of a recent `django-stubs` release, and `HttpResponseRedirect` and `HttpResponsePermanentRedirect` are no longer compatible with each other (rightly so, they only share an ancestor but the latter does not inherit from the former).\r\n\r\nThis means to annotate a view's response, you need to use something like `Union[TemplateResponse, HttpResponseRedirect, HttpResponsePermanentRedirect]` for your typical https://en.wikipedia.org/wiki/Post/Redirect/Get . Obviously you could just annotate with `HttpResponse` but I would argue that's too weak.\r\n\r\n## How is that should be\r\n\r\nCalling redirect with `permanent=True` should return one type, and `permanent=False` return another. This is possible with `Literal` types now, see https://mypy.readthedocs.io/en/stable/literal_types.html.\r\n\r\nHappy to take a stab at this assuming we're ok with using newer MyPy features like that above. I'm not quite sure if we should import Literal from `typing` or from somewhere else if we support lower Python versions. Any guidance on these imports would be great.\r\n\r\nThanks for all the work on this library. It's really improved my Mypy experience.\r\n\r\n## System information\r\n\r\n- OS:\r\n- `python` version: 3.8\r\n- `django` version: 3.0\r\n- `mypy` version: 0.770\r\n- `django-stubs` version: 1.5.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/373", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/373/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/373/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/373/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/373", "id": 625257253, "node_id": "MDU6SXNzdWU2MjUyNTcyNTM=", "number": 373, "title": "AssertionError when using models.Manager", "user": {"login": "dmwyatt", "id": 163359, "node_id": "MDQ6VXNlcjE2MzM1OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/163359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmwyatt", "html_url": "https://github.com/dmwyatt", "followers_url": "https://api.github.com/users/dmwyatt/followers", "following_url": "https://api.github.com/users/dmwyatt/following{/other_user}", "gists_url": "https://api.github.com/users/dmwyatt/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmwyatt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmwyatt/subscriptions", "organizations_url": "https://api.github.com/users/dmwyatt/orgs", "repos_url": "https://api.github.com/users/dmwyatt/repos", "events_url": "https://api.github.com/users/dmwyatt/events{/privacy}", "received_events_url": "https://api.github.com/users/dmwyatt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": {"login": "kszmigiel", "id": 16846111, "node_id": "MDQ6VXNlcjE2ODQ2MTEx", "avatar_url": "https://avatars2.githubusercontent.com/u/16846111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kszmigiel", "html_url": "https://github.com/kszmigiel", "followers_url": "https://api.github.com/users/kszmigiel/followers", "following_url": "https://api.github.com/users/kszmigiel/following{/other_user}", "gists_url": "https://api.github.com/users/kszmigiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/kszmigiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kszmigiel/subscriptions", "organizations_url": "https://api.github.com/users/kszmigiel/orgs", "repos_url": "https://api.github.com/users/kszmigiel/repos", "events_url": "https://api.github.com/users/kszmigiel/events{/privacy}", "received_events_url": "https://api.github.com/users/kszmigiel/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "kszmigiel", "id": 16846111, "node_id": "MDQ6VXNlcjE2ODQ2MTEx", "avatar_url": "https://avatars2.githubusercontent.com/u/16846111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kszmigiel", "html_url": "https://github.com/kszmigiel", "followers_url": "https://api.github.com/users/kszmigiel/followers", "following_url": "https://api.github.com/users/kszmigiel/following{/other_user}", "gists_url": "https://api.github.com/users/kszmigiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/kszmigiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kszmigiel/subscriptions", "organizations_url": "https://api.github.com/users/kszmigiel/orgs", "repos_url": "https://api.github.com/users/kszmigiel/repos", "events_url": "https://api.github.com/users/kszmigiel/events{/privacy}", "received_events_url": "https://api.github.com/users/kszmigiel/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 14, "created_at": "2020-05-26T23:11:44Z", "updated_at": "2020-07-13T23:48:31Z", "closed_at": "2020-07-13T13:31:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Bug report\r\n\r\n<!--\r\nHi, thanks for submitting a bug. We appreciate that.\r\n\r\nBut, we will need some information about what's wrong to help you.\r\n-->\r\n\r\n## What's wrong\r\nI can't seem to create a minimal example demonstrating this, but I'm getting this on one of my projects.\r\n\r\nIf I change a custom queryset to become a custom manager by changing what it inherits from and changing `objects = CustomQuerySet.as_manager()` to `objects = CustomManager()` I get the following.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\dusti\\.pyenv\\pyenv-win\\versions\\3.8.0-amd64\\lib\\runpy.py\", line 192, in _run_module_as_main\r\n    return _run_code(code, main_globals, None,\r\n    exec(code, run_globals)\r\n  File \"mypy\\semanal.py\", line 4679, in accept\r\n  File \"mypy\\nodes.py\", line 939, in accept\r\n  File \"mypy\\semanal.py\", line 1001, in visit_class_def\r\n  File \"mypy\\semanal.py\", line 1078, in analyze_class\r\n  File \"mypy\\semanal.py\", line 1087, in analyze_class_body_common\r\n  File \"mypy\\semanal.py\", line 1147, in apply_class_plugin_hooks\r\n  File \"c:\\users\\dusti\\appdata\\local\\pypoetry\\cache\\virtualenvs\\vehicles-caet0sxz-py3.8\\lib\\site-packages\\mypy_django_plugin\\main.py\", line 37, in transform_model_class\r\n    process_model_class(ctx, django_context)\r\n  File \"c:\\users\\dusti\\appdata\\local\\pypoetry\\cache\\virtualenvs\\vehicles-caet0sxz-py3.8\\lib\\site-packages\\mypy_django_plugin\\transformers\\models.py\", line 357, in process_model_class\r\n    initializer_cls(ctx, django_context).run()\r\n  File \"c:\\users\\dusti\\appdata\\local\\pypoetry\\cache\\virtualenvs\\vehicles-caet0sxz-py3.8\\lib\\site-packages\\mypy_django_plugin\\transformers\\models.py\", line 71, in run\r\n    self.run_with_model_cls(model_cls)\r\n  File \"c:\\users\\dusti\\appdata\\local\\pypoetry\\cache\\virtualenvs\\vehicles-caet0sxz-py3.8\\lib\\site-packages\\mypy_django_plugin\\transformers\\models.py\", line 230, in run_with_model_cls\r\n    custom_manager_type = self.create_new_model_parametrized_manager(custom_model_manager_name,\r\n  File \"c:\\users\\dusti\\appdata\\local\\pypoetry\\cache\\virtualenvs\\vehicles-caet0sxz-py3.8\\lib\\site-packages\\mypy_django_plugin\\transformers\\models.py\", line 183, in create_new_model_parametrized_manager\r\n    helpers.copy_method_to_another_class(new_cls_def_context,\r\n  File \"c:\\users\\dusti\\appdata\\local\\pypoetry\\cache\\virtualenvs\\vehicles-caet0sxz-py3.8\\lib\\site-packages\\mypy_django_plugin\\lib\\helpers.py\", line 346, in copy_method_to_another_class\r\n    assert bound_return_type is not None\r\nAssertionError:\r\n```\r\n\r\n- OS: Win10\r\n- `python` version: 3.8\r\n- `django` version: 3.0.6\r\n- `mypy` version: .770\r\n- `django-stubs` version: 1.5.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/371", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/371/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/371/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/371/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/371", "id": 623418865, "node_id": "MDU6SXNzdWU2MjM0MTg4NjU=", "number": 371, "title": "render_to_string context argument should accept Context", "user": {"login": "asfaltboy", "id": 321520, "node_id": "MDQ6VXNlcjMyMTUyMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/321520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asfaltboy", "html_url": "https://github.com/asfaltboy", "followers_url": "https://api.github.com/users/asfaltboy/followers", "following_url": "https://api.github.com/users/asfaltboy/following{/other_user}", "gists_url": "https://api.github.com/users/asfaltboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/asfaltboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asfaltboy/subscriptions", "organizations_url": "https://api.github.com/users/asfaltboy/orgs", "repos_url": "https://api.github.com/users/asfaltboy/repos", "events_url": "https://api.github.com/users/asfaltboy/events{/privacy}", "received_events_url": "https://api.github.com/users/asfaltboy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-22T18:50:23Z", "updated_at": "2020-05-23T10:47:40Z", "closed_at": "2020-05-23T10:47:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Bug report\r\n\r\n## What's wrong\r\n\r\n```\r\nrender_test.py:8: error: Argument 2 to \"render_to_string\" has incompatible type \"RequestContext\"; expected \"Optional[Dict[str, Any]]\"\r\n```\r\n\r\n```python\r\nlink = render_to_string(link_template, RequestContext(request))\r\n```\r\n\r\nThis is because:\r\n\r\nhttps://github.com/typeddjango/django-stubs/blob/963d50c717282c340fa7d397bdb0402a4e7f9434/django-stubs/template/loader.pyi#L9-L14\r\n\r\n## How is that should be\r\n\r\nThe `render_to_string` function simply passes the `context` argument to the `template.render` function. This function already accepts the correct Union of arguments:\r\n\r\nhttps://github.com/typeddjango/django-stubs/blob/b397ec04a95e009c7f86b6bcb7325d2059384dc1/django-stubs/template/base.pyi#L62-L64\r\n\r\nAlso, `django.shortcuts.render` and `django.shortcuts.render_to_response` both should also accept the same type for context arg, and currently they do not:\r\n\r\nhttps://github.com/typeddjango/django-stubs/blob/963d50c717282c340fa7d397bdb0402a4e7f9434/django-stubs/shortcuts.pyi#L9-L23\r\n\r\n## System information\r\n\r\n- OS: MacOS Catalina 10.15.4 (19E287)\r\n- `python` version: 3.8.0\r\n- `django` version: 2.2\r\n- `mypy` version: 0.6.1\r\n- `django-stubs` version: 1.5.0\r\n\r\nI am taking a stab at fixing this in my fork, will submit a PR when ready", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/367", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/367/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/367/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/367/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/367", "id": 614778737, "node_id": "MDU6SXNzdWU2MTQ3Nzg3Mzc=", "number": 367, "title": "Creating model and form objects fails", "user": {"login": "lfrodrigues", "id": 301004, "node_id": "MDQ6VXNlcjMwMTAwNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/301004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lfrodrigues", "html_url": "https://github.com/lfrodrigues", "followers_url": "https://api.github.com/users/lfrodrigues/followers", "following_url": "https://api.github.com/users/lfrodrigues/following{/other_user}", "gists_url": "https://api.github.com/users/lfrodrigues/gists{/gist_id}", "starred_url": "https://api.github.com/users/lfrodrigues/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lfrodrigues/subscriptions", "organizations_url": "https://api.github.com/users/lfrodrigues/orgs", "repos_url": "https://api.github.com/users/lfrodrigues/repos", "events_url": "https://api.github.com/users/lfrodrigues/events{/privacy}", "received_events_url": "https://api.github.com/users/lfrodrigues/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-08T14:29:55Z", "updated_at": "2020-05-08T16:09:15Z", "closed_at": "2020-05-08T16:09:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Bug report\r\n\r\nCreating model objects fails with mypy error\r\n\r\n## What's wrong\r\n\r\nWhen I create a model like:\r\n```\r\na = LoanBankPaymentAPI(amount=1, )\r\n```\r\n\r\nI get \r\n```\r\nCall to untyped function \"LoanBankPaymentAPI\" in typed context\r\n```\r\n\r\n## How is that should be\r\n\r\nShould  work as the model is correctly defined\r\n\r\n## System information\r\n\r\n- OS: Ubuntu\r\n- `python` version: 3.6\r\n- `django` version: 2.2\r\n- `mypy` version: .0770\r\n- `django-stubs` version: 1.5.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/362", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/362/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/362/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/362/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/362", "id": 605348693, "node_id": "MDU6SXNzdWU2MDUzNDg2OTM=", "number": 362, "title": "Invalid typings for django.core.cache.backends.base.BaseCache", "user": {"login": "Ashish-Bansal", "id": 6122999, "node_id": "MDQ6VXNlcjYxMjI5OTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6122999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ashish-Bansal", "html_url": "https://github.com/Ashish-Bansal", "followers_url": "https://api.github.com/users/Ashish-Bansal/followers", "following_url": "https://api.github.com/users/Ashish-Bansal/following{/other_user}", "gists_url": "https://api.github.com/users/Ashish-Bansal/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ashish-Bansal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ashish-Bansal/subscriptions", "organizations_url": "https://api.github.com/users/Ashish-Bansal/orgs", "repos_url": "https://api.github.com/users/Ashish-Bansal/repos", "events_url": "https://api.github.com/users/Ashish-Bansal/events{/privacy}", "received_events_url": "https://api.github.com/users/Ashish-Bansal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-23T08:39:16Z", "updated_at": "2020-04-24T09:44:55Z", "closed_at": "2020-04-24T09:44:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Bug report\r\n\r\n<!--\r\nHi, thanks for submitting a bug. We appreciate that.\r\n\r\nBut, we will need some information about what's wrong to help you.\r\n-->\r\n\r\n`django.core.cache.backends.base.Base` typings are invalid. \r\n\r\nAccording to https://github.com/django/django/blob/447980e72ac01da1594dd3373a03ba40b7ee6f80/django/core/cache/backends/base.py#L108, add operation should be returning `True` if the value was stored, otherwise `False`, but in the typings, it's set to None. \r\n\r\nhttps://github.com/typeddjango/django-stubs/blob/96914e466bcd7a65fdd92422586f9ebc72fdf8a8/django-stubs/core/cache/backends/base.pyi#L22\r\n\r\nSimilarly other typings for BaseCache have wrong typings.\r\n\r\n## What's wrong\r\n\r\n<!--\r\nDescribe what is not working.\r\n\r\nPlease, attach a traceback.\r\nWe would also appreciate a failing test case.\r\nThat is EXTREMELY helpful!\r\n-->\r\n```\r\nfoobar.py:688: error: \"add\" of \"BaseCache\" does not return a value\r\n```\r\n\r\n## How is that should be\r\n\r\n<!-- Describe how it should work. -->\r\nShouldn't raise any error. \r\n\r\n## System information\r\n\r\n- `django` version: master branch\r\n- `django-stubs` version: master branch\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/358", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/358/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/358/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/358/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/358", "id": 600114650, "node_id": "MDU6SXNzdWU2MDAxMTQ2NTA=", "number": 358, "title": "django.contrib.admin.helpers.AdminForm expects change password form", "user": {"login": "tumb1er", "id": 1587241, "node_id": "MDQ6VXNlcjE1ODcyNDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1587241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tumb1er", "html_url": "https://github.com/tumb1er", "followers_url": "https://api.github.com/users/tumb1er/followers", "following_url": "https://api.github.com/users/tumb1er/following{/other_user}", "gists_url": "https://api.github.com/users/tumb1er/gists{/gist_id}", "starred_url": "https://api.github.com/users/tumb1er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tumb1er/subscriptions", "organizations_url": "https://api.github.com/users/tumb1er/orgs", "repos_url": "https://api.github.com/users/tumb1er/repos", "events_url": "https://api.github.com/users/tumb1er/events{/privacy}", "received_events_url": "https://api.github.com/users/tumb1er/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-15T08:22:17Z", "updated_at": "2020-04-16T15:22:22Z", "closed_at": "2020-04-16T15:22:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Bug report\r\n\r\n## What's wrong\r\n```\r\nadmin_wizard/admin.py:30: \r\nerror: Argument 1 to \"AdminForm\" has incompatible type \"BaseForm\"; expected \"AdminPasswordChangeForm\"\r\nadmin_form = helpers.AdminForm(\r\n            # django-stubs bug\r\n            form,  # BaseForm\r\n            fieldsets,\r\n            prepopulated_fields={},\r\n            model_admin=self.model_admin)\r\n```\r\n\r\n## How is that should be\r\n\r\n`AdminForm.__init__`  should have `form: BaseForm`  parameter.\r\n\r\n## System information\r\n\r\n- OS: ubuntu 18.04\r\n- `python` version: python3.8\r\n- `django` version: 3.0.5\r\n- `mypy` version: 0.770\r\n- `django-stubs` version: 1.5.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/355", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/355/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/355/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/355/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/355", "id": 596049667, "node_id": "MDU6SXNzdWU1OTYwNDk2Njc=", "number": 355, "title": "Using TypedDict for templates rendering", "user": {"login": "dmerejkowsky", "id": 606755, "node_id": "MDQ6VXNlcjYwNjc1NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/606755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmerejkowsky", "html_url": "https://github.com/dmerejkowsky", "followers_url": "https://api.github.com/users/dmerejkowsky/followers", "following_url": "https://api.github.com/users/dmerejkowsky/following{/other_user}", "gists_url": "https://api.github.com/users/dmerejkowsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmerejkowsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmerejkowsky/subscriptions", "organizations_url": "https://api.github.com/users/dmerejkowsky/orgs", "repos_url": "https://api.github.com/users/dmerejkowsky/repos", "events_url": "https://api.github.com/users/dmerejkowsky/events{/privacy}", "received_events_url": "https://api.github.com/users/dmerejkowsky/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-04-07T17:58:21Z", "updated_at": "2020-06-01T17:19:57Z", "closed_at": "2020-06-01T16:41:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Bug report\r\n\r\n## What's wrong\r\n\r\nSo, not sure if it's a bug or not - maybe what I'm trying to achieve is\r\noutside the scope of the typeddjango project. Anyway, here goes.\r\n\r\nI have a `view_index()` view that delegates building the context used\r\nfor template rendering to a `IndexPresenter` class with a `get_context()`\r\nmethod:\r\n\r\nHere are the relevant snippets (tell me if you need more):\r\n\r\n```python\r\nfrom tying import TypedDict\r\nfrom models import User, Category\r\n\r\nIndexContext = TypedDict(\"IndexContext\", {\"user\": User, \"categories\": List[Category]})\r\n\r\nclass IndexPresenter:\r\n    def __init__(self, user: User):\r\n        self.user = user\r\n\r\n    def get_context(self) -> IndexContext:\r\n        categories = Category.objects.all().order_by(\"name\")\r\n        return {\"user\": self.user, \"categories\": list(categories)}\r\n\r\n@login_required()\r\ndef index(request: HttpRequest) -> HttpResponse:\r\n    user = request.user\r\n    presenter = IndexPresenter(user)\r\n    context = presenter.get_context()\r\n    return render(request, \"audiotheque/index.pug\", context)\r\n```\r\n\r\nYou can see I'm using the new ``TypedDict`` from Python 3.8\r\n\r\nThe problem is that `mypy` complains about the last line:\r\n\r\n```\r\nArgument 3 to \"render\" has incompatible type  \"IndexContext\";\r\nexpected \"Optional[Dict[str, Any]]\"\r\n```\r\n\r\n## How is that should be\r\n\r\nI guess that mypy should see that a TypedDict is compatible with a `Dict[str, Any]` somehow?\r\n\r\n## System information\r\n\r\n- OS:\r\n- `python` version: 3.8.2\r\n- `django` version: 3.0.3\r\n- `mypy` version: 0.770\r\n- `django-stubs` version: 1.5.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/349", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/349/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/349/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/349/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/349", "id": 589900059, "node_id": "MDU6SXNzdWU1ODk5MDAwNTk=", "number": 349, "title": "Contact request", "user": {"login": "kszmigiel", "id": 16846111, "node_id": "MDQ6VXNlcjE2ODQ2MTEx", "avatar_url": "https://avatars2.githubusercontent.com/u/16846111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kszmigiel", "html_url": "https://github.com/kszmigiel", "followers_url": "https://api.github.com/users/kszmigiel/followers", "following_url": "https://api.github.com/users/kszmigiel/following{/other_user}", "gists_url": "https://api.github.com/users/kszmigiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/kszmigiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kszmigiel/subscriptions", "organizations_url": "https://api.github.com/users/kszmigiel/orgs", "repos_url": "https://api.github.com/users/kszmigiel/repos", "events_url": "https://api.github.com/users/kszmigiel/events{/privacy}", "received_events_url": "https://api.github.com/users/kszmigiel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-29T22:25:12Z", "updated_at": "2020-03-30T07:36:49Z", "closed_at": "2020-03-30T07:36:49Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Hello!\r\n\r\nI know it's an unwanted way to contact you gentlemen @sobolevn @mkurnikov but I have not much time left. Yesterday I wrote emails to both of you regarding GSoC 2020, and I look forward to hearing from you. I would like to kindly ask if you could respond to me ASAP, as the deadline to send the proposal passes on Tuesday.\r\n\r\nPlease don't feel offended by my message here, I'm just a little desperate at this point.\r\n\r\nKindest regards,\r\nKacper", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/347", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/347/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/347/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/347/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/347", "id": 589851955, "node_id": "MDU6SXNzdWU1ODk4NTE5NTU=", "number": 347, "title": "\"Model\" has no attribute \"_state\"", "user": {"login": "stevanmilic", "id": 6879030, "node_id": "MDQ6VXNlcjY4NzkwMzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/6879030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stevanmilic", "html_url": "https://github.com/stevanmilic", "followers_url": "https://api.github.com/users/stevanmilic/followers", "following_url": "https://api.github.com/users/stevanmilic/following{/other_user}", "gists_url": "https://api.github.com/users/stevanmilic/gists{/gist_id}", "starred_url": "https://api.github.com/users/stevanmilic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stevanmilic/subscriptions", "organizations_url": "https://api.github.com/users/stevanmilic/orgs", "repos_url": "https://api.github.com/users/stevanmilic/repos", "events_url": "https://api.github.com/users/stevanmilic/events{/privacy}", "received_events_url": "https://api.github.com/users/stevanmilic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-29T18:22:25Z", "updated_at": "2020-03-30T07:35:40Z", "closed_at": "2020-03-30T07:35:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Bug report\r\n\r\nThe `mypy` reports that model is missing the `_state` attribute. I've checked the source code and it looks like the `ModelState` is defined, but it isn't included into `Model`.\r\n\r\n## What's wrong\r\nRun mypy on:\r\n```python\r\ndef is_updated(instance: Model):\r\n    return not instance._state.adding\r\n```\r\n\r\nAnd you will get an error:\r\n```\r\nerror: \"Model\" has no attribute \"_state\"\r\n```\r\n## How is that should be\r\n\r\nNo error should be reported since `Model` has the `_state` attribute.\r\n\r\n## System information\r\n\r\n- OS:\r\n- `python` version: 3.8\r\n- `django` version: 2.2\r\n- `mypy` version: 0.770\r\n- `django-stubs` version: 1.5.0\r\n\r\nI would be happy to provide PR, since the fix is straightforward.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/342", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/342/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/342/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/342/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/342", "id": 580913685, "node_id": "MDU6SXNzdWU1ODA5MTM2ODU=", "number": 342, "title": "Please do a new release", "user": {"login": "intgr", "id": 137616, "node_id": "MDQ6VXNlcjEzNzYxNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/137616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/intgr", "html_url": "https://github.com/intgr", "followers_url": "https://api.github.com/users/intgr/followers", "following_url": "https://api.github.com/users/intgr/following{/other_user}", "gists_url": "https://api.github.com/users/intgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/intgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/intgr/subscriptions", "organizations_url": "https://api.github.com/users/intgr/orgs", "repos_url": "https://api.github.com/users/intgr/repos", "events_url": "https://api.github.com/users/intgr/events{/privacy}", "received_events_url": "https://api.github.com/users/intgr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-13T22:52:35Z", "updated_at": "2020-03-15T15:10:26Z", "closed_at": "2020-03-14T22:10:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Now that mypy 0.770 is released and #341 added support for it, can you please do another official release?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/334", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/334/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/334/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/334/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/334", "id": 571760215, "node_id": "MDU6SXNzdWU1NzE3NjAyMTU=", "number": 334, "title": "Stubs for humanize functions should also accept integers", "user": {"login": "kevinmarsh", "id": 1423728, "node_id": "MDQ6VXNlcjE0MjM3Mjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1423728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinmarsh", "html_url": "https://github.com/kevinmarsh", "followers_url": "https://api.github.com/users/kevinmarsh/followers", "following_url": "https://api.github.com/users/kevinmarsh/following{/other_user}", "gists_url": "https://api.github.com/users/kevinmarsh/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinmarsh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinmarsh/subscriptions", "organizations_url": "https://api.github.com/users/kevinmarsh/orgs", "repos_url": "https://api.github.com/users/kevinmarsh/repos", "events_url": "https://api.github.com/users/kevinmarsh/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinmarsh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-27T01:22:43Z", "updated_at": "2020-02-27T07:10:54Z", "closed_at": "2020-02-27T07:10:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Bug report\r\n\r\n<!--\r\nHi, thanks for submitting a bug. We appreciate that.\r\n\r\nBut, we will need some information about what's wrong to help you.\r\n-->\r\n\r\n## What's wrong\r\n\r\n`ordinal`, `apnumber` and `intword` in [`django.contrib.humanize.templatetags.humanize`](https://docs.djangoproject.com/en/1.11/ref/contrib/humanize/) also accept integers (or anything that can be passed into `int()`)\r\n\r\n```\r\n>>> from django.contrib.humanize.templatetags.humanize import apnumber\r\n>>> apnumber(3)\r\n'three'\r\n>>> apnumber(3.0)\r\n'three'\r\n>>> apnumber(Decimal(3))\r\n'three'\r\n>>> apnumber('3')\r\n'three'\r\n```\r\n\r\nHowever running mypy over it produces \r\n```\r\nerror: Argument 1 to \"apnumber\" has incompatible type \"int\"; expected \"Optional[str]\"\r\n```\r\n\r\n## How is that should be\r\n\r\n`ordinal`,  `apnumber` and `intword` should also accept any input [which have a `__int__` method](https://docs.python.org/3.8/library/typing.html#typing.SupportsInt)\r\n\r\n## System information\r\n\r\n- OS:\r\n- `python` version: 3.8.1\r\n- `django` version: 2.2.10\r\n- `mypy` version: 0.761\r\n- `django-stubs` version:1.4.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/333", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/333/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/333/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/333/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/333", "id": 566244369, "node_id": "MDU6SXNzdWU1NjYyNDQzNjk=", "number": 333, "title": "Stub for `django.contrib.admin.sites.AdminSite._build_app_dict` is missing", "user": {"login": "AndreyMZ", "id": 9609370, "node_id": "MDQ6VXNlcjk2MDkzNzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9609370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreyMZ", "html_url": "https://github.com/AndreyMZ", "followers_url": "https://api.github.com/users/AndreyMZ/followers", "following_url": "https://api.github.com/users/AndreyMZ/following{/other_user}", "gists_url": "https://api.github.com/users/AndreyMZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreyMZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreyMZ/subscriptions", "organizations_url": "https://api.github.com/users/AndreyMZ/orgs", "repos_url": "https://api.github.com/users/AndreyMZ/repos", "events_url": "https://api.github.com/users/AndreyMZ/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreyMZ/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-02-17T11:43:16Z", "updated_at": "2020-07-21T05:05:01Z", "closed_at": "2020-04-04T17:38:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Bug report\r\n\r\n## What's wrong\r\n\r\nThe following code produces the following warning.\r\n\r\n`myproject/apps/admin/sites.py`:\r\n~~~py\r\nclass MyAdminSite(admin.AdminSite):\r\n    def get_app_list(self, request: WSGIRequest) -> List[Any]:\r\n        app_dict = self._build_app_dict(request)\r\n        # ...\r\n~~~\r\n\r\n> Unresolved attribute reference '_build_app_dict' for class 'MyAdminSite'\r\n\r\n## How is that should be\r\n\r\nNo errors/warnings.\r\n\r\n## System information\r\n\r\n- OS: Windows 10\r\n- `python` version: 3.7.4\r\n- `django` version: 2.2.10\r\n- `mypy` version: -\r\n- `PyCharm` version: 2019.3.3 (Community Edition)\r\n- `django-stubs` version: 1.4.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/314", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/314/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/314/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/314/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/314", "id": 558498907, "node_id": "MDU6SXNzdWU1NTg0OTg5MDc=", "number": 314, "title": "django.utils.learn_cache_key incorrect type", "user": {"login": "vsalvino", "id": 13453401, "node_id": "MDQ6VXNlcjEzNDUzNDAx", "avatar_url": "https://avatars3.githubusercontent.com/u/13453401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsalvino", "html_url": "https://github.com/vsalvino", "followers_url": "https://api.github.com/users/vsalvino/followers", "following_url": "https://api.github.com/users/vsalvino/following{/other_user}", "gists_url": "https://api.github.com/users/vsalvino/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsalvino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsalvino/subscriptions", "organizations_url": "https://api.github.com/users/vsalvino/orgs", "repos_url": "https://api.github.com/users/vsalvino/repos", "events_url": "https://api.github.com/users/vsalvino/events{/privacy}", "received_events_url": "https://api.github.com/users/vsalvino/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-01T07:14:15Z", "updated_at": "2020-02-01T19:03:47Z", "closed_at": "2020-02-01T19:03:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Bug report\r\n\r\n## What's wrong\r\n`django.utils.learn_cache_key()` has the incorrect type specified for the `cache` parameter.\r\n\r\nhttps://github.com/typeddjango/django-stubs/blob/f89a0fbbaa53a23b80fd0b9bfe8fdbf71da35de8/django-stubs/utils/cache.pyi#L31\r\n\r\nIt is currently set as `Optional[LocMemCache]` but in reality this can be any valid type of `BaseCache`. Looking into the function you can see if `cache=None` then it is pulled from `django.core.cache.caches` which returns a `BaseCache` type.\r\n\r\n## System information\r\n\r\n- OS: Windows 10, 64-bit\r\n- `python` version: 3.8.1, 64-bit\r\n- `django` version: 3.0.2\r\n- `mypy` version: 0.761\r\n- `django-stubs` version: 1.4.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/309", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/309/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/309/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/309/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/309", "id": 556573480, "node_id": "MDU6SXNzdWU1NTY1NzM0ODA=", "number": 309, "title": "Can't assign AnonymousUser to request.user", "user": {"login": "lfrodrigues", "id": 301004, "node_id": "MDQ6VXNlcjMwMTAwNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/301004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lfrodrigues", "html_url": "https://github.com/lfrodrigues", "followers_url": "https://api.github.com/users/lfrodrigues/followers", "following_url": "https://api.github.com/users/lfrodrigues/following{/other_user}", "gists_url": "https://api.github.com/users/lfrodrigues/gists{/gist_id}", "starred_url": "https://api.github.com/users/lfrodrigues/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lfrodrigues/subscriptions", "organizations_url": "https://api.github.com/users/lfrodrigues/orgs", "repos_url": "https://api.github.com/users/lfrodrigues/repos", "events_url": "https://api.github.com/users/lfrodrigues/events{/privacy}", "received_events_url": "https://api.github.com/users/lfrodrigues/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-29T00:44:20Z", "updated_at": "2020-06-03T17:29:20Z", "closed_at": "2020-06-03T17:29:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Bug report\r\n\r\nI'm implementing my own logout routine and need to assign AnonymousUser to request.user like:\r\n\r\n```\r\n        if hasattr(request, 'user'):\r\n            from django.contrib.auth.models import AnonymousUser\r\n\r\n            request.user = AnonymousUser()\r\n```\r\n\r\n\r\n## What's wrong\r\nThe code above has the error:\r\n\r\nerror: Incompatible types in assignment (expression has type \"AnonymousUser\", variable has type \"AbstractBaseUser\")\r\n\r\n## How is that should be\r\n\r\nrequest.user should allow both AnonymousUser and AbstractBaseUser\r\n\r\n\r\n## System information\r\n\r\n- OS: Ubuntu 18.04\r\n- `python` version: 3.6\r\n- `django` version: 2.2\r\n- `mypy` version: 0.761\r\n- `django-stubs` version: 1.4.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/308", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/308/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/308/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/308/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/308", "id": 555915727, "node_id": "MDU6SXNzdWU1NTU5MTU3Mjc=", "number": 308, "title": "IndexError in `is_any_parametrized_manager`", "user": {"login": "dfarley1", "id": 5204693, "node_id": "MDQ6VXNlcjUyMDQ2OTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/5204693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfarley1", "html_url": "https://github.com/dfarley1", "followers_url": "https://api.github.com/users/dfarley1/followers", "following_url": "https://api.github.com/users/dfarley1/following{/other_user}", "gists_url": "https://api.github.com/users/dfarley1/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfarley1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfarley1/subscriptions", "organizations_url": "https://api.github.com/users/dfarley1/orgs", "repos_url": "https://api.github.com/users/dfarley1/repos", "events_url": "https://api.github.com/users/dfarley1/events{/privacy}", "received_events_url": "https://api.github.com/users/dfarley1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-28T00:31:14Z", "updated_at": "2020-02-11T21:25:26Z", "closed_at": "2020-02-11T21:25:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "## What's wrong\r\n\r\nI'm adding mypy and djang-stubs to our repo but I'm running into the following error when enabling the django-stubs plugin. This is happening even with my own INSTALLED_APPS disabled in the settings module:\r\n```\r\nINSTALLED_APPS = [\r\n    \"django.contrib.auth\",\r\n    \"django.contrib.contenttypes\",\r\n    \"django.contrib.sessions\",\r\n}\r\n```\r\n\r\n```\r\n/depot/vendor/Django/django/contrib/contenttypes/models.py:133: error: INTERNAL ERROR -- Please try using mypy master on Github:\r\nhttps://mypy.rtfd.io/en/latest/common_issues.html#using-a-development-mypy-build\r\nPlease report a bug at https://github.com/python/mypy/issues\r\nversion: 0.760\r\n/depot/vendor/Django/django/contrib/sessions/base_session.py:26: : note: use --pdb to drop into pdb\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.6/runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"/usr/lib64/python3.6/runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/usr/lib64/python3.6/site-packages/mypy/__main__.py\", line 12, in <module>\r\n    main(None, sys.stdout, sys.stderr)\r\n  File \"/usr/lib64/python3.6/site-packages/mypy/main.py\", line 89, in main\r\n    res = build.build(sources, options, None, flush_errors, fscache, stdout, stderr)\r\n  File \"/usr/lib64/python3.6/site-packages/mypy/build.py\", line 167, in build\r\n    sources, options, alt_lib_path, flush_errors, fscache, stdout, stderr, extra_plugins\r\n  File \"/usr/lib64/python3.6/site-packages/mypy/build.py\", line 235, in _build\r\n    graph = dispatch(sources, manager, stdout)\r\n  File \"/usr/lib64/python3.6/site-packages/mypy/build.py\", line 2611, in dispatch\r\n    process_graph(graph, manager)\r\n  File \"/usr/lib64/python3.6/site-packages/mypy/build.py\", line 2918, in process_graph\r\n    process_stale_scc(graph, scc, manager)\r\n  File \"/usr/lib64/python3.6/site-packages/mypy/build.py\", line 3011, in process_stale_scc\r\n    mypy.semanal_main.semantic_analysis_for_scc(graph, scc, manager.errors)\r\n  File \"/usr/lib64/python3.6/site-packages/mypy/semanal_main.py\", line 77, in semantic_analysis_for_scc\r\n    process_top_levels(graph, scc, patches)\r\n  File \"/usr/lib64/python3.6/site-packages/mypy/semanal_main.py\", line 202, in process_top_levels\r\n    patches)\r\n  File \"/usr/lib64/python3.6/site-packages/mypy/semanal_main.py\", line 330, in semantic_analyze_target\r\n    active_type=active_type)\r\n  File \"/usr/lib64/python3.6/site-packages/mypy/semanal.py\", line 378, in refresh_partial\r\n    self.refresh_top_level(node)\r\n  File \"/usr/lib64/python3.6/site-packages/mypy/semanal.py\", line 389, in refresh_top_level\r\n    self.accept(d)\r\n  File \"/usr/lib64/python3.6/site-packages/mypy/semanal.py\", line 4665, in accept\r\n    node.accept(self)\r\n  File \"/usr/lib64/python3.6/site-packages/mypy/nodes.py\", line 939, in accept\r\n    return visitor.visit_class_def(self)\r\n  File \"/usr/lib64/python3.6/site-packages/mypy/semanal.py\", line 1029, in visit_class_def\r\n    self.analyze_class(defn)\r\n  File \"/usr/lib64/python3.6/site-packages/mypy/semanal.py\", line 1106, in analyze_class\r\n    self.analyze_class_body_common(defn)\r\n  File \"/usr/lib64/python3.6/site-packages/mypy/semanal.py\", line 1115, in analyze_class_body_common\r\n    self.apply_class_plugin_hooks(defn)\r\n  File \"/usr/lib64/python3.6/site-packages/mypy/semanal.py\", line 1175, in apply_class_plugin_hooks\r\n    hook(ClassDefContext(defn, base_expr, self))\r\n  File \"/usr/lib64/python3.6/site-packages/mypy_django_plugin/main.py\", line 37, in transform_model_class\r\n    process_model_class(ctx, django_context)\r\n  File \"/usr/lib64/python3.6/site-packages/mypy_django_plugin/transformers/models.py\", line 357, in process_model_class\r\n    initializer_cls(ctx, django_context).run()\r\n  File \"/usr/lib64/python3.6/site-packages/mypy_django_plugin/transformers/models.py\", line 71, in run\r\n    self.run_with_model_cls(model_cls)\r\n  File \"/usr/lib64/python3.6/site-packages/mypy_django_plugin/transformers/models.py\", line 225, in run_with_model_cls\r\n    if not self.has_any_parametrized_manager_as_base(manager_info):\r\n  File \"/usr/lib64/python3.6/site-packages/mypy_django_plugin/transformers/models.py\", line 148, in has_any_parametrized_manager_as_base\r\n    if self.is_any_parametrized_manager(base):\r\n  File \"/usr/lib64/python3.6/site-packages/mypy_django_plugin/transformers/models.py\", line 153, in is_any_parametrized_manager\r\n    return typ.type.fullname in fullnames.MANAGER_CLASSES and isinstance(typ.args[0], AnyType)\r\nIndexError: list index out of range\r\n```\r\n\r\n## System information\r\n\r\n- OS: Gentoo\r\n- `python` version: 3.6\r\n- `django` version: 2.2.9\r\n- `mypy` version: 0.760\r\n- `django-stubs` version: 1.4.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/297", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/297/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/297/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/297/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/297", "id": 549882369, "node_id": "MDU6SXNzdWU1NDk4ODIzNjk=", "number": 297, "title": "`natural_key.dependencies` \"has no attribute\" error", "user": {"login": "dfarley1", "id": 5204693, "node_id": "MDQ6VXNlcjUyMDQ2OTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/5204693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfarley1", "html_url": "https://github.com/dfarley1", "followers_url": "https://api.github.com/users/dfarley1/followers", "following_url": "https://api.github.com/users/dfarley1/following{/other_user}", "gists_url": "https://api.github.com/users/dfarley1/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfarley1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfarley1/subscriptions", "organizations_url": "https://api.github.com/users/dfarley1/orgs", "repos_url": "https://api.github.com/users/dfarley1/repos", "events_url": "https://api.github.com/users/dfarley1/events{/privacy}", "received_events_url": "https://api.github.com/users/dfarley1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-14T23:42:58Z", "updated_at": "2020-01-28T00:31:51Z", "closed_at": "2020-01-28T00:31:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Bug report\r\n\r\n## What's wrong\r\n\r\nI have a model which defines a `natural_key()` method as well as `natural_key.dependencies` (per https://docs.djangoproject.com/en/2.2/topics/serialization/#dependencies-during-serialization)\r\n```\r\nclass Metric(models.Model):\r\n    category = models.ForeignKey(MetricCategory, on_delete=models.CASCADE)\r\n    def natural_key(self):\r\n        try:\r\n            category_key = self.category.natural_key()\r\n        except Exception:\r\n            category_key = None\r\n        return [\r\n            (\"field_name\", self.field_name),\r\n            (\"category\", category_key),\r\n            (\"type\", self.type),\r\n        ]\r\n\r\n    natural_key.dependencies = [\r\n        \"config.statfielddesc\",\r\n        \"catalog.metriccategory\",\r\n    ]\r\n```\r\nRunning Mypy on this code gives me `models.py: error: \"Callable[[Metric], Any]\" has no attribute \"dependencies\"`. I haven't found any solution for this except to `# type: ignore` all these errors. I don't see any references to `dependencies` in the stubs either, is this supported?\r\n\r\n## System information\r\n\r\n- OS: Gentoo\r\n- `python` version: 3.6\r\n- `django` version: 2.2\r\n- `mypy` version: 0.760\r\n- `django-stubs` version: 1.4.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/295", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/295/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/295/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/295", "id": 549432988, "node_id": "MDU6SXNzdWU1NDk0MzI5ODg=", "number": 295, "title": "Manager has no attribute _db", "user": {"login": "canassa", "id": 288227, "node_id": "MDQ6VXNlcjI4ODIyNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/288227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canassa", "html_url": "https://github.com/canassa", "followers_url": "https://api.github.com/users/canassa/followers", "following_url": "https://api.github.com/users/canassa/following{/other_user}", "gists_url": "https://api.github.com/users/canassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/canassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canassa/subscriptions", "organizations_url": "https://api.github.com/users/canassa/orgs", "repos_url": "https://api.github.com/users/canassa/repos", "events_url": "https://api.github.com/users/canassa/events{/privacy}", "received_events_url": "https://api.github.com/users/canassa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-14T09:18:57Z", "updated_at": "2020-01-14T14:05:29Z", "closed_at": "2020-01-14T14:05:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Bug report\r\n\r\n## What's wrong\r\n\r\nThe following example from the Django documentation doesn't work:\r\n\r\n```python\r\nclass PersonQuerySet(models.QuerySet):\r\n    def authors(self):\r\n        return self.filter(role='A')\r\n\r\n    def editors(self):\r\n        return self.filter(role='E')\r\n\r\nclass PersonManager(models.Manager):\r\n    def get_queryset(self):\r\n        return PersonQuerySet(self.model, using=self._db)\r\n\r\n    def authors(self):\r\n        return self.get_queryset().authors()\r\n\r\n    def editors(self):\r\n        return self.get_queryset().editors()\r\n```\r\n\r\ndjango-stubs is not defining the `_db` property:\r\n\r\n```\r\nerror: \"PersonManager\" has no attribute \"_db\"\r\n```\r\n\r\n## System information\r\n\r\n- OS: OS X\r\n- `python` version: 3.8.1\r\n- `django` version: 3.0.2\r\n- `mypy` version: 0.761\r\n- `django-stubs` version: 1.4.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/293", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/293/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/293/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/293/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/293", "id": 548095066, "node_id": "MDU6SXNzdWU1NDgwOTUwNjY=", "number": 293, "title": "Incorrect type for django.core.files.File.file", "user": {"login": "danifus", "id": 706362, "node_id": "MDQ6VXNlcjcwNjM2Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/706362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danifus", "html_url": "https://github.com/danifus", "followers_url": "https://api.github.com/users/danifus/followers", "following_url": "https://api.github.com/users/danifus/following{/other_user}", "gists_url": "https://api.github.com/users/danifus/gists{/gist_id}", "starred_url": "https://api.github.com/users/danifus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danifus/subscriptions", "organizations_url": "https://api.github.com/users/danifus/orgs", "repos_url": "https://api.github.com/users/danifus/repos", "events_url": "https://api.github.com/users/danifus/events{/privacy}", "received_events_url": "https://api.github.com/users/danifus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-10T13:59:32Z", "updated_at": "2020-01-11T11:27:46Z", "closed_at": "2020-01-11T11:27:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Bug report\r\n\r\n<!--\r\nHi, thanks for submitting a bug. We appreciate that.\r\n\r\nBut, we will need some information about what's wrong to help you.\r\n-->\r\n\r\n## What's wrong\r\n\r\nTrying to assign the result of `open()` to a `File.file` attribute results in the following warning:\r\n\r\n```\r\nIncompatible types in assignment (expression has type \"IO[Any]\", variable has type \"StringIO\")\r\n``` \r\n\r\n```\r\n# Failing example:\r\n\r\nimport django.core.files\r\n\r\nclass MyFile(django.core.files.File):\r\n\r\n    def open(self, mode=None):\r\n        # (This is the File.open() method from django)\r\n        if not self.closed:\r\n            self.seek(0)\r\n        elif self.name and os.path.exists(self.name):\r\n            self.file = open(self.name, mode or self.mode)\r\n        else:\r\n            raise ValueError(\"The file cannot be reopened.\")\r\n        return self\r\n```\r\n\r\n## How is that should be\r\n\r\nNo error should be raised.\r\n\r\nhttps://github.com/typeddjango/django-stubs/blob/master/django-stubs/core/files/base.pyi#L11\r\n\r\nis `file: StringIO = ...` but should probably be `file: IO[Any] = ...`\r\n\r\n## System information\r\n\r\n- OS: mac\r\n- `python` version: 3.7.5\r\n- `django` version: 2.2\r\n- `mypy` version: 0.750\r\n- `django-stubs` version: 1.3.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/291", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/291/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/291/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/291", "id": 547070858, "node_id": "MDU6SXNzdWU1NDcwNzA4NTg=", "number": 291, "title": "Missing OutputWrapper.write() stub", "user": {"login": "Tatsh", "id": 724848, "node_id": "MDQ6VXNlcjcyNDg0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/724848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tatsh", "html_url": "https://github.com/Tatsh", "followers_url": "https://api.github.com/users/Tatsh/followers", "following_url": "https://api.github.com/users/Tatsh/following{/other_user}", "gists_url": "https://api.github.com/users/Tatsh/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tatsh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tatsh/subscriptions", "organizations_url": "https://api.github.com/users/Tatsh/orgs", "repos_url": "https://api.github.com/users/Tatsh/repos", "events_url": "https://api.github.com/users/Tatsh/events{/privacy}", "received_events_url": "https://api.github.com/users/Tatsh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-08T19:56:55Z", "updated_at": "2020-01-27T22:34:14Z", "closed_at": "2020-01-27T22:34:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Bug report\r\n\r\n`OutputWrapper.write()` only accepts one argument (as it inherits from `TextIOBase`).\r\n\r\n## What's wrong\r\n\r\n`OutputWrapper.write()` accepts a style function argument, but this is not in the stub. As a result, this error appears:\r\n\r\n```\r\nerror: Too many arguments for \"write\" of \"TextIOBase\"\r\n```\r\n\r\nExample management command:\r\n\r\n```python\r\nfrom django.core.management.base import BaseCommand\r\n\r\n\r\nclass NewCommand(BaseCommand):\r\n    def handle(self, *args: Any, **kwargs: Any) -> None:\r\n        self.stdout.write('Doing something', self.style.MIGRATE_LABEL)\r\n```\r\n\r\n## How is that should be\r\n\r\nThere should not be any error.\r\n\r\nThe stub should be similar to:\r\n\r\n```python\r\nclass OutputWrapper(TextIOBase):\r\n    ...\r\n    def write(msg: str, style_func: Optional[Callable[[str], str]] = None, ending: Optional[str] = None): ...\r\n```\r\n\r\nMaybe it takes `AnyStr` but I'm not sure.\r\n\r\n## System information\r\n\r\n- OS: Linux\r\n- `python` version: 3.7\r\n- `django` version: 2.2.6\r\n- `mypy` version: 0.761\r\n- `django-stubs` version: 1.4.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/243", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/243/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/243/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/243", "id": 532094909, "node_id": "MDU6SXNzdWU1MzIwOTQ5MDk=", "number": 243, "title": "Error in NewSemanalDjangoPlugin.get_additional_deps: 'str' object is not callable", "user": {"login": "mattbonnell", "id": 26067293, "node_id": "MDQ6VXNlcjI2MDY3Mjkz", "avatar_url": "https://avatars2.githubusercontent.com/u/26067293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattbonnell", "html_url": "https://github.com/mattbonnell", "followers_url": "https://api.github.com/users/mattbonnell/followers", "following_url": "https://api.github.com/users/mattbonnell/following{/other_user}", "gists_url": "https://api.github.com/users/mattbonnell/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattbonnell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattbonnell/subscriptions", "organizations_url": "https://api.github.com/users/mattbonnell/orgs", "repos_url": "https://api.github.com/users/mattbonnell/repos", "events_url": "https://api.github.com/users/mattbonnell/events{/privacy}", "received_events_url": "https://api.github.com/users/mattbonnell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-03T16:10:13Z", "updated_at": "2019-12-06T20:40:02Z", "closed_at": "2019-12-06T20:40:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Bug report\r\n\r\n## What's wrong\r\nI get this error when I try to run mypy from the command line:\r\n``` \r\nFile \"C:\\cygwin64\\home\\bonm020\\.virtualenvs\\relationship-index-izKo2f_E\\lib\\site-packages\\mypy_django_plugin\\main.py\", line 124, in get_additional_deps\r\n    if file.fullname() == 'django.conf' and self.django_context.django_settings_module:\r\nTypeError: 'str' object is not callable\r\n```\r\n\r\n## How is that should be\r\nThis is the output when I disable the plugin:\r\n```\r\n$ python -m mypy --ignore-missing-imports --follow-imports=silent --show-column-numbers d:\\\\dev\\\\relationship-index\\\\relationshipindex\\\\urls.py\r\nd:\\dev\\relationship-index\\relationshipindex\\urls.py:3:1: error: Module 'relationshipindex' has no attribute 'api'\r\nFound 1 error in 1 file (checked 1 source file)\r\n```\r\n\r\n## System information\r\n\r\n- OS:\r\n- `python` version: 3.7.4\r\n- `django` version: 2.2.7\r\n- `mypy` version: 0.750\r\n- `django-stubs` version: 1.2.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/241", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/241/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/241/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/241/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/241", "id": 531254092, "node_id": "MDU6SXNzdWU1MzEyNTQwOTI=", "number": 241, "title": "New release", "user": {"login": "lundberg", "id": 137268, "node_id": "MDQ6VXNlcjEzNzI2OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/137268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lundberg", "html_url": "https://github.com/lundberg", "followers_url": "https://api.github.com/users/lundberg/followers", "following_url": "https://api.github.com/users/lundberg/following{/other_user}", "gists_url": "https://api.github.com/users/lundberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/lundberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lundberg/subscriptions", "organizations_url": "https://api.github.com/users/lundberg/orgs", "repos_url": "https://api.github.com/users/lundberg/repos", "events_url": "https://api.github.com/users/lundberg/events{/privacy}", "received_events_url": "https://api.github.com/users/lundberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-02T16:31:49Z", "updated_at": "2019-12-06T23:10:12Z", "closed_at": "2019-12-06T23:10:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "A new release of master to pypi would be nice, thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/236", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/236/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/236/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/236", "id": 530508119, "node_id": "MDU6SXNzdWU1MzA1MDgxMTk=", "number": 236, "title": "Error with latest mypy release (0.750)", "user": {"login": "anlambert", "id": 5493543, "node_id": "MDQ6VXNlcjU0OTM1NDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/5493543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anlambert", "html_url": "https://github.com/anlambert", "followers_url": "https://api.github.com/users/anlambert/followers", "following_url": "https://api.github.com/users/anlambert/following{/other_user}", "gists_url": "https://api.github.com/users/anlambert/gists{/gist_id}", "starred_url": "https://api.github.com/users/anlambert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anlambert/subscriptions", "organizations_url": "https://api.github.com/users/anlambert/orgs", "repos_url": "https://api.github.com/users/anlambert/repos", "events_url": "https://api.github.com/users/anlambert/events{/privacy}", "received_events_url": "https://api.github.com/users/anlambert/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-29T23:32:48Z", "updated_at": "2019-11-30T19:35:31Z", "closed_at": "2019-11-30T19:35:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Due to that [recent change](https://github.com/python/mypy/commit/e97377c454a1d5c019e9c56871d5f229db6b47b2#diff-abd352ca9f518956b2d76e1cfc9ad35b) in `mypy` source code, the following error is reported when using `django-stubs`\r\n```\r\nmypy run-test: commands[0] | mypy swh\r\nTraceback (most recent call last):\r\n  File \"/home/antoine/swh/swh-environment/swh-web/.tox/mypy/bin/mypy\", line 8, in <module>\r\n    sys.exit(console_entry())\r\n  File \"/home/antoine/swh/swh-environment/swh-web/.tox/mypy/lib/python3.7/site-packages/mypy/__main__.py\", line 8, in console_entry\r\n    main(None, sys.stdout, sys.stderr)\r\n  File \"mypy/main.py\", line 89, in main\r\n  File \"mypy/build.py\", line 166, in build\r\n  File \"mypy/build.py\", line 235, in _build\r\n  File \"mypy/build.py\", line 2567, in dispatch\r\n  File \"mypy/build.py\", line 2725, in load_graph\r\n  File \"mypy/build.py\", line 1826, in __init__\r\n  File \"mypy/build.py\", line 2101, in compute_dependencies\r\n  File \"mypy/plugin.py\", line 785, in get_additional_deps\r\n  File \"mypy/plugin.py\", line 711, in get_additional_deps\r\n  File \"/home/antoine/swh/swh-environment/swh-web/.tox/mypy/lib/python3.7/site-packages/mypy_django_plugin/main.py\", line 124, in get_additional_deps\r\n    if file.fullname() == 'django.conf' and self.django_context.django_settings_module:\r\nTypeError: 'str' object is not callable\r\nERROR: InvocationError for command /home/antoine/swh/swh-environment/swh-web/.tox/mypy/bin/mypy swh (exited with code 1)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/231", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/231/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/231/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/231", "id": 524623905, "node_id": "MDU6SXNzdWU1MjQ2MjM5MDU=", "number": 231, "title": "PermissionsMixin.has_perm and .has_perms have incorrect typing for `obj` argument", "user": {"login": "asikowitz", "id": 5423622, "node_id": "MDQ6VXNlcjU0MjM2MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5423622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asikowitz", "html_url": "https://github.com/asikowitz", "followers_url": "https://api.github.com/users/asikowitz/followers", "following_url": "https://api.github.com/users/asikowitz/following{/other_user}", "gists_url": "https://api.github.com/users/asikowitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/asikowitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asikowitz/subscriptions", "organizations_url": "https://api.github.com/users/asikowitz/orgs", "repos_url": "https://api.github.com/users/asikowitz/repos", "events_url": "https://api.github.com/users/asikowitz/events{/privacy}", "received_events_url": "https://api.github.com/users/asikowitz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-18T21:15:30Z", "updated_at": "2019-11-19T01:54:18Z", "closed_at": "2019-11-19T01:54:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Bug report\r\n## What's wrong\r\nWhen type checking the following function with mypy:\r\n```\r\nfrom django.contrib.auth.models import PermissionsMixin\r\nfrom django.db import models\r\n\r\ndef f(user: PermissionsMixin, model: models.Model):\r\n    has_perm = user.has_perm(\"app.permission\", model)\r\n    has_perms = user.has_perms((\"app.permission1\",\"app.permission2\"), model)\r\n    return has_perm and has_perms\r\n```\r\nyou get the following errors:\r\n```\r\nerror: Argument 2 to \"has_perm\" of \"PermissionsMixin\" has incompatible type \"Model\"; expected \"Optional[str]\"\r\nerror: Argument 2 to \"has_perms\" of \"PermissionsMixin\" has incompatible type \"Model\"; expected \"None\"\r\n```\r\nThe documentation on this function, [here](https://docs.djangoproject.com/en/2.2/ref/contrib/auth/#django.contrib.auth.models.User.has_perm), as well as relevant documentation [here](https://docs.djangoproject.com/en/2.2/ref/contrib/auth/#django.contrib.auth.backends.ModelBackend) specify that the `obj` argument allows for an object to be passed in for object-based permissions.\r\n\r\n## How is that should be\r\nThere should be no mypy errors. At the least, it should allow an input of type `Model`, although due to custom backends anything can really be passed in.\r\n\r\n## System information\r\n\r\n- OS: Ubuntu 18.04.3 LTS\r\n- `python` version: 3.7.4\r\n- `django` version: 2.2.6\r\n- `mypy` version: 0.720\r\n- `django-stubs` version: 1.1.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/228", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/228/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/228/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/228", "id": 521863210, "node_id": "MDU6SXNzdWU1MjE4NjMyMTA=", "number": 228, "title": "is_relation and related_model attributes are not declared on the Field stub", "user": {"login": "youssefm", "id": 1513212, "node_id": "MDQ6VXNlcjE1MTMyMTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1513212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/youssefm", "html_url": "https://github.com/youssefm", "followers_url": "https://api.github.com/users/youssefm/followers", "following_url": "https://api.github.com/users/youssefm/following{/other_user}", "gists_url": "https://api.github.com/users/youssefm/gists{/gist_id}", "starred_url": "https://api.github.com/users/youssefm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/youssefm/subscriptions", "organizations_url": "https://api.github.com/users/youssefm/orgs", "repos_url": "https://api.github.com/users/youssefm/repos", "events_url": "https://api.github.com/users/youssefm/events{/privacy}", "received_events_url": "https://api.github.com/users/youssefm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-12T23:30:11Z", "updated_at": "2019-11-30T19:40:23Z", "closed_at": "2019-11-30T19:40:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Bug report\r\n\r\n## What's wrong\r\n\r\nWhen type checking a function that looks like this with mypy\r\n\r\n```python\r\ndef my_function(model_cls: Type[models.Model]) -> None:\r\n    try:\r\n        django_field = model_cls._meta.get_field('my_field')\r\n    except FieldDoesNotExist:\r\n        return\r\n    if django_field and django_field.is_relation:\r\n        related_model = django_field.related_model\r\n```\r\n\r\nyou get the following errors:\r\n\r\n```\r\nerror: \"Field[Any, Any]\" has no attribute \"is_relation\"\r\nerror: \"Field[Any, Any]\" has no attribute \"related_model\"\r\n```\r\n\r\nThese are attributes that are always available on Fields and should be declared in the stub. See:\r\n\r\nhttps://github.com/django/django/blob/89368ab6e358ebe29a0417d65209182238daa245/django/db/models/fields/__init__.py#L120\r\n\r\nand\r\n\r\nhttps://github.com/django/django/blob/89368ab6e358ebe29a0417d65209182238daa245/django/db/models/fields/__init__.py#L145\r\n\r\nI believe the right annotations are `bool` and `Optional[Type[Model]]` respectively.\r\n\r\n## How is that should be\r\n\r\nThere shouldn't be any mypy errors.\r\n\r\n## System information\r\n\r\n- OS: Mac OS 10.14\r\n- `python` version: 3.6.5\r\n- `django` version: 2.2.4\r\n- `mypy` version: 0.740\r\n- `django-stubs` version: 1.2.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/223", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/223/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/223/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/223", "id": 520102366, "node_id": "MDU6SXNzdWU1MjAxMDIzNjY=", "number": 223, "title": "QuerySet: Expression of type 'NameExpr' is not supported", "user": {"login": "Tatsh", "id": 724848, "node_id": "MDQ6VXNlcjcyNDg0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/724848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tatsh", "html_url": "https://github.com/Tatsh", "followers_url": "https://api.github.com/users/Tatsh/followers", "following_url": "https://api.github.com/users/Tatsh/following{/other_user}", "gists_url": "https://api.github.com/users/Tatsh/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tatsh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tatsh/subscriptions", "organizations_url": "https://api.github.com/users/Tatsh/orgs", "repos_url": "https://api.github.com/users/Tatsh/repos", "events_url": "https://api.github.com/users/Tatsh/events{/privacy}", "received_events_url": "https://api.github.com/users/Tatsh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-08T16:15:43Z", "updated_at": "2019-12-12T05:20:53Z", "closed_at": "2019-12-12T05:20:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Bug report\r\n\r\nA QuerySet expression like the following gives this odd message from Mypy:\r\n\r\n```python\r\ndef get_stuff():\r\n    return (\r\n        ModelName.objects.get(id=zid)\r\n            .otherobject_set.order_by(...)\r\n            .distinct(...)\r\n            .values_list(..., named=True)\r\n    )\r\n```\r\n\r\nI do not know if this bug is in Django-stubs or in Mypy.\r\n\r\n## How is that should be\r\n\r\nThis error should not appear.\r\n\r\n## System information\r\n\r\n- OS: Linux\r\n- `python` version: 3.6\r\n- `django` version: 2.2.6\r\n- `mypy` version: 0.720\r\n- `django-stubs` version: 1.1.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/222", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/222/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/222/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/222", "id": 517860892, "node_id": "MDU6SXNzdWU1MTc4NjA4OTI=", "number": 222, "title": "AttributeError: 'ManyToManyRel' object has no attribute 'has_default'", "user": {"login": "cwittlinger", "id": 17162955, "node_id": "MDQ6VXNlcjE3MTYyOTU1", "avatar_url": "https://avatars1.githubusercontent.com/u/17162955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cwittlinger", "html_url": "https://github.com/cwittlinger", "followers_url": "https://api.github.com/users/cwittlinger/followers", "following_url": "https://api.github.com/users/cwittlinger/following{/other_user}", "gists_url": "https://api.github.com/users/cwittlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/cwittlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cwittlinger/subscriptions", "organizations_url": "https://api.github.com/users/cwittlinger/orgs", "repos_url": "https://api.github.com/users/cwittlinger/repos", "events_url": "https://api.github.com/users/cwittlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/cwittlinger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-05T15:55:12Z", "updated_at": "2019-12-12T05:09:48Z", "closed_at": "2019-12-12T05:09:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Bug report\r\n\r\n<!--\r\nHi, thanks for submitting a bug. We appreciate that.\r\n\r\nBut, we will need some information about what's wrong to help you.\r\n-->\r\n\r\nAttributeError: 'ManyToManyRel' object has no attribute 'has_default' occurs when using a ManyToMany Queryset\r\n\r\n## What's wrong\r\n\r\n<!--\r\nDescribe what is not working.\r\n\r\nPlease, attach a traceback.\r\nWe would also appreciate a failing test case.\r\nThat is EXTREMELY helpful!\r\n-->\r\n```\r\nTraceback (most recent call last):\r\n  File \"mypy/checkexpr.py\", line 3603, in accept\r\n  File \"mypy/nodes.py\", line 1532, in accept\r\n  File \"mypy/checkexpr.py\", line 264, in visit_call_expr\r\n  File \"mypy/checkexpr.py\", line 341, in visit_call_expr_inner\r\n  File \"mypy/checkexpr.py\", line 730, in check_call_expr_with_callee_type\r\n  File \"mypy/checkexpr.py\", line 789, in check_call\r\n  File \"mypy/checkexpr.py\", line 897, in check_callable_call\r\n  File \"mypy/checkexpr.py\", line 638, in apply_function_plugin\r\n  File \"/home/christopher/.local/share/virtualenvs/workbench-yfRj1nF_-/home/christopher/.pyenv/shims/python/lib/python3.6/site-packages/mypy_django_plugin/transformers/querysets.py\", line 184, in extract_proper_type_queryset_values\r\n    lookup=field_lookup, method='values')\r\n  File \"/home/christopher/.local/share/virtualenvs/workbench-yfRj1nF_-/home/christopher/.pyenv/shims/python/lib/python3.6/site-packages/mypy_django_plugin/transformers/querysets.py\", line 57, in get_field_type_from_lookup\r\n    lookup_field, method=method)\r\n  File \"/home/christopher/.local/share/virtualenvs/workbench-yfRj1nF_-/home/christopher/.pyenv/shims/python/lib/python3.6/site-packages/mypy_django_plugin/django/context.py\", line 268, in get_field_get_type\r\n    is_nullable = self.get_field_nullability(field, method)\r\n  File \"/home/christopher/.local/share/virtualenvs/workbench-yfRj1nF_-/home/christopher/.pyenv/shims/python/lib/python3.6/site-packages/mypy_django_plugin/django/context.py\", line 241, in get_field_nullability\r\n    if field.has_default():\r\nAttributeError: 'ManyToManyRel' object has no attribute 'has_default'\r\n```\r\n## How is that should be\r\n\r\n<!-- Describe how it should work. -->\r\nI believe (not sure at all), that either a check has to be made, if field has a method called has_default and if not, field.field.has_default() has to be checked.\r\n\r\n## System information\r\n\r\n- OS: Manjaro\r\n- `python` version: 3.6.7\r\n- `django` version: 2.2.7\r\n- `mypy` version: 0.7.4\r\n- `django-stubs` version: 1.2.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/219", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/219/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/219/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/219", "id": 514499311, "node_id": "MDU6SXNzdWU1MTQ0OTkzMTE=", "number": 219, "title": "error: Return type \"Optional[bool]\" of \"test_func\" incompatible with return type \"None\" in supertype \"UserPassesTestMixin\"", "user": {"login": "yhoiseth", "id": 8469540, "node_id": "MDQ6VXNlcjg0Njk1NDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/8469540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yhoiseth", "html_url": "https://github.com/yhoiseth", "followers_url": "https://api.github.com/users/yhoiseth/followers", "following_url": "https://api.github.com/users/yhoiseth/following{/other_user}", "gists_url": "https://api.github.com/users/yhoiseth/gists{/gist_id}", "starred_url": "https://api.github.com/users/yhoiseth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yhoiseth/subscriptions", "organizations_url": "https://api.github.com/users/yhoiseth/orgs", "repos_url": "https://api.github.com/users/yhoiseth/repos", "events_url": "https://api.github.com/users/yhoiseth/events{/privacy}", "received_events_url": "https://api.github.com/users/yhoiseth/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-30T09:03:22Z", "updated_at": "2019-11-12T02:52:24Z", "closed_at": "2019-11-12T02:52:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Bug report\r\n\r\n<!--\r\nHi, thanks for submitting a bug. We appreciate that.\r\n\r\nBut, we will need some information about what's wrong to help you.\r\n-->\r\n\r\nHi,\r\n\r\nThanks for making `django-stubs`. I really appreciate it.\r\n\r\nI've encountered an issue that I'm not entirely sure is a bug, but I think it is.\r\n\r\n## What's wrong\r\n\r\n<!--\r\nDescribe what is not working.\r\n\r\nPlease, attach a traceback.\r\nWe would also appreciate a failing test case.\r\nThat is EXTREMELY helpful!\r\n-->\r\n\r\nIn my code, I get the following error when running `mypy`:\r\n\r\n```\r\nerror: Return type \"Optional[bool]\" of \"test_func\" incompatible with return type \"None\" in supertype \"UserPassesTestMixin\"\r\n```\r\n\r\nThe relevant code looks like this:\r\n\r\n```python\r\nfrom typing import Optional\r\nfrom django.contrib.auth.mixins import UserPassesTestMixin\r\nfrom django.views import View\r\n\r\nclass NewOrganizationMembership(UserPassesTestMixin, View):\r\n    def test_func(self) -> Optional[bool]:\r\n        organization: Organization = get_object_or_404(\r\n            Organization, pk=self.request.resolver_match.kwargs[\"pk\"]\r\n        )\r\n        user: User = self.request.user\r\n        return user.is_admin_of(organization)\r\n```\r\n\r\nIn [django-stubs/contrib/auth/mixins.pyi:26](https://github.com/typeddjango/django-stubs/blob/master/django-stubs/contrib/auth/mixins.pyi#L26), `test_func` is set to return `None`:\r\n\r\n```python\r\nclass UserPassesTestMixin(AccessMixin):\r\n    def test_func(self) -> None: ...\r\n```\r\n\r\n## How it should be\r\n\r\n<!-- Describe how it should work. -->\r\n\r\nFrom my reading of [the documentation for `UserPassesTestMixin`](https://docs.djangoproject.com/en/2.2/topics/auth/default/#django.contrib.auth.mixins.UserPassesTestMixin), it appears that `test_func` should return `Optional[bool]`: \r\n\r\n```python\r\nfrom django.contrib.auth.mixins import UserPassesTestMixin\r\n\r\nclass MyView(UserPassesTestMixin, View):\r\n\r\n    def test_func(self):\r\n        return self.request.user.email.endswith('@example.com')\r\n```\r\n\r\nHowever, I'm not entirely sure about this, considering that [Django's `test_func`](https://github.com/django/django/blob/master/django/contrib/auth/mixins.py#L94) doesn't return anything:\r\n\r\n```python\r\nclass UserPassesTestMixin(AccessMixin):\r\n    \"\"\"\r\n    Deny a request with a permission error if the test_func() method returns\r\n    False.\r\n    \"\"\"\r\n\r\n    def test_func(self):\r\n        raise NotImplementedError(\r\n            '{0} is missing the implementation of the test_func() method.'.format(self.__class__.__name__)\r\n        )\r\n\r\n    def get_test_func(self):\r\n```\r\n\r\nI'll make a PR to demonstrate a suggested fix.\r\n\r\n## System information\r\n\r\n- OS: macOs 10.14.6 (Mojave)\r\n- `python` version: 3.7.4\r\n- `django` version: 2.2.6\r\n- `mypy` version: 0.740\r\n- `django-stubs` version: 1.2.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/213", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/213/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/213/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/213", "id": 509610810, "node_id": "MDU6SXNzdWU1MDk2MTA4MTA=", "number": 213, "title": "Model manager is loosely typed and return Any for arbitrary attributes", "user": {"login": "silviogutierrez", "id": 92824, "node_id": "MDQ6VXNlcjkyODI0", "avatar_url": "https://avatars0.githubusercontent.com/u/92824?v=4", "gravatar_id": "", "url": "https://api.github.com/users/silviogutierrez", "html_url": "https://github.com/silviogutierrez", "followers_url": "https://api.github.com/users/silviogutierrez/followers", "following_url": "https://api.github.com/users/silviogutierrez/following{/other_user}", "gists_url": "https://api.github.com/users/silviogutierrez/gists{/gist_id}", "starred_url": "https://api.github.com/users/silviogutierrez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/silviogutierrez/subscriptions", "organizations_url": "https://api.github.com/users/silviogutierrez/orgs", "repos_url": "https://api.github.com/users/silviogutierrez/repos", "events_url": "https://api.github.com/users/silviogutierrez/events{/privacy}", "received_events_url": "https://api.github.com/users/silviogutierrez/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-20T15:33:24Z", "updated_at": "2019-11-12T17:36:07Z", "closed_at": "2019-11-12T17:36:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Bug report\r\n\r\n<!--\r\nHi, thanks for submitting a bug. We appreciate that.\r\n\r\nBut, we will need some information about what's wrong to help you.\r\n-->\r\n\r\n## What's wrong\r\nEven for basic cases, `objects` on a model class returns an object without a finite list of properties.\r\n\r\nI can do `MyModel.objects.this_does_not_exist` and mypy won't complain. It should.\r\n\r\nNotably, if I do `MyModel.objects.all()` for example, I do get back a properly typed object.\r\n\r\nIt's almost as if it has `__getattr__` implemented.\r\n\r\n<!--\r\nDescribe what is not working.\r\n\r\nPlease, attach a traceback.\r\nWe would also appreciate a failing test case.\r\nThat is EXTREMELY helpful!\r\n-->\r\n\r\n## How should it be\r\n\r\nI'd expect mypy to only allow valid properties/methods on `objects` and other managers.\r\n\r\nFull reproduction below:\r\n\r\n```python\r\n# models.py\r\nfrom django.db import models\r\n\r\n\r\nclass MyModel(models.Model):\r\n    field = models.CharField(max_length=100)\r\n\r\n\r\n# views.py\r\nfrom . import models\r\n\r\n\r\ndef my_view() -> None:\r\n    instance = models.MyModel.objects.all()\r\n    instance = models.MyModel.objects.first()  # correct, no error, revealed type is Union[MyModel, None]\r\n    instance = models.MyModel.objects.method_that_does_not_exist()  # no error, should error out, revealed type is Any\r\n    instance = models.MyModel.ojects.method_that_does_not_exist()  # correctly errors out saying that ojects (misspelled) does not exist on Type[MyModel].\r\n```\r\n\r\n\r\n## System information\r\n\r\n- OS: MacOS\r\n- `python` version: 3.7\r\n- `django` version: 2.2\r\n- `mypy` version: 0.730 *and* 0.720\r\n- `django-stubs` version: 1.2 *and* 1.1, respectively matching mypy versions above.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/210", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/210/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/210/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/210", "id": 508783435, "node_id": "MDU6SXNzdWU1MDg3ODM0MzU=", "number": 210, "title": "HttpResponsePermanentRedirect missing in django.shortcuts", "user": {"login": "SRChiP", "id": 2908873, "node_id": "MDQ6VXNlcjI5MDg4NzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2908873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SRChiP", "html_url": "https://github.com/SRChiP", "followers_url": "https://api.github.com/users/SRChiP/followers", "following_url": "https://api.github.com/users/SRChiP/following{/other_user}", "gists_url": "https://api.github.com/users/SRChiP/gists{/gist_id}", "starred_url": "https://api.github.com/users/SRChiP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SRChiP/subscriptions", "organizations_url": "https://api.github.com/users/SRChiP/orgs", "repos_url": "https://api.github.com/users/SRChiP/repos", "events_url": "https://api.github.com/users/SRChiP/events{/privacy}", "received_events_url": "https://api.github.com/users/SRChiP/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-18T00:12:50Z", "updated_at": "2019-11-12T13:12:37Z", "closed_at": "2019-11-12T13:12:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Bug report\r\n\r\n## What's wrong\r\n\r\nI get an issue:\r\n`error: Module 'django.shortcuts' has no attribute 'HttpResponsePermanentRedirect'; maybe \"HttpResponseRedirect\"?`.\r\n\r\nIt seems that `HttpResponseRedirect` is defined in django.shortcuts, but not `HttpResponsePermanentRedirect`.\r\n\r\n## How is that should be\r\n\r\nNo errors when running mypy\r\n\r\n## System information\r\n\r\n- OS: ArchLinux\r\n- `python` version: 3.7.4\r\n- `django` version: 2.2.5\r\n- `mypy` version: 0.730\r\n- `django-stubs` version: 1.2.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/207", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/207/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/207/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/207", "id": 507042748, "node_id": "MDU6SXNzdWU1MDcwNDI3NDg=", "number": 207, "title": "Wrong type inferred from settings", "user": {"login": "lfrodrigues", "id": 301004, "node_id": "MDQ6VXNlcjMwMTAwNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/301004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lfrodrigues", "html_url": "https://github.com/lfrodrigues", "followers_url": "https://api.github.com/users/lfrodrigues/followers", "following_url": "https://api.github.com/users/lfrodrigues/following{/other_user}", "gists_url": "https://api.github.com/users/lfrodrigues/gists{/gist_id}", "starred_url": "https://api.github.com/users/lfrodrigues/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lfrodrigues/subscriptions", "organizations_url": "https://api.github.com/users/lfrodrigues/orgs", "repos_url": "https://api.github.com/users/lfrodrigues/repos", "events_url": "https://api.github.com/users/lfrodrigues/events{/privacy}", "received_events_url": "https://api.github.com/users/lfrodrigues/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-15T06:50:23Z", "updated_at": "2019-10-15T07:26:21Z", "closed_at": "2019-10-15T07:21:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Bug report\r\n\r\n\r\n\r\n## What's wrong\r\nIn my settings I have:\r\n```\r\nRECOVERY_PIPELINE_STAGES_DAYS: Dict[str, int] = {'A': 1, 'B': 8, 'C': 15, 'D': 22, 'E': 30, 'F': 60, 'G': 80}\r\n```\r\n\r\nRunning mypy on another file that uses the settings \r\n\r\n```\r\nfrom django.conf import settings\r\n\r\nreveal_type(settings)\r\nreveal_type(settings.RECOVERY_PIPELINE_STAGES_DAYS)\r\nreveal_type(settings.RECOVERY_PIPELINE_STAGES_DAYS[0])\r\n```\r\n\r\n```\r\nsrc/admin/tasks.py:17: note: Revealed type is 'django.conf.LazySettings'\r\nsrc/admin/tasks.py:18: note: Revealed type is 'builtins.dict'\r\nsrc/admin/tasks.py:19: note: Revealed type is '_VT`2'\r\n```\r\n\r\n\r\n## How is that should be\r\n\r\nIf I place the definition on the file I'm validating \r\n```\r\nRECOVERY_PIPELINE_STAGES_DAYS: Dict[str, int] = {'A': 1, 'B': 8, 'C': 15, 'D': 22, 'E': 30, 'F': 60, 'G': 80}\r\nreveal_type(RECOVERY_PIPELINE_STAGES_DAYS)\r\nreveal_type(RECOVERY_PIPELINE_STAGES_DAYS[0])\r\n```\r\n```\r\nsrc/admin/tasks.py:18: note: Revealed type is 'builtins.dict[builtins.str, builtins.int]'\r\nsrc/admin/tasks.py:19: note: Revealed type is 'builtins.int*\r\n```\r\n\r\n## System information\r\n\r\n- OS: Linux\r\n- `python` version: 3.6.5\r\n- `django` version: 2.2\r\n- `mypy` version: 0.730\r\n- `django-stubs` version: 1.2.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/206", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/206/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/206/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/206", "id": 505732073, "node_id": "MDU6SXNzdWU1MDU3MzIwNzM=", "number": 206, "title": "Add a CONTRIBUTING guide", "user": {"login": "sobolevn", "id": 4660275, "node_id": "MDQ6VXNlcjQ2NjAyNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4660275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sobolevn", "html_url": "https://github.com/sobolevn", "followers_url": "https://api.github.com/users/sobolevn/followers", "following_url": "https://api.github.com/users/sobolevn/following{/other_user}", "gists_url": "https://api.github.com/users/sobolevn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sobolevn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sobolevn/subscriptions", "organizations_url": "https://api.github.com/users/sobolevn/orgs", "repos_url": "https://api.github.com/users/sobolevn/repos", "events_url": "https://api.github.com/users/sobolevn/events{/privacy}", "received_events_url": "https://api.github.com/users/sobolevn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "sobolevn", "id": 4660275, "node_id": "MDQ6VXNlcjQ2NjAyNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4660275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sobolevn", "html_url": "https://github.com/sobolevn", "followers_url": "https://api.github.com/users/sobolevn/followers", "following_url": "https://api.github.com/users/sobolevn/following{/other_user}", "gists_url": "https://api.github.com/users/sobolevn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sobolevn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sobolevn/subscriptions", "organizations_url": "https://api.github.com/users/sobolevn/orgs", "repos_url": "https://api.github.com/users/sobolevn/repos", "events_url": "https://api.github.com/users/sobolevn/events{/privacy}", "received_events_url": "https://api.github.com/users/sobolevn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sobolevn", "id": 4660275, "node_id": "MDQ6VXNlcjQ2NjAyNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4660275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sobolevn", "html_url": "https://github.com/sobolevn", "followers_url": "https://api.github.com/users/sobolevn/followers", "following_url": "https://api.github.com/users/sobolevn/following{/other_user}", "gists_url": "https://api.github.com/users/sobolevn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sobolevn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sobolevn/subscriptions", "organizations_url": "https://api.github.com/users/sobolevn/orgs", "repos_url": "https://api.github.com/users/sobolevn/repos", "events_url": "https://api.github.com/users/sobolevn/events{/privacy}", "received_events_url": "https://api.github.com/users/sobolevn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-10-11T09:08:31Z", "updated_at": "2020-02-06T12:01:57Z", "closed_at": "2020-02-06T12:01:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I will describe all steps to get the stuff done.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/203", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/203/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/203/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/203", "id": 503745481, "node_id": "MDU6SXNzdWU1MDM3NDU0ODE=", "number": 203, "title": "Signature of \"has_add_permission\" incompatible with supertype \"BaseModelAdmin\"", "user": {"login": "Sukochev", "id": 38643206, "node_id": "MDQ6VXNlcjM4NjQzMjA2", "avatar_url": "https://avatars0.githubusercontent.com/u/38643206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sukochev", "html_url": "https://github.com/Sukochev", "followers_url": "https://api.github.com/users/Sukochev/followers", "following_url": "https://api.github.com/users/Sukochev/following{/other_user}", "gists_url": "https://api.github.com/users/Sukochev/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sukochev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sukochev/subscriptions", "organizations_url": "https://api.github.com/users/Sukochev/orgs", "repos_url": "https://api.github.com/users/Sukochev/repos", "events_url": "https://api.github.com/users/Sukochev/events{/privacy}", "received_events_url": "https://api.github.com/users/Sukochev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": {"login": "Sukochev", "id": 38643206, "node_id": "MDQ6VXNlcjM4NjQzMjA2", "avatar_url": "https://avatars0.githubusercontent.com/u/38643206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sukochev", "html_url": "https://github.com/Sukochev", "followers_url": "https://api.github.com/users/Sukochev/followers", "following_url": "https://api.github.com/users/Sukochev/following{/other_user}", "gists_url": "https://api.github.com/users/Sukochev/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sukochev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sukochev/subscriptions", "organizations_url": "https://api.github.com/users/Sukochev/orgs", "repos_url": "https://api.github.com/users/Sukochev/repos", "events_url": "https://api.github.com/users/Sukochev/events{/privacy}", "received_events_url": "https://api.github.com/users/Sukochev/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Sukochev", "id": 38643206, "node_id": "MDQ6VXNlcjM4NjQzMjA2", "avatar_url": "https://avatars0.githubusercontent.com/u/38643206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sukochev", "html_url": "https://github.com/Sukochev", "followers_url": "https://api.github.com/users/Sukochev/followers", "following_url": "https://api.github.com/users/Sukochev/following{/other_user}", "gists_url": "https://api.github.com/users/Sukochev/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sukochev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sukochev/subscriptions", "organizations_url": "https://api.github.com/users/Sukochev/orgs", "repos_url": "https://api.github.com/users/Sukochev/repos", "events_url": "https://api.github.com/users/Sukochev/events{/privacy}", "received_events_url": "https://api.github.com/users/Sukochev/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-10-07T23:36:44Z", "updated_at": "2019-10-11T09:16:21Z", "closed_at": "2019-10-11T09:16:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "## What's wrong\r\nGetting mypy error:\r\n`project/contact/admin.py:25: error: Signature of \"has_add_permission\" incompatible with supertype \"BaseModelAdmin\"`\r\n\r\nFor example in registering a custom Django Admin such as\r\n```\r\nclass ContactAdmin(admin.ModelAdmin):\r\n    list_display = (\"__str__\",)\r\n\r\n    def has_add_permission(self, request: HttpRequest) -> bool:\r\n        return False\r\n\r\nadmin.site.register(Contact, ContactAdmin)\r\n```\r\nresults in the error above for the method `has_add_permission`.\r\n\r\nThis is possibly due to the fact that https://github.com/typeddjango/django-stubs/blob/8402e7c53ee4d2fa2ea31a506b6a986b67e10c1a/django-stubs/contrib/admin/options.pyi#L89\r\n\r\nhas     `def has_add_permission(self, request: HttpRequest, obj: Optional[Model] = ...) -> bool: ...`\r\n\r\nwhile https://github.com/django/django/blob/42b9a23267f14be39b9b00958e18d5746783208e/django/contrib/admin/options.py#L467\r\n\r\nhas   `def has_add_permission(self, request):`\r\n\r\ni.e `obj` parameter shouldn't be in stub?\r\n\r\n## How is that should be\r\n\r\nI don't think this error should appear here. The case of `has_change_permission` for example, works as expected.\r\n\r\n## System information\r\n\r\n- OS:\r\n- `python` version: 3.7.3\r\n- `django` version: 2.2.5\r\n- `mypy` version: 0.720\r\n- `django-stubs` version: 1.1.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/197", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/197/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/197/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/197", "id": 501643167, "node_id": "MDU6SXNzdWU1MDE2NDMxNjc=", "number": 197, "title": "Overrides of BaseCommand.handle() are problematic", "user": {"login": "antonagestam", "id": 218551, "node_id": "MDQ6VXNlcjIxODU1MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/218551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antonagestam", "html_url": "https://github.com/antonagestam", "followers_url": "https://api.github.com/users/antonagestam/followers", "following_url": "https://api.github.com/users/antonagestam/following{/other_user}", "gists_url": "https://api.github.com/users/antonagestam/gists{/gist_id}", "starred_url": "https://api.github.com/users/antonagestam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antonagestam/subscriptions", "organizations_url": "https://api.github.com/users/antonagestam/orgs", "repos_url": "https://api.github.com/users/antonagestam/repos", "events_url": "https://api.github.com/users/antonagestam/events{/privacy}", "received_events_url": "https://api.github.com/users/antonagestam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/typeddjango/django-stubs/milestones/1", "html_url": "https://github.com/typeddjango/django-stubs/milestone/1", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/milestones/1/labels", "id": 4688459, "node_id": "MDk6TWlsZXN0b25lNDY4ODQ1OQ==", "number": 1, "title": "1.2.0", "description": "", "creator": {"login": "mkurnikov", "id": 2341827, "node_id": "MDQ6VXNlcjIzNDE4Mjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2341827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkurnikov", "html_url": "https://github.com/mkurnikov", "followers_url": "https://api.github.com/users/mkurnikov/followers", "following_url": "https://api.github.com/users/mkurnikov/following{/other_user}", "gists_url": "https://api.github.com/users/mkurnikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkurnikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkurnikov/subscriptions", "organizations_url": "https://api.github.com/users/mkurnikov/orgs", "repos_url": "https://api.github.com/users/mkurnikov/repos", "events_url": "https://api.github.com/users/mkurnikov/events{/privacy}", "received_events_url": "https://api.github.com/users/mkurnikov/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2019-09-24T17:54:33Z", "updated_at": "2019-11-12T17:34:08Z", "due_on": null, "closed_at": "2019-11-12T17:34:08Z"}, "comments": 2, "created_at": "2019-10-02T18:08:16Z", "updated_at": "2019-10-05T18:36:42Z", "closed_at": "2019-10-05T18:36:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[`django.core.management.base.BaseCommand.handle()`](https://github.com/django/django/blob/master/django/core/management/base.py) has the signature:\r\n\r\n    def handle(self, *args, **options) -> NoReturn: ...\r\n\r\nAnd has the stub:\r\n\r\n    def handle(self, *args: Any, **options: Any) -> None: ...\r\n\r\nBut some if its subclasses has incompatible signatures for this method, like [`django.core.management.base.AppCommand.handle()`](https://github.com/django/django/blob/master/django/core/management/base.py#L499)\r\n\r\n    def handle(self, *args: Any, **options: Any) -> Optional[str]: ...\r\n\r\nAnd [`staticfiles.management.commands.collectstatic.Command.handle`](https://github.com/django/django/blob/master/django/contrib/staticfiles/management/commands/collectstatic.py#L147):\r\n\r\n    def handle(self, **options) -> Optional[str]:\r\n\r\nSubclassing collectstatic with an identical signature gives:\r\n\r\n    error: Signature of \"handle\" incompatible with supertype \"BaseCommand\"  [override]\r\n\r\nChanging to also accept `*args: Any` instead gives:\r\n\r\n    error: Return type \"str\" of \"handle\" incompatible with return type \"None\" in supertype \"BaseCommand\"  [override]\r\n\r\n... so that's all the information I have on the table. I think this situation is pretty weird as it seems to mostly lie in Django breaking Liskov Substitution Principle. However, I believe at least some of my problems would go away if `BaseCommand.handle()` was annotated with `-> Optional[str]`.\r\n\r\nWhat do you think? Is it worth a bug report towards Django?\r\n\r\n## System information\r\n\r\n- OS: macos\r\n- `python` version: 3.7.4\r\n- `django` version: 2.2.6\r\n- `mypy` version: mypy 0.730\r\n- `django-stubs` version: -e git+git@github.com:typeddjango/django-stubs.git@b939bc96b7ff0645da19c2ff960ac9bd0a50bee7#egg=django_stubs\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/196", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/196/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/196/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/196", "id": 501483610, "node_id": "MDU6SXNzdWU1MDE0ODM2MTA=", "number": 196, "title": "AttributeError: 'NoneType' object has no attribute '__module__' while referencing model as string in ForeignKey", "user": {"login": "linevych", "id": 3529231, "node_id": "MDQ6VXNlcjM1MjkyMzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3529231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linevych", "html_url": "https://github.com/linevych", "followers_url": "https://api.github.com/users/linevych/followers", "following_url": "https://api.github.com/users/linevych/following{/other_user}", "gists_url": "https://api.github.com/users/linevych/gists{/gist_id}", "starred_url": "https://api.github.com/users/linevych/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linevych/subscriptions", "organizations_url": "https://api.github.com/users/linevych/orgs", "repos_url": "https://api.github.com/users/linevych/repos", "events_url": "https://api.github.com/users/linevych/events{/privacy}", "received_events_url": "https://api.github.com/users/linevych/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/typeddjango/django-stubs/milestones/1", "html_url": "https://github.com/typeddjango/django-stubs/milestone/1", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/milestones/1/labels", "id": 4688459, "node_id": "MDk6TWlsZXN0b25lNDY4ODQ1OQ==", "number": 1, "title": "1.2.0", "description": "", "creator": {"login": "mkurnikov", "id": 2341827, "node_id": "MDQ6VXNlcjIzNDE4Mjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2341827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkurnikov", "html_url": "https://github.com/mkurnikov", "followers_url": "https://api.github.com/users/mkurnikov/followers", "following_url": "https://api.github.com/users/mkurnikov/following{/other_user}", "gists_url": "https://api.github.com/users/mkurnikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkurnikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkurnikov/subscriptions", "organizations_url": "https://api.github.com/users/mkurnikov/orgs", "repos_url": "https://api.github.com/users/mkurnikov/repos", "events_url": "https://api.github.com/users/mkurnikov/events{/privacy}", "received_events_url": "https://api.github.com/users/mkurnikov/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2019-09-24T17:54:33Z", "updated_at": "2019-11-12T17:34:08Z", "due_on": null, "closed_at": "2019-11-12T17:34:08Z"}, "comments": 1, "created_at": "2019-10-02T13:18:27Z", "updated_at": "2019-10-05T17:00:52Z", "closed_at": "2019-10-05T17:00:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Bug report\r\n\r\nIn the project that I'm working on I have an application with the following structure:\r\n\r\n```\r\napp1\r\n\u2514\u2500\u2500 models\r\n    \u251c\u2500\u2500 bar.py\r\n    \u251c\u2500\u2500 baz.py\r\n    \u2514\u2500\u2500 foo.py\r\n\r\n```\r\n\r\nThere is a model `ModelA` defined in `bar.py` and `ModelB` defined in `foo.py` that has FK to `ModelA`:\r\n\r\n```\r\nclass ModelB(models.Model):\r\n    field1 = models.ForeignKey('ModelA')\r\n```\r\n\r\nThis is a valid syntax for referencing model in the same application but when I run mypy I get an error.\r\n\r\n## What's wrong\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/mypy\", line 10, in <module>\r\n    sys.exit(console_entry())\r\n  File \"/usr/local/lib/python3.6/site-packages/mypy/__main__.py\", line 8, in console_entry\r\n    main(None, sys.stdout, sys.stderr)\r\n  File \"/usr/local/lib/python3.6/site-packages/mypy/main.py\", line 83, in main\r\n    res = build.build(sources, options, None, flush_errors, fscache, stdout, stderr)\r\n  File \"/usr/local/lib/python3.6/site-packages/mypy/build.py\", line 164, in build\r\n    result = _build(sources, options, alt_lib_path, flush_errors, fscache, stdout, stderr)\r\n  File \"/usr/local/lib/python3.6/site-packages/mypy/build.py\", line 224, in _build\r\n    graph = dispatch(sources, manager, stdout)\r\n  File \"/usr/local/lib/python3.6/site-packages/mypy/build.py\", line 2526, in dispatch\r\n    graph = load_graph(sources, manager)\r\n  File \"/usr/local/lib/python3.6/site-packages/mypy/build.py\", line 2748, in load_graph\r\n    caller_state=st, caller_line=st.dep_line_map.get(dep, 1))\r\n  File \"/usr/local/lib/python3.6/site-packages/mypy/build.py\", line 1772, in __init__\r\n    self.compute_dependencies()\r\n  File \"/usr/local/lib/python3.6/site-packages/mypy/build.py\", line 2059, in compute_dependencies\r\n    self.manager.plugin.get_additional_deps(self.tree))\r\n  File \"/usr/local/lib/python3.6/site-packages/mypy/plugin.py\", line 743, in get_additional_deps\r\n    deps.extend(plugin.get_additional_deps(file))\r\n  File \"/usr/local/lib/python3.6/site-packages/mypy_django_plugin/main.py\", line 152, in get_additional_deps\r\n    related_model_module = related_model_cls.__module__\r\nAttributeError: 'NoneType' object has no attribute '__module__'\r\n```\r\n\r\nThe problem is that `mypy_django_plugin.django.context.DjangoContext.get_model_class_by_fullname` in `mypy_django_plugin.django.context.DjangoFieldsContext.get_related_model_cls` returns `None` for relative reference in this case.\r\n\r\nThe only solution that I found is to use absolute reference `models.ForeignKey('app1.ModelA')` instead.\r\n\r\n## How is that should be\r\n\r\nRelative model reference should be supported even in case if `models.py` is replaced with a module.\r\n\r\n## System information\r\n\r\n- OS: Docker container based on python:3.6-alpine\r\n- `python` version: 3.6.6\r\n- `django` version: 2.2.5\r\n- `mypy` version: 0.720\r\n- `django-stubs` version: 1.1.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/185", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/185/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/185/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/185", "id": 497965823, "node_id": "MDU6SXNzdWU0OTc5NjU4MjM=", "number": 185, "title": "Abstract models from library cause a crash", "user": {"login": "rik", "id": 3653, "node_id": "MDQ6VXNlcjM2NTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rik", "html_url": "https://github.com/rik", "followers_url": "https://api.github.com/users/rik/followers", "following_url": "https://api.github.com/users/rik/following{/other_user}", "gists_url": "https://api.github.com/users/rik/gists{/gist_id}", "starred_url": "https://api.github.com/users/rik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rik/subscriptions", "organizations_url": "https://api.github.com/users/rik/orgs", "repos_url": "https://api.github.com/users/rik/repos", "events_url": "https://api.github.com/users/rik/events{/privacy}", "received_events_url": "https://api.github.com/users/rik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/typeddjango/django-stubs/milestones/1", "html_url": "https://github.com/typeddjango/django-stubs/milestone/1", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/milestones/1/labels", "id": 4688459, "node_id": "MDk6TWlsZXN0b25lNDY4ODQ1OQ==", "number": 1, "title": "1.2.0", "description": "", "creator": {"login": "mkurnikov", "id": 2341827, "node_id": "MDQ6VXNlcjIzNDE4Mjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2341827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkurnikov", "html_url": "https://github.com/mkurnikov", "followers_url": "https://api.github.com/users/mkurnikov/followers", "following_url": "https://api.github.com/users/mkurnikov/following{/other_user}", "gists_url": "https://api.github.com/users/mkurnikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkurnikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkurnikov/subscriptions", "organizations_url": "https://api.github.com/users/mkurnikov/orgs", "repos_url": "https://api.github.com/users/mkurnikov/repos", "events_url": "https://api.github.com/users/mkurnikov/events{/privacy}", "received_events_url": "https://api.github.com/users/mkurnikov/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2019-09-24T17:54:33Z", "updated_at": "2019-11-12T17:34:08Z", "due_on": null, "closed_at": "2019-11-12T17:34:08Z"}, "comments": 4, "created_at": "2019-09-24T23:08:34Z", "updated_at": "2019-10-05T18:36:29Z", "closed_at": "2019-10-05T18:36:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm using https://github.com/django-oscar/django-oscar which provides abstract models to subclass in your app. Because Oscar does not provide type hints, I'm adding a local stub file to help `django-stubs` find this model (instead of typing it as `Any`). Doing so causes a crash (see traceback below) in `AddRelatedModelsId` on an abstract model that has a foreign key on `'self'` ([`AbstractProduct.parent`](https://github.com/django-oscar/django-oscar/blob/186f60df05cf852494fcb0c3bc76813201701bae/src/oscar/apps/catalogue/abstract_models.py#L278)).\r\n\r\nIn my debugging, I'm wondering if the rule in [`DjangoFieldsContext.get_related_model_cls`](https://github.com/typeddjango/django-stubs/blob/7407b9315109b33ae8c6066c4be7ac1920919f0e/mypy_django_plugin/django/context.py#L144) is too simple. Maybe it should find concrete models?\r\n\r\nThere's also a great chance than I'm using `django-stubs` badly in this case. Should I type this differently?\r\n\r\n## Stub\r\n```pyi\r\nfrom django.db import models\r\n\r\nclass AbstractProduct(models.Model): ...\r\n```\r\n## Traceback\r\n```pytb\r\nTraceback (most recent call last):\r\n  File \"mypy/newsemanal/semanal.py\", line 4550, in accept\r\n  File \"mypy/nodes.py\", line 921, in accept__Node_glue\r\n  File \"mypy/nodes.py\", line 922, in accept\r\n  File \"mypy/newsemanal/semanal.py\", line 989, in visit_class_def__StatementVisitor_glue\r\n  File \"mypy/newsemanal/semanal.py\", line 992, in visit_class_def\r\n  File \"mypy/newsemanal/semanal.py\", line 1063, in analyze_class\r\n  File \"mypy/newsemanal/semanal.py\", line 1072, in analyze_class_body_common\r\n  File \"mypy/newsemanal/semanal.py\", line 1131, in apply_class_plugin_hooks\r\n  File \"/venv/site-packages/mypy_django_plugin/main.py\", line 33, in transform_model_class\r\n    process_model_class(ctx, django_context)\r\n  File \"/venv/site-packages/mypy_django_plugin/transformers/models.py\", line 228, in process_model_class\r\n    initializer_cls(ctx, django_context).run()\r\n  File \"/venv/site-packages/mypy_django_plugin/transformers/models.py\", line 60, in run\r\n    self.run_with_model_cls(model_cls)\r\n  File \"/venv/site-packages/mypy_django_plugin/transformers/models.py\", line 104, in run_with_model_cls\r\n    rel_primary_key_field = self.django_context.get_primary_key_field(related_model_cls)\r\n  File \"/venv/site-packages/mypy_django_plugin/django/context.py\", line 231, in get_primary_key_field\r\n    raise ValueError('No primary key defined')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/173", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/173/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/173/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/173", "id": 495832357, "node_id": "MDU6SXNzdWU0OTU4MzIzNTc=", "number": 173, "title": "Incompatible types in assignment", "user": {"login": "ynikulin", "id": 5747246, "node_id": "MDQ6VXNlcjU3NDcyNDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/5747246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ynikulin", "html_url": "https://github.com/ynikulin", "followers_url": "https://api.github.com/users/ynikulin/followers", "following_url": "https://api.github.com/users/ynikulin/following{/other_user}", "gists_url": "https://api.github.com/users/ynikulin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ynikulin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ynikulin/subscriptions", "organizations_url": "https://api.github.com/users/ynikulin/orgs", "repos_url": "https://api.github.com/users/ynikulin/repos", "events_url": "https://api.github.com/users/ynikulin/events{/privacy}", "received_events_url": "https://api.github.com/users/ynikulin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-19T14:22:18Z", "updated_at": "2019-10-08T13:07:31Z", "closed_at": "2019-10-08T13:07:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Bug report\r\n\r\nHello, \r\n\r\nWith a new version, couple issues were fixed but got new. In general looks like all explainable.\r\n\r\nSo I got:\r\n\r\n```\r\napps/users/models.py:95: error: Incompatible types in assignment (expression has type \"UserManager[User]\", base class \"AbstractUser\" defined the type as \"UserManager[AbstractUser]\")\r\napps/currencies/amounts.py:150: error: Incompatible types in assignment (expression has type \"ForeignKey[Union[Currency, Combinable], Currency]\", base class \"AmountStringRepresentationMixin\" defined the type as \"Currency\")\r\n\r\napps/currencies/amounts.py:171: error: Cannot determine type of 'currency'\r\napps/currencies/amounts.py:175: error: Cannot determine type of 'currency'\r\napps/currencies/amounts.py:177: error: Cannot determine type of 'currency'\r\napps/demo/models.py:348: error: Cannot determine type of 'objects'\r\napps/auth/tasks.py:30: error: Cannot determine type of 'objects'\r\ncore/tests.py:115: error: Cannot determine type of 'objects'\r\nviews/accounts/users.py:139: error: Cannot determine type of 'objects'\r\nviews/accounts/users.py:160: error: Cannot determine type of 'objects'\r\nviews/auth.py:89: error: Cannot determine type of 'objects'\r\nviews/auth.py:317: error: Cannot determine type of 'objects'\r\nviews/auth.py:388: error: Cannot determine type of 'objects'\r\n```\r\n\r\nLook like the first two issues are main. If look rest of issues it's:\r\n\r\n(For first issue)\r\n`user = User.objects.get(email=email.lower())`\r\nor\r\n`User.objects.create`\r\nor\r\n`User.objects.get_or_create`\r\n\r\n(for second)\r\n`currency=self.currency` \r\nor\r\n`self.currency == other.currency`\r\n\r\n**Looks like if I got some issue with some stuff - rest manipulation in code makes an error.**\r\n\r\nA little bit code, for reproducing:\r\n\r\n(for first issue)\r\n\r\n```\r\nfrom django.contrib.auth.models import AbstractUser\r\nclass User(AbstractUser):\r\n    ....\r\n    objects = UserManager()  <----- an error\r\n    ...\r\n\r\n```\r\nand\r\n\r\n```\r\nfrom django.contrib.auth.models import BaseUserManager\r\nclass UserManager(BaseUserManager):\r\n    .....\r\n```\r\n\r\n(for second)\r\n\r\n```\r\nclass BaseAmount(AmountStringRepresentationMixin[models.DecimalField],\r\n                               AmountComparatorMixin[models.DecimalField],\r\n                               models.Model):\r\n    ...\r\n    currency = models.ForeignKey(Currency,                <----- an error\r\n                                 related_name='+',\r\n                                 verbose_name=_('Currency'),\r\n                                 on_delete=models.PROTECT)\r\n    ...\r\n```\r\n\r\nI will be glad to any advice :)\r\n\r\n- OS: Ubuntu 18.04.3 LTS\r\n- `python` version: 3.7\r\n- `django` version: 2.2.5\r\n- `mypy` version: 0.720\r\n- `django-stubs` version: 1.1.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/160", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/160/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/160/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/160", "id": 493549586, "node_id": "MDU6SXNzdWU0OTM1NDk1ODY=", "number": 160, "title": "Compatibility with mypy 0.730", "user": {"login": "blueyed", "id": 9766, "node_id": "MDQ6VXNlcjk3NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blueyed", "html_url": "https://github.com/blueyed", "followers_url": "https://api.github.com/users/blueyed/followers", "following_url": "https://api.github.com/users/blueyed/following{/other_user}", "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions", "organizations_url": "https://api.github.com/users/blueyed/orgs", "repos_url": "https://api.github.com/users/blueyed/repos", "events_url": "https://api.github.com/users/blueyed/events{/privacy}", "received_events_url": "https://api.github.com/users/blueyed/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/typeddjango/django-stubs/milestones/1", "html_url": "https://github.com/typeddjango/django-stubs/milestone/1", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/milestones/1/labels", "id": 4688459, "node_id": "MDk6TWlsZXN0b25lNDY4ODQ1OQ==", "number": 1, "title": "1.2.0", "description": "", "creator": {"login": "mkurnikov", "id": 2341827, "node_id": "MDQ6VXNlcjIzNDE4Mjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2341827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkurnikov", "html_url": "https://github.com/mkurnikov", "followers_url": "https://api.github.com/users/mkurnikov/followers", "following_url": "https://api.github.com/users/mkurnikov/following{/other_user}", "gists_url": "https://api.github.com/users/mkurnikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkurnikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkurnikov/subscriptions", "organizations_url": "https://api.github.com/users/mkurnikov/orgs", "repos_url": "https://api.github.com/users/mkurnikov/repos", "events_url": "https://api.github.com/users/mkurnikov/events{/privacy}", "received_events_url": "https://api.github.com/users/mkurnikov/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2019-09-24T17:54:33Z", "updated_at": "2019-11-12T17:34:08Z", "due_on": null, "closed_at": "2019-11-12T17:34:08Z"}, "comments": 10, "created_at": "2019-09-13T23:14:59Z", "updated_at": "2019-10-01T12:28:19Z", "closed_at": "2019-09-28T02:23:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using `mypy 0.730+dev.28423cd78062b81365ec9aaa591b4e823af1606d` I am seeing an error:\r\n\r\n> setup.cfg:55: error: Error importing plugin 'mypy_django_plugin.main'\r\n\r\nThe exception there is:\r\n\r\n> No module named 'mypy.newsemanal.semanal'\r\n\r\nI've not investigated, but are there plans to make it compatible with the upcoming mypy version?\r\nPinning it to \"<0.730\" was done in b11a9a8.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/154", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/154/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/154/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/154", "id": 489597937, "node_id": "MDU6SXNzdWU0ODk1OTc5Mzc=", "number": 154, "title": "File.size: Unsupported operand types for \"Callable\" and \"int\".", "user": {"login": "wlisesrivas", "id": 1482092, "node_id": "MDQ6VXNlcjE0ODIwOTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1482092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wlisesrivas", "html_url": "https://github.com/wlisesrivas", "followers_url": "https://api.github.com/users/wlisesrivas/followers", "following_url": "https://api.github.com/users/wlisesrivas/following{/other_user}", "gists_url": "https://api.github.com/users/wlisesrivas/gists{/gist_id}", "starred_url": "https://api.github.com/users/wlisesrivas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wlisesrivas/subscriptions", "organizations_url": "https://api.github.com/users/wlisesrivas/orgs", "repos_url": "https://api.github.com/users/wlisesrivas/repos", "events_url": "https://api.github.com/users/wlisesrivas/events{/privacy}", "received_events_url": "https://api.github.com/users/wlisesrivas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-05T08:15:07Z", "updated_at": "2019-09-06T06:17:20Z", "closed_at": "2019-09-06T06:17:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Django File.size is a property type:\r\n`\r\n@cached_property \r\ndef size(self):\r\n...\r\n`\r\nhttps://github.com/django/django/blob/master/django/core/files/base.py#L32\r\n\r\nBut in stubs it's treated like callable function (which is wrong):\r\n`\r\ndef size(self) -> int: \r\n...\r\n`\r\nhttps://github.com/typeddjango/django-stubs/blob/master/django-stubs/core/files/base.pyi#L17\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/152", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/152/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/152/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/152", "id": 488873146, "node_id": "MDU6SXNzdWU0ODg4NzMxNDY=", "number": 152, "title": "Class-based view mixin attributes have incompatible types", "user": {"login": "treyhunner", "id": 285352, "node_id": "MDQ6VXNlcjI4NTM1Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/285352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/treyhunner", "html_url": "https://github.com/treyhunner", "followers_url": "https://api.github.com/users/treyhunner/followers", "following_url": "https://api.github.com/users/treyhunner/following{/other_user}", "gists_url": "https://api.github.com/users/treyhunner/gists{/gist_id}", "starred_url": "https://api.github.com/users/treyhunner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/treyhunner/subscriptions", "organizations_url": "https://api.github.com/users/treyhunner/orgs", "repos_url": "https://api.github.com/users/treyhunner/repos", "events_url": "https://api.github.com/users/treyhunner/events{/privacy}", "received_events_url": "https://api.github.com/users/treyhunner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-03T23:47:32Z", "updated_at": "2019-09-17T20:30:07Z", "closed_at": "2019-09-17T20:30:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "With the following class-based view mixin and a view that inherits from it as well as `DetailView`, the `model` and `context_object_name` attributes are picked up as having incorrect types:\r\n\r\n```python\r\nfrom django.views.generic import DetailView\r\n\r\nclass ExerciseDetailMixin:\r\n    context_object_name = \"exercise\"\r\n    model = Exercise\r\n\r\nclass ExerciseDetailView(ExerciseDetailMixin, DetailView):\r\n    pass\r\n```\r\n\r\n```\r\nexercises/views.py:95:1: error: Definition of \"model\" in base class \"ExerciseDetailMixin\" is incompatible with definition in base class \"SingleObjectTemplateResponseMixin\"\r\nexercises/views.py:95:1: error: Definition of \"model\" in base class \"ExerciseDetailMixin\" is incompatible with definition in base class \"SingleObjectMixin\"\r\nexercises/views.py:95:1: error: Definition of \"context_object_name\" in base class \"ExerciseDetailMixin\" is incompatible with definition in base class \"SingleObjectMixin\"\r\n```\r\n\r\nHere are their revealed types:\r\n\r\n```\r\nexercises/views.py:100:1: note: Revealed type is 'def (*_args: Any, **_kwds: Any) -> exercises.models.Exercise'\r\nexercises/views.py:101:1: note: Revealed type is 'builtins.str'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/150", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/150/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/150/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/150", "id": 487751185, "node_id": "MDU6SXNzdWU0ODc3NTExODU=", "number": 150, "title": "Not detecting Foreign key reverse relationship ", "user": {"login": "canassa", "id": 288227, "node_id": "MDQ6VXNlcjI4ODIyNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/288227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canassa", "html_url": "https://github.com/canassa", "followers_url": "https://api.github.com/users/canassa/followers", "following_url": "https://api.github.com/users/canassa/following{/other_user}", "gists_url": "https://api.github.com/users/canassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/canassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canassa/subscriptions", "organizations_url": "https://api.github.com/users/canassa/orgs", "repos_url": "https://api.github.com/users/canassa/repos", "events_url": "https://api.github.com/users/canassa/events{/privacy}", "received_events_url": "https://api.github.com/users/canassa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-08-31T09:29:01Z", "updated_at": "2019-09-17T23:20:20Z", "closed_at": "2019-09-17T23:20:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\n\r\nI couldn't get the reverse relationships to work, at first I thought that it's not supported but from browser other issues it seems that it's supported.\r\n\r\nHere is an example based on my code:\r\n\r\n```python\r\nclass Transaction(models.Model):\r\n    ...\r\n    def test(self) -> None:\r\n        print(self.transactionlog_set)\r\n\r\nclass TransactionLog(models.Model):\r\n    ...\r\n    transaction = models.ForeignKey(Transaction, on_delete=models.CASCADE)\r\n```\r\n\r\nThis fails with `error: \"Transaction\" has no attribute \"transactionlog_set\"`\r\n\r\nI also tried to add the `related_name` but it didn't help.\r\n\r\nThanks!\r\n\r\nmypy==0.720\r\ndjango-stubs==1.1.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/148", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/148/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/148/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/148", "id": 487183884, "node_id": "MDU6SXNzdWU0ODcxODM4ODQ=", "number": 148, "title": "Form changed_data should not be callable", "user": {"login": "jaredlockhart", "id": 119884, "node_id": "MDQ6VXNlcjExOTg4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/119884?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredlockhart", "html_url": "https://github.com/jaredlockhart", "followers_url": "https://api.github.com/users/jaredlockhart/followers", "following_url": "https://api.github.com/users/jaredlockhart/following{/other_user}", "gists_url": "https://api.github.com/users/jaredlockhart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredlockhart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredlockhart/subscriptions", "organizations_url": "https://api.github.com/users/jaredlockhart/orgs", "repos_url": "https://api.github.com/users/jaredlockhart/repos", "events_url": "https://api.github.com/users/jaredlockhart/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredlockhart/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-29T21:26:34Z", "updated_at": "2019-08-30T08:18:25Z", "closed_at": "2019-08-30T08:18:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The form stubs have `changed_data` marked as a `Callable[[], List[str]]`, but it's not callable, it's a [property](https://github.com/django/django/blob/master/django/forms/forms.py#L431-L432),  so I think it should just be `List[str]`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/143", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/143/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/143/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/143", "id": 484958985, "node_id": "MDU6SXNzdWU0ODQ5NTg5ODU=", "number": 143, "title": "Incorrect types revealed for several user fields", "user": {"login": "sobolevn", "id": 4660275, "node_id": "MDQ6VXNlcjQ2NjAyNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4660275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sobolevn", "html_url": "https://github.com/sobolevn", "followers_url": "https://api.github.com/users/sobolevn/followers", "following_url": "https://api.github.com/users/sobolevn/following{/other_user}", "gists_url": "https://api.github.com/users/sobolevn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sobolevn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sobolevn/subscriptions", "organizations_url": "https://api.github.com/users/sobolevn/orgs", "repos_url": "https://api.github.com/users/sobolevn/repos", "events_url": "https://api.github.com/users/sobolevn/events{/privacy}", "received_events_url": "https://api.github.com/users/sobolevn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-25T18:05:26Z", "updated_at": "2019-09-17T22:40:16Z", "closed_at": "2019-09-17T22:40:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Source code:\r\n\r\n```python\r\n# -*- coding: utf-8 -*-\r\n\r\nfrom django.contrib.auth import get_user_model\r\nfrom django.db import models\r\n\r\nUser = get_user_model()\r\n\r\n\r\nclass BlogPost(models.Model):\r\n    \"\"\"Example model with different fields and a foreign key.\"\"\"\r\n\r\n    author = models.ForeignKey(User, on_delete=models.CASCADE)\r\n\r\n    text = models.TextField()\r\n\r\n    is_published = models.BooleanField(default=False)\r\n    created_at = models.DateTimeField(auto_now_add=True)\r\n\r\n    def __str__(self) -> str:\r\n        \"\"\"Custom representation.\"\"\"\r\n        # Correct:\r\n        reveal_type(User)\r\n        reveal_type(User.objects.get(id=1))\r\n\r\n        # Is `Any`:\r\n        reveal_type(User.objects.get(id=1).email)\r\n\r\n        # But this works correctly:\r\n        reveal_type(self.id)\r\n        reveal_type(User.objects.get(id=1).id)\r\n        reveal_type(BlogPost.objects.get(id=1).text)\r\n\r\n        return '<BlogPost {0}>'.format(self.id)\r\n```\r\n\r\nReproduction: https://github.com/sobolevn/django_stubs_example/blob/master/server/apps/main/models.py\r\n\r\nOutput:\r\n\r\n```\r\n\u00bb PYTHONPATH=${PYTHONPATH}:${PWD} mypy server\r\nserver/apps/main/models.py:22: note: Revealed type is 'Type[django.contrib.auth.models.User]'\r\nserver/apps/main/models.py:23: note: Revealed type is 'django.contrib.auth.models.User*'\r\nserver/apps/main/models.py:26: note: Revealed type is 'Any'\r\nserver/apps/main/models.py:29: note: Revealed type is 'builtins.int*'\r\nserver/apps/main/models.py:30: note: Revealed type is 'builtins.int*'\r\nserver/apps/main/models.py:31: note: Revealed type is 'builtins.str*'\r\n```\r\n\r\nThe same happens for `username`, `email`, `is_superuser`, etc. But `missing` field raises (as it should):\r\n\r\n```\r\nserver/apps/main/models.py:26: error: \"User\" has no attribute \"missing\"\r\n```\r\n\r\nAny ideas about why this might happen?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/130", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/130/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/130/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/130", "id": 479712592, "node_id": "MDU6SXNzdWU0Nzk3MTI1OTI=", "number": 130, "title": "collecstatic methods should accept any `Storage`", "user": {"login": "antonagestam", "id": 218551, "node_id": "MDQ6VXNlcjIxODU1MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/218551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antonagestam", "html_url": "https://github.com/antonagestam", "followers_url": "https://api.github.com/users/antonagestam/followers", "following_url": "https://api.github.com/users/antonagestam/following{/other_user}", "gists_url": "https://api.github.com/users/antonagestam/gists{/gist_id}", "starred_url": "https://api.github.com/users/antonagestam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antonagestam/subscriptions", "organizations_url": "https://api.github.com/users/antonagestam/orgs", "repos_url": "https://api.github.com/users/antonagestam/repos", "events_url": "https://api.github.com/users/antonagestam/events{/privacy}", "received_events_url": "https://api.github.com/users/antonagestam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": {"login": "sobolevn", "id": 4660275, "node_id": "MDQ6VXNlcjQ2NjAyNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4660275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sobolevn", "html_url": "https://github.com/sobolevn", "followers_url": "https://api.github.com/users/sobolevn/followers", "following_url": "https://api.github.com/users/sobolevn/following{/other_user}", "gists_url": "https://api.github.com/users/sobolevn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sobolevn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sobolevn/subscriptions", "organizations_url": "https://api.github.com/users/sobolevn/orgs", "repos_url": "https://api.github.com/users/sobolevn/repos", "events_url": "https://api.github.com/users/sobolevn/events{/privacy}", "received_events_url": "https://api.github.com/users/sobolevn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sobolevn", "id": 4660275, "node_id": "MDQ6VXNlcjQ2NjAyNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4660275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sobolevn", "html_url": "https://github.com/sobolevn", "followers_url": "https://api.github.com/users/sobolevn/followers", "following_url": "https://api.github.com/users/sobolevn/following{/other_user}", "gists_url": "https://api.github.com/users/sobolevn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sobolevn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sobolevn/subscriptions", "organizations_url": "https://api.github.com/users/sobolevn/orgs", "repos_url": "https://api.github.com/users/sobolevn/repos", "events_url": "https://api.github.com/users/sobolevn/events{/privacy}", "received_events_url": "https://api.github.com/users/sobolevn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-08-12T15:32:58Z", "updated_at": "2019-08-16T12:45:08Z", "closed_at": "2019-08-16T12:45:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In `django.contrib.staticfiles.management.commands.collectstatic`, the `source_storage` argument is annotated as `django.core.files.storage.FileSystemStorage`. I believe this is incorrect and should actually be `django.core.files.storage.Storage`.\r\n\r\nhttps://github.com/typeddjango/django-stubs/blob/master/django-stubs/contrib/staticfiles/management/commands/collectstatic.pyi#L26", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/128", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/128/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/128/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/128", "id": 479567209, "node_id": "MDU6SXNzdWU0Nzk1NjcyMDk=", "number": 128, "title": "Setup flake8-pyi to lint stubs", "user": {"login": "sobolevn", "id": 4660275, "node_id": "MDQ6VXNlcjQ2NjAyNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4660275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sobolevn", "html_url": "https://github.com/sobolevn", "followers_url": "https://api.github.com/users/sobolevn/followers", "following_url": "https://api.github.com/users/sobolevn/following{/other_user}", "gists_url": "https://api.github.com/users/sobolevn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sobolevn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sobolevn/subscriptions", "organizations_url": "https://api.github.com/users/sobolevn/orgs", "repos_url": "https://api.github.com/users/sobolevn/repos", "events_url": "https://api.github.com/users/sobolevn/events{/privacy}", "received_events_url": "https://api.github.com/users/sobolevn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401222, "node_id": "MDU6TGFiZWwxMDA4NDAxMjIy", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": {"login": "sobolevn", "id": 4660275, "node_id": "MDQ6VXNlcjQ2NjAyNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4660275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sobolevn", "html_url": "https://github.com/sobolevn", "followers_url": "https://api.github.com/users/sobolevn/followers", "following_url": "https://api.github.com/users/sobolevn/following{/other_user}", "gists_url": "https://api.github.com/users/sobolevn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sobolevn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sobolevn/subscriptions", "organizations_url": "https://api.github.com/users/sobolevn/orgs", "repos_url": "https://api.github.com/users/sobolevn/repos", "events_url": "https://api.github.com/users/sobolevn/events{/privacy}", "received_events_url": "https://api.github.com/users/sobolevn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sobolevn", "id": 4660275, "node_id": "MDQ6VXNlcjQ2NjAyNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4660275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sobolevn", "html_url": "https://github.com/sobolevn", "followers_url": "https://api.github.com/users/sobolevn/followers", "following_url": "https://api.github.com/users/sobolevn/following{/other_user}", "gists_url": "https://api.github.com/users/sobolevn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sobolevn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sobolevn/subscriptions", "organizations_url": "https://api.github.com/users/sobolevn/orgs", "repos_url": "https://api.github.com/users/sobolevn/repos", "events_url": "https://api.github.com/users/sobolevn/events{/privacy}", "received_events_url": "https://api.github.com/users/sobolevn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-08-12T10:14:35Z", "updated_at": "2019-08-13T12:01:15Z", "closed_at": "2019-08-13T12:01:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It will enforce `...` instead of `None`, find useless nodes for annotations, etc.\r\nhttps://github.com/ambv/flake8-pyi", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/127", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/127/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/127/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/127", "id": 479200868, "node_id": "MDU6SXNzdWU0NzkyMDA4Njg=", "number": 127, "title": "Bug: Module 'django.contrib.admindocs' has no attribute 'urls'", "user": {"login": "sobolevn", "id": 4660275, "node_id": "MDQ6VXNlcjQ2NjAyNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4660275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sobolevn", "html_url": "https://github.com/sobolevn", "followers_url": "https://api.github.com/users/sobolevn/followers", "following_url": "https://api.github.com/users/sobolevn/following{/other_user}", "gists_url": "https://api.github.com/users/sobolevn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sobolevn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sobolevn/subscriptions", "organizations_url": "https://api.github.com/users/sobolevn/orgs", "repos_url": "https://api.github.com/users/sobolevn/repos", "events_url": "https://api.github.com/users/sobolevn/events{/privacy}", "received_events_url": "https://api.github.com/users/sobolevn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": {"login": "sobolevn", "id": 4660275, "node_id": "MDQ6VXNlcjQ2NjAyNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4660275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sobolevn", "html_url": "https://github.com/sobolevn", "followers_url": "https://api.github.com/users/sobolevn/followers", "following_url": "https://api.github.com/users/sobolevn/following{/other_user}", "gists_url": "https://api.github.com/users/sobolevn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sobolevn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sobolevn/subscriptions", "organizations_url": "https://api.github.com/users/sobolevn/orgs", "repos_url": "https://api.github.com/users/sobolevn/repos", "events_url": "https://api.github.com/users/sobolevn/events{/privacy}", "received_events_url": "https://api.github.com/users/sobolevn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sobolevn", "id": 4660275, "node_id": "MDQ6VXNlcjQ2NjAyNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4660275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sobolevn", "html_url": "https://github.com/sobolevn", "followers_url": "https://api.github.com/users/sobolevn/followers", "following_url": "https://api.github.com/users/sobolevn/following{/other_user}", "gists_url": "https://api.github.com/users/sobolevn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sobolevn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sobolevn/subscriptions", "organizations_url": "https://api.github.com/users/sobolevn/orgs", "repos_url": "https://api.github.com/users/sobolevn/repos", "events_url": "https://api.github.com/users/sobolevn/events{/privacy}", "received_events_url": "https://api.github.com/users/sobolevn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-08-09T23:32:19Z", "updated_at": "2019-08-16T12:45:18Z", "closed_at": "2019-08-16T12:45:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Source:\r\n\r\n```python\r\nfrom django.contrib.admindocs import urls as admindocs_urls\r\n```\r\n\r\n\r\n```\r\nserver/urls.py:16: error: Module 'django.contrib.admindocs' has no attribute 'urls'\r\n```\r\n\r\nRef: https://github.com/wemake-services/wemake-django-template/blob/81f162b8ce26671429c32dfa2701648c8ddcb038/%7B%7Bcookiecutter.project_name%7D%7D/server/urls.py#L16\r\nReal source: https://github.com/django/django/blob/master/django/contrib/admindocs/urls.py", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/125", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/125/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/125/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/125", "id": 476454821, "node_id": "MDU6SXNzdWU0NzY0NTQ4MjE=", "number": 125, "title": "Support mypy --python-executable", "user": {"login": "tyrion", "id": 12343, "node_id": "MDQ6VXNlcjEyMzQz", "avatar_url": "https://avatars3.githubusercontent.com/u/12343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tyrion", "html_url": "https://github.com/tyrion", "followers_url": "https://api.github.com/users/tyrion/followers", "following_url": "https://api.github.com/users/tyrion/following{/other_user}", "gists_url": "https://api.github.com/users/tyrion/gists{/gist_id}", "starred_url": "https://api.github.com/users/tyrion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tyrion/subscriptions", "organizations_url": "https://api.github.com/users/tyrion/orgs", "repos_url": "https://api.github.com/users/tyrion/repos", "events_url": "https://api.github.com/users/tyrion/events{/privacy}", "received_events_url": "https://api.github.com/users/tyrion/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-03T14:06:52Z", "updated_at": "2019-08-12T15:54:18Z", "closed_at": "2019-08-12T15:54:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was successfully using django-stubs until recently. It appears that recently you started importing `DJANGO_SETTINGS_MODULE` in the code of the plugin. This breaks for everyone that is running mypy from an other python interpreter than the one where the project is installed.\r\n\r\nMany people prefer to install mypy (and other tools/linters) only once in a dedicated virtualenv instead of installing it in every project and then pointing it to the correct python version using `--python-executable`. It would be great if you could support this scenario again.\r\n\r\nI think you may be able to locate the settings module by using some mypy internal lookup methods instead of importing it directly. In case that is not possible, or meanwhile you figure it out, it would be great to have the plugin work even if it cannot load `DJANGO_SETTINGS_MODULE`, maybe with limited functionality.\r\n\r\nThank you very much :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/123", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/123/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/123/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/123", "id": 475793444, "node_id": "MDU6SXNzdWU0NzU3OTM0NDQ=", "number": 123, "title": "Revealed field instead of descriptor", "user": {"login": "K0Te", "id": 6162155, "node_id": "MDQ6VXNlcjYxNjIxNTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6162155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/K0Te", "html_url": "https://github.com/K0Te", "followers_url": "https://api.github.com/users/K0Te/followers", "following_url": "https://api.github.com/users/K0Te/following{/other_user}", "gists_url": "https://api.github.com/users/K0Te/gists{/gist_id}", "starred_url": "https://api.github.com/users/K0Te/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/K0Te/subscriptions", "organizations_url": "https://api.github.com/users/K0Te/orgs", "repos_url": "https://api.github.com/users/K0Te/repos", "events_url": "https://api.github.com/users/K0Te/events{/privacy}", "received_events_url": "https://api.github.com/users/K0Te/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-01T17:06:00Z", "updated_at": "2019-08-23T01:03:04Z", "closed_at": "2019-08-23T01:03:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nThis one seems to cause quite a log of false positives on my project, however I'm not sure how to fix it.\r\nDjango-stubs correctly shows type for `ModelInstance.field`, but not for `ModelClass.Field`.\r\nFor example, `ForeignKey` is revealed as `django.db.models.fields.related.ForeignKey[...]` instead of `django.db.models.fields.related_descriptors.ForwardManyToOneDescriptor`, `FileField` is revealed as `FileField` instead of `django.db.models.fields.files.FileDescriptor`.\r\n\r\nResulting error examples:\r\n- `error: \"ForeignKey[Union[P, Combinable], P]\" has no attribute \"RelatedObjectDoesNotExist\"`\r\n- `error: \"FileField[Any, Any]\" has no attribute \"field\"` ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/122", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/122/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/122/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/122", "id": 475724804, "node_id": "MDU6SXNzdWU0NzU3MjQ4MDQ=", "number": 122, "title": "Wrong annotation for EmailMessage.attachments", "user": {"login": "K0Te", "id": 6162155, "node_id": "MDQ6VXNlcjYxNjIxNTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6162155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/K0Te", "html_url": "https://github.com/K0Te", "followers_url": "https://api.github.com/users/K0Te/followers", "following_url": "https://api.github.com/users/K0Te/following{/other_user}", "gists_url": "https://api.github.com/users/K0Te/gists{/gist_id}", "starred_url": "https://api.github.com/users/K0Te/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/K0Te/subscriptions", "organizations_url": "https://api.github.com/users/K0Te/orgs", "repos_url": "https://api.github.com/users/K0Te/repos", "events_url": "https://api.github.com/users/K0Te/events{/privacy}", "received_events_url": "https://api.github.com/users/K0Te/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-01T14:44:22Z", "updated_at": "2019-08-12T15:46:11Z", "closed_at": "2019-08-12T15:46:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nCurrent annotation: `attachments: Optional[Union[List[Tuple[str, str]], List[MIMEText]]] = ...,`\r\nAccording to documentation:\r\n```\r\nattachments: A list of attachments to put on the message. These can be either MIMEBase instances, or (filename, content, mimetype) triples.\r\n```\r\nLook it should be `attachments: Optional[Union[List[Tuple[str, Union[bytes, str], str]], List[MIMEText]]] = ...,`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/121", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/121/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/121/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/121", "id": 475128929, "node_id": "MDU6SXNzdWU0NzUxMjg5Mjk=", "number": 121, "title": "Consider changing .first()/.last() back to Optional", "user": {"login": "bluetech", "id": 1223550, "node_id": "MDQ6VXNlcjEyMjM1NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1223550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluetech", "html_url": "https://github.com/bluetech", "followers_url": "https://api.github.com/users/bluetech/followers", "following_url": "https://api.github.com/users/bluetech/following{/other_user}", "gists_url": "https://api.github.com/users/bluetech/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluetech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluetech/subscriptions", "organizations_url": "https://api.github.com/users/bluetech/orgs", "repos_url": "https://api.github.com/users/bluetech/repos", "events_url": "https://api.github.com/users/bluetech/events{/privacy}", "received_events_url": "https://api.github.com/users/bluetech/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-31T12:56:41Z", "updated_at": "2019-08-23T00:31:08Z", "closed_at": "2019-08-23T00:31:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Regarding this comment:\r\n\r\nhttps://github.com/typeddjango/django-stubs/blob/5d2efdb80bb3adab3851a86da20a712778bc272d/django-stubs/db/models/query.pyi#L91-L93\r\n\r\nI think it will be better to change it back to Optional for these reasons:\r\n\r\n- It is safer.\r\n\r\n- I've seen a lot of places where `Model.objects.filter(...).first()` is used instead of `Model.objects.get(...)` so that an `Optional` is returned instead of an exception.\r\n\r\n- With the `warn_unreachable = True` mypy option set, \"redundant\" `is None` checks trigger a warning.\r\n\r\n- Adding an `assert is not None` is not so hard, and in case there is actually an unanticipated `None`, will provide a better stacktrace than some `None` attribute error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/118", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/118/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/118/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/118", "id": 473481658, "node_id": "MDU6SXNzdWU0NzM0ODE2NTg=", "number": 118, "title": "IndexError on extract_proper_type_queryset_values_list", "user": {"login": "canassa", "id": 288227, "node_id": "MDQ6VXNlcjI4ODIyNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/288227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canassa", "html_url": "https://github.com/canassa", "followers_url": "https://api.github.com/users/canassa/followers", "following_url": "https://api.github.com/users/canassa/following{/other_user}", "gists_url": "https://api.github.com/users/canassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/canassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canassa/subscriptions", "organizations_url": "https://api.github.com/users/canassa/orgs", "repos_url": "https://api.github.com/users/canassa/repos", "events_url": "https://api.github.com/users/canassa/events{/privacy}", "received_events_url": "https://api.github.com/users/canassa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-26T18:26:19Z", "updated_at": "2019-07-26T19:47:03Z", "closed_at": "2019-07-26T19:47:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\n\r\nI updated to django-stubs 1.0.0 and mypy started crashing. Here is a minimal example that reproduces the issue:\r\n\r\n```python\r\nfrom decimal import Decimal\r\n\r\nfrom django.db import models\r\n\r\nclass TransactionQuerySet(models.QuerySet):\r\n    def amount_pending_repayments(self) -> Decimal:\r\n        return self.values_list(\"total\", flat=True)\r\n```\r\n\r\nIt crashes with the following traceback:\r\n\r\n```\r\nINTERNAL ERROR -- Please try using mypy master on Github:\r\nhttps://mypy.rtfd.io/en/latest/common_issues.html#using-a-development-mypy-build\r\nPlease report a bug at https://github.com/python/mypy/issues\r\nversion: 0.720\r\nTraceback (most recent call last):\r\n  File \"mypy/checkexpr.py\", line 3404, in accept\r\n  File \"mypy/nodes.py\", line 1527, in accept\r\n  File \"mypy/checkexpr.py\", line 234, in visit_call_expr__ExpressionVisitor_glue\r\n  File \"mypy/checkexpr.py\", line 243, in visit_call_expr\r\n  File \"mypy/checkexpr.py\", line 315, in visit_call_expr_inner\r\n  File \"mypy/checkexpr.py\", line 670, in check_call_expr_with_callee_type\r\n  File \"mypy/checkexpr.py\", line 728, in check_call\r\n  File \"mypy/checkexpr.py\", line 835, in check_callable_call\r\n  File \"mypy/checkexpr.py\", line 581, in apply_function_plugin\r\n  File \"/Users/canassa/.pyenv/versions/3.7.4/lib/python3.7/site-packages/mypy_django_plugin/transformers/querysets.py\", line 98, in extract_proper_type_queryset_values_list\r\n    if not isinstance(ctx.type.args[0], Instance):\r\nIndexError: list index out of range\r\nsrc/bli.py:8: : note: use --pdb to drop into pdb\r\n```\r\n\r\nAnd this is some `pdb` inspection:\r\n\r\n```\r\nsrc/bli.py:10: error: INTERNAL ERROR -- Please try using mypy master on Github:\r\nhttps://mypy.rtfd.io/en/latest/common_issues.html#using-a-development-mypy-build\r\nPlease report a bug at https://github.com/python/mypy/issues\r\nversion: 0.720\r\nDropping into pdb\r\n> /Users/canassa/.pyenv/versions/3.7.4/lib/python3.7/site-packages/mypy_django_plugin/transformers/querysets.py(148)extract_proper_type_queryset_values()\r\n-> if not isinstance(ctx.type.args[0], Instance):\r\n(Pdb) ctx\r\nMethodContext(type=bli.TransactionQuerySet, arg_types=[[builtins.str], []], arg_kinds=[[0], []], callee_arg_names=['fields', 'expressions'], arg_names=[[None], []], default_return_type=django.db.models.query.QuerySet[Any, builtins.dict[builtins.str, Any]], args=[[<mypy.nodes.StrExpr object at 0x110069710>], []], context=<mypy.nodes.CallExpr object at 0x11007c150>, api=<mypy.checker.TypeChecker object at 0x112b8eb00>)\r\n(Pdb) ctx.type\r\nbli.TransactionQuerySet\r\n(Pdb) ctx.type\r\nbli.TransactionQuerySet\r\n(Pdb) ctx.type.args\r\n[]\r\n(Pdb) c\r\n```\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/116", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/116/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/116/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/116", "id": 473393248, "node_id": "MDU6SXNzdWU0NzMzOTMyNDg=", "number": 116, "title": "mypy_django_plugin cannot find module with settings", "user": {"login": "withthelemons", "id": 6709269, "node_id": "MDQ6VXNlcjY3MDkyNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6709269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/withthelemons", "html_url": "https://github.com/withthelemons", "followers_url": "https://api.github.com/users/withthelemons/followers", "following_url": "https://api.github.com/users/withthelemons/following{/other_user}", "gists_url": "https://api.github.com/users/withthelemons/gists{/gist_id}", "starred_url": "https://api.github.com/users/withthelemons/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/withthelemons/subscriptions", "organizations_url": "https://api.github.com/users/withthelemons/orgs", "repos_url": "https://api.github.com/users/withthelemons/repos", "events_url": "https://api.github.com/users/withthelemons/events{/privacy}", "received_events_url": "https://api.github.com/users/withthelemons/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-26T14:41:26Z", "updated_at": "2019-07-26T15:48:01Z", "closed_at": "2019-07-26T15:48:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "snippet from mypy.ini:\r\n```\r\n[mypy]\r\nplugins =\r\n    mypy_django_plugin.main\r\n\r\n[mypy.plugins.django-stubs]\r\ndjango_settings_module = \"users.settings\"\r\n```\r\n\r\n./manage.py runserver is fine\r\n```\r\nWatching for file changes with StatReloader\r\nINFO:django.utils.autoreload:Watching for file changes with StatReloader\r\nPerforming system checks...\r\n\r\nSystem check identified no issues (0 silenced).\r\nJuly 26, 2019 - 14:38:10\r\nDjango version 2.2.2, using settings 'users.settings'\r\nStarting development server at http://127.0.0.1:8000/\r\nQuit the server with CONTROL-C.\r\n```\r\n\r\nbut running \"mypy .\" fails\r\n```\r\nModuleNotFoundError: No module named 'users'\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/114", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/114/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/114/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/114", "id": 473164613, "node_id": "MDU6SXNzdWU0NzMxNjQ2MTM=", "number": 114, "title": "Don't make psycopg2 a dependency", "user": {"login": "kylebebak", "id": 1524088, "node_id": "MDQ6VXNlcjE1MjQwODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1524088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylebebak", "html_url": "https://github.com/kylebebak", "followers_url": "https://api.github.com/users/kylebebak/followers", "following_url": "https://api.github.com/users/kylebebak/following{/other_user}", "gists_url": "https://api.github.com/users/kylebebak/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylebebak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylebebak/subscriptions", "organizations_url": "https://api.github.com/users/kylebebak/orgs", "repos_url": "https://api.github.com/users/kylebebak/repos", "events_url": "https://api.github.com/users/kylebebak/events{/privacy}", "received_events_url": "https://api.github.com/users/kylebebak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-26T03:52:22Z", "updated_at": "2019-07-26T18:20:42Z", "closed_at": "2019-07-26T15:39:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Installing `pscyopg2` can be difficult on many platforms.\r\n\r\nMaking this a dep for type stubs seems **really** excessive to me.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/112", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/112/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/112/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/112", "id": 470302827, "node_id": "MDU6SXNzdWU0NzAzMDI4Mjc=", "number": 112, "title": "Add pull request template for github", "user": {"login": "sobolevn", "id": 4660275, "node_id": "MDQ6VXNlcjQ2NjAyNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4660275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sobolevn", "html_url": "https://github.com/sobolevn", "followers_url": "https://api.github.com/users/sobolevn/followers", "following_url": "https://api.github.com/users/sobolevn/following{/other_user}", "gists_url": "https://api.github.com/users/sobolevn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sobolevn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sobolevn/subscriptions", "organizations_url": "https://api.github.com/users/sobolevn/orgs", "repos_url": "https://api.github.com/users/sobolevn/repos", "events_url": "https://api.github.com/users/sobolevn/events{/privacy}", "received_events_url": "https://api.github.com/users/sobolevn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401222, "node_id": "MDU6TGFiZWwxMDA4NDAxMjIy", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": {"login": "sobolevn", "id": 4660275, "node_id": "MDQ6VXNlcjQ2NjAyNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4660275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sobolevn", "html_url": "https://github.com/sobolevn", "followers_url": "https://api.github.com/users/sobolevn/followers", "following_url": "https://api.github.com/users/sobolevn/following{/other_user}", "gists_url": "https://api.github.com/users/sobolevn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sobolevn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sobolevn/subscriptions", "organizations_url": "https://api.github.com/users/sobolevn/orgs", "repos_url": "https://api.github.com/users/sobolevn/repos", "events_url": "https://api.github.com/users/sobolevn/events{/privacy}", "received_events_url": "https://api.github.com/users/sobolevn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sobolevn", "id": 4660275, "node_id": "MDQ6VXNlcjQ2NjAyNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4660275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sobolevn", "html_url": "https://github.com/sobolevn", "followers_url": "https://api.github.com/users/sobolevn/followers", "following_url": "https://api.github.com/users/sobolevn/following{/other_user}", "gists_url": "https://api.github.com/users/sobolevn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sobolevn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sobolevn/subscriptions", "organizations_url": "https://api.github.com/users/sobolevn/orgs", "repos_url": "https://api.github.com/users/sobolevn/repos", "events_url": "https://api.github.com/users/sobolevn/events{/privacy}", "received_events_url": "https://api.github.com/users/sobolevn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-07-19T12:36:43Z", "updated_at": "2019-09-06T06:16:45Z", "closed_at": "2019-09-06T06:16:45Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We need to ask for docs to the original source when types are updated.\r\nWe would also want to know which version are affected: 2.1, 2.22, 2.2+, etc\r\n\r\nExample: https://github.com/wemake-services/wemake-python-styleguide/blob/master/.github/pull_request_template.md", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/110", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/110/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/110/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/110", "id": 469787453, "node_id": "MDU6SXNzdWU0Njk3ODc0NTM=", "number": 110, "title": "Inconsistent behavior depending on cache", "user": {"login": "ynikulin", "id": 5747246, "node_id": "MDQ6VXNlcjU3NDcyNDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/5747246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ynikulin", "html_url": "https://github.com/ynikulin", "followers_url": "https://api.github.com/users/ynikulin/followers", "following_url": "https://api.github.com/users/ynikulin/following{/other_user}", "gists_url": "https://api.github.com/users/ynikulin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ynikulin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ynikulin/subscriptions", "organizations_url": "https://api.github.com/users/ynikulin/orgs", "repos_url": "https://api.github.com/users/ynikulin/repos", "events_url": "https://api.github.com/users/ynikulin/events{/privacy}", "received_events_url": "https://api.github.com/users/ynikulin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-18T14:01:06Z", "updated_at": "2019-08-23T15:50:47Z", "closed_at": "2019-08-23T15:43:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\n```\r\nPython 3.7.3\r\n\r\ndjango==2.2.1\r\nmypy==0.710\r\ndjango-stubs==0.12.1\r\n```\r\n\r\nWhen I run `mypy .` I got **113** errors, but if I will run it again I got **371** errors. \r\n\r\nTo fix it - I remove local `.mypy_cache` and all fine, I got base **113** errors.\r\n\r\nCan you please give me some advice :) Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/108", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/108/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/108/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/108", "id": 468085130, "node_id": "MDU6SXNzdWU0NjgwODUxMzA=", "number": 108, "title": "Internal error with mypy 0.720's new semantic analyzer", "user": {"login": "scop", "id": 109152, "node_id": "MDQ6VXNlcjEwOTE1Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/109152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scop", "html_url": "https://github.com/scop", "followers_url": "https://api.github.com/users/scop/followers", "following_url": "https://api.github.com/users/scop/following{/other_user}", "gists_url": "https://api.github.com/users/scop/gists{/gist_id}", "starred_url": "https://api.github.com/users/scop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scop/subscriptions", "organizations_url": "https://api.github.com/users/scop/orgs", "repos_url": "https://api.github.com/users/scop/repos", "events_url": "https://api.github.com/users/scop/events{/privacy}", "received_events_url": "https://api.github.com/users/scop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-15T11:54:10Z", "updated_at": "2019-07-25T17:14:04Z", "closed_at": "2019-07-25T17:14:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm seeing internal errors with mypy 0.720's new semantic analyzer. No minimal reproducer yet, but perhaps you can make some sense of the traceback alone:\r\n\r\n```\r\n$ mypy --show-traceback fixtures.py \r\nfixtures.py:55: error: INTERNAL ERROR -- Please try using mypy master on Github:\r\nhttps://mypy.rtfd.io/en/latest/common_issues.html#using-a-development-mypy-build\r\nPlease report a bug at https://github.com/python/mypy/issues\r\nversion: 0.720\r\nTraceback (most recent call last):\r\n  File \"mypy/checkexpr.py\", line 3404, in accept\r\n  File \"mypy/nodes.py\", line 1527, in accept\r\n  File \"mypy/checkexpr.py\", line 234, in visit_call_expr__ExpressionVisitor_glue\r\n  File \"mypy/checkexpr.py\", line 243, in visit_call_expr\r\n  File \"mypy/checkexpr.py\", line 315, in visit_call_expr_inner\r\n  File \"mypy/checkexpr.py\", line 670, in check_call_expr_with_callee_type\r\n  File \"mypy/checkexpr.py\", line 728, in check_call\r\n  File \"mypy/checkexpr.py\", line 835, in check_callable_call\r\n  File \"mypy/checkexpr.py\", line 573, in apply_function_plugin\r\n  File \".../lib/python3.7/site-packages/mypy_django_plugin/transformers/init_create.py\", line 27, in redefine_and_typecheck_model_init\r\n    expected_types = extract_expected_types(ctx, model, is_init=True)\r\n  File \".../lib/python3.7/site-packages/mypy_django_plugin/transformers/init_create.py\", line 163, in extract_expected_types\r\n    autofield_info = api.lookup_typeinfo('django.db.models.fields.AutoField')\r\n  File \"mypy/checker.py\", line 3721, in lookup_typeinfo\r\n  File \"mypy/checker.py\", line 3772, in lookup_qualified\r\nAssertionError: Internal error: attempted lookup of unknown name\r\nfixtures.py:55: : note: use --pdb to drop into pdb\r\n```\r\nSame thing with current django-stubs master.\r\n\r\nRunning mypy with the `--no-new-semantic-analyzer` flag works around it for now, but that flag is going away soon.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/104", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/104/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/104/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/104", "id": 466270757, "node_id": "MDU6SXNzdWU0NjYyNzA3NTc=", "number": 104, "title": "First argument of localdate() and localtime() should be Optional", "user": {"login": "nuschk", "id": 5167117, "node_id": "MDQ6VXNlcjUxNjcxMTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5167117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nuschk", "html_url": "https://github.com/nuschk", "followers_url": "https://api.github.com/users/nuschk/followers", "following_url": "https://api.github.com/users/nuschk/following{/other_user}", "gists_url": "https://api.github.com/users/nuschk/gists{/gist_id}", "starred_url": "https://api.github.com/users/nuschk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nuschk/subscriptions", "organizations_url": "https://api.github.com/users/nuschk/orgs", "repos_url": "https://api.github.com/users/nuschk/repos", "events_url": "https://api.github.com/users/nuschk/events{/privacy}", "received_events_url": "https://api.github.com/users/nuschk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-10T12:06:24Z", "updated_at": "2019-07-11T06:01:03Z", "closed_at": "2019-07-10T12:58:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "In timezone.pyi, instead of \r\n\r\n```python\r\ndef localtime(value: _AnyTime, timezone: Optional[tzinfo] = None) -> datetime: ...\r\ndef localdate(value: _AnyTime, timezone: Optional[tzinfo] = None) -> date: ...\r\n```\r\n\r\nthese should quite simply be:\r\n\r\n```python\r\ndef localtime(value: Optional[_AnyTime] = None, timezone: Optional[tzinfo] = None) -> datetime: ...\r\ndef localdate(value: Optional[_AnyTime] = None, timezone: Optional[tzinfo] = None) -> date: ...\r\n```\r\n\r\nThis is true for django >= 1.11, so well within the scope of django-stubs.\r\n\r\nOh, and thank you so much for this great package! <3\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/96", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/96/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/96/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/96", "id": 461904850, "node_id": "MDU6SXNzdWU0NjE5MDQ4NTA=", "number": 96, "title": "Mypy 0.710 support", "user": {"login": "henribru", "id": 6639509, "node_id": "MDQ6VXNlcjY2Mzk1MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6639509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/henribru", "html_url": "https://github.com/henribru", "followers_url": "https://api.github.com/users/henribru/followers", "following_url": "https://api.github.com/users/henribru/following{/other_user}", "gists_url": "https://api.github.com/users/henribru/gists{/gist_id}", "starred_url": "https://api.github.com/users/henribru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/henribru/subscriptions", "organizations_url": "https://api.github.com/users/henribru/orgs", "repos_url": "https://api.github.com/users/henribru/repos", "events_url": "https://api.github.com/users/henribru/events{/privacy}", "received_events_url": "https://api.github.com/users/henribru/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-28T07:48:48Z", "updated_at": "2019-07-25T17:14:04Z", "closed_at": "2019-07-25T17:14:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Mypy 0.710 was released last week, but the setup.py is specifying `<0.710`. Are there compatibility issues with this version that makes this necessary?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/95", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/95/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/95/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/95", "id": 460012703, "node_id": "MDU6SXNzdWU0NjAwMTI3MDM=", "number": 95, "title": "Look for settings in setup.cfg", "user": {"login": "takkaria", "id": 405490, "node_id": "MDQ6VXNlcjQwNTQ5MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/405490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/takkaria", "html_url": "https://github.com/takkaria", "followers_url": "https://api.github.com/users/takkaria/followers", "following_url": "https://api.github.com/users/takkaria/following{/other_user}", "gists_url": "https://api.github.com/users/takkaria/gists{/gist_id}", "starred_url": "https://api.github.com/users/takkaria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/takkaria/subscriptions", "organizations_url": "https://api.github.com/users/takkaria/orgs", "repos_url": "https://api.github.com/users/takkaria/repos", "events_url": "https://api.github.com/users/takkaria/events{/privacy}", "received_events_url": "https://api.github.com/users/takkaria/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1517093408, "node_id": "MDU6TGFiZWwxNTE3MDkzNDA4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/upstream", "name": "upstream", "color": "fca635", "default": false, "description": "mypy"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-24T17:37:21Z", "updated_at": "2019-08-24T15:33:23Z", "closed_at": "2019-08-24T15:33:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be useful if the plugin looked for `setup.cfg` as well as `./mypy_django.ini` to avoid having to set env vars / type out a long string every time I use mypy.  Happy to submit a patch.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/94", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/94/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/94/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/94", "id": 457270833, "node_id": "MDU6SXNzdWU0NTcyNzA4MzM=", "number": 94, "title": "v0.12.0 seems to have been published with dev code", "user": {"login": "emilgoldsmith", "id": 18149242, "node_id": "MDQ6VXNlcjE4MTQ5MjQy", "avatar_url": "https://avatars0.githubusercontent.com/u/18149242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emilgoldsmith", "html_url": "https://github.com/emilgoldsmith", "followers_url": "https://api.github.com/users/emilgoldsmith/followers", "following_url": "https://api.github.com/users/emilgoldsmith/following{/other_user}", "gists_url": "https://api.github.com/users/emilgoldsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/emilgoldsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emilgoldsmith/subscriptions", "organizations_url": "https://api.github.com/users/emilgoldsmith/orgs", "repos_url": "https://api.github.com/users/emilgoldsmith/repos", "events_url": "https://api.github.com/users/emilgoldsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/emilgoldsmith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-18T05:38:22Z", "updated_at": "2019-08-16T12:46:47Z", "closed_at": "2019-08-16T12:46:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "So as I mentioned in my previous issue I got this package to work by downgrading to 0.12.0, after a few runs it started once in a while crashing with this error message though:\r\n\r\n![django-stubs bug](https://user-images.githubusercontent.com/18149242/59655591-25b3a780-919b-11e9-84a5-0c92b7fbd5d9.jpg)\r\n\r\nAfter some more debugging I found that there was a function in my distro version that's not in the Github v0.12.0 tag, and that was where the bug was, I also realized that this function that doesn't exist on Github at any time I can find (was looking through the git history of the main.py file) was being called like this (line 350):\r\n\r\n![Screenshot from 2019-06-18 07-35-07](https://user-images.githubusercontent.com/18149242/59655749-a2df1c80-919b-11e9-8668-a8451d7a2188.png)\r\n\r\nwhich not only has a commented out print statement but much more suspiciously has a return statement before all that logic below which is on Github but can't run in my distro. This leads me to believe the publisher was probably debugging before publishing and forgot to do a `git checkout` or something of the like to clear their code of debug statements before publishing. Not sure if it's possible to overwrite a publish on Pypi, probably not, and I guess this is already fixed in future releases but if there is a way of fixing it that would be cool. For me deleting that return statement seems to make the code work again", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/93", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/93/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/93/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/93", "id": 457071562, "node_id": "MDU6SXNzdWU0NTcwNzE1NjI=", "number": 93, "title": "v0.12.1 broke the mypy_django_plugin", "user": {"login": "emilgoldsmith", "id": 18149242, "node_id": "MDQ6VXNlcjE4MTQ5MjQy", "avatar_url": "https://avatars0.githubusercontent.com/u/18149242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emilgoldsmith", "html_url": "https://github.com/emilgoldsmith", "followers_url": "https://api.github.com/users/emilgoldsmith/followers", "following_url": "https://api.github.com/users/emilgoldsmith/following{/other_user}", "gists_url": "https://api.github.com/users/emilgoldsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/emilgoldsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emilgoldsmith/subscriptions", "organizations_url": "https://api.github.com/users/emilgoldsmith/orgs", "repos_url": "https://api.github.com/users/emilgoldsmith/repos", "events_url": "https://api.github.com/users/emilgoldsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/emilgoldsmith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-17T17:51:54Z", "updated_at": "2019-08-16T12:46:04Z", "closed_at": "2019-08-16T12:46:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was just trying to install this package for the first time, but kept getting import errors `Error importing plugin 'mypy_django_plugin.main'` which seems to be the same error you get if you just write something gibberish, aka it can't find the package. I was super stumped for a while and was debugging a lot, ending up also trying to install another plugin just to see if it was mypy but that worked. I also tried just importing `mypy_django_plugin` but that would tell me `Plugin 'mypy_django_plugin' does not define entry point function \"plugin\"`, so I tried importing the `plugin` function into `__init__.py` but then the previous error came again.\r\n\r\nI then saw that it was a pretty recent release I'd downloaded so I tried downgrading to `0.12.0` and it suddenly worked, so it looks like you somehow broke an import in `0.12.1` ?\r\n\r\nI'm on Ubuntu 18.04 using python 3.6.7 if that helps", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/89", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/89/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/89/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/89", "id": 454597764, "node_id": "MDU6SXNzdWU0NTQ1OTc3NjQ=", "number": 89, "title": "Django2.2 support", "user": {"login": "sobolevn", "id": 4660275, "node_id": "MDQ6VXNlcjQ2NjAyNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4660275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sobolevn", "html_url": "https://github.com/sobolevn", "followers_url": "https://api.github.com/users/sobolevn/followers", "following_url": "https://api.github.com/users/sobolevn/following{/other_user}", "gists_url": "https://api.github.com/users/sobolevn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sobolevn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sobolevn/subscriptions", "organizations_url": "https://api.github.com/users/sobolevn/orgs", "repos_url": "https://api.github.com/users/sobolevn/repos", "events_url": "https://api.github.com/users/sobolevn/events{/privacy}", "received_events_url": "https://api.github.com/users/sobolevn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-11T10:05:21Z", "updated_at": "2019-07-01T19:40:32Z", "closed_at": "2019-07-01T19:40:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "HI, @mkurnikov! Thanks for building this package.\r\n\r\nAre there any plans on `django@2.2` support? Since it is LTS, it might be a good idea to use this version.\r\n\r\nAnd a general question: what is your idea about different versions support? \r\nIs there any existing discussion about it? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/83", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/83/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/83/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/83", "id": 451101047, "node_id": "MDU6SXNzdWU0NTExMDEwNDc=", "number": 83, "title": "\"Type[Model]\" has no attribute \"objects\" (again?)", "user": {"login": "kam1sh", "id": 14600211, "node_id": "MDQ6VXNlcjE0NjAwMjEx", "avatar_url": "https://avatars2.githubusercontent.com/u/14600211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kam1sh", "html_url": "https://github.com/kam1sh", "followers_url": "https://api.github.com/users/kam1sh/followers", "following_url": "https://api.github.com/users/kam1sh/following{/other_user}", "gists_url": "https://api.github.com/users/kam1sh/gists{/gist_id}", "starred_url": "https://api.github.com/users/kam1sh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kam1sh/subscriptions", "organizations_url": "https://api.github.com/users/kam1sh/orgs", "repos_url": "https://api.github.com/users/kam1sh/repos", "events_url": "https://api.github.com/users/kam1sh/events{/privacy}", "received_events_url": "https://api.github.com/users/kam1sh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2019-06-01T16:17:55Z", "updated_at": "2019-07-25T17:14:05Z", "closed_at": "2019-07-25T17:14:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. I tried to use your package yesterday and I like it, although I've encountered one issue, when the django model I was accessing had no attribute 'objects', according to mypy. So it's like #16:\r\n```python\r\n...\r\nanchor/users/forms.py:26: error: \"Type[Model]\" has no attribute \"objects\"\r\nanchor/users/views.py:38: error: \"Type[Model]\" has no attribute \"objects\"\r\n...\r\n```\r\nThe repo where I found that is https://github.com/kam1sh/anchor.\r\n\r\nAlso, I looked at django-stubs source code, and the class had no 'objects' field at all. Is it intended?\r\n\r\nhttps://github.com/mkurnikov/django-stubs/blob/0e60b70ae4f521e3a527997d6b79e461d9245dfa/django-stubs/db/models/base.pyi#L9-L16\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/82", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/82/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/82/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/82", "id": 449884476, "node_id": "MDU6SXNzdWU0NDk4ODQ0NzY=", "number": 82, "title": "Foreign key reverse relationship: proper types for `<relatedmodel>_set` attributes", "user": {"login": "kylebebak", "id": 1524088, "node_id": "MDQ6VXNlcjE1MjQwODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1524088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylebebak", "html_url": "https://github.com/kylebebak", "followers_url": "https://api.github.com/users/kylebebak/followers", "following_url": "https://api.github.com/users/kylebebak/following{/other_user}", "gists_url": "https://api.github.com/users/kylebebak/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylebebak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylebebak/subscriptions", "organizations_url": "https://api.github.com/users/kylebebak/orgs", "repos_url": "https://api.github.com/users/kylebebak/repos", "events_url": "https://api.github.com/users/kylebebak/events{/privacy}", "received_events_url": "https://api.github.com/users/kylebebak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-29T15:44:39Z", "updated_at": "2019-06-10T02:25:29Z", "closed_at": "2019-06-10T02:25:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Right now a model instance's `<relatedmodel>_set` attribute has a type of `object`, when the type should actually be `django.db.models.manager.Manager[RelatedModel]`.\r\n\r\nFor example, `Organization.objects.first().user_set.all()` has a type error. `Organization.objects.first()` has the correct type of `Organization`, but if there is a `User` model with an FK to `Organization`, `Organization.objects.first().user_set` has a type of `object` instead of `django.db.models.manager.Manager[Organization]`.\r\n\r\nIs there any way to get the `<relatedmodel>_set` attribute to resolve to the proper type short of `cast`ing it each time?\r\n\r\nUsing `django-stubs==0.12.1`, Django 2.1.7, Python 3.7.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/79", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/79/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/79/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/79", "id": 444607447, "node_id": "MDU6SXNzdWU0NDQ2MDc0NDc=", "number": 79, "title": "FormMixin is incompatible with SuccessMessageMixin", "user": {"login": "PeterJCLaw", "id": 336212, "node_id": "MDQ6VXNlcjMzNjIxMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/336212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PeterJCLaw", "html_url": "https://github.com/PeterJCLaw", "followers_url": "https://api.github.com/users/PeterJCLaw/followers", "following_url": "https://api.github.com/users/PeterJCLaw/following{/other_user}", "gists_url": "https://api.github.com/users/PeterJCLaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/PeterJCLaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PeterJCLaw/subscriptions", "organizations_url": "https://api.github.com/users/PeterJCLaw/orgs", "repos_url": "https://api.github.com/users/PeterJCLaw/repos", "events_url": "https://api.github.com/users/PeterJCLaw/events{/privacy}", "received_events_url": "https://api.github.com/users/PeterJCLaw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-15T19:30:44Z", "updated_at": "2019-06-03T19:12:46Z", "closed_at": "2019-06-02T10:23:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "From what I can tell, the Django sources for these two are fine to be mixed together, however the type annotations seem to disagree:\r\n\r\n``` python\r\nfrom django.views.generic.edit import FormMixin\r\nfrom django.contrib.messages.views import SuccessMessageMixin\r\n\r\nreveal_type(FormMixin.form_valid)\r\n# Revealed type is 'def (self: ..., form: django.forms.forms.BaseForm) -> django.http.response.HttpResponse'\r\nreveal_type(SuccessMessageMixin.form_valid)\r\n# Revealed type is 'def (self: ..., form: django.forms.forms.Form) -> django.http.response.HttpResponseRedirect'\r\n\r\nclass FooView(FormMixin, SuccessMessageMixin):\r\n    pass\r\n\r\n# Definition of \"form_valid\" in base class \"FormMixin\" is incompatible with definition in base class \"SuccessMessageMixin\"\r\n```\r\n\r\nI suspect that the signature of `FormMixin` is the one we want to use, so the fix is to update `SuccessMessageMixin` to match. (If you agree that's a good solution I'd be happy to put up a PR)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/78", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/78/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/78/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/78", "id": 444602902, "node_id": "MDU6SXNzdWU0NDQ2MDI5MDI=", "number": 78, "title": "method_decorator should accept list first argument", "user": {"login": "PeterJCLaw", "id": 336212, "node_id": "MDQ6VXNlcjMzNjIxMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/336212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PeterJCLaw", "html_url": "https://github.com/PeterJCLaw", "followers_url": "https://api.github.com/users/PeterJCLaw/followers", "following_url": "https://api.github.com/users/PeterJCLaw/following{/other_user}", "gists_url": "https://api.github.com/users/PeterJCLaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/PeterJCLaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PeterJCLaw/subscriptions", "organizations_url": "https://api.github.com/users/PeterJCLaw/orgs", "repos_url": "https://api.github.com/users/PeterJCLaw/repos", "events_url": "https://api.github.com/users/PeterJCLaw/events{/privacy}", "received_events_url": "https://api.github.com/users/PeterJCLaw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-15T19:18:54Z", "updated_at": "2019-07-01T15:49:41Z", "closed_at": "2019-07-01T15:49:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following code is valid, but yields a warning I think is incorrect:\r\n``` python\r\nfrom django.utils.decorators import method_decorator\r\nfrom wherever import decorator_1, decorator_2\r\n\r\nnew_decorator = method_decorator(\r\n    [\r\n        decorator_1,\r\n        decorator_2,\r\n    ],\r\n    name='dispatch',\r\n)\r\n```\r\nerrors with:\r\n```\r\nArgument 1 to \"method_decorator\" has incompatible type \"List[Any]\"; expected \"Union[Callable[..., Any], Set[Callable[..., Any]], Tuple[Callable[..., Any], Callable[..., Any]]]\"\r\n```\r\n\r\nI'm guessing the fix is to add `List` or perhaps `Sequence` or `Container` into the allowed container types in the union. (If you agree that's a good solution I'd be happy to put up a PR)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/77", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/77/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/77/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/77", "id": 444564658, "node_id": "MDU6SXNzdWU0NDQ1NjQ2NTg=", "number": 77, "title": "Module 'django.db.models.deletion' has no attribute 'get_candidate_relations_to_delete'", "user": {"login": "PeterJCLaw", "id": 336212, "node_id": "MDQ6VXNlcjMzNjIxMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/336212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PeterJCLaw", "html_url": "https://github.com/PeterJCLaw", "followers_url": "https://api.github.com/users/PeterJCLaw/followers", "following_url": "https://api.github.com/users/PeterJCLaw/following{/other_user}", "gists_url": "https://api.github.com/users/PeterJCLaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/PeterJCLaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PeterJCLaw/subscriptions", "organizations_url": "https://api.github.com/users/PeterJCLaw/orgs", "repos_url": "https://api.github.com/users/PeterJCLaw/repos", "events_url": "https://api.github.com/users/PeterJCLaw/events{/privacy}", "received_events_url": "https://api.github.com/users/PeterJCLaw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-15T17:44:52Z", "updated_at": "2019-07-01T15:50:01Z", "closed_at": "2019-07-01T15:50:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Thanks for these type stubs. I'm just trying them out on a large Django codebase and I've hit a warning which seems incorrect:\r\n\r\n``` python\r\nfrom django.db.models.deletion import get_candidate_relations_to_delete\r\n```\r\nwill emit an error about the `memcached` backend not being present:\r\n```\r\nModule 'django.db.models.deletion' has no attribute 'get_candidate_relations_to_delete'\r\n```\r\n\r\n(sorry these ended up as three separate issues, in hindisght it might have made more sense to report them in the same go)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/76", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/76/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/76/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/76", "id": 444563046, "node_id": "MDU6SXNzdWU0NDQ1NjMwNDY=", "number": 76, "title": "Module 'django.db.backends.postgresql' has no attribute 'base'", "user": {"login": "PeterJCLaw", "id": 336212, "node_id": "MDQ6VXNlcjMzNjIxMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/336212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PeterJCLaw", "html_url": "https://github.com/PeterJCLaw", "followers_url": "https://api.github.com/users/PeterJCLaw/followers", "following_url": "https://api.github.com/users/PeterJCLaw/following{/other_user}", "gists_url": "https://api.github.com/users/PeterJCLaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/PeterJCLaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PeterJCLaw/subscriptions", "organizations_url": "https://api.github.com/users/PeterJCLaw/orgs", "repos_url": "https://api.github.com/users/PeterJCLaw/repos", "events_url": "https://api.github.com/users/PeterJCLaw/events{/privacy}", "received_events_url": "https://api.github.com/users/PeterJCLaw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-15T17:40:44Z", "updated_at": "2019-07-09T02:18:16Z", "closed_at": "2019-07-09T02:18:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Thanks for these type stubs. I'm just trying them out on a large Django codebase and I've hit a warning which seems incorrect:\r\n\r\n``` python\r\nfrom django.db.backends.postgresql import base\r\n```\r\nwill emit an error about the `base` module not being present:\r\n```\r\nModule 'django.db.backends.postgresql' has no attribute 'base'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/75", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/75/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/75/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/75", "id": 444562547, "node_id": "MDU6SXNzdWU0NDQ1NjI1NDc=", "number": 75, "title": "Module 'django.core.cache.backends' has no attribute 'memcached'", "user": {"login": "PeterJCLaw", "id": 336212, "node_id": "MDQ6VXNlcjMzNjIxMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/336212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PeterJCLaw", "html_url": "https://github.com/PeterJCLaw", "followers_url": "https://api.github.com/users/PeterJCLaw/followers", "following_url": "https://api.github.com/users/PeterJCLaw/following{/other_user}", "gists_url": "https://api.github.com/users/PeterJCLaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/PeterJCLaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PeterJCLaw/subscriptions", "organizations_url": "https://api.github.com/users/PeterJCLaw/orgs", "repos_url": "https://api.github.com/users/PeterJCLaw/repos", "events_url": "https://api.github.com/users/PeterJCLaw/events{/privacy}", "received_events_url": "https://api.github.com/users/PeterJCLaw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-15T17:39:28Z", "updated_at": "2019-08-24T15:35:43Z", "closed_at": "2019-08-24T15:35:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Thanks for these type stubs. I'm just trying them out on a large Django codebase and I've hit a warning which seems incorrect:\r\n\r\n``` python\r\nfrom django.core.cache.backends import dummy, memcached\r\n```\r\nwill emit an error about the `memcached` backend not being present:\r\n```\r\nModule 'django.core.cache.backends' has no attribute 'memcached'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/72", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/72/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/72/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/72", "id": 438345983, "node_id": "MDU6SXNzdWU0MzgzNDU5ODM=", "number": 72, "title": "Python 3.6: ModuleNotFoundError: No module named 'dataclasses'", "user": {"login": "andreymal", "id": 3236464, "node_id": "MDQ6VXNlcjMyMzY0NjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3236464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreymal", "html_url": "https://github.com/andreymal", "followers_url": "https://api.github.com/users/andreymal/followers", "following_url": "https://api.github.com/users/andreymal/following{/other_user}", "gists_url": "https://api.github.com/users/andreymal/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreymal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreymal/subscriptions", "organizations_url": "https://api.github.com/users/andreymal/orgs", "repos_url": "https://api.github.com/users/andreymal/repos", "events_url": "https://api.github.com/users/andreymal/events{/privacy}", "received_events_url": "https://api.github.com/users/andreymal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-29T14:31:25Z", "updated_at": "2019-07-25T17:14:04Z", "closed_at": "2019-07-25T17:14:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Your fix https://github.com/mkurnikov/django-stubs/commit/dcb4da378b50055e338eae95a50fa38357fa66be is actually not working, because it seems that the `.whl` file was built using Python 3.7 and the `dataclasses` dependency was not added to the wheel.\r\n\r\n```\r\n$ virtualenv --python /usr/bin/python3.6 py36\r\n$ . py36/bin/activate\r\n(py36) $ pip install django-stubs\r\nCollecting django-stubs\r\n  Using cached https://files.pythonhosted.org/packages/4e/16/03c7804694c16e5f6c159ef527ba6cbdaf2c1cfc76edc2c0f1daeead798d/django_stubs-0.12.1-py3-none-any.whl\r\nSuccessfully installed django-stubs-0.12.1 mypy-0.701 mypy-extensions-0.4.1 typed-ast-1.3.5 typing-extensions-3.7.2\r\n\r\n(py36) $ python\r\nPython 3.6.7 (default, Oct 22 2018, 11:32:17) \r\n[GCC 8.2.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import mypy_django_plugin\r\n>>> from mypy_django_plugin import main\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"py36/lib/python3.6/site-packages/mypy_django_plugin/main.py\", line 13, in <module>\r\n    from mypy_django_plugin.config import Config\r\n  File \"py36/lib/python3.6/site-packages/mypy_django_plugin/config.py\", line 4, in <module>\r\n    from dataclasses import dataclass\r\nModuleNotFoundError: No module named 'dataclasses'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/70", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/70/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/70/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/70", "id": 436188861, "node_id": "MDU6SXNzdWU0MzYxODg4NjE=", "number": 70, "title": "error: \"HttpRequest\" has no attribute \"user\"", "user": {"login": "snoepkast", "id": 1407794, "node_id": "MDQ6VXNlcjE0MDc3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1407794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snoepkast", "html_url": "https://github.com/snoepkast", "followers_url": "https://api.github.com/users/snoepkast/followers", "following_url": "https://api.github.com/users/snoepkast/following{/other_user}", "gists_url": "https://api.github.com/users/snoepkast/gists{/gist_id}", "starred_url": "https://api.github.com/users/snoepkast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snoepkast/subscriptions", "organizations_url": "https://api.github.com/users/snoepkast/orgs", "repos_url": "https://api.github.com/users/snoepkast/repos", "events_url": "https://api.github.com/users/snoepkast/events{/privacy}", "received_events_url": "https://api.github.com/users/snoepkast/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-23T13:29:56Z", "updated_at": "2019-07-25T17:14:05Z", "closed_at": "2019-07-25T17:14:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nI have the following code:\r\n\r\n```python\r\nclass MyView(RedirectView):\r\n    def get_redirect_url(self, *args: Any, **kwargs: Any) -> Optional(str):\r\n        if self.request.user.is_authenticated():\r\n            do_something_with_user()\r\n```\r\n\r\nWhich results in:\r\n\r\n```bash\r\n$ mypy\r\n> api/users/authentication/views.py:28: error: \"HttpRequest\" has no attribute \"user\"\r\n```\r\n\r\nWhich is probably because the HttpRequest class doesn't really have the user but it is almost always added through the authentication middleware (either User or AnonymousUser).\r\n\r\nSo how do I fix this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/69", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/69/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/69/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/69", "id": 436173983, "node_id": "MDU6SXNzdWU0MzYxNzM5ODM=", "number": 69, "title": "TypeError when using QuerySet generic", "user": {"login": "nuschk", "id": 5167117, "node_id": "MDQ6VXNlcjUxNjcxMTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5167117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nuschk", "html_url": "https://github.com/nuschk", "followers_url": "https://api.github.com/users/nuschk/followers", "following_url": "https://api.github.com/users/nuschk/following{/other_user}", "gists_url": "https://api.github.com/users/nuschk/gists{/gist_id}", "starred_url": "https://api.github.com/users/nuschk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nuschk/subscriptions", "organizations_url": "https://api.github.com/users/nuschk/orgs", "repos_url": "https://api.github.com/users/nuschk/repos", "events_url": "https://api.github.com/users/nuschk/events{/privacy}", "received_events_url": "https://api.github.com/users/nuschk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-23T12:58:59Z", "updated_at": "2019-04-23T14:46:09Z", "closed_at": "2019-04-23T14:46:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is probably a silly question. I'm getting runtime errors when using the QuerySet[] generic.\r\n\r\nConsider this file:\r\n\r\n**mypy_test.py**\r\n```python\r\nfrom django.contrib.auth.models import User, Permission\r\nfrom django.db.models.query import QuerySet\r\n\r\n\r\ndef f(queryset: QuerySet[User]) -> QuerySet[User]:\r\n    return queryset.order_by('id')\r\n\r\n\r\ndef g() -> None:\r\n    print(f(User.objects.all()))\r\n    print(f(Permission.objects.all()))\r\n```\r\n\r\nMypy is working as expected (which tells me, I've configured django-stubs correctly):\r\n\r\n```bash\r\nmypy src/mypy_test.py\r\nsrc/mypy_test.py:11: error: Argument 1 to \"f\" has incompatible type \"QuerySet[Permission, Permission]\"; expected \"QuerySet[User, User]\"\r\nexit 1\r\n```\r\n\r\nOnly, I can't import this file:\r\n\r\n```bash\r\nIn [1]: import mypy_test\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-1-040518e7b0e9> in <module>\r\n----> 1 import mypy_test\r\n\r\n~/Projects/flatfox-website/src/mypy_test.py in <module>\r\n      3\r\n      4\r\n----> 5 def f(queryset: QuerySet[User]) -> QuerySet[User]:\r\n      6     return queryset.order_by('id')\r\n      7\r\n\r\nTypeError: 'type' object is not subscriptable\r\n\r\nIn [2]:\r\n```\r\n\r\nWhy is the interpreter even trying to make sense of the type annotations? I'm confused, appreciating any help!\r\n\r\nOh, and many thanks for your work on this package!\r\n\r\n**mypy.ini**\r\n```ini\r\n# Global options:\r\n\r\n[mypy]\r\npython_version = 3.6\r\nwarn_return_any = True\r\nwarn_unused_configs = True\r\nignore_missing_imports = True\r\nplugins =\r\n    mypy_django_plugin.main\r\n```\r\n\r\nI don't have a mypy_django.ini.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/68", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/68/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/68/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/68", "id": 434738636, "node_id": "MDU6SXNzdWU0MzQ3Mzg2MzY=", "number": 68, "title": "Requiring field annotations even though type can be inferred from field type", "user": {"login": "pirate", "id": 511499, "node_id": "MDQ6VXNlcjUxMTQ5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/511499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pirate", "html_url": "https://github.com/pirate", "followers_url": "https://api.github.com/users/pirate/followers", "following_url": "https://api.github.com/users/pirate/following{/other_user}", "gists_url": "https://api.github.com/users/pirate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pirate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pirate/subscriptions", "organizations_url": "https://api.github.com/users/pirate/orgs", "repos_url": "https://api.github.com/users/pirate/repos", "events_url": "https://api.github.com/users/pirate/events{/privacy}", "received_events_url": "https://api.github.com/users/pirate/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401218, "node_id": "MDU6TGFiZWwxMDA4NDAxMjE4", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/typeddjango/django-stubs/milestones/1", "html_url": "https://github.com/typeddjango/django-stubs/milestone/1", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/milestones/1/labels", "id": 4688459, "node_id": "MDk6TWlsZXN0b25lNDY4ODQ1OQ==", "number": 1, "title": "1.2.0", "description": "", "creator": {"login": "mkurnikov", "id": 2341827, "node_id": "MDQ6VXNlcjIzNDE4Mjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2341827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkurnikov", "html_url": "https://github.com/mkurnikov", "followers_url": "https://api.github.com/users/mkurnikov/followers", "following_url": "https://api.github.com/users/mkurnikov/following{/other_user}", "gists_url": "https://api.github.com/users/mkurnikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkurnikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkurnikov/subscriptions", "organizations_url": "https://api.github.com/users/mkurnikov/orgs", "repos_url": "https://api.github.com/users/mkurnikov/repos", "events_url": "https://api.github.com/users/mkurnikov/events{/privacy}", "received_events_url": "https://api.github.com/users/mkurnikov/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2019-09-24T17:54:33Z", "updated_at": "2019-11-12T17:34:08Z", "due_on": null, "closed_at": "2019-11-12T17:34:08Z"}, "comments": 37, "created_at": "2019-04-18T12:12:39Z", "updated_at": "2019-09-28T01:05:54Z", "closed_at": "2019-09-28T01:05:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Right now mypy is complaining that my fields aren't annotated with types.\r\n\r\n![Screen Shot 2019-04-18 at 8 11 05 AM](https://user-images.githubusercontent.com/511499/56360145-abbe6c80-61b1-11e9-9c82-71dba4fed778.png)\r\n\r\nIs this expected behavior? If so, why? Cant the type be inferred from the field value itself?\r\n\r\nThanks! ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/63", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/63/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/63/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/63", "id": 428844212, "node_id": "MDU6SXNzdWU0Mjg4NDQyMTI=", "number": 63, "title": "Type of fields on non-model classes resolves to return type", "user": {"login": "higherorderfunctor", "id": 34926636, "node_id": "MDQ6VXNlcjM0OTI2NjM2", "avatar_url": "https://avatars1.githubusercontent.com/u/34926636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/higherorderfunctor", "html_url": "https://github.com/higherorderfunctor", "followers_url": "https://api.github.com/users/higherorderfunctor/followers", "following_url": "https://api.github.com/users/higherorderfunctor/following{/other_user}", "gists_url": "https://api.github.com/users/higherorderfunctor/gists{/gist_id}", "starred_url": "https://api.github.com/users/higherorderfunctor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/higherorderfunctor/subscriptions", "organizations_url": "https://api.github.com/users/higherorderfunctor/orgs", "repos_url": "https://api.github.com/users/higherorderfunctor/repos", "events_url": "https://api.github.com/users/higherorderfunctor/events{/privacy}", "received_events_url": "https://api.github.com/users/higherorderfunctor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-03T15:48:57Z", "updated_at": "2019-07-25T17:14:05Z", "closed_at": "2019-07-25T17:14:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Fields on non-model classes are resolving to the return type as if they were on a model.  Use case is binding the field with other data in order to access its field name and to_python methods while doing data collection.\r\n\r\n```\r\nfrom typing import Generic, Text, TypeVar\r\nfrom django.db import models\r\n\r\nA = TypeVar('A')\r\nB = TypeVar('B')\r\n\r\ndef field_name(field: models.Field[A, B]) -> Text:\r\n    reveal_type(field)  # Revealed type is 'django.db.models.fields.Field[A`-1, B`-2]\r\n    return field.name\r\n\r\nclass BoundWithField(Generic[A, B]):\r\n    field: models.Field[A, B]\r\n    def field_name(self) -> Text:\r\n        reveal_type(self.field)  # Revealed type is 'B`2\r\n        return self.field.name  # \"B\" has no attribute \"name\"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/62", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/62/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/62/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/62", "id": 427866413, "node_id": "MDU6SXNzdWU0Mjc4NjY0MTM=", "number": 62, "title": "Assertion errors when working with existing codebase", "user": {"login": "rafales", "id": 919812, "node_id": "MDQ6VXNlcjkxOTgxMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/919812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rafales", "html_url": "https://github.com/rafales", "followers_url": "https://api.github.com/users/rafales/followers", "following_url": "https://api.github.com/users/rafales/following{/other_user}", "gists_url": "https://api.github.com/users/rafales/gists{/gist_id}", "starred_url": "https://api.github.com/users/rafales/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rafales/subscriptions", "organizations_url": "https://api.github.com/users/rafales/orgs", "repos_url": "https://api.github.com/users/rafales/repos", "events_url": "https://api.github.com/users/rafales/events{/privacy}", "received_events_url": "https://api.github.com/users/rafales/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-01T19:11:48Z", "updated_at": "2019-07-25T17:14:05Z", "closed_at": "2019-07-25T17:14:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having one more problem. Background: I'm adding typing to 2y+ codebase, written in django. I started with those mypy settings:\r\n```\r\n[mypy]\r\nfollow_imports=silent\r\nignore_missing_imports=true\r\ndisallow_untyped_defs=true\r\nplugins=mypy_django_plugin.main\r\n\r\n# don't show any errors from migrations\r\n[mypy-*.migrations.*]\r\nignore_errors = true\r\n```\r\n\r\nI'm running mypy with a set of files and modules which are considered to be properly typed, not all files. The problem is that I often run into this problem:\r\n\r\n```\r\nsms/twilio/api.py:11: error: Function is missing a return type annotation\r\nsms/twilio/api.py:29: error: Function is missing a type annotation\r\nsms/twilio/api.py:34: error: Function is missing a type annotation\r\nsms/twilio/api.py:38: error: Function is missing a type annotation\r\nsms/twilio/api.py:56: error: Function is missing a type annotation\r\nsms/tasks/sms.py:16: error: Function is missing a type annotation\r\nTraceback (most recent call last):\r\n  File \"/Users/rafal/Projects/censored/venv/bin/mypy\", line 11, in <module>\r\n    sys.exit(console_entry())\r\n  File \"/Users/rafal/Projects/censored/venv/lib/python3.6/site-packages/mypy/__main__.py\", line 7, in console_entry\r\n    main(None)\r\n  File \"/Users/rafal/Projects/censored/venv/lib/python3.6/site-packages/mypy/main.py\", line 91, in main\r\n    res = build.build(sources, options, None, flush_errors, fscache)\r\n  File \"/Users/rafal/Projects/censored/venv/lib/python3.6/site-packages/mypy/build.py\", line 162, in build\r\n    result = _build(sources, options, alt_lib_path, flush_errors, fscache)\r\n  File \"/Users/rafal/Projects/censored/venv/lib/python3.6/site-packages/mypy/build.py\", line 217, in _build\r\n    graph = dispatch(sources, manager)\r\n  File \"/Users/rafal/Projects/censored/venv/lib/python3.6/site-packages/mypy/build.py\", line 2360, in dispatch\r\n    process_graph(graph, manager)\r\n  File \"/Users/rafal/Projects/censored/venv/lib/python3.6/site-packages/mypy/build.py\", line 2653, in process_graph\r\n    process_fresh_modules(graph, prev_scc, manager)\r\n  File \"/Users/rafal/Projects/censored/venv/lib/python3.6/site-packages/mypy/build.py\", line 2731, in process_fresh_modules\r\n    graph[id].fix_cross_refs()\r\n  File \"/Users/rafal/Projects/censored/venv/lib/python3.6/site-packages/mypy/build.py\", line 1714, in fix_cross_refs\r\n    self.options.use_fine_grained_cache)\r\n  File \"/Users/rafal/Projects/censored/venv/lib/python3.6/site-packages/mypy/fixup.py\", line 25, in fixup_module\r\n    node_fixer.visit_symbol_table(tree.names)\r\n  File \"/Users/rafal/Projects/censored/venv/lib/python3.6/site-packages/mypy/fixup.py\", line 88, in visit_symbol_table\r\n    self.visit_type_info(value.node)\r\n  File \"/Users/rafal/Projects/censored/venv/lib/python3.6/site-packages/mypy/fixup.py\", line 45, in visit_type_info\r\n    self.visit_symbol_table(info.names)\r\n  File \"/Users/rafal/Projects/censored/venv/lib/python3.6/site-packages/mypy/fixup.py\", line 90, in visit_symbol_table\r\n    value.node.accept(self)\r\n  File \"/Users/rafal/Projects/censored/venv/lib/python3.6/site-packages/mypy/nodes.py\", line 782, in accept\r\n    return visitor.visit_var(self)\r\n  File \"/Users/rafal/Projects/censored/venv/lib/python3.6/site-packages/mypy/fixup.py\", line 133, in visit_var\r\n    v.type.accept(self.type_fixer)\r\n  File \"/Users/rafal/Projects/censored/venv/lib/python3.6/site-packages/mypy/types.py\", line 620, in accept\r\n    return visitor.visit_instance(self)\r\n  File \"/Users/rafal/Projects/censored/venv/lib/python3.6/site-packages/mypy/fixup.py\", line 157, in visit_instance\r\n    a.accept(self)\r\n  File \"/Users/rafal/Projects/censored/venv/lib/python3.6/site-packages/mypy/types.py\", line 1601, in accept\r\n    return visitor.visit_union_type(self)\r\n  File \"/Users/rafal/Projects/censored/venv/lib/python3.6/site-packages/mypy/fixup.py\", line 229, in visit_union_type\r\n    it.accept(self)\r\n  File \"/Users/rafal/Projects/censored/venv/lib/python3.6/site-packages/mypy/types.py\", line 620, in accept\r\n    return visitor.visit_instance(self)\r\n  File \"/Users/rafal/Projects/censored/venv/lib/python3.6/site-packages/mypy/fixup.py\", line 150, in visit_instance\r\n    inst.type = lookup_qualified_typeinfo(self.modules, type_ref, self.quick_and_dirty)\r\n  File \"/Users/rafal/Projects/censored/venv/lib/python3.6/site-packages/mypy/fixup.py\", line 240, in lookup_qualified_typeinfo\r\n    node = lookup_qualified(modules, name, quick_and_dirty)\r\n  File \"/Users/rafal/Projects/censored/venv/lib/python3.6/site-packages/mypy/fixup.py\", line 254, in lookup_qualified\r\n    stnode = lookup_qualified_stnode(modules, name, quick_and_dirty)\r\n  File \"/Users/rafal/Projects/censored/venv/lib/python3.6/site-packages/mypy/fixup.py\", line 263, in lookup_qualified_stnode\r\n    return lookup_fully_qualified(name, modules, raise_on_missing=not quick_and_dirty)\r\n  File \"/Users/rafal/Projects/censored/venv/lib/python3.6/site-packages/mypy/lookup.py\", line 47, in lookup_fully_qualified\r\n    assert key in names, \"Cannot find %s for %s\" % (key, name)\r\nAssertionError: Cannot find models for general.models.CensoredUser\r\n```\r\n\r\nThis seems to be happening because of mypy cache. Running `rm -rf .mypy_cache` always fixes this, but just for the next run.\r\n\r\nIt usually happens for user model or other \"popular\" model in the app.\r\n\r\n```\r\n$ python --version\r\nPython 3.6.8\r\n$ mypy --version\r\nmypy 0.670\r\n$ pip freeze | grep django-stubs\r\ndjango-stubs==0.11.1\r\n```\r\n\r\nit works fine when I remove mypy django plugin.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/61", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/61/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/61/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/61", "id": 427665767, "node_id": "MDU6SXNzdWU0Mjc2NjU3Njc=", "number": 61, "title": "Model Field in type annotation runtime error", "user": {"login": "cs-cordero", "id": 15971666, "node_id": "MDQ6VXNlcjE1OTcxNjY2", "avatar_url": "https://avatars3.githubusercontent.com/u/15971666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cs-cordero", "html_url": "https://github.com/cs-cordero", "followers_url": "https://api.github.com/users/cs-cordero/followers", "following_url": "https://api.github.com/users/cs-cordero/following{/other_user}", "gists_url": "https://api.github.com/users/cs-cordero/gists{/gist_id}", "starred_url": "https://api.github.com/users/cs-cordero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cs-cordero/subscriptions", "organizations_url": "https://api.github.com/users/cs-cordero/orgs", "repos_url": "https://api.github.com/users/cs-cordero/repos", "events_url": "https://api.github.com/users/cs-cordero/events{/privacy}", "received_events_url": "https://api.github.com/users/cs-cordero/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-01T12:01:43Z", "updated_at": "2019-08-24T15:27:30Z", "closed_at": "2019-08-24T15:27:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Originally posted on the gitter:\r\n\r\n> I'm coming across this issue where I'm trying to use a `Field` in a type annotation something like: `Dict[Field, Any]`\r\n> \r\n> If i use mypy on this with django-stubs enabled, i get this error message:\r\n\r\n> >     `Missing type parameters for generic type`\r\n\r\n> \r\n> so then i change it to `Dict[Field[Any, Any], Any]`, and that fixes the problem in mypy, but at runtime, it fails:\r\n> \r\n\r\n> >     `TypeError: 'type' object is not subscriptable`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/52", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/52/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/52/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/52", "id": 422870571, "node_id": "MDU6SXNzdWU0MjI4NzA1NzE=", "number": 52, "title": "Catch type error on django models", "user": {"login": "balsagoth", "id": 183991, "node_id": "MDQ6VXNlcjE4Mzk5MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/183991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/balsagoth", "html_url": "https://github.com/balsagoth", "followers_url": "https://api.github.com/users/balsagoth/followers", "following_url": "https://api.github.com/users/balsagoth/following{/other_user}", "gists_url": "https://api.github.com/users/balsagoth/gists{/gist_id}", "starred_url": "https://api.github.com/users/balsagoth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/balsagoth/subscriptions", "organizations_url": "https://api.github.com/users/balsagoth/orgs", "repos_url": "https://api.github.com/users/balsagoth/repos", "events_url": "https://api.github.com/users/balsagoth/events{/privacy}", "received_events_url": "https://api.github.com/users/balsagoth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-19T17:49:38Z", "updated_at": "2019-03-28T20:13:04Z", "closed_at": "2019-03-28T20:13:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "It is possible to have type errors for django models?\r\n\r\n```python\r\nclass A(models.Model):\r\n    pass\r\n\r\nclass B(models.Model):\r\n    pass\r\n\r\ndef service(a: A) -> int:\r\n    pass\r\n\r\na_instance = A()\r\nb_instance = B()\r\nservice(b)  # no type error\r\n```\r\n\r\nIt would help a lot if this could be caught earlier on the editor.\r\nBecause all models inherit from `models.Model` and \r\n\r\n> Every class is also a valid type. Any instance of a subclass is also compatible with all superclasses\r\n\r\nI' m trying to figure if there is an option to detect this errors.\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/51", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/51/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/51/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/51", "id": 422815156, "node_id": "MDU6SXNzdWU0MjI4MTUxNTY=", "number": 51, "title": "Type inference fails for foreign keys with custom app names", "user": {"login": "aleksanb", "id": 1413365, "node_id": "MDQ6VXNlcjE0MTMzNjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1413365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aleksanb", "html_url": "https://github.com/aleksanb", "followers_url": "https://api.github.com/users/aleksanb/followers", "following_url": "https://api.github.com/users/aleksanb/following{/other_user}", "gists_url": "https://api.github.com/users/aleksanb/gists{/gist_id}", "starred_url": "https://api.github.com/users/aleksanb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aleksanb/subscriptions", "organizations_url": "https://api.github.com/users/aleksanb/orgs", "repos_url": "https://api.github.com/users/aleksanb/repos", "events_url": "https://api.github.com/users/aleksanb/events{/privacy}", "received_events_url": "https://api.github.com/users/aleksanb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-19T15:57:57Z", "updated_at": "2019-07-25T17:14:05Z", "closed_at": "2019-07-25T17:14:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If you have a foreign key or similar that refers to a model with a string, and you have a custom app name for the app where that model lives, the inferred type falls back to Any:\r\n```\r\nclass UserConfig(AppConfig):\r\n    name = 'hyre.user'\r\n    label = 'hyre__user'\r\n\r\nif TYPE_CHECKING:\r\n    from hyre.user.models import User\r\n\r\nclass MyClass(models.Model):\r\n    some_fk = models.ForeignKey( 'hyre__user.User', ...)\r\n```\r\n\r\nmypy-django will look for the model User in a file called hyre__user, but only hyre.user exists in `all_modules` in helpers.py.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/48", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/48/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/48/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/48", "id": 421652908, "node_id": "MDU6SXNzdWU0MjE2NTI5MDg=", "number": 48, "title": "KeyError: 'django.conf.global_settings'", "user": {"login": "Naddiseo", "id": 115951, "node_id": "MDQ6VXNlcjExNTk1MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/115951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Naddiseo", "html_url": "https://github.com/Naddiseo", "followers_url": "https://api.github.com/users/Naddiseo/followers", "following_url": "https://api.github.com/users/Naddiseo/following{/other_user}", "gists_url": "https://api.github.com/users/Naddiseo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Naddiseo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Naddiseo/subscriptions", "organizations_url": "https://api.github.com/users/Naddiseo/orgs", "repos_url": "https://api.github.com/users/Naddiseo/repos", "events_url": "https://api.github.com/users/Naddiseo/events{/privacy}", "received_events_url": "https://api.github.com/users/Naddiseo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-03-15T18:33:09Z", "updated_at": "2019-04-12T11:54:01Z", "closed_at": "2019-04-12T11:54:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Not sure where to report this, or even how to debug it, but I've been receiving the following error for the past few days that seems to be coming from django-stubs:\r\n```bash\r\n$ c&&DJANGO_PROJECT_SETTINGS=project.settings mypy --pdb --show-traceback project/app1/folder/folder2/somefile.py\r\n~/env/lib/python3.7/site-packages/django-stubs/conf/__init__.pyi:10: error: INTERNAL ERROR -- please report a bug at https://github.com/python/mypy/issues version: 0.670\r\nTraceback (most recent call last):\r\n  File \"~/env/bin/mypy\", line 10, in <module>\r\n    sys.exit(console_entry())\r\n  File \"mypy/semanal.py\", line 3787, in accept\r\n  File \"mypy/nodes.py\", line 845, in accept__Node_glue\r\n  File \"mypy/nodes.py\", line 846, in accept\r\n  File \"mypy/semanal.py\", line 801, in visit_class_def__StatementVisitor_glue\r\n  File \"mypy/semanal.py\", line 804, in visit_class_def\r\n  File \"mypy/semanal.py\", line 822, in analyze_class\r\n  File \"mypy/semanal.py\", line 830, in analyze_class_body_common\r\n  File \"mypy/semanal.py\", line 906, in apply_class_plugin_hooks\r\n  File \"~/env/lib/python3.7/site-packages/mypy_django_plugin/transformers/settings.py\", line 91, in __call__\r\n    module = api.modules[module_name]\r\nKeyError: 'django.conf.global_settings'\r\n~/env/lib/python3.7/site-packages/django-stubs/conf/__init__.pyi:10: : note: use --pdb to drop into pdb\r\n(Pdb) p api.modules.keys()\r\ndict_keys(['project.app1.folder.folder2.somefile', 'project', 'django.db.models.query', 'django.core.checks', 'django.apps', 'django.core.checks.registry', 'django.test', 'django.contrib.auth', 'django.test.testcases', 'django.test.utils', 'django.contrib.auth.backends', 'django.db.models.options', 'django.contrib.auth.signals', 'django.core.servers.basehttp', 'django.test.runner', 'django.conf', 'django.contrib.postgres.fields', '_ast', '_importlib_modulespec', 'ast', 'types', 'abc', 'typing', 'mmap', 'codecs', 'os.path', 'importlib.abc', 'collections', 'io', 'collections.abc', 'sys', 'posix', 'os', 'importlib.machinery', 'importlib.util', 'importlib', 'builtins', 'email.errors', 'email.charset', 'wsgiref.headers', 'django.core.management.color', 'wsgiref.types', 'django.contrib.postgres.fields.mixins', 'django.contrib.postgres', 'argparse', 'wsgiref', 'django.core.servers', 'contextlib', 'warnings', 'django.contrib.contenttypes', 'django.core.handlers', 'json.encoder', 'json.decoder', '_markupbase', 'html', 'django.urls.utils', 'django.contrib', 'django.contrib.sessions', 'django.contrib.sessions.backends', 'django.http.cookie', 'django.db.migrations.operations.base', 'functools', 'django.db.backends.base', 'django.db.backends', 'django.db.backends.sqlite3', 'threading', 'string', 'django.template.loaders', 'enum', 'django.db.backends.ddl_references', 'django.template.backends', 'tempfile', 'django.core.checks.messages', 'numbers', 'django.db.utils', 'django.core.files.utils', 'time', 'itertools', 'uuid', 'unittest.mock', 'django.utils.safestring', 'django.core', 'django.utils', 'django.utils.version', 'mypy_extensions', 'typing_extensions', '__future__', 'project.office', 'project.office.bankimport', 'project.office.bankimport.ml', 'email.header', 'http', 'wsgiref.util', 'socket', 'json', 'django.urls.converters', 'html.parser', 'logging', 're', 'django.core.files.temp', 'django.utils.datastructures', 'decimal', 'django.core.files.base', 'datetime', 'django', 'email.contentmanager', 'email.policy', 'email.message', 'wsgiref.handlers', 'socketserver', 'django.urls.resolvers', 'django.db.backends.utils', 'sqlite3.dbapi2', 'unittest', 'django.core.files', 'django.forms.utils', 'django.core.exceptions', 'email', 'django.urls.conf', 'django.urls.base', 'sqlite3', 'django.core.files.images', 'django.core.validators', 'django.core.files.uploadedfile', 'http.server', 'django.contrib.auth.validators', 'wsgiref.simple_server', 'django.contrib.auth.base_user', 'django.db.models.fields.proxy', 'django.db', 'django.db.models.deletion', 'django.core.management.base', 'django.core.serializers.base', 'django.core.serializers.python', 'django.contrib.contenttypes.models', 'django.core.serializers.json', 'django.core.handlers.base', 'django.contrib.auth.models', 'django.test.client', 'django.core.handlers.wsgi', 'django.urls.exceptions', 'django.http.response', 'django.template.smartif', 'django.urls', 'django.contrib.sessions.backends.base', 'django.http', 'django.apps.config', 'django.db.backends.base.base', 'django.template.loader_tags', 'django.template.defaulttags', 'django.http.request', 'django.db.models.sql.subqueries', 'django.utils.functional', 'django.db.backends.base.schema', 'django.db.backends.sqlite3.base', 'django.db.models.fields.reverse_related', 'django.db.models.fields.related_descriptors', 'django.template.exceptions', 'django.template.context', 'django.template.utils', 'django.template.loaders.base', 'django.template.library', 'django.template.base', 'django.db.models.sql.datastructures', 'django.db.models.sql', 'django.core.files.storage', 'django.db.models.sql.where', 'django.db.models.sql.compiler', 'django.db.models.fields.mixins', 'django.db.models.indexes', 'django.db.models.lookups', 'django.db.models.fields.related', 'django.db.models.fields', 'django.db.models.aggregates', 'django.template', 'django.template.engine', 'django.template.backends.base', 'django.db.models.sql.query', 'django.db.models.expressions', 'django.db.models.fields.files', 'django.forms.formsets', 'django.db.models.query_utils', 'django.db.models.manager', 'django.db.models.base', 'django.db.models', 'django.forms.renderers', 'django.forms.boundfield', 'django.forms.fields', 'django.forms.widgets', 'django.forms.models', 'django.forms.forms', 'django.forms', 'django.core.files.uploadhandler', 'django.dispatch.dispatcher', 'django.db.migrations.operations.models', 'django.db.migrations.operations.fields', 'django.utils.html', 'django.db.migrations.state', 'django.apps.registry', 'django.db.models.fields.related_lookups', 'django.utils.tree', 'django.db.migrations.operations.special', 'django.dispatch', 'django.db.migrations.migration', 'django.template.defaultfilters', 'django.db.migrations.operations', 'django.db.models.signals', 'django.db.migrations', 'django.core.serializers', 'django.core.wsgi', 'django.contrib.postgres.fields.citext', 'django.contrib.postgres.fields.array', 'django.contrib.contenttypes.fields'])\r\n(Pdb) p self.settings_modules\r\n['django.conf.global_settings']\r\n\r\n```\r\n\r\nUnfortunately, our codebase is too big to reduce to a test case, but I can do local debugging if you let me know what/where to look.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/47", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/47/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/47/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/47", "id": 421122833, "node_id": "MDU6SXNzdWU0MjExMjI4MzM=", "number": 47, "title": "warning Field is not callable", "user": {"login": "A-Iskakov", "id": 26543542, "node_id": "MDQ6VXNlcjI2NTQzNTQy", "avatar_url": "https://avatars2.githubusercontent.com/u/26543542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/A-Iskakov", "html_url": "https://github.com/A-Iskakov", "followers_url": "https://api.github.com/users/A-Iskakov/followers", "following_url": "https://api.github.com/users/A-Iskakov/following{/other_user}", "gists_url": "https://api.github.com/users/A-Iskakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/A-Iskakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/A-Iskakov/subscriptions", "organizations_url": "https://api.github.com/users/A-Iskakov/orgs", "repos_url": "https://api.github.com/users/A-Iskakov/repos", "events_url": "https://api.github.com/users/A-Iskakov/events{/privacy}", "received_events_url": "https://api.github.com/users/A-Iskakov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008401227, "node_id": "MDU6TGFiZWwxMDA4NDAxMjI3", "url": "https://api.github.com/repos/typeddjango/django-stubs/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": "This will not be worked on"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-03-14T16:30:03Z", "updated_at": "2019-08-24T15:28:59Z", "closed_at": "2019-08-24T15:28:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello guys,\r\nI get multiple warnings while determine field in Model class, such as **EmailField, BooleanField, PositiveSmallIntegerField, PositiveIntegerField, DateTimeField, TextField, NullBooleanField, UUIDField, URLField**\r\nThe warning everywhere the same:\r\nThis inspection highlights attempts to call objects which are not callable, like, for example, tuples.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/46", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/46/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/46/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/46", "id": 420671905, "node_id": "MDU6SXNzdWU0MjA2NzE5MDU=", "number": 46, "title": "Generic params are not passed correctly to QuerySet methods' return type", "user": {"login": "mkurnikov", "id": 2341827, "node_id": "MDQ6VXNlcjIzNDE4Mjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2341827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkurnikov", "html_url": "https://github.com/mkurnikov", "followers_url": "https://api.github.com/users/mkurnikov/followers", "following_url": "https://api.github.com/users/mkurnikov/following{/other_user}", "gists_url": "https://api.github.com/users/mkurnikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkurnikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkurnikov/subscriptions", "organizations_url": "https://api.github.com/users/mkurnikov/orgs", "repos_url": "https://api.github.com/users/mkurnikov/repos", "events_url": "https://api.github.com/users/mkurnikov/events{/privacy}", "received_events_url": "https://api.github.com/users/mkurnikov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-13T19:09:41Z", "updated_at": "2019-07-25T17:14:05Z", "closed_at": "2019-07-25T17:14:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\r\n[CASE custom_unannotated_manager_select_related_returns_proper_queryset]\r\nfrom django.db import models\r\nclass MyManager(models.Manager):\r\n    pass\r\nclass User(models.Model):\r\n    objects = MyManager()\r\n\r\nreveal_type(User.objects)  # E: Revealed type is 'main.MyManager[main.User]'\r\nreveal_type(User.objects.select_related())  # E: Revealed type is 'django.db.models.query.QuerySet[main.User*, main.User*]'\r\n[/CASE]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/45", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/45/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/45/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/45", "id": 420222287, "node_id": "MDU6SXNzdWU0MjAyMjIyODc=", "number": 45, "title": "Support stricter QuerySet row types for values/values_list via plugin magic", "user": {"login": "syastrov", "id": 5605897, "node_id": "MDQ6VXNlcjU2MDU4OTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5605897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syastrov", "html_url": "https://github.com/syastrov", "followers_url": "https://api.github.com/users/syastrov/followers", "following_url": "https://api.github.com/users/syastrov/following{/other_user}", "gists_url": "https://api.github.com/users/syastrov/gists{/gist_id}", "starred_url": "https://api.github.com/users/syastrov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syastrov/subscriptions", "organizations_url": "https://api.github.com/users/syastrov/orgs", "repos_url": "https://api.github.com/users/syastrov/repos", "events_url": "https://api.github.com/users/syastrov/events{/privacy}", "received_events_url": "https://api.github.com/users/syastrov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-12T21:51:53Z", "updated_at": "2019-03-25T09:53:10Z", "closed_at": "2019-03-25T09:53:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm gathering a list of things necessary to implement good support for adding specific types for `values` / `values_list` based on the current QuerySet + arguments to those methods + model information.\r\n\r\nBasic support:\r\n- [x] Lookup fields passed in on QuerySet's model (probably can reuse a lot of the information already used to support field access on model instances).\r\n- [x] Support 'id' / 'pk' lookups\r\n- [x] Support passing no arguments to `values` / `values_list`. It returns the correct type (Tuple/NamedTuple/Dict), but without field types specified.\r\n- [ ] ~~Add a flag to mypy_django.ini (called e.g. `use_strict_queryset_row_types`, default false) to turn on the feature. Document it in the README.~~ I decided not to do this, since the fallbacks (e.g. to Any) should not cause problems.\r\n\r\nRelated fields support:\r\n- [x] Lookup fields on models related to QuerySet (when using `__`), recursively.\r\n- [x] For a related field called `related_field`, support both `related_field` and `related_field_id` as arguments (they should return the related model's PK type).\r\n- [x] Support models using inheritance.\r\n\r\nOther nice-to-have + difficult/dynamic cases:\r\n- [ ] When no arguments are passed to `values` / `values_list`, it should return all fields (extra + annotated + model fields?).\r\n- [ ] Support QuerySet's that had previously been `annotate`-ed. We could keep track of extra annotated fields on the type metadata. It will sometimes be difficult to determine the correct type for some of those. We could try to rely on type-annotating the `output_field` attribute or property on the appropriate subclass of Expression in the stubs to get the most specific types. Maybe in some cases the plugin will have to do some magic to figure it out if it's possible (e.g. where `F` expressions are used).\r\n- [ ] Support annotating without an alias specified (e.g. `Book.objects.annotate(Max('id')).values_list('id__max', flat=True)`). It seems like it uses the lower-cased `name` attribute of the `Aggregate` appended to the field expression in the case there is only one expression.\r\n- [ ] Raise an error when annotating with an alias that conflicts with a model field name.\r\n- [ ] `values` supports adding additional annotations using keyword arguments. Not difficult once annotations are supported.\r\n- [ ] Support expressions passed to `values_list` (e.g. `Entry.objects.values_list('id', Lower('headline')))`). Should be doable once annotations are supported.\r\n- [ ] Support lookups in `values`/`values_list`. e.g. the docs gives an example with a custom lookup `Blog.objects.values('name__lower')`. Probably it's only feasible for the built-in lookups. If we have lookup support, then supporting type-checking `.filter` and `Q` objects is not far-fetched.\r\n- [ ] What happens when you use `select_related` / `prefetch_related`?\r\n\r\nRelated, but outside of scope for this task:\r\n- Adding extra fields to Model instances with the correct types if you call `annotate` on the QuerySet.\r\n\r\nIs there anything missing?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/43", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/43/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/43/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/43", "id": 419232704, "node_id": "MDU6SXNzdWU0MTkyMzI3MDQ=", "number": 43, "title": "models values_list unexpected type warning", "user": {"login": "A-Iskakov", "id": 26543542, "node_id": "MDQ6VXNlcjI2NTQzNTQy", "avatar_url": "https://avatars2.githubusercontent.com/u/26543542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/A-Iskakov", "html_url": "https://github.com/A-Iskakov", "followers_url": "https://api.github.com/users/A-Iskakov/followers", "following_url": "https://api.github.com/users/A-Iskakov/following{/other_user}", "gists_url": "https://api.github.com/users/A-Iskakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/A-Iskakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/A-Iskakov/subscriptions", "organizations_url": "https://api.github.com/users/A-Iskakov/orgs", "repos_url": "https://api.github.com/users/A-Iskakov/repos", "events_url": "https://api.github.com/users/A-Iskakov/events{/privacy}", "received_events_url": "https://api.github.com/users/A-Iskakov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-03-10T21:09:41Z", "updated_at": "2019-03-13T19:10:38Z", "closed_at": "2019-03-13T19:10:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "using values_list() on django models gets unexpected type(s) warning ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/42", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/42/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/42/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/42", "id": 417927286, "node_id": "MDU6SXNzdWU0MTc5MjcyODY=", "number": 42, "title": "Preserve Callable signature for view decorators", "user": {"login": "mkurnikov", "id": 2341827, "node_id": "MDQ6VXNlcjIzNDE4Mjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2341827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkurnikov", "html_url": "https://github.com/mkurnikov", "followers_url": "https://api.github.com/users/mkurnikov/followers", "following_url": "https://api.github.com/users/mkurnikov/following{/other_user}", "gists_url": "https://api.github.com/users/mkurnikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkurnikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkurnikov/subscriptions", "organizations_url": "https://api.github.com/users/mkurnikov/orgs", "repos_url": "https://api.github.com/users/mkurnikov/repos", "events_url": "https://api.github.com/users/mkurnikov/events{/privacy}", "received_events_url": "https://api.github.com/users/mkurnikov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-06T17:36:47Z", "updated_at": "2019-08-24T15:29:24Z", "closed_at": "2019-08-24T15:29:24Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Like it's done here\r\nhttps://github.com/mkurnikov/django-stubs/pull/41", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/typeddjango/django-stubs/issues/40", "repository_url": "https://api.github.com/repos/typeddjango/django-stubs", "labels_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/40/comments", "events_url": "https://api.github.com/repos/typeddjango/django-stubs/issues/40/events", "html_url": "https://github.com/typeddjango/django-stubs/issues/40", "id": 417208534, "node_id": "MDU6SXNzdWU0MTcyMDg1MzQ=", "number": 40, "title": "Type of model is not model's class", "user": {"login": "phwh", "id": 271254, "node_id": "MDQ6VXNlcjI3MTI1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/271254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phwh", "html_url": "https://github.com/phwh", "followers_url": "https://api.github.com/users/phwh/followers", "following_url": "https://api.github.com/users/phwh/following{/other_user}", "gists_url": "https://api.github.com/users/phwh/gists{/gist_id}", "starred_url": "https://api.github.com/users/phwh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phwh/subscriptions", "organizations_url": "https://api.github.com/users/phwh/orgs", "repos_url": "https://api.github.com/users/phwh/repos", "events_url": "https://api.github.com/users/phwh/events{/privacy}", "received_events_url": "https://api.github.com/users/phwh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-05T09:51:20Z", "updated_at": "2019-03-11T14:21:42Z", "closed_at": "2019-03-11T14:21:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all, django-stubs is an amazing project. I built some workarounds for typing Django myself but this project is so much more comprehensive and better. So thank you very much for your work!\r\n\r\nHowever, I have run into my first issue:\r\n\r\nFor the following code\r\n\r\n```python\r\nclass Comment(models.Model):\r\n    # fields\r\n    pass\r\n\r\nclass OtherModel(models.Model):\r\n    comments = GenericRelation(Comment)\r\n```\r\n\r\nmypy complains with the following error message:\r\n\r\n```\r\nerror: Argument 1 to \"GenericRelation\" has incompatible type \"Type[Comment]\"; expected \"Union[Type[Model], str]\"\r\n```\r\n\r\nExpecting `Union[Type[Model], str]` is completely correct imho. But since `Comment` is a subclass of `Model` everything should be fine.\r\n\r\nIn order to find the underlying problem I inserted an `reveal_type(Comment)` call which gave me the following output:\r\n\r\n```\r\nRevealed type is 'def (**kwargs: Any) -> comments.models.Comment'\r\n```\r\n\r\nMaybe this is totally fine and due to the internals of the plugin. But I expected it to be `Type[Comment]` which could also be the reason why mypy doesn't recognize it as compatible to `Type[Model]`.\r\n\r\n(What I don't understand is why mypy says `Type[Comment]` in the first error message which contradicts the 'revealed type' output)", "performed_via_github_app": null, "score": 1.0}]}