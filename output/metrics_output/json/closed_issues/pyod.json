{"total_count": 70, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/yzhao062/pyod/issues/215", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/215/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/215/events", "html_url": "https://github.com/yzhao062/pyod/issues/215", "id": 669280394, "node_id": "MDU6SXNzdWU2NjkyODAzOTQ=", "number": 215, "title": "Distribute fitting on Apache Spark cluster", "user": {"login": "ottok92", "id": 22245994, "node_id": "MDQ6VXNlcjIyMjQ1OTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/22245994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ottok92", "html_url": "https://github.com/ottok92", "followers_url": "https://api.github.com/users/ottok92/followers", "following_url": "https://api.github.com/users/ottok92/following{/other_user}", "gists_url": "https://api.github.com/users/ottok92/gists{/gist_id}", "starred_url": "https://api.github.com/users/ottok92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ottok92/subscriptions", "organizations_url": "https://api.github.com/users/ottok92/orgs", "repos_url": "https://api.github.com/users/ottok92/repos", "events_url": "https://api.github.com/users/ottok92/events{/privacy}", "received_events_url": "https://api.github.com/users/ottok92/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-30T23:40:08Z", "updated_at": "2020-08-01T11:41:47Z", "closed_at": "2020-08-01T11:40:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello there.\r\n\r\nIn your documentation you assert that:\r\n\"Optimized performance with JIT and parallelization when possible, using numba and joblib.\"\r\n\r\nHowever, there is no documentation regarding how to actually make use of parallel processing with PyOD. I am curerntly working with a Spark cluster and would be much obliged if I could distribute the fit process of KNN onto my workers.\r\n\r\nI have tried registering spark as the backend for joblib with [joblib-spark](https://github.com/joblib/joblib-spark). It has worked with Scikit-Learn but I have had no success with PyOD so far.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/207", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/207/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/207/events", "html_url": "https://github.com/yzhao062/pyod/issues/207", "id": 650763601, "node_id": "MDU6SXNzdWU2NTA3NjM2MDE=", "number": 207, "title": "Some docstrings are out of sync with default values in the function signature ", "user": {"login": "alik604", "id": 29245410, "node_id": "MDQ6VXNlcjI5MjQ1NDEw", "avatar_url": "https://avatars1.githubusercontent.com/u/29245410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alik604", "html_url": "https://github.com/alik604", "followers_url": "https://api.github.com/users/alik604/followers", "following_url": "https://api.github.com/users/alik604/following{/other_user}", "gists_url": "https://api.github.com/users/alik604/gists{/gist_id}", "starred_url": "https://api.github.com/users/alik604/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alik604/subscriptions", "organizations_url": "https://api.github.com/users/alik604/orgs", "repos_url": "https://api.github.com/users/alik604/repos", "events_url": "https://api.github.com/users/alik604/events{/privacy}", "received_events_url": "https://api.github.com/users/alik604/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-03T20:53:46Z", "updated_at": "2020-07-10T02:08:00Z", "closed_at": "2020-07-10T02:08:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Some docstrings seem (to me) be to out of sync with default values in the function signature \r\n\r\nExample: [page](https://pyod.readthedocs.io/en/latest/_modules/pyod/models/hbos.html)\r\n```\r\ntol : float in (0, 1), optional (default=0.1)\r\n        The parameter to decide the flexibility while dealing\r\n        the samples falling outside the bins.\r\n```\r\nHowever, `tol =0.5` here \r\n```\r\ndef __init__(self, n_bins=10, alpha=0.1, tol=0.5, contamination=0.1):\r\n        super(HBOS, self).__init__(contamination=contamination)\r\n```\r\n\r\nThis isn't the Class i've noticed this in.\r\n\r\nI was wondering, \r\n* Which is correct? \r\n* How do you fix this? \r\n  + If its done manually, I'm happy to do some of the fixes. please note, I'm not good at advanced git functions, I recently learned `squash`  \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/204", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/204/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/204/events", "html_url": "https://github.com/yzhao062/pyod/issues/204", "id": 645987351, "node_id": "MDU6SXNzdWU2NDU5ODczNTE=", "number": 204, "title": "cannot import name 'get_color_codes' from 'pyod.utils.data'", "user": {"login": "nuomizai", "id": 17938642, "node_id": "MDQ6VXNlcjE3OTM4NjQy", "avatar_url": "https://avatars2.githubusercontent.com/u/17938642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nuomizai", "html_url": "https://github.com/nuomizai", "followers_url": "https://api.github.com/users/nuomizai/followers", "following_url": "https://api.github.com/users/nuomizai/following{/other_user}", "gists_url": "https://api.github.com/users/nuomizai/gists{/gist_id}", "starred_url": "https://api.github.com/users/nuomizai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nuomizai/subscriptions", "organizations_url": "https://api.github.com/users/nuomizai/orgs", "repos_url": "https://api.github.com/users/nuomizai/repos", "events_url": "https://api.github.com/users/nuomizai/events{/privacy}", "received_events_url": "https://api.github.com/users/nuomizai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-26T03:50:09Z", "updated_at": "2020-07-03T21:05:34Z", "closed_at": "2020-07-03T21:05:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I tried to use the visualization example in doc [pyod](https://pyod.readthedocs.io/en/stable/_modules/examples/knn_example.html#visualize), the error occurred as:\r\n\r\n`cannot import name 'get_color_codes' from 'pyod.utils.data'`\r\n\r\nBut I haved installed pyod correctly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/199", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/199/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/199/events", "html_url": "https://github.com/yzhao062/pyod/issues/199", "id": 631935998, "node_id": "MDU6SXNzdWU2MzE5MzU5OTg=", "number": 199, "title": "myBinder not initializing", "user": {"login": "raybellwaves", "id": 17162724, "node_id": "MDQ6VXNlcjE3MTYyNzI0", "avatar_url": "https://avatars0.githubusercontent.com/u/17162724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raybellwaves", "html_url": "https://github.com/raybellwaves", "followers_url": "https://api.github.com/users/raybellwaves/followers", "following_url": "https://api.github.com/users/raybellwaves/following{/other_user}", "gists_url": "https://api.github.com/users/raybellwaves/gists{/gist_id}", "starred_url": "https://api.github.com/users/raybellwaves/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raybellwaves/subscriptions", "organizations_url": "https://api.github.com/users/raybellwaves/orgs", "repos_url": "https://api.github.com/users/raybellwaves/repos", "events_url": "https://api.github.com/users/raybellwaves/events{/privacy}", "received_events_url": "https://api.github.com/users/raybellwaves/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-06-05T20:34:17Z", "updated_at": "2020-07-04T14:58:17Z", "closed_at": "2020-07-04T14:58:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://mybinder.org/v2/gh/yzhao062/pyod/master\r\n\r\n![image](https://user-images.githubusercontent.com/17162724/83920439-36fa1900-a74a-11ea-906e-7b7779eeb8a6.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/190", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/190/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/190/events", "html_url": "https://github.com/yzhao062/pyod/issues/190", "id": 618751974, "node_id": "MDU6SXNzdWU2MTg3NTE5NzQ=", "number": 190, "title": "Could mo_gaal using gpu for trainning?", "user": {"login": "francoe0088", "id": 50230485, "node_id": "MDQ6VXNlcjUwMjMwNDg1", "avatar_url": "https://avatars2.githubusercontent.com/u/50230485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/francoe0088", "html_url": "https://github.com/francoe0088", "followers_url": "https://api.github.com/users/francoe0088/followers", "following_url": "https://api.github.com/users/francoe0088/following{/other_user}", "gists_url": "https://api.github.com/users/francoe0088/gists{/gist_id}", "starred_url": "https://api.github.com/users/francoe0088/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/francoe0088/subscriptions", "organizations_url": "https://api.github.com/users/francoe0088/orgs", "repos_url": "https://api.github.com/users/francoe0088/repos", "events_url": "https://api.github.com/users/francoe0088/events{/privacy}", "received_events_url": "https://api.github.com/users/francoe0088/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-15T07:13:03Z", "updated_at": "2020-05-18T20:03:19Z", "closed_at": "2020-05-18T06:56:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could  mo_gaal using gpu for trainning?\r\nthx.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/186", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/186/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/186/events", "html_url": "https://github.com/yzhao062/pyod/issues/186", "id": 612282882, "node_id": "MDU6SXNzdWU2MTIyODI4ODI=", "number": 186, "title": "TypeError: only size-1 arrays can be converted to Python scalars", "user": {"login": "francoe0088", "id": 50230485, "node_id": "MDQ6VXNlcjUwMjMwNDg1", "avatar_url": "https://avatars2.githubusercontent.com/u/50230485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/francoe0088", "html_url": "https://github.com/francoe0088", "followers_url": "https://api.github.com/users/francoe0088/followers", "following_url": "https://api.github.com/users/francoe0088/following{/other_user}", "gists_url": "https://api.github.com/users/francoe0088/gists{/gist_id}", "starred_url": "https://api.github.com/users/francoe0088/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/francoe0088/subscriptions", "organizations_url": "https://api.github.com/users/francoe0088/orgs", "repos_url": "https://api.github.com/users/francoe0088/repos", "events_url": "https://api.github.com/users/francoe0088/events{/privacy}", "received_events_url": "https://api.github.com/users/francoe0088/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-05T02:27:56Z", "updated_at": "2020-05-15T01:11:25Z", "closed_at": "2020-05-15T01:11:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI wanna use custom data,but numpy.ndarray cant input with,how can I do?\r\nAny feedback will be very thanks.\r\n\r\n\r\n\r\n```\r\ncontamination=0.1\r\nn_train =np.load(\"features.npy\")\r\nn_test = np.load('test_features.npy')\r\nn_features = 256\r\n\r\nX_train, y_train, X_test, y_test = \\\r\n    generate_data(n_train=n_train,\r\n                    n_test=n_test,\r\n                    n_features=n_features,\r\n                    contamination=contamination,\r\n                    )\r\n\r\n\r\nclf_name = 'MO_GAAL'\r\nclf = MO_GAAL(k=3, stop_epochs=2, contamination=contamination)\r\nclf.fit(X_train)\r\n\r\ny_train_pred = clf.labels_  # binary labels (0: inliers, 1: outliers)\r\ny_train_scores = clf.decision_scores_  # raw outlier scores\r\n\r\n#     # get the prediction on the test data\r\n    X_test_pred = clf.predict(X_test)  # outlier labels (0 or 1)\r\n    X_test_scores = clf.decision_function(X_test)  # outlier scores\r\n\r\n    # evaluate and print the results\r\nprint(\"\\nOn Training Data:\")\r\nevaluate_print(clf_name, y_train, y_train_scores)\r\n```\r\n\r\n\r\nout put:\r\n\r\n```\r\nTypeErrorTraceback (most recent call last)\r\n<ipython-input-17-8cd9a91306ac> in <module>\r\n      8                     n_test=n_test,\r\n      9                     n_features=n_features,\r\n---> 10                     contamination=contamination,\r\n     11                     )\r\n     12 \r\n\r\n/usr/local/lib/python3.6/dist-packages/pyod/utils/data.py in generate_data(n_train, n_test, n_features, contamination, train_only, offset, behaviour, random_state)\r\n    168     coef_ = random_state.random_sample() + 0.001  # in case of underflow\r\n    169 \r\n--> 170     n_outliers_train = int(n_train * contamination)\r\n    171     n_inliers_train = int(n_train - n_outliers_train)\r\n    172 \r\n\r\nTypeError: only size-1 arrays can be converted to Python scalars\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/178", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/178/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/178/events", "html_url": "https://github.com/yzhao062/pyod/issues/178", "id": 597283693, "node_id": "MDU6SXNzdWU1OTcyODM2OTM=", "number": 178, "title": "Question: why the AE can't have the number of neurons for each hidden layers bigger then the nb of features ?", "user": {"login": "shazz", "id": 604708, "node_id": "MDQ6VXNlcjYwNDcwOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/604708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shazz", "html_url": "https://github.com/shazz", "followers_url": "https://api.github.com/users/shazz/followers", "following_url": "https://api.github.com/users/shazz/following{/other_user}", "gists_url": "https://api.github.com/users/shazz/gists{/gist_id}", "starred_url": "https://api.github.com/users/shazz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shazz/subscriptions", "organizations_url": "https://api.github.com/users/shazz/orgs", "repos_url": "https://api.github.com/users/shazz/repos", "events_url": "https://api.github.com/users/shazz/events{/privacy}", "received_events_url": "https://api.github.com/users/shazz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-09T13:30:00Z", "updated_at": "2020-04-09T18:48:56Z", "closed_at": "2020-04-09T18:48:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nSo for a dataset with 4 features, the number of neurons per hidden layers can only be [4, 2, 2, 4] (or something like that) ?\r\n\r\n````\r\n# Validate and complete the number of hidden neurons\r\n        if np.min(self.hidden_neurons) > self.n_features_:\r\n            raise ValueError(\"The number of neurons should not exceed \"\r\n                             \"the number of features\")\r\n````\r\nIs there a reason for that ?\r\n\r\nThanks !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/165", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/165/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/165/events", "html_url": "https://github.com/yzhao062/pyod/issues/165", "id": 569632313, "node_id": "MDU6SXNzdWU1Njk2MzIzMTM=", "number": 165, "title": "3D visualization for outlier detection(performance is ok.)", "user": {"login": "SungmanHong", "id": 56244403, "node_id": "MDQ6VXNlcjU2MjQ0NDAz", "avatar_url": "https://avatars3.githubusercontent.com/u/56244403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SungmanHong", "html_url": "https://github.com/SungmanHong", "followers_url": "https://api.github.com/users/SungmanHong/followers", "following_url": "https://api.github.com/users/SungmanHong/following{/other_user}", "gists_url": "https://api.github.com/users/SungmanHong/gists{/gist_id}", "starred_url": "https://api.github.com/users/SungmanHong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SungmanHong/subscriptions", "organizations_url": "https://api.github.com/users/SungmanHong/orgs", "repos_url": "https://api.github.com/users/SungmanHong/repos", "events_url": "https://api.github.com/users/SungmanHong/events{/privacy}", "received_events_url": "https://api.github.com/users/SungmanHong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-24T04:40:36Z", "updated_at": "2020-03-11T06:51:11Z", "closed_at": "2020-03-11T06:51:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello.\r\nI coded the 3d outlier detection as below. (from pyod example)\r\n\r\nimport numpy as np\r\nfrom scipy import stats\r\nimport matplotlib.pyplot as plt\r\n%matplotlib inline\r\nimport matplotlib.font_manager\r\n\r\nfrom pyod.models.abod import ABOD\r\nfrom pyod.models.knn import KNN\r\n\r\nfrom pyod.utils.data import generate_data, get_outliers_inliers\r\n\r\n\r\nX_train, Y_train = generate_data(n_train=200,train_only=True, n_features=3)\r\n\r\noutlier_fraction = 0.1\r\n\r\nx_outliers, x_inliers = get_outliers_inliers(X_train,Y_train)\r\n\r\nn_inliers = len(x_inliers)\r\nn_outliers = len(x_outliers)\r\n\r\nF1 = X_train[:,[0]].reshape(-1,1)\r\nF2 = X_train[:,[1]].reshape(-1,1)\r\nF3 = X_train[:,[2]].reshape(-1,1)\r\n\r\nxx , yy, zz = np.meshgrid(np.linspace(-10, 10, 200), np.linspace(-10, 10, 200), np.linspace(-10, 10, 200))\r\nxxx , yyy = np.meshgrid(np.linspace(-10, 10, 200), np.linspace(-10, 10, 200))\r\n\r\n\r\nfrom mpl_toolkits.mplot3d import Axes3D  # noqa: F401 unused import\r\nfig = plt.figure()\r\nax = fig.add_subplot(111, projection='3d')\r\nax.scatter(F1, F2, F3)\r\nax.set_xlabel('X Label')\r\nax.set_ylabel('Y Label')\r\nax.set_zlabel('Z Label')\r\n\r\n\r\nclassifiers = {\r\n     'K Nearest Neighbors (KNN)' :  KNN(contamination=outlier_fraction),\r\n     'Angle-based Outlier Detector (ABOD)'   : ABOD(contamination=outlier_fraction)\r\n}\r\n\r\n\r\nplt.figure(figsize=(10, 10))\r\n\r\nfor i, (clf_name,clf) in enumerate(classifiers.items()) :\r\n    # fit the dataset to the model\r\n    clf.fit(X_train)\r\n    scores_pred = clf.decision_function(X_train)*-1\r\n    y_pred = clf.predict(X_train)\r\n    n_errors = (y_pred != Y_train).sum()\r\n    print('No of Errors : ',clf_name, n_errors)\r\n    threshold = stats.scoreatpercentile(scores_pred,100 *outlier_fraction)\r\n\r\n\r\n\r\n\r\n\r\nit's works.\r\nbut when i commit the next line below\r\n\r\n\r\n\r\n    Z = clf.decision_function(np.c_[xx.ravel(), yy.ravel(), zz.ravel()]) * -1\r\n\r\n\r\n\r\nit stops....\r\nCan i get the visualization part for getting the decision reigion?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/162", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/162/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/162/events", "html_url": "https://github.com/yzhao062/pyod/issues/162", "id": 566656004, "node_id": "MDU6SXNzdWU1NjY2NTYwMDQ=", "number": 162, "title": "Documentation 2.2.3 Model Combination Example", "user": {"login": "Sinansi", "id": 30214648, "node_id": "MDQ6VXNlcjMwMjE0NjQ4", "avatar_url": "https://avatars1.githubusercontent.com/u/30214648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sinansi", "html_url": "https://github.com/Sinansi", "followers_url": "https://api.github.com/users/Sinansi/followers", "following_url": "https://api.github.com/users/Sinansi/following{/other_user}", "gists_url": "https://api.github.com/users/Sinansi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sinansi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sinansi/subscriptions", "organizations_url": "https://api.github.com/users/Sinansi/orgs", "repos_url": "https://api.github.com/users/Sinansi/repos", "events_url": "https://api.github.com/users/Sinansi/events{/privacy}", "received_events_url": "https://api.github.com/users/Sinansi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-18T05:24:49Z", "updated_at": "2020-02-25T12:09:17Z", "closed_at": "2020-02-25T12:09:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\nHello,\r\n\r\nI am new to PyOD. I have started to learn it by running the Model Combination Example 2.2.3 in the documentation. Unfortunately, I had to solve puzzles to run this example, then ended up with nothing.\r\n\r\nIt seems that the author of this example was in so much hurry, such that he couldn't have enough time to clarify any of the variables he used, or perhaps he had to go to the toilet. \r\n\r\nThe variables used in the example are referring to variables in other examples and some variables seems to come from nowhere, and some variables are declared for no reason!!!!\r\n\r\nThe example starts with this line, which has no use in the example, it is just there for no reason (like a ghost):\r\nX, y= generate_data(train_only=True)\t# load data\r\n\r\nThe loop counter is mentioned as n_clf which is not defined in any example. I assumed it is equal to 20 because you are using 20 classifiers.\r\n\r\nThe variables X_train and X_test are not declared in the example. They are declared in another example!!!!\r\n\r\nThe variables X_train_norm and X_test_norm  are not anywhere in the documentation. They just appear here on the fly then disappear forever. These are called UFV, undefined flying variables. We should report these variables to NASA. \r\n\r\ncomb_by_moa = moa(test_scores_norm, 5)) \r\nhas typo, extra closing parenthesis \r\n\r\nFinally, the example concludes without letting us know which points the ensemble have classified as outliers lol.\r\n\r\nI kindly ask you to make it easier for new starters to learn how to use your library by presenting clear examples. Please, re-write this example in the next documentation update.\r\n\r\nThank you!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/160", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/160/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/160/events", "html_url": "https://github.com/yzhao062/pyod/issues/160", "id": 561975755, "node_id": "MDU6SXNzdWU1NjE5NzU3NTU=", "number": 160, "title": "Deprecation warning due to invalid escape sequences in Python 3.8", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-08T05:55:47Z", "updated_at": "2020-02-25T18:14:29Z", "closed_at": "2020-02-25T18:14:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Deprecation warnings are raised due to invalid escape sequences in Python 3.8 . Below is a log of the warnings raised during compiling all the python files. Using raw strings or escaping them will fix this issue.\r\n\r\n```\r\nfind . -iname '*.py'  | xargs -P 4 -I{} python -Wall -m py_compile {}\r\n\r\n./pyod/models/cblof.py:27: DeprecationWarning: invalid escape sequence \\|\r\n  \"\"\"The CBLOF operator calculates the outlier score based on cluster-based\r\n./pyod/models/xgbod.py:31: DeprecationWarning: invalid escape sequence \\*\r\n  \"\"\"XGBOD class for outlier detection.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/158", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/158/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/158/events", "html_url": "https://github.com/yzhao062/pyod/issues/158", "id": 553513235, "node_id": "MDU6SXNzdWU1NTM1MTMyMzU=", "number": 158, "title": "xgbod is failing when passing less than 202 rows ", "user": {"login": "abhijeetmote", "id": 4075920, "node_id": "MDQ6VXNlcjQwNzU5MjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4075920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abhijeetmote", "html_url": "https://github.com/abhijeetmote", "followers_url": "https://api.github.com/users/abhijeetmote/followers", "following_url": "https://api.github.com/users/abhijeetmote/following{/other_user}", "gists_url": "https://api.github.com/users/abhijeetmote/gists{/gist_id}", "starred_url": "https://api.github.com/users/abhijeetmote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abhijeetmote/subscriptions", "organizations_url": "https://api.github.com/users/abhijeetmote/orgs", "repos_url": "https://api.github.com/users/abhijeetmote/repos", "events_url": "https://api.github.com/users/abhijeetmote/events{/privacy}", "received_events_url": "https://api.github.com/users/abhijeetmote/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-22T12:36:56Z", "updated_at": "2020-02-05T06:14:01Z", "closed_at": "2020-02-05T06:14:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "The Bellow code is working when I am giving **no_of_rows** = 202; **but if I reduce the no_of_rows = 201**.  The code is failing at _`predict()`_. and giving the error mentioned below the code.\r\n@yzhao062 Is XGBOD needs to be trained with a minimum number of rows i.e 202 \r\n\r\n\r\n\r\n**Following is the code snippet** \r\n```\r\nno_of_rows = 202\r\noutliers_fraction = 0.1\r\nclf_obj = XGBOD(contamination=outliers_fraction)\r\nnew_df_train_data = pd.DataFrame(np.random.randint(0,no_of_rows,size=(no_of_rows, 2)), \\\r\n                                columns=list('AB'))\r\n\r\nX_train = new_df_train_data.values\r\ny_train =  pd.DataFrame(np.random.randint(0,2,size=(no_of_rows, 1)), \\\r\n                        columns=list('y')).values\r\n\r\n# fit the model with training data\r\nprint(len(X_train), len(y_train))\r\ny_train = y_train.reshape(y_train.size, 1)\r\nclf_obj.fit(X_train, y_train)\r\n\r\ntest_data = pd.DataFrame(np.random.randint(0,50,size=(50, 2)), columns=list('AB'))\r\nX_test = test_data.values\r\nprint(clf_obj.predict(X_test))\r\n```\r\n\r\n**Error snippet** \r\n```\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-194-fee4e0bcf9ca> in <module>\r\n     16 test_data = pd.DataFrame(np.random.randint(0,50,size=(50, 2)), columns=list('AB'))\r\n     17 X_test = test_data.values\r\n---> 18 print(clf_obj.predict(X_test))\r\n\r\n~/anaconda3/envs/tensorflow/lib/python3.7/site-packages/pyod/models/xgbod.py in predict(self, X)\r\n    379\r\n    380         # construct the new feature space\r\n--> 381         X_add = self._generate_new_features(X)\r\n    382         X_new = np.concatenate((X, X_add), axis=1)\r\n    383\r\n\r\n~/anaconda3/envs/tensorflow/lib/python3.7/site-packages/pyod/models/xgbod.py in _generate_new_features(self, X)\r\n    266         for ind, estimator in enumerate(self.estimator_list):\r\n    267             if self.standardization_flag_list[ind]:\r\n--> 268                 X_add[:, ind] = estimator.decision_function(X_norm)\r\n    269\r\n    270             else:\r\n\r\n~/anaconda3/envs/tensorflow/lib/python3.7/site-packages/pyod/models/knn.py in decision_function(self, X)\r\n    246\r\n    247             # get the distance of the current point\r\n--> 248             dist_arr, _ = self.tree_.query(x_i, k=self.n_neighbors)\r\n    249             dist = self._get_dist_by_method(dist_arr)\r\n    250             pred_score_i = dist[-1]\r\n\r\nAttributeError: 'NoneType' object has no attribute 'query'\r\n```\r\nAny workaround? \r\nYour help would be appreciated? \r\n\r\nThanks,\r\nAbhijeet", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/156", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/156/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/156/events", "html_url": "https://github.com/yzhao062/pyod/issues/156", "id": 546630152, "node_id": "MDU6SXNzdWU1NDY2MzAxNTI=", "number": 156, "title": "xgbod_example.py demo code execution generated strange warning messages", "user": {"login": "kdlin", "id": 25801835, "node_id": "MDQ6VXNlcjI1ODAxODM1", "avatar_url": "https://avatars2.githubusercontent.com/u/25801835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kdlin", "html_url": "https://github.com/kdlin", "followers_url": "https://api.github.com/users/kdlin/followers", "following_url": "https://api.github.com/users/kdlin/following{/other_user}", "gists_url": "https://api.github.com/users/kdlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/kdlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kdlin/subscriptions", "organizations_url": "https://api.github.com/users/kdlin/orgs", "repos_url": "https://api.github.com/users/kdlin/repos", "events_url": "https://api.github.com/users/kdlin/events{/privacy}", "received_events_url": "https://api.github.com/users/kdlin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-08T03:53:27Z", "updated_at": "2020-02-19T01:30:06Z", "closed_at": "2020-02-19T01:30:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I ran the xgbod_example.py demo code, https://github.com/yzhao062/pyod/blob/master/examples/xgbod_example.py. The following warning messages were displayed.\r\n\r\n> /Users/dlin/opt/anaconda3/lib/python3.7/site-packages/pyod/models/base.py:349: UserWarning: y should not be presented in unsupervised learning.\r\n  \"y should not be presented in unsupervised learning.\")\r\n/Users/dlin/opt/anaconda3/lib/python3.7/site-packages/sklearn/ensemble/iforest.py:247: FutureWarning: behaviour=\"old\" is deprecated and will be removed in version 0.22. Please use behaviour=\"new\", which makes the decision_function change to match other anomaly detection algorithm API.\r\n  FutureWarning)\r\n/Users/dlin/opt/anaconda3/lib/python3.7/site-packages/sklearn/ensemble/iforest.py:247: FutureWarning: behaviour=\"old\" is deprecated and will be removed in version 0.22. Please use behaviour=\"new\", which makes the decision_function change to match other anomaly detection algorithm API.\r\n  FutureWarning)\r\n/Users/dlin/opt/anaconda3/lib/python3.7/site-packages/sklearn/ensemble/iforest.py:247: FutureWarning: behaviour=\"old\" is deprecated and will be removed in version 0.22. Please use behaviour=\"new\", which makes the decision_function change to match other anomaly detection algorithm API.\r\n  FutureWarning)\r\n/Users/dlin/opt/anaconda3/lib/python3.7/site-packages/sklearn/ensemble/iforest.py:247: FutureWarning: behaviour=\"old\" is deprecated and will be removed in version 0.22. Please use behaviour=\"new\", which makes the decision_function change to match other anomaly detection algorithm API.\r\n  FutureWarning)\r\n/Users/dlin/opt/anaconda3/lib/python3.7/site-packages/sklearn/ensemble/iforest.py:247: FutureWarning: behaviour=\"old\" is deprecated and will be removed in version 0.22. Please use behaviour=\"new\", which makes the decision_function change to match other anomaly detection algorithm API.\r\n  FutureWarning)\r\n/Users/dlin/opt/anaconda3/lib/python3.7/site-packages/sklearn/ensemble/iforest.py:247: FutureWarning: behaviour=\"old\" is deprecated and will be removed in version 0.22. Please use behaviour=\"new\", which makes the decision_function change to match other anomaly detection algorithm API.\r\n  FutureWarning)\r\n/Users/dlin/opt/anaconda3/lib/python3.7/site-packages/sklearn/ensemble/iforest.py:247: FutureWarning: behaviour=\"old\" is deprecated and will be removed in version 0.22. Please use behaviour=\"new\", which makes the decision_function change to match other anomaly detection algorithm API.\r\n  FutureWarning)\r\n/Users/dlin/opt/anaconda3/lib/python3.7/site-packages/sklearn/ensemble/iforest.py:247: FutureWarning: behaviour=\"old\" is deprecated and will be removed in version 0.22. Please use behaviour=\"new\", which makes the decision_function change to match other anomaly detection algorithm API.\r\n  FutureWarning)\r\n\r\nSome of the issues include:\r\n1. It did not like the Y labels.\r\n2. Somehow iforest.py was called.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/139", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/139/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/139/events", "html_url": "https://github.com/yzhao062/pyod/issues/139", "id": 517204482, "node_id": "MDU6SXNzdWU1MTcyMDQ0ODI=", "number": 139, "title": "It is possible to perform fit and predict at the same time/dataset?", "user": {"login": "davidmguerra", "id": 1731553, "node_id": "MDQ6VXNlcjE3MzE1NTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1731553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmguerra", "html_url": "https://github.com/davidmguerra", "followers_url": "https://api.github.com/users/davidmguerra/followers", "following_url": "https://api.github.com/users/davidmguerra/following{/other_user}", "gists_url": "https://api.github.com/users/davidmguerra/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmguerra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmguerra/subscriptions", "organizations_url": "https://api.github.com/users/davidmguerra/orgs", "repos_url": "https://api.github.com/users/davidmguerra/repos", "events_url": "https://api.github.com/users/davidmguerra/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmguerra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-04T14:53:02Z", "updated_at": "2019-11-05T00:00:50Z", "closed_at": "2019-11-05T00:00:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to identify outliers in one dataset, but I don't want to split it into training and testing. How can I do this?\r\n\r\nIf I call both methods with the same data I think the result can be influenced (beyond unnecessary processing).\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/135", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/135/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/135/events", "html_url": "https://github.com/yzhao062/pyod/issues/135", "id": 503538159, "node_id": "MDU6SXNzdWU1MDM1MzgxNTk=", "number": 135, "title": "KNN: changing p affects result contamination", "user": {"login": "Aroksak", "id": 20436915, "node_id": "MDQ6VXNlcjIwNDM2OTE1", "avatar_url": "https://avatars1.githubusercontent.com/u/20436915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aroksak", "html_url": "https://github.com/Aroksak", "followers_url": "https://api.github.com/users/Aroksak/followers", "following_url": "https://api.github.com/users/Aroksak/following{/other_user}", "gists_url": "https://api.github.com/users/Aroksak/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aroksak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aroksak/subscriptions", "organizations_url": "https://api.github.com/users/Aroksak/orgs", "repos_url": "https://api.github.com/users/Aroksak/repos", "events_url": "https://api.github.com/users/Aroksak/events{/privacy}", "received_events_url": "https://api.github.com/users/Aroksak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-07T15:47:35Z", "updated_at": "2019-12-18T21:46:43Z", "closed_at": "2019-12-18T21:46:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nI have a dataset with ~44k samples. When I do\r\n`y = KNN(contamination=0.05, method='largest', p=2, n_jobs=-1).fit(X).predict(X)`\r\nI get approx 2200 detected outliers, which is close to desired 5%. Although, when I do\r\n`y = KNN(contamination=0.05, method='largest', p=1, n_jobs=-1).fit(X).predict(X)`\r\nI get only 490 outliers. \r\n\r\nChanging method to mean or median doesn't affect this behaviour.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/134", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/134/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/134/events", "html_url": "https://github.com/yzhao062/pyod/issues/134", "id": 501539331, "node_id": "MDU6SXNzdWU1MDE1MzkzMzE=", "number": 134, "title": "To understand how fitting works", "user": {"login": "eucter", "id": 55027143, "node_id": "MDQ6VXNlcjU1MDI3MTQz", "avatar_url": "https://avatars3.githubusercontent.com/u/55027143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eucter", "html_url": "https://github.com/eucter", "followers_url": "https://api.github.com/users/eucter/followers", "following_url": "https://api.github.com/users/eucter/following{/other_user}", "gists_url": "https://api.github.com/users/eucter/gists{/gist_id}", "starred_url": "https://api.github.com/users/eucter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eucter/subscriptions", "organizations_url": "https://api.github.com/users/eucter/orgs", "repos_url": "https://api.github.com/users/eucter/repos", "events_url": "https://api.github.com/users/eucter/events{/privacy}", "received_events_url": "https://api.github.com/users/eucter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-02T14:49:13Z", "updated_at": "2019-11-12T10:54:07Z", "closed_at": "2019-11-12T10:54:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I could not quite deduce whether the methods are aware of outlier labels in training phase. Is training done in a fully unsupervised manner or the methods know about outliers in training phase?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/130", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/130/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/130/events", "html_url": "https://github.com/yzhao062/pyod/issues/130", "id": 473785611, "node_id": "MDU6SXNzdWU0NzM3ODU2MTE=", "number": 130, "title": "Question regarding the algorithms", "user": {"login": "quancore", "id": 15036825, "node_id": "MDQ6VXNlcjE1MDM2ODI1", "avatar_url": "https://avatars3.githubusercontent.com/u/15036825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quancore", "html_url": "https://github.com/quancore", "followers_url": "https://api.github.com/users/quancore/followers", "following_url": "https://api.github.com/users/quancore/following{/other_user}", "gists_url": "https://api.github.com/users/quancore/gists{/gist_id}", "starred_url": "https://api.github.com/users/quancore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quancore/subscriptions", "organizations_url": "https://api.github.com/users/quancore/orgs", "repos_url": "https://api.github.com/users/quancore/repos", "events_url": "https://api.github.com/users/quancore/events{/privacy}", "received_events_url": "https://api.github.com/users/quancore/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-28T21:00:34Z", "updated_at": "2019-10-13T19:22:22Z", "closed_at": "2019-10-13T19:22:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have 400K * 50 dataset, all numeric columns with a continuous numeric target variable. I have a supervised regression task. My aim to detect absolute outlier points that reduce the generalization power of regression models. Which outlier detection algorithms you suggest me? I thought to use an ensemble of several outlier detection algorithms but which ones are suitable for the dataset?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/126", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/126/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/126/events", "html_url": "https://github.com/yzhao062/pyod/issues/126", "id": 468664523, "node_id": "MDU6SXNzdWU0Njg2NjQ1MjM=", "number": 126, "title": "wrong documentation for decision_function(X)", "user": {"login": "eladtann", "id": 46277574, "node_id": "MDQ6VXNlcjQ2Mjc3NTc0", "avatar_url": "https://avatars2.githubusercontent.com/u/46277574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eladtann", "html_url": "https://github.com/eladtann", "followers_url": "https://api.github.com/users/eladtann/followers", "following_url": "https://api.github.com/users/eladtann/following{/other_user}", "gists_url": "https://api.github.com/users/eladtann/gists{/gist_id}", "starred_url": "https://api.github.com/users/eladtann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eladtann/subscriptions", "organizations_url": "https://api.github.com/users/eladtann/orgs", "repos_url": "https://api.github.com/users/eladtann/repos", "events_url": "https://api.github.com/users/eladtann/events{/privacy}", "received_events_url": "https://api.github.com/users/eladtann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-16T13:46:09Z", "updated_at": "2019-07-19T10:45:24Z", "closed_at": "2019-07-19T10:45:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently it is stated that Parameter X is the \"The training input samples\".\r\nwhile the correct wording should not include \"Training\", simply \"The input samples\".\r\nThis documentation mistake is across all models.\r\n\r\nreasoning-\r\nThe model is fitted with the training samples in fit(X), but is evaluated with decision_function(X) on any kind (test/validation/real) of samples.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/124", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/124/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/124/events", "html_url": "https://github.com/yzhao062/pyod/issues/124", "id": 467018891, "node_id": "MDU6SXNzdWU0NjcwMTg4OTE=", "number": 124, "title": "Does autoencoder use values of target (y)", "user": {"login": "hajarhomayouni", "id": 4374978, "node_id": "MDQ6VXNlcjQzNzQ5Nzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4374978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hajarhomayouni", "html_url": "https://github.com/hajarhomayouni", "followers_url": "https://api.github.com/users/hajarhomayouni/followers", "following_url": "https://api.github.com/users/hajarhomayouni/following{/other_user}", "gists_url": "https://api.github.com/users/hajarhomayouni/gists{/gist_id}", "starred_url": "https://api.github.com/users/hajarhomayouni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hajarhomayouni/subscriptions", "organizations_url": "https://api.github.com/users/hajarhomayouni/orgs", "repos_url": "https://api.github.com/users/hajarhomayouni/repos", "events_url": "https://api.github.com/users/hajarhomayouni/events{/privacy}", "received_events_url": "https://api.github.com/users/hajarhomayouni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-11T17:31:21Z", "updated_at": "2019-10-13T18:49:00Z", "closed_at": "2019-10-13T18:49:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I saw that y is optional in the fit(X, y=None) of autoencoder.\r\nWhat if I give y as input? Does algorithm use the values of y?\r\nActually I have a dataset with labels for some but not all data points (labels include 0, 1, and None).\r\nDoes the algorithm perform a semi-supervised approach if I set y to the labels and give it as input to the fit function? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/123", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/123/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/123/events", "html_url": "https://github.com/yzhao062/pyod/issues/123", "id": 466426449, "node_id": "MDU6SXNzdWU0NjY0MjY0NDk=", "number": 123, "title": "Autoencoder prints summary every time", "user": {"login": "sbeaupre2", "id": 46908436, "node_id": "MDQ6VXNlcjQ2OTA4NDM2", "avatar_url": "https://avatars2.githubusercontent.com/u/46908436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbeaupre2", "html_url": "https://github.com/sbeaupre2", "followers_url": "https://api.github.com/users/sbeaupre2/followers", "following_url": "https://api.github.com/users/sbeaupre2/following{/other_user}", "gists_url": "https://api.github.com/users/sbeaupre2/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbeaupre2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbeaupre2/subscriptions", "organizations_url": "https://api.github.com/users/sbeaupre2/orgs", "repos_url": "https://api.github.com/users/sbeaupre2/repos", "events_url": "https://api.github.com/users/sbeaupre2/events{/privacy}", "received_events_url": "https://api.github.com/users/sbeaupre2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-10T17:18:02Z", "updated_at": "2019-07-19T10:45:24Z", "closed_at": "2019-07-19T10:45:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure if this is an intended functionality, but every time an autoencoder is built, it prints the summary. It'd be nice if this was optional.\r\n\r\nauto_encoder.py, line 183\r\n`print(model.summary())`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/122", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/122/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/122/events", "html_url": "https://github.com/yzhao062/pyod/issues/122", "id": 465325043, "node_id": "MDU6SXNzdWU0NjUzMjUwNDM=", "number": 122, "title": "Difference between training and testing phase for KNN", "user": {"login": "hajarhomayouni", "id": 4374978, "node_id": "MDQ6VXNlcjQzNzQ5Nzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4374978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hajarhomayouni", "html_url": "https://github.com/hajarhomayouni", "followers_url": "https://api.github.com/users/hajarhomayouni/followers", "following_url": "https://api.github.com/users/hajarhomayouni/following{/other_user}", "gists_url": "https://api.github.com/users/hajarhomayouni/gists{/gist_id}", "starred_url": "https://api.github.com/users/hajarhomayouni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hajarhomayouni/subscriptions", "organizations_url": "https://api.github.com/users/hajarhomayouni/orgs", "repos_url": "https://api.github.com/users/hajarhomayouni/repos", "events_url": "https://api.github.com/users/hajarhomayouni/events{/privacy}", "received_events_url": "https://api.github.com/users/hajarhomayouni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-08T15:32:00Z", "updated_at": "2019-07-16T23:31:36Z", "closed_at": "2019-07-16T23:31:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "What is the difference between the training phase and testing phase of KNN. I have split my dataset to training and testing sets and want to know how the invalidity scores are assigned to the testing samples after I fit the model on the training samples.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/118", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/118/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/118/events", "html_url": "https://github.com/yzhao062/pyod/issues/118", "id": 460554912, "node_id": "MDU6SXNzdWU0NjA1NTQ5MTI=", "number": 118, "title": "dropout_rate=0 fails on autoencoder", "user": {"login": "sbeaupre2", "id": 46908436, "node_id": "MDQ6VXNlcjQ2OTA4NDM2", "avatar_url": "https://avatars2.githubusercontent.com/u/46908436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbeaupre2", "html_url": "https://github.com/sbeaupre2", "followers_url": "https://api.github.com/users/sbeaupre2/followers", "following_url": "https://api.github.com/users/sbeaupre2/following{/other_user}", "gists_url": "https://api.github.com/users/sbeaupre2/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbeaupre2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbeaupre2/subscriptions", "organizations_url": "https://api.github.com/users/sbeaupre2/orgs", "repos_url": "https://api.github.com/users/sbeaupre2/repos", "events_url": "https://api.github.com/users/sbeaupre2/events{/privacy}", "received_events_url": "https://api.github.com/users/sbeaupre2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 709870773, "node_id": "MDU6TGFiZWw3MDk4NzA3NzM=", "url": "https://api.github.com/repos/yzhao062/pyod/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-25T17:42:09Z", "updated_at": "2019-07-19T10:45:24Z", "closed_at": "2019-07-19T10:45:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "In auto_encoder.py there is this line which ensures the dropout parameter is valid. This fails when given 0 dropout due to the default behavior of not including the left bound. Also the param_name is set to alpha, leading to a misleading error message:\r\n\r\nError:\r\n`ValueError: alpha is set to 0.0. Not in the range of (0, 1).`\r\n\r\nOriginal code:\r\n`check_parameter(dropout_rate, 0, 1, param_name='alpha')`\r\n\r\nFixed:\r\n`check_parameter(dropout_rate, 0, 1, param_name='dropout_rate', include_left=True)`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/117", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/117/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/117/events", "html_url": "https://github.com/yzhao062/pyod/issues/117", "id": 458957990, "node_id": "MDU6SXNzdWU0NTg5NTc5OTA=", "number": 117, "title": "Error during running of Autoencoder", "user": {"login": "lk1983823", "id": 20237650, "node_id": "MDQ6VXNlcjIwMjM3NjUw", "avatar_url": "https://avatars3.githubusercontent.com/u/20237650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lk1983823", "html_url": "https://github.com/lk1983823", "followers_url": "https://api.github.com/users/lk1983823/followers", "following_url": "https://api.github.com/users/lk1983823/following{/other_user}", "gists_url": "https://api.github.com/users/lk1983823/gists{/gist_id}", "starred_url": "https://api.github.com/users/lk1983823/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lk1983823/subscriptions", "organizations_url": "https://api.github.com/users/lk1983823/orgs", "repos_url": "https://api.github.com/users/lk1983823/repos", "events_url": "https://api.github.com/users/lk1983823/events{/privacy}", "received_events_url": "https://api.github.com/users/lk1983823/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-21T01:06:47Z", "updated_at": "2019-06-23T09:40:53Z", "closed_at": "2019-06-23T09:40:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I installed tensorflow 2.0 and keras 2.2.4 on my ubuntu 16.04.\r\nHowever, when I run the toy code:\r\nclf = AutoEncoder(epochs=30, contamination=contamination)\r\nclf.fit(X_train)\r\nError shows:\r\n\r\nAttributeError: module 'tensorflow' has no attribute 'get_default_graph'\r\n\r\nThis maybe due to the tensorflow and keras version.\r\nAfter I change your code of Autoencoder imports to:\r\nfrom tensorflow.keras.models import Sequential\r\nfrom tensorflow.keras.layers import Dense, Dropout\r\nfrom tensorflow.keras.regularizers import l2\r\nfrom tensorflow.keras.losses import mean_squared_error It works.\r\nSo, I suggest there is a version specified requirements, of which the existed one is not clear enough.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/114", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/114/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/114/events", "html_url": "https://github.com/yzhao062/pyod/issues/114", "id": 457527826, "node_id": "MDU6SXNzdWU0NTc1Mjc4MjY=", "number": 114, "title": "Time Complexity Optimisation - SOD", "user": {"login": "John-Almardeny", "id": 19558793, "node_id": "MDQ6VXNlcjE5NTU4Nzkz", "avatar_url": "https://avatars2.githubusercontent.com/u/19558793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/John-Almardeny", "html_url": "https://github.com/John-Almardeny", "followers_url": "https://api.github.com/users/John-Almardeny/followers", "following_url": "https://api.github.com/users/John-Almardeny/following{/other_user}", "gists_url": "https://api.github.com/users/John-Almardeny/gists{/gist_id}", "starred_url": "https://api.github.com/users/John-Almardeny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/John-Almardeny/subscriptions", "organizations_url": "https://api.github.com/users/John-Almardeny/orgs", "repos_url": "https://api.github.com/users/John-Almardeny/repos", "events_url": "https://api.github.com/users/John-Almardeny/events{/privacy}", "received_events_url": "https://api.github.com/users/John-Almardeny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-18T14:48:54Z", "updated_at": "2020-01-14T12:16:00Z", "closed_at": "2020-01-14T12:16:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Attempt to improve performance of SOD with respect to execution time.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/103", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/103/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/103/events", "html_url": "https://github.com/yzhao062/pyod/issues/103", "id": 447657352, "node_id": "MDU6SXNzdWU0NDc2NTczNTI=", "number": 103, "title": "Split data (into train/test set) or not?", "user": {"login": "Tsinghua-gongjing", "id": 12371558, "node_id": "MDQ6VXNlcjEyMzcxNTU4", "avatar_url": "https://avatars3.githubusercontent.com/u/12371558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tsinghua-gongjing", "html_url": "https://github.com/Tsinghua-gongjing", "followers_url": "https://api.github.com/users/Tsinghua-gongjing/followers", "following_url": "https://api.github.com/users/Tsinghua-gongjing/following{/other_user}", "gists_url": "https://api.github.com/users/Tsinghua-gongjing/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tsinghua-gongjing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tsinghua-gongjing/subscriptions", "organizations_url": "https://api.github.com/users/Tsinghua-gongjing/orgs", "repos_url": "https://api.github.com/users/Tsinghua-gongjing/repos", "events_url": "https://api.github.com/users/Tsinghua-gongjing/events{/privacy}", "received_events_url": "https://api.github.com/users/Tsinghua-gongjing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-23T13:17:15Z", "updated_at": "2019-06-07T17:40:50Z", "closed_at": "2019-06-07T17:40:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have a question about how to measure the model performance. Now I'm applying MCD method to my data (total sample number: 1580, features: 1000, outliner number: 40), the result is confusing.\r\n\r\nAs in the [benchmark.py](https://github.com/yzhao062/pyod/blob/master/notebooks/benchmark.py), the data is split and training and testing for 10 iterations. The code is as below:\r\n\r\n![code](https://user-images.githubusercontent.com/12371558/58254762-05f8b180-7d9e-11e9-8ae9-071ab662ca1f.png)\r\n\r\nThe performance seems perfect (on testing set for 10 iterations):\r\n\r\n![performance](https://user-images.githubusercontent.com/12371558/58254835-36405000-7d9e-11e9-94c1-8c2d12fdb45d.png)\r\n\r\nHowever, while plotting the total reference data and predicted data, the performance looks bad (many of the common samples are predicted outliner).\r\n\r\n![reference_vs_predict](https://user-images.githubusercontent.com/12371558/58255192-09406d00-7d9f-11e9-9f13-6af5a270ff38.png)\r\n\r\nI can't understand the result well, why the AUC is so high but poor performance for total data. Is that caused by biased sampling in training process? If it is the case, does that mean splitting data (into train and test set) may be not a good idea for evaluating model performance (as the data set is so unbalanced)?\r\n\r\nBest,\r\nJing", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/99", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/99/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/99/events", "html_url": "https://github.com/yzhao062/pyod/issues/99", "id": 446290918, "node_id": "MDU6SXNzdWU0NDYyOTA5MTg=", "number": 99, "title": "Can we compare 3 features?", "user": {"login": "kusshal619", "id": 43389277, "node_id": "MDQ6VXNlcjQzMzg5Mjc3", "avatar_url": "https://avatars3.githubusercontent.com/u/43389277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kusshal619", "html_url": "https://github.com/kusshal619", "followers_url": "https://api.github.com/users/kusshal619/followers", "following_url": "https://api.github.com/users/kusshal619/following{/other_user}", "gists_url": "https://api.github.com/users/kusshal619/gists{/gist_id}", "starred_url": "https://api.github.com/users/kusshal619/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kusshal619/subscriptions", "organizations_url": "https://api.github.com/users/kusshal619/orgs", "repos_url": "https://api.github.com/users/kusshal619/repos", "events_url": "https://api.github.com/users/kusshal619/events{/privacy}", "received_events_url": "https://api.github.com/users/kusshal619/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-05-20T20:17:15Z", "updated_at": "2020-02-24T04:36:26Z", "closed_at": "2019-06-07T17:40:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wanted to know if it is possible to use PYOD for 3+ features. Most examples show 2 features.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/96", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/96/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/96/events", "html_url": "https://github.com/yzhao062/pyod/issues/96", "id": 443374909, "node_id": "MDU6SXNzdWU0NDMzNzQ5MDk=", "number": 96, "title": "Installation is broken due to missing sklearn.externals.funcsigs module", "user": {"login": "lavsurgut", "id": 1026583, "node_id": "MDQ6VXNlcjEwMjY1ODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1026583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lavsurgut", "html_url": "https://github.com/lavsurgut", "followers_url": "https://api.github.com/users/lavsurgut/followers", "following_url": "https://api.github.com/users/lavsurgut/following{/other_user}", "gists_url": "https://api.github.com/users/lavsurgut/gists{/gist_id}", "starred_url": "https://api.github.com/users/lavsurgut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lavsurgut/subscriptions", "organizations_url": "https://api.github.com/users/lavsurgut/orgs", "repos_url": "https://api.github.com/users/lavsurgut/repos", "events_url": "https://api.github.com/users/lavsurgut/events{/privacy}", "received_events_url": "https://api.github.com/users/lavsurgut/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-13T12:37:19Z", "updated_at": "2019-05-13T16:43:09Z", "closed_at": "2019-05-13T16:43:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying out to install pyod as usual\r\n`pip install pyod`.\r\nBy default it uses now sklearn==0.21.0 which does not have sklearn.externals.funcsigs anymore.\r\n\r\nRunning\r\n`from pyod.models.knn import KNN`\r\ngives an error \"No module named sklearn.externals.funcsigs\"\r\n\r\nCan be fixed by using scikit-learn<0.21", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/94", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/94/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/94/events", "html_url": "https://github.com/yzhao062/pyod/issues/94", "id": 442912012, "node_id": "MDU6SXNzdWU0NDI5MTIwMTI=", "number": 94, "title": "code error of small large cluster definition in CBLOF", "user": {"login": "shangwen777", "id": 19768560, "node_id": "MDQ6VXNlcjE5NzY4NTYw", "avatar_url": "https://avatars2.githubusercontent.com/u/19768560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shangwen777", "html_url": "https://github.com/shangwen777", "followers_url": "https://api.github.com/users/shangwen777/followers", "following_url": "https://api.github.com/users/shangwen777/following{/other_user}", "gists_url": "https://api.github.com/users/shangwen777/gists{/gist_id}", "starred_url": "https://api.github.com/users/shangwen777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shangwen777/subscriptions", "organizations_url": "https://api.github.com/users/shangwen777/orgs", "repos_url": "https://api.github.com/users/shangwen777/repos", "events_url": "https://api.github.com/users/shangwen777/events{/privacy}", "received_events_url": "https://api.github.com/users/shangwen777/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-05-10T22:10:46Z", "updated_at": "2019-06-13T21:07:39Z", "closed_at": "2019-06-13T21:07:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": " for i in range(1, self.n_clusters_):\r\n\r\n            temp_sum = np.sum(size_clusters[sorted_cluster_indices[-1 * i:]])\r\n            if temp_sum >= n_samples * self.alpha:\r\n                alpha_list.append(i)\r\n\r\n            if size_clusters[sorted_cluster_indices[i]] / size_clusters[\r\n                sorted_cluster_indices[i - 1]] >= self.beta:\r\n                beta_list.append(i)\r\n\r\nSince the temp_sum started from the largest cluster, in the first iteration, if the largest cluster not bigger or equal to 90% of the total sample size, then the largest cluster will not be in the alpha_list, this should not be true according to the original paper. beta_list has the similar issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/92", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/92/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/92/events", "html_url": "https://github.com/yzhao062/pyod/issues/92", "id": 442793626, "node_id": "MDU6SXNzdWU0NDI3OTM2MjY=", "number": 92, "title": "Deviation-Based Outlier Detection (New Feature)", "user": {"login": "John-Almardeny", "id": 19558793, "node_id": "MDQ6VXNlcjE5NTU4Nzkz", "avatar_url": "https://avatars2.githubusercontent.com/u/19558793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/John-Almardeny", "html_url": "https://github.com/John-Almardeny", "followers_url": "https://api.github.com/users/John-Almardeny/followers", "following_url": "https://api.github.com/users/John-Almardeny/following{/other_user}", "gists_url": "https://api.github.com/users/John-Almardeny/gists{/gist_id}", "starred_url": "https://api.github.com/users/John-Almardeny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/John-Almardeny/subscriptions", "organizations_url": "https://api.github.com/users/John-Almardeny/orgs", "repos_url": "https://api.github.com/users/John-Almardeny/repos", "events_url": "https://api.github.com/users/John-Almardeny/events{/privacy}", "received_events_url": "https://api.github.com/users/John-Almardeny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-10T16:12:04Z", "updated_at": "2020-01-14T12:16:15Z", "closed_at": "2020-01-14T12:16:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As far as I noticed that PyOD does not have any Deviation-Based Outlier Detection Type of Model.\r\nAlthough, they are not very popular and relatively old, but I think it is nice to have a one in the collection.\r\n\r\n----------------------------\r\n\r\n### Linear Method for Deviation Detection for Large Databases\r\nBased on the work of [Arning, A., Agrawal, R., and Raghavan, P. 1996. A linear method for deviation detection in large databases. In Proc. Int. Conf. on Knowledge Discovery and Data Mining (KDD), Portland, OR.](https://www.aaai.org/Papers/KDD/1996/KDD96-027.pdf) ; The Linear Method for Deviation-based Outlier Detection (LMDD) employs the concept of the Smoothing Factor (SF) which indicates how much the dissimilarity can be reduced by removing a subset of elements from the data-set.\r\n\r\nThe dissimilarity function can be any as per mentioned clearly in the paper. The one proposed in the paper is *the variance*, however, more options can be used from the Statistical Dispersion Measures. (Already implemented Average Absolute Deviation; Variance; and Interquartile Range, However, Median Absolute Deviation to be added in future once Scipy Stats Version 1.3.0 is released - *optional*).\r\n\r\nThe original algorithm outputs *Labels*, with a very minor tweak, it can output now *Scores*.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/91", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/91/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/91/events", "html_url": "https://github.com/yzhao062/pyod/issues/91", "id": 442717531, "node_id": "MDU6SXNzdWU0NDI3MTc1MzE=", "number": 91, "title": "Code inconsistency", "user": {"login": "lachhebo", "id": 32218510, "node_id": "MDQ6VXNlcjMyMjE4NTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/32218510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lachhebo", "html_url": "https://github.com/lachhebo", "followers_url": "https://api.github.com/users/lachhebo/followers", "following_url": "https://api.github.com/users/lachhebo/following{/other_user}", "gists_url": "https://api.github.com/users/lachhebo/gists{/gist_id}", "starred_url": "https://api.github.com/users/lachhebo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lachhebo/subscriptions", "organizations_url": "https://api.github.com/users/lachhebo/orgs", "repos_url": "https://api.github.com/users/lachhebo/repos", "events_url": "https://api.github.com/users/lachhebo/events{/privacy}", "received_events_url": "https://api.github.com/users/lachhebo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 709870773, "node_id": "MDU6TGFiZWw3MDk4NzA3NzM=", "url": "https://api.github.com/repos/yzhao062/pyod/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-05-10T13:22:44Z", "updated_at": "2019-10-13T21:42:48Z", "closed_at": "2019-10-13T21:42:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nIn the documentation of knn, it is said that : we can choose an algorithm between BallTree, KDTree ,brute-force and auto. \r\n\r\nHowever, The Ball Tree structure is always applied with  `decision_function() `: \r\n\r\nIf we train a knn with X_train and the algorithm parameter set to KDTree : \r\n\r\nIt will evaluate decision_score on X_test with a Ball Tree. \r\n\r\nCould you modify the code to allow the use of KDTree or brut-force on the testing dataset.  \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/90", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/90/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/90/events", "html_url": "https://github.com/yzhao062/pyod/issues/90", "id": 442501112, "node_id": "MDU6SXNzdWU0NDI1MDExMTI=", "number": 90, "title": "Why OCSVM is regarded as linear model?", "user": {"login": "RockLeeStudio", "id": 24308993, "node_id": "MDQ6VXNlcjI0MzA4OTkz", "avatar_url": "https://avatars0.githubusercontent.com/u/24308993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RockLeeStudio", "html_url": "https://github.com/RockLeeStudio", "followers_url": "https://api.github.com/users/RockLeeStudio/followers", "following_url": "https://api.github.com/users/RockLeeStudio/following{/other_user}", "gists_url": "https://api.github.com/users/RockLeeStudio/gists{/gist_id}", "starred_url": "https://api.github.com/users/RockLeeStudio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RockLeeStudio/subscriptions", "organizations_url": "https://api.github.com/users/RockLeeStudio/orgs", "repos_url": "https://api.github.com/users/RockLeeStudio/repos", "events_url": "https://api.github.com/users/RockLeeStudio/events{/privacy}", "received_events_url": "https://api.github.com/users/RockLeeStudio/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 709870791, "node_id": "MDU6TGFiZWw3MDk4NzA3OTE=", "url": "https://api.github.com/repos/yzhao062/pyod/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-10T01:39:58Z", "updated_at": "2019-05-11T05:48:27Z", "closed_at": "2019-05-11T05:48:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "OCSVM  is regarded as linear model, but the decision function learned by  OCSVM  is a not-linear curve.\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/89", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/89/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/89/events", "html_url": "https://github.com/yzhao062/pyod/issues/89", "id": 442090347, "node_id": "MDU6SXNzdWU0NDIwOTAzNDc=", "number": 89, "title": "CBLOF not converging expected different data type", "user": {"login": "wbarich", "id": 42964555, "node_id": "MDQ6VXNlcjQyOTY0NTU1", "avatar_url": "https://avatars0.githubusercontent.com/u/42964555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wbarich", "html_url": "https://github.com/wbarich", "followers_url": "https://api.github.com/users/wbarich/followers", "following_url": "https://api.github.com/users/wbarich/following{/other_user}", "gists_url": "https://api.github.com/users/wbarich/gists{/gist_id}", "starred_url": "https://api.github.com/users/wbarich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wbarich/subscriptions", "organizations_url": "https://api.github.com/users/wbarich/orgs", "repos_url": "https://api.github.com/users/wbarich/repos", "events_url": "https://api.github.com/users/wbarich/events{/privacy}", "received_events_url": "https://api.github.com/users/wbarich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-05-09T07:30:25Z", "updated_at": "2020-05-08T14:15:22Z", "closed_at": "2019-05-13T06:21:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have been unable to flag anomalies using this algorithm. I have found that when I run the CBLOF algorithm it throws the following error:\r\n\r\nValueError: Buffer dtype mismatch, expected 'INT' but got 'long long'\r\n\r\nException ignored in: 'sklearn.cluster._k_means._assign_labels_csr' ValueError: Buffer dtype mismatch, expected 'INT' but got 'long long'\r\n\r\nWhich results in:\r\n\r\nValueError: Could not form valid cluster separation. Please change n_clusters or change clustering method\r\n\r\nIt appears that the CBLOF algorithm is dependent on sklearn.cluster and the expected data type that is being passed to skelearn from pyod is not what is expected.\r\n\r\nBelow are four scenarios that I have prepared using different parameters for CBLOF. Note that the same error is thrown regardless of changing theses parameters.\r\n\r\nI have also tried changing the cluster size using the elbow method to find the optimal K in the Kmeans scenario.\r\n\r\n    from pyod.models.cblof import CBLOF\r\n    import pyod.utils as ut\r\n    from sklearn import cluster\r\n\r\n    #create some data\r\n    data = ut.data.generate_data()[0]\r\n\r\n    #scenario 1 - use default CBLOF parameters\r\n    model = CBLOF()\r\n    clusters = model.fit_predict(data)\r\n\r\n    #scenario 2 - use kmeans as a centroid estimator\r\n    n_clusters = 3\r\n    kmeans = cluster.KMeans(n_clusters)\r\n    model = CBLOF(n_clusters = n_clusters, clustering_estimator = kmeans)\r\n    clusters = model.fit_predict(data)\r\n\r\n    #test if scaling the data makes a difference\r\n    data_scaled = (data - data.min())/(data.max()-data.min())\r\n\r\n    #scenario 3 - no clusters specified, use defaults, scaled data\r\n    model = CBLOF()\r\n    clusters = model.fit_predict(data_scaled)\r\n\r\n    #scenario 4 - use kmeans as a centroid estimator, scaled data\r\n    n_clusters = 3\r\n    kmeans = cluster.KMeans(n_clusters)\r\n    model = CBLOF(n_clusters = n_clusters, clustering_estimator = kmeans)\r\n    clusters = model.fit_predict(data_scaled)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/87", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/87/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/87/events", "html_url": "https://github.com/yzhao062/pyod/issues/87", "id": 441190159, "node_id": "MDU6SXNzdWU0NDExOTAxNTk=", "number": 87, "title": "Auto encoder input layer neurons", "user": {"login": "Tsinghua-gongjing", "id": 12371558, "node_id": "MDQ6VXNlcjEyMzcxNTU4", "avatar_url": "https://avatars3.githubusercontent.com/u/12371558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tsinghua-gongjing", "html_url": "https://github.com/Tsinghua-gongjing", "followers_url": "https://api.github.com/users/Tsinghua-gongjing/followers", "following_url": "https://api.github.com/users/Tsinghua-gongjing/following{/other_user}", "gists_url": "https://api.github.com/users/Tsinghua-gongjing/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tsinghua-gongjing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tsinghua-gongjing/subscriptions", "organizations_url": "https://api.github.com/users/Tsinghua-gongjing/orgs", "repos_url": "https://api.github.com/users/Tsinghua-gongjing/repos", "events_url": "https://api.github.com/users/Tsinghua-gongjing/events{/privacy}", "received_events_url": "https://api.github.com/users/Tsinghua-gongjing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-05-07T11:52:12Z", "updated_at": "2019-06-27T22:50:50Z", "closed_at": "2019-06-27T22:50:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, thank you for the great module.\r\n\r\nFor the auto encoder part, it seems that a input layer with number of neurons same as features is defined. However, the same is also next defined as the first hidden layer. Is this often the case? Does the model will be too complex for data set with large number of features (e.g. 10000)?\r\n\r\nThanks,\r\nJing", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/85", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/85/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/85/events", "html_url": "https://github.com/yzhao062/pyod/issues/85", "id": 439608800, "node_id": "MDU6SXNzdWU0Mzk2MDg4MDA=", "number": 85, "title": "Fixing generate_data_clusters documentation and adding it to README", "user": {"login": "John-Almardeny", "id": 19558793, "node_id": "MDQ6VXNlcjE5NTU4Nzkz", "avatar_url": "https://avatars2.githubusercontent.com/u/19558793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/John-Almardeny", "html_url": "https://github.com/John-Almardeny", "followers_url": "https://api.github.com/users/John-Almardeny/followers", "following_url": "https://api.github.com/users/John-Almardeny/following{/other_user}", "gists_url": "https://api.github.com/users/John-Almardeny/gists{/gist_id}", "starred_url": "https://api.github.com/users/John-Almardeny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/John-Almardeny/subscriptions", "organizations_url": "https://api.github.com/users/John-Almardeny/orgs", "repos_url": "https://api.github.com/users/John-Almardeny/repos", "events_url": "https://api.github.com/users/John-Almardeny/events{/privacy}", "received_events_url": "https://api.github.com/users/John-Almardeny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-02T14:03:55Z", "updated_at": "2019-05-07T19:12:29Z", "closed_at": "2019-05-07T19:12:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/81", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/81/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/81/events", "html_url": "https://github.com/yzhao062/pyod/issues/81", "id": 435400456, "node_id": "MDU6SXNzdWU0MzU0MDA0NTY=", "number": 81, "title": "if n_samples is large , certain outlier model error rate 200% higher", "user": {"login": "Wang-Yong2018", "id": 36652035, "node_id": "MDQ6VXNlcjM2NjUyMDM1", "avatar_url": "https://avatars0.githubusercontent.com/u/36652035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Wang-Yong2018", "html_url": "https://github.com/Wang-Yong2018", "followers_url": "https://api.github.com/users/Wang-Yong2018/followers", "following_url": "https://api.github.com/users/Wang-Yong2018/following{/other_user}", "gists_url": "https://api.github.com/users/Wang-Yong2018/gists{/gist_id}", "starred_url": "https://api.github.com/users/Wang-Yong2018/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Wang-Yong2018/subscriptions", "organizations_url": "https://api.github.com/users/Wang-Yong2018/orgs", "repos_url": "https://api.github.com/users/Wang-Yong2018/repos", "events_url": "https://api.github.com/users/Wang-Yong2018/events{/privacy}", "received_events_url": "https://api.github.com/users/Wang-Yong2018/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-04-20T13:40:29Z", "updated_at": "2019-04-23T02:16:41Z", "closed_at": "2019-04-23T02:16:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, YZhao;\r\n\r\nI was writing to one possible isuue: in example notebooks compare all models, if the n_samples change to a big number, for example : 10*5 or larger. certain model OD result is totally wrong. \r\nNote: I noticed there is a similar issue. Problem in CBLOF when the number of clusters is big and the train set has too many repeated value #53. But my found should be differnet, so post is as well.\r\n\r\nHere is isssue:\r\n1. the default n_sample  =200, outlier_fraction = 0.25. That means od ground trun point is 50.  After change the n_sample to 10**5, the ground true outlier point should be 25000. \r\nHowever, following models error higher that the groud true OD points. they were:\r\nFeature Bagging:  35259 \r\nLocal Outlier Factor (LOF) 36144 \r\nLocally Selective Combination (LSCP) 37276\r\nbelow is the screen capture.\r\n![image](https://user-images.githubusercontent.com/36652035/56457810-aed47b00-63b2-11e9-9458-17ded1b9b156.png)\r\n\r\nI guess it might related to the dataset type. Doest it mean the simulation data similar to the \r\n\"glass\", \"optdigits\" sample date? why the other estimator did not show such higher error rate? \r\n\r\nLooking forward your kindly response\uff01\r\n\r\nLast but not least, I was know PYOD existed from zhihu. It is a excellent tools, especialy, I have access to more OD resources link for your github. Your work is awesome!\r\n\r\nRecently, i has begun to try use some model it in one of my general OD automation tools.(which use docker, and airflow for platform).  dataset type, and dataset qty are two of point need considered.\r\n\r\nWangYong\r\nw.yong@yahoo.com", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/79", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/79/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/79/events", "html_url": "https://github.com/yzhao062/pyod/issues/79", "id": 435191622, "node_id": "MDU6SXNzdWU0MzUxOTE2MjI=", "number": 79, "title": "IForest: FutureWarning: behaviour=\"old\" is deprecated", "user": {"login": "bflammers", "id": 15668381, "node_id": "MDQ6VXNlcjE1NjY4Mzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/15668381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bflammers", "html_url": "https://github.com/bflammers", "followers_url": "https://api.github.com/users/bflammers/followers", "following_url": "https://api.github.com/users/bflammers/following{/other_user}", "gists_url": "https://api.github.com/users/bflammers/gists{/gist_id}", "starred_url": "https://api.github.com/users/bflammers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bflammers/subscriptions", "organizations_url": "https://api.github.com/users/bflammers/orgs", "repos_url": "https://api.github.com/users/bflammers/repos", "events_url": "https://api.github.com/users/bflammers/events{/privacy}", "received_events_url": "https://api.github.com/users/bflammers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-19T14:14:55Z", "updated_at": "2019-04-20T19:07:56Z", "closed_at": "2019-04-20T19:07:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, \r\n\r\nThanks for a great library! \r\n\r\nWhen declaring a new IForest object, Sklearn throws the following warning:\r\n> FutureWarning: behaviour=\"old\" is deprecated and will be removed in version 0.22. Please use behaviour=\"new\", which makes the decision_function change to match other anomaly detection algorithm API.\r\n  FutureWarning)\r\n\r\nThis new behavior in sklearn's iforest is about where the threshold is set between anomalies and normal observations. See documentation on [behaviour](https://github.com/scikit-learn/scikit-learn/blob/7b136e9/sklearn/ensemble/iforest.py#L92) argument and [offset_](https://github.com/scikit-learn/scikit-learn/blob/7b136e9/sklearn/ensemble/iforest.py#L134):\r\n\r\n>behaviour : str, default='old'\r\n        Behaviour of the ``decision_function`` which can be either 'old' or\r\n        'new'. Passing ``behaviour='new'`` makes the ``decision_function``\r\n        change to match other anomaly detection algorithm API which will be\r\n        the default behaviour in the future. As explained in details in the\r\n        ``offset_`` attribute documentation, the ``decision_function`` becomes\r\n        dependent on the contamination parameter, in such a way that 0 becomes\r\n        its natural threshold to detect outliers.\r\n\r\n>offset_ : float\r\n        Offset used to define the decision function from the raw scores.\r\n        We have the relation: ``decision_function = score_samples - offset_``.\r\n        Assuming behaviour == 'new', ``offset_`` is defined as follows.\r\n        When the contamination parameter is set to \"auto\", the offset is equal\r\n        to -0.5 as the scores of inliers are close to 0 and the scores of\r\n        outliers are close to -1. When a contamination parameter different\r\n        than \"auto\" is provided, the offset is defined in such a way we obtain\r\n        the expected number of outliers (samples with decision function < 0)\r\n        in training.\r\n        Assuming the behaviour parameter is set to 'old', we always have\r\n        ``offset_ = -0.5``, making the decision function independent from the\r\n        contamination parameter.\r\n\r\nI think a simple fix would be to add argument `behaviour=\"new\"` in the call to sklearn.ensemble.IsolationForest", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/77", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/77/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/77/events", "html_url": "https://github.com/yzhao062/pyod/issues/77", "id": 434987866, "node_id": "MDU6SXNzdWU0MzQ5ODc4NjY=", "number": 77, "title": "kNN visualization (interpretation)", "user": {"login": "dekaufman", "id": 9930919, "node_id": "MDQ6VXNlcjk5MzA5MTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/9930919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dekaufman", "html_url": "https://github.com/dekaufman", "followers_url": "https://api.github.com/users/dekaufman/followers", "following_url": "https://api.github.com/users/dekaufman/following{/other_user}", "gists_url": "https://api.github.com/users/dekaufman/gists{/gist_id}", "starred_url": "https://api.github.com/users/dekaufman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dekaufman/subscriptions", "organizations_url": "https://api.github.com/users/dekaufman/orgs", "repos_url": "https://api.github.com/users/dekaufman/repos", "events_url": "https://api.github.com/users/dekaufman/events{/privacy}", "received_events_url": "https://api.github.com/users/dekaufman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-18T22:46:27Z", "updated_at": "2019-06-12T18:49:54Z", "closed_at": "2019-06-12T18:49:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "The visualization produced by `knn_example.py` for the \"Test Set Prediction\" shows two false positives, i.e., 12 outlier findings instead of 10 as in the \"Test Set Ground Truth\" chart.  Isn't this somewhat inconsistent with the result printed to console that ROC_AUC = 1?\r\n\r\nIf so, I think the inconsistency arises because the predicted labels for the chart are based on `y_test_pred = clf.predict(X_test)`.  I think that means that the test labels are being predicted from comparison the distance threshold `clf.threshold_` obtained in fitting `clf` to the *training* data.  In contrast, the ROC_AUC value is based on a fixed contamination rate (10%).\r\n\r\nIt would only make sense to use `clf.threshold_` for this purpose if the kNN distance for any point x_i in the test set were being computed over the distances from x_i to each of the 200 training points, not the distances to the other 99 test points.  But then, the ROC_AUC curve ought to be based on those same labels, and it isn't, is it?  I think it's currently being generated from a set of labels that re-applies the 10% contamination assumption, ignoring `clf.threshold_`.\r\n\r\n(I can't quite follow whether the kNN distances for the points in the test set are being computed vs. the training set or vs. the other points in the test set.  Can you clarify this for me?  I have to guess that it's the former; if it's the latter, then it would seem really weird to be applying `clf.threshold_` from a training set of a different size.)\r\n\r\nIs it even appropriate to apply the kNN model from training data directly to the test set?  I would have thought this use of kNN is intended to be used on an entire data set all by itself.  Although one could perhaps study a training set to make a reasonable judgment about appropriate values of `k` and contamination rate.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/70", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/70/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/70/events", "html_url": "https://github.com/yzhao062/pyod/issues/70", "id": 432928946, "node_id": "MDU6SXNzdWU0MzI5Mjg5NDY=", "number": 70, "title": "LSCP with multiple LOF testing error: range parameter must be finite", "user": {"login": "flycloudking", "id": 42480500, "node_id": "MDQ6VXNlcjQyNDgwNTAw", "avatar_url": "https://avatars3.githubusercontent.com/u/42480500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flycloudking", "html_url": "https://github.com/flycloudking", "followers_url": "https://api.github.com/users/flycloudking/followers", "following_url": "https://api.github.com/users/flycloudking/following{/other_user}", "gists_url": "https://api.github.com/users/flycloudking/gists{/gist_id}", "starred_url": "https://api.github.com/users/flycloudking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flycloudking/subscriptions", "organizations_url": "https://api.github.com/users/flycloudking/orgs", "repos_url": "https://api.github.com/users/flycloudking/repos", "events_url": "https://api.github.com/users/flycloudking/events{/privacy}", "received_events_url": "https://api.github.com/users/flycloudking/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-04-14T03:41:44Z", "updated_at": "2019-04-30T20:45:08Z", "closed_at": "2019-04-30T20:45:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am running the following code:\r\n\r\nclf_name = 'LSCP_LOF'\r\n\r\n## other parameters:\r\nlof_list = [LOF(n_neighbors=5), LOF(n_neighbors=10), LOF(n_neighbors=20), LOF(n_neighbors=30), LOF(n_neighbors=40), LOF(n_neighbors=50), LOF(n_neighbors=75)]\r\n\r\nclf = LSCP(lof_list)\r\n#clf = LOF(n_neighbors=5, contamination=outliers_fraction)\r\nclf.fit(X_train)\r\n\r\nand got the following error, however, when fit directly with LOF method, it runs fine:\r\n\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-27-6e00f8bf5bcd> in <module>()\r\n     12 clf = LSCP(lof_list)\r\n     13 #clf = LOF(n_neighbors=5, contamination=outliers_fraction)\r\n---> 14 clf.fit(X_train)\r\n     15 \r\n     16 # get the prediction label and outlier scores of the training data\r\n\r\n~/proj/myPylib/lib/python3.6/site-packages/pyod/models/lscp.py in fit(self, X, y)\r\n    171 \r\n    172         # set decision scores and threshold\r\n--> 173         self.decision_scores_ = self._get_decision_scores(X)\r\n    174         self._process_decision_scores()\r\n    175 \r\n\r\n~/proj/myPylib/lib/python3.6/site-packages/pyod/models/lscp.py in _get_decision_scores(self, X)\r\n    273             pred_scores_ens[i,] = np.mean(\r\n    274                 test_scores_norm[\r\n--> 275                     i, self._get_competent_detectors(pearson_corr_scores)])\r\n    276 \r\n    277         return pred_scores_ens\r\n\r\n~/proj/myPylib/lib/python3.6/site-packages/pyod/models/lscp.py in _get_competent_detectors(self, scores)\r\n    355                           \"classifiers, reducing n_bins to n_clf.\")\r\n    356             self.n_bins = self.n_clf\r\n--> 357         hist, bin_edges = np.histogram(scores, bins=self.n_bins)\r\n    358 \r\n    359         # find n_selected largest bins\r\n\r\n/opt/anaconda3/lib/python3.6/site-packages/numpy/lib/function_base.py in histogram(a, bins, range, normed, weights, density)\r\n    668     if not np.all(np.isfinite([first_edge, last_edge])):\r\n    669         raise ValueError(\r\n--> 670             'range parameter must be finite.')\r\n    671     if first_edge == last_edge:\r\n    672         first_edge -= 0.5\r\n\r\nValueError: range parameter must be finite.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/69", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/69/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/69/events", "html_url": "https://github.com/yzhao062/pyod/issues/69", "id": 431966537, "node_id": "MDU6SXNzdWU0MzE5NjY1Mzc=", "number": 69, "title": "intended clf.predict_proba usage", "user": {"login": "Maddosaurus", "id": 8026915, "node_id": "MDQ6VXNlcjgwMjY5MTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8026915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Maddosaurus", "html_url": "https://github.com/Maddosaurus", "followers_url": "https://api.github.com/users/Maddosaurus/followers", "following_url": "https://api.github.com/users/Maddosaurus/following{/other_user}", "gists_url": "https://api.github.com/users/Maddosaurus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Maddosaurus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Maddosaurus/subscriptions", "organizations_url": "https://api.github.com/users/Maddosaurus/orgs", "repos_url": "https://api.github.com/users/Maddosaurus/repos", "events_url": "https://api.github.com/users/Maddosaurus/events{/privacy}", "received_events_url": "https://api.github.com/users/Maddosaurus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2019-04-11T11:15:40Z", "updated_at": "2019-04-15T06:48:18Z", "closed_at": "2019-04-15T06:48:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to make sense of the `predict_proba` function.\r\n\r\nWhat I want to achieve: Get class probabilities for generating metrics like ROC-curves, calibration curves, Precision, Accuracy, etc with *scikit-learn* tools. As I am working on a binary classification task, I though I could use the `predict_proba` for this.\r\n\r\n\r\nThe documentation describes it as *\"predict the probability of a sample being outlier\"* that returns:  \r\n*For each observation, tells whether or not it should be considered as an outlier according to the fitted model. Return the outlier probability, ranging in [0,1].*  \r\nwhich is what I am looking for currently. What I don't understand is that a ndarray of shape `(no_of_observations,2)` is returned.  \r\nIf I compare the output of `clf.predict()` and `clf.predict_proba()` side by side, I see a high value in the first column of the `predict_proba` array all the time:  \r\n\r\n```\r\n0 -> [0.86014439 0.13985561]\r\n0 -> [0.96943563 0.03056437]\r\n0 -> [0.88716599 0.11283401]\r\n0 -> [0.87912382 0.12087618]\r\n0 -> [0.9686196   0.0313804]\r\n0 -> [0.87921815 0.12078185]\r\n1 -> [0.83279906 0.16720094]\r\n0 -> [0.87921815 0.12078185]\r\n0 -> [0.86137304 0.13862696]\r\n0 -> [0.98987502 0.01012498]\r\n```\r\nMight the first column be read as \"how confident is the classifier that the predicted class is correct\"? It would be great if you could help me out on this one.  \r\n\r\nBy the way: Thanks for building such a great Python module!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/65", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/65/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/65/events", "html_url": "https://github.com/yzhao062/pyod/issues/65", "id": 430357683, "node_id": "MDU6SXNzdWU0MzAzNTc2ODM=", "number": 65, "title": "Generate Synthetic Data in Clusters", "user": {"login": "John-Almardeny", "id": 19558793, "node_id": "MDQ6VXNlcjE5NTU4Nzkz", "avatar_url": "https://avatars2.githubusercontent.com/u/19558793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/John-Almardeny", "html_url": "https://github.com/John-Almardeny", "followers_url": "https://api.github.com/users/John-Almardeny/followers", "following_url": "https://api.github.com/users/John-Almardeny/following{/other_user}", "gists_url": "https://api.github.com/users/John-Almardeny/gists{/gist_id}", "starred_url": "https://api.github.com/users/John-Almardeny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/John-Almardeny/subscriptions", "organizations_url": "https://api.github.com/users/John-Almardeny/orgs", "repos_url": "https://api.github.com/users/John-Almardeny/repos", "events_url": "https://api.github.com/users/John-Almardeny/events{/privacy}", "received_events_url": "https://api.github.com/users/John-Almardeny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-08T09:53:25Z", "updated_at": "2019-04-30T20:46:32Z", "closed_at": "2019-04-30T20:46:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Adding new feature - that is generate artificial data in clusters.\r\nCreating utility function to generate synthesized data in clusters.\r\nGenerated data can involve the low density pattern problem and global outliers which are considered as **difficult tasks** for outliers detection algorithms.\r\n[Highlights](http://www.cs.cuhk.hk/~adafu/Pub/pakdd02.pdf)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/64", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/64/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/64/events", "html_url": "https://github.com/yzhao062/pyod/issues/64", "id": 428513745, "node_id": "MDU6SXNzdWU0Mjg1MTM3NDU=", "number": 64, "title": "outlier score highly correlated to over distance to points of origin", "user": {"login": "flycloudking", "id": 42480500, "node_id": "MDQ6VXNlcjQyNDgwNTAw", "avatar_url": "https://avatars3.githubusercontent.com/u/42480500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flycloudking", "html_url": "https://github.com/flycloudking", "followers_url": "https://api.github.com/users/flycloudking/followers", "following_url": "https://api.github.com/users/flycloudking/following{/other_user}", "gists_url": "https://api.github.com/users/flycloudking/gists{/gist_id}", "starred_url": "https://api.github.com/users/flycloudking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flycloudking/subscriptions", "organizations_url": "https://api.github.com/users/flycloudking/orgs", "repos_url": "https://api.github.com/users/flycloudking/repos", "events_url": "https://api.github.com/users/flycloudking/events{/privacy}", "received_events_url": "https://api.github.com/users/flycloudking/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-04-03T01:07:05Z", "updated_at": "2019-04-08T13:45:07Z", "closed_at": "2019-04-08T13:45:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I calculated the distance of each data points to origins at 0, by use 'np.linalg.norm(x)', while x is just one multi-variate sample, then normalize all these values to 0-1, I called this 'global_score'. When I compare the global score to scores from different methods, it turns out it's highly correlated (0.99) with PCA, autoencoder, CBLOF, KNN. So it seems all these methods are just calculating the overall distance of the samples, instead of anomalies from multiple clusters.\r\nI was very troubled by this fact and hope you can confirm whether this is true and if it is, what's the reason for this.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/60", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/60/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/60/events", "html_url": "https://github.com/yzhao062/pyod/issues/60", "id": 417269151, "node_id": "MDU6SXNzdWU0MTcyNjkxNTE=", "number": 60, "title": "Subspace Outlier Degree (SOD) - Request", "user": {"login": "John-Almardeny", "id": 19558793, "node_id": "MDQ6VXNlcjE5NTU4Nzkz", "avatar_url": "https://avatars2.githubusercontent.com/u/19558793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/John-Almardeny", "html_url": "https://github.com/John-Almardeny", "followers_url": "https://api.github.com/users/John-Almardeny/followers", "following_url": "https://api.github.com/users/John-Almardeny/following{/other_user}", "gists_url": "https://api.github.com/users/John-Almardeny/gists{/gist_id}", "starred_url": "https://api.github.com/users/John-Almardeny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/John-Almardeny/subscriptions", "organizations_url": "https://api.github.com/users/John-Almardeny/orgs", "repos_url": "https://api.github.com/users/John-Almardeny/repos", "events_url": "https://api.github.com/users/John-Almardeny/events{/privacy}", "received_events_url": "https://api.github.com/users/John-Almardeny/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 970332221, "node_id": "MDU6TGFiZWw5NzAzMzIyMjE=", "url": "https://api.github.com/repos/yzhao062/pyod/labels/New%20Feature", "name": "New Feature", "color": "53d6c6", "default": false, "description": "Request of adding new features"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-05T12:14:39Z", "updated_at": "2019-12-18T21:47:29Z", "closed_at": "2019-12-18T21:47:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I cannot find any subspace-related type algorithm among yours, I believe it will greatly contribute to your collection. So, Can ye please add the SOD algorithm to your package please: \r\nhttp://www.dbs.ifi.lmu.de/Publikationen/Papers/pakdd09_SOD.pdf", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/59", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/59/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/59/events", "html_url": "https://github.com/yzhao062/pyod/issues/59", "id": 412898212, "node_id": "MDU6SXNzdWU0MTI4OTgyMTI=", "number": 59, "title": "Breadth-First Approach in FeatureBagging ", "user": {"login": "marcelflygare", "id": 16529437, "node_id": "MDQ6VXNlcjE2NTI5NDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/16529437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcelflygare", "html_url": "https://github.com/marcelflygare", "followers_url": "https://api.github.com/users/marcelflygare/followers", "following_url": "https://api.github.com/users/marcelflygare/following{/other_user}", "gists_url": "https://api.github.com/users/marcelflygare/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcelflygare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcelflygare/subscriptions", "organizations_url": "https://api.github.com/users/marcelflygare/orgs", "repos_url": "https://api.github.com/users/marcelflygare/repos", "events_url": "https://api.github.com/users/marcelflygare/events{/privacy}", "received_events_url": "https://api.github.com/users/marcelflygare/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 970332221, "node_id": "MDU6TGFiZWw5NzAzMzIyMjE=", "url": "https://api.github.com/repos/yzhao062/pyod/labels/New%20Feature", "name": "New Feature", "color": "53d6c6", "default": false, "description": "Request of adding new features"}, {"id": 709870780, "node_id": "MDU6TGFiZWw3MDk4NzA3ODA=", "url": "https://api.github.com/repos/yzhao062/pyod/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-21T12:22:58Z", "updated_at": "2019-02-22T14:39:28Z", "closed_at": "2019-02-22T14:39:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "May I ask a question about the implemented approach for \"combination\" in the \"feature_bagging.py\" ?\r\n\r\nIMHO, the idea of using \"maximization\" is not a precise reflection of the original paper (`lazarevic2005feature`).  The authors describes there a breath-first search procedure; arguably the numeric differences might be small. \r\nHowever, please consider a generic toys example as a counter-example:\r\n\r\n` |------| Alg1| Alg2|`\r\n`| Obs1  | 10.0| 2.0   |`\r\n`| Obs2  | 9.0  | 3.0   | `\r\n`| Obs3  | 8.0  | 4.0   |`\r\n\r\nMaximization would return the order Obs1 (score:10) , Obs2(score:9), Obs(score:3), Breadth-First Search would return Obs1 (rank1 in Alg 1), Obs3, (rank1 in Alg 2) and the Obs2. \r\n\r\nMany thanks. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/58", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/58/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/58/events", "html_url": "https://github.com/yzhao062/pyod/issues/58", "id": 411544129, "node_id": "MDU6SXNzdWU0MTE1NDQxMjk=", "number": 58, "title": "n_jobs ignored", "user": {"login": "cibic89", "id": 22660599, "node_id": "MDQ6VXNlcjIyNjYwNTk5", "avatar_url": "https://avatars1.githubusercontent.com/u/22660599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cibic89", "html_url": "https://github.com/cibic89", "followers_url": "https://api.github.com/users/cibic89/followers", "following_url": "https://api.github.com/users/cibic89/following{/other_user}", "gists_url": "https://api.github.com/users/cibic89/gists{/gist_id}", "starred_url": "https://api.github.com/users/cibic89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cibic89/subscriptions", "organizations_url": "https://api.github.com/users/cibic89/orgs", "repos_url": "https://api.github.com/users/cibic89/repos", "events_url": "https://api.github.com/users/cibic89/events{/privacy}", "received_events_url": "https://api.github.com/users/cibic89/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-18T15:57:07Z", "updated_at": "2019-02-27T19:41:30Z", "closed_at": "2019-02-27T19:41:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm using xgbod with n_jobs = -1 and its no different than using it with n_jobs = 1...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/56", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/56/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/56/events", "html_url": "https://github.com/yzhao062/pyod/issues/56", "id": 410647299, "node_id": "MDU6SXNzdWU0MTA2NDcyOTk=", "number": 56, "title": "Resource updation request of an Article - Outlier Detection using PyOD ", "user": {"login": "lakshay-arora", "id": 25006010, "node_id": "MDQ6VXNlcjI1MDA2MDEw", "avatar_url": "https://avatars3.githubusercontent.com/u/25006010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lakshay-arora", "html_url": "https://github.com/lakshay-arora", "followers_url": "https://api.github.com/users/lakshay-arora/followers", "following_url": "https://api.github.com/users/lakshay-arora/following{/other_user}", "gists_url": "https://api.github.com/users/lakshay-arora/gists{/gist_id}", "starred_url": "https://api.github.com/users/lakshay-arora/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lakshay-arora/subscriptions", "organizations_url": "https://api.github.com/users/lakshay-arora/orgs", "repos_url": "https://api.github.com/users/lakshay-arora/repos", "events_url": "https://api.github.com/users/lakshay-arora/events{/privacy}", "received_events_url": "https://api.github.com/users/lakshay-arora/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-15T07:56:42Z", "updated_at": "2019-02-15T15:21:31Z", "closed_at": "2019-02-15T15:21:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nI have written an article on Outlier Detection using PyOD on Analytics Vidhya Blog -\r\n[https://www.analyticsvidhya.com/blog/2019/02/outlier-detection-python-pyod/](https://www.analyticsvidhya.com/blog/2019/02/outlier-detection-python-pyod/) \r\n\r\nIn the article, I have tried to explain the need for outlier detection and how can we use pyod for the same and also implemented pyod on a real world data set.  \r\nPlease consider it including in your resources section on GitHub. I believe it would be really helpful for the people who wanted to get started with pyod.\r\n\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/53", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/53/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/53/events", "html_url": "https://github.com/yzhao062/pyod/issues/53", "id": 404939869, "node_id": "MDU6SXNzdWU0MDQ5Mzk4Njk=", "number": 53, "title": "Problem in CBLOF when the number of clusters is big and the train set has too many repeated value", "user": {"login": "GiovannaR", "id": 19623850, "node_id": "MDQ6VXNlcjE5NjIzODUw", "avatar_url": "https://avatars0.githubusercontent.com/u/19623850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GiovannaR", "html_url": "https://github.com/GiovannaR", "followers_url": "https://api.github.com/users/GiovannaR/followers", "following_url": "https://api.github.com/users/GiovannaR/following{/other_user}", "gists_url": "https://api.github.com/users/GiovannaR/gists{/gist_id}", "starred_url": "https://api.github.com/users/GiovannaR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GiovannaR/subscriptions", "organizations_url": "https://api.github.com/users/GiovannaR/orgs", "repos_url": "https://api.github.com/users/GiovannaR/repos", "events_url": "https://api.github.com/users/GiovannaR/events{/privacy}", "received_events_url": "https://api.github.com/users/GiovannaR/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 709870773, "node_id": "MDU6TGFiZWw3MDk4NzA3NzM=", "url": "https://api.github.com/repos/yzhao062/pyod/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-01-30T20:00:03Z", "updated_at": "2019-02-10T19:35:45Z", "closed_at": "2019-02-10T19:33:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n\r\nIf the train set has many repeated values and a large number of clusters is used, then some clusters will have the same value for the center. So, when defining the equation `self.cluster_sizes_=np.bincount(clf.cluster_labels_)`, the results is an array smaller than the number of cluster, which generate an error and turns impossible to set large and small clusters. This could be avoided by changing `self.cluster_sizes_=np.bincount(clf.cluster_labels_)` to `self.cluster_sizes_=np.bincount(clf.cluster_labels_, minlength=n_clusters)`. This is an issue that is damaging my code flexibility and I want to know if it is worth getting fixed.\r\n\r\nExample of code:\r\n```\r\nfrom pyod.utils.data import generate_data\r\nx = [[ 0.30244003],  [0.01218177],[-0.50835109], [-0.36951435],[ 0.97274482], [-0.68325119], \r\n     [0.0], [0.0], [0.08], [0.0], [0.0], [ 0.0],[ 0.0], [ 0.0],[0.09], [0.0],[ 0.0], [0.0],\r\n     [0.0], [ 0.0],[-20.29518778], [0.0],[ 0.0], [0.0],[ 0.0], [ 0.0],\r\n     [0.0], [ 8.38548823], [0.0], [ 0.0]]\r\ntest = generate_data(train_only=True)\r\nclf_name = 'CBLOF'\r\nclf = CBLOF(alpha=0.1, n_clusters=15, beta=10, check_estimator=False)\r\ntry:\r\n    clf.fit(x)\r\nexcept Exception as ex:\r\n    print(str(ex))\r\n    print(\"\\n Cluster centers: \" + str(clf.cluster_centers_))\r\n    print(\"\\n Cluster sizes: \" + str(clf.cluster_sizes_))\r\n    print('\\n Supposed to be the cluster size: ' + str(np.bincount(clf.cluster_labels_, minlength=15)))\r\n    print(\"\\n Large clusters: \" + str(clf.large_cluster_labels_))\r\n    print(\"\\n Small clusters: \" + str(clf.small_cluster_labels_))\r\n```\r\nOutput:\r\n```\r\nindex 11 is out of bounds for axis 0 with size 11\r\n\r\n Cluster centers: [[ 0.00000000e+00]\r\n [-2.02951878e+01]\r\n [ 8.38548823e+00]\r\n [ 9.72744820e-01]\r\n [-5.08351090e-01]\r\n [ 3.02440030e-01]\r\n [-6.83251190e-01]\r\n [-3.69514350e-01]\r\n [ 8.00000000e-02]\r\n [ 1.21817700e-02]\r\n [ 9.00000000e-02]\r\n [ 0.00000000e+00]\r\n [ 0.00000000e+00]\r\n [ 8.00000000e-02]\r\n [ 0.00000000e+00]]\r\n\r\n Cluster sizes: [20  1  1  1  1  1  1  1  1  1  1]\r\n\r\n Supposed to be the cluster size: [20  1  1  1  1  1  1  1  1  1  1  0  0  0  0]\r\n---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\n<ipython-input-39-1b14a2099b96> in <module>()\r\n     18 try:\r\n---> 19     clf.fit(x)\r\n     20 except Exception as ex:\r\n\r\n/usr/local/lib/python3.5/dist-packages/pyod/models/cblof.py in fit(self, X, y)\r\n    168         self._set_cluster_centers(X, n_features)\r\n--> 169         self._set_small_large_clusters(n_samples)\r\n    170 \r\n\r\n/usr/local/lib/python3.5/dist-packages/pyod/models/cblof.py in _set_small_large_clusters(self, n_samples)\r\n    251 \r\n--> 252             if size_clusters[sorted_cluster_indices[i]] / size_clusters[\r\n    253                 sorted_cluster_indices[i - 1]] >= self.beta:\r\n\r\nIndexError: index 11 is out of bounds for axis 0 with size 11\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-39-1b14a2099b96> in <module>()\r\n     23     print(\"\\n Cluster sizes: \" + str(clf.cluster_sizes_))\r\n     24     print('\\n Supposed to be the cluster size: ' + str(np.bincount(clf.cluster_labels_, minlength=15)))\r\n---> 25     print(\"\\n Large clusters: \" + str(clf.large_cluster_labels_))\r\n     26     print(\"\\n Small clusters: \" + str(clf.small_cluster_labels_))\r\n     27 \r\n\r\nAttributeError: 'CBLOF' object has no attribute 'large_cluster_labels_'\r\n\r\n```\r\n\r\nThanks for your help,\r\nGiovanna", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/52", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/52/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/52/events", "html_url": "https://github.com/yzhao062/pyod/issues/52", "id": 400971212, "node_id": "MDU6SXNzdWU0MDA5NzEyMTI=", "number": 52, "title": "Does pydo support regression tasks?", "user": {"login": "Bjoux2", "id": 12781926, "node_id": "MDQ6VXNlcjEyNzgxOTI2", "avatar_url": "https://avatars1.githubusercontent.com/u/12781926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bjoux2", "html_url": "https://github.com/Bjoux2", "followers_url": "https://api.github.com/users/Bjoux2/followers", "following_url": "https://api.github.com/users/Bjoux2/following{/other_user}", "gists_url": "https://api.github.com/users/Bjoux2/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bjoux2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bjoux2/subscriptions", "organizations_url": "https://api.github.com/users/Bjoux2/orgs", "repos_url": "https://api.github.com/users/Bjoux2/repos", "events_url": "https://api.github.com/users/Bjoux2/events{/privacy}", "received_events_url": "https://api.github.com/users/Bjoux2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 709870791, "node_id": "MDU6TGFiZWw3MDk4NzA3OTE=", "url": "https://api.github.com/repos/yzhao062/pyod/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-19T07:37:29Z", "updated_at": "2019-02-01T20:41:47Z", "closed_at": "2019-02-01T20:41:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nfrom pyod.models.xgbod import XGBOD\r\n\r\nxgb = XGBOD()\r\n\r\nprint(y[0:10])\r\n\r\nxgb.fit(X,y)\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/12781926/51423790-1cc8a500-1c00-11e9-9b4a-081bc2a6ebae.png)\r\n\r\nThanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/50", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/50/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/50/events", "html_url": "https://github.com/yzhao062/pyod/issues/50", "id": 399817952, "node_id": "MDU6SXNzdWUzOTk4MTc5NTI=", "number": 50, "title": "Documentation / Implementation difference in Autoencoder", "user": {"login": "Maddosaurus", "id": 8026915, "node_id": "MDQ6VXNlcjgwMjY5MTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8026915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Maddosaurus", "html_url": "https://github.com/Maddosaurus", "followers_url": "https://api.github.com/users/Maddosaurus/followers", "following_url": "https://api.github.com/users/Maddosaurus/following{/other_user}", "gists_url": "https://api.github.com/users/Maddosaurus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Maddosaurus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Maddosaurus/subscriptions", "organizations_url": "https://api.github.com/users/Maddosaurus/orgs", "repos_url": "https://api.github.com/users/Maddosaurus/repos", "events_url": "https://api.github.com/users/Maddosaurus/events{/privacy}", "received_events_url": "https://api.github.com/users/Maddosaurus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-16T13:51:52Z", "updated_at": "2019-01-16T14:41:38Z", "closed_at": "2019-01-16T14:22:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "While exploring the AutoEncoder in pyod, I've noticed a discrepancy between the generated docs and the implementation.  \r\nWhile the docs (https://pyod.readthedocs.io/en/latest/pyod.models.html#module-pyod.models.auto_encoder) inform you, that __hidden_neurons__ defaults to a list ([64, 32, 32, 64]), the implementation assigns *None* as type: https://github.com/yzhao062/pyod/blob/development/pyod/models/auto_encoder.py#L126  \r\nWhilst this isn't a problem for itself, instancing an AutoEncoder like that resulted in a TypeError on my side: \r\n```\r\n         # Verify the network design is valid\r\n>       if not self.hidden_neurons == self.hidden_neurons[::-1]:\r\nE       TypeError: 'NoneType' object is not subscriptable\r\n```\r\n\r\nIt might be worth a try to change the default for __hidden_neurons__ to the list mentioned in the docs.  \r\nAnd by the way: Thanks for this framework, it is really a breeze to work with!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/49", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/49/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/49/events", "html_url": "https://github.com/yzhao062/pyod/issues/49", "id": 395849422, "node_id": "MDU6SXNzdWUzOTU4NDk0MjI=", "number": 49, "title": "The KNN example is incorrect", "user": {"login": "chenygie", "id": 11917155, "node_id": "MDQ6VXNlcjExOTE3MTU1", "avatar_url": "https://avatars0.githubusercontent.com/u/11917155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenygie", "html_url": "https://github.com/chenygie", "followers_url": "https://api.github.com/users/chenygie/followers", "following_url": "https://api.github.com/users/chenygie/following{/other_user}", "gists_url": "https://api.github.com/users/chenygie/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenygie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenygie/subscriptions", "organizations_url": "https://api.github.com/users/chenygie/orgs", "repos_url": "https://api.github.com/users/chenygie/repos", "events_url": "https://api.github.com/users/chenygie/events{/privacy}", "received_events_url": "https://api.github.com/users/chenygie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-04T08:44:40Z", "updated_at": "2019-01-04T08:50:25Z", "closed_at": "2019-01-04T08:50:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "The KNN example is incorrect\r\nThere is no get_outliers_inliers in pyod\r\n\r\n`from pyod.utils.data import generate_data\r\nfrom pyod.utils.data import get_outliers_inliers`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/47", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/47/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/47/events", "html_url": "https://github.com/yzhao062/pyod/issues/47", "id": 394255487, "node_id": "MDU6SXNzdWUzOTQyNTU0ODc=", "number": 47, "title": "easy way to plot loss for autoencoder model", "user": {"login": "jramak", "id": 25393179, "node_id": "MDQ6VXNlcjI1MzkzMTc5", "avatar_url": "https://avatars3.githubusercontent.com/u/25393179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jramak", "html_url": "https://github.com/jramak", "followers_url": "https://api.github.com/users/jramak/followers", "following_url": "https://api.github.com/users/jramak/following{/other_user}", "gists_url": "https://api.github.com/users/jramak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jramak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jramak/subscriptions", "organizations_url": "https://api.github.com/users/jramak/orgs", "repos_url": "https://api.github.com/users/jramak/repos", "events_url": "https://api.github.com/users/jramak/events{/privacy}", "received_events_url": "https://api.github.com/users/jramak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-26T23:02:14Z", "updated_at": "2019-01-20T22:03:43Z", "closed_at": "2019-01-20T22:03:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there an easy way to plot the loss as a function of epochs for the pyod autoencoder module? I want to visualize this to decide how many epochs to train for.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/45", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/45/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/45/events", "html_url": "https://github.com/yzhao062/pyod/issues/45", "id": 393057126, "node_id": "MDU6SXNzdWUzOTMwNTcxMjY=", "number": 45, "title": "ValueError: continuous format is not supported", "user": {"login": "macd2", "id": 30157354, "node_id": "MDQ6VXNlcjMwMTU3MzU0", "avatar_url": "https://avatars2.githubusercontent.com/u/30157354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macd2", "html_url": "https://github.com/macd2", "followers_url": "https://api.github.com/users/macd2/followers", "following_url": "https://api.github.com/users/macd2/following{/other_user}", "gists_url": "https://api.github.com/users/macd2/gists{/gist_id}", "starred_url": "https://api.github.com/users/macd2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macd2/subscriptions", "organizations_url": "https://api.github.com/users/macd2/orgs", "repos_url": "https://api.github.com/users/macd2/repos", "events_url": "https://api.github.com/users/macd2/events{/privacy}", "received_events_url": "https://api.github.com/users/macd2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-20T13:56:33Z", "updated_at": "2019-02-22T14:39:47Z", "closed_at": "2019-02-22T14:39:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there,\r\n\r\nfollowing the example for KNN im getting this error:\r\n````\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-252-21e0f0751702> in <module>()\r\n      2 # evaluate and print the results\r\n      3 print(\"\\nOn Training Data:\")\r\n----> 4 evaluate_print(clf_name, y_train, y_train_scores)\r\n      5 print(\"\\nOn Test Data:\")\r\n      6 evaluate_print(clf_name, y_test, y_test_scores)\r\n------\r\n    157     print('{clf_name} ROC:{roc}, precision @ rank n:{prn}'.format(\r\n    158         clf_name=clf_name,\r\n--> 159         roc=np.round(roc_auc_score(y, y_pred), decimals=4),\r\n    160         prn=np.round(precision_n_scores(y, y_pred), decimals=4)))\r\n````\r\n\r\nany suggestions? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/43", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/43/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/43/events", "html_url": "https://github.com/yzhao062/pyod/issues/43", "id": 392290149, "node_id": "MDU6SXNzdWUzOTIyOTAxNDk=", "number": 43, "title": "XGBOD and LSCP missing from install", "user": {"login": "allendorf", "id": 31320778, "node_id": "MDQ6VXNlcjMxMzIwNzc4", "avatar_url": "https://avatars2.githubusercontent.com/u/31320778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allendorf", "html_url": "https://github.com/allendorf", "followers_url": "https://api.github.com/users/allendorf/followers", "following_url": "https://api.github.com/users/allendorf/following{/other_user}", "gists_url": "https://api.github.com/users/allendorf/gists{/gist_id}", "starred_url": "https://api.github.com/users/allendorf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allendorf/subscriptions", "organizations_url": "https://api.github.com/users/allendorf/orgs", "repos_url": "https://api.github.com/users/allendorf/repos", "events_url": "https://api.github.com/users/allendorf/events{/privacy}", "received_events_url": "https://api.github.com/users/allendorf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-18T18:57:07Z", "updated_at": "2018-12-19T21:38:34Z", "closed_at": "2018-12-19T21:38:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I installed PyOD using: \r\n\r\n```\r\npip install pyod\r\npip install --upgrade pyod\r\n```\r\n\r\nHowever, LSCP and XGBOD are not installed. All of the other models in the repo can be successfully imported into a jupyter notebook. Attempting to import LSCP and XGBOD both yield a \"ModuleNotFoundError: No module named\" error. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/42", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/42/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/42/events", "html_url": "https://github.com/yzhao062/pyod/issues/42", "id": 391092567, "node_id": "MDU6SXNzdWUzOTEwOTI1Njc=", "number": 42, "title": "Is it possible to make CBLOF ignore contamination parameter?", "user": {"login": "marchezinixd", "id": 14189066, "node_id": "MDQ6VXNlcjE0MTg5MDY2", "avatar_url": "https://avatars1.githubusercontent.com/u/14189066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marchezinixd", "html_url": "https://github.com/marchezinixd", "followers_url": "https://api.github.com/users/marchezinixd/followers", "following_url": "https://api.github.com/users/marchezinixd/following{/other_user}", "gists_url": "https://api.github.com/users/marchezinixd/gists{/gist_id}", "starred_url": "https://api.github.com/users/marchezinixd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marchezinixd/subscriptions", "organizations_url": "https://api.github.com/users/marchezinixd/orgs", "repos_url": "https://api.github.com/users/marchezinixd/repos", "events_url": "https://api.github.com/users/marchezinixd/events{/privacy}", "received_events_url": "https://api.github.com/users/marchezinixd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-12-14T12:29:58Z", "updated_at": "2018-12-19T15:52:36Z", "closed_at": "2018-12-19T15:52:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "CBLOF parameters are useless. Basically the only thing that matters when dealing with the method is the contamination parameter, if i set it to 0.3 it will find 30% of anomalies and it doesn't matter how normal they are or if they belong to a big cluster. For what i understood about the method it has the ability to define what is an anomaly and what is not only based on the parameters alpha and beta, why is this happening?\r\nIs there a way to ignore contamination? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/41", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/41/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/41/events", "html_url": "https://github.com/yzhao062/pyod/issues/41", "id": 389897985, "node_id": "MDU6SXNzdWUzODk4OTc5ODU=", "number": 41, "title": "CBLOF predict error", "user": {"login": "GiovannaR", "id": 19623850, "node_id": "MDQ6VXNlcjE5NjIzODUw", "avatar_url": "https://avatars0.githubusercontent.com/u/19623850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GiovannaR", "html_url": "https://github.com/GiovannaR", "followers_url": "https://api.github.com/users/GiovannaR/followers", "following_url": "https://api.github.com/users/GiovannaR/following{/other_user}", "gists_url": "https://api.github.com/users/GiovannaR/gists{/gist_id}", "starred_url": "https://api.github.com/users/GiovannaR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GiovannaR/subscriptions", "organizations_url": "https://api.github.com/users/GiovannaR/orgs", "repos_url": "https://api.github.com/users/GiovannaR/repos", "events_url": "https://api.github.com/users/GiovannaR/events{/privacy}", "received_events_url": "https://api.github.com/users/GiovannaR/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-12-11T18:35:00Z", "updated_at": "2018-12-25T21:38:06Z", "closed_at": "2018-12-25T21:38:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nWhen I try to use CBLOF to predict one or two or any short number of samples, sometimes it fails like in the example above:\r\n\r\n```\r\nclf_name = 'CBLOF'\r\nclf = CBLOF(alpha=0.7, beta=2, check_estimator=False, n_clusters=6)\r\nclf.fit(a[0:336])\r\nprint([a[338]])\r\nclf.predict([a[338]])\r\n```\r\nOutput:\r\n\r\n```\r\n[array([0.21751617])]\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-173-5342692feffe> in <module>()\r\n      3 clf.fit(a[0:336])\r\n      4 \r\n----> 5 clf.predict([a[338]])\r\n\r\n/usr/local/lib/python3.5/dist-packages/pyod/models/base.py in predict(self, X)\r\n    125         check_is_fitted(self, ['decision_scores_', 'threshold_', 'labels_'])\r\n    126 \r\n--> 127         pred_score = self.decision_function(X)\r\n    128         return (pred_score > self.threshold_).astype('int').ravel()\r\n    129 \r\n\r\n/usr/local/lib/python3.5/dist-packages/pyod/models/cblof.py in decision_function(self, X)\r\n    179         X = check_array(X)\r\n    180         labels = self.clustering_estimator_.predict(X)\r\n--> 181         return self._decision_function(X, labels)\r\n    182 \r\n    183     def _validate_estimator(self, default=None):\r\n\r\n/usr/local/lib/python3.5/dist-packages/pyod/models/cblof.py in _decision_function(self, X, labels)\r\n    281 \r\n    282         scores[large_indices] = pairwise_distances_no_broadcast(\r\n--> 283             X[large_indices, :], large_centers)\r\n    284 \r\n    285         if self.use_weights:\r\n\r\n/usr/local/lib/python3.5/dist-packages/pyod/utils/stat_models.py in pairwise_distances_no_broadcast(X, Y)\r\n     36     :rtype: array of shape (n_samples,)\r\n     37     \"\"\"\r\n---> 38     X = check_array(X)\r\n     39     Y = check_array(Y)\r\n     40     assert_allclose(X.shape, Y.shape)\r\n\r\n/usr/local/lib/python3.5/dist-packages/sklearn/utils/validation.py in check_array(array, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, ensure_min_samples, ensure_min_features, warn_on_dtype, estimator)\r\n    580                              \" minimum of %d is required%s.\"\r\n    581                              % (n_samples, shape_repr, ensure_min_samples,\r\n--> 582                                 context))\r\n    583 \r\n    584     if ensure_min_features > 0 and array.ndim == 2:\r\n\r\nValueError: Found array with 0 sample(s) (shape=(0, 1)) while a minimum of 1 is required.\r\n```\r\nBut when I try to predict ensuring that one of them is not an anomaly, then it works in all the cases:\r\n\r\n```\r\npred = clf.predict([clf.cluster_centers_[clf.large_cluster_labels_[0]],a[338]])\r\nprint (pred)\r\n```\r\n\r\nOutput:\r\n\r\n```\r\n[0 1]\r\n```\r\n\r\nThanks for your help\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/36", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/36/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/36/events", "html_url": "https://github.com/yzhao062/pyod/issues/36", "id": 387112908, "node_id": "MDU6SXNzdWUzODcxMTI5MDg=", "number": 36, "title": "LOCI fails on MacOS with Python 2.7 (caused by np.count_nonzero)", "user": {"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 709870773, "node_id": "MDU6TGFiZWw3MDk4NzA3NzM=", "url": "https://api.github.com/repos/yzhao062/pyod/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-12-04T04:17:45Z", "updated_at": "2018-12-13T01:37:00Z", "closed_at": "2018-12-13T01:37:00Z", "author_association": "OWNER", "active_lock_reason": null, "body": "It is noted running **LOCI** model on **MacOS** with **Python 2.7** may fail. One potential cause is the following code, as np.count_nonzero returns **int** instead of **array**. \r\nI am currently investigating how to fix it. Please stay tuned.\r\n\r\n```\r\n def _get_alpha_n(self, dist_matrix, indices, r):\r\n        \"\"\"Computes the alpha neighbourhood points.\r\n        \r\n        Parameters\r\n        ----------\r\n        dist_matrix : array-like, shape (n_samples, n_features)\r\n            The distance matrix w.r.t. to the training samples.\r\n        \r\n        indices : int\r\n            Subsetting index\r\n        \r\n        r : int\r\n            Neighbourhood radius\r\n            \r\n        Returns\r\n        -------\r\n        alpha_n : array, shape (n_alpha, )\r\n            Returns the alpha neighbourhood points.       \r\n        \"\"\"\r\n\r\n        if type(indices) is int:\r\n            alpha_n = np.count_nonzero(\r\n                dist_matrix[indices, :] < (r * self._alpha))\r\n            return alpha_n\r\n        else:\r\n            alpha_n = np.count_nonzero(\r\n                dist_matrix[indices, :] < (r * self._alpha), axis=1)\r\n            return alpha_n\r\n```\r\n\r\nThe error message looks like below:\r\n\r\n> (test27) bash-3.2$ python loci_example.py \r\n> /anaconda2/envs/test27/lib/python2.7/site-packages/pyod/models/loci.py:199: RuntimeWarning: divide by zero encountered in double_scalars\r\n>   outlier_scores[p_ix] = mdef/sigma_mdef\r\n> /Users/zhaoy9/.local/lib/python2.7/site-packages/numpy/core/_methods.py:101: RuntimeWarning: invalid value encountered in subtract\r\n>   x = asanyarray(arr - arrmean)\r\n> On Training Data:\r\n> Traceback (most recent call last):\r\n>   File \"loci_example.py\", line 133, in <module>\r\n>     evaluate_print(clf_name, y_train, y_train_scores)\r\n>   File \"/anaconda2/envs/test27/lib/python2.7/site-packages/pyod/utils/data.py\", line 159, in evaluate_print\r\n>     roc=np.round(roc_auc_score(y, y_pred), decimals=4),\r\n>   File \"/anaconda2/envs/test27/lib/python2.7/site-packages/sklearn/metrics/ranking.py\", line 356, in roc_auc_score\r\n>     sample_weight=sample_weight)\r\n>   File \"/anaconda2/envs/test27/lib/python2.7/site-packages/sklearn/metrics/base.py\", line 77, in _average_binary_score\r\n>     return binary_metric(y_true, y_score, sample_weight=sample_weight)\r\n>   File \"/anaconda2/envs/test27/lib/python2.7/site-packages/sklearn/metrics/ranking.py\", line 328, in _binary_roc_auc_score\r\n>     sample_weight=sample_weight)\r\n>   File \"/anaconda2/envs/test27/lib/python2.7/site-packages/sklearn/metrics/ranking.py\", line 618, in roc_curve\r\n>     y_true, y_score, pos_label=pos_label, sample_weight=sample_weight)\r\n>   File \"/anaconda2/envs/test27/lib/python2.7/site-packages/sklearn/metrics/ranking.py\", line 403, in _binary_clf_curve\r\n>     assert_all_finite(y_score)\r\n>   File \"/anaconda2/envs/test27/lib/python2.7/site-packages/sklearn/utils/validation.py\", line 68, in assert_all_finite\r\n>     _assert_all_finite(X.data if sp.issparse(X) else X, allow_nan)\r\n>   File \"/anaconda2/envs/test27/lib/python2.7/site-packages/sklearn/utils/validation.py\", line 56, in _assert_all_finite\r\n>     raise ValueError(msg_err.format(type_err, X.dtype))\r\n> ValueError: Input contains NaN, infinity or a value too large for dtype('float64').", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/24", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/24/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/24/events", "html_url": "https://github.com/yzhao062/pyod/issues/24", "id": 369935225, "node_id": "MDU6SXNzdWUzNjk5MzUyMjU=", "number": 24, "title": "broken function (_predict_rank) due to the changes to the dependent libs", "user": {"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 709870773, "node_id": "MDU6TGFiZWw3MDk4NzA3NzM=", "url": "https://api.github.com/repos/yzhao062/pyod/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-10-14T19:29:21Z", "updated_at": "2018-10-19T21:02:30Z", "closed_at": "2018-10-19T21:02:30Z", "author_association": "OWNER", "active_lock_reason": null, "body": "This private function is broken due to the changes to the underlying dependency update (sklearn updated to 0.20). It would affect any major functionalities and I will fix this error in the next few days.\r\n\r\n**Do not use _predict_rank if your sklearn version is not 0.19**.\r\n\r\n[failure_log.txt](https://github.com/yzhao062/Pyod/files/2476784/failure_log.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/23", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/23/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/23/events", "html_url": "https://github.com/yzhao062/pyod/issues/23", "id": 369881189, "node_id": "MDU6SXNzdWUzNjk4ODExODk=", "number": 23, "title": "KNN Mahalanobis distance error", "user": {"login": "hanshupe", "id": 10911473, "node_id": "MDQ6VXNlcjEwOTExNDcz", "avatar_url": "https://avatars3.githubusercontent.com/u/10911473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanshupe", "html_url": "https://github.com/hanshupe", "followers_url": "https://api.github.com/users/hanshupe/followers", "following_url": "https://api.github.com/users/hanshupe/following{/other_user}", "gists_url": "https://api.github.com/users/hanshupe/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanshupe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanshupe/subscriptions", "organizations_url": "https://api.github.com/users/hanshupe/orgs", "repos_url": "https://api.github.com/users/hanshupe/repos", "events_url": "https://api.github.com/users/hanshupe/events{/privacy}", "received_events_url": "https://api.github.com/users/hanshupe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 709870773, "node_id": "MDU6TGFiZWw3MDk4NzA3NzM=", "url": "https://api.github.com/repos/yzhao062/pyod/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/yzhao062/pyod/milestones/1", "html_url": "https://github.com/yzhao062/pyod/milestone/1", "labels_url": "https://api.github.com/repos/yzhao062/pyod/milestones/1/labels", "id": 4242419, "node_id": "MDk6TWlsZXN0b25lNDI0MjQxOQ==", "number": 1, "title": "Fixed, to release.", "description": null, "creator": {"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "open", "created_at": "2019-04-18T19:11:45Z", "updated_at": "2019-04-30T20:46:51Z", "due_on": null, "closed_at": null}, "comments": 12, "created_at": "2018-10-14T08:43:51Z", "updated_at": "2019-06-23T02:53:07Z", "closed_at": "2019-04-30T20:46:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWhen I use the Mahalanobis metric for KNN I always get the error \"Must provide either V or VI for Mahalanobis distance\" even when I provide V with metric_params. The same request works with sklearn.neighbors.\r\n\r\n```\r\n\r\nfrom pyod.models.knn import KNN  \r\nfrom pyod.utils.data import generate_data\r\nfrom sklearn.neighbors import NearestNeighbors\r\nimport numpy as np\r\n\r\ncontamination = 0.1  \r\nn_train = 200  \r\nn_test = 100 \r\n\r\nX_train, y_train, X_test, y_test = generate_data(n_train=n_train, n_test=n_test, contamination=contamination)\r\n\r\n#Doesn't work (Must provide either V or VI for Mahalanobis distance)\r\nclf = KNN(algorithm='brute', metric='mahalanobis', metric_params={'V': np.cov(X_train)})\r\nclf.fit(X_train)\r\n\r\n#Works\r\nnn = NearestNeighbors(algorithm='brute', metric='mahalanobis', metric_params={'V': np.cov(X_train)})\r\nnn.fit(X_train)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/22", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/22/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/22/events", "html_url": "https://github.com/yzhao062/pyod/issues/22", "id": 360680682, "node_id": "MDU6SXNzdWUzNjA2ODA2ODI=", "number": 22, "title": "Is there a way to optimize model parameters?", "user": {"login": "fcoppey", "id": 42648441, "node_id": "MDQ6VXNlcjQyNjQ4NDQx", "avatar_url": "https://avatars1.githubusercontent.com/u/42648441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fcoppey", "html_url": "https://github.com/fcoppey", "followers_url": "https://api.github.com/users/fcoppey/followers", "following_url": "https://api.github.com/users/fcoppey/following{/other_user}", "gists_url": "https://api.github.com/users/fcoppey/gists{/gist_id}", "starred_url": "https://api.github.com/users/fcoppey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fcoppey/subscriptions", "organizations_url": "https://api.github.com/users/fcoppey/orgs", "repos_url": "https://api.github.com/users/fcoppey/repos", "events_url": "https://api.github.com/users/fcoppey/events{/privacy}", "received_events_url": "https://api.github.com/users/fcoppey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-16T21:31:55Z", "updated_at": "2018-12-01T16:41:59Z", "closed_at": "2018-12-01T16:41:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "For instance in OCSVM there is this gamma parameter, is there an option to give it a range and test all combinations at once in order to find the best parameters?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/20", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/20/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/20/events", "html_url": "https://github.com/yzhao062/pyod/issues/20", "id": 356850432, "node_id": "MDU6SXNzdWUzNTY4NTA0MzI=", "number": 20, "title": "Installing Pyod broke my TensorFlow installation", "user": {"login": "serfaniane", "id": 23528348, "node_id": "MDQ6VXNlcjIzNTI4MzQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/23528348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/serfaniane", "html_url": "https://github.com/serfaniane", "followers_url": "https://api.github.com/users/serfaniane/followers", "following_url": "https://api.github.com/users/serfaniane/following{/other_user}", "gists_url": "https://api.github.com/users/serfaniane/gists{/gist_id}", "starred_url": "https://api.github.com/users/serfaniane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/serfaniane/subscriptions", "organizations_url": "https://api.github.com/users/serfaniane/orgs", "repos_url": "https://api.github.com/users/serfaniane/repos", "events_url": "https://api.github.com/users/serfaniane/events{/privacy}", "received_events_url": "https://api.github.com/users/serfaniane/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 709870773, "node_id": "MDU6TGFiZWw3MDk4NzA3NzM=", "url": "https://api.github.com/repos/yzhao062/pyod/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-09-04T14:58:51Z", "updated_at": "2018-12-04T04:19:00Z", "closed_at": "2018-12-04T04:18:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Ubuntu 16.04\r\n\r\n`Traceback (most recent call last):\r\n  File \"features_2_3_rot_unet_1.py\", line 3, in <module>\r\n    import tensorflow as tf\r\n  File \"/home/user/.virtualenvs/tensorflow1.5/lib/python3.5/site-packages/tensorflow/__init__.py\", line 22, in <module>\r\n    from tensorflow.python import pywrap_tensorflow  # pylint: disable=unused-import\r\n  File \"/home/user/.virtualenvs/tensorflow1.5/lib/python3.5/site-packages/tensorflow/python/__init__.py\", line 81, in <module>\r\n    from tensorflow.python import keras\r\n  File \"/home/user/.virtualenvs/tensorflow1.5/lib/python3.5/site-packages/tensorflow/python/keras/__init__.py\", line 24, in <module>\r\n    from tensorflow.python.keras import activations\r\n  File \"/home/user/.virtualenvs/tensorflow1.5/lib/python3.5/site-packages/tensorflow/python/keras/activations/__init__.py\", line 22, in <module>\r\n    from tensorflow.python.keras._impl.keras.activations import elu\r\n  File \"/home/user/.virtualenvs/tensorflow1.5/lib/python3.5/site-packages/tensorflow/python/keras/_impl/keras/__init__.py\", line 21, in <module>\r\n    from tensorflow.python.keras._impl.keras import activations\r\n  File \"/home/user/.virtualenvs/tensorflow1.5/lib/python3.5/site-packages/tensorflow/python/keras/_impl/keras/activations.py\", line 23, in <module>\r\n    from tensorflow.python.keras._impl.keras import backend as K\r\n  File \"/home/user/.virtualenvs/tensorflow1.5/lib/python3.5/site-packages/tensorflow/python/keras/_impl/keras/backend.py\", line 36, in <module>\r\n    from tensorflow.python.layers import base as tf_base_layers\r\n  File \"/home/user/.virtualenvs/tensorflow1.5/lib/python3.5/site-packages/tensorflow/python/layers/base.py\", line 25, in <module>\r\n    from tensorflow.python.keras.engine import base_layer\r\n  File \"/home/user/.virtualenvs/tensorflow1.5/lib/python3.5/site-packages/tensorflow/python/keras/engine/__init__.py\", line 23, in <module>\r\n    from tensorflow.python.keras.engine.base_layer import InputSpec\r\n  File \"/home/user/.virtualenvs/tensorflow1.5/lib/python3.5/site-packages/tensorflow/python/keras/engine/base_layer.py\", line 33, in <module>\r\n    from tensorflow.python.keras import backend\r\n  File \"/home/user/.virtualenvs/tensorflow1.5/lib/python3.5/site-packages/tensorflow/python/keras/backend/__init__.py\", line 22, in <module>\r\n    from tensorflow.python.keras._impl.keras.backend import abs\r\nImportError: cannot import name 'abs'`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/19", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/19/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/19/events", "html_url": "https://github.com/yzhao062/pyod/issues/19", "id": 356627037, "node_id": "MDU6SXNzdWUzNTY2MjcwMzc=", "number": 19, "title": "Instructions on setting up Keras and Tensorflow for AutoEncoder in PyOD", "user": {"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 709870780, "node_id": "MDU6TGFiZWw3MDk4NzA3ODA=", "url": "https://api.github.com/repos/yzhao062/pyod/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-09-04T01:53:23Z", "updated_at": "2018-12-24T01:49:16Z", "closed_at": "2018-12-24T01:49:16Z", "author_association": "OWNER", "active_lock_reason": null, "body": "It is nice that PyOD includes some neural network based models, such as AutoEncoder. However, you may find that after **pip install pyod**, AutoEncoder models do not run. This is expected since I do not want PyOD relies on too many packages, and not everyone needs to run AutoEncoder.\r\n\r\n**If you have tensorflow-gpu installed, keras would automatically run with GPU. **\r\n**If you want to run AutoEncoder, please first install keras+a backend library, e.g., tensorflow**. Either of the following two should do the installation for you:\r\n\r\n- pip install keras tensorflow or pip install keras **tensorflow-gpu** \r\n- conda install keras tensorflow  or pip install keras **tensorflow-gpu**\r\n\r\n**You need tensorflow-gpu if your device have GPU and want to leverage it.** \r\n\r\nAfter keras and tensorflow being installed, you are ready to run [auto_encoder_example.py](https://github.com/yzhao062/Pyod/blob/master/examples/auto_encoder_example.py).\r\n\r\nHere are some potential error messages you may encounter:\r\n\r\n**1. ModuleNotFoundError: No module named 'theano'**\r\n\r\nIn this case, you should specify keras backend to the one you want to use, e.g., TensorFlow\r\nGo to $HOME/.keras/keras.json, and change the \"backend\" to \"tensorflow\"\r\n\r\n**2. ModuleNotFoundError: No module named 'error'**\r\n\r\nIn this case, you need to install keras and tensorflow with conda, which can either be done in the GUI or simply use \"conda install keras\" and \"conda install tensorflow\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/18", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/18/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/18/events", "html_url": "https://github.com/yzhao062/pyod/issues/18", "id": 356602424, "node_id": "MDU6SXNzdWUzNTY2MDI0MjQ=", "number": 18, "title": "Slow installation due to the underlying dependencies", "user": {"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 709870780, "node_id": "MDU6TGFiZWw3MDk4NzA3ODA=", "url": "https://api.github.com/repos/yzhao062/pyod/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 709870783, "node_id": "MDU6TGFiZWw3MDk4NzA3ODM=", "url": "https://api.github.com/repos/yzhao062/pyod/labels/help%20wanted", "name": "help wanted", "color": "33aa3f", "default": true, "description": null}, {"id": 709870791, "node_id": "MDU6TGFiZWw3MDk4NzA3OTE=", "url": "https://api.github.com/repos/yzhao062/pyod/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-09-03T21:35:00Z", "updated_at": "2019-10-21T19:39:33Z", "closed_at": "2019-10-21T19:39:33Z", "author_association": "OWNER", "active_lock_reason": null, "body": "It is noted that PyOD depends on a few libraries, including:\r\n- keras\r\n- matplotlib (optional, required for running examples)   \r\n- nose\r\n- numpy>=1.13\r\n- numba>=0.35\r\n- scipy>=0.19.1\r\n- scikit_learn>=0.19.1\r\n- tensorflow (optional, required if calling AutoEncoder, other backend also works)   \r\n\r\nIt is getting more serious when we started introducing deep learning models into PyOD which is implemented in Keras (and of course with some backend libraries, e.g., TensorFlow).\r\n\r\nIn addition, for improving the efficiency, we started using JIT in PyOD, specifically Numba, for accelerating the execution, which uses LLVM compiler to overcome the overhead of Python.\r\n\r\nIn long run, I am also interested in bringing GPU support for PyOD, which could be done through CUDA programming. However, it will clearly make the installation and maintenance a mess due to the complexity. \r\n\r\nTherefore, I would like to gather some ideas regarding **comprehensiveness** vs **efficiency** vs **complexity** for the development of PyOD. What is your opinion? Will the current installation too cumbersome for you?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/16", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/16/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/16/events", "html_url": "https://github.com/yzhao062/pyod/issues/16", "id": 352860825, "node_id": "MDU6SXNzdWUzNTI4NjA4MjU=", "number": 16, "title": "Correct handling of LOF proba predictions", "user": {"login": "alexHeu", "id": 8157458, "node_id": "MDQ6VXNlcjgxNTc0NTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/8157458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexHeu", "html_url": "https://github.com/alexHeu", "followers_url": "https://api.github.com/users/alexHeu/followers", "following_url": "https://api.github.com/users/alexHeu/following{/other_user}", "gists_url": "https://api.github.com/users/alexHeu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexHeu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexHeu/subscriptions", "organizations_url": "https://api.github.com/users/alexHeu/orgs", "repos_url": "https://api.github.com/users/alexHeu/repos", "events_url": "https://api.github.com/users/alexHeu/events{/privacy}", "received_events_url": "https://api.github.com/users/alexHeu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 709870791, "node_id": "MDU6TGFiZWw3MDk4NzA3OTE=", "url": "https://api.github.com/repos/yzhao062/pyod/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-22T08:54:58Z", "updated_at": "2018-12-10T19:32:25Z", "closed_at": "2018-12-10T19:32:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nthanks for the great library.\r\nWhen evaluating whether it is usable for my work i stumbled across an potential issue.\r\nMy workflow looks as follows:\r\n1. Train the LOF detector on a training dataset.\r\n2. Provide raw scores and outlier probabilites for this set\r\n3. Deploy the model to generate outlier probabilities on new data\r\n\r\nIm not quite sure how to correctly perform step 2. By executing lof.predict_proba(train) it executes lof.decision_function(train) which delegates to the sklearn implementation. In sklearn it explicitely states that this function is only supposed to handle new data (https://github.com/scikit-learn/scikit-learn/blob/f0ab589f/sklearn/neighbors/lof.py#L233) which is violated here. \r\n\r\nThanks for your help\r\nAlex", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/15", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/15/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/15/events", "html_url": "https://github.com/yzhao062/pyod/issues/15", "id": 349486224, "node_id": "MDU6SXNzdWUzNDk0ODYyMjQ=", "number": 15, "title": "The questions about the implementation of the hbos", "user": {"login": "HiJuly", "id": 20376685, "node_id": "MDQ6VXNlcjIwMzc2Njg1", "avatar_url": "https://avatars1.githubusercontent.com/u/20376685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HiJuly", "html_url": "https://github.com/HiJuly", "followers_url": "https://api.github.com/users/HiJuly/followers", "following_url": "https://api.github.com/users/HiJuly/following{/other_user}", "gists_url": "https://api.github.com/users/HiJuly/gists{/gist_id}", "starred_url": "https://api.github.com/users/HiJuly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HiJuly/subscriptions", "organizations_url": "https://api.github.com/users/HiJuly/orgs", "repos_url": "https://api.github.com/users/HiJuly/repos", "events_url": "https://api.github.com/users/HiJuly/events{/privacy}", "received_events_url": "https://api.github.com/users/HiJuly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-10T11:50:56Z", "updated_at": "2018-09-04T01:42:49Z", "closed_at": "2018-09-04T01:42:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/14", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/14/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/14/events", "html_url": "https://github.com/yzhao062/pyod/issues/14", "id": 348141841, "node_id": "MDU6SXNzdWUzNDgxNDE4NDE=", "number": 14, "title": "func:`pyod.utils.data.visualize` is not existed", "user": {"login": "Gabrielvon", "id": 8952869, "node_id": "MDQ6VXNlcjg5NTI4Njk=", "avatar_url": "https://avatars1.githubusercontent.com/u/8952869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gabrielvon", "html_url": "https://github.com/Gabrielvon", "followers_url": "https://api.github.com/users/Gabrielvon/followers", "following_url": "https://api.github.com/users/Gabrielvon/following{/other_user}", "gists_url": "https://api.github.com/users/Gabrielvon/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gabrielvon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gabrielvon/subscriptions", "organizations_url": "https://api.github.com/users/Gabrielvon/orgs", "repos_url": "https://api.github.com/users/Gabrielvon/repos", "events_url": "https://api.github.com/users/Gabrielvon/events{/privacy}", "received_events_url": "https://api.github.com/users/Gabrielvon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-07T02:19:09Z", "updated_at": "2018-08-07T06:26:03Z", "closed_at": "2018-08-07T06:26:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is this function `pyod.utils.data.visualize`  deprecated? I cannot import this function.\r\n\r\n```\r\nimport sys\r\nimport pyod\r\nIn[]: sys.version\r\nOut[]: '3.6.5 |Anaconda, Inc.| (default, Mar 29 2018, 13:32:41) [MSC v.1900 64 bit (AMD64)]'\r\nIn[]: pyod.utils.data.visualize(clf_name, X_train, X_test, y_train_pred, y_test_pred, show_figure=True, save_figure=False)\r\n\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-9-1628666df63a>\", line 2, in <module>\r\n    pyod.utils.data.visualize(clf_name,\r\n\r\nAttributeError: module 'pyod.utils.data' has no attribute 'visualize'\r\n```\r\n```\r\n (py36) E:\\MyNutshell>pip show pyod                                   \r\nName: pyod                                                           \r\nVersion: 0.5.6                                                       \r\nSummary: A Python Outlier Detection (Anomaly Detection) Toolbox      \r\nHome-page: https://github.com/yzhao062/Pyod                          \r\nAuthor: Yue Zhao                                                     \r\nAuthor-email: yuezhao@cs.toronto.edu                                 \r\nLicense: UNKNOWN             \r\n```                                          ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/11", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/11/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/11/events", "html_url": "https://github.com/yzhao062/pyod/issues/11", "id": 339318270, "node_id": "MDU6SXNzdWUzMzkzMTgyNzA=", "number": 11, "title": "how to understand ExtremeLowDensityModel?", "user": {"login": "phypor", "id": 12208097, "node_id": "MDQ6VXNlcjEyMjA4MDk3", "avatar_url": "https://avatars2.githubusercontent.com/u/12208097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phypor", "html_url": "https://github.com/phypor", "followers_url": "https://api.github.com/users/phypor/followers", "following_url": "https://api.github.com/users/phypor/following{/other_user}", "gists_url": "https://api.github.com/users/phypor/gists{/gist_id}", "starred_url": "https://api.github.com/users/phypor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phypor/subscriptions", "organizations_url": "https://api.github.com/users/phypor/orgs", "repos_url": "https://api.github.com/users/phypor/repos", "events_url": "https://api.github.com/users/phypor/events{/privacy}", "received_events_url": "https://api.github.com/users/phypor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-09T06:19:10Z", "updated_at": "2018-07-09T06:24:27Z", "closed_at": "2018-07-09T06:24:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/10", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/10/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/10/events", "html_url": "https://github.com/yzhao062/pyod/issues/10", "id": 336134084, "node_id": "MDU6SXNzdWUzMzYxMzQwODQ=", "number": 10, "title": "Angle-based Outlier Detector (ABOD) returns None", "user": {"login": "tankz0r", "id": 13698885, "node_id": "MDQ6VXNlcjEzNjk4ODg1", "avatar_url": "https://avatars1.githubusercontent.com/u/13698885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tankz0r", "html_url": "https://github.com/tankz0r", "followers_url": "https://api.github.com/users/tankz0r/followers", "following_url": "https://api.github.com/users/tankz0r/following{/other_user}", "gists_url": "https://api.github.com/users/tankz0r/gists{/gist_id}", "starred_url": "https://api.github.com/users/tankz0r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tankz0r/subscriptions", "organizations_url": "https://api.github.com/users/tankz0r/orgs", "repos_url": "https://api.github.com/users/tankz0r/repos", "events_url": "https://api.github.com/users/tankz0r/events{/privacy}", "received_events_url": "https://api.github.com/users/tankz0r/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-27T08:48:50Z", "updated_at": "2018-09-04T01:42:30Z", "closed_at": "2018-09-04T01:42:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can you explain in which situations ABOD returns None and how should I interpret these? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/6", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/6/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/6/events", "html_url": "https://github.com/yzhao062/pyod/issues/6", "id": 331772895, "node_id": "MDU6SXNzdWUzMzE3NzI4OTU=", "number": 6, "title": "pyod fails to install using pip", "user": {"login": "mdlockyer", "id": 30844227, "node_id": "MDQ6VXNlcjMwODQ0MjI3", "avatar_url": "https://avatars0.githubusercontent.com/u/30844227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdlockyer", "html_url": "https://github.com/mdlockyer", "followers_url": "https://api.github.com/users/mdlockyer/followers", "following_url": "https://api.github.com/users/mdlockyer/following{/other_user}", "gists_url": "https://api.github.com/users/mdlockyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdlockyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdlockyer/subscriptions", "organizations_url": "https://api.github.com/users/mdlockyer/orgs", "repos_url": "https://api.github.com/users/mdlockyer/repos", "events_url": "https://api.github.com/users/mdlockyer/events{/privacy}", "received_events_url": "https://api.github.com/users/mdlockyer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 709870773, "node_id": "MDU6TGFiZWw3MDk4NzA3NzM=", "url": "https://api.github.com/repos/yzhao062/pyod/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2018-06-12T22:12:52Z", "updated_at": "2019-07-26T04:33:25Z", "closed_at": "2018-07-25T21:26:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "When attempting to install without nose, I receive the following error:\r\n\r\n```\r\n(PyVi) Michael:PyVi michael$ pip install pyod\r\nCollecting pyod==0.5.0 (from -r requirements.txt (line 18))\r\n  Using cached https://files.pythonhosted.org/packages/c9/8c/6774fa2e7ae6fe9c2c648114d15ba584f950002377480e14183a0999af30/pyod-0.5.0.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/private/var/folders/j4/_68f6f3j4d51_2smq2mh5hyh0000gn/T/pip-install-gjdzzane/pyod/setup.py\", line 2, in <module>\r\n        from pyod import __version__\r\n      File \"/private/var/folders/j4/_68f6f3j4d51_2smq2mh5hyh0000gn/T/pip-install-gjdzzane/pyod/pyod/__init__.py\", line 4, in <module>\r\n        from . import models\r\n      File \"/private/var/folders/j4/_68f6f3j4d51_2smq2mh5hyh0000gn/T/pip-install-gjdzzane/pyod/pyod/models/__init__.py\", line 2, in <module>\r\n        from .abod import ABOD\r\n      File \"/private/var/folders/j4/_68f6f3j4d51_2smq2mh5hyh0000gn/T/pip-install-gjdzzane/pyod/pyod/models/abod.py\", line 17, in <module>\r\n        from .base import BaseDetector\r\n      File \"/private/var/folders/j4/_68f6f3j4d51_2smq2mh5hyh0000gn/T/pip-install-gjdzzane/pyod/pyod/models/base.py\", line 27, in <module>\r\n        from ..utils.utility import precision_n_scores\r\n      File \"/private/var/folders/j4/_68f6f3j4d51_2smq2mh5hyh0000gn/T/pip-install-gjdzzane/pyod/pyod/utils/__init__.py\", line 2, in <module>\r\n        from .utility import check_parameter\r\n      File \"/private/var/folders/j4/_68f6f3j4d51_2smq2mh5hyh0000gn/T/pip-install-gjdzzane/pyod/pyod/utils/utility.py\", line 18, in <module>\r\n        from sklearn.utils.testing import assert_equal\r\n      File \"/Users/michael/anaconda3/envs/PyVi/lib/python3.6/site-packages/sklearn/utils/testing.py\", line 49, in <module>\r\n        from nose.tools import raises\r\n    ModuleNotFoundError: No module named 'nose'\r\n    \r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /private/var/folders/j4/_68f6f3j4d51_2smq2mh5hyh0000gn/T/pip-install-gjdzzane/pyod/\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/4", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/4/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/4/events", "html_url": "https://github.com/yzhao062/pyod/issues/4", "id": 330778307, "node_id": "MDU6SXNzdWUzMzA3NzgzMDc=", "number": 4, "title": "What is difference between Scikit One Class SVM vs PYOD One Class SVM?", "user": {"login": "vchouksey", "id": 6507341, "node_id": "MDQ6VXNlcjY1MDczNDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/6507341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vchouksey", "html_url": "https://github.com/vchouksey", "followers_url": "https://api.github.com/users/vchouksey/followers", "following_url": "https://api.github.com/users/vchouksey/following{/other_user}", "gists_url": "https://api.github.com/users/vchouksey/gists{/gist_id}", "starred_url": "https://api.github.com/users/vchouksey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vchouksey/subscriptions", "organizations_url": "https://api.github.com/users/vchouksey/orgs", "repos_url": "https://api.github.com/users/vchouksey/repos", "events_url": "https://api.github.com/users/vchouksey/events{/privacy}", "received_events_url": "https://api.github.com/users/vchouksey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 709870791, "node_id": "MDU6TGFiZWw3MDk4NzA3OTE=", "url": "https://api.github.com/repos/yzhao062/pyod/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-08T19:34:17Z", "updated_at": "2018-06-14T13:50:48Z", "closed_at": "2018-06-14T13:50:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running Scikit OCSVM gives me Results:\r\n\r\nBest parameters: (Nu 0.1500000000 gamma 0.0) Precision score: 0.143 Recall score: 0.800\r\n\r\nRunning PYOD OCSVM gives me Results:\r\n\r\nBest parameters: (Nu 0.0300000000 gamma 0.0) Precision score: 0.868 Recall score: 0.103\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/3", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/3/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/3/events", "html_url": "https://github.com/yzhao062/pyod/issues/3", "id": 330338867, "node_id": "MDU6SXNzdWUzMzAzMzg4Njc=", "number": 3, "title": "I am trying to do RandomizedSearchCV on ABOD, but surprisingly it does not run?", "user": {"login": "vchouksey", "id": 6507341, "node_id": "MDQ6VXNlcjY1MDczNDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/6507341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vchouksey", "html_url": "https://github.com/vchouksey", "followers_url": "https://api.github.com/users/vchouksey/followers", "following_url": "https://api.github.com/users/vchouksey/following{/other_user}", "gists_url": "https://api.github.com/users/vchouksey/gists{/gist_id}", "starred_url": "https://api.github.com/users/vchouksey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vchouksey/subscriptions", "organizations_url": "https://api.github.com/users/vchouksey/orgs", "repos_url": "https://api.github.com/users/vchouksey/repos", "events_url": "https://api.github.com/users/vchouksey/events{/privacy}", "received_events_url": "https://api.github.com/users/vchouksey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 709870791, "node_id": "MDU6TGFiZWw3MDk4NzA3OTE=", "url": "https://api.github.com/repos/yzhao062/pyod/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-07T16:04:05Z", "updated_at": "2018-06-08T19:24:45Z", "closed_at": "2018-06-08T19:24:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is my code:\r\n\r\n\r\n\r\nfrom pyod.models.abod import ABOD\r\nparam_grid = {'neighbours': list(range(1, 5,1)),\r\n              'contamination': np.linspace(0.01, 0.05, 5)}\r\n\r\nskf = StratifiedKFold(n_splits=10)\r\nfolds = list(skf.split(X.toarray(), y_true))\r\nclf = ABOD()\r\nscoring = make_scorer(precision_score)\r\nsearch = RandomizedSearchCV(estimator=clf, param_distributions=param_grid, scoring=scoring, cv=folds)\r\nsearch.fit(X.toarray(), y_true)\r\ny_pred= search.predict(X.toarray())\r\nprint('Best parameters:%0.10f' % search.best_params_[\"contamination\"], 'Precision score: %0.3f' % precision_score(y_true, y_pred), \r\n     'Recall score: %0.3f' % recall_score(y_true, y_pred))\r\n\r\nBest parameters:0.0100000000 Precision score: 0.000 Recall score: 0.000", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/2", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/2/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/2/events", "html_url": "https://github.com/yzhao062/pyod/issues/2", "id": 329188092, "node_id": "MDU6SXNzdWUzMjkxODgwOTI=", "number": 2, "title": "AUC Score & Precision score are different why not same?", "user": {"login": "vchouksey", "id": 6507341, "node_id": "MDQ6VXNlcjY1MDczNDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/6507341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vchouksey", "html_url": "https://github.com/vchouksey", "followers_url": "https://api.github.com/users/vchouksey/followers", "following_url": "https://api.github.com/users/vchouksey/following{/other_user}", "gists_url": "https://api.github.com/users/vchouksey/gists{/gist_id}", "starred_url": "https://api.github.com/users/vchouksey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vchouksey/subscriptions", "organizations_url": "https://api.github.com/users/vchouksey/orgs", "repos_url": "https://api.github.com/users/vchouksey/repos", "events_url": "https://api.github.com/users/vchouksey/events{/privacy}", "received_events_url": "https://api.github.com/users/vchouksey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 709870791, "node_id": "MDU6TGFiZWw3MDk4NzA3OTE=", "url": "https://api.github.com/repos/yzhao062/pyod/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-06-04T19:35:54Z", "updated_at": "2018-06-07T16:02:09Z", "closed_at": "2018-06-07T16:02:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "from pyod.utils.data import evaluate_print\r\n# evaluate and print the results\r\nprint(\"\\nOn Training Data:\")\r\nevaluate_print(clf_name, y_true, y_scores)\r\n\r\nOn Training Data:\r\nKNN ROC:0.9352, precision @ rank n:0.568\r\n\r\nfrom sklearn import metrics\r\nprint(\"Accuracy Score\",round(metrics.accuracy_score(y_true, y_pred),2))\r\nprint(\"Precision Score\",round(metrics.precision_score(y_true, y_pred),2))\r\nprint(\"Recall Score\",round(metrics.recall_score(y_true, y_pred),2))\r\nprint(\"F1 Score\",round(metrics.f1_score(y_true, y_pred),2))\r\nprint(\"Roc Auc score\",round(metrics.roc_auc_score(y_true, y_pred),2))\r\n\r\nAccuracy Score 0.92\r\nPrecision Score 0.55\r\nRecall Score 0.59\r\nF1 Score 0.57\r\nRoc Auc score 0.77", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yzhao062/pyod/issues/1", "repository_url": "https://api.github.com/repos/yzhao062/pyod", "labels_url": "https://api.github.com/repos/yzhao062/pyod/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/yzhao062/pyod/issues/1/comments", "events_url": "https://api.github.com/repos/yzhao062/pyod/issues/1/events", "html_url": "https://github.com/yzhao062/pyod/issues/1", "id": 325022502, "node_id": "MDU6SXNzdWUzMjUwMjI1MDI=", "number": 1, "title": "load_cardio() and load_letter() do not work under Ubuntu 14.04", "user": {"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 709870786, "node_id": "MDU6TGFiZWw3MDk4NzA3ODY=", "url": "https://api.github.com/repos/yzhao062/pyod/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yzhao062", "id": 15079146, "node_id": "MDQ6VXNlcjE1MDc5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/15079146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhao062", "html_url": "https://github.com/yzhao062", "followers_url": "https://api.github.com/users/yzhao062/followers", "following_url": "https://api.github.com/users/yzhao062/following{/other_user}", "gists_url": "https://api.github.com/users/yzhao062/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhao062/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhao062/subscriptions", "organizations_url": "https://api.github.com/users/yzhao062/orgs", "repos_url": "https://api.github.com/users/yzhao062/repos", "events_url": "https://api.github.com/users/yzhao062/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhao062/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-05-21T18:56:21Z", "updated_at": "2018-06-05T19:52:12Z", "closed_at": "2018-06-01T15:00:03Z", "author_association": "OWNER", "active_lock_reason": null, "body": "While running comb_example.py, the program may fail due to loadmat() function. \r\nA quick workaround is to use synthesized data instead of real-world datasets.\r\n\r\nThis only affects comb_example.py. Will be addressed in the next release. ", "performed_via_github_app": null, "score": 1.0}]}