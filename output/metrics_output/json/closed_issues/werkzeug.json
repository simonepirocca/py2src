{"total_count": 757, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/pallets/werkzeug/issues/1917", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1917/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1917/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1917/events", "html_url": "https://github.com/pallets/werkzeug/issues/1917", "id": 680462256, "node_id": "MDU6SXNzdWU2ODA0NjIyNTY=", "number": 1917, "title": "scrypt support in `generate_password_hash`/`check_password_hash`", "user": {"login": "homeworkprod", "id": 95277, "node_id": "MDQ6VXNlcjk1Mjc3", "avatar_url": "https://avatars0.githubusercontent.com/u/95277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/homeworkprod", "html_url": "https://github.com/homeworkprod", "followers_url": "https://api.github.com/users/homeworkprod/followers", "following_url": "https://api.github.com/users/homeworkprod/following{/other_user}", "gists_url": "https://api.github.com/users/homeworkprod/gists{/gist_id}", "starred_url": "https://api.github.com/users/homeworkprod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/homeworkprod/subscriptions", "organizations_url": "https://api.github.com/users/homeworkprod/orgs", "repos_url": "https://api.github.com/users/homeworkprod/repos", "events_url": "https://api.github.com/users/homeworkprod/events{/privacy}", "received_events_url": "https://api.github.com/users/homeworkprod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-08-17T19:06:45Z", "updated_at": "2020-08-18T20:53:27Z", "closed_at": "2020-08-17T19:19:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Starting with Python 3.6, [scrypt](https://en.wikipedia.org/wiki/Scrypt) ([RFC 7914](https://tools.ietf.org/html/rfc7914.html)) is available in the standard library as [`hashlib.scrypt`](https://docs.python.org/3/library/hashlib.html#hashlib.scrypt). As it is a more recent, arguably \"safer\" alternative to PBKDF2, it would be splendid to be able to use it for password hashes as well.\r\n\r\nDue to it's nature, it is not available via `hashlib.new('scrypt', \u2026)` and, thus, would require extra support in Werkzeug, [similar to PBKDF2](https://github.com/pallets/werkzeug/blob/ef545f0d0bf28cbad02066b4cb7471bea50a93ee/src/werkzeug/security.py#L133).\r\n\r\nSince Werkzeug requires at least v3.6 of Python anyway, older versions need not be handled.\r\n\r\nI couldn't dig up any previous discussions about it. Has this been considered and evaluated before?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1914", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1914/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1914/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1914/events", "html_url": "https://github.com/pallets/werkzeug/issues/1914", "id": 678375236, "node_id": "MDU6SXNzdWU2NzgzNzUyMzY=", "number": 1914, "title": "Reloader removes venv's site-packages", "user": {"login": "flying-sheep", "id": 291575, "node_id": "MDQ6VXNlcjI5MTU3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/291575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flying-sheep", "html_url": "https://github.com/flying-sheep", "followers_url": "https://api.github.com/users/flying-sheep/followers", "following_url": "https://api.github.com/users/flying-sheep/following{/other_user}", "gists_url": "https://api.github.com/users/flying-sheep/gists{/gist_id}", "starred_url": "https://api.github.com/users/flying-sheep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flying-sheep/subscriptions", "organizations_url": "https://api.github.com/users/flying-sheep/orgs", "repos_url": "https://api.github.com/users/flying-sheep/repos", "events_url": "https://api.github.com/users/flying-sheep/events{/privacy}", "received_events_url": "https://api.github.com/users/flying-sheep/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-08-13T11:48:27Z", "updated_at": "2020-08-13T13:22:43Z", "closed_at": "2020-08-13T11:54:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have dash installed in a venv. Dash uses Flask behind the scenes.\r\n\r\nRunning the following minimal Dash app in debug mode via `python -m scratch` crashes:\r\n\r\n```py\r\nimport dash\r\nimport dash_html_components as h\r\n\r\napp = dash.Dash(__name__)\r\napp.layout = h.Div(['Hi'])\r\napp.run_server(debug=True)\r\n```\r\n\r\n```pytb\r\n Warning: This is a development server. Do not use app.run_server\r\n in production, use a production WSGI server like gunicorn instead.\r\n\r\n * Serving Flask app \"scratch\" (lazy loading)\r\n * Environment: production\r\n   WARNING: This is a development server. Do not use it in a production deployment.\r\n   Use a production WSGI server instead.\r\n * Debug mode: on\r\nTraceback (most recent call last):\r\n  File \"~/Library/Application Support/JetBrains/PyCharm2020.2/scratches/scratch.py\", line 1, in <module>\r\n    import dash\r\nModuleNotFoundError: No module named 'dash'\r\n```\r\n\r\nWhen I debug the app, I see that the venv's `site-packages` dir is in `sys.path` the first time around, but after the reloader immediately reloads the environment, it's gone.\r\n\r\nThis might be related to #555\r\n\r\nEnvironment:\r\n\r\n- Python version: 3.8.5\r\n- Werkzeug version: 1.0.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1912", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1912/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1912/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1912/events", "html_url": "https://github.com/pallets/werkzeug/issues/1912", "id": 678240206, "node_id": "MDU6SXNzdWU2NzgyNDAyMDY=", "number": 1912, "title": "SameSite=None missing from debugger cookie", "user": {"login": "GhostApps", "id": 2923132, "node_id": "MDQ6VXNlcjI5MjMxMzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2923132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GhostApps", "html_url": "https://github.com/GhostApps", "followers_url": "https://api.github.com/users/GhostApps/followers", "following_url": "https://api.github.com/users/GhostApps/following{/other_user}", "gists_url": "https://api.github.com/users/GhostApps/gists{/gist_id}", "starred_url": "https://api.github.com/users/GhostApps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GhostApps/subscriptions", "organizations_url": "https://api.github.com/users/GhostApps/orgs", "repos_url": "https://api.github.com/users/GhostApps/repos", "events_url": "https://api.github.com/users/GhostApps/events{/privacy}", "received_events_url": "https://api.github.com/users/GhostApps/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-13T08:06:31Z", "updated_at": "2020-08-13T18:59:12Z", "closed_at": "2020-08-13T18:59:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When entering the debugger pin into the debugger when running in an iframe, Chrome states that \"Because a cookie's SameSite attribute was not set or is invalid, it defaults to SameSite=Lax, which prevents the cookie from being set in a cross-site context.\"\r\nThe debugger accepts the pin but then silently returns a 405 error when you try and interact with the console\r\n\r\nTo replicate: Run the debugger in an iframe, using Chrome with SameSite checking enabled, enter the pin then try and interact with the console\r\n\r\nEnvironment:\r\n\r\n- Python version: 3.6.9\r\n- Werkzeug version: 1.0.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1908", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1908/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1908/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1908/events", "html_url": "https://github.com/pallets/werkzeug/issues/1908", "id": 674732913, "node_id": "MDU6SXNzdWU2NzQ3MzI5MTM=", "number": 1908, "title": "Werkzeug stores cookies values with the same name in-order, but should take domain into account", "user": {"login": "sdwvit", "id": 8777372, "node_id": "MDQ6VXNlcjg3NzczNzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8777372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdwvit", "html_url": "https://github.com/sdwvit", "followers_url": "https://api.github.com/users/sdwvit/followers", "following_url": "https://api.github.com/users/sdwvit/following{/other_user}", "gists_url": "https://api.github.com/users/sdwvit/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdwvit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdwvit/subscriptions", "organizations_url": "https://api.github.com/users/sdwvit/orgs", "repos_url": "https://api.github.com/users/sdwvit/repos", "events_url": "https://api.github.com/users/sdwvit/events{/privacy}", "received_events_url": "https://api.github.com/users/sdwvit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-08-07T03:38:17Z", "updated_at": "2020-08-07T14:34:39Z", "closed_at": "2020-08-07T04:21:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/pallets/werkzeug/blob/master/src/werkzeug/http.py#L1057\r\n```\r\n The same key can be provided multiple times, the values are stored\r\n    in-order. The default :class:`MultiDict` will have the first value\r\n    first, and all values can be retrieved with\r\n    :meth:`MultiDict.getlist`.\r\n```\r\n\r\nHowever, if you check the specification (and how browser handle it):\r\nhttps://tools.ietf.org/html/rfc6265\r\n```\r\n Although cookies are serialized linearly in the Cookie header,\r\n   servers SHOULD NOT rely upon the serialization order.  In particular,\r\n   if the Cookie header contains two cookies with the same name (e.g.,\r\n   that were set with different Path or Domain attributes), servers\r\n   SHOULD NOT rely upon the order in which these cookies appear in the\r\n   header.\r\n```\r\n\r\nTo replicate, have 2 flask-based websites with auth. Given they are on different domains: `a.b.com` `b.com` with a common part `b.com`, authorize on b.com and then try to authorize on a.b.com and do logged-in only request on a.b.com. It fails with authorization error. The short explanation is: flask uses werkzeug's base_request and receives auth cookie via request.cookies['session'], which calls parse_cookie [here](https://github.com/pallets/werkzeug/blob/09a248649069780b4adfb910fb69f6fb304f2ea3/src/werkzeug/wrappers/base_request.py#L519)\r\n\r\nExpected behavior: it works by the latest rfc spec.\r\n\r\nEnvironment:\r\n\r\n- Python version: 3.6\r\n- Werkzeug version: current\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1905", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1905/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1905/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1905/events", "html_url": "https://github.com/pallets/werkzeug/issues/1905", "id": 669403709, "node_id": "MDU6SXNzdWU2Njk0MDM3MDk=", "number": 1905, "title": "uploaded unicode filename has trailing quote", "user": {"login": "danerlt", "id": 14197717, "node_id": "MDQ6VXNlcjE0MTk3NzE3", "avatar_url": "https://avatars2.githubusercontent.com/u/14197717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danerlt", "html_url": "https://github.com/danerlt", "followers_url": "https://api.github.com/users/danerlt/followers", "following_url": "https://api.github.com/users/danerlt/following{/other_user}", "gists_url": "https://api.github.com/users/danerlt/gists{/gist_id}", "starred_url": "https://api.github.com/users/danerlt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danerlt/subscriptions", "organizations_url": "https://api.github.com/users/danerlt/orgs", "repos_url": "https://api.github.com/users/danerlt/repos", "events_url": "https://api.github.com/users/danerlt/events{/privacy}", "received_events_url": "https://api.github.com/users/danerlt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-31T04:02:02Z", "updated_at": "2020-07-31T06:56:14Z", "closed_at": "2020-07-31T05:12:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- **This issue tracker is a tool to address bugs in Flask itself.\r\nPlease use the Pallets Discord or Stack Overflow for general questions\r\nabout using Flask or issues not related to Flask.** -->\r\n\r\n<!-- If you'd like to report a bug in Flask, fill out the template below. Provide\r\nany extra information that may be useful / related to your problem.\r\nIdeally, create an [MCVE](https://stackoverflow.com/help/mcve), which helps us\r\nunderstand the problem and helps check that it is not caused by something in\r\nyour code. -->\r\n### Python Code\r\n```\r\nfrom flask import Flask, request\r\n\r\napp = Flask(__name__)\r\n\r\n\r\n@app.route(\"/index\", methods=[\"GET\"])\r\ndef index():\r\n    file = request.files[\"FILE\"]\r\n    print(f\"file: {file}\")\r\n    filename = file.filename\r\n    print(f\"filename: {filename}\")\r\n    return filename\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run(host=\"0.0.0.0\", port=8000)\r\n```\r\n\r\n### Expected Behavior\r\n<!-- Tell us what should happen. -->\r\n\r\n```\r\nwhen I upload file, it return the right filename.\r\n```\r\n\r\n### Actual Behavior\r\n<!-- Tell us what happens instead. -->\r\n\r\n```\r\nwhen I upload file named `\u5546\u54c1\u671f\u8d27\u91cf\u5316\u4ea4\u6613\u5b9e\u6218.pdf` it return `\u5546\u54c1\u671f\u8d27\u91cf\u5316\u4ea4\u6613\u5b9e\u6218.pdf\"`, this result is not right. An extra double quote was returned at the end of the file\r\nwhen I upload file named `aws.png` it return `aws.png`, this result is right.\r\n```\r\n\r\n### Console Log\r\n```\r\nD:\\Anaconda3\\python.exe D:/workspace/flask-demo/app.py\r\n * Serving Flask app \"app\" (lazy loading)\r\n * Environment: production\r\n   WARNING: This is a development server. Do not use it in a production deployment.\r\n   Use a production WSGI server instead.\r\n * Debug mode: off\r\n * Running on http://0.0.0.0:8000/ (Press CTRL+C to quit)\r\nfile: <FileStorage: '\u5546\u54c1\u671f\u8d27\u91cf\u5316\u4ea4\u6613\u5b9e\u6218.pdf\"' ('application/pdf')>\r\nfilename: \u5546\u54c1\u671f\u8d27\u91cf\u5316\u4ea4\u6613\u5b9e\u6218.pdf\"\r\n127.0.0.1 - - [31/Jul/2020 11:56:05] \"GET /index HTTP/1.1\" 200 -\r\n127.0.0.1 - - [31/Jul/2020 11:56:06] \"GET /index HTTP/1.1\" 200 -\r\nfile: <FileStorage: '\u5546\u54c1\u671f\u8d27\u91cf\u5316\u4ea4\u6613\u5b9e\u6218.pdf\"' ('application/pdf')>\r\nfilename: \u5546\u54c1\u671f\u8d27\u91cf\u5316\u4ea4\u6613\u5b9e\u6218.pdf\"\r\nfile: <FileStorage: 'aws.png' ('image/png')>\r\nfilename: aws.png\r\n127.0.0.1 - - [31/Jul/2020 12:01:25] \"GET /index HTTP/1.1\" 200 -\r\n\r\n```\r\n### Environment\r\n\r\n* Python version: 3.7\r\n* Flask version: 1.1.2\r\n* Werkzeug version: 1.01\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1891", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1891/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1891/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1891/events", "html_url": "https://github.com/pallets/werkzeug/issues/1891", "id": 657534055, "node_id": "MDU6SXNzdWU2NTc1MzQwNTU=", "number": 1891, "title": "the version of jquery packaged in the werkzeug debugger has a security exposure", "user": {"login": "scottdickerson", "id": 6663002, "node_id": "MDQ6VXNlcjY2NjMwMDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6663002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottdickerson", "html_url": "https://github.com/scottdickerson", "followers_url": "https://api.github.com/users/scottdickerson/followers", "following_url": "https://api.github.com/users/scottdickerson/following{/other_user}", "gists_url": "https://api.github.com/users/scottdickerson/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottdickerson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottdickerson/subscriptions", "organizations_url": "https://api.github.com/users/scottdickerson/orgs", "repos_url": "https://api.github.com/users/scottdickerson/repos", "events_url": "https://api.github.com/users/scottdickerson/events{/privacy}", "received_events_url": "https://api.github.com/users/scottdickerson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-15T17:41:10Z", "updated_at": "2020-07-15T17:51:30Z", "closed_at": "2020-07-15T17:48:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThis issue tracker is a tool to address bugs in Werkzeug itself. Please\r\nuse Pallets Discord or Stack Overflow for questions about your own code.\r\n\r\nReplace this comment with a clear outline of what the bug is.\r\n-->\r\nAccording to our security scanning tool, the packaged version of jquery inside Werkzeug has a security exposure\r\n\r\n<!--\r\nDescribe how to replicate the bug.\r\n\r\nInclude a minimal reproducible example that demonstrates the bug.\r\nInclude the full traceback if there was an exception.\r\n-->\r\nWhen I run a security exposure scan on the werkzeug library I get this jquery issue:\r\nhttps://vuln.whitesourcesoftware.com/vulnerability/CVE-2020-11022\r\n\r\ns/werkzeug/debug/shared/jquery.js\r\n\r\nIn jQuery versions greater than or equal to 1.2 and before 3.5.0, passing HTML from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.\r\n\r\n<!--\r\nDescribe the expected behavior that should have happened but didn't.\r\n-->\r\n\r\nEnvironment:\r\n\r\n- Python version: 3.7\r\n- Werkzeug version:\r\n1.0.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1885", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1885/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1885/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1885/events", "html_url": "https://github.com/pallets/werkzeug/issues/1885", "id": 655548415, "node_id": "MDU6SXNzdWU2NTU1NDg0MTU=", "number": 1885, "title": "send_file should raise TypeError when mimetype and download_name aren't provided", "user": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/14", "html_url": "https://github.com/pallets/werkzeug/milestone/14", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/14/labels", "id": 5085882, "node_id": "MDk6TWlsZXN0b25lNTA4NTg4Mg==", "number": 14, "title": "2.0.0", "description": "", "creator": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "open_issues": 5, "closed_issues": 48, "state": "open", "created_at": "2020-02-09T21:53:29Z", "updated_at": "2020-08-13T18:59:12Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2020-07-13T03:08:59Z", "updated_at": "2020-07-13T16:24:47Z", "closed_at": "2020-07-13T16:24:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "All other places in `send_file` that check required parameter combinations raise a `TypeError`, but `mimetype` raises a `ValueError`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1882", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1882/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1882/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1882/events", "html_url": "https://github.com/pallets/werkzeug/issues/1882", "id": 655513398, "node_id": "MDU6SXNzdWU2NTU1MTMzOTg=", "number": 1882, "title": "send_file should set conditional=True and no-cache by default", "user": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/14", "html_url": "https://github.com/pallets/werkzeug/milestone/14", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/14/labels", "id": 5085882, "node_id": "MDk6TWlsZXN0b25lNTA4NTg4Mg==", "number": 14, "title": "2.0.0", "description": "", "creator": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "open_issues": 5, "closed_issues": 48, "state": "open", "created_at": "2020-02-09T21:53:29Z", "updated_at": "2020-08-13T18:59:12Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2020-07-13T00:53:33Z", "updated_at": "2020-07-13T04:39:48Z", "closed_at": "2020-07-13T04:39:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently, `send_file` sets `cache_timeout` to 12 hours, and disables `conditional` by default. We see a regular stream of questions from developers who are confused why their CSS changes aren't reflected in development, or even when deploying a new version. 12 hours is *really* long, even CDNs default to around 1-4 hours.\r\n\r\nInstead, we should set `conditional=True` by default, set `cache_control.no_cache` instead of `public`, and not set `max_age` or `expires`. This will tell the client to cache the response, but to make conditional requests to decide whether to use the cache.\r\n\r\nThis will solve the issue developers are having with stale resources. It adds a bit of overhead since it requires a request cycle to calculate if the conditions are still met, but I think this should be negligible for most applications. If an application is at the point where that overhead matters, they should be using a CDN, at which point they would be tuning `cache-control` anyway.\r\n\r\nRelated to #1850\r\n\r\ncc @jab", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1881", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1881/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1881/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1881/events", "html_url": "https://github.com/pallets/werkzeug/issues/1881", "id": 655506067, "node_id": "MDU6SXNzdWU2NTU1MDYwNjc=", "number": 1881, "title": "use pathlib internally in send_file", "user": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/14", "html_url": "https://github.com/pallets/werkzeug/milestone/14", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/14/labels", "id": 5085882, "node_id": "MDk6TWlsZXN0b25lNTA4NTg4Mg==", "number": 14, "title": "2.0.0", "description": "", "creator": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "open_issues": 5, "closed_issues": 48, "state": "open", "created_at": "2020-02-09T21:53:29Z", "updated_at": "2020-08-13T18:59:12Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2020-07-13T00:19:59Z", "updated_at": "2020-07-13T01:57:05Z", "closed_at": "2020-07-13T01:57:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The implementation and tests become a bit cleaner using `pathlib` everywhere. Extends #1850 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1880", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1880/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1880/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1880/events", "html_url": "https://github.com/pallets/werkzeug/issues/1880", "id": 655505737, "node_id": "MDU6SXNzdWU2NTU1MDU3Mzc=", "number": 1880, "title": "add send_from_directory from Flask", "user": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/14", "html_url": "https://github.com/pallets/werkzeug/milestone/14", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/14/labels", "id": 5085882, "node_id": "MDk6TWlsZXN0b25lNTA4NTg4Mg==", "number": 14, "title": "2.0.0", "description": "", "creator": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "open_issues": 5, "closed_issues": 48, "state": "open", "created_at": "2020-02-09T21:53:29Z", "updated_at": "2020-08-13T18:59:12Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2020-07-13T00:18:17Z", "updated_at": "2020-07-14T05:45:06Z", "closed_at": "2020-07-14T05:45:06Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#1850 added `send_file` from Flask, but `send_from_directory` should also be added.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1869", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1869/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1869/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1869/events", "html_url": "https://github.com/pallets/werkzeug/issues/1869", "id": 647297983, "node_id": "MDU6SXNzdWU2NDcyOTc5ODM=", "number": 1869, "title": "send_file: allow filename for inline content-disposition ", "user": {"login": "ThiefMaster", "id": 179599, "node_id": "MDQ6VXNlcjE3OTU5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThiefMaster", "html_url": "https://github.com/ThiefMaster", "followers_url": "https://api.github.com/users/ThiefMaster/followers", "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}", "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions", "organizations_url": "https://api.github.com/users/ThiefMaster/orgs", "repos_url": "https://api.github.com/users/ThiefMaster/repos", "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}", "received_events_url": "https://api.github.com/users/ThiefMaster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/14", "html_url": "https://github.com/pallets/werkzeug/milestone/14", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/14/labels", "id": 5085882, "node_id": "MDk6TWlsZXN0b25lNTA4NTg4Mg==", "number": 14, "title": "2.0.0", "description": "", "creator": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "open_issues": 5, "closed_issues": 48, "state": "open", "created_at": "2020-02-09T21:53:29Z", "updated_at": "2020-08-13T18:59:12Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2020-06-29T11:43:07Z", "updated_at": "2020-07-13T02:45:54Z", "closed_at": "2020-07-13T02:45:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "`send_file` should support `attachment_filename` even for content-disposition inline.\r\n\r\nIncluding a filename with inline files makes perfect sense e.g. when serving images users may want to \"rightclick -> save as\".\r\nTo avoid breaking API changes I would recommend keeping `attachment_filename` for it, but sending a content-disposition:inline header in case `as_attachment` is false. Alternatively we could deprecate `attachment_filename` in favor of a new `client_filename`, where the old kwarg would not add an inline disposition while the new one would.\r\n\r\nThis depends on #1850 since it moves `send_file` from Flask to werkzeug.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1864", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1864/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1864/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1864/events", "html_url": "https://github.com/pallets/werkzeug/issues/1864", "id": 646369932, "node_id": "MDU6SXNzdWU2NDYzNjk5MzI=", "number": 1864, "title": "Try using MonkeyType on Werkzeug.", "user": {"login": "pgjones", "id": 1391482, "node_id": "MDQ6VXNlcjEzOTE0ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1391482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pgjones", "html_url": "https://github.com/pgjones", "followers_url": "https://api.github.com/users/pgjones/followers", "following_url": "https://api.github.com/users/pgjones/following{/other_user}", "gists_url": "https://api.github.com/users/pgjones/gists{/gist_id}", "starred_url": "https://api.github.com/users/pgjones/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pgjones/subscriptions", "organizations_url": "https://api.github.com/users/pgjones/orgs", "repos_url": "https://api.github.com/users/pgjones/repos", "events_url": "https://api.github.com/users/pgjones/events{/privacy}", "received_events_url": "https://api.github.com/users/pgjones/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-26T16:18:03Z", "updated_at": "2020-08-08T15:14:41Z", "closed_at": "2020-08-08T15:14:41Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I think it is worth trying [MonkeyType](https://github.com/instagram/MonkeyType) to create an initial set of type hints for Werkzeug (applied to the code, rather than in stub files). ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1859", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1859/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1859/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1859/events", "html_url": "https://github.com/pallets/werkzeug/issues/1859", "id": 643020520, "node_id": "MDU6SXNzdWU2NDMwMjA1MjA=", "number": 1859, "title": "Support for relative URI location headers in responses", "user": {"login": "corbinmcneill", "id": 4534471, "node_id": "MDQ6VXNlcjQ1MzQ0NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4534471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/corbinmcneill", "html_url": "https://github.com/corbinmcneill", "followers_url": "https://api.github.com/users/corbinmcneill/followers", "following_url": "https://api.github.com/users/corbinmcneill/following{/other_user}", "gists_url": "https://api.github.com/users/corbinmcneill/gists{/gist_id}", "starred_url": "https://api.github.com/users/corbinmcneill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/corbinmcneill/subscriptions", "organizations_url": "https://api.github.com/users/corbinmcneill/orgs", "repos_url": "https://api.github.com/users/corbinmcneill/repos", "events_url": "https://api.github.com/users/corbinmcneill/events{/privacy}", "received_events_url": "https://api.github.com/users/corbinmcneill/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-22T12:14:11Z", "updated_at": "2020-06-28T00:55:00Z", "closed_at": "2020-06-28T00:51:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, Werkzeug forces the URI used in a response header to be an absolute URI. In the BaseResponse `autocorrect_location_header` is set to `True` [here](https://github.com/pallets/werkzeug/blob/master/src/werkzeug/wrappers/base_response.py#L152). Later, in `BaseResponse.get_wsgi_headers` [here](https://github.com/pallets/werkzeug/blob/master/src/werkzeug/wrappers/base_response.py#L561), the fact that `autocorrect_location_header` is true, causes the Header, even if specified as a relative URI, to be converted to an absolute URI.\r\n\r\nWhile absolute URIs used to be required by RFC 2616, this RFC has since been made obsolete in 2014 by ~~RFC 7230~~ RFC 7231, which allows for relative URIs. It seems like it would be valuable to allow for relative URIs going forward.\r\n\r\nIs this something that Werkzeug would be interested in allowing? If so, I'd be happy to take some time to put together a PR for this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1858", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1858/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1858/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1858/events", "html_url": "https://github.com/pallets/werkzeug/issues/1858", "id": 642527213, "node_id": "MDU6SXNzdWU2NDI1MjcyMTM=", "number": 1858, "title": "bug: @cached_property property can be set", "user": {"login": "danrobinson88", "id": 67221952, "node_id": "MDQ6VXNlcjY3MjIxOTUy", "avatar_url": "https://avatars2.githubusercontent.com/u/67221952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danrobinson88", "html_url": "https://github.com/danrobinson88", "followers_url": "https://api.github.com/users/danrobinson88/followers", "following_url": "https://api.github.com/users/danrobinson88/following{/other_user}", "gists_url": "https://api.github.com/users/danrobinson88/gists{/gist_id}", "starred_url": "https://api.github.com/users/danrobinson88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danrobinson88/subscriptions", "organizations_url": "https://api.github.com/users/danrobinson88/orgs", "repos_url": "https://api.github.com/users/danrobinson88/repos", "events_url": "https://api.github.com/users/danrobinson88/events{/privacy}", "received_events_url": "https://api.github.com/users/danrobinson88/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-21T09:17:14Z", "updated_at": "2020-06-21T11:34:03Z", "closed_at": "2020-06-21T11:34:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "See code example:\r\n\r\n```python\r\nfrom werkzeug.utils import cached_property    \r\n\r\nclass A(): \r\n      @cached_property \r\n      def foo(self): \r\n           return 3 \r\n\r\na = A()\r\na.foo = 2\r\n```\r\nThis should raise an exception", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1854", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1854/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1854/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1854/events", "html_url": "https://github.com/pallets/werkzeug/issues/1854", "id": 641793925, "node_id": "MDU6SXNzdWU2NDE3OTM5MjU=", "number": 1854, "title": "IDLE COMMIT connections on postgresql", "user": {"login": "Rastopapola", "id": 35961376, "node_id": "MDQ6VXNlcjM1OTYxMzc2", "avatar_url": "https://avatars1.githubusercontent.com/u/35961376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rastopapola", "html_url": "https://github.com/Rastopapola", "followers_url": "https://api.github.com/users/Rastopapola/followers", "following_url": "https://api.github.com/users/Rastopapola/following{/other_user}", "gists_url": "https://api.github.com/users/Rastopapola/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rastopapola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rastopapola/subscriptions", "organizations_url": "https://api.github.com/users/Rastopapola/orgs", "repos_url": "https://api.github.com/users/Rastopapola/repos", "events_url": "https://api.github.com/users/Rastopapola/events{/privacy}", "received_events_url": "https://api.github.com/users/Rastopapola/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-19T08:14:21Z", "updated_at": "2020-06-20T10:35:04Z", "closed_at": "2020-06-19T15:40:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Bug\r\n## Background\r\nI found this rather by accident but it might be a bigger problem. I'm working on a Django3 project, using postgresql and the latest version of Werkzeug (1.0.1). It looks like the response handling via `runserver_plus` does not finish it's work properly, when a new request is already incoming. \r\nI assumed we had a very bad bug in our logic but found the source outside of our code.\r\n\r\nFurther details below:\r\n\r\n## Steps to reproduce\r\nAssume you have a running postgresql database with tables and everything is nicely set up.\r\n1. Take a look on active db connections via \r\n    1. ```\r\n        su - postgres\r\n        psql\r\n        SELECT queries FROM pg_stat_activity;\r\n        ```\r\n1. Run your django server using \r\n    1. ```\r\n        python manage.py runserver_plus\r\n        ```\r\n1.  Navigate on a route, which has any form of db fetching and populating. It is enough to add the following to a test route\r\n     1. ```\r\n         MODEL.objects.all().first()\r\n        ```\r\n1. Refresh your browser like a maniac by holding F5 for about two seconds.\r\n1. Check again your `pg_stat_acitvity`.\r\n    1. There are a lot of idle connections, which queries are only set to `COMMIT` and they won't be killed.\r\n\r\n## What normally happens\r\nThe opened connection will be closed after this part of code, which can be found in `werkzeug/debug/__init__.py`:\r\n```python\r\nl. 300 following\r\n    def debug_application(self, environ, start_response):\r\n        \"\"\"Run the application and conserve the traceback frames.\"\"\"\r\n        app_iter = None\r\n        try:\r\n            app_iter = self.app(environ, start_response)\r\n            for item in app_iter:\r\n                yield item\r\n            if hasattr(app_iter, \"close\"):\r\n                app_iter.close()\r\n    ...\r\n```\r\nIf 'app_iter.close()' is reached, everything works as expected.\r\n\r\n## What happened for us\r\nBut if we refresh extremely fast, the response handling seems to be interrupted somewhere in the middleware chain of Django and the new request instead is being handled, leaving the open connection as it is.\r\n\r\nWe really like `Werkzeug`, which is why we use it for two years now and it's the reason I want to inform you on this behaviour. Maybe you are aware of this, maybe it's really an unknown bug - I don't know.\r\n\r\nHope that helps.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1842", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1842/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1842/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1842/events", "html_url": "https://github.com/pallets/werkzeug/issues/1842", "id": 638289854, "node_id": "MDU6SXNzdWU2MzgyODk4NTQ=", "number": 1842, "title": "Append trailing slash to URL broken", "user": {"login": "oztourer", "id": 23238147, "node_id": "MDQ6VXNlcjIzMjM4MTQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/23238147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oztourer", "html_url": "https://github.com/oztourer", "followers_url": "https://api.github.com/users/oztourer/followers", "following_url": "https://api.github.com/users/oztourer/following{/other_user}", "gists_url": "https://api.github.com/users/oztourer/gists{/gist_id}", "starred_url": "https://api.github.com/users/oztourer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oztourer/subscriptions", "organizations_url": "https://api.github.com/users/oztourer/orgs", "repos_url": "https://api.github.com/users/oztourer/repos", "events_url": "https://api.github.com/users/oztourer/events{/privacy}", "received_events_url": "https://api.github.com/users/oztourer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-14T05:49:29Z", "updated_at": "2020-06-14T06:23:47Z", "closed_at": "2020-06-14T06:23:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a bug in utils.py function append_slash_redirect() for the case where a URL is missing a trailing slash. Before adding the slash the current code removes any existing slash. It unfortunately also removes the leading slash, causing the URL to become relative instead of absolute.\r\n\r\nLine 542 currently uses strip('/') but should use rstrip: \r\n\r\n    `new_path = environ[\"PATH_INFO\"].rstrip(\"/\") + \"/\"`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1840", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1840/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1840/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1840/events", "html_url": "https://github.com/pallets/werkzeug/issues/1840", "id": 637742599, "node_id": "MDU6SXNzdWU2Mzc3NDI1OTk=", "number": 1840, "title": "Add pull request and issue templates.", "user": {"login": "teymour-aldridge", "id": 42674621, "node_id": "MDQ6VXNlcjQyNjc0NjIx", "avatar_url": "https://avatars3.githubusercontent.com/u/42674621?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teymour-aldridge", "html_url": "https://github.com/teymour-aldridge", "followers_url": "https://api.github.com/users/teymour-aldridge/followers", "following_url": "https://api.github.com/users/teymour-aldridge/following{/other_user}", "gists_url": "https://api.github.com/users/teymour-aldridge/gists{/gist_id}", "starred_url": "https://api.github.com/users/teymour-aldridge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teymour-aldridge/subscriptions", "organizations_url": "https://api.github.com/users/teymour-aldridge/orgs", "repos_url": "https://api.github.com/users/teymour-aldridge/repos", "events_url": "https://api.github.com/users/teymour-aldridge/events{/privacy}", "received_events_url": "https://api.github.com/users/teymour-aldridge/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-12T13:15:46Z", "updated_at": "2020-06-22T16:13:06Z", "closed_at": "2020-06-22T16:13:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently there aren't any issue or pull request templates.\r\nAdding these would make it easier for people to raise issues and would make it a little bit easier because issues could to some extent be automatically triaged.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1837", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1837/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1837/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1837/events", "html_url": "https://github.com/pallets/werkzeug/issues/1837", "id": 637213779, "node_id": "MDU6SXNzdWU2MzcyMTM3Nzk=", "number": 1837, "title": "flask not running ", "user": {"login": "jatin0501", "id": 65544261, "node_id": "MDQ6VXNlcjY1NTQ0MjYx", "avatar_url": "https://avatars0.githubusercontent.com/u/65544261?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jatin0501", "html_url": "https://github.com/jatin0501", "followers_url": "https://api.github.com/users/jatin0501/followers", "following_url": "https://api.github.com/users/jatin0501/following{/other_user}", "gists_url": "https://api.github.com/users/jatin0501/gists{/gist_id}", "starred_url": "https://api.github.com/users/jatin0501/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jatin0501/subscriptions", "organizations_url": "https://api.github.com/users/jatin0501/orgs", "repos_url": "https://api.github.com/users/jatin0501/repos", "events_url": "https://api.github.com/users/jatin0501/events{/privacy}", "received_events_url": "https://api.github.com/users/jatin0501/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-11T17:51:20Z", "updated_at": "2020-06-11T18:30:33Z", "closed_at": "2020-06-11T18:00:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "i created a python file with hello world and imported flask but when i run that file on cmd it does not work the address doesnot open the file which i created instead it opens another webpage", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1834", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1834/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1834/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1834/events", "html_url": "https://github.com/pallets/werkzeug/issues/1834", "id": 636471468, "node_id": "MDU6SXNzdWU2MzY0NzE0Njg=", "number": 1834, "title": "Deprecate undocumented server CLI", "user": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/14", "html_url": "https://github.com/pallets/werkzeug/milestone/14", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/14/labels", "id": 5085882, "node_id": "MDk6TWlsZXN0b25lNTA4NTg4Mg==", "number": 14, "title": "2.0.0", "description": "", "creator": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "open_issues": 5, "closed_issues": 48, "state": "open", "created_at": "2020-02-09T21:53:29Z", "updated_at": "2020-08-13T18:59:12Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2020-06-10T18:51:20Z", "updated_at": "2020-06-19T16:43:45Z", "closed_at": "2020-06-19T16:43:45Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I'm not sure anyone even knows about it. I was certainly surprised when I discovered it while doing some other work on that file. It doesn't appear to be documented in any version of the docs currently hosted.\r\n\r\n_Originally posted by @davidism in https://github.com/pallets/werkzeug/issues/1827#issuecomment-641309197_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1827", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1827/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1827/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1827/events", "html_url": "https://github.com/pallets/werkzeug/issues/1827", "id": 635296860, "node_id": "MDU6SXNzdWU2MzUyOTY4NjA=", "number": 1827, "title": "Replace optparse with argparse", "user": {"login": "ThiefMaster", "id": 179599, "node_id": "MDQ6VXNlcjE3OTU5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThiefMaster", "html_url": "https://github.com/ThiefMaster", "followers_url": "https://api.github.com/users/ThiefMaster/followers", "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}", "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions", "organizations_url": "https://api.github.com/users/ThiefMaster/orgs", "repos_url": "https://api.github.com/users/ThiefMaster/repos", "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}", "received_events_url": "https://api.github.com/users/ThiefMaster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-09T10:10:20Z", "updated_at": "2020-06-10T18:49:09Z", "closed_at": "2020-06-10T18:49:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "optparse is deprecated since python 2.7", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1816", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1816/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1816/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1816/events", "html_url": "https://github.com/pallets/werkzeug/issues/1816", "id": 624907439, "node_id": "MDU6SXNzdWU2MjQ5MDc0Mzk=", "number": 1816, "title": "parse_authorization_header raises UnicodeDecodeError, not returning None", "user": {"login": "ArchibaldArt", "id": 20492872, "node_id": "MDQ6VXNlcjIwNDkyODcy", "avatar_url": "https://avatars0.githubusercontent.com/u/20492872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArchibaldArt", "html_url": "https://github.com/ArchibaldArt", "followers_url": "https://api.github.com/users/ArchibaldArt/followers", "following_url": "https://api.github.com/users/ArchibaldArt/following{/other_user}", "gists_url": "https://api.github.com/users/ArchibaldArt/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArchibaldArt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArchibaldArt/subscriptions", "organizations_url": "https://api.github.com/users/ArchibaldArt/orgs", "repos_url": "https://api.github.com/users/ArchibaldArt/repos", "events_url": "https://api.github.com/users/ArchibaldArt/events{/privacy}", "received_events_url": "https://api.github.com/users/ArchibaldArt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/14", "html_url": "https://github.com/pallets/werkzeug/milestone/14", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/14/labels", "id": 5085882, "node_id": "MDk6TWlsZXN0b25lNTA4NTg4Mg==", "number": 14, "title": "2.0.0", "description": "", "creator": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "open_issues": 5, "closed_issues": 48, "state": "open", "created_at": "2020-02-09T21:53:29Z", "updated_at": "2020-08-13T18:59:12Z", "due_on": null, "closed_at": null}, "comments": 3, "created_at": "2020-05-26T14:00:59Z", "updated_at": "2020-06-11T01:35:05Z", "closed_at": "2020-06-11T01:35:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "`werkzeug.http.parse_authorization_header()` docstring states:\r\n> The return value is either `None` if the header was invalid or not given\r\n\r\nBut in case of passing string improperly formatted (i.e. not properly UTF-8 encoded) it raises UnicodeDecodeError exception:\r\n\r\n```\r\n>>> import base64\r\n>>> from werkzeug.http import parse_authorization_header\r\n>>> value = 'Basic ' + base64.b64encode(b'\\xffser:pass').decode()\r\n>>> parse_authorization_header(value)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/py3.8/lib/python3.8/site-packages/werkzeug/http.py\", line 610, in parse_authorization_header\r\n    \"username\": to_unicode(username, _basic_auth_charset),\r\n  File \"/py3.8/lib/python3.8/site-packages/werkzeug/_compat.py\", line 219, in to_unicode\r\n    return x.decode(charset, errors)\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xff in position 0: invalid start byte\r\n```\r\nAm I right that exception handling should be added in `parse_authorization_header()`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1807", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1807/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1807/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1807/events", "html_url": "https://github.com/pallets/werkzeug/issues/1807", "id": 619487551, "node_id": "MDU6SXNzdWU2MTk0ODc1NTE=", "number": 1807, "title": "Remove jQuery", "user": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/14", "html_url": "https://github.com/pallets/werkzeug/milestone/14", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/14/labels", "id": 5085882, "node_id": "MDk6TWlsZXN0b25lNTA4NTg4Mg==", "number": 14, "title": "2.0.0", "description": "", "creator": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "open_issues": 5, "closed_issues": 48, "state": "open", "created_at": "2020-02-09T21:53:29Z", "updated_at": "2020-08-13T18:59:12Z", "due_on": null, "closed_at": null}, "comments": 9, "created_at": "2020-05-16T14:28:31Z", "updated_at": "2020-06-21T21:13:53Z", "closed_at": "2020-06-21T21:13:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "At this point, support for modern JavaScript features in modern browsers is probably enough to replace jQuery with plain JavaScript. Bundling jQuery, even minimized, is 1/4 of the final size of the wheel on PyPI. We also keep getting asked to update jQuery due to CVEs that come out, even though they have no impact on the debugger.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1804", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1804/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1804/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1804/events", "html_url": "https://github.com/pallets/werkzeug/issues/1804", "id": 616333369, "node_id": "MDU6SXNzdWU2MTYzMzMzNjk=", "number": 1804, "title": "Why is this exception returning status code 200?", "user": {"login": "mmachenry", "id": 1711920, "node_id": "MDQ6VXNlcjE3MTE5MjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1711920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmachenry", "html_url": "https://github.com/mmachenry", "followers_url": "https://api.github.com/users/mmachenry/followers", "following_url": "https://api.github.com/users/mmachenry/following{/other_user}", "gists_url": "https://api.github.com/users/mmachenry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmachenry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmachenry/subscriptions", "organizations_url": "https://api.github.com/users/mmachenry/orgs", "repos_url": "https://api.github.com/users/mmachenry/repos", "events_url": "https://api.github.com/users/mmachenry/events{/privacy}", "received_events_url": "https://api.github.com/users/mmachenry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-12T03:36:30Z", "updated_at": "2020-05-12T03:52:49Z", "closed_at": "2020-05-12T03:52:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to use HTTPException to produce JSON readable bodies. It seems like HTTPException only supports HTML, so I'm implementing my own base class from HTTPException and then I suppose I need to rederive all the subclass, like Conflict here, from that. I was thinking this would work:\r\n\r\n```\r\nclass HTTPJSONException(HTTPException):\r\n    def __init__(self, obj):\r\n        super().__init__(response = jsonify(obj))\r\n\r\n    def get_headers(self, environ=None):\r\n        return [(\"Content-Type\", \"text/json; charset=utf-8\")]\r\n\r\nclass Conflict(HTTPJSONException):\r\n    code = 409\r\n```\r\nIt does produce a JSON body of the object I pass it properly. However, the status_code of that response is 200. What am I doing wrong?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1802", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1802/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1802/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1802/events", "html_url": "https://github.com/pallets/werkzeug/issues/1802", "id": 615449958, "node_id": "MDU6SXNzdWU2MTU0NDk5NTg=", "number": 1802, "title": "Upgrade Jquery to 3.5.0", "user": {"login": "BinduAggarwal", "id": 64599762, "node_id": "MDQ6VXNlcjY0NTk5NzYy", "avatar_url": "https://avatars1.githubusercontent.com/u/64599762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BinduAggarwal", "html_url": "https://github.com/BinduAggarwal", "followers_url": "https://api.github.com/users/BinduAggarwal/followers", "following_url": "https://api.github.com/users/BinduAggarwal/following{/other_user}", "gists_url": "https://api.github.com/users/BinduAggarwal/gists{/gist_id}", "starred_url": "https://api.github.com/users/BinduAggarwal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BinduAggarwal/subscriptions", "organizations_url": "https://api.github.com/users/BinduAggarwal/orgs", "repos_url": "https://api.github.com/users/BinduAggarwal/repos", "events_url": "https://api.github.com/users/BinduAggarwal/events{/privacy}", "received_events_url": "https://api.github.com/users/BinduAggarwal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-10T18:35:42Z", "updated_at": "2020-05-16T14:23:50Z", "closed_at": "2020-05-16T14:23:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "CVE-2020-11022\r\nIn jQuery versions greater than or equal to 1.2 and before 3.5.0, passing HTML from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.\r\n\r\nCould you update werkzeug to use latest version of Jquery -3.5.1 or 3.5.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1799", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1799/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1799/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1799/events", "html_url": "https://github.com/pallets/werkzeug/issues/1799", "id": 612716276, "node_id": "MDU6SXNzdWU2MTI3MTYyNzY=", "number": 1799, "title": "Allow BaseRequest subclasses to override empty argument value", "user": {"login": "jayaddison", "id": 55152140, "node_id": "MDQ6VXNlcjU1MTUyMTQw", "avatar_url": "https://avatars0.githubusercontent.com/u/55152140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayaddison", "html_url": "https://github.com/jayaddison", "followers_url": "https://api.github.com/users/jayaddison/followers", "following_url": "https://api.github.com/users/jayaddison/following{/other_user}", "gists_url": "https://api.github.com/users/jayaddison/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayaddison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayaddison/subscriptions", "organizations_url": "https://api.github.com/users/jayaddison/orgs", "repos_url": "https://api.github.com/users/jayaddison/repos", "events_url": "https://api.github.com/users/jayaddison/events{/privacy}", "received_events_url": "https://api.github.com/users/jayaddison/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-05T16:02:59Z", "updated_at": "2020-05-07T20:41:35Z", "closed_at": "2020-05-07T14:49:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "As part of a [Flask](https://github.com/pallets/flask) application I have encountered a possibly rare use case where I'd like to supply a query-string parameter name, but provide no value for it.\r\n\r\nIt's essentially an indicator from the client to the host that the client's interested in a certain field/item, but doesn't want to specify any value for it (which in Pythonic, I think translates most closely to a `None` representation).\r\n\r\nThe specific handling I'm looking for is that a URI with the query-string `?foo=1&bar=&baz` should parse to a Python dict-like `{'foo': '1', 'bar': '', 'baz': None}`, although that's my particular use case and others may have different requirements.\r\n\r\nAlthough deployed implementations have a tendency to define the 'real world' rules, I've confirmed against the current URI RFC ([RFC 3986](https://tools.ietf.org/html/rfc3986)) that it should be valid for a query string to contain parameters without corresponding `=` attachments (whether the right-hand-side is empty or not).\r\n\r\nI looked into subclassing Flask's [`Request`](https://github.com/pallets/flask/blob/master/src/flask/wrappers.py#L20) class, but it looks like query-string handling is one level lower in the stack, here in `werkzeug`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1797", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1797/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1797/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1797/events", "html_url": "https://github.com/pallets/werkzeug/issues/1797", "id": 611761497, "node_id": "MDU6SXNzdWU2MTE3NjE0OTc=", "number": 1797, "title": "New Microsoft Edge User Agent", "user": {"login": "ragazenta", "id": 3535194, "node_id": "MDQ6VXNlcjM1MzUxOTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3535194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ragazenta", "html_url": "https://github.com/ragazenta", "followers_url": "https://api.github.com/users/ragazenta/followers", "following_url": "https://api.github.com/users/ragazenta/following{/other_user}", "gists_url": "https://api.github.com/users/ragazenta/gists{/gist_id}", "starred_url": "https://api.github.com/users/ragazenta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ragazenta/subscriptions", "organizations_url": "https://api.github.com/users/ragazenta/orgs", "repos_url": "https://api.github.com/users/ragazenta/repos", "events_url": "https://api.github.com/users/ragazenta/events{/privacy}", "received_events_url": "https://api.github.com/users/ragazenta/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 123868513, "node_id": "MDU6TGFiZWwxMjM4Njg1MTM=", "url": "https://api.github.com/repos/pallets/werkzeug/labels/bug", "name": "bug", "color": "bc2b39", "default": true, "description": ""}, {"id": 1385074318, "node_id": "MDU6TGFiZWwxMzg1MDc0MzE4", "url": "https://api.github.com/repos/pallets/werkzeug/labels/user-agent", "name": "user-agent", "color": "80ccd6", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "aenglander", "id": 328648, "node_id": "MDQ6VXNlcjMyODY0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/328648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aenglander", "html_url": "https://github.com/aenglander", "followers_url": "https://api.github.com/users/aenglander/followers", "following_url": "https://api.github.com/users/aenglander/following{/other_user}", "gists_url": "https://api.github.com/users/aenglander/gists{/gist_id}", "starred_url": "https://api.github.com/users/aenglander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aenglander/subscriptions", "organizations_url": "https://api.github.com/users/aenglander/orgs", "repos_url": "https://api.github.com/users/aenglander/repos", "events_url": "https://api.github.com/users/aenglander/events{/privacy}", "received_events_url": "https://api.github.com/users/aenglander/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aenglander", "id": 328648, "node_id": "MDQ6VXNlcjMyODY0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/328648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aenglander", "html_url": "https://github.com/aenglander", "followers_url": "https://api.github.com/users/aenglander/followers", "following_url": "https://api.github.com/users/aenglander/following{/other_user}", "gists_url": "https://api.github.com/users/aenglander/gists{/gist_id}", "starred_url": "https://api.github.com/users/aenglander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aenglander/subscriptions", "organizations_url": "https://api.github.com/users/aenglander/orgs", "repos_url": "https://api.github.com/users/aenglander/repos", "events_url": "https://api.github.com/users/aenglander/events{/privacy}", "received_events_url": "https://api.github.com/users/aenglander/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-05-04T10:18:29Z", "updated_at": "2020-05-16T09:49:32Z", "closed_at": "2020-05-16T09:49:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Background\r\nMicrosoft Edge now based on Chromium and the user agent string is updated.\r\n`Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.129 Safari/537.36 Edg/81.0.416.68`\r\n\r\n## Simple Code\r\n```python\r\n@app.route('/browser')\r\ndef browser():\r\n    from flask import request\r\n    ua = request.user_agent\r\n    return jsonify({\r\n        'browser': ua.browser,\r\n        'platform': ua.platform,\r\n        'user_agent': ua.string,\r\n        'version': ua.version,\r\n    })\r\n```\r\n\r\n## Expected Result\r\n```json\r\n{\r\n  \"browser\": \"edge\", \r\n  \"platform\": \"windows\", \r\n  \"user_agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.129 Safari/537.36 Edg/81.0.416.68\", \r\n  \"version\": \"81.0.416.68\"\r\n}\r\n```\r\n\r\n| Key | Value |\r\n| --- | --- |\r\n| browser | **edge** |\r\n| platform | windows |\r\n| user_agent | Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.129 Safari/537.36 Edg/81.0.416.68 |\r\n| version | **81.0.416.68** |\r\n\r\n\r\n## Actual Result\r\n```json\r\n{\r\n  \"browser\": \"chrome\", \r\n  \"platform\": \"windows\", \r\n  \"user_agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.129 Safari/537.36 Edg/81.0.416.68\", \r\n  \"version\": \"81.0.4044.129\"\r\n}\r\n```\r\n\r\n| Key | Value |\r\n| --- | --- |\r\n| browser | **chrome** |\r\n| platform | windows |\r\n| user_agent | Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.129 Safari/537.36 Edg/81.0.416.68 |\r\n| version | **81.0.4044.129** |\r\n\r\n## Environment\r\n- Windows 10 Pro 1909\r\n- Python 3.6.6\r\n- Werkzeug 0.16.1\r\n- Flask 1.1.1\r\n\r\n### Related Issues\r\n#818, #1556", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1795", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1795/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1795/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1795/events", "html_url": "https://github.com/pallets/werkzeug/issues/1795", "id": 610486597, "node_id": "MDU6SXNzdWU2MTA0ODY1OTc=", "number": 1795, "title": "Using Response.from_app updating the request \"body\" object also updates flask.request.json object", "user": {"login": "rwuebker", "id": 7829301, "node_id": "MDQ6VXNlcjc4MjkzMDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7829301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rwuebker", "html_url": "https://github.com/rwuebker", "followers_url": "https://api.github.com/users/rwuebker/followers", "following_url": "https://api.github.com/users/rwuebker/following{/other_user}", "gists_url": "https://api.github.com/users/rwuebker/gists{/gist_id}", "starred_url": "https://api.github.com/users/rwuebker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rwuebker/subscriptions", "organizations_url": "https://api.github.com/users/rwuebker/orgs", "repos_url": "https://api.github.com/users/rwuebker/repos", "events_url": "https://api.github.com/users/rwuebker/events{/privacy}", "received_events_url": "https://api.github.com/users/rwuebker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-01T00:54:33Z", "updated_at": "2020-05-07T18:00:17Z", "closed_at": "2020-05-07T18:00:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nUsing the following:\r\npython 3.6.8\r\nconnexion[swagger-ui]==2.7.0\r\nflask==1.0.4\r\nwerkzeug==1.0.1\r\n\r\nIf I use the Response.from_app method and I modify the body object inside my handler, it also updates the flask.request.json object. This is only for swagger 2.\r\n\r\nIf I use a swagger 3 file, this does not happen.\r\n\r\nI created a repo to demonstrate this:\r\nhttps://github.com/rwuebker/flask-swagger-connexion-issue\r\n\r\nSteps to reproduce:\r\n1. clone the repo above\r\n2. pip install -r requirements.txt\r\n3. run \"python app.py:\"\r\n4. notice the final assertion error\r\n\r\nThanks for taking a look!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1794", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1794/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1794/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1794/events", "html_url": "https://github.com/pallets/werkzeug/issues/1794", "id": 607130445, "node_id": "MDU6SXNzdWU2MDcxMzA0NDU=", "number": 1794, "title": "Content-Type routes", "user": {"login": "Avamander", "id": 5392141, "node_id": "MDQ6VXNlcjUzOTIxNDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/5392141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Avamander", "html_url": "https://github.com/Avamander", "followers_url": "https://api.github.com/users/Avamander/followers", "following_url": "https://api.github.com/users/Avamander/following{/other_user}", "gists_url": "https://api.github.com/users/Avamander/gists{/gist_id}", "starred_url": "https://api.github.com/users/Avamander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Avamander/subscriptions", "organizations_url": "https://api.github.com/users/Avamander/orgs", "repos_url": "https://api.github.com/users/Avamander/repos", "events_url": "https://api.github.com/users/Avamander/events{/privacy}", "received_events_url": "https://api.github.com/users/Avamander/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-26T22:19:59Z", "updated_at": "2020-04-26T23:01:10Z", "closed_at": "2020-04-26T22:55:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given that quite a few people build APIs using Flask, I think it would be nice to have a built-in way to create routes per content-type. \r\n\r\nFor example:\r\n```\r\n@app.route(\"/new\", methods=[\"GET\"])\r\ndef new():\r\n    return render_template(\"form.html\")\r\n\r\n@app.route(\"/new\", methods=[\"POST\"], content-types=[\"application/json\"])\r\ndef new_json():\r\n    # do stuff with JSON\r\n    return some_json\r\n\r\n@app.route(\"/new\", methods=[\"POST\"], content-types=[\"application/form-data\", \"application/x-www-form-urlencoded\"])\r\ndef new_html():\r\n    # do stuff with browser form\r\n    return some_page\r\n```\r\n\r\nCould this be added to base Flask or should everyone really implement this functionality using some other (library's) decorator?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1789", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1789/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1789/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1789/events", "html_url": "https://github.com/pallets/werkzeug/issues/1789", "id": 599165671, "node_id": "MDU6SXNzdWU1OTkxNjU2NzE=", "number": 1789, "title": "get_json function returning None when force equal to true is used", "user": {"login": "duducp", "id": 16366240, "node_id": "MDQ6VXNlcjE2MzY2MjQw", "avatar_url": "https://avatars1.githubusercontent.com/u/16366240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duducp", "html_url": "https://github.com/duducp", "followers_url": "https://api.github.com/users/duducp/followers", "following_url": "https://api.github.com/users/duducp/following{/other_user}", "gists_url": "https://api.github.com/users/duducp/gists{/gist_id}", "starred_url": "https://api.github.com/users/duducp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duducp/subscriptions", "organizations_url": "https://api.github.com/users/duducp/orgs", "repos_url": "https://api.github.com/users/duducp/repos", "events_url": "https://api.github.com/users/duducp/events{/privacy}", "received_events_url": "https://api.github.com/users/duducp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-13T22:09:54Z", "updated_at": "2020-04-13T22:25:17Z", "closed_at": "2020-04-13T22:25:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nWhen I use `get_json(silent=True, force=True)` and there is no value in the request body, the function returns me with a _None_.\r\n\r\nWouldn't the correct be an empty dictionary since I'm saying that _force_ is true?\r\n\r\nA possible correction could be as follows:\r\nhttps://github.com/pallets/werkzeug/compare/master...duducp:patch-1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1786", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1786/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1786/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1786/events", "html_url": "https://github.com/pallets/werkzeug/issues/1786", "id": 597391514, "node_id": "MDU6SXNzdWU1OTczOTE1MTQ=", "number": 1786, "title": "How to setup colorized traceback?", "user": {"login": "dufferzafar", "id": 1449512, "node_id": "MDQ6VXNlcjE0NDk1MTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1449512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dufferzafar", "html_url": "https://github.com/dufferzafar", "followers_url": "https://api.github.com/users/dufferzafar/followers", "following_url": "https://api.github.com/users/dufferzafar/following{/other_user}", "gists_url": "https://api.github.com/users/dufferzafar/gists{/gist_id}", "starred_url": "https://api.github.com/users/dufferzafar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dufferzafar/subscriptions", "organizations_url": "https://api.github.com/users/dufferzafar/orgs", "repos_url": "https://api.github.com/users/dufferzafar/repos", "events_url": "https://api.github.com/users/dufferzafar/events{/privacy}", "received_events_url": "https://api.github.com/users/dufferzafar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-09T16:09:25Z", "updated_at": "2020-04-09T17:30:49Z", "closed_at": "2020-04-09T17:30:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm using Werkzeug with a django project. Using [django_extensions' runserver_plus](https://django-extensions.readthedocs.io/en/latest/runserver_plus.html).\r\n\r\nThere are 3rd party libraries available that colorize the python tracebacks to make them a more readable. Like, https://github.com/nir0s/backtrace, https://github.com/staticshock/colored-traceback.py\r\n\r\nI was wondering how can I integrate these tools with werkzeug? Just importing them and setting the right hooks in manage.py doesn't really work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1784", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1784/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1784/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1784/events", "html_url": "https://github.com/pallets/werkzeug/issues/1784", "id": 592567892, "node_id": "MDU6SXNzdWU1OTI1Njc4OTI=", "number": 1784, "title": "Problem installing mod_wsgi on Apache", "user": {"login": "Pablo-Marina", "id": 62334013, "node_id": "MDQ6VXNlcjYyMzM0MDEz", "avatar_url": "https://avatars0.githubusercontent.com/u/62334013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pablo-Marina", "html_url": "https://github.com/Pablo-Marina", "followers_url": "https://api.github.com/users/Pablo-Marina/followers", "following_url": "https://api.github.com/users/Pablo-Marina/following{/other_user}", "gists_url": "https://api.github.com/users/Pablo-Marina/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pablo-Marina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pablo-Marina/subscriptions", "organizations_url": "https://api.github.com/users/Pablo-Marina/orgs", "repos_url": "https://api.github.com/users/Pablo-Marina/repos", "events_url": "https://api.github.com/users/Pablo-Marina/events{/privacy}", "received_events_url": "https://api.github.com/users/Pablo-Marina/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-02T11:44:09Z", "updated_at": "2020-04-02T11:46:31Z", "closed_at": "2020-04-02T11:46:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello:\r\n\r\nI'm having problems installing mod_wsgi on Apache. The idea is to include a file called mod_wsgi.so in apache/modules/ but all I find on the Internet are mod_wsgi folders containing several stuff but not a single one with .so extension. So happens with the \"pip\" command.\r\nSo any ideas of what should I do?\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1783", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1783/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1783/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1783/events", "html_url": "https://github.com/pallets/werkzeug/issues/1783", "id": 592565295, "node_id": "MDU6SXNzdWU1OTI1NjUyOTU=", "number": 1783, "title": "Mod_wsgi and Apache", "user": {"login": "Pablo-Marina", "id": 62334013, "node_id": "MDQ6VXNlcjYyMzM0MDEz", "avatar_url": "https://avatars0.githubusercontent.com/u/62334013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pablo-Marina", "html_url": "https://github.com/Pablo-Marina", "followers_url": "https://api.github.com/users/Pablo-Marina/followers", "following_url": "https://api.github.com/users/Pablo-Marina/following{/other_user}", "gists_url": "https://api.github.com/users/Pablo-Marina/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pablo-Marina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pablo-Marina/subscriptions", "organizations_url": "https://api.github.com/users/Pablo-Marina/orgs", "repos_url": "https://api.github.com/users/Pablo-Marina/repos", "events_url": "https://api.github.com/users/Pablo-Marina/events{/privacy}", "received_events_url": "https://api.github.com/users/Pablo-Marina/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-02T11:39:22Z", "updated_at": "2020-04-02T11:42:08Z", "closed_at": "2020-04-02T11:42:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello:\r\n\r\nI'm having problems installing mod_wsgi on Apache. The idea is to include a file called mod_wsgi.so in apache/modules/ but all I find on the Internet are mod_wsgi folders containing several stuff but not a single one with .so extension. So happens with the \"pip\" command.\r\nSo any ideas of what should I do?\r\nThank you!\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1781", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1781/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1781/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1781/events", "html_url": "https://github.com/pallets/werkzeug/issues/1781", "id": 590662782, "node_id": "MDU6SXNzdWU1OTA2NjI3ODI=", "number": 1781, "title": "REQUEST_URI should preserve the query string", "user": {"login": "fmang", "id": 1500359, "node_id": "MDQ6VXNlcjE1MDAzNTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1500359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmang", "html_url": "https://github.com/fmang", "followers_url": "https://api.github.com/users/fmang/followers", "following_url": "https://api.github.com/users/fmang/following{/other_user}", "gists_url": "https://api.github.com/users/fmang/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmang/subscriptions", "organizations_url": "https://api.github.com/users/fmang/orgs", "repos_url": "https://api.github.com/users/fmang/repos", "events_url": "https://api.github.com/users/fmang/events{/privacy}", "received_events_url": "https://api.github.com/users/fmang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/14", "html_url": "https://github.com/pallets/werkzeug/milestone/14", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/14/labels", "id": 5085882, "node_id": "MDk6TWlsZXN0b25lNTA4NTg4Mg==", "number": 14, "title": "2.0.0", "description": "", "creator": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "open_issues": 5, "closed_issues": 48, "state": "open", "created_at": "2020-02-09T21:53:29Z", "updated_at": "2020-08-13T18:59:12Z", "due_on": null, "closed_at": null}, "comments": 3, "created_at": "2020-03-30T23:17:12Z", "updated_at": "2020-06-20T14:57:34Z", "closed_at": "2020-06-20T14:57:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "REQUEST_URI was introduced by #1419: https://github.com/pallets/werkzeug/pull/1419/commits/7162f432417c5c0c25827eaa7367dfda7ee56d9c\r\n\r\nCurrently, Werkzeug strips the query string. While REQUEST_URI is not a standard variable, I believe the consensus is to include the query string. According to https://github.com/pallets/werkzeug/issues/766#issuecomment-441495490 that should have be the case for Werkzeug too.\r\n\r\nThat applies to RAW_URI too.\r\n\r\nIt\u2019s an edge case, but ideally empty query strings like in `/?` should be preserved too and not simplified to `/`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1779", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1779/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1779/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1779/events", "html_url": "https://github.com/pallets/werkzeug/issues/1779", "id": 589704266, "node_id": "MDU6SXNzdWU1ODk3MDQyNjY=", "number": 1779, "title": "SameSite option document is not updated", "user": {"login": "seanxlliu", "id": 9614433, "node_id": "MDQ6VXNlcjk2MTQ0MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/9614433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seanxlliu", "html_url": "https://github.com/seanxlliu", "followers_url": "https://api.github.com/users/seanxlliu/followers", "following_url": "https://api.github.com/users/seanxlliu/following{/other_user}", "gists_url": "https://api.github.com/users/seanxlliu/gists{/gist_id}", "starred_url": "https://api.github.com/users/seanxlliu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seanxlliu/subscriptions", "organizations_url": "https://api.github.com/users/seanxlliu/orgs", "repos_url": "https://api.github.com/users/seanxlliu/repos", "events_url": "https://api.github.com/users/seanxlliu/events{/privacy}", "received_events_url": "https://api.github.com/users/seanxlliu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-29T02:59:03Z", "updated_at": "2020-03-31T16:02:37Z", "closed_at": "2020-03-31T16:02:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "On the flask [document page](https://flask.palletsprojects.com/en/1.1.x/security/#set-cookie-options), it writes,\r\n\r\n_SameSite restricts how cookies are sent with requests from external sites. Can be set to 'Lax' (recommended) or 'Strict'. Lax prevents sending cookies with CSRF-prone requests from external sites, such as submitting a form. Strict prevents sending cookies with all external requests, including following regular links._\r\n\r\nHowever, it has supported `'None'` as a valid value.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1777", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1777/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1777/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1777/events", "html_url": "https://github.com/pallets/werkzeug/issues/1777", "id": 589532801, "node_id": "MDU6SXNzdWU1ODk1MzI4MDE=", "number": 1777, "title": "Support X-Forwarded-*", "user": {"login": "danny0838", "id": 531417, "node_id": "MDQ6VXNlcjUzMTQxNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/531417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danny0838", "html_url": "https://github.com/danny0838", "followers_url": "https://api.github.com/users/danny0838/followers", "following_url": "https://api.github.com/users/danny0838/following{/other_user}", "gists_url": "https://api.github.com/users/danny0838/gists{/gist_id}", "starred_url": "https://api.github.com/users/danny0838/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danny0838/subscriptions", "organizations_url": "https://api.github.com/users/danny0838/orgs", "repos_url": "https://api.github.com/users/danny0838/repos", "events_url": "https://api.github.com/users/danny0838/events{/privacy}", "received_events_url": "https://api.github.com/users/danny0838/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-28T08:22:59Z", "updated_at": "2020-03-30T04:52:23Z", "closed_at": "2020-03-28T10:16:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently `get_current_url` ignores the `X-Forwarded-Proto` even if set by the reverse proxy, causing `request.url` to have wrong scheme if the client requests `https` while the backend application is served under `http`.\r\n\r\nThis can be fixed by replacing `environ[\"wsgi.url_scheme\"]` to use `X-Forwarded-Proto` in precedence for `get_current_url`:\r\nhttps://github.com/pallets/werkzeug/blob/237b35a63631fda0fe80eb51dccdfe8a2f50d304/src/werkzeug/wsgi.py#L71\r\n\r\nFor reference: [Bottle](https://bottlepy.org/docs/dev/_modules/bottle.html#BaseRequest.urlparts)'s support for X-Forwarded-Proto.\r\n\r\nSimilarly, `X-Forwarded-Host` can be used in precedence of `HTTP_HOST`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1776", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1776/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1776/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1776/events", "html_url": "https://github.com/pallets/werkzeug/issues/1776", "id": 588828174, "node_id": "MDU6SXNzdWU1ODg4MjgxNzQ=", "number": 1776, "title": "ModuleNotFoundError with mod_wsgi", "user": {"login": "nikosft", "id": 2550499, "node_id": "MDQ6VXNlcjI1NTA0OTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/2550499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikosft", "html_url": "https://github.com/nikosft", "followers_url": "https://api.github.com/users/nikosft/followers", "following_url": "https://api.github.com/users/nikosft/following{/other_user}", "gists_url": "https://api.github.com/users/nikosft/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikosft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikosft/subscriptions", "organizations_url": "https://api.github.com/users/nikosft/orgs", "repos_url": "https://api.github.com/users/nikosft/repos", "events_url": "https://api.github.com/users/nikosft/events{/privacy}", "received_events_url": "https://api.github.com/users/nikosft/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-27T01:38:41Z", "updated_at": "2020-03-27T02:22:31Z", "closed_at": "2020-03-27T02:22:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "In Ubuntu 18.04, although my script was executed correctly using the command line, when using apache2 and mod_wsgi I was receiving the following error:\r\n\r\n`ModuleNotFoundError: No module named 'werkzeug'`\r\n\r\nIt turns our that pip installs modules locally for each user and I had to install the module using this command\r\n\r\n`sudo -H pip install Werkzeug`\r\n\r\nDoes this seem correct? If yes may be a note should be added in `https://github.com/pallets/werkzeug/blob/master/docs/deployment/mod_wsgi.rst`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1775", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1775/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1775/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1775/events", "html_url": "https://github.com/pallets/werkzeug/issues/1775", "id": 588154466, "node_id": "MDU6SXNzdWU1ODgxNTQ0NjY=", "number": 1775, "title": "Is there a plan to drop support for Python 3.5?", "user": {"login": "danny0838", "id": 531417, "node_id": "MDQ6VXNlcjUzMTQxNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/531417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danny0838", "html_url": "https://github.com/danny0838", "followers_url": "https://api.github.com/users/danny0838/followers", "following_url": "https://api.github.com/users/danny0838/following{/other_user}", "gists_url": "https://api.github.com/users/danny0838/gists{/gist_id}", "starred_url": "https://api.github.com/users/danny0838/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danny0838/subscriptions", "organizations_url": "https://api.github.com/users/danny0838/orgs", "repos_url": "https://api.github.com/users/danny0838/repos", "events_url": "https://api.github.com/users/danny0838/events{/privacy}", "received_events_url": "https://api.github.com/users/danny0838/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-26T04:53:51Z", "updated_at": "2020-03-26T12:39:31Z", "closed_at": "2020-03-26T12:39:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see a recent commit that replaces string with f-strings. As f-string is only supported since Python 3.6, does that mean the next release is dropping Python 3.5.*?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1771", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1771/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1771/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1771/events", "html_url": "https://github.com/pallets/werkzeug/issues/1771", "id": 585771676, "node_id": "MDU6SXNzdWU1ODU3NzE2NzY=", "number": 1771, "title": "High memory consumption uploading a file", "user": {"login": "robbitara", "id": 19875982, "node_id": "MDQ6VXNlcjE5ODc1OTgy", "avatar_url": "https://avatars1.githubusercontent.com/u/19875982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robbitara", "html_url": "https://github.com/robbitara", "followers_url": "https://api.github.com/users/robbitara/followers", "following_url": "https://api.github.com/users/robbitara/following{/other_user}", "gists_url": "https://api.github.com/users/robbitara/gists{/gist_id}", "starred_url": "https://api.github.com/users/robbitara/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robbitara/subscriptions", "organizations_url": "https://api.github.com/users/robbitara/orgs", "repos_url": "https://api.github.com/users/robbitara/repos", "events_url": "https://api.github.com/users/robbitara/events{/privacy}", "received_events_url": "https://api.github.com/users/robbitara/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-22T17:36:10Z", "updated_at": "2020-03-24T12:45:26Z", "closed_at": "2020-03-22T17:46:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have already read every issue about this, especially #1041 that seems the most similar to my case.\r\nThis is what I do:\r\n```python\r\nclass Uploadd(Resource):\r\n\r\n    def post(self):\r\n        \r\n        filename = request.headers['X-Content-Name']\r\n\r\n        with open('/home/roberto/upload/' + filename, 'ab') as file:\r\n            file.write(request.stream.read()) \r\n\r\n        return \"OK\"\r\n    \r\n    def get(self):\r\n        return \"GOOD\"\r\n```\r\nBasically I send a file splitted in chunks (20 MB each) from the browser with ES8 fetches.\r\nIn the request body I put the chunk and I set the content type to 'application/octet-stream'.\r\nServer side I do what you can see above, and what happens is that my memory buffer / cache grows exactly by the size of the file I upload. And this is bad, because uploading more than 2/3 files would fill the available memory. \r\nHere is a [video demostration](https://youtu.be/vAawXdx0trk) of the issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1761", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1761/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1761/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1761/events", "html_url": "https://github.com/pallets/werkzeug/issues/1761", "id": 581935073, "node_id": "MDU6SXNzdWU1ODE5MzUwNzM=", "number": 1761, "title": "deprecate utils.HTMLBuilder", "user": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/14", "html_url": "https://github.com/pallets/werkzeug/milestone/14", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/14/labels", "id": 5085882, "node_id": "MDk6TWlsZXN0b25lNTA4NTg4Mg==", "number": 14, "title": "2.0.0", "description": "", "creator": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "open_issues": 5, "closed_issues": 48, "state": "open", "created_at": "2020-02-09T21:53:29Z", "updated_at": "2020-08-13T18:59:12Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2020-03-16T02:11:07Z", "updated_at": "2020-04-12T19:21:54Z", "closed_at": "2020-04-12T19:21:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "There are dedicated template libraries like Jinja, or libraries that do this type of object-based markup generation (dominate, lxml, etree, etc.). Nothing in Werkzeug itself uses it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1759", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1759/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1759/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1759/events", "html_url": "https://github.com/pallets/werkzeug/issues/1759", "id": 581915480, "node_id": "MDU6SXNzdWU1ODE5MTU0ODA=", "number": 1759, "title": "deprecate posixemulation", "user": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/14", "html_url": "https://github.com/pallets/werkzeug/milestone/14", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/14/labels", "id": 5085882, "node_id": "MDk6TWlsZXN0b25lNTA4NTg4Mg==", "number": 14, "title": "2.0.0", "description": "", "creator": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "open_issues": 5, "closed_issues": 48, "state": "open", "created_at": "2020-02-09T21:53:29Z", "updated_at": "2020-08-13T18:59:12Z", "due_on": null, "closed_at": null}, "comments": 3, "created_at": "2020-03-16T01:22:06Z", "updated_at": "2020-06-28T00:47:08Z", "closed_at": "2020-06-28T00:47:08Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It's called out as \"not a public interface\" in the docstring, and looks like it was only there to support `contrib.sessions`, which has moved to `secure-cookie` now. Move it there if it's still needed, remove it here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1758", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1758/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1758/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1758/events", "html_url": "https://github.com/pallets/werkzeug/issues/1758", "id": 581914021, "node_id": "MDU6SXNzdWU1ODE5MTQwMjE=", "number": 1758, "title": "deprecate export of utils.escape/unescape", "user": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/14", "html_url": "https://github.com/pallets/werkzeug/milestone/14", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/14/labels", "id": 5085882, "node_id": "MDk6TWlsZXN0b25lNTA4NTg4Mg==", "number": 14, "title": "2.0.0", "description": "", "creator": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "open_issues": 5, "closed_issues": 48, "state": "open", "created_at": "2020-02-09T21:53:29Z", "updated_at": "2020-08-13T18:59:12Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2020-03-16T01:18:40Z", "updated_at": "2020-04-12T20:37:18Z", "closed_at": "2020-04-12T20:37:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "People should be using MarkupSafe instead. These utilities are here just to escape output in the debugger (and `utils.HTMLBuilder`, which should probably also be deprecated), where performance isn't really important. To keep them for internal use, rename them to `_internal._escape` and make `utils.escape` import that and show a deprecation warning pointing to MarkupSafe. Make sure to update use in the docs too.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1757", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1757/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1757/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1757/events", "html_url": "https://github.com/pallets/werkzeug/issues/1757", "id": 581910998, "node_id": "MDU6SXNzdWU1ODE5MTA5OTg=", "number": 1757, "title": "deprecate utils.validate/bind_arguments", "user": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/14", "html_url": "https://github.com/pallets/werkzeug/milestone/14", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/14/labels", "id": 5085882, "node_id": "MDk6TWlsZXN0b25lNTA4NTg4Mg==", "number": 14, "title": "2.0.0", "description": "", "creator": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "open_issues": 5, "closed_issues": 48, "state": "open", "created_at": "2020-02-09T21:53:29Z", "updated_at": "2020-08-13T18:59:12Z", "due_on": null, "closed_at": null}, "comments": 3, "created_at": "2020-03-16T01:11:23Z", "updated_at": "2020-04-12T19:09:30Z", "closed_at": "2020-04-12T19:09:30Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "All the functionality can be replaced with `inspect.signature` and `Signature.bind`. If we want to keep it, at least replace the implementation to use `inspect`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1756", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1756/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1756/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1756/events", "html_url": "https://github.com/pallets/werkzeug/issues/1756", "id": 581904239, "node_id": "MDU6SXNzdWU1ODE5MDQyMzk=", "number": 1756, "title": "deprecate utils.format_string", "user": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/14", "html_url": "https://github.com/pallets/werkzeug/milestone/14", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/14/labels", "id": 5085882, "node_id": "MDk6TWlsZXN0b25lNTA4NTg4Mg==", "number": 14, "title": "2.0.0", "description": "", "creator": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "open_issues": 5, "closed_issues": 48, "state": "open", "created_at": "2020-02-09T21:53:29Z", "updated_at": "2020-08-13T18:59:12Z", "due_on": null, "closed_at": null}, "comments": 3, "created_at": "2020-03-16T00:57:51Z", "updated_at": "2020-03-18T19:34:48Z", "closed_at": "2020-03-18T19:34:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It appears to do exactly what `string.Template` does.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1750", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1750/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1750/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1750/events", "html_url": "https://github.com/pallets/werkzeug/issues/1750", "id": 580491088, "node_id": "MDU6SXNzdWU1ODA0OTEwODg=", "number": 1750, "title": "Server is slow on IPV6 networks", "user": {"login": "galeej", "id": 16580471, "node_id": "MDQ6VXNlcjE2NTgwNDcx", "avatar_url": "https://avatars3.githubusercontent.com/u/16580471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/galeej", "html_url": "https://github.com/galeej", "followers_url": "https://api.github.com/users/galeej/followers", "following_url": "https://api.github.com/users/galeej/following{/other_user}", "gists_url": "https://api.github.com/users/galeej/gists{/gist_id}", "starred_url": "https://api.github.com/users/galeej/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/galeej/subscriptions", "organizations_url": "https://api.github.com/users/galeej/orgs", "repos_url": "https://api.github.com/users/galeej/repos", "events_url": "https://api.github.com/users/galeej/events{/privacy}", "received_events_url": "https://api.github.com/users/galeej/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-03-13T09:57:06Z", "updated_at": "2020-03-20T07:41:24Z", "closed_at": "2020-03-13T15:44:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nThe server runs extremely slowly on ipv6.\r\n\r\nWhile this was addressed in the documentation, none of them seem to work for us.\r\n\r\nHas this been resolved?\r\n\r\nWe are using 0.16.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1749", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1749/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1749/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1749/events", "html_url": "https://github.com/pallets/werkzeug/issues/1749", "id": 579982495, "node_id": "MDU6SXNzdWU1Nzk5ODI0OTU=", "number": 1749, "title": "Multiple Cookies on different subdomains breaks", "user": {"login": "Natim", "id": 229453, "node_id": "MDQ6VXNlcjIyOTQ1Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/229453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Natim", "html_url": "https://github.com/Natim", "followers_url": "https://api.github.com/users/Natim/followers", "following_url": "https://api.github.com/users/Natim/following{/other_user}", "gists_url": "https://api.github.com/users/Natim/gists{/gist_id}", "starred_url": "https://api.github.com/users/Natim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Natim/subscriptions", "organizations_url": "https://api.github.com/users/Natim/orgs", "repos_url": "https://api.github.com/users/Natim/repos", "events_url": "https://api.github.com/users/Natim/events{/privacy}", "received_events_url": "https://api.github.com/users/Natim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-12T14:32:14Z", "updated_at": "2020-03-12T15:06:03Z", "closed_at": "2020-03-12T14:43:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a cookie named `my_cookie` defined for the domain `.example.com` and one named `my_cookie` defined for the domain `.staging.example.com`.\r\n\r\nWhen connecting from `dashboard.staging.example.com` how can I tell that I want to get the cookie from `.staging.example.com` rather than `.example.com` ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1746", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1746/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1746/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1746/events", "html_url": "https://github.com/pallets/werkzeug/issues/1746", "id": 578932480, "node_id": "MDU6SXNzdWU1Nzg5MzI0ODA=", "number": 1746, "title": "Local variables not available in debug console in version 1.0", "user": {"login": "cgarrard", "id": 4453816, "node_id": "MDQ6VXNlcjQ0NTM4MTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/4453816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgarrard", "html_url": "https://github.com/cgarrard", "followers_url": "https://api.github.com/users/cgarrard/followers", "following_url": "https://api.github.com/users/cgarrard/following{/other_user}", "gists_url": "https://api.github.com/users/cgarrard/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgarrard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgarrard/subscriptions", "organizations_url": "https://api.github.com/users/cgarrard/orgs", "repos_url": "https://api.github.com/users/cgarrard/repos", "events_url": "https://api.github.com/users/cgarrard/events{/privacy}", "received_events_url": "https://api.github.com/users/cgarrard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/13", "html_url": "https://github.com/pallets/werkzeug/milestone/13", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/13/labels", "id": 5085721, "node_id": "MDk6TWlsZXN0b25lNTA4NTcyMQ==", "number": 13, "title": "1.0.1", "description": "", "creator": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 11, "state": "closed", "created_at": "2020-02-09T18:49:17Z", "updated_at": "2020-03-31T18:05:15Z", "due_on": null, "closed_at": "2020-03-31T18:05:15Z"}, "comments": 1, "created_at": "2020-03-11T00:14:13Z", "updated_at": "2020-03-17T18:10:41Z", "closed_at": "2020-03-13T17:21:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Take this simple script:\r\n\r\n```python\r\nfrom werkzeug.wrappers import Request, Response\r\n\r\nsome_global_variable = True\r\n\r\n@Request.application\r\ndef application(request):\r\n    msg = 'Hello, World!'\r\n    return Response(msg2)\r\n\r\nif __name__ == '__main__':\r\n    from werkzeug.serving import run_simple\r\n    run_simple('localhost', 4000, application,\r\n               use_reloader=True, use_debugger=True, use_evalex=True)\r\n```\r\n\r\nAs expected, the application crashes when it tries to create the response because `msg2` doesn't exist. With version 0.16.1 and Python 3.8, I can view the value of the `msg` variable in the debug console. But if I upgrade to version 1.0, `msg` is no longer defined. Global variables are available, however. Here's a screenshot:\r\n\r\n![image](https://user-images.githubusercontent.com/4453816/76369784-57a50500-62fa-11ea-97cf-98a0a65a44a4.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1742", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1742/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1742/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1742/events", "html_url": "https://github.com/pallets/werkzeug/issues/1742", "id": 572987421, "node_id": "MDU6SXNzdWU1NzI5ODc0MjE=", "number": 1742, "title": "Undocumented gen_salt?", "user": {"login": "holiveros", "id": 2380758, "node_id": "MDQ6VXNlcjIzODA3NTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/2380758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/holiveros", "html_url": "https://github.com/holiveros", "followers_url": "https://api.github.com/users/holiveros/followers", "following_url": "https://api.github.com/users/holiveros/following{/other_user}", "gists_url": "https://api.github.com/users/holiveros/gists{/gist_id}", "starred_url": "https://api.github.com/users/holiveros/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/holiveros/subscriptions", "organizations_url": "https://api.github.com/users/holiveros/orgs", "repos_url": "https://api.github.com/users/holiveros/repos", "events_url": "https://api.github.com/users/holiveros/events{/privacy}", "received_events_url": "https://api.github.com/users/holiveros/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-28T20:28:11Z", "updated_at": "2020-02-28T20:30:47Z", "closed_at": "2020-02-28T20:30:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Any reason why gen_salt() in werkzeug.security is undocumented?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1739", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1739/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1739/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1739/events", "html_url": "https://github.com/pallets/werkzeug/issues/1739", "id": 570660441, "node_id": "MDU6SXNzdWU1NzA2NjA0NDE=", "number": 1739, "title": "_dump_date year conversion doesn't zfill(4)", "user": {"login": "nicolary", "id": 3451652, "node_id": "MDQ6VXNlcjM0NTE2NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3451652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicolary", "html_url": "https://github.com/nicolary", "followers_url": "https://api.github.com/users/nicolary/followers", "following_url": "https://api.github.com/users/nicolary/following{/other_user}", "gists_url": "https://api.github.com/users/nicolary/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicolary/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicolary/subscriptions", "organizations_url": "https://api.github.com/users/nicolary/orgs", "repos_url": "https://api.github.com/users/nicolary/repos", "events_url": "https://api.github.com/users/nicolary/events{/privacy}", "received_events_url": "https://api.github.com/users/nicolary/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/13", "html_url": "https://github.com/pallets/werkzeug/milestone/13", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/13/labels", "id": 5085721, "node_id": "MDk6TWlsZXN0b25lNTA4NTcyMQ==", "number": 13, "title": "1.0.1", "description": "", "creator": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 11, "state": "closed", "created_at": "2020-02-09T18:49:17Z", "updated_at": "2020-03-31T18:05:15Z", "due_on": null, "closed_at": "2020-03-31T18:05:15Z"}, "comments": 4, "created_at": "2020-02-25T15:41:27Z", "updated_at": "2020-03-17T17:46:14Z", "closed_at": "2020-03-17T17:46:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have some dates that have a year before year 1000 and the _dump_date function doesn't represent them as zero filled to 4 so parsing the output with '%a, %d %b %Y %H:%M:%S %Z' throws an exception.\r\n\r\n```\r\nindex b428ceeb..d233d0f2 100644\r\n--- a/src/werkzeug/http.py\r\n+++ b/src/werkzeug/http.py\r\n@@ -882,7 +882,7 @@ def _dump_date(d, delim):\r\n             \"Dec\",\r\n         )[d.tm_mon - 1],\r\n         delim,\r\n-        str(d.tm_year),\r\n+        str(d.tm_year).zfill(4),\r\n         d.tm_hour,\r\n         d.tm_min,\r\n         d.tm_sec,\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1735", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1735/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1735/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1735/events", "html_url": "https://github.com/pallets/werkzeug/issues/1735", "id": 568478062, "node_id": "MDU6SXNzdWU1Njg0NzgwNjI=", "number": 1735, "title": "Outdated documentation of SharedDataMiddleware", "user": {"login": "magula", "id": 9037997, "node_id": "MDQ6VXNlcjkwMzc5OTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/9037997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magula", "html_url": "https://github.com/magula", "followers_url": "https://api.github.com/users/magula/followers", "following_url": "https://api.github.com/users/magula/following{/other_user}", "gists_url": "https://api.github.com/users/magula/gists{/gist_id}", "starred_url": "https://api.github.com/users/magula/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magula/subscriptions", "organizations_url": "https://api.github.com/users/magula/orgs", "repos_url": "https://api.github.com/users/magula/repos", "events_url": "https://api.github.com/users/magula/events{/privacy}", "received_events_url": "https://api.github.com/users/magula/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 123875538, "node_id": "MDU6TGFiZWwxMjM4NzU1Mzg=", "url": "https://api.github.com/repos/pallets/werkzeug/labels/docs", "name": "docs", "color": "fef2c0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-20T18:07:03Z", "updated_at": "2020-02-20T18:55:11Z", "closed_at": "2020-02-20T18:55:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems that `SharedDataMiddleware` was moved to `middleware.shared_data`, but its documentation still says\r\n\r\n```\r\n    \"\"\"A WSGI middleware that provides static content for development\r\n    environments or simple server setups. Usage is quite simple::\r\n        import os\r\n        from werkzeug.wsgi import SharedDataMiddleware\r\n[...]\r\n    \"\"\"\r\n```\r\nand the [tutorial](https://werkzeug.palletsprojects.com/en/1.0.x/tutorial/?highlight=shareddatamiddleware#step-2-the-base-structure) still says\r\n`from werkzeug.wsgi import SharedDataMiddleware`.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1733", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1733/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1733/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1733/events", "html_url": "https://github.com/pallets/werkzeug/issues/1733", "id": 565629909, "node_id": "MDU6SXNzdWU1NjU2Mjk5MDk=", "number": 1733, "title": "Change in 1.0.0 to add pathlib support for `.save()` breaks usage of `io.BytesIO`", "user": {"login": "acaos", "id": 295044, "node_id": "MDQ6VXNlcjI5NTA0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/295044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acaos", "html_url": "https://github.com/acaos", "followers_url": "https://api.github.com/users/acaos/followers", "following_url": "https://api.github.com/users/acaos/following{/other_user}", "gists_url": "https://api.github.com/users/acaos/gists{/gist_id}", "starred_url": "https://api.github.com/users/acaos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acaos/subscriptions", "organizations_url": "https://api.github.com/users/acaos/orgs", "repos_url": "https://api.github.com/users/acaos/repos", "events_url": "https://api.github.com/users/acaos/events{/privacy}", "received_events_url": "https://api.github.com/users/acaos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 123868513, "node_id": "MDU6TGFiZWwxMjM4Njg1MTM=", "url": "https://api.github.com/repos/pallets/werkzeug/labels/bug", "name": "bug", "color": "bc2b39", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/13", "html_url": "https://github.com/pallets/werkzeug/milestone/13", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/13/labels", "id": 5085721, "node_id": "MDk6TWlsZXN0b25lNTA4NTcyMQ==", "number": 13, "title": "1.0.1", "description": "", "creator": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 11, "state": "closed", "created_at": "2020-02-09T18:49:17Z", "updated_at": "2020-03-31T18:05:15Z", "due_on": null, "closed_at": "2020-03-31T18:05:15Z"}, "comments": 3, "created_at": "2020-02-15T00:42:20Z", "updated_at": "2020-03-17T19:51:32Z", "closed_at": "2020-03-17T19:51:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Versions\r\n\r\n* Python 3.7\r\n* Werkzeug 1.0.0 (from PyPI)\r\n\r\n## Report\r\n\r\nThe addition of pathlib support to `.save()` from #1654 breaks the the ability to pass `io.BytesIO` objects to `.save()`.\r\n\r\nPrevious behavior: Saving to an `io.BytesIO` object worked as expected.\r\nBehavior in 1.0.0: An exception is thrown in `fspath()`.\r\n\r\n```\r\n  File \"/app/main.py\", line 310, in extract_metadata\r\n    files['metadata'].save(metadata_io)\r\n  File \"/app/.venv/lib/python3.7/site-packages/werkzeug/datastructures.py\", line 3061, in save\r\n    dst = fspath(dst)\r\nTypeError: expected str, bytes or os.PathLike object, not _io.BytesIO\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1732", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1732/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1732/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1732/events", "html_url": "https://github.com/pallets/werkzeug/issues/1732", "id": 565150635, "node_id": "MDU6SXNzdWU1NjUxNTA2MzU=", "number": 1732, "title": "cannot import name 'url_quote'", "user": {"login": "aman101097", "id": 58933394, "node_id": "MDQ6VXNlcjU4OTMzMzk0", "avatar_url": "https://avatars0.githubusercontent.com/u/58933394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aman101097", "html_url": "https://github.com/aman101097", "followers_url": "https://api.github.com/users/aman101097/followers", "following_url": "https://api.github.com/users/aman101097/following{/other_user}", "gists_url": "https://api.github.com/users/aman101097/gists{/gist_id}", "starred_url": "https://api.github.com/users/aman101097/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aman101097/subscriptions", "organizations_url": "https://api.github.com/users/aman101097/orgs", "repos_url": "https://api.github.com/users/aman101097/repos", "events_url": "https://api.github.com/users/aman101097/events{/privacy}", "received_events_url": "https://api.github.com/users/aman101097/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-14T07:21:23Z", "updated_at": "2020-02-14T07:41:53Z", "closed_at": "2020-02-14T07:28:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1727", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1727/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1727/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1727/events", "html_url": "https://github.com/pallets/werkzeug/issues/1727", "id": 562785900, "node_id": "MDU6SXNzdWU1NjI3ODU5MDA=", "number": 1727, "title": "Pytest fails due to missing dependency", "user": {"login": "lathamfell", "id": 8699195, "node_id": "MDQ6VXNlcjg2OTkxOTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8699195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lathamfell", "html_url": "https://github.com/lathamfell", "followers_url": "https://api.github.com/users/lathamfell/followers", "following_url": "https://api.github.com/users/lathamfell/following{/other_user}", "gists_url": "https://api.github.com/users/lathamfell/gists{/gist_id}", "starred_url": "https://api.github.com/users/lathamfell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lathamfell/subscriptions", "organizations_url": "https://api.github.com/users/lathamfell/orgs", "repos_url": "https://api.github.com/users/lathamfell/repos", "events_url": "https://api.github.com/users/lathamfell/events{/privacy}", "received_events_url": "https://api.github.com/users/lathamfell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-10T19:46:47Z", "updated_at": "2020-02-10T21:45:42Z", "closed_at": "2020-02-10T21:45:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Reproduction:\r\n\r\nActivate virtualenv and execute `pytest` \r\n\r\nExpected result:\r\nTests are run\r\n\r\nActual result:\r\n```(env) :~/git/werkzeug[master ?]\ud83d\ude42 pytest\r\n========================= test session starts ==========================\r\nplatform darwin -- Python 3.6.8, pytest-5.3.2, py-1.8.0, pluggy-0.13.0\r\nrootdir: /Users/latham/git/werkzeug, inifile: setup.cfg, testpaths: tests\r\nplugins: mock-1.11.2, cov-2.8.1\r\ncollected 563 items / 1 error / 562 selected                           \r\n\r\n================================ ERRORS ================================\r\n_________________ ERROR collecting tests/test_debug.py _________________\r\ntests/test_debug.py:372: in <module>\r\n    @pytest.mark.timeout(2)\r\n../../Library/Python/3.6/lib/python/site-packages/_pytest/mark/structures.py:327: in __getattr__\r\n    PytestUnknownMarkWarning,\r\nE   pytest.PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/latest/mark.html\r\n!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!\r\n=========================== 1 error in 1.60s ===========================```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1724", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1724/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1724/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1724/events", "html_url": "https://github.com/pallets/werkzeug/issues/1724", "id": 562118839, "node_id": "MDU6SXNzdWU1NjIxMTg4Mzk=", "number": 1724, "title": "werkzeug fails to import secure_filename within Docker", "user": {"login": "ideaman924", "id": 13326074, "node_id": "MDQ6VXNlcjEzMzI2MDc0", "avatar_url": "https://avatars0.githubusercontent.com/u/13326074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ideaman924", "html_url": "https://github.com/ideaman924", "followers_url": "https://api.github.com/users/ideaman924/followers", "following_url": "https://api.github.com/users/ideaman924/following{/other_user}", "gists_url": "https://api.github.com/users/ideaman924/gists{/gist_id}", "starred_url": "https://api.github.com/users/ideaman924/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ideaman924/subscriptions", "organizations_url": "https://api.github.com/users/ideaman924/orgs", "repos_url": "https://api.github.com/users/ideaman924/repos", "events_url": "https://api.github.com/users/ideaman924/events{/privacy}", "received_events_url": "https://api.github.com/users/ideaman924/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-09T04:12:42Z", "updated_at": "2020-05-03T18:24:02Z", "closed_at": "2020-02-09T04:18:09Z", "author_association": "NONE", "active_lock_reason": "resolved", "body": "I have a Flask application that depends on `flask-uploads`, which in turn depends on `werkzeug`. When I run my Flask application outside of Docker it runs fine. However, if I use Docker Compose to build my application, the following error occurs:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"db_setup.py\", line 1, in <module>\r\n    from app import db\r\n  File \"/usr/src/app/app.py\", line 6, in <module>\r\n    from flask_uploads import UploadSet, configure_uploads\r\n  File \"/usr/local/lib/python3.8/site-packages/flask_uploads.py\", line 26, in <module>\r\n    from werkzeug import secure_filename, FileStorage\r\nImportError: cannot import name 'secure_filename' from 'werkzeug' (/usr/local/lib/python3.8/site-packages/werkzeug/__init__.py)\r\n```\r\n\r\nAny idea what is going on? This only happens within Docker, so I think it may be an environment problem. Thanks in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1720", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1720/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1720/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1720/events", "html_url": "https://github.com/pallets/werkzeug/issues/1720", "id": 561895544, "node_id": "MDU6SXNzdWU1NjE4OTU1NDQ=", "number": 1720, "title": "Adhoc ssl subject altName", "user": {"login": "mrichar1", "id": 478653, "node_id": "MDQ6VXNlcjQ3ODY1Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/478653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrichar1", "html_url": "https://github.com/mrichar1", "followers_url": "https://api.github.com/users/mrichar1/followers", "following_url": "https://api.github.com/users/mrichar1/following{/other_user}", "gists_url": "https://api.github.com/users/mrichar1/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrichar1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrichar1/subscriptions", "organizations_url": "https://api.github.com/users/mrichar1/orgs", "repos_url": "https://api.github.com/users/mrichar1/repos", "events_url": "https://api.github.com/users/mrichar1/events{/privacy}", "received_events_url": "https://api.github.com/users/mrichar1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-07T22:04:15Z", "updated_at": "2020-03-31T16:30:28Z", "closed_at": "2020-03-31T16:30:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Recent versions of Chrome seem to be dislike certificates that are missing or have unusual subjectAltName fields, giving the error:\r\n\r\n> This server could not prove that it is <name> its security certificate is from [missing_subjectAltName]\r\n\r\nLooking at the code in `generate_adhoc_ssl_pair` it seems to have the subjectAltName hard-coded to `*`:\r\n\r\nhttps://github.com/pallets/werkzeug/blob/master/src/werkzeug/serving.py#L538\r\n\r\nWould it make more sense for this to match the value of the  `cn` parameter (which will be `*` if unset anyway) ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1718", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1718/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1718/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1718/events", "html_url": "https://github.com/pallets/werkzeug/issues/1718", "id": 561574311, "node_id": "MDU6SXNzdWU1NjE1NzQzMTE=", "number": 1718, "title": "routing.RequestRedirect.get_response : environ parameter is required", "user": {"login": "Nurbel", "id": 7353807, "node_id": "MDQ6VXNlcjczNTM4MDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7353807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nurbel", "html_url": "https://github.com/Nurbel", "followers_url": "https://api.github.com/users/Nurbel/followers", "following_url": "https://api.github.com/users/Nurbel/following{/other_user}", "gists_url": "https://api.github.com/users/Nurbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nurbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nurbel/subscriptions", "organizations_url": "https://api.github.com/users/Nurbel/orgs", "repos_url": "https://api.github.com/users/Nurbel/repos", "events_url": "https://api.github.com/users/Nurbel/events{/privacy}", "received_events_url": "https://api.github.com/users/Nurbel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/13", "html_url": "https://github.com/pallets/werkzeug/milestone/13", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/13/labels", "id": 5085721, "node_id": "MDk6TWlsZXN0b25lNTA4NTcyMQ==", "number": 13, "title": "1.0.1", "description": "", "creator": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 11, "state": "closed", "created_at": "2020-02-09T18:49:17Z", "updated_at": "2020-03-31T18:05:15Z", "due_on": null, "closed_at": "2020-03-31T18:05:15Z"}, "comments": 1, "created_at": "2020-02-07T11:13:36Z", "updated_at": "2020-02-09T18:55:52Z", "closed_at": "2020-02-09T18:55:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried out the generic HTTPException handler described in:\r\n https://flask.palletsprojects.com/en/1.1.x/errorhandling/#generic-exception-handlers\r\n\r\nthis handler calls get_response() without parameter on the error, but it breaks on a RequestRedirect as the environ parameter is required.\r\n\r\nIs there a reason why RequestRedirect does not conform to the HTTPException signature for get_response ?\r\n\r\nI think \r\n```    \r\ndef get_response(self, environ):\r\n    return redirect(self.new_url, self.code)\r\n```\r\nshould be replaced by \r\n```    \r\ndef get_response(self, environ=None):\r\n    return redirect(self.new_url, self.code)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1717", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1717/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1717/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1717/events", "html_url": "https://github.com/pallets/werkzeug/issues/1717", "id": 561520398, "node_id": "MDU6SXNzdWU1NjE1MjAzOTg=", "number": 1717, "title": "Problem with import cached_property", "user": {"login": "Cheban1996", "id": 11075696, "node_id": "MDQ6VXNlcjExMDc1Njk2", "avatar_url": "https://avatars0.githubusercontent.com/u/11075696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cheban1996", "html_url": "https://github.com/Cheban1996", "followers_url": "https://api.github.com/users/Cheban1996/followers", "following_url": "https://api.github.com/users/Cheban1996/following{/other_user}", "gists_url": "https://api.github.com/users/Cheban1996/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cheban1996/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cheban1996/subscriptions", "organizations_url": "https://api.github.com/users/Cheban1996/orgs", "repos_url": "https://api.github.com/users/Cheban1996/repos", "events_url": "https://api.github.com/users/Cheban1996/events{/privacy}", "received_events_url": "https://api.github.com/users/Cheban1996/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-07T09:31:31Z", "updated_at": "2020-02-07T09:33:09Z", "closed_at": "2020-02-07T09:33:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,  gues. I have trable with next problem from import\r\n```File \"/usr/lib/python3.7/site-packages/flask_restplus/__init__.py\", line 4, in <module>\r\n    from . import fields, reqparse, apidoc, inputs, cors\r\n  File \"/usr/lib/python3.7/site-packages/flask_restplus/fields.py\", line 13, in <module>\r\n    from werkzeug import cached_property\r\nImportError: cannot import name 'cached_property' from 'werkzeug' (/usr/lib/python3.7/site-packages/werkzeug/__init__.py)\r\n```\r\n\r\nVesion flask==1.1.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1716", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1716/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1716/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1716/events", "html_url": "https://github.com/pallets/werkzeug/issues/1716", "id": 561358340, "node_id": "MDU6SXNzdWU1NjEzNTgzNDA=", "number": 1716, "title": "Adding watchdog dependency breaks file watching on Windows", "user": {"login": "mburszley", "id": 25436433, "node_id": "MDQ6VXNlcjI1NDM2NDMz", "avatar_url": "https://avatars0.githubusercontent.com/u/25436433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mburszley", "html_url": "https://github.com/mburszley", "followers_url": "https://api.github.com/users/mburszley/followers", "following_url": "https://api.github.com/users/mburszley/following{/other_user}", "gists_url": "https://api.github.com/users/mburszley/gists{/gist_id}", "starred_url": "https://api.github.com/users/mburszley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mburszley/subscriptions", "organizations_url": "https://api.github.com/users/mburszley/orgs", "repos_url": "https://api.github.com/users/mburszley/repos", "events_url": "https://api.github.com/users/mburszley/events{/privacy}", "received_events_url": "https://api.github.com/users/mburszley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-07T00:57:41Z", "updated_at": "2020-02-10T18:59:19Z", "closed_at": "2020-02-07T03:29:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've tested this on Win7 Ent & Win10 Pro 1909.  Adding `Werkzeug[watchdog]` breaks Flask's reloader entirely.  I figured this is the best place for the issue since this is where I found documentation on the matter.  The `stat` reloader works as expected.\r\n\r\nVersions:\r\n* py 3.6 & 3.8\r\n* watchdog-0.9.0 (tried 0.10.1 as well)\r\n* flask-1.1.1\r\n* werkzeug-0.16.1 (tried 1.0.0 here, too)\r\n\r\nA quick repro:\r\n\r\n```bash\r\npip install flask werkzeug[watchdog]\r\n```\r\n\r\n*app.py*\r\n\r\n```python\r\nimport flask\r\ndef create_app():\r\n    return flask.Flask('test')\r\n```\r\n\r\n```bash\r\nSET \"FLASK_ENV=development\"\r\nflask run\r\n```\r\n\r\nUninstall `watchdog` immediately remediates the issue as it falls back to `stat`.  I've attempted launching flask with both the entry `flask.exe` and `python -m flask run` (both from a virtual environment).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1715", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1715/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1715/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1715/events", "html_url": "https://github.com/pallets/werkzeug/issues/1715", "id": 561312774, "node_id": "MDU6SXNzdWU1NjEzMTI3NzQ=", "number": 1715, "title": "Werkzeug 1.0.0 breaks flask dependecy", "user": {"login": "satshabad-cr", "id": 45502068, "node_id": "MDQ6VXNlcjQ1NTAyMDY4", "avatar_url": "https://avatars0.githubusercontent.com/u/45502068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/satshabad-cr", "html_url": "https://github.com/satshabad-cr", "followers_url": "https://api.github.com/users/satshabad-cr/followers", "following_url": "https://api.github.com/users/satshabad-cr/following{/other_user}", "gists_url": "https://api.github.com/users/satshabad-cr/gists{/gist_id}", "starred_url": "https://api.github.com/users/satshabad-cr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/satshabad-cr/subscriptions", "organizations_url": "https://api.github.com/users/satshabad-cr/orgs", "repos_url": "https://api.github.com/users/satshabad-cr/repos", "events_url": "https://api.github.com/users/satshabad-cr/events{/privacy}", "received_events_url": "https://api.github.com/users/satshabad-cr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-06T22:41:01Z", "updated_at": "2020-02-06T22:42:33Z", "closed_at": "2020-02-06T22:42:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "The recent release of 1.0.0 seems to break with flask, is that intended?\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"run_www.py\", line 4, in <module>\r\n    from www.entry import app\r\n  File \"/app/www/entry.py\", line 110, in <module>\r\n    import www.views.admin  # noqa\r\n  File \"/app/www/views/admin.py\", line 5, in <module>\r\n    from flask_admin.contrib.sqla import ModelView\r\n  File \"/usr/local/lib/python3.8/site-packages/flask_admin/contrib/sqla/__init__.py\", line 2, in <module>\r\n    from .view import ModelView\r\n  File \"/usr/local/lib/python3.8/site-packages/flask_admin/contrib/sqla/view.py\", line 19, in <module>\r\n    from flask_admin.model import BaseModelView\r\n  File \"/usr/local/lib/python3.8/site-packages/flask_admin/model/__init__.py\", line 2, in <module>\r\n    from .base import BaseModelView\r\n  File \"/usr/local/lib/python3.8/site-packages/flask_admin/model/base.py\", line 8, in <module>\r\n    from werkzeug import secure_filename\r\nImportError: cannot import name 'secure_filename' from 'werkzeug' (/usr/local/lib/python3.8/site-packages/werkzeug/__init__.py)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1710", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1710/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1710/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1710/events", "html_url": "https://github.com/pallets/werkzeug/issues/1710", "id": 560633838, "node_id": "MDU6SXNzdWU1NjA2MzM4Mzg=", "number": 1710, "title": "Version 0.16.1 removed top level imports before planned?", "user": {"login": "jameswilliams1", "id": 33026008, "node_id": "MDQ6VXNlcjMzMDI2MDA4", "avatar_url": "https://avatars1.githubusercontent.com/u/33026008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jameswilliams1", "html_url": "https://github.com/jameswilliams1", "followers_url": "https://api.github.com/users/jameswilliams1/followers", "following_url": "https://api.github.com/users/jameswilliams1/following{/other_user}", "gists_url": "https://api.github.com/users/jameswilliams1/gists{/gist_id}", "starred_url": "https://api.github.com/users/jameswilliams1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jameswilliams1/subscriptions", "organizations_url": "https://api.github.com/users/jameswilliams1/orgs", "repos_url": "https://api.github.com/users/jameswilliams1/repos", "events_url": "https://api.github.com/users/jameswilliams1/events{/privacy}", "received_events_url": "https://api.github.com/users/jameswilliams1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-05T21:17:23Z", "updated_at": "2020-02-05T22:09:34Z", "closed_at": "2020-02-05T22:05:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been having issues with django-extensions after doing an update today and I finally found the issue is that Werkzeug has dropped some top level imports that were deprecated (but scheduled for removal in 1.0.0) in the move from 0.16.0->0.16.1. In this case `from werkzeug import DebuggedApplication` now doesn't work.\r\n\r\nNow I get using this is deprecated, but if you're following semantic versioning then a move of 0.0.1 shouldn't change behaviour like this as other packages are now broken. When doing this import the warning gives \r\n```\r\nDeprecationWarning: The import 'werkzeug.DebuggedApplication' is deprecated and will be removed in Werkzeug 1.0. Use 'from werkzeug.debug import DebuggedApplication' instead.\r\n```\r\nso I think this sudden change may have caught a few people off guard who thought they had time before they needed to switch.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1706", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1706/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1706/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1706/events", "html_url": "https://github.com/pallets/werkzeug/issues/1706", "id": 555295573, "node_id": "MDU6SXNzdWU1NTUyOTU1NzM=", "number": 1706, "title": "fallback:<coding> error handler documented, but not present", "user": {"login": "ThomasWaldmann", "id": 356103, "node_id": "MDQ6VXNlcjM1NjEwMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/356103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThomasWaldmann", "html_url": "https://github.com/ThomasWaldmann", "followers_url": "https://api.github.com/users/ThomasWaldmann/followers", "following_url": "https://api.github.com/users/ThomasWaldmann/following{/other_user}", "gists_url": "https://api.github.com/users/ThomasWaldmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThomasWaldmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThomasWaldmann/subscriptions", "organizations_url": "https://api.github.com/users/ThomasWaldmann/orgs", "repos_url": "https://api.github.com/users/ThomasWaldmann/repos", "events_url": "https://api.github.com/users/ThomasWaldmann/events{/privacy}", "received_events_url": "https://api.github.com/users/ThomasWaldmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 123875538, "node_id": "MDU6TGFiZWwxMjM4NzU1Mzg=", "url": "https://api.github.com/repos/pallets/werkzeug/labels/docs", "name": "docs", "color": "fef2c0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-26T22:10:58Z", "updated_at": "2020-01-27T20:13:14Z", "closed_at": "2020-01-26T23:35:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See there https://werkzeug.palletsprojects.com/en/0.16.x/unicode/#error-handling for:\r\n```\r\nThere is additional error handling available which is a Werkzeug extension\r\nto the regular codec error handling which is called fallback.\r\nOften you want to use utf-8 but support latin1 as legacy encoding too\r\nif decoding failed. For this case you can use the fallback error handling.\r\n\r\nFor example you can specify 'fallback:iso-8859-15' to tell Werkzeug it\r\nshould try with iso-8859-15 if utf-8 failed. If this decoding fails too (which\r\nshould not happen for most legacy charsets such as iso-8859-15) the error\r\nis silently ignored as if the error handling was ignore.\r\n```\r\n\r\nActual behavior:\r\n\r\n```\r\n>>> werkzeug.url_unquote('%fcbel', errors='fallback:iso-8859-1')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"werkzeug/urls.py\", line 610, in url_unquote\r\n    rv = rv.decode(charset, errors)\r\n  File \"/home/user/.pyenv/versions/2.7.15/lib/python2.7/encodings/utf_8.py\", line 16, in decode\r\n    return codecs.utf_8_decode(input, errors, True)\r\nLookupError: unknown error handler name 'fallback:iso-8859-1'\r\n\r\n>>> werkzeug.__version__\r\n'0.15.6'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1704", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1704/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1704/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1704/events", "html_url": "https://github.com/pallets/werkzeug/issues/1704", "id": 554907795, "node_id": "MDU6SXNzdWU1NTQ5MDc3OTU=", "number": 1704, "title": "make_conditional(..., accept_ranges=True) respond range request with 200 OK", "user": {"login": "Kontinuation", "id": 5501374, "node_id": "MDQ6VXNlcjU1MDEzNzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5501374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kontinuation", "html_url": "https://github.com/Kontinuation", "followers_url": "https://api.github.com/users/Kontinuation/followers", "following_url": "https://api.github.com/users/Kontinuation/following{/other_user}", "gists_url": "https://api.github.com/users/Kontinuation/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kontinuation/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kontinuation/subscriptions", "organizations_url": "https://api.github.com/users/Kontinuation/orgs", "repos_url": "https://api.github.com/users/Kontinuation/repos", "events_url": "https://api.github.com/users/Kontinuation/events{/privacy}", "received_events_url": "https://api.github.com/users/Kontinuation/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 141452010, "node_id": "MDU6TGFiZWwxNDE0NTIwMTA=", "url": "https://api.github.com/repos/pallets/werkzeug/labels/standards", "name": "standards", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/1", "html_url": "https://github.com/pallets/werkzeug/milestone/1", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/1/labels", "id": 764000, "node_id": "MDk6TWlsZXN0b25lNzY0MDAw", "number": 1, "title": "1.0.0", "description": "", "creator": {"login": "untitaker", "id": 837573, "node_id": "MDQ6VXNlcjgzNzU3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/untitaker", "html_url": "https://github.com/untitaker", "followers_url": "https://api.github.com/users/untitaker/followers", "following_url": "https://api.github.com/users/untitaker/following{/other_user}", "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions", "organizations_url": "https://api.github.com/users/untitaker/orgs", "repos_url": "https://api.github.com/users/untitaker/repos", "events_url": "https://api.github.com/users/untitaker/events{/privacy}", "received_events_url": "https://api.github.com/users/untitaker/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 78, "state": "closed", "created_at": "2014-08-24T22:39:25Z", "updated_at": "2020-02-09T18:49:49Z", "due_on": null, "closed_at": "2020-02-09T18:49:49Z"}, "comments": 6, "created_at": "2020-01-24T19:16:51Z", "updated_at": "2020-02-06T13:08:29Z", "closed_at": "2020-02-06T04:26:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\n\r\n`make_conditional(request_or_environ, accept_ranges=True)` responds range requests with `206 Partial Content` when the request does not fetch the entire content, which is fine; when the range specified in the request covers the entire content, the server respond with `200 OK`, which may cause various problems.\r\n\r\n## Expected Behavior\r\n\r\nServer should respond with `206 Partial Content` in case of a successful range request, regardless of whether the requested range covers the entire content or not. Responding with `200 OK` indicates that the server has ignored the range header, thus client might consider that the server does not support range requests, which is not feasible when `accept_ranges` was specified as `True`.\r\n\r\n## Impact\r\n\r\nHTML5 video playbacks on old versions of safari (<= 12) does not work due to this problem, since safari has been strict in checking the status code of range requests. Request with `Range: bytes=0-` was responded with `200 OK` where `206 Partial Content` was expected. After patching the `ETagResponseMixin._process_range_request()` method to make it always respond with `206 Partial Content`, the video playback worked properly.\r\n\r\n## Behavior of other webservers\r\n\r\n* Web Servers: Both Nginx/1.14.0 and Apache/2.4.29 respond `Range: bytes=0-` with `206 Partial Content`.\r\n* Object Stores: Both Amazon S3 and Baidu's BOS respond `Range: bytes=0-` with `206 Partial Content`.\r\n\r\n## Possible Solution\r\n\r\nMaybe we could remove the special treatment for the `content_length != complete_length` case in  `_process_range_request` method defined in `werkzeug/wrappers/etag.py`. I am not familiar with the codebase so I'd like to wait for professionals to come up with a correct fix.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1703", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1703/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1703/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1703/events", "html_url": "https://github.com/pallets/werkzeug/issues/1703", "id": 553774654, "node_id": "MDU6SXNzdWU1NTM3NzQ2NTQ=", "number": 1703, "title": "POST request freezes up and crashes when Content-Length and no body", "user": {"login": "dpatz", "id": 1715091, "node_id": "MDQ6VXNlcjE3MTUwOTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1715091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpatz", "html_url": "https://github.com/dpatz", "followers_url": "https://api.github.com/users/dpatz/followers", "following_url": "https://api.github.com/users/dpatz/following{/other_user}", "gists_url": "https://api.github.com/users/dpatz/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpatz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpatz/subscriptions", "organizations_url": "https://api.github.com/users/dpatz/orgs", "repos_url": "https://api.github.com/users/dpatz/repos", "events_url": "https://api.github.com/users/dpatz/events{/privacy}", "received_events_url": "https://api.github.com/users/dpatz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-22T20:27:36Z", "updated_at": "2020-01-24T03:48:47Z", "closed_at": "2020-01-22T21:07:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "For some reason, I occasionally receive requests from the browser with a `Content-Length` set but with no body. When this happens the request just freezes (and eventually, on my server, gunicorn kills it). Is there something I can do or a setting I can change to prevent this from happening?\r\n\r\nHere is a simple app with the same problem:\r\n```\r\nfrom flask import Flask, request\r\n\r\n\r\napp = Flask(__name__)\r\n\r\n\r\n@app.route('/', methods=['POST'])\r\ndef hello_world():\r\n    print(request.json)\r\n    return 'Hello World!'\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run(debug=True)\r\n```\r\n\r\nThis POST request will break it:\r\n`curl -X POST -H \"Content-Length: 94\" -H \"Content-Type: application/json; charset=utf-8\" http://localhost:5000`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1695", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1695/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1695/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1695/events", "html_url": "https://github.com/pallets/werkzeug/issues/1695", "id": 546417742, "node_id": "MDU6SXNzdWU1NDY0MTc3NDI=", "number": 1695, "title": "test_windows_get_args_for_reloading fails when run with python -m pytest", "user": {"login": "frenzymadness", "id": 5688939, "node_id": "MDQ6VXNlcjU2ODg5Mzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5688939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frenzymadness", "html_url": "https://github.com/frenzymadness", "followers_url": "https://api.github.com/users/frenzymadness/followers", "following_url": "https://api.github.com/users/frenzymadness/following{/other_user}", "gists_url": "https://api.github.com/users/frenzymadness/gists{/gist_id}", "starred_url": "https://api.github.com/users/frenzymadness/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frenzymadness/subscriptions", "organizations_url": "https://api.github.com/users/frenzymadness/orgs", "repos_url": "https://api.github.com/users/frenzymadness/repos", "events_url": "https://api.github.com/users/frenzymadness/events{/privacy}", "received_events_url": "https://api.github.com/users/frenzymadness/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-07T17:41:46Z", "updated_at": "2020-01-08T07:06:56Z", "closed_at": "2020-01-07T17:47:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello.\r\n\r\n`test_windows_get_args_for_reloading` fails when the test suite is executed with `python3 -m pytest` instead of just `pytest` which I think is incorrect.\r\n\r\n```\r\n$ python3 -m pytest -vv test_serving.py\r\n\u2026\r\n================================== FAILURES ===================================\r\n_____________________ test_windows_get_args_for_reloading _____________________\r\n\r\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f105e0ecd60>\r\ntmpdir = local('/tmp/pytest-of-lbalhar/pytest-4/test_windows_get_args_for_relo0')\r\n\r\n    def test_windows_get_args_for_reloading(monkeypatch, tmpdir):\r\n        test_py_exe = r\"C:\\Users\\test\\AppData\\Local\\Programs\\Python\\Python36\\python.exe\"\r\n        monkeypatch.setattr(os, \"name\", \"nt\")\r\n        monkeypatch.setattr(sys, \"executable\", test_py_exe)\r\n        test_exe = tmpdir.mkdir(\"test\").join(\"test.exe\")\r\n        monkeypatch.setattr(sys, \"argv\", [test_exe.strpath, \"run\"])\r\n        rv = _reloader._get_args_for_reloading()\r\n>       assert rv == [test_exe.strpath, \"run\"]\r\nE       AssertionError: assert ['C:\\\\Users\\\\test\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python36\\\\python.exe',\\n '-m',\\n '/tmp/pytest-of-lbalhar/pytest-4/test_windows_get_args_for_relo0/test/test.exe',\\n 'run'] == ['/tmp/pytest-of-lbalhar/pytest-4/test_windows_get_args_for_relo0/test/test.exe',\\n 'run']\r\nE         At index 0 diff: 'C:\\\\Users\\\\test\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python36\\\\python.exe' != '/tmp/pytest-of-lbalhar/pytest-4/test_windows_get_args_for_relo0/test/test.exe'\r\nE         Left contains 2 more items, first extra item: '/tmp/pytest-of-lbalhar/pytest-4/test_windows_get_args_for_relo0/test/test.exe'\r\nE         Full diff:\r\nE           [\r\nE         -  'C:\\\\Users\\\\test\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python36\\\\python.exe',\r\nE         -  '-m',\r\nE            '/tmp/pytest-of-lbalhar/pytest-4/test_windows_get_args_for_relo0/test/test.exe',\r\nE            'run',\r\nE           ]\r\n\r\ntest_serving.py:305: AssertionError\r\n```\r\nbut\r\n```\r\n$ pytest test_serving.py \r\n============================= test session starts =============================\r\nplatform linux -- Python 3.8.1, pytest-5.3.2, py-1.8.1, pluggy-0.13.1\r\nrootdir: /home/lbalhar/Fedora/packages/python-werkzeug/Werkzeug-0.16.0, inifile: setup.cfg\r\ncollected 21 items                                                            \r\n\r\ntest_serving.py ssssssssss..sssssssss                                   [100%]\r\n```\r\n\r\n`python3 -m pytest` might be a preferred way in some cases when, for example, `/usr/bin/pytest` might still point to Python 2 version of Pytest.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1689", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1689/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1689/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1689/events", "html_url": "https://github.com/pallets/werkzeug/issues/1689", "id": 544180061, "node_id": "MDU6SXNzdWU1NDQxODAwNjE=", "number": 1689, "title": "set charset in shareddatamiddleware", "user": {"login": "bastidest", "id": 1242917, "node_id": "MDQ6VXNlcjEyNDI5MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bastidest", "html_url": "https://github.com/bastidest", "followers_url": "https://api.github.com/users/bastidest/followers", "following_url": "https://api.github.com/users/bastidest/following{/other_user}", "gists_url": "https://api.github.com/users/bastidest/gists{/gist_id}", "starred_url": "https://api.github.com/users/bastidest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bastidest/subscriptions", "organizations_url": "https://api.github.com/users/bastidest/orgs", "repos_url": "https://api.github.com/users/bastidest/repos", "events_url": "https://api.github.com/users/bastidest/events{/privacy}", "received_events_url": "https://api.github.com/users/bastidest/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/1", "html_url": "https://github.com/pallets/werkzeug/milestone/1", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/1/labels", "id": 764000, "node_id": "MDk6TWlsZXN0b25lNzY0MDAw", "number": 1, "title": "1.0.0", "description": "", "creator": {"login": "untitaker", "id": 837573, "node_id": "MDQ6VXNlcjgzNzU3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/untitaker", "html_url": "https://github.com/untitaker", "followers_url": "https://api.github.com/users/untitaker/followers", "following_url": "https://api.github.com/users/untitaker/following{/other_user}", "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions", "organizations_url": "https://api.github.com/users/untitaker/orgs", "repos_url": "https://api.github.com/users/untitaker/repos", "events_url": "https://api.github.com/users/untitaker/events{/privacy}", "received_events_url": "https://api.github.com/users/untitaker/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 78, "state": "closed", "created_at": "2014-08-24T22:39:25Z", "updated_at": "2020-02-09T18:49:49Z", "due_on": null, "closed_at": "2020-02-09T18:49:49Z"}, "comments": 0, "created_at": "2019-12-31T12:39:07Z", "updated_at": "2020-02-06T05:40:02Z", "closed_at": "2020-02-06T05:40:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Description\r\nUTF-8 Javascript files served by the SharedDataMiddleware do not contain a charset in the `Content-Type` response header. This leads to issues of javascript interpreted as US-ASCII by browsers (https://github.com/posativ/isso/issues/607).\r\n\r\n**Current**\r\n```\r\nContent-Type: application/javascript\r\n```\r\n**Expected**\r\n```\r\nContent-Type: application/javascript; charset=UTF-8\r\n```\r\n\r\nThe mime type is deducted by using python's mimetypes module and the filename:\r\n\r\nhttps://github.com/pallets/werkzeug/blob/aa9676f5cd5ab7ee08b09f38df22ef3e3c564d87/src/werkzeug/middleware/shared_data.py#L256-L257\r\n\r\nIt is sent without appending an encoding:\r\n\r\nhttps://github.com/pallets/werkzeug/blob/aa9676f5cd5ab7ee08b09f38df22ef3e3c564d87/src/werkzeug/middleware/shared_data.py#L281\r\n\r\nOther usages seem to suggest that a call to `get_content_type` is necessary to append the charset, if applicable:\r\n\r\nhttps://github.com/pallets/werkzeug/blob/e76aac8294626e24e1075e665cbf9657b88c4301/src/werkzeug/wrappers/common_descriptors.py#L146\r\n\r\n# Possible solutions\r\nI am not familiar with the codebase, but would it be possible to call `get_content_type`? I tried to modify it myself, but I don't know where to get the encoding from inside  `SharedDataMiddleware`.\r\n\r\nMy problem is solved when I hardcode 'utf-8' as charset:\r\n```python\r\n(\"Content-Type\", get_content_type(mime_type, 'utf-8'))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1686", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1686/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1686/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1686/events", "html_url": "https://github.com/pallets/werkzeug/issues/1686", "id": 542977561, "node_id": "MDU6SXNzdWU1NDI5Nzc1NjE=", "number": 1686, "title": "Sort order is not stable in Accept class", "user": {"login": "lincolnq", "id": 41908, "node_id": "MDQ6VXNlcjQxOTA4", "avatar_url": "https://avatars2.githubusercontent.com/u/41908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lincolnq", "html_url": "https://github.com/lincolnq", "followers_url": "https://api.github.com/users/lincolnq/followers", "following_url": "https://api.github.com/users/lincolnq/following{/other_user}", "gists_url": "https://api.github.com/users/lincolnq/gists{/gist_id}", "starred_url": "https://api.github.com/users/lincolnq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lincolnq/subscriptions", "organizations_url": "https://api.github.com/users/lincolnq/orgs", "repos_url": "https://api.github.com/users/lincolnq/repos", "events_url": "https://api.github.com/users/lincolnq/events{/privacy}", "received_events_url": "https://api.github.com/users/lincolnq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/1", "html_url": "https://github.com/pallets/werkzeug/milestone/1", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/1/labels", "id": 764000, "node_id": "MDk6TWlsZXN0b25lNzY0MDAw", "number": 1, "title": "1.0.0", "description": "", "creator": {"login": "untitaker", "id": 837573, "node_id": "MDQ6VXNlcjgzNzU3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/untitaker", "html_url": "https://github.com/untitaker", "followers_url": "https://api.github.com/users/untitaker/followers", "following_url": "https://api.github.com/users/untitaker/following{/other_user}", "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions", "organizations_url": "https://api.github.com/users/untitaker/orgs", "repos_url": "https://api.github.com/users/untitaker/repos", "events_url": "https://api.github.com/users/untitaker/events{/privacy}", "received_events_url": "https://api.github.com/users/untitaker/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 78, "state": "closed", "created_at": "2014-08-24T22:39:25Z", "updated_at": "2020-02-09T18:49:49Z", "due_on": null, "closed_at": "2020-02-09T18:49:49Z"}, "comments": 2, "created_at": "2019-12-27T20:11:02Z", "updated_at": "2020-01-16T18:08:00Z", "closed_at": "2020-01-16T18:07:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "```py\r\n    from werkzeug.datastructures import LanguageAccept\r\n    from werkzeug.http import parse_accept_header\r\n\r\n    a = parse_accept_header(\"en-US,fr-FR\", LanguageAccept)\r\n    assert a.best == \"en-US\"  # fails, it returns fr-FR\r\n```\r\n\r\nI expected the order to be preserved. \r\n\r\nRFC 3282 describes desired behavior for Accept-Language: \"If no Q values are given, the language-ranges are given in priority order, with the leftmost language-range being the most preferred language; this is an extension to the HTTP/1.1 rules, but matches current practice.\"\r\n\r\nLooking at the source code, the Accept class is reverse-sorting the input list by specificity, then quality, then name; I think it should not sort by name and instead should preserve the given order.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1685", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1685/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1685/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1685/events", "html_url": "https://github.com/pallets/werkzeug/issues/1685", "id": 542058570, "node_id": "MDU6SXNzdWU1NDIwNTg1NzA=", "number": 1685, "title": "FileStorage object on a queue and consuming it with another thread I get the following error.", "user": {"login": "iamtheuserofthis", "id": 25841709, "node_id": "MDQ6VXNlcjI1ODQxNzA5", "avatar_url": "https://avatars0.githubusercontent.com/u/25841709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iamtheuserofthis", "html_url": "https://github.com/iamtheuserofthis", "followers_url": "https://api.github.com/users/iamtheuserofthis/followers", "following_url": "https://api.github.com/users/iamtheuserofthis/following{/other_user}", "gists_url": "https://api.github.com/users/iamtheuserofthis/gists{/gist_id}", "starred_url": "https://api.github.com/users/iamtheuserofthis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iamtheuserofthis/subscriptions", "organizations_url": "https://api.github.com/users/iamtheuserofthis/orgs", "repos_url": "https://api.github.com/users/iamtheuserofthis/repos", "events_url": "https://api.github.com/users/iamtheuserofthis/events{/privacy}", "received_events_url": "https://api.github.com/users/iamtheuserofthis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-24T09:19:14Z", "updated_at": "2020-01-04T22:39:14Z", "closed_at": "2020-01-04T22:39:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "```pytb\r\nException in thread Thread-166:\r\nTraceback (most recent call last):\r\n  File \"/home/iamtheuserofthis/anaconda3/envs/llel_py/lib/python3.7/threading.py\", line 926, in _bootstrap_inner\r\n    self.run()\r\n  File \"/home/iamtheuserofthis/python_workspace/iaf_image_process/file_handler/file_handling_fh.py\", line 29, in run\r\n    fx.save(os.path.join(config.targetPath,'testfile.jpg'))\r\n  File \"/home/iamtheuserofthis/anaconda3/envs/llel_py/lib/python3.7/site-packages/werkzeug/datastructures.py\", line 2803, in save\r\n    copyfileobj(self.stream, dst, buffer_size)\r\n  File \"/home/iamtheuserofthis/anaconda3/envs/llel_py/lib/python3.7/shutil.py\", line 79, in copyfileobj\r\n    buf = fsrc.read(length)\r\nValueError: I/O operation on closed file.\r\n```\r\n\r\n```python\r\nclass Consumer(Thread):\r\n    def __init__(self,queue:Queue):\r\n        Thread.__init__(self)\r\n        self.queue = queue\r\n        \r\n    def run(self):\r\n        print('consumer running')\r\n        while True:# and Consumer.counter<253:\r\n            #time.sleep(1)\r\n            fx=self.queue.get()\r\n            \r\n            fx.save(os.path.join(config.targetPath,'testfile.jpg'))\r\n            print('CONSUMER %s stored file' % (currentThread().getName()))\r\n            self.queue.task_done()\r\n\r\nqueueFP = Queue()\r\ncons1 = Consumer(queueFP)\r\ncons1.start()\r\nif __name__=='__main__':\r\n    path = '/home/iamtheuserofthis/untagged_data/signs'\r\n    files = os.listdir(path)\r\n    filename = os.path.join(path,files[0])\r\n    print(filename)\r\n    with open(filename,'r')as f:\r\n        fst = FileStorage(f)\r\n    queueFP.put(fst)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1683", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1683/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1683/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1683/events", "html_url": "https://github.com/pallets/werkzeug/issues/1683", "id": 538010740, "node_id": "MDU6SXNzdWU1MzgwMTA3NDA=", "number": 1683, "title": "flask.abort() documentation broken", "user": {"login": "Chealer", "id": 486141, "node_id": "MDQ6VXNlcjQ4NjE0MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/486141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chealer", "html_url": "https://github.com/Chealer", "followers_url": "https://api.github.com/users/Chealer/followers", "following_url": "https://api.github.com/users/Chealer/following{/other_user}", "gists_url": "https://api.github.com/users/Chealer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chealer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chealer/subscriptions", "organizations_url": "https://api.github.com/users/Chealer/orgs", "repos_url": "https://api.github.com/users/Chealer/repos", "events_url": "https://api.github.com/users/Chealer/events{/privacy}", "received_events_url": "https://api.github.com/users/Chealer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 123875538, "node_id": "MDU6TGFiZWwxMjM4NzU1Mzg=", "url": "https://api.github.com/repos/pallets/werkzeug/labels/docs", "name": "docs", "color": "fef2c0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-12-09T21:45:46Z", "updated_at": "2020-08-12T21:00:12Z", "closed_at": "2020-01-03T13:42:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "[The documentation for abort()](https://flask.palletsprojects.com/en/1.1.x/api/#flask.abort) contains:\r\n\r\n> Raises an HTTPException for the given status code or WSGI application:\r\n> \r\n> abort(404)  # 404 Not Found\r\n> abort(Response('Hello World'))\r\n> Can be passed a WSGI application or a status code. If a status code is given it\u2019s looked up in the list of exceptions and will raise that exception, if passed a WSGI application it will wrap it in a proxy WSGI exception and raise that:\r\n> \r\n> abort(404)\r\n> abort(Response('Hello World'))\r\n\r\n(with the same example duplicated almost identically).\r\n\r\nI find it unclear what the author meant to write. Perhaps a second synopsis was supposed to be there documenting the WSGI application form.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1681", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1681/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1681/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1681/events", "html_url": "https://github.com/pallets/werkzeug/issues/1681", "id": 534635025, "node_id": "MDU6SXNzdWU1MzQ2MzUwMjU=", "number": 1681, "title": "Found a security issue", "user": {"login": "ZeddYu", "id": 29536474, "node_id": "MDQ6VXNlcjI5NTM2NDc0", "avatar_url": "https://avatars3.githubusercontent.com/u/29536474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZeddYu", "html_url": "https://github.com/ZeddYu", "followers_url": "https://api.github.com/users/ZeddYu/followers", "following_url": "https://api.github.com/users/ZeddYu/following{/other_user}", "gists_url": "https://api.github.com/users/ZeddYu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZeddYu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZeddYu/subscriptions", "organizations_url": "https://api.github.com/users/ZeddYu/orgs", "repos_url": "https://api.github.com/users/ZeddYu/repos", "events_url": "https://api.github.com/users/ZeddYu/events{/privacy}", "received_events_url": "https://api.github.com/users/ZeddYu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-12-09T00:56:04Z", "updated_at": "2019-12-13T18:23:44Z", "closed_at": "2019-12-09T01:33:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Found a security issue. How can I report it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1672", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1672/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1672/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1672/events", "html_url": "https://github.com/pallets/werkzeug/issues/1672", "id": 529821637, "node_id": "MDU6SXNzdWU1Mjk4MjE2Mzc=", "number": 1672, "title": "secure-cookie is not released on pypi", "user": {"login": "azmeuk", "id": 60163, "node_id": "MDQ6VXNlcjYwMTYz", "avatar_url": "https://avatars1.githubusercontent.com/u/60163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azmeuk", "html_url": "https://github.com/azmeuk", "followers_url": "https://api.github.com/users/azmeuk/followers", "following_url": "https://api.github.com/users/azmeuk/following{/other_user}", "gists_url": "https://api.github.com/users/azmeuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/azmeuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azmeuk/subscriptions", "organizations_url": "https://api.github.com/users/azmeuk/orgs", "repos_url": "https://api.github.com/users/azmeuk/repos", "events_url": "https://api.github.com/users/azmeuk/events{/privacy}", "received_events_url": "https://api.github.com/users/azmeuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-28T10:22:30Z", "updated_at": "2020-01-03T15:10:08Z", "closed_at": "2020-01-03T15:10:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [bug report](https://github.com/pallets/secure-cookie/issues/1) on secure-cookie did not receive any attention. I open a discussion here because this repository seems a bit more popular. If you are annoyed by the double issue, do not hesitate to close this one.\r\n\r\nSince 0.15, werkzeug displays this warning, advising to install secure-cookie. But several months later, secure-cookie still has not been released on pypi. So users get a warning they cannot fix. Is there some remaining tasks preventing to release secure-cookie on pypi? Is there something one can do to help?\r\n\r\n```\r\nDeprecationWarning: 'werkzeug.contrib.sessions' is deprecated as of version 0.15 and will be removed in version 1.0. It has moved to https://github.com/pallets/secure-cookie.\r\nDeprecationWarning: 'werkzeug.contrib.securecookie' is deprecated as of version 0.15 and will be removed in version 1.0. It has moved to https://github.com/pallets/secure-cookie.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1670", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1670/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1670/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1670/events", "html_url": "https://github.com/pallets/werkzeug/issues/1670", "id": 528085730, "node_id": "MDU6SXNzdWU1MjgwODU3MzA=", "number": 1670, "title": "RecursionError: maximum recursion depth exceeded", "user": {"login": "badprogrammist", "id": 2659388, "node_id": "MDQ6VXNlcjI2NTkzODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2659388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/badprogrammist", "html_url": "https://github.com/badprogrammist", "followers_url": "https://api.github.com/users/badprogrammist/followers", "following_url": "https://api.github.com/users/badprogrammist/following{/other_user}", "gists_url": "https://api.github.com/users/badprogrammist/gists{/gist_id}", "starred_url": "https://api.github.com/users/badprogrammist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/badprogrammist/subscriptions", "organizations_url": "https://api.github.com/users/badprogrammist/orgs", "repos_url": "https://api.github.com/users/badprogrammist/repos", "events_url": "https://api.github.com/users/badprogrammist/events{/privacy}", "received_events_url": "https://api.github.com/users/badprogrammist/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-25T13:25:55Z", "updated_at": "2019-11-25T13:50:07Z", "closed_at": "2019-11-25T13:50:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n```\r\n>>> from werkzeug.local import Local\r\n>>> class Context(object):\r\n...     def __init__(self):\r\n...         self.local = Local()\r\n...     def __setattr__(self, key, value):\r\n...         setattr(self.local, key, value)\r\n...     def __getattr__(self, key):\r\n...         getattr(self.local, key)\r\n>>> Context()\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 1, in <module>\r\n  File \"<input>\", line 3, in __init__\r\n  File \"<input>\", line 5, in __setattr__\r\n  File \"<input>\", line 7, in __getattr__\r\n  File \"<input>\", line 7, in __getattr__\r\n  File \"<input>\", line 7, in __getattr__\r\n  [Previous line repeated 490 more times]\r\nRecursionError: maximum recursion depth exceeded\r\n```\r\nCan someone explain me why so?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1669", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1669/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1669/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1669/events", "html_url": "https://github.com/pallets/werkzeug/issues/1669", "id": 527519755, "node_id": "MDU6SXNzdWU1Mjc1MTk3NTU=", "number": 1669, "title": "I got a problem when using python3.8 to run flask", "user": {"login": "somewheve", "id": 29819669, "node_id": "MDQ6VXNlcjI5ODE5NjY5", "avatar_url": "https://avatars0.githubusercontent.com/u/29819669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/somewheve", "html_url": "https://github.com/somewheve", "followers_url": "https://api.github.com/users/somewheve/followers", "following_url": "https://api.github.com/users/somewheve/following{/other_user}", "gists_url": "https://api.github.com/users/somewheve/gists{/gist_id}", "starred_url": "https://api.github.com/users/somewheve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/somewheve/subscriptions", "organizations_url": "https://api.github.com/users/somewheve/orgs", "repos_url": "https://api.github.com/users/somewheve/repos", "events_url": "https://api.github.com/users/somewheve/events{/privacy}", "received_events_url": "https://api.github.com/users/somewheve/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "aenglander", "id": 328648, "node_id": "MDQ6VXNlcjMyODY0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/328648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aenglander", "html_url": "https://github.com/aenglander", "followers_url": "https://api.github.com/users/aenglander/followers", "following_url": "https://api.github.com/users/aenglander/following{/other_user}", "gists_url": "https://api.github.com/users/aenglander/gists{/gist_id}", "starred_url": "https://api.github.com/users/aenglander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aenglander/subscriptions", "organizations_url": "https://api.github.com/users/aenglander/orgs", "repos_url": "https://api.github.com/users/aenglander/repos", "events_url": "https://api.github.com/users/aenglander/events{/privacy}", "received_events_url": "https://api.github.com/users/aenglander/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aenglander", "id": 328648, "node_id": "MDQ6VXNlcjMyODY0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/328648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aenglander", "html_url": "https://github.com/aenglander", "followers_url": "https://api.github.com/users/aenglander/followers", "following_url": "https://api.github.com/users/aenglander/following{/other_user}", "gists_url": "https://api.github.com/users/aenglander/gists{/gist_id}", "starred_url": "https://api.github.com/users/aenglander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aenglander/subscriptions", "organizations_url": "https://api.github.com/users/aenglander/orgs", "repos_url": "https://api.github.com/users/aenglander/repos", "events_url": "https://api.github.com/users/aenglander/events{/privacy}", "received_events_url": "https://api.github.com/users/aenglander/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-11-23T06:48:28Z", "updated_at": "2020-03-28T13:09:54Z", "closed_at": "2019-12-16T21:52:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I try to use the virtual environment based on python 3.8 to running \r\na flask program in Arch Linux.\r\n\r\nBut I got an error\r\n```\r\nTypeError: required field \"type_ignores\" missing from Module'\r\n```\r\nSo I search it by google and find a way to solve it.\r\n\r\n[link](https://bugs.python.org/issue35894)\r\n\r\nand I change the code to the next version and it works \r\n\r\n> werkzeug/routing.py  line:950-952 \r\n\r\n```\r\nmodule = ast.fix_missing_locations(ast.Module([func_ast],[]))\r\ncode = compile(module, \"<werkzeug routing>\", \"exec\")\r\nreturn self._get_func_code(code, func_ast.name)\r\n```\r\n\r\nHope for your reply and fix ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1668", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1668/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1668/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1668/events", "html_url": "https://github.com/pallets/werkzeug/issues/1668", "id": 527467280, "node_id": "MDU6SXNzdWU1Mjc0NjcyODA=", "number": 1668, "title": "All dev_server tests fail with PyPy2.7 (7.2.0)", "user": {"login": "mgorny", "id": 110765, "node_id": "MDQ6VXNlcjExMDc2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/110765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgorny", "html_url": "https://github.com/mgorny", "followers_url": "https://api.github.com/users/mgorny/followers", "following_url": "https://api.github.com/users/mgorny/following{/other_user}", "gists_url": "https://api.github.com/users/mgorny/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgorny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgorny/subscriptions", "organizations_url": "https://api.github.com/users/mgorny/orgs", "repos_url": "https://api.github.com/users/mgorny/repos", "events_url": "https://api.github.com/users/mgorny/events{/privacy}", "received_events_url": "https://api.github.com/users/mgorny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-22T23:45:55Z", "updated_at": "2020-01-04T20:59:23Z", "closed_at": "2020-01-04T20:56:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that all tests relying on `dev_server` are failing when run under PyPy2.7 7.2.0 (but not PyPy3.6). I suspect the dev server is either crashing or not starting but I have no clue how to debug that.\r\n\r\nTo reproduce:\r\n1. Remove `requests_unixsocket`, `cryptography`, `greenlet`, `watchdog` from tox.ini deps (they fail due to trying to install cffi)\r\n2. `tox -e pypy`\r\n\r\nExample error message:\r\n```\r\n_________________________________________________________________ test_http_proxy _________________________________________________________________\r\ntests/middleware/test_http_proxy.py:9: in test_http_proxy\r\n    r\"\"\"\r\ntests/conftest.py:183: in run_dev_server\r\n    xprocess.ensure(\"dev_server\", Starter, restart=True)\r\n.tox/pypy/site-packages/xprocess.py:109: in ensure\r\n    info.terminate()\r\n.tox/pypy/site-packages/xprocess.py:36: in terminate\r\n    if not self.pid or not self.isrunning():\r\n.tox/pypy/site-packages/xprocess.py:62: in isrunning\r\n    proc = psutil.Process(self.pid)\r\n.tox/pypy/site-packages/psutil/__init__.py:447: in __init__\r\n    self._init(pid)\r\n.tox/pypy/site-packages/psutil/__init__.py:474: in _init\r\n    self.create_time()\r\n.tox/pypy/site-packages/psutil/__init__.py:824: in create_time\r\n    self._create_time = self._proc.create_time()\r\n.tox/pypy/site-packages/psutil/_pslinux.py:1517: in wrapper\r\n    return fun(self, *args, **kwargs)\r\n.tox/pypy/site-packages/psutil/_pslinux.py:1723: in create_time\r\n    ctime = float(self._parse_stat_file()['create_time'])\r\n.tox/pypy/site-packages/psutil/_pslinux.py:1517: in wrapper\r\n    return fun(self, *args, **kwargs)\r\n.tox/pypy/site-packages/psutil/_common.py:343: in wrapper\r\n    return fun(self)\r\n.tox/pypy/site-packages/psutil/_pslinux.py:1559: in _parse_stat_file\r\n    with open_binary(\"%s/%s/stat\" % (self._procfs_path, self.pid)) as f:\r\n.tox/pypy/site-packages/psutil/_common.py:604: in open_binary\r\n    return open(fname, \"rb\", **kwargs)\r\nE   IOError: [Errno 2] No such file or directory: '/proc/142631/stat'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1667", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1667/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1667/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1667/events", "html_url": "https://github.com/pallets/werkzeug/issues/1667", "id": 525958628, "node_id": "MDU6SXNzdWU1MjU5NTg2Mjg=", "number": 1667, "title": "HTTP desync attack follow up", "user": {"login": "Sytten", "id": 2366731, "node_id": "MDQ6VXNlcjIzNjY3MzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/2366731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sytten", "html_url": "https://github.com/Sytten", "followers_url": "https://api.github.com/users/Sytten/followers", "following_url": "https://api.github.com/users/Sytten/following{/other_user}", "gists_url": "https://api.github.com/users/Sytten/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sytten/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sytten/subscriptions", "organizations_url": "https://api.github.com/users/Sytten/orgs", "repos_url": "https://api.github.com/users/Sytten/repos", "events_url": "https://api.github.com/users/Sytten/events{/privacy}", "received_events_url": "https://api.github.com/users/Sytten/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-11-20T17:30:49Z", "updated_at": "2019-12-02T13:19:51Z", "closed_at": "2019-11-20T18:15:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! We in the process of fixing the HTTP desync attack present in gunicorn (see the issue https://github.com/benoitc/gunicorn/issues/2176 and the PR https://github.com/benoitc/gunicorn/pull/2181).\r\n\r\nWe saw that the chunked processing in werkzeug might not be perfect, you expect that the environ `HTTP_TRANSFER_ENCODING` is only a string (like here https://github.com/pallets/werkzeug/blob/246e577e0c99ad1272dffddbfce8fd040a1699b8/src/werkzeug/wsgi.py), but it might be a string containing multiple TE separate by a `,`.\r\n\r\nThis might cause an HTTP desync attack if the client request is for example:\r\n```\r\nContent-Length: 5\r\nTransfer-Encoding: chunked\r\nTransfer-Encoding: identity\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1666", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1666/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1666/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1666/events", "html_url": "https://github.com/pallets/werkzeug/issues/1666", "id": 524072216, "node_id": "MDU6SXNzdWU1MjQwNzIyMTY=", "number": 1666, "title": "werkzeug.FileStorage().save() saves an empty file", "user": {"login": "NimaBavari", "id": 29359109, "node_id": "MDQ6VXNlcjI5MzU5MTA5", "avatar_url": "https://avatars0.githubusercontent.com/u/29359109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NimaBavari", "html_url": "https://github.com/NimaBavari", "followers_url": "https://api.github.com/users/NimaBavari/followers", "following_url": "https://api.github.com/users/NimaBavari/following{/other_user}", "gists_url": "https://api.github.com/users/NimaBavari/gists{/gist_id}", "starred_url": "https://api.github.com/users/NimaBavari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NimaBavari/subscriptions", "organizations_url": "https://api.github.com/users/NimaBavari/orgs", "repos_url": "https://api.github.com/users/NimaBavari/repos", "events_url": "https://api.github.com/users/NimaBavari/events{/privacy}", "received_events_url": "https://api.github.com/users/NimaBavari/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-18T00:11:15Z", "updated_at": "2020-02-13T07:24:25Z", "closed_at": "2019-11-18T00:15:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "If we have\r\n`file_storage = werkzeug.FileStorage()`\r\n`file_storage.save()`\r\nit will save an empty file. There is no solution anywhere online that I could find. Finally, after hours of debugging, I found a workaround:\r\n`file_storage.stream.seek(0)`\r\n`file_storage.save()`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1663", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1663/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1663/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1663/events", "html_url": "https://github.com/pallets/werkzeug/issues/1663", "id": 523451332, "node_id": "MDU6SXNzdWU1MjM0NTEzMzI=", "number": 1663, "title": "ModuleNotFoundError: No module named 'werkzeug.wsgi.middleware'; 'werkzeug.wsgi' is not a package", "user": {"login": "connesy", "id": 13164166, "node_id": "MDQ6VXNlcjEzMTY0MTY2", "avatar_url": "https://avatars1.githubusercontent.com/u/13164166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/connesy", "html_url": "https://github.com/connesy", "followers_url": "https://api.github.com/users/connesy/followers", "following_url": "https://api.github.com/users/connesy/following{/other_user}", "gists_url": "https://api.github.com/users/connesy/gists{/gist_id}", "starred_url": "https://api.github.com/users/connesy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/connesy/subscriptions", "organizations_url": "https://api.github.com/users/connesy/orgs", "repos_url": "https://api.github.com/users/connesy/repos", "events_url": "https://api.github.com/users/connesy/events{/privacy}", "received_events_url": "https://api.github.com/users/connesy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/12", "html_url": "https://github.com/pallets/werkzeug/milestone/12", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/12/labels", "id": 4973120, "node_id": "MDk6TWlsZXN0b25lNDk3MzEyMA==", "number": 12, "title": "0.16.1", "description": "", "creator": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 7, "state": "closed", "created_at": "2020-01-04T20:37:27Z", "updated_at": "2020-01-27T04:19:12Z", "due_on": null, "closed_at": "2020-01-27T04:19:12Z"}, "comments": 3, "created_at": "2019-11-15T12:47:21Z", "updated_at": "2020-02-06T23:03:04Z", "closed_at": "2020-01-04T20:44:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using `from werkzeug.wsgi import DispatcherMiddleware` I get a `DeprecationWarning`:\r\n```\r\nDeprecationWarning: The import 'werkzeug.wsgi.DispatcherMiddleware' is deprecated and will be removed in Werkzeug 1.0. Use 'from werkzeug.wsgi.middleware.dispatcher import DispatcherMiddleware' instead.\r\n  from werkzeug.wsgi import DispatcherMiddleware\r\n```\r\nBut when I use that instead, I get a `ModuleNotFoundError`:\r\n```\r\nTraceback (most recent call last):\r\n  File \"services/server.py\", line 8, in <module>\r\n    from werkzeug.wsgi.middleware.dispatcher import DispatcherMiddleware\r\nModuleNotFoundError: No module named 'werkzeug.wsgi.middleware'; 'werkzeug.wsgi' is not a package\r\n```\r\n\r\nWerkzeug version `0.16.0`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1661", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1661/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1661/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1661/events", "html_url": "https://github.com/pallets/werkzeug/issues/1661", "id": 523417074, "node_id": "MDU6SXNzdWU1MjM0MTcwNzQ=", "number": 1661, "title": "debug.get_machine_id() returning empty in docker container", "user": {"login": "amoralej", "id": 1783517, "node_id": "MDQ6VXNlcjE3ODM1MTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1783517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoralej", "html_url": "https://github.com/amoralej", "followers_url": "https://api.github.com/users/amoralej/followers", "following_url": "https://api.github.com/users/amoralej/following{/other_user}", "gists_url": "https://api.github.com/users/amoralej/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoralej/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoralej/subscriptions", "organizations_url": "https://api.github.com/users/amoralej/orgs", "repos_url": "https://api.github.com/users/amoralej/repos", "events_url": "https://api.github.com/users/amoralej/events{/privacy}", "received_events_url": "https://api.github.com/users/amoralej/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/1", "html_url": "https://github.com/pallets/werkzeug/milestone/1", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/1/labels", "id": 764000, "node_id": "MDk6TWlsZXN0b25lNzY0MDAw", "number": 1, "title": "1.0.0", "description": "", "creator": {"login": "untitaker", "id": 837573, "node_id": "MDQ6VXNlcjgzNzU3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/untitaker", "html_url": "https://github.com/untitaker", "followers_url": "https://api.github.com/users/untitaker/followers", "following_url": "https://api.github.com/users/untitaker/following{/other_user}", "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions", "organizations_url": "https://api.github.com/users/untitaker/orgs", "repos_url": "https://api.github.com/users/untitaker/repos", "events_url": "https://api.github.com/users/untitaker/events{/privacy}", "received_events_url": "https://api.github.com/users/untitaker/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 78, "state": "closed", "created_at": "2014-08-24T22:39:25Z", "updated_at": "2020-02-09T18:49:49Z", "due_on": null, "closed_at": "2020-02-09T18:49:49Z"}, "comments": 0, "created_at": "2019-11-15T11:28:49Z", "updated_at": "2020-01-04T20:18:11Z", "closed_at": "2020-01-04T20:18:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems https://github.com/pallets/werkzeug/commit/00bc43b1672e662e5e3b8cecd79e67fc968fa246 has broken get_machine_id in docker:\r\n\r\n`# python\r\nPython 3.6.8 (default, Apr  3 2019, 17:26:03) \r\n[GCC 8.2.1 20180905 (Red Hat 8.2.1-3)] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from werkzeug import debug\r\n>>> debug.get_machine_id()\r\nb''`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1660", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1660/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1660/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1660/events", "html_url": "https://github.com/pallets/werkzeug/issues/1660", "id": 519410373, "node_id": "MDU6SXNzdWU1MTk0MTAzNzM=", "number": 1660, "title": "release SameSite='None' fix from issue #1549", "user": {"login": "dlesco", "id": 64624, "node_id": "MDQ6VXNlcjY0NjI0", "avatar_url": "https://avatars3.githubusercontent.com/u/64624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dlesco", "html_url": "https://github.com/dlesco", "followers_url": "https://api.github.com/users/dlesco/followers", "following_url": "https://api.github.com/users/dlesco/following{/other_user}", "gists_url": "https://api.github.com/users/dlesco/gists{/gist_id}", "starred_url": "https://api.github.com/users/dlesco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dlesco/subscriptions", "organizations_url": "https://api.github.com/users/dlesco/orgs", "repos_url": "https://api.github.com/users/dlesco/repos", "events_url": "https://api.github.com/users/dlesco/events{/privacy}", "received_events_url": "https://api.github.com/users/dlesco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-07T17:32:06Z", "updated_at": "2020-01-14T14:45:19Z", "closed_at": "2019-11-07T18:03:28Z", "author_association": "NONE", "active_lock_reason": "resolved", "body": "Several months ago, issue #1549 fixed the SameSite='None' problem.  However, it was never released, it's scheduled for 1.0.\r\n\r\nMeanwhile, Chrome says their changing their security model in February, and they said other browser makers are doing the same:\r\n\r\nhttps://blog.chromium.org/2019/10/developers-get-ready-for-new.html\r\n\r\nI need to start incorporating this into a web service.  Will 1.0, with this fix, be released very soon, or should this be backported to the 0.x series?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1658", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1658/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1658/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1658/events", "html_url": "https://github.com/pallets/werkzeug/issues/1658", "id": 518629932, "node_id": "MDU6SXNzdWU1MTg2Mjk5MzI=", "number": 1658, "title": "Response allows invalid status", "user": {"login": "RazerM", "id": 1337586, "node_id": "MDQ6VXNlcjEzMzc1ODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1337586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RazerM", "html_url": "https://github.com/RazerM", "followers_url": "https://api.github.com/users/RazerM/followers", "following_url": "https://api.github.com/users/RazerM/following{/other_user}", "gists_url": "https://api.github.com/users/RazerM/gists{/gist_id}", "starred_url": "https://api.github.com/users/RazerM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RazerM/subscriptions", "organizations_url": "https://api.github.com/users/RazerM/orgs", "repos_url": "https://api.github.com/users/RazerM/repos", "events_url": "https://api.github.com/users/RazerM/events{/privacy}", "received_events_url": "https://api.github.com/users/RazerM/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/14", "html_url": "https://github.com/pallets/werkzeug/milestone/14", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/14/labels", "id": 5085882, "node_id": "MDk6TWlsZXN0b25lNTA4NTg4Mg==", "number": 14, "title": "2.0.0", "description": "", "creator": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "open_issues": 5, "closed_issues": 48, "state": "open", "created_at": "2020-02-09T21:53:29Z", "updated_at": "2020-08-13T18:59:12Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2019-11-06T17:45:31Z", "updated_at": "2020-03-17T16:43:52Z", "closed_at": "2020-03-17T16:43:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was accidentally passing a string status like '200' from Flask.\r\n\r\n```python\r\n>>> from werkzeug import Response\r\n>>> Response(status='200').status\r\n'200'\r\n```\r\n\r\nThis status isn't valid according to PEP 3333 and e.g. breaks Twisted's WSGI runner. Obviously the error was mine, but I thought perhaps Werkzeug should raise an error earlier.\r\n\r\nWerkzeug already does some validation or coercion into the correct format:\r\n\r\n```python\r\n>>> Response(status='abc').status\r\n'0 abc'\r\n>>> Response(status='').status\r\nTraceback (most recent call last):\r\n  File \"/Users/frazer/.pyenv/versions/venv/lib/python3.7/site-packages/werkzeug/wrappers/base_response.py\", line 314, in _set_status\r\n    self._status_code = int(self._status.split(None, 1)[0])\r\nIndexError: list index out of range\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/frazer/.pyenv/versions/venv/lib/python3.7/site-packages/werkzeug/wrappers/base_response.py\", line 202, in __init__\r\n    self.status = status\r\n  File \"/Users/frazer/.pyenv/versions/venv/lib/python3.7/site-packages/werkzeug/wrappers/base_response.py\", line 319, in _set_status\r\n    raise ValueError(\"Empty status argument\")\r\nValueError: Empty status argument\r\n```\r\n\r\n`status` only becomes invalid if both of these conditions are met:\r\n1. `int(status)` doesn't raise\r\n2. `len(status.split(None, 1)) == 1`\r\n\r\nThe current implementation:\r\nhttps://github.com/pallets/werkzeug/blob/e7ba08f209477cb453f15113f9a4d527a6e81bfe/src/werkzeug/wrappers/base_response.py#L307-L320\r\n\r\nIf line 315 used the property setter instead (`self.status_code = `), the result would be valid:\r\n\r\n```python\r\n>>> Response(status='200').status\r\n'200 OK'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1657", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1657/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1657/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1657/events", "html_url": "https://github.com/pallets/werkzeug/issues/1657", "id": 517758755, "node_id": "MDU6SXNzdWU1MTc3NTg3NTU=", "number": 1657, "title": "TooManyRequests: Support Retry-After", "user": {"login": "srittau", "id": 52799, "node_id": "MDQ6VXNlcjUyNzk5", "avatar_url": "https://avatars3.githubusercontent.com/u/52799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srittau", "html_url": "https://github.com/srittau", "followers_url": "https://api.github.com/users/srittau/followers", "following_url": "https://api.github.com/users/srittau/following{/other_user}", "gists_url": "https://api.github.com/users/srittau/gists{/gist_id}", "starred_url": "https://api.github.com/users/srittau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srittau/subscriptions", "organizations_url": "https://api.github.com/users/srittau/orgs", "repos_url": "https://api.github.com/users/srittau/repos", "events_url": "https://api.github.com/users/srittau/events{/privacy}", "received_events_url": "https://api.github.com/users/srittau/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 141452010, "node_id": "MDU6TGFiZWwxNDE0NTIwMTA=", "url": "https://api.github.com/repos/pallets/werkzeug/labels/standards", "name": "standards", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "aenglander", "id": 328648, "node_id": "MDQ6VXNlcjMyODY0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/328648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aenglander", "html_url": "https://github.com/aenglander", "followers_url": "https://api.github.com/users/aenglander/followers", "following_url": "https://api.github.com/users/aenglander/following{/other_user}", "gists_url": "https://api.github.com/users/aenglander/gists{/gist_id}", "starred_url": "https://api.github.com/users/aenglander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aenglander/subscriptions", "organizations_url": "https://api.github.com/users/aenglander/orgs", "repos_url": "https://api.github.com/users/aenglander/repos", "events_url": "https://api.github.com/users/aenglander/events{/privacy}", "received_events_url": "https://api.github.com/users/aenglander/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aenglander", "id": 328648, "node_id": "MDQ6VXNlcjMyODY0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/328648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aenglander", "html_url": "https://github.com/aenglander", "followers_url": "https://api.github.com/users/aenglander/followers", "following_url": "https://api.github.com/users/aenglander/following{/other_user}", "gists_url": "https://api.github.com/users/aenglander/gists{/gist_id}", "starred_url": "https://api.github.com/users/aenglander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aenglander/subscriptions", "organizations_url": "https://api.github.com/users/aenglander/orgs", "repos_url": "https://api.github.com/users/aenglander/repos", "events_url": "https://api.github.com/users/aenglander/events{/privacy}", "received_events_url": "https://api.github.com/users/aenglander/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/1", "html_url": "https://github.com/pallets/werkzeug/milestone/1", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/1/labels", "id": 764000, "node_id": "MDk6TWlsZXN0b25lNzY0MDAw", "number": 1, "title": "1.0.0", "description": "", "creator": {"login": "untitaker", "id": 837573, "node_id": "MDQ6VXNlcjgzNzU3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/untitaker", "html_url": "https://github.com/untitaker", "followers_url": "https://api.github.com/users/untitaker/followers", "following_url": "https://api.github.com/users/untitaker/following{/other_user}", "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions", "organizations_url": "https://api.github.com/users/untitaker/orgs", "repos_url": "https://api.github.com/users/untitaker/repos", "events_url": "https://api.github.com/users/untitaker/events{/privacy}", "received_events_url": "https://api.github.com/users/untitaker/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 78, "state": "closed", "created_at": "2014-08-24T22:39:25Z", "updated_at": "2020-02-09T18:49:49Z", "due_on": null, "closed_at": "2020-02-09T18:49:49Z"}, "comments": 0, "created_at": "2019-11-05T13:01:21Z", "updated_at": "2020-01-05T15:32:57Z", "closed_at": "2020-01-05T15:32:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be useful if the `TooManyRequests` exception would support the `Retry-After` header, similar to how `Unauthorized` supports `WWW-Authenticate`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1688", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1688/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1688/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1688/events", "html_url": "https://github.com/pallets/werkzeug/issues/1688", "id": 543579369, "node_id": "MDU6SXNzdWU1NDM1NzkzNjk=", "number": 1688, "title": "Path matching with URLs ending in //", "user": {"login": "h3kker", "id": 1489014, "node_id": "MDQ6VXNlcjE0ODkwMTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1489014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/h3kker", "html_url": "https://github.com/h3kker", "followers_url": "https://api.github.com/users/h3kker/followers", "following_url": "https://api.github.com/users/h3kker/following{/other_user}", "gists_url": "https://api.github.com/users/h3kker/gists{/gist_id}", "starred_url": "https://api.github.com/users/h3kker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/h3kker/subscriptions", "organizations_url": "https://api.github.com/users/h3kker/orgs", "repos_url": "https://api.github.com/users/h3kker/repos", "events_url": "https://api.github.com/users/h3kker/events{/privacy}", "received_events_url": "https://api.github.com/users/h3kker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 141452452, "node_id": "MDU6TGFiZWwxNDE0NTI0NTI=", "url": "https://api.github.com/repos/pallets/werkzeug/labels/routing", "name": "routing", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/1", "html_url": "https://github.com/pallets/werkzeug/milestone/1", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/1/labels", "id": 764000, "node_id": "MDk6TWlsZXN0b25lNzY0MDAw", "number": 1, "title": "1.0.0", "description": "", "creator": {"login": "untitaker", "id": 837573, "node_id": "MDQ6VXNlcjgzNzU3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/untitaker", "html_url": "https://github.com/untitaker", "followers_url": "https://api.github.com/users/untitaker/followers", "following_url": "https://api.github.com/users/untitaker/following{/other_user}", "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions", "organizations_url": "https://api.github.com/users/untitaker/orgs", "repos_url": "https://api.github.com/users/untitaker/repos", "events_url": "https://api.github.com/users/untitaker/events{/privacy}", "received_events_url": "https://api.github.com/users/untitaker/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 78, "state": "closed", "created_at": "2014-08-24T22:39:25Z", "updated_at": "2020-02-09T18:49:49Z", "due_on": null, "closed_at": "2020-02-09T18:49:49Z"}, "comments": 4, "created_at": "2019-11-01T23:32:59Z", "updated_at": "2020-01-07T17:20:15Z", "closed_at": "2020-01-07T17:15:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- **This issue tracker is a tool to address bugs in Flask itself.\r\nPlease use the #pocoo IRC channel on freenode or Stack Overflow for general\r\nquestions about using Flask or issues not related to Flask.** -->\r\n\r\n<!-- If you'd like to report a bug in Flask, fill out the template below. Provide\r\nany extra information that may be useful / related to your problem.\r\nIdeally, create an [MCVE](https://stackoverflow.com/help/mcve), which helps us\r\nunderstand the problem and helps check that it is not caused by something in\r\nyour code. -->\r\n\r\nI can't seem to get flask to match URLs ending in double slashes. I have a client app (that I don't control) that under some circumstances sends requests like this: `/v1/collections//`\r\n \r\n### Expected Behavior\r\n\r\nOutput \"found double\"\r\n\r\n```python\r\nfrom flask import Flask\r\napp = Flask(__name__)\r\n\r\n@app.route('/test//')\r\ndef double(other):\r\n    return 'found double'\r\n```\r\n\r\n### Actual Behavior\r\n\r\n```\r\ncurl localhost:5000/test//\r\n# 404 not found\r\n```\r\n\r\nI have also tried with paths:\r\n\r\n```\r\n@app.route('/test/<path:other>')\r\ndef double(other):\r\n    return 'found double'\r\n```\r\n\r\nbut no luck either.\r\n\r\n### Environment\r\n\r\n```\r\n$ flask --version\r\nPython 3.7.4\r\nFlask 1.1.1\r\nWerkzeug 0.16.0\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1655", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1655/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1655/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1655/events", "html_url": "https://github.com/pallets/werkzeug/issues/1655", "id": 510692763, "node_id": "MDU6SXNzdWU1MTA2OTI3NjM=", "number": 1655, "title": "Multiple headers with the same name gets replaced in test client", "user": {"login": "LukeMarlin", "id": 4253581, "node_id": "MDQ6VXNlcjQyNTM1ODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4253581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukeMarlin", "html_url": "https://github.com/LukeMarlin", "followers_url": "https://api.github.com/users/LukeMarlin/followers", "following_url": "https://api.github.com/users/LukeMarlin/following{/other_user}", "gists_url": "https://api.github.com/users/LukeMarlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukeMarlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukeMarlin/subscriptions", "organizations_url": "https://api.github.com/users/LukeMarlin/orgs", "repos_url": "https://api.github.com/users/LukeMarlin/repos", "events_url": "https://api.github.com/users/LukeMarlin/events{/privacy}", "received_events_url": "https://api.github.com/users/LukeMarlin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-22T14:24:13Z", "updated_at": "2020-02-11T00:22:30Z", "closed_at": "2020-02-11T00:22:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "`werkzeug.Headers` allows to add multiple headers with the same name:\r\n\r\n\r\n    from werkzeug import Headers\r\n    h = Headers()\r\n    h.add(\"example\", \"value1\")\r\n    h.add(\"example\", \"value2\")\r\n    h.get_all(\"example\")\r\n    > ['value1', 'value2']\r\n\r\nTrying to write a test case to gracefully prevent users from doing so with a custom header, I noticed that when using werkzeug's `TestClient` and issuing a `get`, the `request.headers` context only receive the latest value, not both.\r\n\r\nIt seems that this is due to https://github.com/pallets/werkzeug/blob/e7ba08f209477cb453f15113f9a4d527a6e81bfe/src/werkzeug/test.py#L743-L744\r\n\r\nShould these be modified to preserve all values instead of replacing them?\r\nI'd gladly change it if it makes sense.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1659", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1659/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1659/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1659/events", "html_url": "https://github.com/pallets/werkzeug/issues/1659", "id": 519302668, "node_id": "MDU6SXNzdWU1MTkzMDI2Njg=", "number": 1659, "title": "While running a SSL server, responding an empty bytes causes an SSLEOFError.", "user": {"login": "relent95", "id": 13058392, "node_id": "MDQ6VXNlcjEzMDU4Mzky", "avatar_url": "https://avatars1.githubusercontent.com/u/13058392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/relent95", "html_url": "https://github.com/relent95", "followers_url": "https://api.github.com/users/relent95/followers", "following_url": "https://api.github.com/users/relent95/following{/other_user}", "gists_url": "https://api.github.com/users/relent95/gists{/gist_id}", "starred_url": "https://api.github.com/users/relent95/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/relent95/subscriptions", "organizations_url": "https://api.github.com/users/relent95/orgs", "repos_url": "https://api.github.com/users/relent95/repos", "events_url": "https://api.github.com/users/relent95/events{/privacy}", "received_events_url": "https://api.github.com/users/relent95/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 123868513, "node_id": "MDU6TGFiZWwxMjM4Njg1MTM=", "url": "https://api.github.com/repos/pallets/werkzeug/labels/bug", "name": "bug", "color": "bc2b39", "default": true, "description": ""}, {"id": 796989910, "node_id": "MDU6TGFiZWw3OTY5ODk5MTA=", "url": "https://api.github.com/repos/pallets/werkzeug/labels/server", "name": "server", "color": "5319e7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "aenglander", "id": 328648, "node_id": "MDQ6VXNlcjMyODY0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/328648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aenglander", "html_url": "https://github.com/aenglander", "followers_url": "https://api.github.com/users/aenglander/followers", "following_url": "https://api.github.com/users/aenglander/following{/other_user}", "gists_url": "https://api.github.com/users/aenglander/gists{/gist_id}", "starred_url": "https://api.github.com/users/aenglander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aenglander/subscriptions", "organizations_url": "https://api.github.com/users/aenglander/orgs", "repos_url": "https://api.github.com/users/aenglander/repos", "events_url": "https://api.github.com/users/aenglander/events{/privacy}", "received_events_url": "https://api.github.com/users/aenglander/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aenglander", "id": 328648, "node_id": "MDQ6VXNlcjMyODY0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/328648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aenglander", "html_url": "https://github.com/aenglander", "followers_url": "https://api.github.com/users/aenglander/followers", "following_url": "https://api.github.com/users/aenglander/following{/other_user}", "gists_url": "https://api.github.com/users/aenglander/gists{/gist_id}", "starred_url": "https://api.github.com/users/aenglander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aenglander/subscriptions", "organizations_url": "https://api.github.com/users/aenglander/orgs", "repos_url": "https://api.github.com/users/aenglander/repos", "events_url": "https://api.github.com/users/aenglander/events{/privacy}", "received_events_url": "https://api.github.com/users/aenglander/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/12", "html_url": "https://github.com/pallets/werkzeug/milestone/12", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/12/labels", "id": 4973120, "node_id": "MDk6TWlsZXN0b25lNDk3MzEyMA==", "number": 12, "title": "0.16.1", "description": "", "creator": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 7, "state": "closed", "created_at": "2020-01-04T20:37:27Z", "updated_at": "2020-01-27T04:19:12Z", "due_on": null, "closed_at": "2020-01-27T04:19:12Z"}, "comments": 3, "created_at": "2019-10-22T08:15:14Z", "updated_at": "2020-01-04T21:16:42Z", "closed_at": "2020-01-04T21:16:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- **This issue tracker is a tool to address bugs in Flask itself.\r\nPlease use the #pocoo IRC channel on freenode or Stack Overflow for general\r\nquestions about using Flask or issues not related to Flask.** -->\r\n\r\n<!-- If you'd like to report a bug in Flask, fill out the template below. Provide\r\nany extra information that may be useful / related to your problem.\r\nIdeally, create an [MCVE](https://stackoverflow.com/help/mcve), which helps us\r\nunderstand the problem and helps check that it is not caused by something in\r\nyour code. -->\r\n\r\n\r\n\r\n### Expected Behavior\r\n<!-- Tell us what should happen. -->\r\nIn a request handler(endpoint), responding an empty bytes should be OK as in the following example.\r\n```python\r\n@app.route('/test', methods = ['PUT'])\r\ndef test():\r\n  return b'', 204 # HTTP_NO_CONTENT\r\n\r\n```\r\n\r\n### Actual Behavior\r\n<!-- Tell us what happens instead. -->\r\nBut currently, this causes an SSLEOFError exception.\r\n```pytb\r\nError on request:\r\nTraceback (most recent call last):\r\n  File \"/home/relent95/.local/lib/python3.5/site-packages/werkzeug/serving.py\", line 303, in run_wsgi\r\n    execute(self.server.app)\r\n  File \"/home/relent95/.local/lib/python3.5/site-packages/werkzeug/serving.py\", line 294, in execute\r\n    write(data)\r\n  File \"/home/relent95/.local/lib/python3.5/site-packages/werkzeug/serving.py\", line 275, in write\r\n    self.wfile.write(data)\r\n  File \"/usr/lib/python3.5/socket.py\", line 593, in write\r\n    return self._sock.send(b)\r\n  File \"/usr/lib/python3.5/ssl.py\", line 861, in send\r\n    return self._sslobj.write(data)\r\n  File \"/usr/lib/python3.5/ssl.py\", line 586, in write\r\n    return self._sslobj.write(data)\r\nssl.SSLEOFError: EOF occurred in violation of protocol (_ssl.c:1848)\r\n\r\n```\r\n\r\n### Environment\r\n\r\n* Python version: 3.5.2\r\n* Flask version: 1.1.1\r\n* Werkzeug version: 0.15.5\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1653", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1653/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1653/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1653/events", "html_url": "https://github.com/pallets/werkzeug/issues/1653", "id": 508609783, "node_id": "MDU6SXNzdWU1MDg2MDk3ODM=", "number": 1653, "title": "FileStorage.save() does not support pathlib", "user": {"login": "manlix", "id": 16971147, "node_id": "MDQ6VXNlcjE2OTcxMTQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/16971147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manlix", "html_url": "https://github.com/manlix", "followers_url": "https://api.github.com/users/manlix/followers", "following_url": "https://api.github.com/users/manlix/following{/other_user}", "gists_url": "https://api.github.com/users/manlix/gists{/gist_id}", "starred_url": "https://api.github.com/users/manlix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manlix/subscriptions", "organizations_url": "https://api.github.com/users/manlix/orgs", "repos_url": "https://api.github.com/users/manlix/repos", "events_url": "https://api.github.com/users/manlix/events{/privacy}", "received_events_url": "https://api.github.com/users/manlix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/1", "html_url": "https://github.com/pallets/werkzeug/milestone/1", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/1/labels", "id": 764000, "node_id": "MDk6TWlsZXN0b25lNzY0MDAw", "number": 1, "title": "1.0.0", "description": "", "creator": {"login": "untitaker", "id": 837573, "node_id": "MDQ6VXNlcjgzNzU3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/untitaker", "html_url": "https://github.com/untitaker", "followers_url": "https://api.github.com/users/untitaker/followers", "following_url": "https://api.github.com/users/untitaker/following{/other_user}", "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions", "organizations_url": "https://api.github.com/users/untitaker/orgs", "repos_url": "https://api.github.com/users/untitaker/repos", "events_url": "https://api.github.com/users/untitaker/events{/privacy}", "received_events_url": "https://api.github.com/users/untitaker/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 78, "state": "closed", "created_at": "2014-08-24T22:39:25Z", "updated_at": "2020-02-09T18:49:49Z", "due_on": null, "closed_at": "2020-02-09T18:49:49Z"}, "comments": 0, "created_at": "2019-10-17T17:11:24Z", "updated_at": "2020-01-04T16:53:19Z", "closed_at": "2020-01-04T16:53:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Description\r\n\r\nI expected save uploaded file to `pathlib` object.\r\n\r\n# Code\r\n\r\n```python\r\nfrom pathlib import Path\r\n\r\n# ...\r\n\r\ndef path_to_save(document_id):\r\n    return Path(myproject.config.DocumentProcessing.save_to(document_id))\r\n\r\n# ...\r\n\r\nrequest.files['document'].save(path_to_save(document_id))\r\n\r\n# ...\r\n```\r\n\r\n# Actual Behavior\r\n\r\nUploaded file `document` did not save to filesystem:\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/flask/app.py\", line 1949, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/usr/local/lib/python3.7/site-packages/flask/app.py\", line 1935, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/var/lib/myproject/myproject/website/blueprints/document.py\", line 23, in create_document\r\n    result = schemas.DocumentSchema().dump(utils.uploaded_document())\r\n  File \"/var/lib/myproject/myproject/website/utils.py\", line 39, in uploaded_document\r\n    request.files['document'].save(path_to_save(document_id)) \r\n  File \"/usr/local/lib/python3.7/site-packages/werkzeug/datastructures.py\", line 2803, in save\r\n    copyfileobj(self.stream, dst, buffer_size)\r\n  File \"/usr/local/lib/python3.7/shutil.py\", line 82, in copyfileobj\r\n    fdst.write(buf)\r\nAttributeError: 'PosixPath' object has no attribute 'write'\r\n```\r\n\r\n# Expected Behavior\r\n\r\nUploaded file `document` saved to filesystem.\r\n\r\n# Versions\r\n\r\nPython: **3.7.4**\r\nWerkzeug: **0.16.0**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1652", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1652/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1652/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1652/events", "html_url": "https://github.com/pallets/werkzeug/issues/1652", "id": 508164045, "node_id": "MDU6SXNzdWU1MDgxNjQwNDU=", "number": 1652, "title": "Add argon2 support to werkzeug.security._hash_internal", "user": {"login": "ye", "id": 133924, "node_id": "MDQ6VXNlcjEzMzkyNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/133924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ye", "html_url": "https://github.com/ye", "followers_url": "https://api.github.com/users/ye/followers", "following_url": "https://api.github.com/users/ye/following{/other_user}", "gists_url": "https://api.github.com/users/ye/gists{/gist_id}", "starred_url": "https://api.github.com/users/ye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ye/subscriptions", "organizations_url": "https://api.github.com/users/ye/orgs", "repos_url": "https://api.github.com/users/ye/repos", "events_url": "https://api.github.com/users/ye/events{/privacy}", "received_events_url": "https://api.github.com/users/ye/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-17T00:18:12Z", "updated_at": "2019-10-28T16:57:38Z", "closed_at": "2019-10-17T00:29:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "The newer and safer password hashing algorithm (than existing ones, PBKDF2 or bcrypt supported native by werkzeug.security._hash_internal) is [Argon2](https://github.com/P-H-C/phc-winner-argon2)\r\n\r\nIs it possible to have add native support of Argon2 for password hashing in werkzeug? Thanks.\r\n\r\nhttps://github.com/pallets/werkzeug/blob/master/src/werkzeug/security.py#L127 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1651", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1651/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1651/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1651/events", "html_url": "https://github.com/pallets/werkzeug/issues/1651", "id": 499406552, "node_id": "MDU6SXNzdWU0OTk0MDY1NTI=", "number": 1651, "title": "LanguageAccept.best_match fails matching langs with extras to bare langs", "user": {"login": "golyalpha", "id": 8203992, "node_id": "MDQ6VXNlcjgyMDM5OTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8203992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/golyalpha", "html_url": "https://github.com/golyalpha", "followers_url": "https://api.github.com/users/golyalpha/followers", "following_url": "https://api.github.com/users/golyalpha/following{/other_user}", "gists_url": "https://api.github.com/users/golyalpha/gists{/gist_id}", "starred_url": "https://api.github.com/users/golyalpha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/golyalpha/subscriptions", "organizations_url": "https://api.github.com/users/golyalpha/orgs", "repos_url": "https://api.github.com/users/golyalpha/repos", "events_url": "https://api.github.com/users/golyalpha/events{/privacy}", "received_events_url": "https://api.github.com/users/golyalpha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-27T12:04:39Z", "updated_at": "2019-09-27T16:52:21Z", "closed_at": "2019-09-27T12:21:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Werkzeug version: 0.16.0\r\n\r\nUsed through Flask.\r\n\r\nIn flask:\r\n```py\r\nprint(\"Accept-Language: %s\" % (request.accept_languages,))\r\nprint(\"Best match: %s\" % (request.accept_languages.best_match([\"en\"]),))\r\n```\r\nComes back with:\r\n```\r\nAccept-Language: en-gb\r\nBest match: None\r\n```\r\nWhen request comes from Safari. UA:\r\n```\r\nMozilla/5.0 (iPhone; CPU iPhone OS 13_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0 Mobile/15E148 Safari/604.1\r\n```\r\n\r\nAccording to #450, Best match should be `en` instead.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1650", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1650/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1650/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1650/events", "html_url": "https://github.com/pallets/werkzeug/issues/1650", "id": 497748125, "node_id": "MDU6SXNzdWU0OTc3NDgxMjU=", "number": 1650, "title": "AttributeError: module 'select' has no attribute 'poll' introduced by 0.16.0", "user": {"login": "unitof", "id": 2448782, "node_id": "MDQ6VXNlcjI0NDg3ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2448782?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unitof", "html_url": "https://github.com/unitof", "followers_url": "https://api.github.com/users/unitof/followers", "following_url": "https://api.github.com/users/unitof/following{/other_user}", "gists_url": "https://api.github.com/users/unitof/gists{/gist_id}", "starred_url": "https://api.github.com/users/unitof/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unitof/subscriptions", "organizations_url": "https://api.github.com/users/unitof/orgs", "repos_url": "https://api.github.com/users/unitof/repos", "events_url": "https://api.github.com/users/unitof/events{/privacy}", "received_events_url": "https://api.github.com/users/unitof/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-24T15:03:42Z", "updated_at": "2019-09-24T16:17:08Z", "closed_at": "2019-09-24T16:13:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "5 days ago our deployments began failing even when we reverted our source code to exactly the state it was prior to the failure.\r\n\r\nThat timing correlates with when Werkzeug 0.16.0 was released.\r\n\r\nThe build itself is successful, but as soon as Flask starts it results in a Kubernetes CrashLoopBackoff, due to:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/flask\", line 10, in <module>\r\n    sys.exit(main())\r\n  File \"/usr/local/lib/python3.6/site-packages/flask/cli.py\", line 966, in main\r\n    cli.main(prog_name=\"python -m flask\" if as_module else None)\r\n  File \"/usr/local/lib/python3.6/site-packages/flask/cli.py\", line 586, in main\r\n    return super(FlaskGroup, self).main(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/click/core.py\", line 717, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/usr/local/lib/python3.6/site-packages/click/core.py\", line 1137, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/usr/local/lib/python3.6/site-packages/click/core.py\", line 956, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/usr/local/lib/python3.6/site-packages/click/core.py\", line 555, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/click/decorators.py\", line 64, in new_func\r\n    return ctx.invoke(f, obj, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/click/core.py\", line 555, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/flask/cli.py\", line 860, in run_command\r\n    extra_files=extra_files,\r\n  File \"/usr/local/lib/python3.6/site-packages/werkzeug/serving.py\", line 1010, in run_simple\r\n    inner()\r\n  File \"/usr/local/lib/python3.6/site-packages/werkzeug/serving.py\", line 967, in inner\r\n    srv.serve_forever()\r\n  File \"/usr/local/lib/python3.6/site-packages/werkzeug/serving.py\", line 735, in serve_forever\r\n    HTTPServer.serve_forever(self)\r\n  File \"/usr/local/lib/python3.6/socketserver.py\", line 232, in serve_forever\r\n    with _ServerSelector() as selector:\r\n  File \"/usr/local/lib/python3.6/selectors.py\", line 348, in __init__\r\n    self._poll = select.poll()\r\nAttributeError: module 'select' has no attribute 'poll'\r\n```\r\n\r\nUnfortunately the `Werkzeug>=0.15` dependency comes from both `flask-socketio` and `flask_cors`, so I cannot easily revert Werkzeug it to `0.15` within my code (as far as I know\u2014please let me know if there is a way to do this).\r\n\r\nIs this something I can likely address in my code, or is this an incompatibility between Werkzeug 0.16.0 and `flask-socketio` and `flask_cors`? If the latter, should I PR them to lock their dependency to `Werkzeug==0.15`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1649", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1649/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1649/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1649/events", "html_url": "https://github.com/pallets/werkzeug/issues/1649", "id": 496670442, "node_id": "MDU6SXNzdWU0OTY2NzA0NDI=", "number": 1649, "title": "When the client disconnects, Werkzeug does not cancel streaming response that sends no data", "user": {"login": "Vlad-Shcherbina", "id": 302938, "node_id": "MDQ6VXNlcjMwMjkzOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/302938?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vlad-Shcherbina", "html_url": "https://github.com/Vlad-Shcherbina", "followers_url": "https://api.github.com/users/Vlad-Shcherbina/followers", "following_url": "https://api.github.com/users/Vlad-Shcherbina/following{/other_user}", "gists_url": "https://api.github.com/users/Vlad-Shcherbina/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vlad-Shcherbina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vlad-Shcherbina/subscriptions", "organizations_url": "https://api.github.com/users/Vlad-Shcherbina/orgs", "repos_url": "https://api.github.com/users/Vlad-Shcherbina/repos", "events_url": "https://api.github.com/users/Vlad-Shcherbina/events{/privacy}", "received_events_url": "https://api.github.com/users/Vlad-Shcherbina/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-09-21T15:50:38Z", "updated_at": "2019-09-21T23:00:22Z", "closed_at": "2019-09-21T22:24:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n\r\n1. Run the following program:\r\n    ```python\r\n    import time\r\n    from werkzeug.wrappers import Request, Response\r\n\r\n    @Request.application\r\n    def app(request):\r\n        def gen():\r\n            while True:\r\n                print('still running...')\r\n                yield ''\r\n                time.sleep(1)\r\n        return Response(gen())\r\n\r\n    if __name__ == '__main__':\r\n        from werkzeug.serving import run_simple\r\n        run_simple('localhost', 8000, app)\r\n    ```\r\n2. Open `http://localhost:8000` in the browser.\r\n3. Close this browser tab.\r\n\r\n### Expected result\r\n\r\n\"still running...\" messages appear as long as the tab is open and stop once it's closed.\r\n\r\n### Actual result\r\n\r\nThe messages keep appearing indefinitely.\r\n\r\n### Version info\r\n\r\n```\r\nPython 3.7.3 (v3.7.3:ef4ec6ed12, Mar 25 2019, 22:22:05) [MSC v.1916 64 bit (AMD64)] on win32\r\nWerkzeug 0.15.6\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1646", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1646/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1646/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1646/events", "html_url": "https://github.com/pallets/werkzeug/issues/1646", "id": 495893256, "node_id": "MDU6SXNzdWU0OTU4OTMyNTY=", "number": 1646, "title": "Problem passing nested form dict to test request.", "user": {"login": "toonarmycaptain", "id": 29956894, "node_id": "MDQ6VXNlcjI5OTU2ODk0", "avatar_url": "https://avatars3.githubusercontent.com/u/29956894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toonarmycaptain", "html_url": "https://github.com/toonarmycaptain", "followers_url": "https://api.github.com/users/toonarmycaptain/followers", "following_url": "https://api.github.com/users/toonarmycaptain/following{/other_user}", "gists_url": "https://api.github.com/users/toonarmycaptain/gists{/gist_id}", "starred_url": "https://api.github.com/users/toonarmycaptain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toonarmycaptain/subscriptions", "organizations_url": "https://api.github.com/users/toonarmycaptain/orgs", "repos_url": "https://api.github.com/users/toonarmycaptain/repos", "events_url": "https://api.github.com/users/toonarmycaptain/events{/privacy}", "received_events_url": "https://api.github.com/users/toonarmycaptain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-19T16:03:29Z", "updated_at": "2019-11-26T16:05:12Z", "closed_at": "2019-09-19T16:45:52Z", "author_association": "NONE", "active_lock_reason": "resolved", "body": "\r\nI have a nested form (generated from a series of subforms) generated by Flask_WTF, such that my form can be accessed in my route as `first = form.form_field_1.data` and `second = form.nested_form.nested_form_field_1.data`\r\nNote that this works and does what I expect it to when running regularly. \r\n\r\nMy problem is faking this out in a request inside pytest to test the route/data placed into the session cookie: \r\nFirst using original dict:\r\n```\r\nrequest_data = {'form_field_1': 'whatever data',\r\n                'nested_form': {'nested_form_field_1': 'whatever more data'},\r\n                }\r\n```\r\nand in my test using `response = test_client.post('myroute/', data=request_data)`\r\n\r\nResults in an error:\r\n```\r\nself = <flask.testing.EnvironBuilder object at 0x00000162924A8588>\r\nkey = 'nested_form', value = {'nested_form_field_1': 'whatever more data'}\r\n\r\n    def _add_file_from_data(self, key, value):\r\n        \"\"\"Called in the EnvironBuilder to add files from the data dict.\"\"\"\r\n        if isinstance(value, tuple):\r\n            self.files.add_file(key, *value)\r\n        elif isinstance(value, dict):\r\n            from warnings import warn\r\n    \r\n            warn(\r\n                \"Passing a dict as file data is deprecated as of\"\r\n                \" version 0.5 and will be removed in version 1.0. Use\"\r\n                \" a tuple or 'FileStorage' object instead.\",\r\n                DeprecationWarning,\r\n                stacklevel=2,\r\n            )\r\n            value = dict(value)\r\n            mimetype = value.pop(\"mimetype\", None)\r\n            if mimetype is not None:\r\n                value[\"content_type\"] = mimetype\r\n>           self.files.add_file(key, **value)\r\nE           TypeError: add_file() got an unexpected keyword argument 'nested_form_field_1'\r\n\r\n..\\..\\my_mcve_env\\lib\\site-packages\\werkzeug\\test.py:474: TypeError\r\n```\r\n\r\nIf in the route I print my `request.form` to the console (when running regularly outside testing) I get: `ImmutableMultiDict([('csrf_token', '...'), ('form_field_1', 'whatever data'), ('nested_form-csrf_token',\r\n '...'), ('nested_form-nested_form_field_1', 'whatever more data'), ('submit', 'Submit')])`\r\n\r\nAnd I see the dict has a dash between the nested form name and the field name, so I think, maybe I can fake it out since it looks like it's flattening the dict, and I pass:\r\n```\r\nrequest_data = {'form_field_1': 'whatever data',\r\n                'nested_form-nested_form_field_1': 'whatever more data',\r\n                }\r\n```\r\n\r\nWhich results in the error:\r\n```\r\n assert flask.session['nested_form-nested_form_field_1'] == {\r\n                'nested_form_field_1': request_data['nested_form']['nested_form_field_1']}\r\nE           KeyError: 'nested_form'\r\n```\r\neven though the request.form in my print debug statement reads (I disable CSRF for testing):\r\n```\r\nImmutableMultiDict([('form_field_1', 'whatever data',), ('nested_form-nested_form_field_1', 'whatever more data')])\r\n```\r\n\r\nNow when I try this second method, comment out the code that would use the nested form field, and disable the assert that tests the nested value is passed to the session, the test passes, so I know the first field is passing fine in the test. \r\n\r\n\r\nI found somewhere to try passing the form dict as json:\r\n```\r\nresponse = test_client.post(\r\n            'myroute/', data=json.dumps(request_data), content_type='application/json')\r\n```\r\nBut this doesn't seem to pass even the first field to the \r\n```\r\n>           assert flask.session['form_field_1'] == request_data['form_field_1']\r\n\r\nmy_mcve_app.py:101: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n..\\..\\my_mcve_env\\lib\\site-packages\\werkzeug\\local.py:378: in <lambda>\r\n    __getitem__ = lambda x, i: x._get_current_object()[i]\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <SecureCookieSession {}>, key = 'form_field_1'\r\n\r\n    def __getitem__(self, key):\r\n        self.accessed = True\r\n>       return super(SecureCookieSession, self).__getitem__(key)\r\nE       KeyError: 'form_field_1'\r\n\r\n..\\..\\my_mcve_env\\lib\\site-packages\\flask\\sessions.py:84: KeyError\r\n```\r\n\r\nIt doesn't appear to place anything inside the form key inside the request, but when I instead print the request.__dict__ in my app during the test I get:\r\n```\r\n{'environ': {'REMOTE_ADDR': '127.0.0.1', 'HTTP_USER_AGENT': 'werkzeug/0.15.6', 'REQUEST_METHOD': 'POST', 'SCRIPT_NAME': '', 'PATH_INFO': 'myroute/', 'QUERY_STRING': '', 'REQUEST_URI': 'myroute/', 'RAW_URI': 'myroute/', 'SERVER_NAME': 'localhost', 'SERVER_PORT': '80', 'HTTP_HOST': 'localhost', 'SERVER_PROTOCOL': 'HTTP/1.1', 'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BytesIO object at 0x000001E747453C50>, 'wsgi.errors': <_pytest.capture.EncodedFile object at 0x000001E74643F550>, 'wsgi.multithread': False, 'wsgi.multiprocess': False, 'wsgi.run_once': False, 'CONTENT_TYPE': 'application/json', 'CONTENT_LENGTH': '72', 'HTTP_CONTENT_TYPE': 'application/json', 'HTTP_CONTENT_LENGTH': '72', 'flask._preserve_context': True, 'werkzeug.request': <Request 'http://localhost/myroute/' [POST]>}, 'shallow': False, 'cookies': {}, 'url_rule': <Rule '/myroute/' (OPTIONS, GET, POST, HEAD) -> my_mcve_app.my_mcve>, 'view_args': {}, 'stream': <werkzeug.wsgi.LimitedStream object at 0x000001E74743F630>, 'form': ImmutableMultiDict([]), 'files': ImmutableMultiDict([]), '_parsed_content_type': ('application/json', {}), '_cached_data': b'{'form_field_1': 'whatever data', 'nested_form': {'nested_form_field_1': 'whatever more data'}}', '_cached_json': ({'form_field_1': 'whatever data', 'nested_form: {'nested_form_field_1': 'whatever more data'}}, {'form_field_1': 'whatever data', 'nested_form': {'nested_form_field_1': 'whatever more data'}}), 'url': 'http://localhost/myroute/'}\r\n```\r\n\r\nI comprehend the warning that shows passing dicts is deprecated and will be removed in 1.0, but this is werkzeug v0.15, flask v1.1.1, pytest v5.1.2, so I would not expect it to be removed yet. \r\nEither way - since this is the production behaviour - nesting dicts with flask-wtf is possible, which leads to nested dicts in the request, unless I'm doing something wrong that I would be better achieving another way?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1645", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1645/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1645/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1645/events", "html_url": "https://github.com/pallets/werkzeug/issues/1645", "id": 495352892, "node_id": "MDU6SXNzdWU0OTUzNTI4OTI=", "number": 1645, "title": "The float converter does not recognise whole numbers", "user": {"login": "logi", "id": 217723, "node_id": "MDQ6VXNlcjIxNzcyMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/217723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/logi", "html_url": "https://github.com/logi", "followers_url": "https://api.github.com/users/logi/followers", "following_url": "https://api.github.com/users/logi/following{/other_user}", "gists_url": "https://api.github.com/users/logi/gists{/gist_id}", "starred_url": "https://api.github.com/users/logi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/logi/subscriptions", "organizations_url": "https://api.github.com/users/logi/orgs", "repos_url": "https://api.github.com/users/logi/repos", "events_url": "https://api.github.com/users/logi/events{/privacy}", "received_events_url": "https://api.github.com/users/logi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-18T17:15:29Z", "updated_at": "2019-09-18T21:40:53Z", "closed_at": "2019-09-18T21:40:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "The `float` converter does not allow integers (`123`) or floats with trailing periods (`123.`) but either of those are likely to be created by both machine and human clients of an API when they are told to enter a number or even a float.\r\n\r\nThis is also causing our APIs created with Connexion from an OpenApi spec to break that spec since OpenApi does not require values of the `number` type to have a period followed by a number and the routing is delegated to Flask. See https://github.com/zalando/connexion/issues/1041\r\n\r\nI propose a solution similar to #729, adding an `allow_int` argument to the `float` converter which would relax the regular expression and is `False` by default. I'm willing to make that pull request if I think it might in principle be merged.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1642", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1642/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1642/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1642/events", "html_url": "https://github.com/pallets/werkzeug/issues/1642", "id": 494171867, "node_id": "MDU6SXNzdWU0OTQxNzE4Njc=", "number": 1642, "title": "MIMEAccept.best_match() should return default if the only item is */*", "user": {"login": "anlutro", "id": 163093, "node_id": "MDQ6VXNlcjE2MzA5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/163093?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anlutro", "html_url": "https://github.com/anlutro", "followers_url": "https://api.github.com/users/anlutro/followers", "following_url": "https://api.github.com/users/anlutro/following{/other_user}", "gists_url": "https://api.github.com/users/anlutro/gists{/gist_id}", "starred_url": "https://api.github.com/users/anlutro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anlutro/subscriptions", "organizations_url": "https://api.github.com/users/anlutro/orgs", "repos_url": "https://api.github.com/users/anlutro/repos", "events_url": "https://api.github.com/users/anlutro/events{/privacy}", "received_events_url": "https://api.github.com/users/anlutro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-16T17:08:18Z", "updated_at": "2020-01-04T23:44:29Z", "closed_at": "2019-09-17T20:16:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Current behavior:\r\n\r\n```\r\n>>> from werkzeug.datastructures import MIMEAccept\r\n>>> MIMEAccept([(\"*/*\", 1)]).best_match([\"text/plain\", \"text/html\"], default=\"text/html\")\r\n'text/plain'\r\n```\r\n\r\nIt seems like the first item in the `matches` list is always returned.\r\n\r\nI argue that because the client accepts anything, the default is what should be considered rather than the item first in the list.\r\n\r\n`*/*` as the Accept header is fairly common - for example, `curl` does it by default:\r\n\r\n```\r\n$ curl https://httpbin.org/headers\r\n{\r\n  \"headers\": {\r\n    \"Accept\": \"*/*\", \r\n    \"Host\": \"httpbin.org\", \r\n    \"User-Agent\": \"curl/7.64.0\"\r\n  }\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1641", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1641/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1641/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1641/events", "html_url": "https://github.com/pallets/werkzeug/issues/1641", "id": 493557465, "node_id": "MDU6SXNzdWU0OTM1NTc0NjU=", "number": 1641, "title": "Add JSON PATCH support ", "user": {"login": "shawalli", "id": 2999598, "node_id": "MDQ6VXNlcjI5OTk1OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2999598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shawalli", "html_url": "https://github.com/shawalli", "followers_url": "https://api.github.com/users/shawalli/followers", "following_url": "https://api.github.com/users/shawalli/following{/other_user}", "gists_url": "https://api.github.com/users/shawalli/gists{/gist_id}", "starred_url": "https://api.github.com/users/shawalli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shawalli/subscriptions", "organizations_url": "https://api.github.com/users/shawalli/orgs", "repos_url": "https://api.github.com/users/shawalli/repos", "events_url": "https://api.github.com/users/shawalli/events{/privacy}", "received_events_url": "https://api.github.com/users/shawalli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-14T00:02:47Z", "updated_at": "2019-09-14T19:29:02Z", "closed_at": "2019-09-14T19:29:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Introduction\r\n\r\n[RFC 6902](https://tools.ietf.org/html/rfc6902) documents the JSON PATCH media type, used during a PATCH method call<sup>1</sup>. The sole purpose of this media type is to describe the PATCH method operations in JSON format.\r\n\r\n# Implementation\r\n\r\nThis functionality could be implemented much in the same way JSON is supported in `wrappers.json.JSONMixin` class. The `Mixin` class would therefore support implementations of:\r\n* class-attribute `json_module`\r\n* instance property `jsonpatch`\r\n* instance property `is_jsonpatch`\r\n* instance method `_get_data_for_jsonpatch`\r\n* instance property `_cached_jsonpatch`\r\n* instance method `get_jsonpatch`\r\n\r\nThe return value of `get_jsonpatch` would be of type `jsonpatch.JsonPatch` (found in the [jsonpatch](https://github.com/stefankoegl/python-json-patch) module).\r\n\r\n# Note on JSONMixin Compatability\r\n\r\nIt should be noted that this media type should probably _not_ fall back to `json` in the event that this mixin is not used. For one, the functionality would need to be duplicated, to an extent. Because Mixins don't inherit from other Mixins, the `JSONMixin` would need to check for this media type and then load as JSON. In the event that both Mixins are used, there would be JSON data from `get_json` and JSON-PATCH data from `get_jsonpatch`. This isn't the end of the world, but it certainly isn't clear either.\r\n\r\n# Footnotes\r\n1 - This document may be thought of as a sibling to [RFC 7351](https://tools.ietf.org/html/rfc7351), the XML PATCH media type.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1637", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1637/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1637/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1637/events", "html_url": "https://github.com/pallets/werkzeug/issues/1637", "id": 490482463, "node_id": "MDU6SXNzdWU0OTA0ODI0NjM=", "number": 1637, "title": "Environment Building doc is Python2 only", "user": {"login": "lafrech", "id": 1767010, "node_id": "MDQ6VXNlcjE3NjcwMTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1767010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lafrech", "html_url": "https://github.com/lafrech", "followers_url": "https://api.github.com/users/lafrech/followers", "following_url": "https://api.github.com/users/lafrech/following{/other_user}", "gists_url": "https://api.github.com/users/lafrech/gists{/gist_id}", "starred_url": "https://api.github.com/users/lafrech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lafrech/subscriptions", "organizations_url": "https://api.github.com/users/lafrech/orgs", "repos_url": "https://api.github.com/users/lafrech/repos", "events_url": "https://api.github.com/users/lafrech/events{/privacy}", "received_events_url": "https://api.github.com/users/lafrech/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-06T19:14:48Z", "updated_at": "2019-09-06T19:18:08Z", "closed_at": "2019-09-06T19:18:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Trying to work with `EnvironBuilder`, I realized the doc example is Python 2 only.\r\n\r\nhttps://werkzeug.palletsprojects.com/en/0.15.x/test/#environment-building\r\n\r\nFor people not familiar with Python 2 vs. 3 differences about bytes/str it can be confusing. \r\n\r\nBesides, since Python 2 reaches end of life, it would make sense to have all the doc examples expressed as Python 3.\r\n\r\n--------------------------------------------------------------------------------------------\r\n\r\nHere's the Python 2 doc example:\r\n\r\n```py\r\nfrom werkzeug.test import EnvironBuilder\r\nfrom StringIO import StringIO\r\nbuilder = EnvironBuilder(method='POST', data={'foo': 'this is some text', 'file': (StringIO('my file contents'), 'test.txt')})\r\nenv = builder.get_environ()\r\n\r\nfrom werkzeug.wrappers import Request\r\nreq = Request(env)\r\nreq.form['foo']\r\n# u'this is some text'\r\nreq.files['file']\r\n# <FileStorage: u'test.txt' ('text/plain')>\r\nreq.files['file'].read()\r\n# 'my file contents'\r\n```\r\n\r\nTrying to translate this to Python 3:\r\n\r\nLet's fix the import\r\n\r\n```py\r\nfrom io import StringIO\r\n```\r\n\r\n```py\r\nenv = builder.get_environ()\r\nTypeError: a bytes-like object is required, not 'str'\r\n```\r\n\r\nOK, so we need bytes.\r\n\r\n```py\r\nfrom io import BytesIO\r\nbuilder = EnvironBuilder(method='POST', data={'foo': 'this is some text', 'file': (BytesIO('my file contents'.encode()), 'test.txt')})\r\n```\r\n\r\nIf this is the right way to proceed, then the docs could read\r\n\r\n```py\r\nfrom werkzeug.test import EnvironBuilder\r\nfrom io import BytesIO\r\nbuilder = EnvironBuilder(method='POST', data={'foo': 'this is some text', 'file': (BytesIO('my file contents'.encode()), 'test.txt')})\r\nenv = builder.get_environ()\r\n\r\nfrom werkzeug.wrappers import Request\r\nreq = Request(env)\r\nreq.form['foo']\r\n# 'this is some text'\r\nreq.files['file']\r\n# <FileStorage: u'test.txt' ('text/plain')>\r\nreq.files['file'].read()\r\n# b'my file contents'\r\n```\r\n\r\nI don't mind sending a PR but I'm not 100% confident this is the right change.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1633", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1633/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1633/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1633/events", "html_url": "https://github.com/pallets/werkzeug/issues/1633", "id": 488288929, "node_id": "MDU6SXNzdWU0ODgyODg5Mjk=", "number": 1633, "title": "Document all exception classes", "user": {"login": "pieterb", "id": 158029, "node_id": "MDQ6VXNlcjE1ODAyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/158029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pieterb", "html_url": "https://github.com/pieterb", "followers_url": "https://api.github.com/users/pieterb/followers", "following_url": "https://api.github.com/users/pieterb/following{/other_user}", "gists_url": "https://api.github.com/users/pieterb/gists{/gist_id}", "starred_url": "https://api.github.com/users/pieterb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pieterb/subscriptions", "organizations_url": "https://api.github.com/users/pieterb/orgs", "repos_url": "https://api.github.com/users/pieterb/repos", "events_url": "https://api.github.com/users/pieterb/events{/privacy}", "received_events_url": "https://api.github.com/users/pieterb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 123875538, "node_id": "MDU6TGFiZWwxMjM4NzU1Mzg=", "url": "https://api.github.com/repos/pallets/werkzeug/labels/docs", "name": "docs", "color": "fef2c0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-02T18:30:53Z", "updated_at": "2019-09-03T14:23:01Z", "closed_at": "2019-09-03T14:22:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Some exception classes (eg. `werkzeug.exceptions.UnprocessableEntity`) are undocumented at readthedocs, even though docstrings for these exception classes exist.\r\n\r\nSolution: add these classes to [`docs/exceptions.rst`](/pallets/werkzeug/blob/master/docs/exceptions.rst).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1632", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1632/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1632/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1632/events", "html_url": "https://github.com/pallets/werkzeug/issues/1632", "id": 487708124, "node_id": "MDU6SXNzdWU0ODc3MDgxMjQ=", "number": 1632, "title": "when testing, cookie doesn't end up in environ in >= 0.15.2", "user": {"login": "lswainemoore", "id": 5581503, "node_id": "MDQ6VXNlcjU1ODE1MDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/5581503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lswainemoore", "html_url": "https://github.com/lswainemoore", "followers_url": "https://api.github.com/users/lswainemoore/followers", "following_url": "https://api.github.com/users/lswainemoore/following{/other_user}", "gists_url": "https://api.github.com/users/lswainemoore/gists{/gist_id}", "starred_url": "https://api.github.com/users/lswainemoore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lswainemoore/subscriptions", "organizations_url": "https://api.github.com/users/lswainemoore/orgs", "repos_url": "https://api.github.com/users/lswainemoore/repos", "events_url": "https://api.github.com/users/lswainemoore/events{/privacy}", "received_events_url": "https://api.github.com/users/lswainemoore/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-31T00:08:51Z", "updated_at": "2019-08-31T02:06:50Z", "closed_at": "2019-08-31T02:06:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using Flask and Flask-Testing, and attempting to set a cookie going into a request, like so:\r\n\r\n`resp = self.client.get('/blah', headers={'Cookie': 'cookiename=cookieval')`\r\n\r\nPrior to 0.15.2, the cookie will get passed through just fine, and is accessible on `request.headers` and `request.cookies`. On >= 0.15.2, `request.headers` no longer has the cookie and `request.cookies` is empty.\r\n\r\nI stepped through, and I believe the line that causes the cookie to get dropped is `environ.pop(\"HTTP_COOKIE\", None)` \r\n\r\nhttps://github.com/pallets/werkzeug/blob/d958822b5dfbc38e8192df368df162aa4bd7caf0/src/werkzeug/test.py#L198\r\n\r\nwhich seems to have been introduced by https://github.com/pallets/werkzeug/issues/1491.\r\n\r\nI'm not sure I follow the logic in that issue, but the line seems to have been intended to solve something unrelated (I'm not dealing with the `follow_redirects` kwarg), and is causing this behavior as a side-effect.\r\n\r\nIt's definitely not out of the question that I'm not setting the cookie right in the first place, and that it worked in < 0.15.2 was a happy accident. If that's the case, I'd love to know the better way to do it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1630", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1630/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1630/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1630/events", "html_url": "https://github.com/pallets/werkzeug/issues/1630", "id": 486782441, "node_id": "MDU6SXNzdWU0ODY3ODI0NDE=", "number": 1630, "title": "Enable x_host and x_proto by default through deprecated proxyfix?", "user": {"login": "xmo-odoo", "id": 7571158, "node_id": "MDQ6VXNlcjc1NzExNTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/7571158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xmo-odoo", "html_url": "https://github.com/xmo-odoo", "followers_url": "https://api.github.com/users/xmo-odoo/followers", "following_url": "https://api.github.com/users/xmo-odoo/following{/other_user}", "gists_url": "https://api.github.com/users/xmo-odoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/xmo-odoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xmo-odoo/subscriptions", "organizations_url": "https://api.github.com/users/xmo-odoo/orgs", "repos_url": "https://api.github.com/users/xmo-odoo/repos", "events_url": "https://api.github.com/users/xmo-odoo/events{/privacy}", "received_events_url": "https://api.github.com/users/xmo-odoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/10", "html_url": "https://github.com/pallets/werkzeug/milestone/10", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/10/labels", "id": 4500596, "node_id": "MDk6TWlsZXN0b25lNDUwMDU5Ng==", "number": 10, "title": "0.15.6", "description": "", "creator": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 7, "state": "closed", "created_at": "2019-07-18T01:07:55Z", "updated_at": "2019-09-04T20:12:47Z", "due_on": null, "closed_at": "2019-09-04T20:12:47Z"}, "comments": 1, "created_at": "2019-08-29T07:17:48Z", "updated_at": "2019-09-03T16:51:54Z", "closed_at": "2019-09-03T16:51:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "When #1314 refactored ProxyFix, it aliased num_proxies to x_for only (as that was the only one which previously supported multiple proxies).\r\n\r\nHowever in doing so it disabled forwarding of host and scheme, [which were forwarded by default up to 0.14](https://github.com/pallets/werkzeug/blob/f1d15a2c7f35dcde0e52787c9fdf9ea6f6405308/werkzeug/contrib/fixers.py#L146-L151), which breaks systems relying on this.\r\n\r\nI'd like to set x_host=1 and x_proto=1 in 0.15 IFF the user goes through the deprecated wrapper (`werkzeug.contrib.fixers.ProxyFix`) in order to restore the old behaviour, and maybe add a small warning about this behavioural change to the deprecation message (or possibly in one of the `versionchanged` blocks of the new version). Would that be acceptable / interesting or a waste of time?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1629", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1629/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1629/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1629/events", "html_url": "https://github.com/pallets/werkzeug/issues/1629", "id": 486251286, "node_id": "MDU6SXNzdWU0ODYyNTEyODY=", "number": 1629, "title": "ImportError: cannot import name '_encode_idna' from 'werkzeug._internal'", "user": {"login": "Villem-OskarOssip", "id": 23223100, "node_id": "MDQ6VXNlcjIzMjIzMTAw", "avatar_url": "https://avatars2.githubusercontent.com/u/23223100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Villem-OskarOssip", "html_url": "https://github.com/Villem-OskarOssip", "followers_url": "https://api.github.com/users/Villem-OskarOssip/followers", "following_url": "https://api.github.com/users/Villem-OskarOssip/following{/other_user}", "gists_url": "https://api.github.com/users/Villem-OskarOssip/gists{/gist_id}", "starred_url": "https://api.github.com/users/Villem-OskarOssip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Villem-OskarOssip/subscriptions", "organizations_url": "https://api.github.com/users/Villem-OskarOssip/orgs", "repos_url": "https://api.github.com/users/Villem-OskarOssip/repos", "events_url": "https://api.github.com/users/Villem-OskarOssip/events{/privacy}", "received_events_url": "https://api.github.com/users/Villem-OskarOssip/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-28T09:07:04Z", "updated_at": "2019-09-03T14:45:10Z", "closed_at": "2019-09-03T14:45:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nWhen I try to run my Python Flash code from PyCharm with Profile, but I get the following error:\r\n```\r\nImportError: cannot import name '_encode_idna' from 'werkzeug._internal' (/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/werkzeug/_internal.py)\r\n```\r\n\r\nHere is the full error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Applications/PyCharm.app/Contents/helpers/profiler/run_profiler.py\", line 173, in <module>\r\n    profiler.run(file)\r\n  File \"/Applications/PyCharm.app/Contents/helpers/profiler/run_profiler.py\", line 89, in run\r\n    execfile(file, globals, globals)  # execute the script\r\n  File \"/Applications/PyCharm.app/Contents/helpers/profiler/prof_util.py\", line 30, in execfile\r\n    exec(compile(contents+\"\\n\", file, 'exec'), glob, loc)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/flask/__init__.py\", line 17, in <module>\r\n    from werkzeug.exceptions import abort\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/werkzeug/__init__.py\", line 233, in <module>\r\n    __import__(\"werkzeug.exceptions\")\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/werkzeug/exceptions.py\", line 72, in <module>\r\n    from ._internal import _get_environ\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/werkzeug/_internal.py\", line 12, in <module>\r\n    import logging\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/flask/logging.py\", line 15, in <module>\r\n    from werkzeug.local import LocalProxy\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/werkzeug/local.py\", line 16, in <module>\r\n    from .wsgi import ClosingIterator\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/werkzeug/wsgi.py\", line 27, in <module>\r\n    from ._internal import _encode_idna\r\nImportError: cannot import name '_encode_idna' from 'werkzeug._internal' (/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/werkzeug/_internal.py)\r\n```\r\n\r\nI used ` pip install -U werkzeug `, but nothing changed. \r\n\r\nWhat might be the issue?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1626", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1626/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1626/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1626/events", "html_url": "https://github.com/pallets/werkzeug/issues/1626", "id": 480387838, "node_id": "MDU6SXNzdWU0ODAzODc4Mzg=", "number": 1626, "title": "UTF-8 Decode Error on Getting JSON", "user": {"login": "BtLutz", "id": 6282374, "node_id": "MDQ6VXNlcjYyODIzNzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6282374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BtLutz", "html_url": "https://github.com/BtLutz", "followers_url": "https://api.github.com/users/BtLutz/followers", "following_url": "https://api.github.com/users/BtLutz/following{/other_user}", "gists_url": "https://api.github.com/users/BtLutz/gists{/gist_id}", "starred_url": "https://api.github.com/users/BtLutz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BtLutz/subscriptions", "organizations_url": "https://api.github.com/users/BtLutz/orgs", "repos_url": "https://api.github.com/users/BtLutz/repos", "events_url": "https://api.github.com/users/BtLutz/events{/privacy}", "received_events_url": "https://api.github.com/users/BtLutz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-13T21:55:30Z", "updated_at": "2019-09-03T17:16:50Z", "closed_at": "2019-09-03T17:16:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Forgive me, this is the first issue I've opened.\r\n\r\nI ran into an issue when Unicode characters are included in the POST body of a Request object upon calling request.get_json():\r\n\r\n```\r\nFile \"/usr/lib/python3.7/site-packages/flask/wrappers.py\", line 157, in get_json\r\n    rv = json.loads(data)\r\nFile \"/usr/lib/python3.7/site-packages/flask/json.py\", line 145, in loads\r\n    s = s.decode(kwargs.pop('encoding', None) or 'utf-8')\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xe7 in position 2849: invalid continuation byte\r\n```\r\n\r\nI have a feeling it's due to the code below in json.py:\r\n```\r\nif isinstance(s, bytes):\r\n    # Needed for Python < 3.6\r\n    encoding = detect_utf_encoding(s)\r\n    s = s.decode(encoding)\r\n```\r\nYou'll notice that the exception has a different line of code than the block below it. However, I tested the code block above from Werkzeug 0.15 in a Python interpreter and got the same result\r\n```\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xe7 in position 9: invalid continuation byte\r\n```\r\n\r\nPython version is 3.7, Werkzeug version is whichever came with Flask 0.12.2.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1625", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1625/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1625/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1625/events", "html_url": "https://github.com/pallets/werkzeug/issues/1625", "id": 479685927, "node_id": "MDU6SXNzdWU0Nzk2ODU5Mjc=", "number": 1625, "title": "url_parse throws ValueError: Invalid IPv6 URL", "user": {"login": "alpire", "id": 111427, "node_id": "MDQ6VXNlcjExMTQyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/111427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alpire", "html_url": "https://github.com/alpire", "followers_url": "https://api.github.com/users/alpire/followers", "following_url": "https://api.github.com/users/alpire/following{/other_user}", "gists_url": "https://api.github.com/users/alpire/gists{/gist_id}", "starred_url": "https://api.github.com/users/alpire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alpire/subscriptions", "organizations_url": "https://api.github.com/users/alpire/orgs", "repos_url": "https://api.github.com/users/alpire/repos", "events_url": "https://api.github.com/users/alpire/events{/privacy}", "received_events_url": "https://api.github.com/users/alpire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-12T14:43:51Z", "updated_at": "2019-08-12T22:02:37Z", "closed_at": "2019-08-12T22:00:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- If you'd like to report a bug in Flask, fill out the template below. Provide\r\nany extra information that may be useful / related to your problem.\r\nIdeally, create an [MCVE](https://stackoverflow.com/help/mcve), which helps us\r\nunderstand the problem and helps check that it is not caused by something in\r\nyour code. -->\r\n\r\n### Steps to Repro\r\n\r\n1. Create a flask app in `app.py`:\r\n\r\n```python\r\nfrom flask import Flask\r\n\r\napp = Flask(__name__)\r\n\r\n@app.route(\"/\")\r\ndef hello():\r\n    return \"Hello, World!\"\r\n```\r\n\r\n2. Start the server with `FLASK_APP=app.py flask run`\r\n\r\n3. Run `echo -ne \"GET # HTTP/1.1\\r\\nHost:[\\r\\n\\r\\n\" | nc localhost 5000`. This will trigger the exception below\r\n\r\n### Expected Behavior\r\n<!-- Tell us what should happen. -->\r\n\r\nI would expect a 4xx response code.\r\n\r\n### Actual Behavior\r\n<!-- Tell us what happens instead. -->\r\n\r\nThe server returns a 500 response code due to the following exception:\r\n\r\n```pytb\r\nTraceback (most recent call last):\r\n  File \"/Users/apr/.pyenv/versions/3.7.2/lib/python3.7/site-packages/flask/app.py\", line 2446, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/Users/apr/.pyenv/versions/3.7.2/lib/python3.7/site-packages/flask/app.py\", line 1952, in full_dispatch_request\r\n    return self.finalize_request(rv)\r\n  File \"/Users/apr/.pyenv/versions/3.7.2/lib/python3.7/site-packages/flask/app.py\", line 1967, in finalize_request\r\n    response = self.make_response(rv)\r\n  File \"/Users/apr/.pyenv/versions/3.7.2/lib/python3.7/site-packages/flask/app.py\", line 2116, in make_response\r\n    rv = self.response_class.force_type(rv, request.environ)\r\n  File \"/Users/apr/.pyenv/versions/3.7.2/lib/python3.7/site-packages/werkzeug/wrappers/base_response.py\", line 269, in force_type\r\n    response = BaseResponse(*_run_wsgi_app(response, environ))\r\n  File \"/Users/apr/.pyenv/versions/3.7.2/lib/python3.7/site-packages/werkzeug/test.py\", line 1119, in run_wsgi_app\r\n    app_rv = app(environ, start_response)\r\n  File \"/Users/apr/.pyenv/versions/3.7.2/lib/python3.7/site-packages/werkzeug/exceptions.py\", line 194, in __call__\r\n    return response(environ, start_response)\r\n  File \"/Users/apr/.pyenv/versions/3.7.2/lib/python3.7/site-packages/werkzeug/wrappers/base_response.py\", line 700, in __call__\r\n    app_iter, status, headers = self.get_wsgi_response(environ)\r\n  File \"/Users/apr/.pyenv/versions/3.7.2/lib/python3.7/site-packages/werkzeug/wrappers/base_response.py\", line 688, in get_wsgi_response\r\n    headers = self.get_wsgi_headers(environ)\r\n  File \"/Users/apr/.pyenv/versions/3.7.2/lib/python3.7/site-packages/werkzeug/wrappers/base_response.py\", line 604, in get_wsgi_headers\r\n    current_url = get_current_url(environ, strip_querystring=True)\r\n  File \"/Users/apr/.pyenv/versions/3.7.2/lib/python3.7/site-packages/werkzeug/wsgi.py\", line 100, in get_current_url\r\n    return uri_to_iri(\"\".join(tmp))\r\n  File \"/Users/apr/.pyenv/versions/3.7.2/lib/python3.7/site-packages/werkzeug/urls.py\", line 706, in uri_to_iri\r\n    uri = url_parse(to_unicode(uri, charset))\r\n  File \"/Users/apr/.pyenv/versions/3.7.2/lib/python3.7/site-packages/werkzeug/urls.py\", line 476, in url_parse\r\n    raise ValueError(\"Invalid IPv6 URL\")\r\nValueError: Invalid IPv6 URL\r\n```\r\n\r\n### Environment\r\n\r\n* Python version: 3.7.2\r\n* Flask version: 1.1.1\r\n* Werkzeug version: 0.15.5\r\n\r\n### Notes\r\n\r\nThis testcase was generated automatically with fuzzing. I have a couple others exceptions triggering 500 response. Let me know if you're interested in additional issues for those.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1622", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1622/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1622/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1622/events", "html_url": "https://github.com/pallets/werkzeug/issues/1622", "id": 476447149, "node_id": "MDU6SXNzdWU0NzY0NDcxNDk=", "number": 1622, "title": "AttributeError: 'Request' object has no attribute 'get__json'", "user": {"login": "nathphoenix", "id": 28567522, "node_id": "MDQ6VXNlcjI4NTY3NTIy", "avatar_url": "https://avatars1.githubusercontent.com/u/28567522?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathphoenix", "html_url": "https://github.com/nathphoenix", "followers_url": "https://api.github.com/users/nathphoenix/followers", "following_url": "https://api.github.com/users/nathphoenix/following{/other_user}", "gists_url": "https://api.github.com/users/nathphoenix/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathphoenix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathphoenix/subscriptions", "organizations_url": "https://api.github.com/users/nathphoenix/orgs", "repos_url": "https://api.github.com/users/nathphoenix/repos", "events_url": "https://api.github.com/users/nathphoenix/events{/privacy}", "received_events_url": "https://api.github.com/users/nathphoenix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-03T12:27:22Z", "updated_at": "2019-08-03T12:34:12Z", "closed_at": "2019-08-03T12:34:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to post to an endpoint using postman, but after posting i keeping getting that attribute error with the use \"get__json()\"\r\nBelow is my method\r\n\r\n@app.route('/store', methods=[\"POST\"])\r\ndef create_store():\r\n  request_data = request.get__json()   \r\n  new_store = {\r\n    'name': request_data['name'],\r\n    'items': []\r\n  }\r\n  stores.append(new_store)\r\n  return jsonify(new_store)\r\n\r\nand this is the actual error\r\n[2019-08-03 13:14:57,577] ERROR in app: Exception on /store [POST]\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Maxwell\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\app.py\", line 2446, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"C:\\Users\\Maxwell\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\app.py\", line 1951, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"C:\\Users\\Maxwell\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\app.py\", line 1820, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"C:\\Users\\Maxwell\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\_compat.py\", line 39, in reraise\r\n    raise value\r\n  File \"C:\\Users\\Maxwell\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\app.py\", line 1949, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"C:\\Users\\Maxwell\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask\\app.py\", line 1935, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"app.py\", line 38, in create_store\r\n    request_data = request.get__json()   #this function get all daa and present on the browser  File \"C:\\Users\\Maxwell\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\werkzeug\\local.py\", line 348, in __getattr__\r\n    return getattr(self._get_current_object(), name)AttributeError: 'Request' object has no attribute 'get__json'\r\n127.0.0.1 - - [03/Aug/2019 13:14:57] \"POST /store HTTP/1.1\" 500 -", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pallets/werkzeug/issues/1619", "repository_url": "https://api.github.com/repos/pallets/werkzeug", "labels_url": "https://api.github.com/repos/pallets/werkzeug/issues/1619/labels{/name}", "comments_url": "https://api.github.com/repos/pallets/werkzeug/issues/1619/comments", "events_url": "https://api.github.com/repos/pallets/werkzeug/issues/1619/events", "html_url": "https://github.com/pallets/werkzeug/issues/1619", "id": 472159935, "node_id": "MDU6SXNzdWU0NzIxNTk5MzU=", "number": 1619, "title": "Reloader can't find script when path contains dot on Windows", "user": {"login": "greyli", "id": 12967000, "node_id": "MDQ6VXNlcjEyOTY3MDAw", "avatar_url": "https://avatars3.githubusercontent.com/u/12967000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/greyli", "html_url": "https://github.com/greyli", "followers_url": "https://api.github.com/users/greyli/followers", "following_url": "https://api.github.com/users/greyli/following{/other_user}", "gists_url": "https://api.github.com/users/greyli/gists{/gist_id}", "starred_url": "https://api.github.com/users/greyli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/greyli/subscriptions", "organizations_url": "https://api.github.com/users/greyli/orgs", "repos_url": "https://api.github.com/users/greyli/repos", "events_url": "https://api.github.com/users/greyli/events{/privacy}", "received_events_url": "https://api.github.com/users/greyli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pallets/werkzeug/milestones/10", "html_url": "https://github.com/pallets/werkzeug/milestone/10", "labels_url": "https://api.github.com/repos/pallets/werkzeug/milestones/10/labels", "id": 4500596, "node_id": "MDk6TWlsZXN0b25lNDUwMDU5Ng==", "number": 10, "title": "0.15.6", "description": "", "creator": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 7, "state": "closed", "created_at": "2019-07-18T01:07:55Z", "updated_at": "2019-09-04T20:12:47Z", "due_on": null, "closed_at": "2019-09-04T20:12:47Z"}, "comments": 4, "created_at": "2019-07-24T08:54:56Z", "updated_at": "2019-08-31T19:07:49Z", "closed_at": "2019-08-31T19:07:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "On Windows with Werkzeug 0.15.5, when in dev mode (`FLASK_ENV=development`), if the virtual environment path contains a dot, for example:\r\n- D:\\\\repos\\\\flask-examples\\\\.venv\\\\Scripts\\\\flask\r\n- C:\\\\Users\\\\greyli\\\\.virtualenvs\\\\flask-examples-qatl1Peb\\\\Scripts\\\\flask\r\n\r\nNow `flask run` will throw an error:\r\n```bash\r\n> flask run\r\nd:\\repos\\flask-examples\\.venv\\scripts\\python.exe: Error while finding module specification for \r\n'D:\\\\repos\\\\flask-examples\\\\.venv\\\\Scripts\\\\flask' (ModuleNotFoundError: No module named 'D:\\\\repos\\\\flask-examples\\\\')\r\n```\r\nNotice the output, it seems that it cut the module path with the dot. If I change the virtual environment folder to `venv` (remove the dot in folder name), everything will be ok. The `.exe` is also missing on the output above, but I can't reproduce issue in #1614, it's weried...\r\n\r\nBesides, these methods will prevent this error:\r\n\r\n- use `python -m flask run`\r\n- downgrade Werkzeug to 0.15.4\r\n\r\nIMO, this issue related with #1614, and may caused by the dot handling in https://github.com/pallets/werkzeug/commit/e686ae714a6ba436912a2ce7ea2da615a8d5d0bf.\r\n\r\n### Environment\r\n- Win10\r\n- Python 3.6 / 3.7\r\n- Flask 1.1.1\r\n- Werkzeug 0.15.5", "performed_via_github_app": null, "score": 1.0}]}