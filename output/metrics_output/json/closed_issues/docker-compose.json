{"total_count": 4602, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/docker/compose/issues/7682", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7682/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7682/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7682/events", "html_url": "https://github.com/docker/compose/issues/7682", "id": 681101686, "node_id": "MDU6SXNzdWU2ODExMDE2ODY=", "number": 7682, "title": "docker-compose doesn't properly set network: host.", "user": {"login": "whitleykeith", "id": 21354274, "node_id": "MDQ6VXNlcjIxMzU0Mjc0", "avatar_url": "https://avatars0.githubusercontent.com/u/21354274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whitleykeith", "html_url": "https://github.com/whitleykeith", "followers_url": "https://api.github.com/users/whitleykeith/followers", "following_url": "https://api.github.com/users/whitleykeith/following{/other_user}", "gists_url": "https://api.github.com/users/whitleykeith/gists{/gist_id}", "starred_url": "https://api.github.com/users/whitleykeith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whitleykeith/subscriptions", "organizations_url": "https://api.github.com/users/whitleykeith/orgs", "repos_url": "https://api.github.com/users/whitleykeith/repos", "events_url": "https://api.github.com/users/whitleykeith/events{/privacy}", "received_events_url": "https://api.github.com/users/whitleykeith/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ulyssessouza", "id": 373485, "node_id": "MDQ6VXNlcjM3MzQ4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/373485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulyssessouza", "html_url": "https://github.com/ulyssessouza", "followers_url": "https://api.github.com/users/ulyssessouza/followers", "following_url": "https://api.github.com/users/ulyssessouza/following{/other_user}", "gists_url": "https://api.github.com/users/ulyssessouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulyssessouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulyssessouza/subscriptions", "organizations_url": "https://api.github.com/users/ulyssessouza/orgs", "repos_url": "https://api.github.com/users/ulyssessouza/repos", "events_url": "https://api.github.com/users/ulyssessouza/events{/privacy}", "received_events_url": "https://api.github.com/users/ulyssessouza/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ulyssessouza", "id": 373485, "node_id": "MDQ6VXNlcjM3MzQ4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/373485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulyssessouza", "html_url": "https://github.com/ulyssessouza", "followers_url": "https://api.github.com/users/ulyssessouza/followers", "following_url": "https://api.github.com/users/ulyssessouza/following{/other_user}", "gists_url": "https://api.github.com/users/ulyssessouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulyssessouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulyssessouza/subscriptions", "organizations_url": "https://api.github.com/users/ulyssessouza/orgs", "repos_url": "https://api.github.com/users/ulyssessouza/repos", "events_url": "https://api.github.com/users/ulyssessouza/events{/privacy}", "received_events_url": "https://api.github.com/users/ulyssessouza/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-08-18T14:46:01Z", "updated_at": "2020-08-21T12:33:42Z", "closed_at": "2020-08-20T16:29:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\n\r\nX-Post of [this issue](https://github.com/moby/buildkit/issues/1642) per @ulyssessouza request. \r\n\r\nDocker-compose doesn't seem to be able to leverage buildkit when running inside EKS, which does not have the default bridge network. This happens even if all images are set to use the host network in the docker-compose file.  \r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.26.0, build d4451659\r\ndocker-py version: 4.2.1\r\nCPython version: 3.7.7\r\nOpenSSL version: OpenSSL 1.1.0l  10 Sep 2019\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.12\r\n API version:       1.40\r\n Go version:        go1.13.10\r\n Git commit:        48a66213fe\r\n Built:             Mon Jun 22 15:45:49 2020\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer:\r\n Engine:\r\n  Version:          19.03.6-ce\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.13.4\r\n  Git commit:       369ce74\r\n  Built:            Fri May 29 04:01:57 2020\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.3.2\r\n  GitCommit:        ff48f57fc83a8c44cf4ad5d672424a98ba37ded6\r\n runc:\r\n  Version:          1.0.0-rc10\r\n  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n\r\nNote: There are about 20+ images with the same format. Some of them depend on other images in the compose, but there are no circular dependencies. \r\n\r\n(Make sure to add the relevant `-f` and other flags)\r\n```yaml\r\n  pre-flight-debian:\r\n    build:\r\n      context: REDACTED\r\n      network: host\r\n    image: REDACTED\r\n    network_mode: host\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. Run the `docker-compose build` with buildKit enabled (DOCKER_BUILDKIT=1 COMPOSE_DOCKER_CLI_BUILD=1)\r\n\r\n\r\n### Observed result\r\n\r\nGet an error about the network bridge not being found, even though I'm running on host for *all* images\r\n\r\n### Expected result\r\n\r\nThe build to run successfully\r\n\r\n### Stacktrace / full error message\r\n\r\n```\r\nERROR: executor failed running [$DOCKER_STAGE_FROM_IMAGE]: network bridge not found\r\n```\r\n\r\n## Additional information\r\n\r\nEnvironment:\r\n\r\nKubernetes/EKS: v1.16.8-eks-e16311\r\ndocker-compose: 1.26\r\nDocker version 19.03.12, build 48a66213fe\r\n\r\nEssentially I have a docker-compose file with multiple images that I want to build inside a CI Container hosted in Kubernetes. EKS has disabled the default bridge network in Kubernetes AMIs. This means docker builds in this environment require the --network=host flag, and this is true for our images as well.\r\n\r\nWe log the docker-compose file and can confirm the build.network and network_mode are set to host.\r\n\r\nWe've been able to run BuildKit on single images like\r\n\r\nDOCKER_BUILDKIT=1 docker --network=host build . -t image:latest\r\n\r\nwith no problems, but when we try to build the entire compose like this:\r\n\r\nDOCKER_BUILDKIT=1 COMPOSE_DOCKER_CLI_BUILD=1 NETWORK=host docker-compose -f docker-compose.yaml build\r\n\r\nwe get this error:\r\n\r\nfailed to solve with frontend dockerfile.v0: failed to build LLB: executor failed running [REDACTED]: network bridge not found\r\n\r\nThe command has been relatively random, but usually the first filesystem or network call (i.e. COPY/ADD or RUN).\r\n\r\nDoes anyone know why this is?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7681", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7681/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7681/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7681/events", "html_url": "https://github.com/docker/compose/issues/7681", "id": 680914558, "node_id": "MDU6SXNzdWU2ODA5MTQ1NTg=", "number": 7681, "title": "docker-compose run does not wait for health checks for services defined in depends_on", "user": {"login": "Harrisonbro", "id": 377366, "node_id": "MDQ6VXNlcjM3NzM2Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/377366?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Harrisonbro", "html_url": "https://github.com/Harrisonbro", "followers_url": "https://api.github.com/users/Harrisonbro/followers", "following_url": "https://api.github.com/users/Harrisonbro/following{/other_user}", "gists_url": "https://api.github.com/users/Harrisonbro/gists{/gist_id}", "starred_url": "https://api.github.com/users/Harrisonbro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Harrisonbro/subscriptions", "organizations_url": "https://api.github.com/users/Harrisonbro/orgs", "repos_url": "https://api.github.com/users/Harrisonbro/repos", "events_url": "https://api.github.com/users/Harrisonbro/events{/privacy}", "received_events_url": "https://api.github.com/users/Harrisonbro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-08-18T10:38:47Z", "updated_at": "2020-08-19T15:42:04Z", "closed_at": "2020-08-19T15:42:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description of the issue\r\n\r\nUnlike `docker-compose up`, running `docker-compse run` with a compose file in which some services `depend_on` others, those other services are started but Docker Compose does not wait for those services' health checks to return 'healthy'. This was noted [here in #2833](https://github.com/docker/compose/issues/2833#issuecomment-329751397).\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. Create a Compose file with two services, one (A) depending on the other (B).\r\n2. Make service B take some time to boot up and for it's healtcheck to return 'healthy' (e.g., a MySQL container which only returns healthy when MySQL is actually available for queries, using [this healthcheck script](https://gist.github.com/Harrisonbro/5d226dc68516aa97d86464a168946032))\r\n3. Run a command in service A which will fail if service B is started but not fully booted and healthy (e.g., some unit tests which rely on making MySQL queries)\r\n\r\n### Observed result\r\n\r\nCommands in service A fail because service B is not fully healthy. In my use-case, that means PHPunit tests which try and query the database fail with `SQLSTATE[HY000] [2002] Connection refused` because MySQL is still booting up.\r\n\r\n### Expected result\r\n\r\nI would expect `docker-compose run` to start up the services and wait until they're all reporting healthy, like `docker-compose up` does, before running the command.\r\n\r\n## Additional information\r\n\r\nOS version / distribution, `docker-compose` install method, etc.\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.25.4, build 8d51620a\r\ndocker-py version: 4.1.0\r\nCPython version: 3.7.5\r\nOpenSSL version: OpenSSL 1.1.1d  10 Sep 2019\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.8\r\n API version:       1.40\r\n Go version:        go1.12.17\r\n Git commit:        afacb8b\r\n Built:             Wed Mar 11 01:21:11 2020\r\n OS/Arch:           darwin/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.8\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.17\r\n  Git commit:       afacb8b\r\n  Built:            Wed Mar 11 01:29:16 2020\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          v1.2.13\r\n  GitCommit:        7ad184331fa3e55e52b890ea95e65ba581ae3429\r\n runc:\r\n  Version:          1.0.0-rc10\r\n  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\nservices:\r\n  app.testing:\r\n    build:\r\n      args:\r\n        BUILD_ENV: testing\r\n      context: /Users/harrison/Sites/stoneleigh-exhibitor-manual\r\n      dockerfile: docker/images/app/Dockerfile\r\n    depends_on:\r\n    - database\r\n    environment:\r\n      (just application-level environment, nothing used by Docker)\r\n    volumes:\r\n    - /Users/harrison/Sites/stoneleigh-exhibitor-manual/phpunit.xml:/code/phpunit.xml:ro\r\n    - /Users/harrison/Sites/stoneleigh-exhibitor-manual/tests:/code/tests:ro\r\n    - /Users/harrison/Sites/stoneleigh-exhibitor-manual/docker/environment/local/fixtures:/fixtures:ro\r\n    - /Users/harrison/Sites/stoneleigh-exhibitor-manual/.buildkite/tmp/public_built:/code/public/built:ro\r\n  app.testing.standalone:\r\n    build:\r\n      args:\r\n        BUILD_ENV: testing\r\n      context: /Users/harrison/Sites/stoneleigh-exhibitor-manual\r\n      dockerfile: docker/images/app/Dockerfile\r\n    environment:\r\n      (just application-level environment, nothing used by Docker)\r\n    volumes:\r\n    - /Users/harrison/Sites/stoneleigh-exhibitor-manual/phpspec.yml:/code/phpspec.yml:ro\r\n    - /Users/harrison/Sites/stoneleigh-exhibitor-manual/tests/Unit:/code/tests/Unit:ro\r\n  database:\r\n    build:\r\n      context: /Users/harrison/Sites/stoneleigh-exhibitor-manual\r\n      dockerfile: docker/images/database/Dockerfile\r\n    environment:\r\n      MYSQL_DATABASE: stoneleigh\r\n      MYSQL_PASSWORD: password\r\n      MYSQL_RANDOM_ROOT_PASSWORD: \"true\"\r\n      MYSQL_USER: user\r\n  web:\r\n    build:\r\n      context: /Users/harrison/Sites/stoneleigh-exhibitor-manual\r\n      dockerfile: docker/images/web/Dockerfile\r\n    volumes:\r\n    - /Users/harrison/Sites/stoneleigh-exhibitor-manual/.buildkite/tmp/public_built:/tmp_public_built:rw\r\nversion: '3.7'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7671", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7671/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7671/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7671/events", "html_url": "https://github.com/docker/compose/issues/7671", "id": 679397476, "node_id": "MDU6SXNzdWU2NzkzOTc0NzY=", "number": 7671, "title": "deploy key crash application start with Compose 1.27.0-rc1", "user": {"login": "glours", "id": 705411, "node_id": "MDQ6VXNlcjcwNTQxMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/705411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glours", "html_url": "https://github.com/glours", "followers_url": "https://api.github.com/users/glours/followers", "following_url": "https://api.github.com/users/glours/following{/other_user}", "gists_url": "https://api.github.com/users/glours/gists{/gist_id}", "starred_url": "https://api.github.com/users/glours/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glours/subscriptions", "organizations_url": "https://api.github.com/users/glours/orgs", "repos_url": "https://api.github.com/users/glours/repos", "events_url": "https://api.github.com/users/glours/events{/privacy}", "received_events_url": "https://api.github.com/users/glours/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ulyssessouza", "id": 373485, "node_id": "MDQ6VXNlcjM3MzQ4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/373485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulyssessouza", "html_url": "https://github.com/ulyssessouza", "followers_url": "https://api.github.com/users/ulyssessouza/followers", "following_url": "https://api.github.com/users/ulyssessouza/following{/other_user}", "gists_url": "https://api.github.com/users/ulyssessouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulyssessouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulyssessouza/subscriptions", "organizations_url": "https://api.github.com/users/ulyssessouza/orgs", "repos_url": "https://api.github.com/users/ulyssessouza/repos", "events_url": "https://api.github.com/users/ulyssessouza/events{/privacy}", "received_events_url": "https://api.github.com/users/ulyssessouza/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ulyssessouza", "id": 373485, "node_id": "MDQ6VXNlcjM3MzQ4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/373485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulyssessouza", "html_url": "https://github.com/ulyssessouza", "followers_url": "https://api.github.com/users/ulyssessouza/followers", "following_url": "https://api.github.com/users/ulyssessouza/following{/other_user}", "gists_url": "https://api.github.com/users/ulyssessouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulyssessouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulyssessouza/subscriptions", "organizations_url": "https://api.github.com/users/ulyssessouza/orgs", "repos_url": "https://api.github.com/users/ulyssessouza/repos", "events_url": "https://api.github.com/users/ulyssessouza/events{/privacy}", "received_events_url": "https://api.github.com/users/ulyssessouza/received_events", "type": "User", "site_admin": false}, {"login": "aiordache", "id": 809903, "node_id": "MDQ6VXNlcjgwOTkwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/809903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aiordache", "html_url": "https://github.com/aiordache", "followers_url": "https://api.github.com/users/aiordache/followers", "following_url": "https://api.github.com/users/aiordache/following{/other_user}", "gists_url": "https://api.github.com/users/aiordache/gists{/gist_id}", "starred_url": "https://api.github.com/users/aiordache/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aiordache/subscriptions", "organizations_url": "https://api.github.com/users/aiordache/orgs", "repos_url": "https://api.github.com/users/aiordache/repos", "events_url": "https://api.github.com/users/aiordache/events{/privacy}", "received_events_url": "https://api.github.com/users/aiordache/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-08-14T20:56:34Z", "updated_at": "2020-08-18T14:44:02Z", "closed_at": "2020-08-18T14:44:02Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "## Description of the issue\r\nWhen running the [`minecraft`](https://github.com/docker/awesome-compose/blob/master/minecraft/docker-compose.yml) sample of [`awesome-compose`](https://github.com/docker/awesome-compose) with Compose `1.27.0-rc1`  we get the following error\r\n\r\n```shell\r\n$ docker-compose up --build\r\nWARNING: Some services (minecraft) use the 'deploy' key, which will be ignored. Compose does not support 'deploy' configuration - use `docker stack deploy` to deploy to a swarm.\r\nTraceback (most recent call last):\r\n  File \"docker-compose\", line 3, in <module>\r\n  File \"compose/cli/main.py\", line 67, in main\r\n  File \"compose/cli/main.py\", line 120, in perform_command\r\n  File \"compose/cli/command.py\", line 70, in project_from_options\r\n  File \"compose/cli/command.py\", line 144, in get_project\r\n  File \"compose/project.py\", line 130, in from_config\r\n  File \"compose/project.py\", line 326, in get_service_scale\r\nTypeError: '<' not supported between instances of 'NoneType' and 'NoneType'\r\n[11029] Failed to execute script docker-compose\r\n```\r\n\r\nWith the `1.26.2` version of Compose we get also the warning message but the application start. \r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.27.0-rc1, build f9228ae4\r\ndocker-py version: 4.3.0\r\nCPython version: 3.7.7\r\nOpenSSL version: OpenSSL 1.1.1g  21 Apr 2020\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Azure integration  0.1.10\r\n Version:           19.03.12\r\n API version:       1.40\r\n Go version:        go1.13.10\r\n Git commit:        48a66213fe\r\n Built:             Mon Jun 22 15:41:33 2020\r\n OS/Arch:           darwin/amd64\r\n Experimental:      true\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.12\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.13.10\r\n  Git commit:       48a66213fe\r\n  Built:            Mon Jun 22 15:49:27 2020\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     true\r\n containerd:\r\n  Version:          v1.2.13\r\n  GitCommit:        7ad184331fa3e55e52b890ea95e65ba581ae3429\r\n runc:\r\n  Version:          1.0.0-rc10\r\n  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\nWARNING: Some services (minecraft) use the 'deploy' key, which will be ignored. Compose does not support 'deploy' configuration - use `docker stack deploy` to deploy to a swarm.\r\nservices:\r\n  minecraft:\r\n    deploy:\r\n      resources:\r\n        limits:\r\n          memory: 1.5G\r\n    environment:\r\n      EULA: \"TRUE\"\r\n    image: itzg/minecraft-server\r\n    ports:\r\n    - published: 25565\r\n      target: 25565\r\n    volumes:\r\n    - /Users/gulliaumelours/minecraft_data:/data:rw\r\nversion: '3'\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. `compose.yaml` with `deploy` section\r\n2. `docker-compose up`\r\n\r\n### Observed result\r\nCompose application didn't start\r\n\r\n### Expected result\r\nCompose application should start and print the warning about ignoring the `deploy` key.\r\n\r\n### Stacktrace / full error message\r\n\r\n```\r\nWARNING: Some services (minecraft) use the 'deploy' key, which will be ignored. Compose does not support 'deploy' configuration - use `docker stack deploy` to deploy to a swarm.\r\nTraceback (most recent call last):\r\n  File \"docker-compose\", line 3, in <module>\r\n  File \"compose/cli/main.py\", line 67, in main\r\n  File \"compose/cli/main.py\", line 120, in perform_command\r\n  File \"compose/cli/command.py\", line 70, in project_from_options\r\n  File \"compose/cli/command.py\", line 144, in get_project\r\n  File \"compose/project.py\", line 130, in from_config\r\n  File \"compose/project.py\", line 326, in get_service_scale\r\nTypeError: '<' not supported between instances of 'NoneType' and 'NoneType'\r\n[11029] Failed to execute script docker-compose\r\n```\r\n\r\n## Additional information\r\n\r\ndocker-compose static binary on macOS Catalina 10.15.6\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7670", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7670/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7670/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7670/events", "html_url": "https://github.com/docker/compose/issues/7670", "id": 679298983, "node_id": "MDU6SXNzdWU2NzkyOTg5ODM=", "number": 7670, "title": "enable_ipv6 field not supported on Compose 1.27.0-rc1", "user": {"login": "chris-crone", "id": 3093183, "node_id": "MDQ6VXNlcjMwOTMxODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3093183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chris-crone", "html_url": "https://github.com/chris-crone", "followers_url": "https://api.github.com/users/chris-crone/followers", "following_url": "https://api.github.com/users/chris-crone/following{/other_user}", "gists_url": "https://api.github.com/users/chris-crone/gists{/gist_id}", "starred_url": "https://api.github.com/users/chris-crone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chris-crone/subscriptions", "organizations_url": "https://api.github.com/users/chris-crone/orgs", "repos_url": "https://api.github.com/users/chris-crone/repos", "events_url": "https://api.github.com/users/chris-crone/events{/privacy}", "received_events_url": "https://api.github.com/users/chris-crone/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ulyssessouza", "id": 373485, "node_id": "MDQ6VXNlcjM3MzQ4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/373485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulyssessouza", "html_url": "https://github.com/ulyssessouza", "followers_url": "https://api.github.com/users/ulyssessouza/followers", "following_url": "https://api.github.com/users/ulyssessouza/following{/other_user}", "gists_url": "https://api.github.com/users/ulyssessouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulyssessouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulyssessouza/subscriptions", "organizations_url": "https://api.github.com/users/ulyssessouza/orgs", "repos_url": "https://api.github.com/users/ulyssessouza/repos", "events_url": "https://api.github.com/users/ulyssessouza/events{/privacy}", "received_events_url": "https://api.github.com/users/ulyssessouza/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ulyssessouza", "id": 373485, "node_id": "MDQ6VXNlcjM3MzQ4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/373485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulyssessouza", "html_url": "https://github.com/ulyssessouza", "followers_url": "https://api.github.com/users/ulyssessouza/followers", "following_url": "https://api.github.com/users/ulyssessouza/following{/other_user}", "gists_url": "https://api.github.com/users/ulyssessouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulyssessouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulyssessouza/subscriptions", "organizations_url": "https://api.github.com/users/ulyssessouza/orgs", "repos_url": "https://api.github.com/users/ulyssessouza/repos", "events_url": "https://api.github.com/users/ulyssessouza/events{/privacy}", "received_events_url": "https://api.github.com/users/ulyssessouza/received_events", "type": "User", "site_admin": false}, {"login": "aiordache", "id": 809903, "node_id": "MDQ6VXNlcjgwOTkwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/809903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aiordache", "html_url": "https://github.com/aiordache", "followers_url": "https://api.github.com/users/aiordache/followers", "following_url": "https://api.github.com/users/aiordache/following{/other_user}", "gists_url": "https://api.github.com/users/aiordache/gists{/gist_id}", "starred_url": "https://api.github.com/users/aiordache/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aiordache/subscriptions", "organizations_url": "https://api.github.com/users/aiordache/orgs", "repos_url": "https://api.github.com/users/aiordache/repos", "events_url": "https://api.github.com/users/aiordache/events{/privacy}", "received_events_url": "https://api.github.com/users/aiordache/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-08-14T17:29:27Z", "updated_at": "2020-08-18T12:34:26Z", "closed_at": "2020-08-18T12:34:26Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\n\r\nWhen running a `version: \"2.4\"` Compose file with the `enable_ipv6` field set, I get the following error:\r\n\r\n```console\r\nERROR: The Compose file './docker-compose.yml' is invalid because:\r\nnetworks.pihole_net value 'enable_ipv6' does not match any of the regexes: '^x-'\r\n```\r\n\r\nNote that the same Compose file works with docker-compose 1.26.2\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.27.0-rc1, build f9228ae4\r\ndocker-py version: 4.3.0\r\nCPython version: 3.7.7\r\nOpenSSL version: OpenSSL 1.1.0l  10 Sep 2019\r\n```\r\n\r\n**Output of `docker version`**\r\nN/A\r\n\r\n**Output of `docker-compose config`**\r\nWill provide on Slack\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. `compose.yaml` with `enable_ipv6` field\r\n2. `docker-compose up`\r\n\r\n## Additional information\r\ndocker-compose static binary on Linux\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7641", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7641/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7641/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7641/events", "html_url": "https://github.com/docker/compose/issues/7641", "id": 669458734, "node_id": "MDU6SXNzdWU2Njk0NTg3MzQ=", "number": 7641, "title": "JSON Schema Not Found", "user": {"login": "1995parham", "id": 8181240, "node_id": "MDQ6VXNlcjgxODEyNDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/8181240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1995parham", "html_url": "https://github.com/1995parham", "followers_url": "https://api.github.com/users/1995parham/followers", "following_url": "https://api.github.com/users/1995parham/following{/other_user}", "gists_url": "https://api.github.com/users/1995parham/gists{/gist_id}", "starred_url": "https://api.github.com/users/1995parham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1995parham/subscriptions", "organizations_url": "https://api.github.com/users/1995parham/orgs", "repos_url": "https://api.github.com/users/1995parham/repos", "events_url": "https://api.github.com/users/1995parham/events{/privacy}", "received_events_url": "https://api.github.com/users/1995parham/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-31T06:24:38Z", "updated_at": "2020-07-31T14:48:20Z", "closed_at": "2020-07-31T14:48:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "###  Description of the issue\r\nAfter issuing the following command:\r\n\r\n```\r\ndocker-compose config\r\n```\r\n\r\nI get the exception that I have attached.\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.26.2, build unknown\r\ndocker-py version: 4.2.2\r\nCPython version: 3.8.5\r\nOpenSSL version: OpenSSL 1.1.1g  21 Apr 2020\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.12\r\n API version:       1.40\r\n Go version:        go1.13.10\r\n Git commit:        48a66213fe\r\n Built:             Mon Jun 22 15:45:44 2020\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.12\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.13.10\r\n  Git commit:       48a66213fe\r\n  Built:            Mon Jun 22 15:44:15 2020\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.2.13\r\n  GitCommit:        7ad184331fa3e55e52b890ea95e65ba581ae3429\r\n runc:\r\n  Version:          1.0.0-rc10\r\n  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/docker-compose/1.26.2/libexec/lib/python3.8/site-packages/jsonschema/validators.py\", line 774, in resolve_from_url\r\n    document = self.store[url]\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/docker-compose/1.26.2/libexec/lib/python3.8/site-packages/jsonschema/_utils.py\", line 22, in __getitem__\r\n    return self.store[self.normalize(uri)]\r\nKeyError: 'file:///home/linuxbrew/.linuxbrew/Cellar/docker-compose/1.26.2/libexec/lib/python3.8/site-packages/compose/config/config_schema_v3.2.json'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/docker-compose/1.26.2/libexec/lib/python3.8/site-packages/jsonschema/validators.py\", line 777, in resolve_from_url\r\n    document = self.resolve_remote(url)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/docker-compose/1.26.2/libexec/lib/python3.8/site-packages/jsonschema/validators.py\", line 863, in resolve_remote\r\n    with urlopen(uri) as url:\r\n  File \"/home/linuxbrew/.linuxbrew/opt/python@3.8/lib/python3.8/urllib/request.py\", line 222, in urlopen\r\n    return opener.open(url, data, timeout)\r\n  File \"/home/linuxbrew/.linuxbrew/opt/python@3.8/lib/python3.8/urllib/request.py\", line 525, in open\r\n    response = self._open(req, data)\r\n  File \"/home/linuxbrew/.linuxbrew/opt/python@3.8/lib/python3.8/urllib/request.py\", line 536, in _open\r\n    result = self._call_chain(self.handle_open, 'default',\r\n  File \"/home/linuxbrew/.linuxbrew/opt/python@3.8/lib/python3.8/urllib/request.py\", line 502, in _call_chain\r\n    result = func(*args)\r\n  File \"/home/linuxbrew/.linuxbrew/opt/python@3.8/lib/python3.8/urllib/request.py\", line 806, in <lambda>\r\n    meth(r, proxy, type))\r\n  File \"/home/linuxbrew/.linuxbrew/opt/python@3.8/lib/python3.8/urllib/request.py\", line 834, in proxy_open\r\n    return self.parent.open(req, timeout=req.timeout)\r\n  File \"/home/linuxbrew/.linuxbrew/opt/python@3.8/lib/python3.8/urllib/request.py\", line 531, in open\r\n    response = meth(req, response)\r\n  File \"/home/linuxbrew/.linuxbrew/opt/python@3.8/lib/python3.8/urllib/request.py\", line 640, in http_response\r\n    response = self.parent.error(\r\n  File \"/home/linuxbrew/.linuxbrew/opt/python@3.8/lib/python3.8/urllib/request.py\", line 569, in error\r\n    return self._call_chain(*args)\r\n  File \"/home/linuxbrew/.linuxbrew/opt/python@3.8/lib/python3.8/urllib/request.py\", line 502, in _call_chain\r\n    result = func(*args)\r\n  File \"/home/linuxbrew/.linuxbrew/opt/python@3.8/lib/python3.8/urllib/request.py\", line 649, in http_error_default\r\n    raise HTTPError(req.full_url, code, msg, hdrs, fp)\r\nurllib.error.HTTPError: HTTP Error 400: Bad Request\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/linuxbrew/.linuxbrew/bin/docker-compose\", line 33, in <module>\r\n    sys.exit(load_entry_point('docker-compose==1.26.2', 'console_scripts', 'docker-compose')())\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/docker-compose/1.26.2/libexec/lib/python3.8/site-packages/compose/cli/main.py\", line 72, in main\r\n    command()\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/docker-compose/1.26.2/libexec/lib/python3.8/site-packages/compose/cli/main.py\", line 122, in perform_command\r\n    handler(command, command_options)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/docker-compose/1.26.2/libexec/lib/python3.8/site-packages/compose/cli/main.py\", line 326, in config\r\n    compose_config = get_config_from_options('.', self.toplevel_options, additional_options)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/docker-compose/1.26.2/libexec/lib/python3.8/site-packages/compose/cli/command.py\", line 104, in get_config_from_options\r\n    return config.load(\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/docker-compose/1.26.2/libexec/lib/python3.8/site-packages/compose/config/config.py\", line 392, in load\r\n    processed_files = [\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/docker-compose/1.26.2/libexec/lib/python3.8/site-packages/compose/config/config.py\", line 393, in <listcomp>\r\n    process_config_file(config_file, config_details.environment, interpolate=interpolate)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/docker-compose/1.26.2/libexec/lib/python3.8/site-packages/compose/config/config.py\", line 581, in process_config_file\r\n    validate_against_config_schema(config_file)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/docker-compose/1.26.2/libexec/lib/python3.8/site-packages/compose/config/validation.py\", line 449, in validate_against_config_schema\r\n    handle_errors(\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/docker-compose/1.26.2/libexec/lib/python3.8/site-packages/compose/config/validation.py\", line 509, in handle_errors\r\n    errors = list(sorted(errors, key=str))\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/docker-compose/1.26.2/libexec/lib/python3.8/site-packages/jsonschema/validators.py\", line 328, in iter_errors\r\n    for error in errors:\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/docker-compose/1.26.2/libexec/lib/python3.8/site-packages/jsonschema/_validators.py\", line 282, in properties\r\n    for error in validator.descend(\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/docker-compose/1.26.2/libexec/lib/python3.8/site-packages/jsonschema/validators.py\", line 344, in descend\r\n    for error in self.iter_errors(instance, schema):\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/docker-compose/1.26.2/libexec/lib/python3.8/site-packages/jsonschema/validators.py\", line 328, in iter_errors\r\n    for error in errors:\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/docker-compose/1.26.2/libexec/lib/python3.8/site-packages/jsonschema/_validators.py\", line 23, in patternProperties\r\n    for error in validator.descend(\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/docker-compose/1.26.2/libexec/lib/python3.8/site-packages/jsonschema/validators.py\", line 344, in descend\r\n    for error in self.iter_errors(instance, schema):\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/docker-compose/1.26.2/libexec/lib/python3.8/site-packages/jsonschema/validators.py\", line 328, in iter_errors\r\n    for error in errors:\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/docker-compose/1.26.2/libexec/lib/python3.8/site-packages/jsonschema/_validators.py\", line 259, in ref\r\n    scope, resolved = validator.resolver.resolve(ref)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/docker-compose/1.26.2/libexec/lib/python3.8/site-packages/jsonschema/validators.py\", line 766, in resolve\r\n    return url, self._remote_cache(url)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/docker-compose/1.26.2/libexec/lib/python3.8/site-packages/jsonschema/validators.py\", line 779, in resolve_from_url\r\n    raise exceptions.RefResolutionError(exc)\r\njsonschema.exceptions.RefResolutionError: HTTP Error 400: Bad Request\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7640", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7640/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7640/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7640/events", "html_url": "https://github.com/docker/compose/issues/7640", "id": 669374424, "node_id": "MDU6SXNzdWU2NjkzNzQ0MjQ=", "number": 7640, "title": "how to use docker images start service?", "user": {"login": "yankeeguyu", "id": 46274612, "node_id": "MDQ6VXNlcjQ2Mjc0NjEy", "avatar_url": "https://avatars1.githubusercontent.com/u/46274612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yankeeguyu", "html_url": "https://github.com/yankeeguyu", "followers_url": "https://api.github.com/users/yankeeguyu/followers", "following_url": "https://api.github.com/users/yankeeguyu/following{/other_user}", "gists_url": "https://api.github.com/users/yankeeguyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/yankeeguyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yankeeguyu/subscriptions", "organizations_url": "https://api.github.com/users/yankeeguyu/orgs", "repos_url": "https://api.github.com/users/yankeeguyu/repos", "events_url": "https://api.github.com/users/yankeeguyu/events{/privacy}", "received_events_url": "https://api.github.com/users/yankeeguyu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777239, "node_id": "MDU6TGFiZWw2OTc3NzIzOQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-31T03:30:37Z", "updated_at": "2020-08-03T01:43:16Z", "closed_at": "2020-08-03T01:43:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I build images by myself, Now I want to start it, but it showed me this.\r\n![image](https://user-images.githubusercontent.com/46274612/88997003-2ff22000-d321-11ea-808f-2fa5597069d1.png)\r\n\r\nHow to fix it? Thank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7639", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7639/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7639/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7639/events", "html_url": "https://github.com/docker/compose/issues/7639", "id": 668978874, "node_id": "MDU6SXNzdWU2Njg5Nzg4NzQ=", "number": 7639, "title": "Failed to execute script docker-compose building react", "user": {"login": "fragas112", "id": 61590464, "node_id": "MDQ6VXNlcjYxNTkwNDY0", "avatar_url": "https://avatars1.githubusercontent.com/u/61590464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fragas112", "html_url": "https://github.com/fragas112", "followers_url": "https://api.github.com/users/fragas112/followers", "following_url": "https://api.github.com/users/fragas112/following{/other_user}", "gists_url": "https://api.github.com/users/fragas112/gists{/gist_id}", "starred_url": "https://api.github.com/users/fragas112/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fragas112/subscriptions", "organizations_url": "https://api.github.com/users/fragas112/orgs", "repos_url": "https://api.github.com/users/fragas112/repos", "events_url": "https://api.github.com/users/fragas112/events{/privacy}", "received_events_url": "https://api.github.com/users/fragas112/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-30T14:13:35Z", "updated_at": "2020-07-31T08:15:47Z", "closed_at": "2020-07-31T08:15:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nPlease, check https://docs.docker.com/docker-for-windows/troubleshoot/.\r\nIssues without logs and details cannot be debugged, and will be closed.\r\n\r\nIssues unrelated to Docker Desktop will be closed.  In particular, see\r\n  - https://github.com/moby/moby/issues for Docker daemon, e.g. running on Windows Server with Docker EE\r\n  - https://github.com/docker/compose/issues for docker-compose\r\n  - https://github.com/docker/machine/issues for docker-machine\r\n  - https://github.com/docker/docker.github.io/issues for the documentation\r\n-->\r\n\r\n<!-- Click these checkboxes after submitting. -->\r\n<!-- Download Docker Desktop 'Edge' (latest build) here: https://hub.docker.com/editions/community/docker-ce-desktop-windows -->\r\n  - [ ] I have tried with the latest version of my channel (Stable or Edge)\r\n  - [ ] I have uploaded Diagnostics\r\n  - Diagnostics ID:8C2875EB-E23E-4143-96D8-54C9A0C9BD58/20200730150709\r\n\r\n### Expected behavior\r\n\r\n### Actual behavior\r\n\r\n### Information\r\n<!--\r\nPlease, help us understand the problem.  For instance:\r\n  - Is it reproducible?\r\n  - Is the problem new?\r\n  - Did the problem appear with an update?\r\n  - A reproducible case if this is a bug, Dockerfiles with reproduction inside is best.\r\n-->\r\n  - Windows Version:\r\n  - Docker Desktop Version:\r\n  - Are you running inside a virtualized Windows e.g. on a cloud server or on a mac VM:\r\n\r\n### Steps to reproduce the behavior\r\n<!--\r\nA reproducible case, Dockerfiles with reproduction inside is best.\r\n-->\r\n\r\n  1. ...After I try to run a Docker compose build it throws an error. (Added picture with error) \r\n![problem](https://user-images.githubusercontent.com/61590464/88933376-9b83b100-d27f-11ea-9b9b-ac9ac83b06c5.PNG)\r\n\r\n  2. ...Tried to re-install Docker, restored it to factory settings and etc. It works perfectly fine on other computer with this project.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7615", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7615/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7615/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7615/events", "html_url": "https://github.com/docker/compose/issues/7615", "id": 660356236, "node_id": "MDU6SXNzdWU2NjAzNTYyMzY=", "number": 7615, "title": "OCI runtime create failed: container_linux.go:349", "user": {"login": "codinghedgehog-python", "id": 68481259, "node_id": "MDQ6VXNlcjY4NDgxMjU5", "avatar_url": "https://avatars2.githubusercontent.com/u/68481259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codinghedgehog-python", "html_url": "https://github.com/codinghedgehog-python", "followers_url": "https://api.github.com/users/codinghedgehog-python/followers", "following_url": "https://api.github.com/users/codinghedgehog-python/following{/other_user}", "gists_url": "https://api.github.com/users/codinghedgehog-python/gists{/gist_id}", "starred_url": "https://api.github.com/users/codinghedgehog-python/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codinghedgehog-python/subscriptions", "organizations_url": "https://api.github.com/users/codinghedgehog-python/orgs", "repos_url": "https://api.github.com/users/codinghedgehog-python/repos", "events_url": "https://api.github.com/users/codinghedgehog-python/events{/privacy}", "received_events_url": "https://api.github.com/users/codinghedgehog-python/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-18T20:14:51Z", "updated_at": "2020-07-18T21:32:59Z", "closed_at": "2020-07-18T21:32:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'd very much welcome any assistance on this issue:\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.25.0, build unknown\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nDocker version 19.03.12, build 48a66213fe\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\nservices:\r\n  tickets:\r\n    build:\r\n      context: /home/mark/ticket_mgr/services/tickets\r\n      dockerfile: Dockerfile\r\n    depends_on:\r\n    - tickets-db\r\n    environment:\r\n      APP_SETTINGS: project.config.DevelopmentConfig\r\n      DATABASE_TEST_URL: postgres://postgres:postgres@tickets-db:5432/tickets_test\r\n      DATABASE_URL: postgres://postgres:postgres@tickets-db:5432/tickets_dev\r\n      FLASK_APP: project.__init__.py\r\n      FLASK_ENV: development\r\n    ports:\r\n    - published: 5001\r\n      target: 5000\r\n    volumes:\r\n    - /home/mark/ticket_mgr/services/users:/usr/src/app:rw\r\n  tickets-db:\r\n    build:\r\n      context: /home/mark/ticket_mgr/services/tickets/project/db\r\n      dockerfile: Dockerfile\r\n    environment:\r\n      POSTGRES_PASSWORD: postgres\r\n      POSTGRES_USER: postgres\r\n    ports:\r\n    - published: 5435\r\n      target: 5432\r\nversion: '3.7'\r\n```\r\n\r\nError output received after running `docker-compose up -d --build`\r\n\r\n### Expected result\r\n\r\nProject brought up correctly.\r\n\r\n### Stacktrace / full error message\r\n\r\n```\r\nERROR: for ticket_mgr_tickets_1  Cannot start service tickets: OCI runtime create failed: container_linux.go:349: starting container process caused \"exec: \\\"/usr/src/app/entrypoint.sh\\\": stat /usr/src/app/entrypoint.sh: no such file or directory\": unknown\r\n```\r\n\r\n## Additional information\r\n\r\nIt complains about `entrypoint.sh` file not being present but it is where it supposed to be. The error output is referring to line 349 but I can't really trace it down to get more insight into this, can I ?\r\n\r\nOS:  Ubuntu 20.04\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7609", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7609/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7609/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7609/events", "html_url": "https://github.com/docker/compose/issues/7609", "id": 658049874, "node_id": "MDU6SXNzdWU2NTgwNDk4NzQ=", "number": 7609, "title": "NameError: name 'NpipeHTTPAdapter' is not defined", "user": {"login": "dominikbraun", "id": 36575275, "node_id": "MDQ6VXNlcjM2NTc1Mjc1", "avatar_url": "https://avatars3.githubusercontent.com/u/36575275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dominikbraun", "html_url": "https://github.com/dominikbraun", "followers_url": "https://api.github.com/users/dominikbraun/followers", "following_url": "https://api.github.com/users/dominikbraun/following{/other_user}", "gists_url": "https://api.github.com/users/dominikbraun/gists{/gist_id}", "starred_url": "https://api.github.com/users/dominikbraun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dominikbraun/subscriptions", "organizations_url": "https://api.github.com/users/dominikbraun/orgs", "repos_url": "https://api.github.com/users/dominikbraun/repos", "events_url": "https://api.github.com/users/dominikbraun/events{/privacy}", "received_events_url": "https://api.github.com/users/dominikbraun/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777239, "node_id": "MDU6TGFiZWw2OTc3NzIzOQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-16T10:04:01Z", "updated_at": "2020-07-18T19:21:55Z", "closed_at": "2020-07-18T19:21:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a development-related issue.\r\n\r\nWhen I run `python compose up` in the project root, the following error occurs:\r\n\r\n<details>\r\n<summary>NameError: name 'NpipeHTTPAdapter' is not defined</summary>\r\n\r\nStack Trace:\r\n\r\n```shell script\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\domin\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\docker-4.2.2-py3.8.egg\\docker\\api\\client.py\", line 154, in __init__\r\n    self._custom_adapter = NpipeHTTPAdapter(\r\nNameError: name 'NpipeHTTPAdapter' is not defined\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\domin\\AppData\\Local\\Programs\\Python\\Python38\\lib\\runpy.py\", line 194, in _run_module_as_main\r\n    return _run_code(code, main_globals, None,\r\n  File \"C:\\Users\\domin\\AppData\\Local\\Programs\\Python\\Python38\\lib\\runpy.py\", line 87, in _run_code\r\n    exec(code, run_globals)\r\n  File \"compose\\__main__.py\", line 3, in <module>\r\n    main()\r\n  File \"c:\\projects\\compose\\compose\\cli\\main.py\", line 68, in main\r\n    command()\r\n  File \"c:\\projects\\compose\\compose\\cli\\main.py\", line 121, in perform_command\r\n    project = project_from_options('.', options)\r\n  File \"c:\\projects\\compose\\compose\\cli\\command.py\", line 61, in project_from_options\r\n    return get_project(\r\n  File \"c:\\projects\\compose\\compose\\cli\\command.py\", line 136, in get_project\r\n    client = get_client(\r\n  File \"c:\\projects\\compose\\compose\\cli\\docker_client.py\", line 41, in get_client\r\n    client = docker_client(\r\n  File \"c:\\projects\\compose\\compose\\cli\\docker_client.py\", line 170, in docker_client\r\n    client = APIClient(**kwargs)\r\n  File \"C:\\Users\\domin\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\docker-4.2.2-py3.8.egg\\docker\\api\\client.py\", line 158, in __init__\r\n    raise DockerException(\r\ndocker.errors.DockerException: Install pypiwin32 package to enable npipe:// support\r\n```\r\n</details>\r\n\r\nThis led me to the conclusion that `pypiwin32` is missing. However, running `pip install pypiwin32` produces the following output:\r\n\r\n```shell script\r\nRequirement already satisfied: pypiwin32 in c:\\users\\domin\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\pypiwin32-223-py3.8.egg (223)\r\nRequirement already satisfied: pywin32>=223 in c:\\users\\domin\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\pywin32-228-py3.8-win-amd64.egg (from pypiwin32) (228)\r\n```\r\n\r\nAny ideas how to fix that?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7606", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7606/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7606/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7606/events", "html_url": "https://github.com/docker/compose/issues/7606", "id": 657212606, "node_id": "MDU6SXNzdWU2NTcyMTI2MDY=", "number": 7606, "title": "Double dollar sign evaluates to an escaped dollar sign: \\$ instead of a single dollar sign: $", "user": {"login": "tomekwszelaki", "id": 1482166, "node_id": "MDQ6VXNlcjE0ODIxNjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1482166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomekwszelaki", "html_url": "https://github.com/tomekwszelaki", "followers_url": "https://api.github.com/users/tomekwszelaki/followers", "following_url": "https://api.github.com/users/tomekwszelaki/following{/other_user}", "gists_url": "https://api.github.com/users/tomekwszelaki/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomekwszelaki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomekwszelaki/subscriptions", "organizations_url": "https://api.github.com/users/tomekwszelaki/orgs", "repos_url": "https://api.github.com/users/tomekwszelaki/repos", "events_url": "https://api.github.com/users/tomekwszelaki/events{/privacy}", "received_events_url": "https://api.github.com/users/tomekwszelaki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-07-15T09:40:51Z", "updated_at": "2020-07-17T11:17:51Z", "closed_at": "2020-07-17T11:01:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description of the issue\r\nWhen using double dollar sign in an environment variable I end up with an escaped dollar sign (\\$) in the variable value.\r\n\r\n## Steps to reproduce\r\n\r\n1. Given the following docker-compose.yml file: \r\n```\r\nversion: '3.3'\r\nservices:\r\n  mssql-server-linux:\r\n    container_name: sql-server\r\n    environment:\r\n      - ACCEPT_EULA=Y\r\n      - SA_PASSWORD=Pass$$1234\r\n    ports:\r\n      - '1433:1433'\r\n    image: microsoft/mssql-server-linux\r\n```\r\n2. When you start the container with `docker-compose up -d`\r\n3. And access the container with `docker exec -it sql-server /bin/bash`\r\n4. And check the environment variables with `export`\r\n5. Then the `SA_PASSWORD` variable will have the value `Pass$1234`\r\n\r\n### Observed result\r\n```\r\ndeclare -x SA_PASSWORD=\"Pass\\$1234\"\r\n```\r\n\r\n### Expected result\r\n```\r\ndeclare -x SA_PASSWORD=\"Pass$1234\"\r\n```\r\n\r\nUsing docker on Windows 10:\r\n\r\n![image](https://user-images.githubusercontent.com/1482166/87529658-98899d80-c68f-11ea-886c-bf59ba41151b.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7604", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7604/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7604/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7604/events", "html_url": "https://github.com/docker/compose/issues/7604", "id": 656181010, "node_id": "MDU6SXNzdWU2NTYxODEwMTA=", "number": 7604, "title": "memswap_limit doesn't configure MemorySwap", "user": {"login": "abuchanan920", "id": 368793, "node_id": "MDQ6VXNlcjM2ODc5Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/368793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abuchanan920", "html_url": "https://github.com/abuchanan920", "followers_url": "https://api.github.com/users/abuchanan920/followers", "following_url": "https://api.github.com/users/abuchanan920/following{/other_user}", "gists_url": "https://api.github.com/users/abuchanan920/gists{/gist_id}", "starred_url": "https://api.github.com/users/abuchanan920/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abuchanan920/subscriptions", "organizations_url": "https://api.github.com/users/abuchanan920/orgs", "repos_url": "https://api.github.com/users/abuchanan920/repos", "events_url": "https://api.github.com/users/abuchanan920/events{/privacy}", "received_events_url": "https://api.github.com/users/abuchanan920/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-13T22:15:18Z", "updated_at": "2020-07-14T15:21:19Z", "closed_at": "2020-07-14T15:21:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "##  Description of the issue\r\n\r\nCreating a simple docker container using docker-compose while attempting to set the memory limit and the memswap_limit does not result in the MemorySwap being set.\r\n\r\n## Context information (for bug reports)\r\n\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.25.5, build 8a1c60f6\r\ndocker-py version: 4.1.0\r\nCPython version: 3.7.5\r\nOpenSSL version: OpenSSL 1.1.1f  31 Mar 2020\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient:\r\n Version:           19.03.8\r\n API version:       1.40\r\n Go version:        go1.13.8\r\n Git commit:        afacb8b7f0\r\n Built:             Tue Jun 23 22:26:12 2020\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer:\r\n Engine:\r\n  Version:          19.03.8\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.13.8\r\n  Git commit:       afacb8b7f0\r\n  Built:            Thu Jun 18 08:26:54 2020\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.3.3-0ubuntu2\r\n  GitCommit:\r\n runc:\r\n  Version:          spec: 1.0.1-dev\r\n  GitCommit:\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\nservices:\r\n  test:\r\n    container_name: test\r\n    image: jmalloc/echo-server\r\n    mem_limit: 1gb\r\n    memswap_limit: 1gb\r\nversion: '2.4'\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. docker-compose up -d\r\n2. docker inspect test | grep Mem\r\n\r\n### Observed result\r\nOutput of `docker inspect test`:\r\n```\r\n[\r\n    {\r\n        \"Id\": \"f7097043571d39ad82393ff20465ce5f16a66fa128d33b8d2649b9eb5960b1cd\",\r\n        \"Created\": \"2020-07-13T21:59:37.38342556Z\",\r\n        \"Path\": \"/bin/echo-server\",\r\n        \"Args\": [],\r\n        \"State\": {\r\n            \"Status\": \"running\",\r\n            \"Running\": true,\r\n            \"Paused\": false,\r\n            \"Restarting\": false,\r\n            \"OOMKilled\": false,\r\n            \"Dead\": false,\r\n            \"Pid\": 1603617,\r\n            \"ExitCode\": 0,\r\n            \"Error\": \"\",\r\n            \"StartedAt\": \"2020-07-13T21:59:44.001479726Z\",\r\n            \"FinishedAt\": \"0001-01-01T00:00:00Z\"\r\n        },\r\n        \"Image\": \"sha256:30e286e3864b6f2e8dbf3bdd1908e8e3e54bddc42430e3c29b3be39688b04e77\",\r\n        \"ResolvConfPath\": \"/var/lib/docker/containers/f7097043571d39ad82393ff20465ce5f16a66fa128d33b8d2649b9eb5960b1cd/resolv.conf\",\r\n        \"HostnamePath\": \"/var/lib/docker/containers/f7097043571d39ad82393ff20465ce5f16a66fa128d33b8d2649b9eb5960b1cd/hostname\",\r\n        \"HostsPath\": \"/var/lib/docker/containers/f7097043571d39ad82393ff20465ce5f16a66fa128d33b8d2649b9eb5960b1cd/hosts\",\r\n        \"LogPath\": \"/var/lib/docker/containers/f7097043571d39ad82393ff20465ce5f16a66fa128d33b8d2649b9eb5960b1cd/f7097043571d39ad82393ff20465ce5f16a66fa128d33b8d2649b9eb5960b1cd-json.log\",\r\n        \"Name\": \"/test\",\r\n        \"RestartCount\": 0,\r\n        \"Driver\": \"zfs\",\r\n        \"Platform\": \"linux\",\r\n        \"MountLabel\": \"\",\r\n        \"ProcessLabel\": \"\",\r\n        \"AppArmorProfile\": \"docker-default\",\r\n        \"ExecIDs\": null,\r\n        \"HostConfig\": {\r\n            \"Binds\": [],\r\n            \"ContainerIDFile\": \"\",\r\n            \"LogConfig\": {\r\n                \"Type\": \"json-file\",\r\n                \"Config\": {}\r\n            },\r\n            \"NetworkMode\": \"test_default\",\r\n            \"PortBindings\": {},\r\n            \"RestartPolicy\": {\r\n                \"Name\": \"\",\r\n                \"MaximumRetryCount\": 0\r\n            },\r\n            \"AutoRemove\": false,\r\n            \"VolumeDriver\": \"\",\r\n            \"VolumesFrom\": [],\r\n            \"CapAdd\": null,\r\n            \"CapDrop\": null,\r\n            \"Capabilities\": null,\r\n            \"Dns\": null,\r\n            \"DnsOptions\": null,\r\n            \"DnsSearch\": null,\r\n            \"ExtraHosts\": null,\r\n            \"GroupAdd\": null,\r\n            \"IpcMode\": \"shareable\",\r\n            \"Cgroup\": \"\",\r\n            \"Links\": null,\r\n            \"OomScoreAdj\": 0,\r\n            \"PidMode\": \"\",\r\n            \"Privileged\": false,\r\n            \"PublishAllPorts\": false,\r\n            \"ReadonlyRootfs\": false,\r\n            \"SecurityOpt\": null,\r\n            \"UTSMode\": \"\",\r\n            \"UsernsMode\": \"\",\r\n            \"ShmSize\": 67108864,\r\n            \"Runtime\": \"runc\",\r\n            \"ConsoleSize\": [\r\n                0,\r\n                0\r\n            ],\r\n            \"Isolation\": \"\",\r\n            \"CpuShares\": 0,\r\n            \"Memory\": 1073741824,\r\n            \"NanoCpus\": 0,\r\n            \"CgroupParent\": \"\",\r\n            \"BlkioWeight\": 0,\r\n            \"BlkioWeightDevice\": null,\r\n            \"BlkioDeviceReadBps\": null,\r\n            \"BlkioDeviceWriteBps\": null,\r\n            \"BlkioDeviceReadIOps\": null,\r\n            \"BlkioDeviceWriteIOps\": null,\r\n            \"CpuPeriod\": 0,\r\n            \"CpuQuota\": 0,\r\n            \"CpuRealtimePeriod\": 0,\r\n            \"CpuRealtimeRuntime\": 0,\r\n            \"CpusetCpus\": \"\",\r\n            \"CpusetMems\": \"\",\r\n            \"Devices\": null,\r\n            \"DeviceCgroupRules\": null,\r\n            \"DeviceRequests\": null,\r\n            \"KernelMemory\": 0,\r\n            \"KernelMemoryTCP\": 0,\r\n            \"MemoryReservation\": 0,\r\n            \"MemorySwap\": -1,\r\n            \"MemorySwappiness\": null,\r\n            \"OomKillDisable\": false,\r\n            \"PidsLimit\": null,\r\n            \"Ulimits\": null,\r\n            \"CpuCount\": 0,\r\n            \"CpuPercent\": 0,\r\n            \"IOMaximumIOps\": 0,\r\n            \"IOMaximumBandwidth\": 0,\r\n            \"MaskedPaths\": [\r\n                \"/proc/asound\",\r\n                \"/proc/acpi\",\r\n                \"/proc/kcore\",\r\n                \"/proc/keys\",\r\n                \"/proc/latency_stats\",\r\n                \"/proc/timer_list\",\r\n                \"/proc/timer_stats\",\r\n                \"/proc/sched_debug\",\r\n                \"/proc/scsi\",\r\n                \"/sys/firmware\"\r\n            ],\r\n            \"ReadonlyPaths\": [\r\n                \"/proc/bus\",\r\n                \"/proc/fs\",\r\n                \"/proc/irq\",\r\n                \"/proc/sys\",\r\n                \"/proc/sysrq-trigger\"\r\n            ]\r\n        },\r\n        \"GraphDriver\": {\r\n            \"Data\": {\r\n                \"Dataset\": \"vmpool/docker/1f20a1e374f714604e2424e31dfc5e44ebd91c4b01bc1649e4aa2c478cba31dd\",\r\n                \"Mountpoint\": \"/var/lib/docker/zfs/graph/1f20a1e374f714604e2424e31dfc5e44ebd91c4b01bc1649e4aa2c478cba31dd\"\r\n            },\r\n            \"Name\": \"zfs\"\r\n        },\r\n        \"Mounts\": [],\r\n        \"Config\": {\r\n            \"Hostname\": \"f7097043571d\",\r\n            \"Domainname\": \"\",\r\n            \"User\": \"\",\r\n            \"AttachStdin\": false,\r\n            \"AttachStdout\": false,\r\n            \"AttachStderr\": false,\r\n            \"ExposedPorts\": {\r\n                \"8080/tcp\": {}\r\n            },\r\n            \"Tty\": false,\r\n            \"OpenStdin\": false,\r\n            \"StdinOnce\": false,\r\n            \"Env\": [\r\n                \"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\r\n                \"PORT=8080\"\r\n            ],\r\n            \"Cmd\": null,\r\n            \"Image\": \"jmalloc/echo-server\",\r\n            \"Volumes\": null,\r\n            \"WorkingDir\": \"\",\r\n            \"Entrypoint\": [\r\n                \"/bin/echo-server\"\r\n            ],\r\n            \"OnBuild\": null,\r\n            \"Labels\": {\r\n                \"com.docker.compose.config-hash\": \"af3094b24f4eb6187aad2a8fb538343ba44722210cc571f7946c0ce0526e34bf\",\r\n                \"com.docker.compose.container-number\": \"1\",\r\n                \"com.docker.compose.oneoff\": \"False\",\r\n                \"com.docker.compose.project\": \"test\",\r\n                \"com.docker.compose.project.config_files\": \"docker-compose.yml\",\r\n                \"com.docker.compose.project.working_dir\": \"/Users/abuchana/Development/Projects/difference-infrastructure-ansible/docker/test\",\r\n                \"com.docker.compose.service\": \"test\",\r\n                \"com.docker.compose.version\": \"1.25.5\"\r\n            }\r\n        },\r\n        \"NetworkSettings\": {\r\n            \"Bridge\": \"\",\r\n            \"SandboxID\": \"e00cbdef8bd9a981947a1042e8a2823041ceb14aeabee67f02fd4644b3c78414\",\r\n            \"HairpinMode\": false,\r\n            \"LinkLocalIPv6Address\": \"\",\r\n            \"LinkLocalIPv6PrefixLen\": 0,\r\n            \"Ports\": {\r\n                \"8080/tcp\": null\r\n            },\r\n            \"SandboxKey\": \"/var/run/docker/netns/e00cbdef8bd9\",\r\n            \"SecondaryIPAddresses\": null,\r\n            \"SecondaryIPv6Addresses\": null,\r\n            \"EndpointID\": \"\",\r\n            \"Gateway\": \"\",\r\n            \"GlobalIPv6Address\": \"\",\r\n            \"GlobalIPv6PrefixLen\": 0,\r\n            \"IPAddress\": \"\",\r\n            \"IPPrefixLen\": 0,\r\n            \"IPv6Gateway\": \"\",\r\n            \"MacAddress\": \"\",\r\n            \"Networks\": {\r\n                \"test_default\": {\r\n                    \"IPAMConfig\": null,\r\n                    \"Links\": null,\r\n                    \"Aliases\": [\r\n                        \"test\",\r\n                        \"f7097043571d\"\r\n                    ],\r\n                    \"NetworkID\": \"7bc4775f49c54db4cfc78963d9c1eb98487e8b9874f9b3b4bc8487150b03dc4f\",\r\n                    \"EndpointID\": \"254b3b292ac84027309e851ca665287d2e801457a1094168c395ceb57e2129a3\",\r\n                    \"Gateway\": \"172.21.0.1\",\r\n                    \"IPAddress\": \"172.21.0.2\",\r\n                    \"IPPrefixLen\": 16,\r\n                    \"IPv6Gateway\": \"\",\r\n                    \"GlobalIPv6Address\": \"\",\r\n                    \"GlobalIPv6PrefixLen\": 0,\r\n                    \"MacAddress\": \"02:42:ac:15:00:02\",\r\n                    \"DriverOpts\": null\r\n                }\r\n            }\r\n        }\r\n    }\r\n]\r\n```\r\n\r\nThe relevant line I'm looking at is  `\"MemorySwap\": -1,`, which I understand to mean \"use as much swap as you want\", and that would seem to match the behavior I'm seeing with other...more memory hungry containers.\r\n\r\n### Expected result\r\n`MemorySwap\": 1073741824`\r\n\r\n## Additional information\r\n\r\nDocker containers are running on a new Ubuntu 20.04 server with the latest updates. Docker-compose was run from a MacBook Pro using the docker-compose that came with Docker for Mac. (OS version 10.15.5). I've also tried with the docker-compose that installed with Ubuntu 20.04 and got the same result.\r\n\r\nOutput of docker-compose version for Ubuntu attempt\r\n```\r\ndocker-compose version 1.25.0, build unknown\r\ndocker-py version: 4.1.0\r\nCPython version: 3.8.2\r\nOpenSSL version: OpenSSL 1.1.1f  31 Mar 2020\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7587", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7587/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7587/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7587/events", "html_url": "https://github.com/docker/compose/issues/7587", "id": 651579252, "node_id": "MDU6SXNzdWU2NTE1NzkyNTI=", "number": 7587, "title": "ENV_VARS read differently on Arch (1.26.0 | 19.03.11-ce) & Ubuntu (1.25.5 | 19.03.12)", "user": {"login": "rahul-rkt", "id": 1763845, "node_id": "MDQ6VXNlcjE3NjM4NDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1763845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rahul-rkt", "html_url": "https://github.com/rahul-rkt", "followers_url": "https://api.github.com/users/rahul-rkt/followers", "following_url": "https://api.github.com/users/rahul-rkt/following{/other_user}", "gists_url": "https://api.github.com/users/rahul-rkt/gists{/gist_id}", "starred_url": "https://api.github.com/users/rahul-rkt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rahul-rkt/subscriptions", "organizations_url": "https://api.github.com/users/rahul-rkt/orgs", "repos_url": "https://api.github.com/users/rahul-rkt/repos", "events_url": "https://api.github.com/users/rahul-rkt/events{/privacy}", "received_events_url": "https://api.github.com/users/rahul-rkt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-06T14:20:12Z", "updated_at": "2020-07-17T15:22:40Z", "closed_at": "2020-07-17T15:22:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description of the issue\r\nA difference in behaviour is observed with the same yaml file on `local` and `aws`.\r\n\r\n**Issue**:\r\n\r\nENV_VARS are read properly on `local` but same fails on `aws`;\r\n\r\nif placed as `- ${NGINX_CONF}:/etc/nginx/conf.d/default.conf:ro` and throws:\r\n\r\n```\r\nERROR: Named volume \"${CONF_DIR}/nginx.conf:/etc/nginx/conf.d/default.conf:ro\" is used in service \"nginx\" but no declaration was found in the volumes section.\r\n```\r\n\r\n**Note**:\r\n\r\n- `local` ==> `Arch Linux x86_64 | 5.4.49-1-lts`\r\n- `aws` ==> `Ubuntu 20.04 LTS | 5.4.0-1018-aws`\r\n- `CONF_DIR=./toolbelt/conf` && defined in my `.env`\r\n- `NGINX_CONF=${CONF_DIR}/nginx.conf` && defined in my `.env`\r\n\r\n## Context information (for bug reports)\r\n**Output of `docker-compose version` on `local`**\r\n```\r\ndocker-compose version 1.26.0, build unknown\r\ndocker-py version: 4.2.2\r\nCPython version: 3.8.3\r\nOpenSSL version: OpenSSL 1.1.1g  21 Apr 2020\r\n```\r\n\r\n**Output of `docker version` on `local`**\r\n```\r\nClient:\r\n Version:           19.03.11-ce\r\n API version:       1.40\r\n Go version:        go1.14.3\r\n Git commit:        42e35e61f3\r\n Built:             Tue Jun  2 15:09:26 2020\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer:\r\n Engine:\r\n  Version:          19.03.11-ce\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.14.3\r\n  Git commit:       42e35e61f3\r\n  Built:            Tue Jun  2 15:09:05 2020\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          v1.3.4.m\r\n  GitCommit:        d76c121f76a5fc8a462dc64594aea72fe18e1178.m\r\n runc:\r\n  Version:          1.0.0-rc10\r\n  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n**Output of `docker-compose config` on `local`**\r\n```\r\n...\r\nservices:\r\n  nginx:\r\n    container_name: nginx\r\n    image: nginx:alpine\r\n    ports:\r\n    - published: 80\r\n      target: 80\r\n    restart: always\r\n    volumes:\r\n    - /full/path/to/nginx.conf:/etc/nginx/conf.d/default.conf:ro\r\nversion: '3.8'\r\n...\r\n```\r\n\r\n**Output of `docker-compose version` on `aws`**\r\n```\r\ndocker-compose version 1.25.5, build 8a1c60f6\r\ndocker-py version: 4.1.0\r\nCPython version: 3.7.5\r\nOpenSSL version: OpenSSL 1.1.0l  10 Sep 2019\r\n```\r\n\r\n**Output of `docker version` on `aws`**\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.12\r\n API version:       1.40\r\n Go version:        go1.13.10\r\n Git commit:        48a66213fe\r\n Built:             Mon Jun 22 15:45:44 2020\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.12\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.13.10\r\n  Git commit:       48a66213fe\r\n  Built:            Mon Jun 22 15:44:15 2020\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.2.13\r\n  GitCommit:        7ad184331fa3e55e52b890ea95e65ba581ae3429\r\n runc:\r\n  Version:          1.0.0-rc10\r\n  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n**Output of `docker-compose config` on `aws`**\r\n```\r\nERROR: Named volume \"${CONF_DIR}/nginx.conf:/etc/nginx/conf.d/default.conf:ro\" is used in service \"nginx\" but no declaration was found in the volumes section.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7583", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7583/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7583/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7583/events", "html_url": "https://github.com/docker/compose/issues/7583", "id": 650495858, "node_id": "MDU6SXNzdWU2NTA0OTU4NTg=", "number": 7583, "title": "COMPOSE_PROJECT_NAME is not passed to docker-compose in container mode", "user": {"login": "smola", "id": 23248, "node_id": "MDQ6VXNlcjIzMjQ4", "avatar_url": "https://avatars1.githubusercontent.com/u/23248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smola", "html_url": "https://github.com/smola", "followers_url": "https://api.github.com/users/smola/followers", "following_url": "https://api.github.com/users/smola/following{/other_user}", "gists_url": "https://api.github.com/users/smola/gists{/gist_id}", "starred_url": "https://api.github.com/users/smola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smola/subscriptions", "organizations_url": "https://api.github.com/users/smola/orgs", "repos_url": "https://api.github.com/users/smola/repos", "events_url": "https://api.github.com/users/smola/events{/privacy}", "received_events_url": "https://api.github.com/users/smola/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 153640415, "node_id": "MDU6TGFiZWwxNTM2NDA0MTU=", "url": "https://api.github.com/repos/docker/compose/labels/kind/feature", "name": "kind/feature", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-03T10:12:20Z", "updated_at": "2020-07-07T07:06:03Z", "closed_at": "2020-07-07T07:06:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nWhen using `scripts/run/run.sh`, the `COMPOSE_PROJECT_NAME` environment variable is not passed to the container by default. Even if it can be passed with `COMPOSE_OPTIONS=\"-e COMPOSE_PROJECT_NAME\"`, it is somewhat surprising since this environment variable is part of the CLI API.\r\n\r\n**Describe the solution you'd like**\r\nPass `COMPOSE_PROJECT_NAME` to the container by default.\r\n\r\n**Describe alternatives you've considered**\r\nWarn the user if the variable is set but not forwarded. But it will probably be harder to implement properly and it will be more confusing.\r\n\r\n\r\n**Additional context**\r\nN/A\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7576", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7576/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7576/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7576/events", "html_url": "https://github.com/docker/compose/issues/7576", "id": 648519913, "node_id": "MDU6SXNzdWU2NDg1MTk5MTM=", "number": 7576, "title": "[1.26.1] AttributeError: 'Context' object has no attribute 'is_docker_host' with PyPI docker 4.2.1 ", "user": {"login": "hartwork", "id": 1577132, "node_id": "MDQ6VXNlcjE1NzcxMzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1577132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hartwork", "html_url": "https://github.com/hartwork", "followers_url": "https://api.github.com/users/hartwork/followers", "following_url": "https://api.github.com/users/hartwork/following{/other_user}", "gists_url": "https://api.github.com/users/hartwork/gists{/gist_id}", "starred_url": "https://api.github.com/users/hartwork/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hartwork/subscriptions", "organizations_url": "https://api.github.com/users/hartwork/orgs", "repos_url": "https://api.github.com/users/hartwork/repos", "events_url": "https://api.github.com/users/hartwork/events{/privacy}", "received_events_url": "https://api.github.com/users/hartwork/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-30T21:53:40Z", "updated_at": "2020-07-02T11:34:24Z", "closed_at": "2020-07-02T11:34:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi!\r\n\r\ndocker-compose 1.26.1 (and Git `master`) use method `Context.is_docker_host` of PyPI docker at https://github.com/docker/compose/blob/15c1cabdadac535e9ed2fb2052b9a04dc08badb5/compose/cli/docker_client.py#L143 . That method was introduced in PyPI docker 4.2.2 but `setup.py` requires PyPI docker >=4.2.1 only (i.e. is too shy about it) at\r\nhttps://github.com/docker/compose/blob/15c1cabdadac535e9ed2fb2052b9a04dc08badb5/setup.py#L36 . The fact that `requirements.txt` pulls in 4.2.2 at https://github.com/docker/compose/blob/15c1cabdadac535e9ed2fb2052b9a04dc08badb5/requirements.txt#L7 may have kept the shortcoming in `setup.py` in the shadows, I guess.\r\n\r\nTo reproduce easily:\r\n```console\r\n# cd \"$(mktemp -d)\"\r\n# git clone --depth 1 https://github.com/docker/compose\r\n# cd compose/\r\n# virtualenv --python=python3.7 py37\r\n# source py37/bin/activate\r\n# pip install -r requirements.txt -r requirements-dev.txt \r\n# pip install docker==4.2.1  # downgrade to that of setup.py\r\n# python -m pytest -v tests/unit/cli_test.py::CLITestCase::test_get_project\r\n=============================================================== test session starts ===============================================================\r\nplatform linux -- Python 3.7.7, pytest-5.4.3, py-1.9.0, pluggy-0.13.1 -- /tmp/tmp.MvuXQMKm3u/compose/py37/bin/python\r\ncachedir: .pytest_cache\r\nrootdir: /tmp/tmp.MvuXQMKm3u/compose, inifile: tox.ini\r\nplugins: cov-2.10.0\r\ncollected 1 item                                                                                                                                  \r\n\r\ntests/unit/cli_test.py::CLITestCase::test_get_project FAILED                                                                                [100%]\r\n\r\n==================================================================== FAILURES =====================================================================\r\n__________________________________________________________ CLITestCase.test_get_project ___________________________________________________________\r\ntests/unit/cli_test.py:79: in test_get_project\r\n    project = get_project(base_dir)\r\ncompose/cli/command.py:137: in get_project\r\n    verbose=verbose, version=api_version, context=context, environment=environment\r\ncompose/cli/docker_client.py:43: in get_client\r\n    environment=environment, tls_version=get_tls_version(environment)\r\ncompose/cli/docker_client.py:143: in docker_client\r\n    if not context.is_docker_host():\r\nE   AttributeError: 'Context' object has no attribute 'is_docker_host'\r\n================================================================ 1 failed in 0.14s ================================================================\r\n```\r\n\r\nShould I provide a pull request putting `docker[ssh] >=4.2.2, <5` into `setup.py`?\r\n\r\nThanks and best, Sebastian", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7567", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7567/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7567/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7567/events", "html_url": "https://github.com/docker/compose/issues/7567", "id": 647627217, "node_id": "MDU6SXNzdWU2NDc2MjcyMTc=", "number": 7567, "title": "ImportError: cannot import name ReadTimeout", "user": {"login": "bruciebruce", "id": 493847, "node_id": "MDQ6VXNlcjQ5Mzg0Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/493847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bruciebruce", "html_url": "https://github.com/bruciebruce", "followers_url": "https://api.github.com/users/bruciebruce/followers", "following_url": "https://api.github.com/users/bruciebruce/following{/other_user}", "gists_url": "https://api.github.com/users/bruciebruce/gists{/gist_id}", "starred_url": "https://api.github.com/users/bruciebruce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bruciebruce/subscriptions", "organizations_url": "https://api.github.com/users/bruciebruce/orgs", "repos_url": "https://api.github.com/users/bruciebruce/repos", "events_url": "https://api.github.com/users/bruciebruce/events{/privacy}", "received_events_url": "https://api.github.com/users/bruciebruce/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-29T19:59:14Z", "updated_at": "2020-06-29T22:00:36Z", "closed_at": "2020-06-29T22:00:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## docker-compose is broken on Ubuntu 18.04\r\n\r\nI have been using docker-compose for a couple of weeks without issues.  I must have installed something recently that has broken it.   I cannot even retrieve the version number.  I am forced to use Python 2.7 because I am testing an old application that requires 2.7\r\n\r\n$ docker-compose -V\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/bin/docker-compose\", line 11, in <module>\r\n    load_entry_point('docker-compose==1.17.1', 'console_scripts', 'docker-compose')()\r\n  File \"/home/bruce/.local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 489, in load_entry_point\r\n    return get_distribution(dist).load_entry_point(group, name)\r\n  File \"/home/bruce/.local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2852, in load_entry_point\r\n    return ep.load()\r\n  File \"/home/bruce/.local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2443, in load\r\n    return self.resolve()\r\n  File \"/home/bruce/.local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2449, in resolve\r\n    module = __import__(self.module_name, fromlist=['__name__'], level=0)\r\n  File \"/usr/lib/python2.7/dist-packages/compose/cli/main.py\", line 17, in <module>\r\n    from . import errors\r\n  File \"/usr/lib/python2.7/dist-packages/compose/cli/errors.py\", line 13, in <module>\r\n    from requests.exceptions import ReadTimeout\r\nImportError: cannot import name ReadTimeout\r\n\r\n**Here is my version of requests**\r\n```\r\n$ pip2 list | grep requests\r\nrequests (2.22.0)\r\n\r\n```\r\n**OS = Ubuntu 18.04**\r\n\r\nThanking you in advance.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7565", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7565/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7565/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7565/events", "html_url": "https://github.com/docker/compose/issues/7565", "id": 647294870, "node_id": "MDU6SXNzdWU2NDcyOTQ4NzA=", "number": 7565, "title": "Unable to deploy with docker-compose to ACI", "user": {"login": "JorTurFer", "id": 36899226, "node_id": "MDQ6VXNlcjM2ODk5MjI2", "avatar_url": "https://avatars1.githubusercontent.com/u/36899226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JorTurFer", "html_url": "https://github.com/JorTurFer", "followers_url": "https://api.github.com/users/JorTurFer/followers", "following_url": "https://api.github.com/users/JorTurFer/following{/other_user}", "gists_url": "https://api.github.com/users/JorTurFer/gists{/gist_id}", "starred_url": "https://api.github.com/users/JorTurFer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JorTurFer/subscriptions", "organizations_url": "https://api.github.com/users/JorTurFer/orgs", "repos_url": "https://api.github.com/users/JorTurFer/repos", "events_url": "https://api.github.com/users/JorTurFer/events{/privacy}", "received_events_url": "https://api.github.com/users/JorTurFer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-28T17:59:10Z", "updated_at": "2020-06-29T18:36:33Z", "closed_at": "2020-06-29T18:36:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nPlease, check https://docs.docker.com/docker-for-windows/troubleshoot/.\r\nIssues without logs and details cannot be debugged, and will be closed.\r\n\r\nIssues unrelated to Docker Desktop will be closed.  In particular, see\r\n  - https://github.com/moby/moby/issues for Docker daemon, e.g. running on Windows Server with Docker EE\r\n  - https://github.com/docker/compose/issues for docker-compose\r\n  - https://github.com/docker/machine/issues for docker-machine\r\n  - https://github.com/docker/docker.github.io/issues for the documentation\r\n-->\r\n\r\n<!-- Click these checkboxes after submitting. -->\r\n<!-- Download Docker Desktop 'Edge' (latest build) here: https://hub.docker.com/editions/community/docker-ce-desktop-windows -->\r\n  - [x] I have tried with the latest version of my channel (Stable or Edge)\r\n  - [x] I have uploaded Diagnostics\r\n  - Diagnostics ID: 471142C6-D7FC-4141-8495-387A49CCA664/20200628174539\r\n\r\n### Expected behavior\r\nFollowing [this doc](https://docs.docker.com/engine/context/aci-integration/), It should be possible to deploy multiple containers to Azure Container Instances using docker compose.\r\n### Actual behavior\r\nWhen I try to deploy a simple docker-compose file I get an error with this trace:\r\n```\r\nPS C:\\Users\\jorge> docker-compose -f .\\compose.yml up\r\nTraceback (most recent call last):\r\n  File \"site-packages\\docker\\context\\context.py\", line 81, in _load_meta\r\nKeyError: 'SkipTLSVerify'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"docker-compose\", line 6, in <module>\r\n  File \"compose\\cli\\main.py\", line 72, in main\r\n  File \"compose\\cli\\main.py\", line 125, in perform_command\r\n  File \"compose\\cli\\command.py\", line 76, in project_from_options\r\n  File \"compose\\cli\\command.py\", line 142, in get_project\r\n  File \"compose\\cli\\docker_client.py\", line 47, in get_client\r\n  File \"compose\\cli\\docker_client.py\", line 143, in docker_client\r\n  File \"site-packages\\docker\\context\\api.py\", line 130, in get_current_context\r\n  File \"site-packages\\docker\\context\\api.py\", line 95, in get_context\r\n  File \"site-packages\\docker\\context\\context.py\", line 62, in load_context\r\n  File \"site-packages\\docker\\context\\context.py\", line 85, in _load_meta\r\nException: Detected corrupted meta file for\r\n                        context myacicontext : 'SkipTLSVerify'\r\n[7232] Failed to execute script docker-compose\r\n```\r\n### Information\r\n<!--\r\nPlease, help us understand the problem.  For instance:\r\n  - Is it reproducible?\r\n  - Is the problem new?\r\n  - Did the problem appear with an update?\r\n  - A reproducible case if this is a bug, Dockerfiles with reproduction inside is best.\r\n-->\r\n  - Windows Version: Windows 10 Home 2004\r\n  - Docker Desktop Version: 2.3.2.0 (46268) Edge\r\n  - Are you running inside a virtualized Windows e.g. on a cloud server or on a mac VM: No\r\n\r\n### Steps to reproduce the behavior\r\n<!--\r\nA reproducible case, Dockerfiles with reproduction inside is best.\r\n-->\r\n\r\n  1. Install the latest version of the edge channel and configure the context to use Azure Container Instances\r\n  2. Create a docker-compose.yml file like this:\r\n```yml\r\nversion: '3.4'\r\n\r\nservices:\r\n  web:    \r\n    image: nginx\r\n    ports:\r\n    - 80:80\r\n```\r\n  3. Try to deploy it using docker-compose\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7561", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7561/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7561/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7561/events", "html_url": "https://github.com/docker/compose/issues/7561", "id": 645152181, "node_id": "MDU6SXNzdWU2NDUxNTIxODE=", "number": 7561, "title": "ERROR: for registry  Cannot start service registry: OCI runtime create failed ...", "user": {"login": "igorpopryadukhin", "id": 48174353, "node_id": "MDQ6VXNlcjQ4MTc0MzUz", "avatar_url": "https://avatars1.githubusercontent.com/u/48174353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorpopryadukhin", "html_url": "https://github.com/igorpopryadukhin", "followers_url": "https://api.github.com/users/igorpopryadukhin/followers", "following_url": "https://api.github.com/users/igorpopryadukhin/following{/other_user}", "gists_url": "https://api.github.com/users/igorpopryadukhin/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorpopryadukhin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorpopryadukhin/subscriptions", "organizations_url": "https://api.github.com/users/igorpopryadukhin/orgs", "repos_url": "https://api.github.com/users/igorpopryadukhin/repos", "events_url": "https://api.github.com/users/igorpopryadukhin/events{/privacy}", "received_events_url": "https://api.github.com/users/igorpopryadukhin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-25T04:57:57Z", "updated_at": "2020-06-26T09:26:22Z", "closed_at": "2020-06-26T09:26:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "ERROR: for registry  Cannot start service registry: OCI runtime create failed: container_linux.go:349: starting container process caused \r\n\r\n`\r\nERROR: for registry  Cannot start service registry: OCI runtime create failed: container_linux.go:349: starting container process caused \"process_linux.go:449: container init caused \\\"process_linux.go:432: running prestart hook 0 caused \\\\\\\"error running hook: exit status 2, stdout: , stderr: fatal error: runtime: out of memory\\\\\\\\n\\\\\\\\nruntime stack:\\\\\\\\nruntime.throw(0x55db4a91f548, 0x16)\\\\\\\\n\\\\\\\\t/usr/local/go/src/runtime/panic.go:774 +0x74 fp=0x7fff441b8218 sp=0x7fff441b81e8 pc=0x55db49053634\\\\\\\\nruntime.sysMap(0xc000000000, 0x4000000, 0x55db4cb7c678)\\\\\\\\n\\\\\\\\t/usr/local/go/src/runtime/mem_linux.go:169 +0xc7 fp=0x7fff441b8258 sp=0x7fff441b8218 pc=0x55db4903c387\\\\\\\\nruntime.(*mheap).sysAlloc(0x55db4cb5fec0, 0x2000, 0x0, 0x0)\\\\\\\\n\\\\\\\\t/usr/local/go/src/runtime/malloc.go:701 +0x1cf fp=0x7fff441b8300 sp=0x7fff441b8258 pc=0x55db4902f31f\\\\\\\\nruntime.(*mheap).grow(0x55db4cb5fec0, 0x1, 0xffffffff)\\\\\\\\n\\\\\\\\t/usr/local/go/src/runtime/mheap.go:1255 +0xa5 fp=0x7fff441b8350 sp=0x7fff441b8300 pc=0x55db4904a525\\\\\\\\nruntime.(*mheap).allocSpanLocked(0x55db4cb5fec0, 0x1, 0x55db4cb7c688, 0x1)\\\\\\\\n\\\\\\\\t/usr/local/go/src/runtime/mheap.go:1170 +0x268 fp=0x7fff441b83d0 sp=0x7fff441b8350 pc=0x55db4904a3b8\\\\\\\\nruntime.(*mheap).alloc_m(0x55db4cb5fec0, 0x1, 0x55db4907002a, 0x0)\\\\\\\\n\\\\\\\\t/usr/local/go/src/runtime/mheap.go:1022 +0xc6 fp=0x7fff441b8420 sp=0x7fff441b83d0 pc=0x55db49049c56\\\\\\\\nruntime.(*mheap).alloc.func1()\\\\\\\\n\\\\\\\\t/usr/local/go/src/runtime/mheap.go:1093 +0x4e fp=0x7fff441b8458 sp=0x7fff441b8420 pc=0x55db4907f8fe\\\\\\\\nruntime.(*mheap).alloc(0x55db4cb5fec0, 0x1, 0x1002a, 0x40000)\\\\\\\\n\\\\\\\\t/usr/local/go/src/runtime/mheap.go:1092 +0x8c fp=0x7fff441b84a8 sp=0x7fff441b8458 pc=0x55db49049f3c\\\\\\\\nruntime.(*mcentral).grow(0x55db4cb60cf8, 0x0)\\\\\\\\n\\\\\\\\t/usr/local/go/src/runtime/mcentral.go:255 +0x7d fp=0x7fff441b84e8 sp=0x7fff441b84a8 pc=0x55db4903bdad\\\\\\\\nruntime.(*mcentral).cacheSpan(0x55db4cb60cf8, 0x7f084540c000)\\\\\\\\n\\\\\\\\t/usr/local/go/src/runtime/mcentral.go:106 +0x300 fp=0x7fff441b8548 sp=0x7fff441b84e8 pc=0x55db4903b8d0\\\\\\\\nruntime.(*mcache).refill(0x7f084540c008, 0x2a)\\\\\\\\n\\\\\\\\t/usr/local/go/src/runtime/mcache.go:138 +0x87 fp=0x7fff441b8568 sp=0x7fff441b8548 pc=0x55db4903b367\\\\\\\\nruntime.(*mcache).nextFree(0x7f084540c008, 0x55db4cb7c62a, 0x7f084540c008, 0x8, 0xfffffffffffffff8)\\\\\\\\n\\\\\\\\t/usr/local/go/src/runtime/malloc.go:854 +0x89 fp=0x7fff441b85a0 sp=0x7fff441b8568 pc=0x55db4902fb49\\\\\\\\nruntime.mallocgc(0x180, 0x55db4b92a9e0, 0x1, 0x55db4cb7c6e0)\\\\\\\\n\\\\\\\\t/usr/local/go/src/runtime/malloc.go:1022 +0x7a5 fp=0x7fff441b8640 sp=0x7fff441b85a0 pc=0x55db49030495\\\\\\\\nruntime.newobject(0x55db4b92a9e0, 0x4000)\\\\\\\\n\\\\\\\\t/usr/local/go/src/runtime/malloc.go:1151 +0x3a fp=0x7fff441b8670 sp=0x7fff441b8640 pc=0x55db4903089a\\\\\\\\nruntime.malg(0xfdd00008000, 0x55db4cb62568)\\\\\\\\n\\\\\\\\t/usr/local/go/src/runtime/proc.go:3232 +0x33 fp=0x7fff441b86b0 sp=0x7fff441b8670 pc=0x55db4905cb03\\\\\\\\nruntime.mpreinit(...)\\\\\\\\n\\\\\\\\t/usr/local/go/src/runtime/os_linux.go:324\\\\\\\\nruntime.mcommoninit(0x55db4cb5a980)\\\\\\\\n\\\\\\\\t/usr/local/go/src/runtime/proc.go:626 +0xc6 fp=0x7fff441b86e8 sp=0x7fff441b86b0 pc=0x55db49056436\\\\\\\\nruntime.schedinit()\\\\\\\\n\\\\\\\\t/usr/local/go/src/runtime/proc.go:543 +0x76 fp=0x7fff441b8740 sp=0x7fff441b86e8 pc=0x55db49056096\\\\\\\\nruntime.rt0_go(0x7fff441b8848, 0x4, 0x7fff441b8848, 0x0, 0x7f0844671830, 0x0, 0x7fff441b8848, 0x4437aa1a0, 0x55db49081cc0, 0x0, ...)\\\\\\\\n\\\\\\\\t/usr/local/go/src/runtime/asm_amd64.s:214 +0x129 fp=0x7fff441b8748 sp=0x7fff441b8740 pc=0x55db49081df9\\\\\\\\n\\\\\\\"\\\"\": unknown\r\nERROR: Encountered errors while bringing up the project.\r\n`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7559", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7559/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7559/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7559/events", "html_url": "https://github.com/docker/compose/issues/7559", "id": 644655581, "node_id": "MDU6SXNzdWU2NDQ2NTU1ODE=", "number": 7559, "title": "Why Docker Compose does not create secrets?", "user": {"login": "danilopeixoto", "id": 10113621, "node_id": "MDQ6VXNlcjEwMTEzNjIx", "avatar_url": "https://avatars0.githubusercontent.com/u/10113621?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danilopeixoto", "html_url": "https://github.com/danilopeixoto", "followers_url": "https://api.github.com/users/danilopeixoto/followers", "following_url": "https://api.github.com/users/danilopeixoto/following{/other_user}", "gists_url": "https://api.github.com/users/danilopeixoto/gists{/gist_id}", "starred_url": "https://api.github.com/users/danilopeixoto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danilopeixoto/subscriptions", "organizations_url": "https://api.github.com/users/danilopeixoto/orgs", "repos_url": "https://api.github.com/users/danilopeixoto/repos", "events_url": "https://api.github.com/users/danilopeixoto/events{/privacy}", "received_events_url": "https://api.github.com/users/danilopeixoto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777239, "node_id": "MDU6TGFiZWw2OTc3NzIzOQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-24T14:21:09Z", "updated_at": "2020-07-01T13:29:19Z", "closed_at": "2020-07-01T13:29:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWhy `docker-compose up -d` command does not create secrets defined in `docker-compose.yml` file automatically?\r\n\r\nExample:\r\n\r\n```\r\nversion: '3.5'\r\n\r\nsecrets:\r\n  database_password:\r\n    file: secrets/database_password\r\n\r\nservices:\r\n\r\n...\r\n```\r\n\r\nDocker version: `Docker version 19.03.9, build 9d988398e7`\r\nDocker Compose version: `docker-compose version 1.25.5, build 8a1c60f6`\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7556", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7556/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7556/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7556/events", "html_url": "https://github.com/docker/compose/issues/7556", "id": 643494667, "node_id": "MDU6SXNzdWU2NDM0OTQ2Njc=", "number": 7556, "title": "docker-compose down removing user defined networks", "user": {"login": "banch0", "id": 33978778, "node_id": "MDQ6VXNlcjMzOTc4Nzc4", "avatar_url": "https://avatars0.githubusercontent.com/u/33978778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/banch0", "html_url": "https://github.com/banch0", "followers_url": "https://api.github.com/users/banch0/followers", "following_url": "https://api.github.com/users/banch0/following{/other_user}", "gists_url": "https://api.github.com/users/banch0/gists{/gist_id}", "starred_url": "https://api.github.com/users/banch0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/banch0/subscriptions", "organizations_url": "https://api.github.com/users/banch0/orgs", "repos_url": "https://api.github.com/users/banch0/repos", "events_url": "https://api.github.com/users/banch0/events{/privacy}", "received_events_url": "https://api.github.com/users/banch0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777239, "node_id": "MDU6TGFiZWw2OTc3NzIzOQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-23T03:09:52Z", "updated_at": "2020-06-23T03:27:58Z", "closed_at": "2020-06-23T03:27:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I do not know why this happens when I call docker-compose down. This removes the networks that I created earlier. And each time docker-compose creates network by default.\r\n\r\ndocker network create --driver=bridge apigate\r\n\r\nNETWORK ID          NAME            DRIVER           SCOPE\r\n2dca1af0e763        apigate             bridge              local\r\n\r\ndocker-compose down\r\nStopping enginex      ... done\r\nStopping web3         ... done\r\nStopping web2         ... done\r\nStopping gateway_db_1 ... done\r\nStopping web1         ... done\r\nRemoving enginex      ... done\r\nRemoving web3         ... done\r\nRemoving web2         ... done\r\nRemoving gateway_db_1 ... done\r\nRemoving web1         ... done\r\nRemoving network apigate\r\n\r\n\r\nversion: \"3.8\"\r\nnetworks:\r\n    apigate:\r\n        name: apigate\r\nservices:\r\n    nginx:\r\n        image: proxx\r\n        container_name: enginex\r\n        ports:\r\n            - 8080:8088\r\n            - 443:443\r\n        volumes: \r\n            - ./nginx/simple/:/etc/nginx/conf.d/\r\n            - ./nginx/logs:/etc/nginx/logs\r\n            - ./cert/:/etc/ssl\r\n        environment:\r\n            - NGINX_HOST=${NGINX_HOST}\r\n            - NGINX_PORT=${NGINX_PORT}\r\n        restart: always\r\n        depends_on: \r\n            - web\r\n        networks: \r\n            - apigate\r\n    web:\r\n        image: protoweb\r\n        container_name: web1\r\n        ports:\r\n            - 50051:50051\r\n        networks:\r\n            - apigate\r\n    web2:\r\n        image: protoweb\r\n        container_name: web2\r\n        ports:\r\n            - 50052:50051\r\n        networks:\r\n            - apigate\r\n    web3:\r\n        image: protoweb\r\n        container_name: web3\r\n        ports:\r\n            - 50053:50051\r\n        networks:\r\n            - apigate\r\n    db:\r\n        image: postgres:9.5-alpine\r\n        ports:\r\n            - 5434:5432\r\n        environment:\r\n            - POSTGRES_PASSWORD=pass\r\n            - POSTGRES_USER=user\r\n            - POSTGRES_DB=app\r\n        networks:\r\n            - apigate", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7547", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7547/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7547/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7547/events", "html_url": "https://github.com/docker/compose/issues/7547", "id": 642114260, "node_id": "MDU6SXNzdWU2NDIxMTQyNjA=", "number": 7547, "title": "Nginx container doesn\u2019t copy files to my host", "user": {"login": "leandrosk2", "id": 22345248, "node_id": "MDQ6VXNlcjIyMzQ1MjQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/22345248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leandrosk2", "html_url": "https://github.com/leandrosk2", "followers_url": "https://api.github.com/users/leandrosk2/followers", "following_url": "https://api.github.com/users/leandrosk2/following{/other_user}", "gists_url": "https://api.github.com/users/leandrosk2/gists{/gist_id}", "starred_url": "https://api.github.com/users/leandrosk2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leandrosk2/subscriptions", "organizations_url": "https://api.github.com/users/leandrosk2/orgs", "repos_url": "https://api.github.com/users/leandrosk2/repos", "events_url": "https://api.github.com/users/leandrosk2/events{/privacy}", "received_events_url": "https://api.github.com/users/leandrosk2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-19T17:07:13Z", "updated_at": "2020-06-24T21:18:21Z", "closed_at": "2020-06-24T21:17:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to copy a set of files (etc/nginx/*) from Nginx container to myhost (./nginx) but don't work.\r\nEvery time I run my docker-compose, the folder on the host (/ usr / development / nginx) is empty. How can I do this?\r\n\r\n**Environment**\r\n`DISTRIB_ID=Ubuntu\r\nDISTRIB_RELEASE=18.04\r\nDISTRIB_CODENAME=bionic\r\nDISTRIB_DESCRIPTION=\"Ubuntu 18.04.4 LTS\"`\r\n\r\n**Docker Compose**\r\n`docker-compose version 1.25.5, build 8a1c60f6`\r\n\r\n**Docker**\r\n`Docker version 19.03.6, build 369ce74a3c`\r\n\r\n**My docker-compose.yml**\r\n`version: '3.7'\r\n\r\n    services:\r\n      nginx:\r\n        container_name: 'nginx'\r\n        hostname: nginx\r\n        image: nginx\r\n        ports:\r\n          - \"80:80\"\r\n          - \"443:443\"\r\n        restart: unless-stopped\r\n        command: /bin/sh -c \"while :; do sleep 6h & wait ${!}; nginx -s reload; done & nginx -g 'daemon off;'\"\r\n        volumes:\r\n          - ./nginx:/etc/nginx\r\n          - ./certbot/conf:/etc/letsencrypt\r\n          - ./certbot/www:/var/www/certbot\r\n        networks:\r\n          - docker-network\r\n      portainer:\r\n        image: portainer/portainer\r\n        container_name: portainer\r\n        hostname: portainer\r\n        ports:\r\n         - 9000:9000\r\n        volumes:\r\n         - /var/run/docker.sock:/var/run/docker.sock\r\n         - ./portainer/data:/data\r\n        networks:\r\n          - docker-network\r\n\r\n      certbot:\r\n        container_name: 'certbot'\r\n        hostname: certbot\r\n        image: certbot/certbot\r\n        volumes:\r\n          - ./certbot/conf:/etc/letsencrypt\r\n          - ./certbot/www:/var/www/certbot\r\n        restart: unless-stopped\r\n        entrypoint: /bin/sh -c \"trap exit TERM; while :; do certbot renew; sleep 12h & wait ${!}; done;\"\r\n        depends_on:\r\n          - nginx\r\n        networks:\r\n          - docker-network\r\n    networks:\r\n      docker-network:\r\n        name: docker-network\r\n        driver: bridge`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7540", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7540/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7540/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7540/events", "html_url": "https://github.com/docker/compose/issues/7540", "id": 640398535, "node_id": "MDU6SXNzdWU2NDAzOTg1MzU=", "number": 7540, "title": "docker-compose does not understand flag/argument separator", "user": {"login": "myitcv", "id": 3374574, "node_id": "MDQ6VXNlcjMzNzQ1NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/3374574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/myitcv", "html_url": "https://github.com/myitcv", "followers_url": "https://api.github.com/users/myitcv/followers", "following_url": "https://api.github.com/users/myitcv/following{/other_user}", "gists_url": "https://api.github.com/users/myitcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/myitcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/myitcv/subscriptions", "organizations_url": "https://api.github.com/users/myitcv/orgs", "repos_url": "https://api.github.com/users/myitcv/repos", "events_url": "https://api.github.com/users/myitcv/events{/privacy}", "received_events_url": "https://api.github.com/users/myitcv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-17T12:22:04Z", "updated_at": "2020-08-04T12:28:16Z", "closed_at": "2020-08-04T12:28:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description of the issue\r\n\r\n`docker-compose` does not handle `--` when passed as a separator of flags and arguments.\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.26.0, build d4451659\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.11\r\n API version:       1.40\r\n Go version:        go1.13.10\r\n Git commit:        42e35e61f3\r\n Built:             Mon Jun  1 09:12:23 2020\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.11\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.13.10\r\n  Git commit:       42e35e61f3\r\n  Built:            Mon Jun  1 09:10:55 2020\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.2.13\r\n  GitCommit:        7ad184331fa3e55e52b890ea95e65ba581ae3429\r\n runc:\r\n  Version:          1.0.0-rc10\r\n  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n\r\n```\r\nservices:\r\n  eg:\r\n    image: busybox:1.31.1-musl\r\nversion: '3.2'\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\nNotice that the following succeeds:\r\n\r\n```\r\n$ docker run -- busybox:1.31.1-musl echo -hello\r\n-hello\r\n```\r\n\r\n(the `--` is being used, as is [common practice](https://linux.die.net/man/3/getopt), to clearly say where the flags for the `run` command stop, and the arguments start.)\r\n\r\nHowever the following fails:\r\n\r\n```\r\n$ docker-compose run -- eg echo -hello\r\nERROR: No such service: --\r\n```\r\n\r\n### Observed result\r\n\r\nAs above.\r\n\r\n### Expected result\r\n\r\nThe `docker-compose` command above should succeed in exactly the same way as the `docker run` command.\r\n\r\n### Stacktrace / full error message\r\n\r\nAs above.\r\n\r\n## Additional information\r\n\r\n```\r\nUbuntu 20.04 LTS\r\n```\r\n\r\nInstalled via https://docs.docker.com/compose/install/#install-compose-on-linux-systems", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7538", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7538/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7538/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7538/events", "html_url": "https://github.com/docker/compose/issues/7538", "id": 639908120, "node_id": "MDU6SXNzdWU2Mzk5MDgxMjA=", "number": 7538, "title": "docker-compose push sometimes does not work", "user": {"login": "arkodg", "id": 9469142, "node_id": "MDQ6VXNlcjk0NjkxNDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/9469142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arkodg", "html_url": "https://github.com/arkodg", "followers_url": "https://api.github.com/users/arkodg/followers", "following_url": "https://api.github.com/users/arkodg/following{/other_user}", "gists_url": "https://api.github.com/users/arkodg/gists{/gist_id}", "starred_url": "https://api.github.com/users/arkodg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arkodg/subscriptions", "organizations_url": "https://api.github.com/users/arkodg/orgs", "repos_url": "https://api.github.com/users/arkodg/repos", "events_url": "https://api.github.com/users/arkodg/events{/privacy}", "received_events_url": "https://api.github.com/users/arkodg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ulyssessouza", "id": 373485, "node_id": "MDQ6VXNlcjM3MzQ4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/373485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulyssessouza", "html_url": "https://github.com/ulyssessouza", "followers_url": "https://api.github.com/users/ulyssessouza/followers", "following_url": "https://api.github.com/users/ulyssessouza/following{/other_user}", "gists_url": "https://api.github.com/users/ulyssessouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulyssessouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulyssessouza/subscriptions", "organizations_url": "https://api.github.com/users/ulyssessouza/orgs", "repos_url": "https://api.github.com/users/ulyssessouza/repos", "events_url": "https://api.github.com/users/ulyssessouza/events{/privacy}", "received_events_url": "https://api.github.com/users/ulyssessouza/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ulyssessouza", "id": 373485, "node_id": "MDQ6VXNlcjM3MzQ4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/373485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulyssessouza", "html_url": "https://github.com/ulyssessouza", "followers_url": "https://api.github.com/users/ulyssessouza/followers", "following_url": "https://api.github.com/users/ulyssessouza/following{/other_user}", "gists_url": "https://api.github.com/users/ulyssessouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulyssessouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulyssessouza/subscriptions", "organizations_url": "https://api.github.com/users/ulyssessouza/orgs", "repos_url": "https://api.github.com/users/ulyssessouza/repos", "events_url": "https://api.github.com/users/ulyssessouza/events{/privacy}", "received_events_url": "https://api.github.com/users/ulyssessouza/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-06-16T19:08:32Z", "updated_at": "2020-08-19T20:40:50Z", "closed_at": "2020-08-19T20:40:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description of the issue\r\nRunning `docker-compose push` does nothing (sometimes) after building images using `docker-compose build`,\r\nWorkaround - I need to run `docker-compose -f docker-compose.yml push` to push the image\r\nSeeing this on Docker Desktop\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\n1.26.0-rc4\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\n19.03.8\r\n```\r\n\r\n### Observed result\r\nIn the below output, you can see that `docker-compose push` did not work in the first attempt\r\nand succeeded in the second attempt\r\n\r\n```\r\ndocker-compose --verbose push\r\ncompose.config.config.find: Using configuration files: ./docker-compose.yml,./docker-compose.override.yml\r\ndocker.utils.config.find_config_file: Trying paths: ['/Users/<user>/.docker/config.json', '/Users/<user>/.dockercfg']\r\ndocker.utils.config.find_config_file: Found file at path: /Users/<user>/.docker/config.json\r\ndocker.utils.config.find_config_file: Trying paths: ['/Users/<user>/.docker/config.json', '/Users/<user>/.dockercfg']\r\ndocker.utils.config.find_config_file: Found file at path: /Users/<user>/.docker/config.json\r\ndocker.auth.load_config: Found 'auths' section\r\ndocker.auth.parse_auth: Auth data for https://index.docker.io/v1/ is absent. Client might be using a credentials store instead.\r\ndocker.auth.parse_auth: Auth data for registry-1-stage.docker.io is absent. Client might be using a credentials store instead.\r\ndocker.auth.load_config: Found 'credsStore' section\r\nurllib3.connectionpool._make_request: http://localhost:None \"GET /v1.30/version HTTP/1.1\" 200 872\r\ncompose.cli.docker_client.get_client: docker-compose version 1.26.0-rc4, build d279b7a8\r\ndocker-py version: 4.2.0\r\nCPython version: 3.7.7\r\nOpenSSL version: OpenSSL 1.1.1g  21 Apr 2020\r\ncompose.cli.docker_client.get_client: Docker base_url: http+docker://localhost\r\ncompose.cli.docker_client.get_client: Docker version: Platform={'Name': 'Docker Engine - Community'}, Components=[{'Name': 'Engine', 'Version': '19.03.8', 'Details': {'ApiVersion': '1.40', 'Arch': 'amd64', 'BuildTime': '2020-03-11T01:29:16.000000000+00:00', 'Experimental': 'true', 'GitCommit': 'afacb8b', 'GoVersion': 'go1.12.17', 'KernelVersion': '4.19.76-linuxkit', 'MinAPIVersion': '1.12', 'Os': 'linux'}}, {'Name': 'containerd', 'Version': 'v1.2.13', 'Details': {'GitCommit': '7ad184331fa3e55e52b890ea95e65ba581ae3429'}}, {'Name': 'runc', 'Version': '1.0.0-rc10', 'Details': {'GitCommit': 'dc9208a3303feef5b3839f4323d9beb36df0a9dd'}}, {'Name': 'docker-init', 'Version': '0.18.0', 'Details': {'GitCommit': 'fec3683'}}], Version=19.03.8, ApiVersion=1.40, MinAPIVersion=1.12, GitCommit=afacb8b, GoVersion=go1.12.17, Os=linux, Arch=amd64, KernelVersion=4.19.76-linuxkit, Experimental=True, BuildTime=2020-03-11T01:29:16.000000000+00:00\r\ncompose.cli.verbose_proxy.proxy_callable: docker inspect_network <- ('<stack-name>_default')\r\nurllib3.connectionpool._make_request: http://localhost:None \"GET /v1.30/networks/<stack-name>_default HTTP/1.1\" 200 557\r\ncompose.cli.verbose_proxy.proxy_callable: docker inspect_network -> {'Attachable': True,\r\n 'ConfigFrom': {'Network': ''},\r\n 'ConfigOnly': False,\r\n 'Containers': {},\r\n 'Created': '2020-05-29T16:51:40.2312654Z',\r\n 'Driver': 'bridge',\r\n 'EnableIPv6': False,\r\n 'IPAM': {'Config': [{'Gateway': '172.19.0.1', 'Subnet': '172.19.0.0/16'}],\r\n          'Driver': 'default',\r\n          'Options': None},\r\n...\r\n\ud83d\udc33 $ docker-compose --verbose push\r\ncompose.config.config.find: Using configuration files: ./docker-compose.yml,./docker-compose.override.yml\r\ndocker.utils.config.find_config_file: Trying paths: ['/Users/<user>/.docker/config.json', '/Users/<user>/.dockercfg']\r\ndocker.utils.config.find_config_file: Found file at path: /Users/<user>/.docker/config.json\r\ndocker.utils.config.find_config_file: Trying paths: ['/Users/<user>/.docker/config.json', '/Users/<user>/.dockercfg']\r\ndocker.utils.config.find_config_file: Found file at path: /Users/<user>/.docker/config.json\r\ndocker.auth.load_config: Found 'auths' section\r\ndocker.auth.parse_auth: Auth data for https://index.docker.io/v1/ is absent. Client might be using a credentials store instead.\r\ndocker.auth.parse_auth: Auth data for registry-1-stage.docker.io is absent. Client might be using a credentials store instead.\r\ndocker.auth.load_config: Found 'credsStore' section\r\nurllib3.connectionpool._make_request: http://localhost:None \"GET /v1.30/version HTTP/1.1\" 200 872\r\ncompose.cli.docker_client.get_client: docker-compose version 1.26.0-rc4, build d279b7a8\r\ndocker-py version: 4.2.0\r\nCPython version: 3.7.7\r\nOpenSSL version: OpenSSL 1.1.1g  21 Apr 2020\r\ncompose.cli.docker_client.get_client: Docker base_url: http+docker://localhost\r\ncompose.cli.docker_client.get_client: Docker version: Platform={'Name': 'Docker Engine - Community'}, Components=[{'Name': 'Engine', 'Version': '19.03.8', 'Details': {'ApiVersion': '1.40', 'Arch': 'amd64', 'BuildTime': '2020-03-11T01:29:16.000000000+00:00', 'Experimental': 'true', 'GitCommit': 'afacb8b', 'GoVersion': 'go1.12.17', 'KernelVersion': '4.19.76-linuxkit', 'MinAPIVersion': '1.12', 'Os': 'linux'}}, {'Name': 'containerd', 'Version': 'v1.2.13', 'Details': {'GitCommit': '7ad184331fa3e55e52b890ea95e65ba581ae3429'}}, {'Name': 'runc', 'Version': '1.0.0-rc10', 'Details': {'GitCommit': 'dc9208a3303feef5b3839f4323d9beb36df0a9dd'}}, {'Name': 'docker-init', 'Version': '0.18.0', 'Details': {'GitCommit': 'fec3683'}}], Version=19.03.8, ApiVersion=1.40, MinAPIVersion=1.12, GitCommit=afacb8b, GoVersion=go1.12.17, Os=linux, Arch=amd64, KernelVersion=4.19.76-linuxkit, Experimental=True, BuildTime=2020-03-11T01:29:16.000000000+00:00\r\ncompose.cli.verbose_proxy.proxy_callable: docker inspect_network <- ('<stack-name>_default')\r\nurllib3.connectionpool._make_request: http://localhost:None \"GET /v1.30/networks/<stack-name>_default HTTP/1.1\" 200 557\r\ncompose.cli.verbose_proxy.proxy_callable: docker inspect_network -> {'Attachable': True,\r\n 'ConfigFrom': {'Network': ''},\r\n 'ConfigOnly': False,\r\n 'Containers': {},\r\n 'Created': '2020-05-29T16:51:40.2312654Z',\r\n 'Driver': 'bridge',\r\n 'EnableIPv6': False,\r\n 'IPAM': {'Config': [{'Gateway': '172.19.0.1', 'Subnet': '172.19.0.0/16'}],\r\n          'Driver': 'default',\r\n          'Options': None},\r\n...\r\ncompose.service.push: Pushing agent (docker/<image-name>:latest)...\r\ncompose.cli.verbose_proxy.proxy_callable: docker push <- ('docker/<image-name>', tag='latest', stream=True)\r\ndocker.auth.get_config_header: Looking for auth config\r\ndocker.auth.resolve_authconfig: Using credentials store \"desktop\"\r\ndocker.auth._resolve_authconfig_credstore: Looking for auth entry for 'https://index.docker.io/v1/'\r\ndocker.auth.get_config_header: Found auth config\r\nurllib3.connectionpool._make_request: http://localhost:None \"POST /v1.30/images/docker/<image-name>/push?tag=latest HTTP/1.1\" 200 None\r\ncompose.cli.verbose_proxy.proxy_callable: docker push -> <generator object APIClient._stream_helper at 0x10cc30dd0>\r\nThe push refers to repository [docker.io/docker/<image-name>]\r\nec008f010cdc: Layer already exists\r\n4439818d7d2c: Layer already exists\r\n22ea724cf209: Layer already exists\r\n9e35372c652f: Layer already exists\r\n1ede7fa3c827: Layer already exists\r\na7a3c4ee26ce: Layer already exists\r\nb2b0e8762b55: Layer already exists\r\n0ffca9d82054: Layer already exists\r\nad3ceb923f2a: Layer already exists\r\n80d84172557e: Layer already exists\r\nef5011a1a00c: Layer already exists\r\n7302fdf028f0: Layer already exists\r\nb048bf9a2437: Layer already exists\r\ne5263d8c6535: Layer already exists\r\n962f2cfe1008: Layer already exists\r\nb4cbef589dca: Layer already exists\r\n20dd3bb3212d: Layer already exists\r\n2d24322a652d: Layer already exists\r\n853b7b300313: Layer already exists\r\n22fdb1b038cf: Layer already exists\r\na9761686f819: Layer already exists\r\n20215a41fca5: Layer already exists\r\na72a7e555fe1: Layer already exists\r\nb8f8aeff56a8: Layer already exists\r\n687890749166: Layer already exists\r\n2f77733e9824: Layer already exists\r\n97041f29baff: Layer already exists\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7528", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7528/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7528/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7528/events", "html_url": "https://github.com/docker/compose/issues/7528", "id": 637665179, "node_id": "MDU6SXNzdWU2Mzc2NjUxNzk=", "number": 7528, "title": "Support reading .env file in docker-compose exec", "user": {"login": "retnikt", "id": 24581770, "node_id": "MDQ6VXNlcjI0NTgxNzcw", "avatar_url": "https://avatars1.githubusercontent.com/u/24581770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retnikt", "html_url": "https://github.com/retnikt", "followers_url": "https://api.github.com/users/retnikt/followers", "following_url": "https://api.github.com/users/retnikt/following{/other_user}", "gists_url": "https://api.github.com/users/retnikt/gists{/gist_id}", "starred_url": "https://api.github.com/users/retnikt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retnikt/subscriptions", "organizations_url": "https://api.github.com/users/retnikt/orgs", "repos_url": "https://api.github.com/users/retnikt/repos", "events_url": "https://api.github.com/users/retnikt/events{/privacy}", "received_events_url": "https://api.github.com/users/retnikt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 153640415, "node_id": "MDU6TGFiZWwxNTM2NDA0MTU=", "url": "https://api.github.com/repos/docker/compose/labels/kind/feature", "name": "kind/feature", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-12T10:50:24Z", "updated_at": "2020-06-12T11:03:30Z", "closed_at": "2020-06-12T11:03:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n-->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nCurrently I run my database migrations in development using `docker-compose exec -e DATABASE_PASSWORD=hunter2 backend scripts/migrations`. However, this leaves the database password in my shell history and is quite unwieldy.\r\n\r\n**Describe the solution you'd like**\r\n I would like to specify environment variables for the `exec` command in a `.env` file, as I can with `docker-compose up` (i.e. the docker-compose.yml gets variable substitution from the .env file).\r\n\r\n**Describe alternatives you've considered**\r\nMaybe this should be behind an option, e.g. `-E, --env-file FILE`, rather than immediately reading from a `.env` file.\r\n\r\n**Additional context**\r\nAs with `docker-compose up`, there should be an option to override the default usage of the `.env` and to add a different file. (see #6170)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7527", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7527/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7527/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7527/events", "html_url": "https://github.com/docker/compose/issues/7527", "id": 636262529, "node_id": "MDU6SXNzdWU2MzYyNjI1Mjk=", "number": 7527, "title": "External volume not found error", "user": {"login": "hholst80", "id": 6200749, "node_id": "MDQ6VXNlcjYyMDA3NDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6200749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hholst80", "html_url": "https://github.com/hholst80", "followers_url": "https://api.github.com/users/hholst80/followers", "following_url": "https://api.github.com/users/hholst80/following{/other_user}", "gists_url": "https://api.github.com/users/hholst80/gists{/gist_id}", "starred_url": "https://api.github.com/users/hholst80/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hholst80/subscriptions", "organizations_url": "https://api.github.com/users/hholst80/orgs", "repos_url": "https://api.github.com/users/hholst80/repos", "events_url": "https://api.github.com/users/hholst80/events{/privacy}", "received_events_url": "https://api.github.com/users/hholst80/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-10T13:46:15Z", "updated_at": "2020-06-10T21:26:01Z", "closed_at": "2020-06-10T21:26:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n[om@puff tugboat]$ docker-compose --version\r\ndocker-compose version 1.26.0-rc4, build d279b7a8\r\n[om@puff tugboat]$ docker inspect workspace\r\n[\r\n    {\r\n        \"CreatedAt\": \"2020-05-24T13:16:07Z\",\r\n        \"Driver\": \"local\",\r\n        \"Labels\": {},\r\n        \"Mountpoint\": \"/var/lib/docker/volumes/workspace/_data\",\r\n        \"Name\": \"workspace\",\r\n        \"Options\": {},\r\n        \"Scope\": \"local\"\r\n    }\r\n]\r\n[om@puff tugboat]$ docker-compose up -d\r\nERROR: Volume workspace declared as external, but could not be found. Please create the volume manually using `docker volume create --name=workspace` and try again.\r\n[om@puff tugboat]$ cat docker-compose.yml\r\nversion: '2.2'\r\n\r\nservices:\r\n  local:\r\n    image: ***\r\n    restart: unless-stopped\r\n    container_name: local\r\n    hostname: local\r\n    environment:\r\n      - TERM\r\n      - LC_ALL=C.UTF-8\r\n      - DOCKER_BUILDKIT=1\r\n      - COMPOSE_DOCKER_CLI_BUILD=1\r\n    volumes:\r\n      - /var/run/docker.sock:/var/run/docker.sock:rw\r\n      - /root:/root:rw\r\n      - workspace:/workspace:rw\r\n\r\nvolumes:\r\n  workspace:\r\n    external: true\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7524", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7524/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7524/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7524/events", "html_url": "https://github.com/docker/compose/issues/7524", "id": 634980485, "node_id": "MDU6SXNzdWU2MzQ5ODA0ODU=", "number": 7524, "title": "--context may require setting COMPOSE_CONVERT_WINDOWS_PATHS", "user": {"login": "davetapley", "id": 48232, "node_id": "MDQ6VXNlcjQ4MjMy", "avatar_url": "https://avatars0.githubusercontent.com/u/48232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davetapley", "html_url": "https://github.com/davetapley", "followers_url": "https://api.github.com/users/davetapley/followers", "following_url": "https://api.github.com/users/davetapley/following{/other_user}", "gists_url": "https://api.github.com/users/davetapley/gists{/gist_id}", "starred_url": "https://api.github.com/users/davetapley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davetapley/subscriptions", "organizations_url": "https://api.github.com/users/davetapley/orgs", "repos_url": "https://api.github.com/users/davetapley/repos", "events_url": "https://api.github.com/users/davetapley/events{/privacy}", "received_events_url": "https://api.github.com/users/davetapley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-08T22:40:25Z", "updated_at": "2020-06-11T17:21:32Z", "closed_at": "2020-06-11T17:21:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\n\r\nUsing the [`--context`](https://docs.docker.com/compose/release-notes/#1260) support added in 1.26.0,\r\nwith `docker-compose` installed on Windows,\r\nand a remote host context running Ubuntu,\r\nwhen starting a service having a volume specified in `docker-compose.yml`,\r\nthen you get `Cannot create container for service [...]: invalid volume specification`,\r\nunless you also set `$env:COMPOSE_CONVERT_WINDOWS_PATHS = 1`.\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\n> docker-compose.exe version\r\ndocker-compose version 1.26.0, build d4451659\r\ndocker-py version: 4.2.1\r\nCPython version: 3.7.4\r\nOpenSSL version: OpenSSL 1.1.1c  28 May 2019\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.8\r\n API version:       1.40\r\n Go version:        go1.12.17\r\n Git commit:        afacb8b\r\n Built:             Wed Mar 11 01:23:10 2020\r\n OS/Arch:           windows/amd64\r\n Experimental:      true\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.8\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.17\r\n  Git commit:       afacb8b\r\n  Built:            Wed Mar 11 01:29:16 2020\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          v1.2.13\r\n  GitCommit:        7ad184331fa3e55e52b890ea95e65ba581ae3429\r\n runc:\r\n  Version:          1.0.0-rc10\r\n  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\nservices:\r\n  core:\r\n    command: REDACTED\r\n    image: REDACTED\r\n    volumes:\r\n    - /c/Users/dave/Documents/GitHub/REDACTED/Core:/REDACTED/Core:rw\r\n    working_dir: /REDACTED/Core\r\nversion: '3.7'\r\n```\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. Be running `docker-compose` 1.26.0 on Windows 10\r\n\r\n1. Be running Docker on Ubuntu 18.04.4 LTS\r\n\r\n1. Add a [`docker context`](https://docs.docker.com/engine/context/working-with-contexts/) pointing to the Linux instance, such that `docker context ls` gives e.g:\r\n\r\n    ```\r\n    NAME                DESCRIPTION                               DOCKER ENDPOINT                  KUBERNETES ENDPOINT   ORCHESTRATOR\r\n    default *           Current DOCKER_HOST based configuration   npipe:////./pipe/docker_engine                  swarm\r\n    ubuntu                                                        ssh://dave@ubuntu\r\n    ```\r\n\r\n1. Run `docker-compose --context ubuntu up core`\r\n\r\n### Observed result\r\n```\r\nERROR: for d5f9d1c87360_redacted_core_1  Cannot create container for service core: invalid volume specification: 'C:\\Users\\dave\\Documents\\GitHub\\REDACTED\\Core:/REDACTED/Core:rw'\r\n```\r\n\r\n### Expected result\r\n\r\nThe `core` service starting up as it would have running  `docker-compose up core` (i.e. without `--context ubuntu`)\r\n\r\n### Stacktrace / full error message\r\n\r\n```\r\nERROR: for d5f9d1c87360_redacted_core_1  Cannot create container for service core: invalid volume specification: 'C:\\Users\\dave\\Documents\\GitHub\\REDACTED\\Core:/REDACTED/Core:rw'\r\n```\r\n\r\n## Additional information\r\n\r\n`docker-compose` 1.26.0 on Windows 10\r\n\r\nDocker on Ubuntu 18.04.4 LTS\r\n\r\nI manually got `docker-compose-Windows-x86_64.exe` from https://github.com/docker/compose/releases/tag/1.26.0, since it hasn't been bundled in to Docker Desktop for Windows yet.\r\n\r\nI can work around this issue by setting  `$env:COMPOSE_CONVERT_WINDOWS_PATHS = 1` prior to running `docker-compose --context ubuntu up core`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7507", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7507/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7507/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7507/events", "html_url": "https://github.com/docker/compose/issues/7507", "id": 630728328, "node_id": "MDU6SXNzdWU2MzA3MjgzMjg=", "number": 7507, "title": "docker-compose up doesn't honor the service names passed as arguments when using multiple compose files", "user": {"login": "juanjoDiaz", "id": 3322485, "node_id": "MDQ6VXNlcjMzMjI0ODU=", "avatar_url": "https://avatars0.githubusercontent.com/u/3322485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juanjoDiaz", "html_url": "https://github.com/juanjoDiaz", "followers_url": "https://api.github.com/users/juanjoDiaz/followers", "following_url": "https://api.github.com/users/juanjoDiaz/following{/other_user}", "gists_url": "https://api.github.com/users/juanjoDiaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/juanjoDiaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juanjoDiaz/subscriptions", "organizations_url": "https://api.github.com/users/juanjoDiaz/orgs", "repos_url": "https://api.github.com/users/juanjoDiaz/repos", "events_url": "https://api.github.com/users/juanjoDiaz/events{/privacy}", "received_events_url": "https://api.github.com/users/juanjoDiaz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-04T11:08:01Z", "updated_at": "2020-06-04T14:31:20Z", "closed_at": "2020-06-04T14:30:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\n\r\n`docker-compose up` doesn't honor the service names passed as arguments when using multiple compose files.\r\n\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.25.5, build 8a1c60f6\r\ndocker-py version: 4.1.0\r\nCPython version: 3.7.5\r\nOpenSSL version: OpenSSL 1.1.1f  31 Mar 2020\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.8\r\n API version:       1.40\r\n Go version:        go1.12.17\r\n Git commit:        afacb8b\r\n Built:             Wed Mar 11 01:21:11 2020\r\n OS/Arch:           darwin/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.8\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.17\r\n  Git commit:       afacb8b\r\n  Built:            Wed Mar 11 01:29:16 2020\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          v1.2.13\r\n  GitCommit:        7ad184331fa3e55e52b890ea95e65ba581ae3429\r\n runc:\r\n  Version:          1.0.0-rc10\r\n  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n## Steps to reproduce the issue\r\n\r\nCreate docker-compose project with 2 compose-files and 3 services `ui-service`, `api-service` and `db-service`.\r\nRunning the following do actually start all the services instead of only the 2 that I state.\r\n\r\n```sh\r\ndocker-compose -f docker-compose.yml -f docker-compose.dev.yml up --build \\\r\n  db-service \\\r\n  api-service\r\n```\r\n\r\n### Observed result\r\n\r\n\r\nEven worst. When stoping the service with `ctrl+c` only `api-service` and `db-service` are stopped and `ui-service` stays up.\r\n\r\n\r\n### Expected result\r\n\r\nOnly `api-service` and `db-service` are started and stopped.\r\n\r\n## Additional information\r\n\r\nOS version / distribution, `docker-compose` install method, etc.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7505", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7505/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7505/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7505/events", "html_url": "https://github.com/docker/compose/issues/7505", "id": 630361487, "node_id": "MDU6SXNzdWU2MzAzNjE0ODc=", "number": 7505, "title": "compose 1.26.0 breaks TLS verification logic", "user": {"login": "jumanjiman", "id": 332496, "node_id": "MDQ6VXNlcjMzMjQ5Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/332496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jumanjiman", "html_url": "https://github.com/jumanjiman", "followers_url": "https://api.github.com/users/jumanjiman/followers", "following_url": "https://api.github.com/users/jumanjiman/following{/other_user}", "gists_url": "https://api.github.com/users/jumanjiman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jumanjiman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jumanjiman/subscriptions", "organizations_url": "https://api.github.com/users/jumanjiman/orgs", "repos_url": "https://api.github.com/users/jumanjiman/repos", "events_url": "https://api.github.com/users/jumanjiman/events{/privacy}", "received_events_url": "https://api.github.com/users/jumanjiman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ulyssessouza", "id": 373485, "node_id": "MDQ6VXNlcjM3MzQ4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/373485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulyssessouza", "html_url": "https://github.com/ulyssessouza", "followers_url": "https://api.github.com/users/ulyssessouza/followers", "following_url": "https://api.github.com/users/ulyssessouza/following{/other_user}", "gists_url": "https://api.github.com/users/ulyssessouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulyssessouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulyssessouza/subscriptions", "organizations_url": "https://api.github.com/users/ulyssessouza/orgs", "repos_url": "https://api.github.com/users/ulyssessouza/repos", "events_url": "https://api.github.com/users/ulyssessouza/events{/privacy}", "received_events_url": "https://api.github.com/users/ulyssessouza/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ulyssessouza", "id": 373485, "node_id": "MDQ6VXNlcjM3MzQ4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/373485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulyssessouza", "html_url": "https://github.com/ulyssessouza", "followers_url": "https://api.github.com/users/ulyssessouza/followers", "following_url": "https://api.github.com/users/ulyssessouza/following{/other_user}", "gists_url": "https://api.github.com/users/ulyssessouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulyssessouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulyssessouza/subscriptions", "organizations_url": "https://api.github.com/users/ulyssessouza/orgs", "repos_url": "https://api.github.com/users/ulyssessouza/repos", "events_url": "https://api.github.com/users/ulyssessouza/events{/privacy}", "received_events_url": "https://api.github.com/users/ulyssessouza/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/docker/compose/milestones/47", "html_url": "https://github.com/docker/compose/milestone/47", "labels_url": "https://api.github.com/repos/docker/compose/milestones/47/labels", "id": 5499612, "node_id": "MDk6TWlsZXN0b25lNTQ5OTYxMg==", "number": 47, "title": "1.26.1", "description": null, "creator": {"login": "ulyssessouza", "id": 373485, "node_id": "MDQ6VXNlcjM3MzQ4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/373485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulyssessouza", "html_url": "https://github.com/ulyssessouza", "followers_url": "https://api.github.com/users/ulyssessouza/followers", "following_url": "https://api.github.com/users/ulyssessouza/following{/other_user}", "gists_url": "https://api.github.com/users/ulyssessouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulyssessouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulyssessouza/subscriptions", "organizations_url": "https://api.github.com/users/ulyssessouza/orgs", "repos_url": "https://api.github.com/users/ulyssessouza/repos", "events_url": "https://api.github.com/users/ulyssessouza/events{/privacy}", "received_events_url": "https://api.github.com/users/ulyssessouza/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "open", "created_at": "2020-06-04T14:57:24Z", "updated_at": "2020-06-08T15:52:20Z", "due_on": null, "closed_at": null}, "comments": 6, "created_at": "2020-06-03T22:01:23Z", "updated_at": "2020-06-08T15:52:20Z", "closed_at": "2020-06-08T15:52:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description of the issue\r\n\r\ndocker-compose 1.26.0 breaks TLS verification logic\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n\r\n```\r\n$ docker-compose version\r\ndocker-compose version 1.26.0, build unknown\r\ndocker-py version: 4.2.0\r\nCPython version: 3.8.2\r\nOpenSSL version: OpenSSL 1.1.1g  21 Apr 2020\r\n```\r\n\r\n**Output of `docker version`**\r\n\r\n```\r\nClient:\r\n Version:           19.03.8\r\n API version:       1.38 (downgraded from 1.40)\r\n Go version:        go1.13.10\r\n Git commit:        afacb8b7f0d8d4f9d2a8e8736e9c993e672b41f3\r\n Built:             Fri May  1 15:37:13 2020\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer:\r\n Engine:\r\n  Version:          18.06.3-ce\r\n  API version:      1.38 (minimum version 1.12)\r\n  Go version:       go1.10.8\r\n  Git commit:       d7080c1\r\n  Built:            Tue Feb 19 23:07:53 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n\r\n```\r\n$ docker-compose -f docker-compose-test.yaml config\r\nservices:\r\n  alpine:\r\n    image: alpine\r\nversion: '2.4'\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. `pip3 install --user docker-compose==1.26.0`\r\n2. `export DOCKER_HOST=tcp://172.17.0.1:2375/`\r\n3. `docker-compose -f docker-compose-test.yaml run alpine`\r\n4. go back to docker-compose 1.25.5\r\n\r\n    ```\r\n    $ pip3 install --user docker-compose==1.25.5\r\n    -- snip --\r\n\r\n    $ docker-compose -f docker-compose-test.yaml run alpine\r\n    Pulling alpine (alpine:)...\r\n    latest: Pulling from library/alpine\r\n    Digest: sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321\r\n    Status: Downloaded newer image for alpine:latest\r\n    / #\r\n    ```\r\n\r\n### Observed result\r\n\r\n```\r\n$ docker-compose -f docker-compose-test.yaml run alpine\r\nTraceback (most recent call last):\r\n  File \"/usr/bin/docker-compose\", line 8, in <module>\r\n    sys.exit(main())\r\n  File \"/home/user/.local/lib/python3.8/site-packages/compose/cli/main.py\", line 72, in main\r\n    command()\r\n  File \"/home/user/.local/lib/python3.8/site-packages/compose/cli/main.py\", line 125, in perform_command\r\n    project = project_from_options('.', options)\r\n  File \"/home/user/.local/lib/python3.8/site-packages/compose/cli/command.py\", line 66, in project_from_options\r\n    return get_project(\r\n  File \"/home/user/.local/lib/python3.8/site-packages/compose/cli/command.py\", line 141, in get_project\r\n    client = get_client(\r\n  File \"/home/user/.local/lib/python3.8/site-packages/compose/cli/docker_client.py\", line 45, in get_client\r\n    client = docker_client(\r\n  File \"/home/user/.local/lib/python3.8/site-packages/compose/cli/docker_client.py\", line 141, in docker_client\r\n    context = Context(\"compose\", host=host, tls=verify)\r\nTypeError: __init__() got an unexpected keyword argument 'tls'\r\n```\r\n\r\n### Expected result\r\n\r\n```\r\n$ docker-compose -f docker-compose-test.yaml run alpine\r\nPulling alpine (alpine:)...\r\nlatest: Pulling from library/alpine\r\nDigest: sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321\r\nStatus: Downloaded newer image for alpine:latest\r\n/ # \r\n```\r\n\r\n### Stacktrace / full error message\r\n\r\n```\r\n$ docker-compose -f docker-compose-test.yaml run alpine\r\nTraceback (most recent call last):\r\n  File \"/usr/bin/docker-compose\", line 8, in <module>\r\n    sys.exit(main())\r\n  File \"/home/user/.local/lib/python3.8/site-packages/compose/cli/main.py\", line 72, in main\r\n    command()\r\n  File \"/home/user/.local/lib/python3.8/site-packages/compose/cli/main.py\", line 125, in perform_command\r\n    project = project_from_options('.', options)\r\n  File \"/home/user/.local/lib/python3.8/site-packages/compose/cli/command.py\", line 66, in project_from_options\r\n    return get_project(\r\n  File \"/home/user/.local/lib/python3.8/site-packages/compose/cli/command.py\", line 141, in get_project\r\n    client = get_client(\r\n  File \"/home/user/.local/lib/python3.8/site-packages/compose/cli/docker_client.py\", line 45, in get_client\r\n    client = docker_client(\r\n  File \"/home/user/.local/lib/python3.8/site-packages/compose/cli/docker_client.py\", line 141, in docker_client\r\n    context = Context(\"compose\", host=host, tls=verify)\r\nTypeError: __init__() got an unexpected keyword argument 'tls'\r\n```\r\n\r\n## Additional information\r\n\r\ninstalled via pip3 as shown above\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7503", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7503/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7503/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7503/events", "html_url": "https://github.com/docker/compose/issues/7503", "id": 630153286, "node_id": "MDU6SXNzdWU2MzAxNTMyODY=", "number": 7503, "title": "[master|1.26.0] Test \"test_container_attach_event\" produces unhealthy output", "user": {"login": "hartwork", "id": 1577132, "node_id": "MDQ6VXNlcjE1NzcxMzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1577132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hartwork", "html_url": "https://github.com/hartwork", "followers_url": "https://api.github.com/users/hartwork/followers", "following_url": "https://api.github.com/users/hartwork/following{/other_user}", "gists_url": "https://api.github.com/users/hartwork/gists{/gist_id}", "starred_url": "https://api.github.com/users/hartwork/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hartwork/subscriptions", "organizations_url": "https://api.github.com/users/hartwork/orgs", "repos_url": "https://api.github.com/users/hartwork/repos", "events_url": "https://api.github.com/users/hartwork/events{/privacy}", "received_events_url": "https://api.github.com/users/hartwork/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-03T16:42:05Z", "updated_at": "2020-06-10T15:03:20Z", "closed_at": "2020-06-10T15:03:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This output looks like something is wrong in test `tests/unit/cli/log_printer_test.py::TestWatchEvents::test_container_attach_event`. Would be cool to fix so that people running tests do not need to answer the same \"what is wrong and if so what is it\" question. Thank you! :pray: \r\n\r\n```console\r\n# python -m pytest -v tests/unit/cli/log_printer_test.py::TestWatchEvents::test_container_attach_event\r\n==================================================================================== test session starts =====================================================================================\r\nplatform linux -- Python 3.7.7, pytest-5.4.2, py-1.8.1, pluggy-0.13.1 -- /tmp/tmp.bOFM3p5N9T/compose/py37/bin/python\r\ncachedir: .pytest_cache\r\nrootdir: /tmp/tmp.bOFM3p5N9T/compose, inifile: tox.ini\r\nplugins: cov-2.8.1\r\ncollected 1 item\r\n\r\ntests/unit/cli/log_printer_test.py::TestWatchEvents::test_container_attach_event PASSED                                                                                                [100%]Exception in thread Thread-1:\r\nTraceback (most recent call last):\r\n  File \"/tmp/tmp.bOFM3p5N9T/compose/compose/cli/log_printer.py\", line 163, in tail_container_logs\r\n    for item in generator(container, log_args):\r\n  File \"/tmp/tmp.bOFM3p5N9T/compose/compose/utils.py\", line 61, in split_buffer\r\n    for data in stream_as_text(stream):\r\n  File \"/tmp/tmp.bOFM3p5N9T/compose/compose/utils.py\", line 37, in stream_as_text\r\n    for data in stream:\r\nTypeError: 'Mock' object is not iterable\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/threading.py\", line 926, in _bootstrap_inner\r\n    self.run()\r\n  File \"/usr/lib/python3.7/threading.py\", line 870, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/tmp/tmp.bOFM3p5N9T/compose/compose/cli/log_printer.py\", line 166, in tail_container_logs\r\n    queue.put(QueueItem.exception(e))\r\nAttributeError: 'str' object has no attribute 'put'\r\n\r\n\r\n\r\n===================================================================================== 1 passed in 0.03s ======================================================================================\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7501", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7501/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7501/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7501/events", "html_url": "https://github.com/docker/compose/issues/7501", "id": 630139451, "node_id": "MDU6SXNzdWU2MzAxMzk0NTE=", "number": 7501, "title": "Replace remaining deprecated assertEquals (with \"s\") by assertEqual (without \"s\")", "user": {"login": "hartwork", "id": 1577132, "node_id": "MDQ6VXNlcjE1NzcxMzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1577132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hartwork", "html_url": "https://github.com/hartwork", "followers_url": "https://api.github.com/users/hartwork/followers", "following_url": "https://api.github.com/users/hartwork/following{/other_user}", "gists_url": "https://api.github.com/users/hartwork/gists{/gist_id}", "starred_url": "https://api.github.com/users/hartwork/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hartwork/subscriptions", "organizations_url": "https://api.github.com/users/hartwork/orgs", "repos_url": "https://api.github.com/users/hartwork/repos", "events_url": "https://api.github.com/users/hartwork/events{/privacy}", "received_events_url": "https://api.github.com/users/hartwork/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-03T16:21:44Z", "updated_at": "2020-08-03T13:29:40Z", "closed_at": "2020-08-03T13:29:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi!\r\n\r\nSomeone replaced deprecared `assertEquals` (with \"s\") by `assertEqual` (without \"s\") in pull request #3543 in 2016 already but there are two new/current instances that produce the same warnings today. I can make a pull request unless you want to do it yourself.\r\n\r\nWhere?:\r\nhttps://github.com/docker/compose/blob/eab3aab9be57d8fb3b66bb87c3559557708fb2fb/tests/unit/config/config_test.py#L3181-L3189\r\n\r\nWhy?:\r\n```\r\n====================================================================================== warnings summary ======================================================================================\r\ntests/unit/config/config_test.py::ConfigTest::test_config_duplicate_mount_points\r\n  [..]/docker-compose-1.26.0/work/compose-1.26.0/tests/unit/config/config_test.py:3184: DeprecationWarning: Please use assertEqual instead.\r\n    ', '.join(['/tmp/foo:/tmp/foo:rw']*2)))\r\n\r\ntests/unit/config/config_test.py::ConfigTest::test_config_duplicate_mount_points\r\n  [..]/docker-compose-1.26.0/work/compose-1.26.0/tests/unit/config/config_test.py:3189: DeprecationWarning: Please use assertEqual instead.\r\n    ', '.join(['/x:/y:rw', '/z:/y:rw'])))\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7497", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7497/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7497/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7497/events", "html_url": "https://github.com/docker/compose/issues/7497", "id": 629599732, "node_id": "MDU6SXNzdWU2Mjk1OTk3MzI=", "number": 7497, "title": "compose file dns field not working", "user": {"login": "hacker-h", "id": 27709289, "node_id": "MDQ6VXNlcjI3NzA5Mjg5", "avatar_url": "https://avatars3.githubusercontent.com/u/27709289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hacker-h", "html_url": "https://github.com/hacker-h", "followers_url": "https://api.github.com/users/hacker-h/followers", "following_url": "https://api.github.com/users/hacker-h/following{/other_user}", "gists_url": "https://api.github.com/users/hacker-h/gists{/gist_id}", "starred_url": "https://api.github.com/users/hacker-h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hacker-h/subscriptions", "organizations_url": "https://api.github.com/users/hacker-h/orgs", "repos_url": "https://api.github.com/users/hacker-h/repos", "events_url": "https://api.github.com/users/hacker-h/events{/privacy}", "received_events_url": "https://api.github.com/users/hacker-h/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-03T00:20:17Z", "updated_at": "2020-06-03T23:33:59Z", "closed_at": "2020-06-03T23:31:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Description of the issue\r\nThe dns field does not work\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.25.5, build 8a1c60f6\r\ndocker-py version: 4.1.0\r\nCPython version: 3.7.5\r\nOpenSSL version: OpenSSL 1.1.0l  10 Sep 2019\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.11\r\n API version:       1.40\r\n Go version:        go1.13.10\r\n Git commit:        42e35e61f3\r\n Built:             Mon Jun  1 09:12:23 2020\r\n OS/Arch:           linux/amd64\r\n Experimental:      true\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.11\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.13.10\r\n  Git commit:       42e35e61f3\r\n  Built:            Mon Jun  1 09:10:55 2020\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.2.13\r\n  GitCommit:        7ad184331fa3e55e52b890ea95e65ba581ae3429\r\n runc:\r\n  Version:          1.0.0-rc10\r\n  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n```\r\nservices:\r\n  alpine:\r\n    command: cat /etc/resolv.conf\r\n    container_name: alpine\r\n    dns:\r\n    - 1.2.3.4\r\n    image: alpine\r\nversion: '3.7'\r\n```\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. use this minimal docker-compose file:\r\n```\r\nversion: '3.7'\r\nservices:\r\n    alpine:\r\n        container_name: alpine\r\n        image: alpine\r\n        dns: 1.2.3.4\r\n        command: cat /etc/resolv.conf\r\n```\r\n2. docker-compose up\r\n\r\n### Observed result\r\n```\r\nStarting alpine ... done\r\nAttaching to alpine\r\nalpine    | nameserver 127.0.0.11\r\nalpine    | options ndots:0\r\nalpine exited with code 0\r\n```\r\n\r\n### Expected result\r\n\r\nIt should be analogue to the respective `docker run` command:\r\n```\r\ndocker run --name alpine --dns 1.2.3.4 alpine cat /etc/resolv.conf\r\nnameserver 1.2.3.4\r\n```\r\n\r\nwhich would result in the following `docker-compose up` output:\r\n```\r\nStarting alpine ... done\r\nAttaching to alpine\r\nalpine    | nameserver 1.2.3.4\r\nalpine exited with code 0\r\n```\r\n\r\n### Stacktrace / full error message\r\nthere is no error\r\n\r\n## Additional information\r\n\r\nUbuntu 19.10\r\nDocker-Compose installed with binaries:\r\n`https://github.com/docker/compose/releases/download/1.25.5/docker-compose-Linux-x86_64`\r\nDocker installed with apt:\r\n`apt install docker-ce`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7466", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7466/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7466/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7466/events", "html_url": "https://github.com/docker/compose/issues/7466", "id": 620432621, "node_id": "MDU6SXNzdWU2MjA0MzI2MjE=", "number": 7466, "title": "ENOSYS: function not implemented, scandir  NTFS", "user": {"login": "piotr-sikora-v", "id": 1295000, "node_id": "MDQ6VXNlcjEyOTUwMDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1295000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/piotr-sikora-v", "html_url": "https://github.com/piotr-sikora-v", "followers_url": "https://api.github.com/users/piotr-sikora-v/followers", "following_url": "https://api.github.com/users/piotr-sikora-v/following{/other_user}", "gists_url": "https://api.github.com/users/piotr-sikora-v/gists{/gist_id}", "starred_url": "https://api.github.com/users/piotr-sikora-v/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/piotr-sikora-v/subscriptions", "organizations_url": "https://api.github.com/users/piotr-sikora-v/orgs", "repos_url": "https://api.github.com/users/piotr-sikora-v/repos", "events_url": "https://api.github.com/users/piotr-sikora-v/events{/privacy}", "received_events_url": "https://api.github.com/users/piotr-sikora-v/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-18T18:55:39Z", "updated_at": "2020-05-18T20:36:55Z", "closed_at": "2020-05-18T20:36:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "##  Description of the issue\r\nWhen we use gulp task-name on windows 10 and NTFS filesystem we have error:\r\n```\r\nwww_1         | [17:55:06] Error: ENOSYS: function not implemented, scandir '/var/www/html/vendor/xxxxxx/modules'\r\n```\r\nThis happen only with bind mount via volume.\r\nOn others systems, or without bind-mounts we don't have this problem\r\nIs something wrong with NTFS and bind-mount ?\r\n\r\nDocker image is alpine:3.11 with gulp, nodejs\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.25.5, build 8a1c60f6\r\ndocker-py version: 4.1.0\r\nCPython version: 3.7.4\r\nOpenSSL version: OpenSSL 1.1.1c  28 May 2019\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nDocker version 19.03.8, build afacb8b\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\n(paste here)\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\n1.\r\n2.\r\n3.\r\n\r\n### Observed result\r\nENOSYS: function not implemented, scandir \r\n### Expected result\r\nWithout error\r\n\r\n## Additional information\r\n\r\nOS version / distribution, `docker-compose` install method, etc.\r\nWindows 10 Pro Version 10.0.18363 Compilation 18363", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7464", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7464/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7464/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7464/events", "html_url": "https://github.com/docker/compose/issues/7464", "id": 619659732, "node_id": "MDU6SXNzdWU2MTk2NTk3MzI=", "number": 7464, "title": "docker-compose up service1, service2", "user": {"login": "sonirico", "id": 9306588, "node_id": "MDQ6VXNlcjkzMDY1ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/9306588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sonirico", "html_url": "https://github.com/sonirico", "followers_url": "https://api.github.com/users/sonirico/followers", "following_url": "https://api.github.com/users/sonirico/following{/other_user}", "gists_url": "https://api.github.com/users/sonirico/gists{/gist_id}", "starred_url": "https://api.github.com/users/sonirico/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sonirico/subscriptions", "organizations_url": "https://api.github.com/users/sonirico/orgs", "repos_url": "https://api.github.com/users/sonirico/repos", "events_url": "https://api.github.com/users/sonirico/events{/privacy}", "received_events_url": "https://api.github.com/users/sonirico/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 153640415, "node_id": "MDU6TGFiZWwxNTM2NDA0MTU=", "url": "https://api.github.com/repos/docker/compose/labels/kind/feature", "name": "kind/feature", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-17T09:57:51Z", "updated_at": "2020-05-17T16:00:16Z", "closed_at": "2020-05-17T16:00:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n-->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nI'm always frustrated when I need to handle a subset of services declared in a compose file. For instance, if I wanted to start all my database services but not the web servers, because its easier to manage and debug them in a local process of the host machine. However, databases are still useful being within containers.\r\n\r\n**Describe the solution you'd like**\r\nBeing able to handle services like\r\n```\r\ndocker-compose up db,broker\r\ndocker-compose down db,broker\r\n```\r\n\r\n**Describe alternatives you've considered**\r\n```\r\ndocker-compose up db broker # Separated by space\r\ndocker-compose down db broker # Separated by space\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7456", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7456/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7456/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7456/events", "html_url": "https://github.com/docker/compose/issues/7456", "id": 618883501, "node_id": "MDU6SXNzdWU2MTg4ODM1MDE=", "number": 7456, "title": "Unable to set tmpfs mount in a container using stack yaml", "user": {"login": "hasanasim", "id": 24369889, "node_id": "MDQ6VXNlcjI0MzY5ODg5", "avatar_url": "https://avatars0.githubusercontent.com/u/24369889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hasanasim", "html_url": "https://github.com/hasanasim", "followers_url": "https://api.github.com/users/hasanasim/followers", "following_url": "https://api.github.com/users/hasanasim/following{/other_user}", "gists_url": "https://api.github.com/users/hasanasim/gists{/gist_id}", "starred_url": "https://api.github.com/users/hasanasim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hasanasim/subscriptions", "organizations_url": "https://api.github.com/users/hasanasim/orgs", "repos_url": "https://api.github.com/users/hasanasim/repos", "events_url": "https://api.github.com/users/hasanasim/events{/privacy}", "received_events_url": "https://api.github.com/users/hasanasim/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-15T11:00:06Z", "updated_at": "2020-06-02T08:57:16Z", "closed_at": "2020-06-02T08:57:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\n\r\nI am trying to replicate the docker run command\r\n `docker run -d -it --name test --mount type=tmpfs,destination=/dev/shm,tmpfs-size=2048000000 gcr.io/pm-scraping-staging/scrapyd:test-crawlera-cert-2 bash -c 'scrapyd --pidfile=/tmp/scrapyd.pid'`\r\n using a stack.yml file.\r\nI used the example docker run with `--mount` in the docs [here](https://docs.docker.com/storage/tmpfs/#use-a-tmpfs-mount-in-a-container) to form my command.\r\nI tried to use the examples [here](https://docs.docker.com/compose/compose-file/#volumes-for-services-swarms-and-stack-files) for my stack.yml. However the docs don't contain an example for how tmpfs should look within a docker compose file.\r\n\r\nI'm targeting the same VM instance with both, the container spins up as expected however when running `docker exec test df -h /dev/shm` I can only get my desired output using the `docker run` command.\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.24.1, build 4667896b\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nDocker version 19.03.2, build 6a30dfc\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n\r\nI have only included the relevant service below.\r\n```\r\nscrapyd:\r\n    command: bash -c 'scrapyd --pidfile=/tmp/scrapyd.pid'\r\n    depends_on:\r\n    - crawlera-headless-proxy\r\n    deploy:\r\n      mode: global\r\n      placement:\r\n        constraints:\r\n        - node.labels.ffrole == scraping-worker\r\n      restart_policy:\r\n        condition: on-failure\r\n        delay: 5s\r\n        max_attempts: 10\r\n        window: 10s\r\n      update_config:\r\n        parallelism: 5\r\n    environment:\r\n      FFSC_CRAWLERA_HEADLESS_PORT: 3128\r\n      FFSC_CRAWLERA_HEADLESS_PROXY: crawlera-headless-proxy\r\n      FFSC_GC_PROJECT: ''\r\n    healthcheck:\r\n      interval: 30s\r\n      retries: 5\r\n      start_period: 20s\r\n      test: bash -c '</dev/tcp/0.0.0.0/6800'\r\n      timeout: 10s\r\n    image: 'gcr.io//scrapyd:'\r\n    logging:\r\n      driver: gcplogs\r\n    ports:\r\n    - mode: host\r\n      published: 6800\r\n      target: 6800\r\n    volumes:\r\n    - target: /dev/shm\r\n      tmpfs:\r\n        size: 2048000000\r\n      type: tmpfs\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. (from docs) run `docker run -d -it --name tmptest --mount type=tmpfs,destination=/dev/shm,tmpfs-size=2048000000 nginx:latest`\r\n2. run `docker exec tmptest df -h /dev/shm` to show correct size for tmpfs.\r\n3. Set tmpfs in a stack.yml file, deploy and then run `docker exec tmptest df -h /dev/shm` to show the incorrect tmpfs size. \r\n\r\n### Observed result\r\n\r\n `docker run -d -it --name test --mount type=tmpfs,destination=/dev/shm,tmpfs-size=2048000000 gcr.io/pm-scraping-staging/scrapyd:test-crawlera-cert-2 bash -c 'scrapyd --pidfile=/tmp/scrapyd.pid'` and then `docker exec test df -h /dev/shm` returns \r\n\r\n``Filesystem      Size  Used Avail Use% Mounted on``\r\n``tmpfs           2.0G     0  2.0G   0% /dev/shm``\r\n\r\nwhereas using a yml file with the service above and then `docker exec 9b81f7559532 df -h /dev/shm` returns \r\n\r\n``Filesystem      Size  Used Avail Use% Mounted on``\r\n``shm              64M     0   64M   0% /dev/shm``\r\n\r\n### Expected result\r\nI would expect the container spun up using stack.yml to return the same for `df -h /dev/shm` as the docker run command.\r\n``Filesystem      Size  Used Avail Use% Mounted on``\r\n``tmpfs           2.0G     0  2.0G   0% /dev/shm``\r\n\r\n## Additional information\r\n\r\nThe services are deployed using `docker stack deploy --prune --with-registry-auth -c stack.yml stack_name`.\r\nVM running Ubuntu 18.04.1 LTS.\r\n\r\n`docker inspect -f '{{ .Mounts }}' tmptest` returns `[{tmpfs   /dev/shm   true }]` for containers spun up using `docker run` and `[]` for containers spun up using stack.yml.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7453", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7453/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7453/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7453/events", "html_url": "https://github.com/docker/compose/issues/7453", "id": 618405048, "node_id": "MDU6SXNzdWU2MTg0MDUwNDg=", "number": 7453, "title": "Respect service_healthy in docker-compose run", "user": {"login": "EricHripko", "id": 707679, "node_id": "MDQ6VXNlcjcwNzY3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/707679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EricHripko", "html_url": "https://github.com/EricHripko", "followers_url": "https://api.github.com/users/EricHripko/followers", "following_url": "https://api.github.com/users/EricHripko/following{/other_user}", "gists_url": "https://api.github.com/users/EricHripko/gists{/gist_id}", "starred_url": "https://api.github.com/users/EricHripko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EricHripko/subscriptions", "organizations_url": "https://api.github.com/users/EricHripko/orgs", "repos_url": "https://api.github.com/users/EricHripko/repos", "events_url": "https://api.github.com/users/EricHripko/events{/privacy}", "received_events_url": "https://api.github.com/users/EricHripko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-14T17:17:49Z", "updated_at": "2020-08-07T08:31:23Z", "closed_at": "2020-08-07T08:31:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n-->\r\n\r\n## Description of the issue\r\n`docker-compose run` and `docker-compose up` demonstrate different behaviour when it comes to `condition: service_healthy`. `up` correctly waits for all the dependencies to be healthy while `run` only creates dependencies without waiting for them to be healthy (effectively disregarding the `condition`). Personally, I would consider this a bug since this is a rather unexpected inconsistent behaviour.\r\n\r\n## Context information (for bug reports)\r\nRelevant issues with examples of this:\r\n- [docker-compose run: healthcheck not detecting if one of the services failed to start](https://github.com/docker/compose/issues/4420)\r\n- [run dont do condition: service_healthy](https://github.com/docker/compose/issues/4952)\r\n- [Healthcheck dependency not respected during one-off command (run)](https://github.com/docker/compose/issues/4369)\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. `docker-compose run` a service that declares a `condition: service_healthy` dependency\r\n\r\n### Observed result\r\n`docker-compose` only creates a container for the dependency and doesn't wait for the health-check to pass.\r\n\r\n### Expected result\r\n`docker-compose` creates a container for the dependency and waits for the health-check to pass - demonstrating the same behaviour as `docker-compose up`.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7438", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7438/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7438/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7438/events", "html_url": "https://github.com/docker/compose/issues/7438", "id": 615365793, "node_id": "MDU6SXNzdWU2MTUzNjU3OTM=", "number": 7438, "title": "docker-compose does not respect docker context", "user": {"login": "hholst80", "id": 6200749, "node_id": "MDQ6VXNlcjYyMDA3NDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6200749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hholst80", "html_url": "https://github.com/hholst80", "followers_url": "https://api.github.com/users/hholst80/followers", "following_url": "https://api.github.com/users/hholst80/following{/other_user}", "gists_url": "https://api.github.com/users/hholst80/gists{/gist_id}", "starred_url": "https://api.github.com/users/hholst80/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hholst80/subscriptions", "organizations_url": "https://api.github.com/users/hholst80/orgs", "repos_url": "https://api.github.com/users/hholst80/repos", "events_url": "https://api.github.com/users/hholst80/events{/privacy}", "received_events_url": "https://api.github.com/users/hholst80/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-10T10:53:40Z", "updated_at": "2020-05-10T21:25:04Z", "closed_at": "2020-05-10T21:25:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\ndocker-compose version 1.25.5, build 8a1c60f6\r\ndocker-py version: 4.1.0\r\nCPython version: 3.7.5\r\nOpenSSL version: OpenSSL 1.1.0l  10 Sep 2019\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/6200749/81497182-2aa2ad80-92bd-11ea-9550-4cfcd955ee27.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7433", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7433/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7433/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7433/events", "html_url": "https://github.com/docker/compose/issues/7433", "id": 614379224, "node_id": "MDU6SXNzdWU2MTQzNzkyMjQ=", "number": 7433, "title": "Download Releases broken", "user": {"login": "jenswachtel", "id": 9703013, "node_id": "MDQ6VXNlcjk3MDMwMTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/9703013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jenswachtel", "html_url": "https://github.com/jenswachtel", "followers_url": "https://api.github.com/users/jenswachtel/followers", "following_url": "https://api.github.com/users/jenswachtel/following{/other_user}", "gists_url": "https://api.github.com/users/jenswachtel/gists{/gist_id}", "starred_url": "https://api.github.com/users/jenswachtel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jenswachtel/subscriptions", "organizations_url": "https://api.github.com/users/jenswachtel/orgs", "repos_url": "https://api.github.com/users/jenswachtel/repos", "events_url": "https://api.github.com/users/jenswachtel/events{/privacy}", "received_events_url": "https://api.github.com/users/jenswachtel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-07T22:17:32Z", "updated_at": "2020-05-07T22:48:48Z", "closed_at": "2020-05-07T22:48:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to download e.g.\r\nhttps://github.com/docker/compose/releases/download/1.25.5/docker-compose-Linux-x86_64\r\nhttps://github.com/docker/compose/releases/download/1.25.4/docker-compose-Linux-x86_64\r\nresults in \r\n```\r\n<Error>\r\n<Code>SignatureDoesNotMatch</Code>\r\n<Message>\r\nThe request signature we calculated does not match the signature you provided. Check your key and signing method.\r\n</Message>\r\n```\r\n\r\nTools like ansible galaxy `geerlingguy.docker` seem to be broken because of it. I am unfortunately not able to use it either.\r\n\r\ne.g. https://github.com/docker/compose/releases/tag/1.25.5 Also not possible to download anyting\r\n\r\nThanks,\r\nJens\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7426", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7426/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7426/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7426/events", "html_url": "https://github.com/docker/compose/issues/7426", "id": 612101389, "node_id": "MDU6SXNzdWU2MTIxMDEzODk=", "number": 7426, "title": "docker-compose ignores one (?)  entry under labels:", "user": {"login": "hansij66", "id": 21691535, "node_id": "MDQ6VXNlcjIxNjkxNTM1", "avatar_url": "https://avatars0.githubusercontent.com/u/21691535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hansij66", "html_url": "https://github.com/hansij66", "followers_url": "https://api.github.com/users/hansij66/followers", "following_url": "https://api.github.com/users/hansij66/following{/other_user}", "gists_url": "https://api.github.com/users/hansij66/gists{/gist_id}", "starred_url": "https://api.github.com/users/hansij66/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hansij66/subscriptions", "organizations_url": "https://api.github.com/users/hansij66/orgs", "repos_url": "https://api.github.com/users/hansij66/repos", "events_url": "https://api.github.com/users/hansij66/events{/privacy}", "received_events_url": "https://api.github.com/users/hansij66/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-04T19:08:37Z", "updated_at": "2020-05-04T21:02:32Z", "closed_at": "2020-05-04T19:31:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\nI have following (minimal, stripped to demo issue) docker-compose.yml file\r\n```\r\nversion: '3.7'\r\nservices:\r\n  grafana:\r\n    image: grafana/grafana:latest\r\n    container_name: grafana\r\n\r\n    labels:\r\n     - \"traefik.http.routers.grafana.middlewares=grafana-stripprefix\"\r\n     - \"traefik.http.routers.grafana.middlewares=authelia@docker\"\r\n```\r\nOutput of docker-compose config\r\n```\r\nservices:\r\n  grafana:\r\n    container_name: grafana\r\n    image: grafana/grafana:latest\r\n    labels:\r\n      traefik.httpp.routers.grafana.middlewares: authelia@docker\r\nversion: '3.7'\r\n```\r\n--> one of the entries under labels: is missing\r\n\r\nI can fix this by \"playing\" with the entries. E.g. change in one of the entries routers --> router (remove s) and it works....but routers is a traefik keyword...\r\n\r\nIssue hit me hard, difficult to find, and I ended up exposing a few docker services to the internet because authentication label disappeared....\r\n\r\nI could not find any limitations on labels: usage in the dc documentation.\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.25.5, build 8a1c60f6\r\ndocker-py version: 4.1.0\r\nCPython version: 3.7.5\r\nOpenSSL version: OpenSSL 1.1.0l  10 Sep 2019\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.8\r\n API version:       1.40\r\n Go version:        go1.12.17\r\n Git commit:        afacb8b7f0\r\n Built:             Wed Mar 11 01:25:56 2020\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.8\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.17\r\n  Git commit:       afacb8b7f0\r\n  Built:            Wed Mar 11 01:24:28 2020\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.2.13\r\n  GitCommit:        7ad184331fa3e55e52b890ea95e65ba581ae3429\r\n runc:\r\n  Version:          1.0.0-rc10\r\n  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n\r\n```\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. See docker-compose.yml above\r\n2. docker-compose config\r\n3.\r\n\r\n### Observed result\r\n\r\nOne of the entries under labels: is missing\r\n\r\n### Expected result\r\nBoth entries under labels are present\r\n### Stacktrace / full error message\r\n\r\n```\r\n(paste here)\r\n```\r\n\r\n## Additional information\r\n\r\nOS version / distribution, `docker-compose` install method, etc.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7421", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7421/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7421/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7421/events", "html_url": "https://github.com/docker/compose/issues/7421", "id": 611457713, "node_id": "MDU6SXNzdWU2MTE0NTc3MTM=", "number": 7421, "title": "ERROR: The Compose file './docker-compose.yml' is invalid because: services.web.volumes contains an invalid type, it should be a string", "user": {"login": "vishnutm", "id": 30982642, "node_id": "MDQ6VXNlcjMwOTgyNjQy", "avatar_url": "https://avatars3.githubusercontent.com/u/30982642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vishnutm", "html_url": "https://github.com/vishnutm", "followers_url": "https://api.github.com/users/vishnutm/followers", "following_url": "https://api.github.com/users/vishnutm/following{/other_user}", "gists_url": "https://api.github.com/users/vishnutm/gists{/gist_id}", "starred_url": "https://api.github.com/users/vishnutm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vishnutm/subscriptions", "organizations_url": "https://api.github.com/users/vishnutm/orgs", "repos_url": "https://api.github.com/users/vishnutm/repos", "events_url": "https://api.github.com/users/vishnutm/events{/privacy}", "received_events_url": "https://api.github.com/users/vishnutm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-03T16:57:09Z", "updated_at": "2020-05-03T19:38:26Z", "closed_at": "2020-05-03T19:38:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to setup docker-compose file and it doesn't work \r\n\r\nFollowed code for docker-compose file\r\n\r\n![Screenshot from 2020-05-03 22-31-31](https://user-images.githubusercontent.com/30982642/80920512-f8a9bc80-8d8d-11ea-88ec-9482b7ac1fc0.png)\r\n\r\n\r\nDocker  Version:           19.03.8\r\ndocker-compose version 1.24.0, build 0aa59064\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7420", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7420/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7420/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7420/events", "html_url": "https://github.com/docker/compose/issues/7420", "id": 611422262, "node_id": "MDU6SXNzdWU2MTE0MjIyNjI=", "number": 7420, "title": "`docker-compose logs` doesn't work for local log driver", "user": {"login": "svarogg", "id": 2129610, "node_id": "MDQ6VXNlcjIxMjk2MTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2129610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svarogg", "html_url": "https://github.com/svarogg", "followers_url": "https://api.github.com/users/svarogg/followers", "following_url": "https://api.github.com/users/svarogg/following{/other_user}", "gists_url": "https://api.github.com/users/svarogg/gists{/gist_id}", "starred_url": "https://api.github.com/users/svarogg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svarogg/subscriptions", "organizations_url": "https://api.github.com/users/svarogg/orgs", "repos_url": "https://api.github.com/users/svarogg/repos", "events_url": "https://api.github.com/users/svarogg/events{/privacy}", "received_events_url": "https://api.github.com/users/svarogg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-03T14:09:01Z", "updated_at": "2020-08-03T13:30:17Z", "closed_at": "2020-08-03T13:30:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.25.5, build 8a1c60f6\r\ndocker-py version: 4.1.0\r\nCPython version: 3.7.5\r\nOpenSSL version: OpenSSL 1.1.0l  10 Sep 2019\r\n\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient:\r\n Version:           18.09.9-ce\r\n API version:       1.39\r\n Go version:        go1.10.3\r\n Git commit:        039a7df\r\n Built:             Fri Nov  1 19:26:49 2019\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer:\r\n Engine:\r\n  Version:          18.09.9-ce\r\n  API version:      1.39 (minimum version 1.12)\r\n  Go version:       go1.10.3\r\n  Git commit:       039a7df\r\n  Built:            Fri Nov  1 19:28:24 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\nservices:\r\n  rabbit:\r\n    image: rabbitmq\r\n    logging:\r\n      driver: local\r\nversion: '3.0'\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. Create the above docker-compose.yaml file\r\n2. Call `docker-compose up -d`\r\n3. Call `docker-compose logs`\r\n\r\n### Observed result\r\n$ docker-compose logs \r\nAttaching to mike_rabbit_1\r\nrabbit_1  | WARNING: no logs are available with the 'local' log driver\r\n\r\n### Expected result\r\nGet logs from rabbitmq\r\n\r\n### Stacktrace / full error message\r\n\r\n```\r\nN/A\r\n```\r\n\r\n## Additional information\r\nIf I do `docker logs <container-id>` this works.\r\n\r\nThis seems like it comes from `compose/container.py`:\r\n```\r\n    @property\r\n    def has_api_logs(self):\r\n        log_type = self.log_driver\r\n        return not log_type or log_type in ('json-file', 'journald')\r\n```\r\nThat doesn't include 'local'.\r\n\r\nI'll try to fix it and if it's as easy as adding 'local' to the list - will send a PR tomorrow.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7415", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7415/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7415/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7415/events", "html_url": "https://github.com/docker/compose/issues/7415", "id": 609660124, "node_id": "MDU6SXNzdWU2MDk2NjAxMjQ=", "number": 7415, "title": "multiple files: see final ", "user": {"login": "millerf", "id": 790558, "node_id": "MDQ6VXNlcjc5MDU1OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/790558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/millerf", "html_url": "https://github.com/millerf", "followers_url": "https://api.github.com/users/millerf/followers", "following_url": "https://api.github.com/users/millerf/following{/other_user}", "gists_url": "https://api.github.com/users/millerf/gists{/gist_id}", "starred_url": "https://api.github.com/users/millerf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/millerf/subscriptions", "organizations_url": "https://api.github.com/users/millerf/orgs", "repos_url": "https://api.github.com/users/millerf/repos", "events_url": "https://api.github.com/users/millerf/events{/privacy}", "received_events_url": "https://api.github.com/users/millerf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 153640415, "node_id": "MDU6TGFiZWwxNTM2NDA0MTU=", "url": "https://api.github.com/repos/docker/compose/labels/kind/feature", "name": "kind/feature", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-30T07:20:32Z", "updated_at": "2020-04-30T10:00:19Z", "closed_at": "2020-04-30T09:34:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\nI have been using docker-compose for complex projects that need 4 or 5 docker-compose files to work in different environments, and I am missing a feature: I would like to see the final configuration when using multiple files.\r\n\r\nLet me give you an example:\r\n\r\nI have `docker-compose.yml` with:\r\n```\r\nversion: '3.3'\r\n\r\nservices:\r\n  db:\r\n    image: somedb:latest\r\n    volumes:\r\n      - data:/path-to-data\r\n\r\n  web:\r\n    image: someweb:latest\r\n    volumes:\r\n      - data:/path-to-data\r\n```\r\n\r\nAnd `docker-compose-test.yml`\r\n\r\n```\r\nversion: '3.3'\r\n\r\nservices:\r\n  db:\r\n    environment: \r\n       - SOME_VAR: test\r\n\r\n  web:\r\n    environment: \r\n       - SOME_VAR: test\r\n```\r\n\r\n\r\nI would like to have a way to do :\r\n\r\n`$> docker-compose -f docker-compose.yml -f docker-compose-test.yml view`\r\n\r\nAnd get:\r\n\r\n```\r\n\r\nversion: '3.3'\r\n\r\nservices:\r\n  db:\r\n    image: somedb:latest\r\n    volumes:\r\n      - data:/path-to-data\r\n    environment: \r\n       - SOME_VAR: test\r\n  web:\r\n    image: someweb:latest\r\n    volumes:\r\n      - data:/path-to-data\r\n     environment: \r\n       - SOME_VAR: test\r\n```\r\n\r\nIs there something like this already existing? I cannot seem to find anything close to that... ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7414", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7414/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7414/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7414/events", "html_url": "https://github.com/docker/compose/issues/7414", "id": 609632266, "node_id": "MDU6SXNzdWU2MDk2MzIyNjY=", "number": 7414, "title": "compose v1.25.4 on Mac (Docker Desktop) not recognizing version: \"3.8\"", "user": {"login": "paulvancoller", "id": 52648234, "node_id": "MDQ6VXNlcjUyNjQ4MjM0", "avatar_url": "https://avatars0.githubusercontent.com/u/52648234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulvancoller", "html_url": "https://github.com/paulvancoller", "followers_url": "https://api.github.com/users/paulvancoller/followers", "following_url": "https://api.github.com/users/paulvancoller/following{/other_user}", "gists_url": "https://api.github.com/users/paulvancoller/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulvancoller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulvancoller/subscriptions", "organizations_url": "https://api.github.com/users/paulvancoller/orgs", "repos_url": "https://api.github.com/users/paulvancoller/repos", "events_url": "https://api.github.com/users/paulvancoller/events{/privacy}", "received_events_url": "https://api.github.com/users/paulvancoller/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-30T06:35:22Z", "updated_at": "2020-04-30T07:06:11Z", "closed_at": "2020-04-30T07:06:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description of the issue\r\nThe docker-compose v1.25.4 on Mac (Docker Desktop) is not recognizing version: \"3.8\" in the docker-compose.yml file.\r\n\r\n## Context information (for bug reports)\r\nIf you create a docker-compose.yml file with the version property set to 3.8, the following error is returned when you execute `docker-compose up`:\r\n\r\n```\r\nVersion in \"./docker-compose.yaml\" is unsupported. You might be seeing this error because you're using the wrong Compose file version. Either specify a supported version (e.g \"2.2\" or \"3.3\") and place your service definitions under the `services` key, or omit the `version` key and place your service definitions at the root of the file to use version 1.\r\nFor more on the Compose file format versions, see https://docs.docker.com/compose/compose-file/\r\n```\r\n\r\nNotes:\r\n- If you change the version to 3.3, it up's fine.\r\n- Completely uninstalling and re-installing the latest Docker-Desktop on Mac does not fix the issue.\r\n- The same docker-compose.yml file works fine on Linux.\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.25.4, build 8d51620a\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nDocker version 19.03.8, build afacb8b\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\nERROR: Version in \"./docker-compose.yaml\" is unsupported. You might be seeing this error because you're using the wrong Compose file version. Either specify a supported version (e.g \"2.2\" or \"3.3\") and place your service definitions under the `services` key, or omit the `version` key and place your service definitions at the root of the file to use version 1.\r\nFor more on the Compose file format versions, see https://docs.docker.com/compose/compose-file/\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. On Mac, create a docker-compose file with `version` set to `\"3.8\"' .\r\n2. Run `docker-compose up`.\r\n\r\n### Observed result\r\n\r\nThe following error is returned:\r\n\r\n```\r\nERROR: Version in \"./docker-compose.yaml\" is unsupported. You might be seeing this error because you're using the wrong Compose file version. Either specify a supported version (e.g \"2.2\" or \"3.3\") and place your service definitions under the `services` key, or omit the `version` key and place your service definitions at the root of the file to use version 1.\r\nFor more on the Compose file format versions, see https://docs.docker.com/compose/compose-file/\r\n```\r\n\r\n### Expected result\r\n\r\nExpecting docker-compose to consume the config and execute, since we are on the correct docker-compose and docker versions for 3.8.\r\n\r\n### Stacktrace / full error message\r\n\r\n```\r\nERROR: Version in \"./docker-compose.yaml\" is unsupported. You might be seeing this error because you're using the wrong Compose file version. Either specify a supported version (e.g \"2.2\" or \"3.3\") and place your service definitions under the `services` key, or omit the `version` key and place your service definitions at the root of the file to use version 1.\r\nFor more on the Compose file format versions, see https://docs.docker.com/compose/compose-file/\r\n```\r\n\r\n## Additional information\r\n\r\nOS Version: Mac Catalina (10.15.4).\r\nDocker install method: Docker.dmg file download from Docker website.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7409", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7409/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7409/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7409/events", "html_url": "https://github.com/docker/compose/issues/7409", "id": 609143268, "node_id": "MDU6SXNzdWU2MDkxNDMyNjg=", "number": 7409, "title": "docker-compose --help issue", "user": {"login": "lcsdtw", "id": 64416184, "node_id": "MDQ6VXNlcjY0NDE2MTg0", "avatar_url": "https://avatars1.githubusercontent.com/u/64416184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcsdtw", "html_url": "https://github.com/lcsdtw", "followers_url": "https://api.github.com/users/lcsdtw/followers", "following_url": "https://api.github.com/users/lcsdtw/following{/other_user}", "gists_url": "https://api.github.com/users/lcsdtw/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcsdtw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcsdtw/subscriptions", "organizations_url": "https://api.github.com/users/lcsdtw/orgs", "repos_url": "https://api.github.com/users/lcsdtw/repos", "events_url": "https://api.github.com/users/lcsdtw/events{/privacy}", "received_events_url": "https://api.github.com/users/lcsdtw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-29T15:20:55Z", "updated_at": "2020-04-29T15:23:59Z", "closed_at": "2020-04-29T15:23:59Z", "author_association": "NONE", "active_lock_reason": null, "body": ":warning: I'm just creating this Issue to reference this at PR\r\n\r\n## Description of the issue\r\nOne could think just using `docker-compose down` already remove volumes, given it is listed like the other options at --help.\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.25.4, build 8d51620a\r\ndocker-py version: 4.1.0\r\nCPython version: 3.7.5\r\nOpenSSL version: OpenSSL 1.1.1d  10 Sep 2019\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.8\r\n API version:       1.40\r\n Go version:        go1.12.17\r\n Git commit:        afacb8b\r\n Built:             Wed Mar 11 01:21:11 2020\r\n OS/Arch:           darwin/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.8\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.17\r\n  Git commit:       afacb8b\r\n  Built:            Wed Mar 11 01:29:16 2020\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          v1.2.13\r\n  GitCommit:        7ad184331fa3e55e52b890ea95e65ba581ae3429\r\n runc:\r\n  Version:          1.0.0-rc10\r\n  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\nThere is no default config\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. Run `docker-compose --help`\r\n2. See `down` description \r\n3. Run `docker-compose down --help`\r\n4. See `-v` description\r\n5. Try to use `down` with and without `-v`\r\n\r\n### Observed result\r\nActually only passing -v you will remove volumes\r\n\r\n### Expected result\r\nThe main documentation to say it explicitly", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7406", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7406/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7406/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7406/events", "html_url": "https://github.com/docker/compose/issues/7406", "id": 608351340, "node_id": "MDU6SXNzdWU2MDgzNTEzNDA=", "number": 7406, "title": "NEVER HAD THIS ISSUE: \"image for service has been removed\"; \"pull access denied\" ", "user": {"login": "danielmaartens", "id": 49619761, "node_id": "MDQ6VXNlcjQ5NjE5NzYx", "avatar_url": "https://avatars2.githubusercontent.com/u/49619761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielmaartens", "html_url": "https://github.com/danielmaartens", "followers_url": "https://api.github.com/users/danielmaartens/followers", "following_url": "https://api.github.com/users/danielmaartens/following{/other_user}", "gists_url": "https://api.github.com/users/danielmaartens/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielmaartens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielmaartens/subscriptions", "organizations_url": "https://api.github.com/users/danielmaartens/orgs", "repos_url": "https://api.github.com/users/danielmaartens/repos", "events_url": "https://api.github.com/users/danielmaartens/events{/privacy}", "received_events_url": "https://api.github.com/users/danielmaartens/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-04-28T14:12:16Z", "updated_at": "2020-04-30T09:59:07Z", "closed_at": "2020-04-29T08:38:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "@shin- @aanand @bfirsh @mnowster \r\n\r\n# Description of the issue\r\nI have always been able to run the following commands with no issue. I did not need to log in to docker or anything, but now I keep on getting this error:\r\n<img width=\"1197\" alt=\"image\" src=\"https://user-images.githubusercontent.com/49619761/80494961-930d9880-8967-11ea-91b5-80e5d4b9e1e9.png\">\r\n\r\nThis worked a couple of months ago (which was the last time I had to run these commands for this specific project). I had to recently deploy this app again on a new digital ocean server and now I get the above error with all my dockerized applications.\r\n\r\nWhat exactly can cause this change in behaviour ?\r\n\r\n***Here are the commands and relevant files:***\r\n\r\n```\r\ndocker build -t ipic/site-new .\r\ndocker-compose up -d\r\n```\r\n\r\n***Relevant Files***\r\n\r\n`docker-compose.yml`\r\n```\r\nversion: \"3.0\"\r\n\r\nservices:\r\n  ipic-site:\r\n    container_name: ipic-site\r\n    image: ipic/site-new:latest\r\n    restart: always\r\n    env_file:\r\n      - ./.env\r\n    ports:\r\n      - 8080:8080\r\n      - 80:80\r\n```\r\n\r\n`Dockerfile`\r\n```\r\nFROM php:7-fpm-alpine\r\n\r\nRUN mkdir -p app\r\nWORKDIR /app\r\n\r\nRUN apk --update add wget \\\r\n  curl \\\r\n  git \\\r\n  grep \\\r\n  build-base \\\r\n  libmemcached-dev \\\r\n  libmcrypt-dev \\\r\n  libxml2-dev \\\r\n  imagemagick-dev \\\r\n  pcre-dev \\\r\n  libtool \\\r\n  make \\\r\n  autoconf \\\r\n  g++ \\\r\n  cyrus-sasl-dev \\\r\n  libgsasl-dev \\\r\n  supervisor \\\r\n  nodejs \\\r\n  npm \\\r\n  openssl \\\r\n  zip \\\r\n  unzip \\\r\n  git\r\n\r\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\r\nRUN echo \"Installing dependencies and setting up app... Get some coffee, this may take a while...\"\r\nRUN echo \"Installing PHP extensions...\"\r\nRUN docker-php-ext-install mbstring pdo pdo_mysql >/dev/null 2>&1\r\nRUN rm /var/cache/apk/*\r\n\r\nCOPY . /app\r\nCOPY .env /app/.env\r\n\r\nRUN composer install\r\nRUN npm install\r\n\r\nRUN npm run prod\r\n\r\nEXPOSE 80\r\nEXPOSE 8080\r\n\r\nCMD php artisan serve --host=0.0.0.0 --port=80\r\n```\r\n\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.24.1, build 4667896b\r\n\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.1\r\n API version:       1.40\r\n Go version:        go1.12.5\r\n Git commit:        74b1e89\r\n Built:             Thu Jul 25 21:18:17 2019\r\n OS/Arch:           darwin/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.1\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.5\r\n  Git commit:       74b1e89\r\n  Built:            Thu Jul 25 21:17:52 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          v1.2.6\r\n  GitCommit:        894b81a4b802e4eb2a91d1ce216b8817763c29fb\r\n runc:\r\n  Version:          1.0.0-rc8\r\n  GitCommit:        425e105d5a03fabd737a126ad93d62a9eeede87f\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\nservices:\r\n  ipic-site:\r\n    container_name: ipic-site\r\n    environment:\r\n      APP_DEBUG: \"true\"\r\n      APP_ENV: prod\r\n      APP_KEY: ''\r\n      APP_NAME: Ipic Site\r\n      APP_URL: http://ipicgroup.com\r\n      AWS_ACCESS_KEY_ID: ''\r\n      AWS_BUCKET: ''\r\n      AWS_DEFAULT_REGION: us-east-1\r\n      AWS_SECRET_ACCESS_KEY: ''\r\n      BROADCAST_DRIVER: log\r\n      CACHE_DRIVER: file\r\n      DB_CONNECTION: mysql\r\n      DB_DATABASE: ipicgr_db1\r\n      DB_HOST: sql2.jnb1.host-h.net\r\n      DB_PASSWORD: d5f7y19F\r\n      DB_USERNAME: ipicgr_1\r\n      LOG_CHANNEL: stack\r\n      MAIL_DRIVER: smtp\r\n      MAIL_ENCRYPTION: 'null'\r\n      MAIL_HOST: smtp.mailtrap.io\r\n      MAIL_PASSWORD: 'null'\r\n      MAIL_PORT: '2525'\r\n      MAIL_USERNAME: 'null'\r\n      MIX_PUSHER_APP_CLUSTER: '\"$${PUSHER_APP_CLUSTER}\"'\r\n      MIX_PUSHER_APP_KEY: '\"$${PUSHER_APP_KEY}\"'\r\n      PUSHER_APP_CLUSTER: mt1\r\n      PUSHER_APP_ID: ''\r\n      PUSHER_APP_KEY: ''\r\n      PUSHER_APP_SECRET: ''\r\n      QUEUE_CONNECTION: sync\r\n      REDIS_HOST: 127.0.0.1\r\n      REDIS_PASSWORD: 'null'\r\n      REDIS_PORT: '6379'\r\n      SESSION_DRIVER: file\r\n      SESSION_LIFETIME: '120'\r\n    image: ipic/site-new:latest\r\n    ports:\r\n    - 8080:8080/tcp\r\n    - 80:80/tcp\r\n    restart: always\r\nversion: '3.0'\r\n\r\n```\r\n\r\n## Steps to reproduce the issue\r\n1. run `git clone https://github.com/danielmaartens/ipic-site-laravel-vue`\r\n2. make a copy of `env.example` and save as `.env`\r\n2. Run `sh run.sh` in root directory.\r\n\r\n### Observed result\r\n<img width=\"1241\" alt=\"image\" src=\"https://user-images.githubusercontent.com/49619761/80495609-6efe8700-8968-11ea-9740-88139c5925b3.png\">\r\n\r\n### Expected result\r\n```\r\nSuccessfully built <image id>\r\nSuccessfully tagged ipic/site-new:latest\r\nSending build context to Docker daemon  <size>\r\n```\r\n\r\nShould not try to pull latest or have to log in. Should just successfully tag the built image as :latest and run the container.\r\n\r\n## Additional information\r\n\r\nOS: MacOS Mojave 10.14.5\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7403", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7403/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7403/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7403/events", "html_url": "https://github.com/docker/compose/issues/7403", "id": 607819446, "node_id": "MDU6SXNzdWU2MDc4MTk0NDY=", "number": 7403, "title": "If you have multiple docker-compose.yml files in the same directory with the same service names in them, the file that runs second will recreate the first file's container.", "user": {"login": "jerrac", "id": 910764, "node_id": "MDQ6VXNlcjkxMDc2NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/910764?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jerrac", "html_url": "https://github.com/jerrac", "followers_url": "https://api.github.com/users/jerrac/followers", "following_url": "https://api.github.com/users/jerrac/following{/other_user}", "gists_url": "https://api.github.com/users/jerrac/gists{/gist_id}", "starred_url": "https://api.github.com/users/jerrac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jerrac/subscriptions", "organizations_url": "https://api.github.com/users/jerrac/orgs", "repos_url": "https://api.github.com/users/jerrac/repos", "events_url": "https://api.github.com/users/jerrac/events{/privacy}", "received_events_url": "https://api.github.com/users/jerrac/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-27T20:08:25Z", "updated_at": "2020-05-12T18:23:00Z", "closed_at": "2020-05-12T18:22:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\ndocker-compose recreates containers when it shouldn't. If you have multiple docker-compose.yml files in the same directory with the same service names in them, the file that runs second will recreate the first file's container.\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\n$ docker-compose --version        \r\ndocker-compose version 1.25.5, build unknown\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\n$ docker --version\r\nDocker version 19.03.8, build afacb8b7f0\r\n\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\n$ docker-compose -f test01.docker-compose.yml config\r\nservices:\r\n  httpd:\r\n    container_name: test01_httpd\r\n    image: httpd:latest\r\nversion: '2.0'\r\n\r\n$ docker-compose -f test02.docker-compose.yml config\r\nservices:\r\n  httpd:\r\n    container_name: test02_httpd\r\n    image: httpd:latest\r\nversion: '2.0'\r\n\r\n```\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. Run `docker-compose -f test01.docker-compose.yml up -d`\r\n2. Run `docker-compose -f test02.docker-compose.yml up -d`\r\n\r\n### Observed result\r\ndocker-compose recreates `test01.docker-compose.yml`'s service. \r\n\r\nOnly the second file's container is running.\r\n\r\n### Expected result\r\nTwo containers should be running. \r\n\r\n## Additional information\r\nI have no idea how much of an edge case this might be, I wasn't able to find anything in my searches when diagnosing the issue.\r\n\r\nSo I'll report this and let it be.\r\n\r\nWhen you use multiple docker-compose.yml files in your project (in my case I was simulating something) and the services in them have the same name, docker-compose will override the first file's container with the second file's. Even when the containers have different `container_name` values.\r\n\r\nMy example:\r\n\r\ntest01.docker-compose.yml\r\n```yaml\r\nversion: '2'\r\n\r\nservices:\r\n  # test01_httpd:\r\n  httpd:\r\n    image: httpd:latest\r\n    container_name: test01_httpd\r\n```\r\n\r\ntest02.docker-compose.yml\r\n```yaml\r\nversion: '2'\r\n\r\nservices:\r\n  # test02_httpd:\r\n  httpd:\r\n    image: httpd:latest\r\n    container_name: test02_httpd\r\n```\r\n\r\nIf you run both files, you'd expect that you'd end up with two running containers. Instead, the second file kills the first file's container and replaces it with its own.\r\n\r\n```bash\r\n$ docker-compose -f test01.docker-compose.yml up -d  \r\nCreating network \"composeorphans_default\" with the default driver\r\nCreating test01_httpd ... done\r\n\r\n$ docker ps | grep test\r\n4260a91c4a64        httpd:latest          \"httpd-foreground\"       10 seconds ago      Up 9 seconds        80/tcp                                 test01_httpd\r\n\r\n$ docker-compose -f test02.docker-compose.yml up -d\r\nRecreating test01_httpd ... done\r\n\r\n$ docker ps | grep test                            \r\n515d4a82d969        httpd:latest          \"httpd-foreground\"       3 seconds ago       Up 2 seconds        80/tcp                                 test02_httpd\r\n\r\n```\r\n\r\nIf you modify the compose files to name the services with different names, you end up with this output:\r\n\r\n```bash\r\n$ docker-compose -f test01.docker-compose.yml up -d \r\nCreating network \"composeorphans_default\" with the default driver\r\nCreating test01_httpd ... done\r\n\r\n$ docker ps | grep test                             \r\nd4178d30ae75        httpd:latest          \"httpd-foreground\"       15 seconds ago      Up 14 seconds       80/tcp                                 test01_httpd\r\n\r\n$ docker-compose -f test02.docker-compose.yml up -d\r\nWARNING: Found orphan containers (test01_httpd) for this project. If you removed or renamed this service in your compose file, you can run this command with the --remove-orphans flag to clean it up.\r\nCreating test02_httpd ... done\r\n\r\n$ docker ps | grep test                            \r\n3472eb07078f        httpd:latest          \"httpd-foreground\"       3 seconds ago       Up 2 seconds        80/tcp                                 test02_httpd\r\nd4178d30ae75        httpd:latest          \"httpd-foreground\"       24 seconds ago      Up 23 seconds       80/tcp                                 test01_httpd\r\n\r\n```\r\n\r\nI could sort of understand this behavior if I wasn't setting `container_name`, since compose names the containers based on the directory they are in, and the service name. But I set `container_name` specifically to avoid that. So it is very weird to me that compose would recreate the service this way.\r\n\r\nBut, I wouldn't think it's ever a good idea to do a recreate unless the --force-recreate flag is set. So, even if `container_name` is supposed to be ignored, I'd expect an error message. Not for compose to recreate the container.\r\n\r\nThis is using docker-compose installed via pip on an Ubuntu 18.04 machine.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7396", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7396/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7396/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7396/events", "html_url": "https://github.com/docker/compose/issues/7396", "id": 605333421, "node_id": "MDU6SXNzdWU2MDUzMzM0MjE=", "number": 7396, "title": "WSL composer path error", "user": {"login": "Terkea", "id": 11928943, "node_id": "MDQ6VXNlcjExOTI4OTQz", "avatar_url": "https://avatars3.githubusercontent.com/u/11928943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Terkea", "html_url": "https://github.com/Terkea", "followers_url": "https://api.github.com/users/Terkea/followers", "following_url": "https://api.github.com/users/Terkea/following{/other_user}", "gists_url": "https://api.github.com/users/Terkea/gists{/gist_id}", "starred_url": "https://api.github.com/users/Terkea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Terkea/subscriptions", "organizations_url": "https://api.github.com/users/Terkea/orgs", "repos_url": "https://api.github.com/users/Terkea/repos", "events_url": "https://api.github.com/users/Terkea/events{/privacy}", "received_events_url": "https://api.github.com/users/Terkea/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-23T08:15:35Z", "updated_at": "2020-06-02T03:28:38Z", "closed_at": "2020-06-02T03:28:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description of the issue\r\nI'm trying to split up my application into two docker services - frontend and backend, where my project layout looks similar to this.\r\n\r\n```\r\n| frontend\r\n|  - ...\r\n|  - Dockerfile.prod\r\n| backend\r\n|  - ...\r\n|  - Dockerfile.prod\r\n| docker-compose.yml\r\n```\r\n\r\nWhat bothers me is that when I'm running the images standalone everything works flawlessly, but when I try to throw it into the `docker-compose.yml` that error kicks in.\r\n\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.25.4, build 8d51620a\r\ndocker-py version: 4.1.0\r\nCPython version: 3.7.4\r\nOpenSSL version: OpenSSL 1.1.1c  28 May 2019\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.8\r\n API version:       1.40\r\n Go version:        go1.12.17\r\n Git commit:        afacb8b\r\n Built:             Wed Mar 11 01:23:10 2020\r\n OS/Arch:           windows/amd64\r\n Experimental:      true\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.8\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.17\r\n  Git commit:       afacb8b\r\n  Built:            Wed Mar 11 01:29:16 2020\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          v1.2.13\r\n  GitCommit:        7ad184331fa3e55e52b890ea95e65ba581ae3429\r\n runc:\r\n  Version:          1.0.0-rc10\r\n  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\nservices:\r\n  backend:\r\n    build:\r\n      context: \\\\wsl$$\\Ubuntu\\home\\terkea\\django_react_template\r\n      dockerfile: django/Dockerfile\r\n    command: python django/manage.py runserver 0.0.0.0:8000\r\n    container_name: django-dev\r\n    ports:\r\n    - 8001:8000/tcp\r\n    volumes:\r\n    - \\\\wsl$\\Ubuntu\\home\\terkea\\django_react_template:/code:rw\r\n  frontend:\r\n    build:\r\n      context: \\\\wsl$$\\Ubuntu\\home\\terkea\\django_react_template\r\n      dockerfile: react/Dockerfile\r\n    container_name: react-dev\r\n    environment:\r\n      CHOKIDAR_USEPOLLING: \"true\"\r\n    ports:\r\n    - 3001:3000/tcp\r\nversion: '3.0'\r\n```\r\n\r\n### Observed result\r\nStrange thing is that when you run just the same composer on the windows docker version it seems to be working just fine.\r\n\r\n### Expected result\r\nI was expecting it to create the containers and run the services.\r\n\r\n### Stacktrace / full error message\r\n\r\n```\r\nBuilding frontend\r\nTraceback (most recent call last):\r\n  File \"docker-compose\", line 6, in <module>\r\n  File \"compose\\cli\\main.py\", line 72, in main\r\n  File \"compose\\cli\\main.py\", line 128, in perform_command\r\n  File \"compose\\cli\\main.py\", line 1077, in up\r\n  File \"compose\\cli\\main.py\", line 1073, in up\r\n  File \"compose\\project.py\", line 548, in up\r\n  File \"compose\\service.py\", line 351, in ensure_image_exists\r\n  File \"compose\\service.py\", line 1106, in build\r\n  File \"site-packages\\docker\\api\\build.py\", line 148, in build\r\nTypeError: You must specify a directory to build in path\r\n[15892] Failed to execute script docker-compose\r\n```\r\n\r\n## Additional information\r\nWindows 10 pro, WSL\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7378", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7378/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7378/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7378/events", "html_url": "https://github.com/docker/compose/issues/7378", "id": 601683714, "node_id": "MDU6SXNzdWU2MDE2ODM3MTQ=", "number": 7378, "title": "/usr/local/bin/docker-compose: line 1: Not: command not found", "user": {"login": "paul-8235d9", "id": 25016924, "node_id": "MDQ6VXNlcjI1MDE2OTI0", "avatar_url": "https://avatars1.githubusercontent.com/u/25016924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paul-8235d9", "html_url": "https://github.com/paul-8235d9", "followers_url": "https://api.github.com/users/paul-8235d9/followers", "following_url": "https://api.github.com/users/paul-8235d9/following{/other_user}", "gists_url": "https://api.github.com/users/paul-8235d9/gists{/gist_id}", "starred_url": "https://api.github.com/users/paul-8235d9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paul-8235d9/subscriptions", "organizations_url": "https://api.github.com/users/paul-8235d9/orgs", "repos_url": "https://api.github.com/users/paul-8235d9/repos", "events_url": "https://api.github.com/users/paul-8235d9/events{/privacy}", "received_events_url": "https://api.github.com/users/paul-8235d9/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-17T03:56:40Z", "updated_at": "2020-04-18T17:55:49Z", "closed_at": "2020-04-18T17:55:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\nSystem - Fresh install of Raspbian Buster Lite (Feb 2020) on a Pi 3B. \r\nI've tried to instal docker-compose several ways;\r\n\r\n1) sudo curl -L \"https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\r\n\r\nand\r\n\r\n2) sudo apt-get install docker-compose\r\n\r\nBut I'm not able to get docker-compose to respond.\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\npaul@Pi3B-2:/ $ docker-compose --version\r\n/usr/local/bin/docker-compose: line 1: Not: command not found\r\n\r\nHowever;\r\n\r\npaul@Pi3B-2:/ $ sudo apt-get install docker-compose\r\nReading package lists... Done\r\nBuilding dependency tree\r\nReading state information... Done\r\ndocker-compose is already the newest version (1.21.0-3).\r\n0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.\r\n\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\n\r\npaul@Pi3B-2:/ $ docker version\r\nClient: Docker Engine - Community\r\n Version:           19.03.8\r\n API version:       1.40\r\n Go version:        go1.12.17\r\n Git commit:        afacb8b\r\n Built:             Wed Mar 11 01:35:24 2020\r\n OS/Arch:           linux/arm\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.8\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.17\r\n  Git commit:       afacb8b\r\n  Built:            Wed Mar 11 01:29:22 2020\r\n  OS/Arch:          linux/arm\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.2.13\r\n  GitCommit:        7ad184331fa3e55e52b890ea95e65ba581ae3429\r\n runc:\r\n  Version:          1.0.0-rc10\r\n  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n\r\n```\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\npaul@Pi3B-2:/ $ docker-compose config\r\n/usr/local/bin/docker-compose: line 1: Not: command not found\r\n\r\n```\r\n## Steps to reproduce the issue\r\n\r\n1. sudo curl -L \"https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\r\n appears to fail. It returns; \r\n\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100     9  100     9    0     0     31      0 --:--:-- --:--:-- --:--:--    31\r\n\r\n2. sudo apt-get install docker-compose\r\nAppears to install but docker-compose --version does not respond.\r\n\r\n### Observed result\r\n\r\n### Expected result\r\n\r\n### Stacktrace / full error message\r\n\r\n```\r\n(paste here)\r\n```\r\n\r\n## Additional information\r\n\r\nOS version / distribution, `docker-compose` install method, etc.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7376", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7376/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7376/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7376/events", "html_url": "https://github.com/docker/compose/issues/7376", "id": 601258101, "node_id": "MDU6SXNzdWU2MDEyNTgxMDE=", "number": 7376, "title": "docker networking hellp", "user": {"login": "un1ntentional", "id": 60234097, "node_id": "MDQ6VXNlcjYwMjM0MDk3", "avatar_url": "https://avatars2.githubusercontent.com/u/60234097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/un1ntentional", "html_url": "https://github.com/un1ntentional", "followers_url": "https://api.github.com/users/un1ntentional/followers", "following_url": "https://api.github.com/users/un1ntentional/following{/other_user}", "gists_url": "https://api.github.com/users/un1ntentional/gists{/gist_id}", "starred_url": "https://api.github.com/users/un1ntentional/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/un1ntentional/subscriptions", "organizations_url": "https://api.github.com/users/un1ntentional/orgs", "repos_url": "https://api.github.com/users/un1ntentional/repos", "events_url": "https://api.github.com/users/un1ntentional/events{/privacy}", "received_events_url": "https://api.github.com/users/un1ntentional/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-04-16T17:16:27Z", "updated_at": "2020-04-16T21:46:41Z", "closed_at": "2020-04-16T21:46:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "ran compose, it's breaking down on create network and the reason for which it is supposedly breaking down seems wrong because the request it sends simply returns a 404, nothing to indicate that it's unable to create network: \r\n\r\n```\r\ndocker-compose --verbose up -d\r\ncompose.config.config.find: Using configuration files: ./docker-compose.yml\r\ndocker.utils.config.find_config_file: Trying paths: ['/home/toor/.docker/config.json', '/home/toor/.dockercfg']\r\ndocker.utils.config.find_config_file: No config file found\r\ndocker.utils.config.find_config_file: Trying paths: ['/home/toor/.docker/config.json', '/home/toor/.dockercfg']\r\ndocker.utils.config.find_config_file: No config file found\r\ndocker.utils.config.find_config_file: Trying paths: ['/home/toor/.docker/config.json', '/home/toor/.dockercfg']\r\ndocker.utils.config.find_config_file: No config file found\r\nurllib3.connectionpool._make_request: http://localhost:None \"GET /v1.25/version HTTP/1.1\" 200 857\r\ncompose.cli.docker_client.get_client: docker-compose version 1.26.0dev, build unknown\r\ndocker-py version: 4.2.0\r\nCPython version: 2.7.17\r\nOpenSSL version: OpenSSL 1.1.1d  10 Sep 2019\r\ncompose.cli.docker_client.get_client: Docker base_url: http+docker://localhost\r\ncompose.cli.docker_client.get_client: Docker version: KernelVersion=5.3.18-lp152.10-default, Components=[{u'Version': u'19.03.5', u'Name': u'Engine', u'Details': {u'KernelVersion': u'5.3.18-lp152.10-default', u'Os': u'linux', u'BuildTime': u'2019-12-12T12:00:00.000000000+00:00', u'ApiVersion': u'1.40', u'MinAPIVersion': u'1.12', u'GitCommit': u'633a0ea838f1', u'Arch': u'amd64', u'Experimental': u'false', u'GoVersion': u'go1.12.12'}}, {u'Version': u'v1.2.10', u'Name': u'containerd', u'Details': {u'GitCommit': u'b34a5c8af56e510852c35414db4c1f4fa6172339'}}, {u'Version': u'1.0.0-rc8+dev', u'Name': u'runc', u'Details': {u'GitCommit': u'3e425f80a8c931f88e6d94a8c831b9d5aa481657'}}, {u'Version': u'0.1.3_catatonit', u'Name': u'docker-init', u'Details': {u'GitCommit': u''}}], Arch=amd64, BuildTime=2019-12-12T12:00:00.000000000+00:00, ApiVersion=1.40, Platform={u'Name': u''}, Version=19.03.5, MinAPIVersion=1.12, GitCommit=633a0ea838f1, Os=linux, GoVersion=go1.12.12\r\ncompose.cli.verbose_proxy.proxy_callable: docker inspect_network <- (u'mongodb_my-network-name')\r\nurllib3.connectionpool._make_request: http://localhost:None \"GET /v1.25/networks/mongodb_my-network-name HTTP/1.1\" 404 56\r\ncompose.cli.verbose_proxy.proxy_callable: docker info <- ()\r\nurllib3.connectionpool._make_request: http://localhost:None \"GET /v1.25/info HTTP/1.1\" 200 None\r\ncompose.cli.verbose_proxy.proxy_callable: docker info -> {u'Architecture': u'x86_64',\r\n u'BridgeNfIp6tables': True,\r\n u'BridgeNfIptables': True,\r\n u'CPUSet': True,\r\n u'CPUShares': True,\r\n u'CgroupDriver': u'cgroupfs',\r\n u'ClusterAdvertise': u'',\r\n u'ClusterStore': u'',\r\n u'ContainerdCommit': {u'Expected': u'b34a5c8af56e510852c35414db4c1f4fa6172339',\r\n                       u'ID': u'b34a5c8af56e510852c35414db4c1f4fa6172339'},\r\n...\r\ncompose.cli.verbose_proxy.proxy_callable: docker inspect_network <- (u'mongodb_my-network-name')\r\nurllib3.connectionpool._make_request: http://localhost:None \"GET /v1.25/networks/mongodb_my-network-name HTTP/1.1\" 404 56\r\ncompose.network.ensure: Creating network \"mongodb_my-network-name\" with the default driver\r\ncompose.cli.verbose_proxy.proxy_callable: docker create_network <- (name=u'mongodb_my-network-name', enable_ipv6=None, ipam=None, labels={u'com.docker.compose.version': u'1.26.0dev', u'com.docker.compose.project': u'mongodb', u'com.docker.compose.network': 'my-network-name'}, driver=None, check_duplicate=True, options=None, internal=None, attachable=True)\r\nurllib3.connectionpool._make_request: http://localhost:None \"POST /v1.25/networks/create HTTP/1.1\" 404 121\r\nERROR: compose.cli.errors.log_api_error: could not find an available, non-overlapping IPv4 address pool among the defaults to assign to the network\r\n```\r\nthis should work, if this isn't permissive enough what is\r\n\r\n```\r\nDOCKER_OPTS=\"--storage-driver btrfs --bip=172.16.0.1/16 --default-address-pool base=172.16.0.0/12,size=24\"\r\n27: docker0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UNKNOWN group default qlen 1000\r\n    link/ether f6:43:47:31:ed:8c brd ff:ff:ff:ff:ff:ff\r\n    inet 172.16.0.1/16 brd 172.16.255.255 scope global docker0\r\n       valid_lft forever preferred_lft forever\r\n    inet6 fe80::f443:47ff:fe31:ed8c/64 scope link \r\n       valid_lft forever preferred_lft forever\r\n```\r\n\r\nI really can't relate to that error it seems there should be pleeeenty of networks avail: \r\n\r\n```\r\ndocker network ls\r\nNETWORK ID          NAME                DRIVER              SCOPE\r\n81187b228ddd        bridge              bridge              local\r\n44b56f9b43bd        host                host                local\r\n4ff25745d221        none                null                local\r\n\u276f docker network inspect 81\r\n[\r\n    {\r\n        \"Name\": \"bridge\",\r\n        \"Id\": \"81187b228ddd15cbc6652190efab6b056294553bbaa5f60c47b9dff244fc9ca6\",\r\n        \"Created\": \"2020-04-16T17:39:43.554401355Z\",\r\n        \"Scope\": \"local\",\r\n        \"Driver\": \"bridge\",\r\n        \"EnableIPv6\": false,\r\n        \"IPAM\": {\r\n            \"Driver\": \"default\",\r\n            \"Options\": null,\r\n            \"Config\": [\r\n                {\r\n                    \"Subnet\": \"172.16.0.0/16\",\r\n                    \"Gateway\": \"172.16.0.1\"\r\n                }\r\n            ]\r\n        },\r\n        \"Internal\": false,\r\n        \"Attachable\": false,\r\n        \"Ingress\": false,\r\n        \"ConfigFrom\": {\r\n            \"Network\": \"\"\r\n        },\r\n        \"ConfigOnly\": false,\r\n        \"Containers\": {},\r\n        \"Options\": {\r\n            \"com.docker.network.bridge.default_bridge\": \"true\",\r\n            \"com.docker.network.bridge.enable_icc\": \"true\",\r\n            \"com.docker.network.bridge.enable_ip_masquerade\": \"true\",\r\n            \"com.docker.network.bridge.host_binding_ipv4\": \"0.0.0.0\",\r\n            \"com.docker.network.bridge.name\": \"docker0\",\r\n            \"com.docker.network.driver.mtu\": \"1500\"\r\n        },\r\n        \"Labels\": {}\r\n    }\r\n]\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7369", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7369/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7369/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7369/events", "html_url": "https://github.com/docker/compose/issues/7369", "id": 600612078, "node_id": "MDU6SXNzdWU2MDA2MTIwNzg=", "number": 7369, "title": "Docker compose is not compatible with Python 3.8 under Ubuntu", "user": {"login": "jlowin", "id": 153965, "node_id": "MDQ6VXNlcjE1Mzk2NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/153965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlowin", "html_url": "https://github.com/jlowin", "followers_url": "https://api.github.com/users/jlowin/followers", "following_url": "https://api.github.com/users/jlowin/following{/other_user}", "gists_url": "https://api.github.com/users/jlowin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlowin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlowin/subscriptions", "organizations_url": "https://api.github.com/users/jlowin/orgs", "repos_url": "https://api.github.com/users/jlowin/repos", "events_url": "https://api.github.com/users/jlowin/events{/privacy}", "received_events_url": "https://api.github.com/users/jlowin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ulyssessouza", "id": 373485, "node_id": "MDQ6VXNlcjM3MzQ4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/373485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulyssessouza", "html_url": "https://github.com/ulyssessouza", "followers_url": "https://api.github.com/users/ulyssessouza/followers", "following_url": "https://api.github.com/users/ulyssessouza/following{/other_user}", "gists_url": "https://api.github.com/users/ulyssessouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulyssessouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulyssessouza/subscriptions", "organizations_url": "https://api.github.com/users/ulyssessouza/orgs", "repos_url": "https://api.github.com/users/ulyssessouza/repos", "events_url": "https://api.github.com/users/ulyssessouza/events{/privacy}", "received_events_url": "https://api.github.com/users/ulyssessouza/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ulyssessouza", "id": 373485, "node_id": "MDQ6VXNlcjM3MzQ4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/373485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulyssessouza", "html_url": "https://github.com/ulyssessouza", "followers_url": "https://api.github.com/users/ulyssessouza/followers", "following_url": "https://api.github.com/users/ulyssessouza/following{/other_user}", "gists_url": "https://api.github.com/users/ulyssessouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulyssessouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulyssessouza/subscriptions", "organizations_url": "https://api.github.com/users/ulyssessouza/orgs", "repos_url": "https://api.github.com/users/ulyssessouza/repos", "events_url": "https://api.github.com/users/ulyssessouza/events{/privacy}", "received_events_url": "https://api.github.com/users/ulyssessouza/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-04-15T21:56:40Z", "updated_at": "2020-04-17T15:46:48Z", "closed_at": "2020-04-17T15:46:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\n\r\nAttempting to use the docker-compose CLI fails under Ubuntu with Python 3.8 due to accessing a deprecated attribute.\r\n\r\n[This line](https://github.com/docker/compose/blob/4be2fa010aa8f1ea3853698ac5407eb4421e7847/compose/cli/utils.py#L76) in the `is_ubuntu()` function attempts to access `platform.linux_distribution` but that attribute was deprecated in Python 3.5 and removed in 3.8 (see issue [here](https://bugs.python.org/issue28167)).\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7367", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7367/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7367/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7367/events", "html_url": "https://github.com/docker/compose/issues/7367", "id": 600346378, "node_id": "MDU6SXNzdWU2MDAzNDYzNzg=", "number": 7367, "title": "How start a service\u2018s instances into different machines?", "user": {"login": "ctlove0523", "id": 9432235, "node_id": "MDQ6VXNlcjk0MzIyMzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9432235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ctlove0523", "html_url": "https://github.com/ctlove0523", "followers_url": "https://api.github.com/users/ctlove0523/followers", "following_url": "https://api.github.com/users/ctlove0523/following{/other_user}", "gists_url": "https://api.github.com/users/ctlove0523/gists{/gist_id}", "starred_url": "https://api.github.com/users/ctlove0523/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ctlove0523/subscriptions", "organizations_url": "https://api.github.com/users/ctlove0523/orgs", "repos_url": "https://api.github.com/users/ctlove0523/repos", "events_url": "https://api.github.com/users/ctlove0523/events{/privacy}", "received_events_url": "https://api.github.com/users/ctlove0523/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 153640415, "node_id": "MDU6TGFiZWwxNTM2NDA0MTU=", "url": "https://api.github.com/repos/docker/compose/labels/kind/feature", "name": "kind/feature", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-15T14:36:06Z", "updated_at": "2020-04-16T10:42:32Z", "closed_at": "2020-04-16T10:42:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "In kubernetes we can use affinity and anti-affinity feature to deploy a service\u2019s instances into different nodes\uff0chow to do in docker compose\uff1f", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7364", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7364/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7364/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7364/events", "html_url": "https://github.com/docker/compose/issues/7364", "id": 600256780, "node_id": "MDU6SXNzdWU2MDAyNTY3ODA=", "number": 7364, "title": "Super small typo in README", "user": {"login": "arthurlorenz", "id": 11928191, "node_id": "MDQ6VXNlcjExOTI4MTkx", "avatar_url": "https://avatars2.githubusercontent.com/u/11928191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arthurlorenz", "html_url": "https://github.com/arthurlorenz", "followers_url": "https://api.github.com/users/arthurlorenz/followers", "following_url": "https://api.github.com/users/arthurlorenz/following{/other_user}", "gists_url": "https://api.github.com/users/arthurlorenz/gists{/gist_id}", "starred_url": "https://api.github.com/users/arthurlorenz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arthurlorenz/subscriptions", "organizations_url": "https://api.github.com/users/arthurlorenz/orgs", "repos_url": "https://api.github.com/users/arthurlorenz/repos", "events_url": "https://api.github.com/users/arthurlorenz/events{/privacy}", "received_events_url": "https://api.github.com/users/arthurlorenz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-15T12:22:41Z", "updated_at": "2020-05-20T12:38:12Z", "closed_at": "2020-05-20T12:38:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\nSuper small typo in README, but it bugged me \ud83d\ude05 \r\n\r\n`The docker-compose project announces that as Python 2 reaches it's EOL`\r\nshould be\r\n`The docker-compose project announces that as Python 2 reaches its EOL`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7359", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7359/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7359/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7359/events", "html_url": "https://github.com/docker/compose/issues/7359", "id": 599096047, "node_id": "MDU6SXNzdWU1OTkwOTYwNDc=", "number": 7359, "title": "Ignore missing build directory if not building images", "user": {"login": "vpriscan", "id": 26350152, "node_id": "MDQ6VXNlcjI2MzUwMTUy", "avatar_url": "https://avatars3.githubusercontent.com/u/26350152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vpriscan", "html_url": "https://github.com/vpriscan", "followers_url": "https://api.github.com/users/vpriscan/followers", "following_url": "https://api.github.com/users/vpriscan/following{/other_user}", "gists_url": "https://api.github.com/users/vpriscan/gists{/gist_id}", "starred_url": "https://api.github.com/users/vpriscan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vpriscan/subscriptions", "organizations_url": "https://api.github.com/users/vpriscan/orgs", "repos_url": "https://api.github.com/users/vpriscan/repos", "events_url": "https://api.github.com/users/vpriscan/events{/privacy}", "received_events_url": "https://api.github.com/users/vpriscan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 153640415, "node_id": "MDU6TGFiZWwxNTM2NDA0MTU=", "url": "https://api.github.com/repos/docker/compose/labels/kind/feature", "name": "kind/feature", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-13T19:48:54Z", "updated_at": "2020-08-10T08:32:46Z", "closed_at": "2020-08-10T08:32:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nWe have a single Compose file that should be used for both building images and starting services.\r\nImages are built on one machine (manually or with CI/CD) and pushed to company's private Docker registry.\r\n\r\nCompose file snippet:\r\n```\r\nversion: \"3.7\"\r\nservices:\r\n    standalone:\r\n        build:\r\n          context: build/wildfly/standalone\r\n        ...\r\n```\r\nWe want to be able to start the services with _docker-compose_ CLI on any other machine in our company, using the same Compose file, while pulling the previously built images from company's private Docker registry.\r\n\r\nThose other machines don't have access to the build files, only the Compose file.\r\nThe problem is, when starting services with `up`, build path specified in the Compose file must exist, otherwise an error is thrown, even if building is not required or is explicitly turned off with `--no-build`.\r\n\r\n```\r\ndocker-compose -f all-standalone-demo.yml up --no-build\r\nERROR: build path /home/vpriscan/...../build/wildfly/standalone either does not exist, is not accessible, or is not a valid URL.\r\n```\r\n\r\nI propose that missing build directory is ignored when services being started don't require building the images, or alternatively if `--no-build` flag is present.\r\n\r\nKind regards,\r\nVedran", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7349", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7349/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7349/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7349/events", "html_url": "https://github.com/docker/compose/issues/7349", "id": 595926436, "node_id": "MDU6SXNzdWU1OTU5MjY0MzY=", "number": 7349, "title": "Docker compose up not working as expected", "user": {"login": "aaronspin", "id": 60897969, "node_id": "MDQ6VXNlcjYwODk3OTY5", "avatar_url": "https://avatars1.githubusercontent.com/u/60897969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaronspin", "html_url": "https://github.com/aaronspin", "followers_url": "https://api.github.com/users/aaronspin/followers", "following_url": "https://api.github.com/users/aaronspin/following{/other_user}", "gists_url": "https://api.github.com/users/aaronspin/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaronspin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaronspin/subscriptions", "organizations_url": "https://api.github.com/users/aaronspin/orgs", "repos_url": "https://api.github.com/users/aaronspin/repos", "events_url": "https://api.github.com/users/aaronspin/events{/privacy}", "received_events_url": "https://api.github.com/users/aaronspin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-07T04:22:38Z", "updated_at": "2020-04-07T17:13:32Z", "closed_at": "2020-04-07T17:13:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "  - [x] I have tried with the latest version of my channel (Stable or Edge)  -- I tried downgrading, this still happens.\r\n  - [ x] I have uploaded Diagnostics\r\n  - Diagnostics ID: 97BD6841-8F6E-4BB7-A03A-88A50BFAA93D/20200407041621\r\n\r\nOutput for docker-compose up, running macOS Version: 10.15.4\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"docker-compose\", line 6, in <module>\r\n  File \"compose/cli/main.py\", line 72, in main\r\n  File \"compose/cli/main.py\", line 128, in perform_command\r\n  File \"compose/cli/main.py\", line 1077, in up\r\n  File \"compose/cli/main.py\", line 1073, in up\r\n  File \"compose/project.py\", line 548, in up\r\n  File \"compose/service.py\", line 355, in ensure_image_exists\r\n  File \"compose/service.py\", line 381, in image\r\n  File \"site-packages/docker/utils/decorators.py\", line 17, in wrapped\r\ndocker.errors.NullResource: Resource ID was not provided\r\n[64031] Failed to execute script docker-compose\r\n```\r\n\r\nRe-inistalling docker does nothing to fix this. Honestly stumped by this one. Would appreciate any help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7336", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7336/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7336/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7336/events", "html_url": "https://github.com/docker/compose/issues/7336", "id": 592527399, "node_id": "MDU6SXNzdWU1OTI1MjczOTk=", "number": 7336, "title": "docker-compose run doesn't respect COMPOSE_DOCKER_CLI_BUILD and DOCKER_BUILDKIT", "user": {"login": "gergelyerdelyi", "id": 216450, "node_id": "MDQ6VXNlcjIxNjQ1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/216450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gergelyerdelyi", "html_url": "https://github.com/gergelyerdelyi", "followers_url": "https://api.github.com/users/gergelyerdelyi/followers", "following_url": "https://api.github.com/users/gergelyerdelyi/following{/other_user}", "gists_url": "https://api.github.com/users/gergelyerdelyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/gergelyerdelyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gergelyerdelyi/subscriptions", "organizations_url": "https://api.github.com/users/gergelyerdelyi/orgs", "repos_url": "https://api.github.com/users/gergelyerdelyi/repos", "events_url": "https://api.github.com/users/gergelyerdelyi/events{/privacy}", "received_events_url": "https://api.github.com/users/gergelyerdelyi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-02T10:34:31Z", "updated_at": "2020-08-12T13:42:39Z", "closed_at": "2020-08-12T13:42:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\n\r\nWhen a build is implicitly triggered by `docker-compose run`, it does not take the environment variables `COMPOSE_DOCKER_CLI_BUILD` and `DOCKER_BUILDKIT` into account. In case the project uses BuildKit this results in a build failure.\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.25.4, build 8d51620a\r\ndocker-py version: 4.1.0\r\nCPython version: 3.7.5\r\nOpenSSL version: OpenSSL 1.1.0l  10 Sep 2019\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.8\r\n API version:       1.40\r\n Go version:        go1.12.17\r\n Git commit:        afacb8b7f0\r\n Built:             Wed Mar 11 01:25:46 2020\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.8\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.17\r\n  Git commit:       afacb8b7f0\r\n  Built:            Wed Mar 11 01:24:19 2020\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.2.13\r\n  GitCommit:        7ad184331fa3e55e52b890ea95e65ba581ae3429\r\n runc:\r\n  Version:          1.0.0-rc10\r\n  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n\r\n```\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. Prepare a Dockerfile that uses BuildKit with `# syntax = docker/dockerfile:experimental` and use a new feature, for example `RUN --mount=type=cache,target=/tmp/foo`\r\n2. Start without an image or remove it\r\n3. Try to start the container with `docker-compose run test bash`\r\n\r\n### Observed result\r\n\r\n```\r\n$ COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1 docker-compose build test\r\nWARNING: Native build is an experimental feature and could change at any time\r\nBuilding test\r\n# The build succeeds\r\n\r\n$ COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1 docker-compose run test bash\r\ntest@46be78641925:~$ # the run command is succesful\r\n\r\n$ docker-compose down --rmi local\r\nRemoving test_test_run_46be78641925 ... done\r\nRemoving network test_default\r\nRemoving image test_test\r\n\r\n$ COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1 docker-compose run test bash\r\nBuilding tests\r\nERROR: Dockerfile parse error line 16: Unknown flag: mount\r\n```\r\n\r\n### Expected result\r\n\r\nThe build succeeds and the container is started.\r\n\r\n## Additional information\r\n\r\nThe latest release (1.25.4) and release candidate (1.26.0-rc3) exhibit the same behavior.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7335", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7335/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7335/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7335/events", "html_url": "https://github.com/docker/compose/issues/7335", "id": 592122225, "node_id": "MDU6SXNzdWU1OTIxMjIyMjU=", "number": 7335, "title": "ERROR: Couldn't connect to Docker daemon at http+docker://localhost - is it running?", "user": {"login": "WIttyJudge", "id": 43549900, "node_id": "MDQ6VXNlcjQzNTQ5OTAw", "avatar_url": "https://avatars2.githubusercontent.com/u/43549900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WIttyJudge", "html_url": "https://github.com/WIttyJudge", "followers_url": "https://api.github.com/users/WIttyJudge/followers", "following_url": "https://api.github.com/users/WIttyJudge/following{/other_user}", "gists_url": "https://api.github.com/users/WIttyJudge/gists{/gist_id}", "starred_url": "https://api.github.com/users/WIttyJudge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WIttyJudge/subscriptions", "organizations_url": "https://api.github.com/users/WIttyJudge/orgs", "repos_url": "https://api.github.com/users/WIttyJudge/repos", "events_url": "https://api.github.com/users/WIttyJudge/events{/privacy}", "received_events_url": "https://api.github.com/users/WIttyJudge/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-01T18:36:14Z", "updated_at": "2020-04-16T19:38:49Z", "closed_at": "2020-04-16T19:38:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried anything in that [issue](https://github.com/docker/compose/issues/4181).\r\n\r\n```\r\nwitty@witty:~/Desktop/sites/code/finance-api$ sudo docker-compose build\r\nERROR: Couldn't connect to Docker daemon at http+docker://localhost - is it running?\r\n\r\nIf it's at a non-standard location, specify the URL with the DOCKER_HOST environment variable.\r\n```\r\n\r\nSome information: \r\n\r\n**sudo docker info**\r\n```\r\nwitty@witty:~/Desktop/sites/code/finance-api$ sudo docker info\r\nClient:\r\n Debug Mode: false\r\n\r\nServer:\r\nERROR: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?\r\nerrors pretty printing info\r\n```\r\n\r\n**sudo systemctl status docker**\r\n```\r\nwitty@witty:~/Desktop/sites/code/finance-api$ sudo systemctl status docker\r\n\u25cf docker.service - Docker Application Container Engine\r\n   Loaded: loaded (/lib/systemd/system/docker.service; enabled; vendor preset: enabled)\r\n   Active: failed (Result: exit-code) since Wed 2020-04-01 21:21:07 MSK; 12min ago\r\n     Docs: https://docs.docker.com\r\n  Process: 9611 ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock (code=e\r\n Main PID: 9611 (code=exited, status=1/FAILURE)\r\n\r\n\u0430\u043f\u0440 01 21:21:07 witty systemd[1]: docker.service: Service hold-off time over, scheduling restart.\r\n\u0430\u043f\u0440 01 21:21:07 witty systemd[1]: docker.service: Scheduled restart job, restart counter is at 4.\r\n\u0430\u043f\u0440 01 21:21:07 witty systemd[1]: Stopped Docker Application Container Engine.\r\n\u0430\u043f\u0440 01 21:21:07 witty systemd[1]: docker.service: Start request repeated too quickly.\r\n\u0430\u043f\u0440 01 21:21:07 witty systemd[1]: docker.service: Failed with result 'exit-code'.\r\n\u0430\u043f\u0440 01 21:21:07 witty systemd[1]: Failed to start Docker Application Container Engine.\r\n```\r\n\r\n**journalctl -xe**\r\n```\r\nwitty@witty:~/Desktop/sites/code/finance-api$ journalctl -xe\r\n-- Defined-By: systemd\r\n-- Support: http://www.ubuntu.com/support\r\n-- \r\n-- Automatic restarting of the unit docker.service has been scheduled, as the result for\r\n-- the configured Restart= setting for the unit.\r\n\u0430\u043f\u0440 01 21:34:55 witty systemd[1]: Stopped Docker Application Container Engine.\r\n-- Subject: Unit docker.service has finished shutting down\r\n-- Defined-By: systemd\r\n-- Support: http://www.ubuntu.com/support\r\n-- \r\n-- Unit docker.service has finished shutting down.\r\n\u0430\u043f\u0440 01 21:34:55 witty systemd[1]: Closed Docker Socket for the API.\r\n-- Subject: Unit docker.socket has finished shutting down\r\n-- Defined-By: systemd\r\n-- Support: http://www.ubuntu.com/support\r\n-- \r\n-- Unit docker.socket has finished shutting down.\r\n\u0430\u043f\u0440 01 21:34:55 witty systemd[1]: Stopping Docker Socket for the API.\r\n-- Subject: Unit docker.socket has begun shutting down\r\n-- Defined-By: systemd\r\n-- Support: http://www.ubuntu.com/support\r\n-- \r\n-- Unit docker.socket has begun shutting down.\r\n\u0430\u043f\u0440 01 21:34:55 witty systemd[1]: Starting Docker Socket for the API.\r\n-- Subject: Unit docker.socket has begun start-up\r\n-- Defined-By: systemd\r\n-- Support: http://www.ubuntu.com/support\r\n-- \r\n-- Unit docker.socket has begun starting up.\r\n\u0430\u043f\u0440 01 21:34:55 witty systemd[1]: Listening on Docker Socket for the API.\r\n-- Subject: Unit docker.socket has finished start-up\r\n-- Defined-By: systemd\r\n-- Support: http://www.ubuntu.com/support\r\n-- \r\n-- Unit docker.socket has finished starting up.\r\n-- \r\n-- The start-up result is RESULT.\r\n\u0430\u043f\u0440 01 21:34:55 witty systemd[1]: Starting Docker Application Container Engine...\r\n-- Subject: Unit docker.service has begun start-up\r\n-- Defined-By: systemd\r\n-- Support: http://www.ubuntu.com/support\r\n-- \r\n-- Unit docker.service has begun starting up.\r\n\u0430\u043f\u0440 01 21:34:55 witty dockerd[15595]: time=\"2020-04-01T21:34:55.710906986+03:00\" level=info msg=\"Startin\r\n\u0430\u043f\u0440 01 21:34:55 witty dockerd[15595]: failed to start daemon: pid file found, ensure docker is not runni\r\n\u0430\u043f\u0440 01 21:34:55 witty systemd[1]: docker.service: Main process exited, code=exited, status=1/FAILURE\r\n\u0430\u043f\u0440 01 21:34:55 witty systemd[1]: docker.service: Failed with result 'exit-code'.\r\n\u0430\u043f\u0440 01 21:34:55 witty systemd[1]: Failed to start Docker Application Container Engine.\r\n-- Subject: Unit docker.service has failed\r\n-- Defined-By: systemd\r\n-- Support: http://www.ubuntu.com/support\r\n-- \r\n-- Unit docker.service has failed.\r\n-- \r\n-- The result is RESULT.\r\n```\r\n---\r\n\r\nSpecs:\r\n- OS: Ubuntu 18.04 bionic.\r\n- Docker version: 19.03.8, build afacb8b7f0.\r\n- Docker-compose version: version 1.25.4, build 8d51620a.\r\n---\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7332", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7332/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7332/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7332/events", "html_url": "https://github.com/docker/compose/issues/7332", "id": 591587293, "node_id": "MDU6SXNzdWU1OTE1ODcyOTM=", "number": 7332, "title": "a", "user": {"login": "19125064", "id": 58461541, "node_id": "MDQ6VXNlcjU4NDYxNTQx", "avatar_url": "https://avatars2.githubusercontent.com/u/58461541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/19125064", "html_url": "https://github.com/19125064", "followers_url": "https://api.github.com/users/19125064/followers", "following_url": "https://api.github.com/users/19125064/following{/other_user}", "gists_url": "https://api.github.com/users/19125064/gists{/gist_id}", "starred_url": "https://api.github.com/users/19125064/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/19125064/subscriptions", "organizations_url": "https://api.github.com/users/19125064/orgs", "repos_url": "https://api.github.com/users/19125064/repos", "events_url": "https://api.github.com/users/19125064/events{/privacy}", "received_events_url": "https://api.github.com/users/19125064/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777239, "node_id": "MDU6TGFiZWw2OTc3NzIzOQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-01T03:19:56Z", "updated_at": "2020-04-04T08:17:46Z", "closed_at": "2020-04-04T08:17:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "how to solve this question\r\nwhen install 1.25.0 version\r\nroot@ybb:~# docker-compose --version\r\n[24279] Cannot open self /usr/local/bin/docker-compose or archive /usr/local/bin/docker-compose.pkg\r\n\r\nthank you!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7331", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7331/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7331/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7331/events", "html_url": "https://github.com/docker/compose/issues/7331", "id": 590673976, "node_id": "MDU6SXNzdWU1OTA2NzM5NzY=", "number": 7331, "title": "command in compose file doesn't override CMD in built image", "user": {"login": "zlk89", "id": 7234480, "node_id": "MDQ6VXNlcjcyMzQ0ODA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7234480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zlk89", "html_url": "https://github.com/zlk89", "followers_url": "https://api.github.com/users/zlk89/followers", "following_url": "https://api.github.com/users/zlk89/following{/other_user}", "gists_url": "https://api.github.com/users/zlk89/gists{/gist_id}", "starred_url": "https://api.github.com/users/zlk89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zlk89/subscriptions", "organizations_url": "https://api.github.com/users/zlk89/orgs", "repos_url": "https://api.github.com/users/zlk89/repos", "events_url": "https://api.github.com/users/zlk89/events{/privacy}", "received_events_url": "https://api.github.com/users/zlk89/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-30T23:43:09Z", "updated_at": "2020-03-31T11:05:57Z", "closed_at": "2020-03-31T04:15:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\ncommand in compose file doesn't override CMD in built image\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.25.4, build 8d51620a\r\ndocker-py version: 4.1.0\r\nCPython version: 3.7.5\r\nOpenSSL version: OpenSSL 1.1.1d  10 Sep 2019\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.5\r\n API version:       1.40\r\n Go version:        go1.12.12\r\n Git commit:        633a0ea\r\n Built:             Wed Nov 13 07:22:34 2019\r\n OS/Arch:           darwin/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.5\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.12\r\n  Git commit:       633a0ea\r\n  Built:            Wed Nov 13 07:29:19 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          v1.2.10\r\n  GitCommit:        b34a5c8af56e510852c35414db4c1f4fa6172339\r\n runc:\r\n  Version:          1.0.0-rc8+dev\r\n  GitCommit:        3e425f80a8c931f88e6d94a8c831b9d5aa481657\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\nservices:\r\n  app:\r\n    build:\r\n      context: /Users/xx\r\n    command: yarn start:local\r\n    environment:\r\n      NODE_ENV: development\r\n    image: local-dev-image:latest\r\nversion: '3.0'\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. First build the image: `docker-compose -f docker-compose.local.yml build app`\r\n2. Then just run the image: `docker run local-dev-image`\r\n\r\n\r\n### Observed result\r\nIt is using the CMD in Dockerfile\r\n\r\n### Expected result\r\nIt should be using the overrided command specified in compose file\r\n\r\n\r\n\r\n## Additional information\r\n\r\nOS version / distribution, `docker-compose` install method, etc.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7327", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7327/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7327/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7327/events", "html_url": "https://github.com/docker/compose/issues/7327", "id": 589589486, "node_id": "MDU6SXNzdWU1ODk1ODk0ODY=", "number": 7327, "title": "Projects with bind mounts on Windows fails if its path changes", "user": {"login": "funkyhippo", "id": 52957110, "node_id": "MDQ6VXNlcjUyOTU3MTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/52957110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/funkyhippo", "html_url": "https://github.com/funkyhippo", "followers_url": "https://api.github.com/users/funkyhippo/followers", "following_url": "https://api.github.com/users/funkyhippo/following{/other_user}", "gists_url": "https://api.github.com/users/funkyhippo/gists{/gist_id}", "starred_url": "https://api.github.com/users/funkyhippo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/funkyhippo/subscriptions", "organizations_url": "https://api.github.com/users/funkyhippo/orgs", "repos_url": "https://api.github.com/users/funkyhippo/repos", "events_url": "https://api.github.com/users/funkyhippo/events{/privacy}", "received_events_url": "https://api.github.com/users/funkyhippo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-28T14:39:42Z", "updated_at": "2020-04-02T17:35:41Z", "closed_at": "2020-04-01T21:41:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\n\r\nOn compose projects that have bind mounts, running `docker-compose up` after the initial build/setup fails if its path changes. \r\n\r\nThis does not seem to be an issue under MacOS or Ubuntu (so basically, **only Windows seems to be affected**).\r\n\r\nNote that I can mitigate the issue by restarting the Docker daemon.\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.25.4, build 8d51620a\r\ndocker-py version: 4.1.0\r\nCPython version: 3.7.4\r\nOpenSSL version: OpenSSL 1.1.1c  28 May 2019\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.8\r\n API version:       1.40\r\n Go version:        go1.12.17\r\n Git commit:        afacb8b\r\n Built:             Wed Mar 11 01:23:10 2020\r\n OS/Arch:           windows/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.8\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.17\r\n  Git commit:       afacb8b\r\n  Built:            Wed Mar 11 01:29:16 2020\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          v1.2.13\r\n  GitCommit:        7ad184331fa3e55e52b890ea95e65ba581ae3429\r\n runc:\r\n  Version:          1.0.0-rc10\r\n  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\nservices:\r\n  test:\r\n    build:\r\n      context: C:\\docker-compoop\r\n    command: python -u /script.py\r\n    environment:\r\n      PYTHONUNBUFFERED: '1'\r\n    volumes:\r\n    - source: C:\\docker-compoop\\script.py\r\n      target: /script.py\r\n      type: bind\r\nversion: '3.7'\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. Clone [this repo](https://github.com/funkyhippo/docker-compoop)\r\n2. Run `docker-compose up` within the repo directory, then kill it after it successfully starts\r\n3. Rename the repo directory (to anything)\r\n4. Run `docker-compose up` within the repo directory again\r\n\r\n### Observed result\r\n\r\nThe bound files will not be seen by the containers; instead, we'll get a `No such file or directory` error for each file.\r\n\r\nFull console output:\r\n```powershell\r\nC:\\docker-compoop>docker-compose up\r\nCreating network \"docker-compoop_default\" with the default driver\r\nCreating docker-compoop_test_1 ... done                                                                                                                      Attaching to docker-compoop_test_1\r\ntest_1  | Sleeping..\r\ntest_1  | Sleeping..\r\nGracefully stopping... (press Ctrl+C again to force)\r\nStopping docker-compoop_test_1 ... done                                                                                                                      \r\nC:\\docker-compoop>cd ..\r\n\r\nC:\\>rename docker-compoop renamed-docker-compoop\r\n\r\nC:\\>cd renamed-docker-compoop\r\n\r\nC:\\renamed-docker-compoop>docker-compose up\r\nCreating network \"renamed-docker-compoop_default\" with the default driver\r\nBuilding test\r\nStep 1/1 : FROM python:3-alpine\r\n ---> d5e5ad4a4fc0\r\n\r\nSuccessfully built d5e5ad4a4fc0\r\nSuccessfully tagged renamed-docker-compoop_test:latest\r\nWARNING: Image for service test was built because it did not already exist. To rebuild this image you must use `docker-compose build` or `docker-compose up --build`.\r\nCreating renamed-docker-compoop_test_1 ... done                                                                                                              Attaching to renamed-docker-compoop_test_1\r\ntest_1  | python: can't open file '/script.py': [Errno 2] No such file or directory\r\nrenamed-docker-compoop_test_1 exited with code 2\r\n```\r\n\r\n### Expected result\r\n\r\nThe bound files should be seen, allowing the container to run properly.\r\n\r\n### Stacktrace / full error message\r\n\r\n```\r\ntest_1  | python: can't open file '/script.py': [Errno 2] No such file or directory\r\n```\r\n\r\n## Additional information\r\n\r\nThis was observed on Windows 10, Version 1909 (Build 18363.720). I was not able to reproduce this on MacOS Catalina nor Ubuntu 18.04.\r\n\r\n`docker-compose` was installed via Docker Desktop for Windows. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7309", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7309/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7309/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7309/events", "html_url": "https://github.com/docker/compose/issues/7309", "id": 585769904, "node_id": "MDU6SXNzdWU1ODU3Njk5MDQ=", "number": 7309, "title": "Add ability to \"Set an environment variable\" to \"docker-compose up\"", "user": {"login": "Elijas", "id": 4084885, "node_id": "MDQ6VXNlcjQwODQ4ODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4084885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Elijas", "html_url": "https://github.com/Elijas", "followers_url": "https://api.github.com/users/Elijas/followers", "following_url": "https://api.github.com/users/Elijas/following{/other_user}", "gists_url": "https://api.github.com/users/Elijas/gists{/gist_id}", "starred_url": "https://api.github.com/users/Elijas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Elijas/subscriptions", "organizations_url": "https://api.github.com/users/Elijas/orgs", "repos_url": "https://api.github.com/users/Elijas/repos", "events_url": "https://api.github.com/users/Elijas/events{/privacy}", "received_events_url": "https://api.github.com/users/Elijas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 153640415, "node_id": "MDU6TGFiZWwxNTM2NDA0MTU=", "url": "https://api.github.com/repos/docker/compose/labels/kind/feature", "name": "kind/feature", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-22T17:27:02Z", "updated_at": "2020-03-22T18:52:21Z", "closed_at": "2020-03-22T18:52:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nThere is no canon way to pass temporary environment variables to `docker-compose up`\r\n\r\n**Describe the solution you'd like**\r\nAdd `-e` option to `docker-compose up`, as it is already implemented now in `docker-compose run`, e.g.\r\n```\r\nOptions:\r\n    [...]\r\n    -e KEY=VAL            Set an environment variable (can be used multiple times)\r\n    [...]\r\n```\r\n\r\n**Describe alternatives you've considered**\r\nPrepend KEY=VALUE pair(s) to your docker-compose command, e.g:\r\nVERSION=v2 docker-compose up\r\n\r\n**Additional context**\r\n`docker-compose version 1.25.0, build b42d419`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7301", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7301/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7301/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7301/events", "html_url": "https://github.com/docker/compose/issues/7301", "id": 582785765, "node_id": "MDU6SXNzdWU1ODI3ODU3NjU=", "number": 7301, "title": "DistributionNotFound when running docker-compose up", "user": {"login": "rgengyx", "id": 45324586, "node_id": "MDQ6VXNlcjQ1MzI0NTg2", "avatar_url": "https://avatars0.githubusercontent.com/u/45324586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rgengyx", "html_url": "https://github.com/rgengyx", "followers_url": "https://api.github.com/users/rgengyx/followers", "following_url": "https://api.github.com/users/rgengyx/following{/other_user}", "gists_url": "https://api.github.com/users/rgengyx/gists{/gist_id}", "starred_url": "https://api.github.com/users/rgengyx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rgengyx/subscriptions", "organizations_url": "https://api.github.com/users/rgengyx/orgs", "repos_url": "https://api.github.com/users/rgengyx/repos", "events_url": "https://api.github.com/users/rgengyx/events{/privacy}", "received_events_url": "https://api.github.com/users/rgengyx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-17T06:29:05Z", "updated_at": "2020-03-19T04:59:19Z", "closed_at": "2020-03-19T04:59:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I ran into this `DistributionNotFound` error when running `docker-compose up` today which never happened before. I am not sure how to fix it but I suspect it has something to do with python 3.6, which I recently used extensively for another project. Any idea how to solve it? Below is the output from running `docker-compose up`\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/bin/docker-compose\", line 6, in <module>\r\n    from pkg_resources import load_entry_point\r\n  File \"/home/rickygeng/.local/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 3251, in <module>\r\n    @_call_aside\r\n  File \"/home/rickygeng/.local/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 3235, in _call_aside\r\n    f(*args, **kwargs)\r\n  File \"/home/rickygeng/.local/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 3264, in _initialize_master_working_set\r\n    working_set = WorkingSet._build_master()\r\n  File \"/home/rickygeng/.local/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 583, in _build_master\r\n    ws.require(__requires__)\r\n  File \"/home/rickygeng/.local/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 900, in require\r\n    needed = self.resolve(parse_requirements(requirements))\r\n  File \"/home/rickygeng/.local/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 786, in resolve\r\n    raise DistributionNotFound(req, requirers)\r\npkg_resources.DistributionNotFound: The 'docker-compose==1.17.1' distribution was not found and is required by the application\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7291", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7291/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7291/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7291/events", "html_url": "https://github.com/docker/compose/issues/7291", "id": 580988898, "node_id": "MDU6SXNzdWU1ODA5ODg4OTg=", "number": 7291, "title": "docker-compose.yml' is invalid because: services.db.volumes contains an invalid type, it should be an array", "user": {"login": "boubacar2", "id": 9339228, "node_id": "MDQ6VXNlcjkzMzkyMjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/9339228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boubacar2", "html_url": "https://github.com/boubacar2", "followers_url": "https://api.github.com/users/boubacar2/followers", "following_url": "https://api.github.com/users/boubacar2/following{/other_user}", "gists_url": "https://api.github.com/users/boubacar2/gists{/gist_id}", "starred_url": "https://api.github.com/users/boubacar2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boubacar2/subscriptions", "organizations_url": "https://api.github.com/users/boubacar2/orgs", "repos_url": "https://api.github.com/users/boubacar2/repos", "events_url": "https://api.github.com/users/boubacar2/events{/privacy}", "received_events_url": "https://api.github.com/users/boubacar2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-14T02:12:59Z", "updated_at": "2020-03-14T17:53:18Z", "closed_at": "2020-03-14T17:53:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7290", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7290/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7290/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7290/events", "html_url": "https://github.com/docker/compose/issues/7290", "id": 580983344, "node_id": "MDU6SXNzdWU1ODA5ODMzNDQ=", "number": 7290, "title": "docker-compose.yml' is invalid because: services.db.volumes contains an invalid type, it should be an array", "user": {"login": "boubacar2", "id": 9339228, "node_id": "MDQ6VXNlcjkzMzkyMjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/9339228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boubacar2", "html_url": "https://github.com/boubacar2", "followers_url": "https://api.github.com/users/boubacar2/followers", "following_url": "https://api.github.com/users/boubacar2/following{/other_user}", "gists_url": "https://api.github.com/users/boubacar2/gists{/gist_id}", "starred_url": "https://api.github.com/users/boubacar2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boubacar2/subscriptions", "organizations_url": "https://api.github.com/users/boubacar2/orgs", "repos_url": "https://api.github.com/users/boubacar2/repos", "events_url": "https://api.github.com/users/boubacar2/events{/privacy}", "received_events_url": "https://api.github.com/users/boubacar2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777239, "node_id": "MDU6TGFiZWw2OTc3NzIzOQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-14T01:55:32Z", "updated_at": "2020-03-14T17:51:34Z", "closed_at": "2020-03-14T17:50:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7286", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7286/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7286/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7286/events", "html_url": "https://github.com/docker/compose/issues/7286", "id": 580082846, "node_id": "MDU6SXNzdWU1ODAwODI4NDY=", "number": 7286, "title": "DNS Lookup in php with docker", "user": {"login": "Alexandermss", "id": 50879852, "node_id": "MDQ6VXNlcjUwODc5ODUy", "avatar_url": "https://avatars2.githubusercontent.com/u/50879852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexandermss", "html_url": "https://github.com/Alexandermss", "followers_url": "https://api.github.com/users/Alexandermss/followers", "following_url": "https://api.github.com/users/Alexandermss/following{/other_user}", "gists_url": "https://api.github.com/users/Alexandermss/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexandermss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexandermss/subscriptions", "organizations_url": "https://api.github.com/users/Alexandermss/orgs", "repos_url": "https://api.github.com/users/Alexandermss/repos", "events_url": "https://api.github.com/users/Alexandermss/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexandermss/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777239, "node_id": "MDU6TGFiZWw2OTc3NzIzOQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-12T17:05:45Z", "updated_at": "2020-03-12T17:34:01Z", "closed_at": "2020-03-12T17:34:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to make a program, that are able to DNS Lookup a website, it works fine. Now i wan't to run it in docker, but when try to dns lookup a website, i don't get any output.\r\n\r\n`<title>DNS LOOKUP</title>\r\n<header>\r\n<p>Do a DNS Lookup on any website!</p>\r\n</header>\r\n<form method=\"post\" action=\"?action\">\r\n<input type=\"text\" name=\"Host\" placeholder=\"Host\" />\r\n<input type=\"submit\" value=\"DNS Lookup\" />  \r\n</form>\r\n\r\n<?php\r\n  if(isset($_GET['action']))\r\n  {\r\n\r\n    $host = $_POST['Host'];\r\n    $command = shell_exec(\"nslookup $host\");\r\n  }\r\n  echo $command;\r\n\r\n?>    `\r\n\r\n` Docker File:\r\n\r\nFROM ubuntu:16.04\r\n\r\nRUN apt update\r\n\r\nRUN apt install -y \\ \r\n   apache2 \\  \r\n   php \\ \r\n   libapache2-mod-php \\ \r\n   dnsutils\r\n\r\nRUN useradd -d /home/chal/ -m -s /bin/nologin chal\r\n\r\nWORKDIR /home/chal\r\n\r\nCOPY source .\r\n\r\nUSER chal\r\n\r\nENTRYPOINT service apache2 start && /bin/bash `\r\n\r\n`Docker Compose file:\r\n\r\n  version: '2'\r\n\r\n  services:\r\n     lookup:\r\n        build: .\r\n        ports:\r\n           - '8888:80'\r\n        stdin_open: true\r\n        tty: true\r\n        volumes:\r\n           - ./source:/var/www/html\r\n           - ./logs:/var/log/apache2\r\n`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7284", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7284/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7284/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7284/events", "html_url": "https://github.com/docker/compose/issues/7284", "id": 579833126, "node_id": "MDU6SXNzdWU1Nzk4MzMxMjY=", "number": 7284, "title": "Blog post for awesome-compose opensourcing", "user": {"login": "aiordache", "id": 809903, "node_id": "MDQ6VXNlcjgwOTkwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/809903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aiordache", "html_url": "https://github.com/aiordache", "followers_url": "https://api.github.com/users/aiordache/followers", "following_url": "https://api.github.com/users/aiordache/following{/other_user}", "gists_url": "https://api.github.com/users/aiordache/gists{/gist_id}", "starred_url": "https://api.github.com/users/aiordache/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aiordache/subscriptions", "organizations_url": "https://api.github.com/users/aiordache/orgs", "repos_url": "https://api.github.com/users/aiordache/repos", "events_url": "https://api.github.com/users/aiordache/events{/privacy}", "received_events_url": "https://api.github.com/users/aiordache/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "aiordache", "id": 809903, "node_id": "MDQ6VXNlcjgwOTkwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/809903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aiordache", "html_url": "https://github.com/aiordache", "followers_url": "https://api.github.com/users/aiordache/followers", "following_url": "https://api.github.com/users/aiordache/following{/other_user}", "gists_url": "https://api.github.com/users/aiordache/gists{/gist_id}", "starred_url": "https://api.github.com/users/aiordache/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aiordache/subscriptions", "organizations_url": "https://api.github.com/users/aiordache/orgs", "repos_url": "https://api.github.com/users/aiordache/repos", "events_url": "https://api.github.com/users/aiordache/events{/privacy}", "received_events_url": "https://api.github.com/users/aiordache/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aiordache", "id": 809903, "node_id": "MDQ6VXNlcjgwOTkwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/809903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aiordache", "html_url": "https://github.com/aiordache", "followers_url": "https://api.github.com/users/aiordache/followers", "following_url": "https://api.github.com/users/aiordache/following{/other_user}", "gists_url": "https://api.github.com/users/aiordache/gists{/gist_id}", "starred_url": "https://api.github.com/users/aiordache/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aiordache/subscriptions", "organizations_url": "https://api.github.com/users/aiordache/orgs", "repos_url": "https://api.github.com/users/aiordache/repos", "events_url": "https://api.github.com/users/aiordache/events{/privacy}", "received_events_url": "https://api.github.com/users/aiordache/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-03-12T10:18:51Z", "updated_at": "2020-04-02T09:21:59Z", "closed_at": "2020-04-02T09:21:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7278", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7278/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7278/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7278/events", "html_url": "https://github.com/docker/compose/issues/7278", "id": 578829033, "node_id": "MDU6SXNzdWU1Nzg4MjkwMzM=", "number": 7278, "title": "docker.auth.auth.load_config: File doesn't exist", "user": {"login": "hochan222", "id": 22424891, "node_id": "MDQ6VXNlcjIyNDI0ODkx", "avatar_url": "https://avatars3.githubusercontent.com/u/22424891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hochan222", "html_url": "https://github.com/hochan222", "followers_url": "https://api.github.com/users/hochan222/followers", "following_url": "https://api.github.com/users/hochan222/following{/other_user}", "gists_url": "https://api.github.com/users/hochan222/gists{/gist_id}", "starred_url": "https://api.github.com/users/hochan222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hochan222/subscriptions", "organizations_url": "https://api.github.com/users/hochan222/orgs", "repos_url": "https://api.github.com/users/hochan222/repos", "events_url": "https://api.github.com/users/hochan222/events{/privacy}", "received_events_url": "https://api.github.com/users/hochan222/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-10T20:03:51Z", "updated_at": "2020-03-10T20:29:52Z", "closed_at": "2020-03-10T20:29:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\ndocker.auth.auth.load_config: File doesn't exist\r\n\r\nHowever I remove all docker image and docker process it works well\r\nCan you explain why you are getting this error?\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.8.0, build unknown\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nDocker version 19.03.7, build 7141c199a2\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\nversion: '2.0'\r\nservices:\r\n  web:\r\n    build: .\r\n    ports:\r\n      - \"5000:5000\"\r\n  redis:\r\n    image: \"redis:alpine\"\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\n1.\r\n2.\r\n3.\r\n\r\n### Observed result\r\n\r\n### Expected result\r\n\r\n### Stacktrace / full error message\r\n\r\n```\r\nhochan@hochan-node:~/Desktop/pfc/dockercompose$ sudo docker-compose up\r\nWARNING: Found orphan containers (dockercompose_redis-server_1) for this project. If you removed or renamed this service in your compose file, you can run this command with the --remove-orphans flag to clean it up.\r\nRecreating dockercompose_web_1\r\nStarting dockercompose_redis_1\r\nAttaching to dockercompose_redis_1, dockercompose_web_1\r\nredis_1  | 1:C 10 Mar 2020 19:25:16.801 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo\r\nredis_1  | 1:C 10 Mar 2020 19:25:16.801 # Redis version=5.0.7, bits=64, commit=00000000, modified=0, pid=1, just started\r\nredis_1  | 1:C 10 Mar 2020 19:25:16.801 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf\r\nredis_1  | 1:M 10 Mar 2020 19:25:16.802 * Running mode=standalone, port=6379.\r\nredis_1  | 1:M 10 Mar 2020 19:25:16.802 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.\r\nredis_1  | 1:M 10 Mar 2020 19:25:16.802 # Server initialized\r\nredis_1  | 1:M 10 Mar 2020 19:25:16.802 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.\r\nredis_1  | 1:M 10 Mar 2020 19:25:16.802 * DB loaded from disk: 0.000 seconds\r\nredis_1  | 1:M 10 Mar 2020 19:25:16.802 * Ready to accept connections\r\nweb_1    | npm WARN app No description\r\nweb_1    | npm WARN app No repository field.\r\nweb_1    | npm WARN app No license field.\r\nweb_1    | \r\nweb_1    | audited 130 packages in 1.281s\r\nweb_1    | found 0 vulnerabilities\r\nweb_1    | \r\ndockercompose_web_1 exited with code 0\r\n\r\nhochan@hochan-node:~/Desktop/pfc/dockercompose$ sudo docker-hochan@hochan-node:~/Desktop/pfc/dockercompose$ sudo docker-compose ps\r\n[sudo] password for hochan: \r\n          Name                        Command               State     Ports   \r\n-----------------------------------------------------------------------------\r\ndockercompose_node-app_1   docker-entrypoint.sh npm i ...   Exit 0            \r\ndockercompose_redis_1      docker-entrypoint.sh redis ...   Up       6379/tcp \r\n\r\nhochan@hochan-node:~/Desktop/pfc/dockercompose$ docker-compose --verbose up\r\ncompose.config.config.find: Using configuration files: ./docker-compose.yml\r\ndocker.auth.auth.load_config: File doesn't exist\r\nTraceback (most recent call last):\r\n  File \"/usr/bin/docker-compose\", line 9, in <module>\r\n    load_entry_point('docker-compose==1.8.0', 'console_scripts', 'docker-compose')()\r\n  File \"/usr/lib/python2.7/dist-packages/compose/cli/main.py\", line 61, in main\r\n    command()\r\n  File \"/usr/lib/python2.7/dist-packages/compose/cli/main.py\", line 110, in perform_command\r\n    project = project_from_options('.', options)\r\n  File \"/usr/lib/python2.7/dist-packages/compose/cli/command.py\", line 35, in project_from_options\r\n    environment=environment\r\n  File \"/usr/lib/python2.7/dist-packages/compose/cli/command.py\", line 110, in get_project\r\n    host=host, environment=environment\r\n  File \"/usr/lib/python2.7/dist-packages/compose/cli/command.py\", line 85, in get_client\r\n    version_info = six.iteritems(client.version())\r\n  File \"/usr/lib/python2.7/dist-packages/docker/api/daemon.py\", line 76, in version\r\n    return self._result(self._get(url), json=True)\r\n  File \"/usr/lib/python2.7/dist-packages/docker/utils/decorators.py\", line 47, in inner\r\n    return f(self, *args, **kwargs)\r\n  File \"/usr/lib/python2.7/dist-packages/docker/client.py\", line 140, in _get\r\n    return self.get(url, **self._set_request_timeout(kwargs))\r\n  File \"/usr/lib/python2.7/dist-packages/requests/sessions.py\", line 492, in get\r\n    return self.request('GET', url, **kwargs)\r\n  File \"/usr/lib/python2.7/dist-packages/requests/sessions.py\", line 480, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/usr/lib/python2.7/dist-packages/requests/sessions.py\", line 588, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/usr/lib/python2.7/dist-packages/requests/adapters.py\", line 426, in send\r\n    raise ConnectionError(err, request=request)\r\n```\r\n\r\n## Additional information\r\n\r\nOS version / distribution, `docker-compose` install method, etc.\r\nUbuntu 16.04", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7275", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7275/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7275/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7275/events", "html_url": "https://github.com/docker/compose/issues/7275", "id": 578469385, "node_id": "MDU6SXNzdWU1Nzg0NjkzODU=", "number": 7275, "title": "Gelf driver not working", "user": {"login": "muhammedOzbilici", "id": 7340804, "node_id": "MDQ6VXNlcjczNDA4MDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7340804?v=4", "gravatar_id": "", "url": "https://api.github.com/users/muhammedOzbilici", "html_url": "https://github.com/muhammedOzbilici", "followers_url": "https://api.github.com/users/muhammedOzbilici/followers", "following_url": "https://api.github.com/users/muhammedOzbilici/following{/other_user}", "gists_url": "https://api.github.com/users/muhammedOzbilici/gists{/gist_id}", "starred_url": "https://api.github.com/users/muhammedOzbilici/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/muhammedOzbilici/subscriptions", "organizations_url": "https://api.github.com/users/muhammedOzbilici/orgs", "repos_url": "https://api.github.com/users/muhammedOzbilici/repos", "events_url": "https://api.github.com/users/muhammedOzbilici/events{/privacy}", "received_events_url": "https://api.github.com/users/muhammedOzbilici/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-10T10:12:36Z", "updated_at": "2020-03-23T12:49:22Z", "closed_at": "2020-03-23T12:49:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I added logging driver info to compose.yml\r\n\r\n```\r\n logging:\r\n      driver: gelf\r\n      options:\r\n        gelf-address: \"tcp://graylogHost:graylogPort\"\r\n```\r\n\r\nWhen container trying to start and if there is some error (for example JVM argument syntax error on purpose) that causing container start failure, I can't see error logs on Graylog stream. If container runs correctly, I can see every logs on graylog stream.\r\n\r\nDocker Community version does not support gelf driver ?\r\n\r\n> Client: Docker Engine - Community\r\n>  Version:           19.03.1\r\n>  API version:       1.40\r\n>  Go version:        go1.12.5\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7267", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7267/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7267/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7267/events", "html_url": "https://github.com/docker/compose/issues/7267", "id": 575442002, "node_id": "MDU6SXNzdWU1NzU0NDIwMDI=", "number": 7267, "title": "When building containers via docker-compose and DOCKER_HOST env var is set to \"ssh://user@host\", it fails with a \"x.x.x.x not found in known_hosts\" paramiko error", "user": {"login": "terroirman", "id": 7956775, "node_id": "MDQ6VXNlcjc5NTY3NzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7956775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terroirman", "html_url": "https://github.com/terroirman", "followers_url": "https://api.github.com/users/terroirman/followers", "following_url": "https://api.github.com/users/terroirman/following{/other_user}", "gists_url": "https://api.github.com/users/terroirman/gists{/gist_id}", "starred_url": "https://api.github.com/users/terroirman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terroirman/subscriptions", "organizations_url": "https://api.github.com/users/terroirman/orgs", "repos_url": "https://api.github.com/users/terroirman/repos", "events_url": "https://api.github.com/users/terroirman/events{/privacy}", "received_events_url": "https://api.github.com/users/terroirman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-04T14:23:37Z", "updated_at": "2020-03-04T15:30:09Z", "closed_at": "2020-03-04T15:30:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "##  Description of the issue\r\nWhen acting on remote containers via docker-compose \"up/down\" (ex.: docker-compose.exe down)\r\nAND: DOCKER_HOST env var is set to \"ssh://user@a.b.c.d\"\r\nThen: it fails with a \"a.b.c.d not found in known_hosts\" paramiko error.\r\n\r\nI double checked that the host is in the the c:\\Users\\user\\.ssh\\know_hosts\r\nI can successful log in the remote server using the ssh keys.\r\n\r\nThe problem doesn't appear : \r\n- If no \"up\" or \"down\" command are used (ex.: docker-compose.exe config --services would work)\r\nOR\r\n- If DOCKER_HOST is set to \"tcp://127.0.0.1:23750\" (and a ssh tunnel is up between workstation and server via :  ssh -NL localhost:23750:/var/run/docker.sock user@a.b.c.d)\r\n\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.25.4, build unknown\r\ndocker-py version: 4.1.0\r\nCPython version: 3.7.2\r\nOpenSSL version: OpenSSL 1.1.0j  20 Nov 2018\r\n```\r\n\r\n**Output of `docker version` (server part is remote)**\r\n```\r\nClient:\r\n Version:           19.03.3\r\n API version:       1.39 (downgraded from 1.40)\r\n Go version:        go1.12.10\r\n Git commit:        2355349d-\r\n Built:             10/14/2019 16:41:26\r\n OS/Arch:           windows/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          18.09.1\r\n  API version:      1.39 (minimum version 1.12)\r\n  Go version:       go1.10.6\r\n  Git commit:       4c52b90\r\n  Built:            Wed Jan  9 19:06:30 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\nservices:\r\n  database:\r\n    build:\r\n      context: C:\\\r\n      dockerfile: ./database/Dockerfile\r\n  web_server:\r\n    build:\r\n      context: C:\\\r\n      dockerfile: web_server/Dockerfile\r\n    ports:\r\n    - published: 80\r\n      target: 80\r\n    volumes:\r\n    - app:/app:rw\r\n    working_dir: /app\r\nversion: '3.3'\r\nvolumes:\r\n  app: {}\r\n```\r\n\r\n\r\n\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. setup basic docker-compose.yml file\r\n2. set env var DOCKER_HOST=ssh://user@host\r\n3. execute docker-compose.exe down\r\n\r\n### Observed result\r\nfails with paramiko error \"paramiko.ssh_exception.SSHException: Server 'a.b.c.d' not found in known_hosts\"\r\n\r\n### Expected result\r\nThe containers are brought up (or down) without any paramiko error.\r\n\r\n### Stacktrace / full error message\r\n\r\n**Bug reproduced with DOCKER_HOST=\"ssh://user@a.b.c.d\"**\r\n```\r\nPS C:\\TEMP> $Env:DOCKER_HOST=\"ssh://user@a.b.c.d\"\r\nPS C:\\TEMP> docker-compose.exe --verbose --log-level DEBUG down\r\ncompose.config.config.find: Using configuration files: .\\docker-compose.yml\r\ndocker.utils.config.find_config_file: Trying paths: ['C:\\\\Users\\\\user\\\\.docker\\\\config.json', 'C:\\\\Users\\\\user\\\\.dockercfg']\r\ndocker.utils.config.find_config_file: No config file found\r\ndocker.utils.config.find_config_file: Trying paths: ['C:\\\\Users\\\\user\\\\.docker\\\\config.json', 'C:\\\\Users\\\\user\\\\.dockercfg']\r\ndocker.utils.config.find_config_file: No config file found\r\nparamiko.transport._log: starting thread (client mode): 0x9beebda0\r\nparamiko.transport._log: Local version/idstring: SSH-2.0-paramiko_2.7.1\r\nparamiko.transport._log: Remote version/idstring: SSH-2.0-OpenSSH_7.4\r\nparamiko.transport._log: Connected (version 2.0, client OpenSSH_7.4)\r\nparamiko.transport._log: kex algos:['curve25519-sha256', 'curve25519-sha256@libssh.org', 'ecdh-sha2-nistp256', 'ecdh-sha2-nistp384', 'ecdh-sha2-nistp521', 'diffie-hellman-group-exchange-sha256', 'diffie-hellman-group16-sha512', 'diffie-hellman-group18-sha512', 'diffie-hellman-group-exchange-sha1', 'diffie-hellman-group14-sha256', 'diffie-hellman-group14-sha1', 'diffie-hellman-group1-sha1'] server key:['ssh-rsa', 'rsa-sha2-512', 'rsa-sha2-256', 'ecdsa-sha2-nistp256', 'ssh-ed25519'] client encrypt:['chacha20-poly1305@openssh.com', 'aes128-ctr', 'aes192-ctr', 'aes256-ctr', 'aes128-gcm@openssh.com', 'aes256-gcm@openssh.com', 'aes128-cbc', 'aes192-cbc', 'aes256-cbc', 'blowfish-cbc', 'cast128-cbc', '3des-cbc'] server encrypt:['chacha20-poly1305@openssh.com', 'aes128-ctr', 'aes192-ctr', 'aes256-ctr', 'aes128-gcm@openssh.com', 'aes256-gcm@openssh.com', 'aes128-cbc', 'aes192-cbc', 'aes256-cbc', 'blowfish-cbc', 'cast128-cbc', '3des-cbc'] client mac:['umac-64-etm@openssh.com', 'umac-128-etm@openssh.com', 'hmac-sha2-256-etm@openssh.com', 'hmac-sha2-512-etm@openssh.com', 'hmac-sha1-etm@openssh.com', 'umac-64@openssh.com', 'umac-128@openssh.com', 'hmac-sha2-256', 'hmac-sha2-512', 'hmac-sha1'] server mac:['umac-64-etm@openssh.com', 'umac-128-etm@openssh.com', 'hmac-sha2-256-etm@openssh.com', 'hmac-sha2-512-etm@openssh.com', 'hmac-sha1-etm@openssh.com', 'umac-64@openssh.com', 'umac-128@openssh.com', 'hmac-sha2-256', 'hmac-sha2-512', 'hmac-sha1'] client compress:['none', 'zlib@openssh.com'] server compress:['none', 'zlib@openssh.com'] client lang:[''] server lang:[''] kex follows?False\r\nparamiko.transport._log: Kex agreed: curve25519-sha256@libssh.org\r\nparamiko.transport._log: HostKey agreed: ssh-ed25519\r\nparamiko.transport._log: Cipher agreed: aes128-ctr\r\nparamiko.transport._log: MAC agreed: hmac-sha2-256\r\nparamiko.transport._log: Compression agreed: none\r\nparamiko.transport._log: kex engine KexCurve25519 specified hash_algo <built-in function openssl_sha256>\r\nparamiko.transport._log: Switch to new keys ...\r\nparamiko.transport._log: Rejecting ssh-ed25519 host key for a.b.c.d: b'3df952ba3b2d0f4dd65b388fe8c6f942'\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python37\\Scripts\\docker-compose-script.py\", line 11, in <module>\r\n    load_entry_point('docker-compose', 'console_scripts', 'docker-compose')()\r\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\compose\\cli\\main.py\", line 72, in main\r\n    command()\r\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\compose\\cli\\main.py\", line 125, in perform_command\r\n    project = project_from_options('.', options)\r\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\compose\\cli\\command.py\", line 65, in project_from_options\r\n    environment_file=environment_file\r\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\compose\\cli\\command.py\", line 149, in get_project\r\n    host=host, environment=environment\r\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\compose\\cli\\command.py\", line 120, in get_client\r\n    environment=environment, tls_version=get_tls_version(environment)\r\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\compose\\cli\\docker_client.py\", line 127, in docker_client\r\n    client = APIClient(**kwargs)\r\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\docker\\api\\client.py\", line 166, in __init__\r\n    base_url, timeout, pool_connections=num_pools\r\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\docker\\transport\\sshconn.py\", line 84, in __init__\r\n    self._connect()\r\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\docker\\transport\\sshconn.py\", line 94, in _connect\r\n    parsed.hostname, parsed.port, parsed.username,\r\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\paramiko\\client.py\", line 416, in connect\r\n    self, server_hostkey_name, server_key\r\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\paramiko\\client.py\", line 824, in missing_host_key\r\n    \"Server {!r} not found in known_hosts\".format(hostname)\r\nparamiko.ssh_exception.SSHException: Server 'a.b.c.d' not found in known_hosts\r\nparamiko.transport._log: EOF in transport thread\r\n```\r\n\r\n**with DOCKER_HOST=tcp://127.0.0.1:23750**\r\n```\r\nPS C:\\TEMP> $Env:DOCKER_HOST=\"tcp://127.0.0.1:23750\"\r\nPS C:\\TEMP> docker-compose.exe --verbose --log-level DEBUG down\r\ncompose.config.config.find: Using configuration files: .\\docker-compose.yml\r\ndocker.utils.config.find_config_file: Trying paths: ['C:\\\\Users\\\\user\\\\.docker\\\\config.json', 'C:\\\\Users\\\\user\\\\.dockercfg']\r\ndocker.utils.config.find_config_file: No config file found\r\ndocker.utils.config.find_config_file: Trying paths: ['C:\\\\Users\\\\user\\\\.docker\\\\config.json', 'C:\\\\Users\\\\user\\\\.dockercfg']\r\ndocker.utils.config.find_config_file: No config file found\r\nurllib3.connectionpool._new_conn: Starting new HTTP connection (1): 127.0.0.1:23750\r\nurllib3.connectionpool._make_request: http://127.0.0.1:23750 \"GET /v1.30/version HTTP/1.1\" 200 570\r\ncompose.cli.command.get_client: docker-compose version 1.25.4, build unknown\r\ndocker-py version: 4.1.0\r\nCPython version: 3.7.2\r\nOpenSSL version: OpenSSL 1.1.0j  20 Nov 2018\r\ncompose.cli.command.get_client: Docker base_url: http://127.0.0.1:23750\r\ncompose.cli.command.get_client: Docker version: Platform={'Name': 'Docker Engine - Community'}, Components=[{'Name': 'Engine', 'Version': '18.09.1', 'Details': {'ApiVersion': '1.39', 'Arch': 'amd64', 'BuildTime': '2019-01-09T19:06:30.000000000+00:00', 'Experimental': 'false', 'GitCommit': '4c52b90', 'GoVersion': 'go1.10.6', 'KernelVersion': '3.10.0-957.el7.x86_64', 'MinAPIVersion': '1.12', 'Os': 'linux'}}], Version=18.09.1, ApiVersion=1.39, MinAPIVersion=1.12, GitCommit=4c52b90, GoVersion=go1.10.6, Os=linux, Arch=amd64, KernelVersion=3.10.0-957.el7.x86_64, BuildTime=2019-01-09T19:06:30.000000000+00:00\r\ncompose.cli.verbose_proxy.proxy_callable: docker inspect_network <- ('temp_default')\r\nurllib3.connectionpool._make_request: http://127.0.0.1:23750 \"GET /v1.30/networks/temp_default HTTP/1.1\" 200 553\r\ncompose.cli.verbose_proxy.proxy_callable: docker inspect_network -> {'Attachable': True,\r\n 'ConfigFrom': {'Network': ''},\r\n 'ConfigOnly': False,\r\n 'Containers': {},\r\n 'Created': '2020-03-04T07:11:42.86124979-07:00',\r\n 'Driver': 'bridge',\r\n 'EnableIPv6': False,\r\n 'IPAM': {'Config': [{'Gateway': '192.168.0.1', 'Subnet': '192.168.0.0/20'}],\r\n          'Driver': 'default',\r\n          'Options': None},\r\n...\r\ncompose.cli.verbose_proxy.proxy_callable: docker inspect_volume <- ('temp_app')\r\nurllib3.connectionpool._make_request: http://127.0.0.1:23750 \"GET /v1.30/volumes/temp_app HTTP/1.1\" 200 281\r\ncompose.cli.verbose_proxy.proxy_callable: docker inspect_volume -> {'CreatedAt': '2020-03-04T07:11:43-07:00',\r\n 'Driver': 'local',\r\n 'Labels': {'com.docker.compose.project': 'temp',\r\n            'com.docker.compose.version': '1.25.4',\r\n            'com.docker.compose.volume': 'app'},\r\n 'Mountpoint': '/var/lib/docker/volumes/temp_app/_data',\r\n 'Name': 'temp_app',\r\n 'Options': None,\r\n 'Scope': 'local'}\r\ncompose.cli.verbose_proxy.proxy_callable: docker containers <- (all=False, filters={'label': ['com.docker.compose.project=temp']})\r\nurllib3.connectionpool._make_request: http://127.0.0.1:23750 \"GET /v1.30/containers/json?limit=-1&all=0&size=0&trunc_cmd=0&filters=%7B%22label%22%3A+%5B%22com.docker.compose.project%3Dtemp%22%5D%7D HTTP/1.1\" 200 3\r\ncompose.cli.verbose_proxy.proxy_callable: docker containers -> (list with 0 items)\r\ncompose.cli.verbose_proxy.proxy_callable: docker containers <- (all=False, filters={'label': ['com.docker.compose.project=temp']})\r\nurllib3.connectionpool._make_request: http://127.0.0.1:23750 \"GET /v1.30/containers/json?limit=-1&all=0&size=0&trunc_cmd=0&filters=%7B%22label%22%3A+%5B%22com.docker.compose.project%3Dtemp%22%5D%7D HTTP/1.1\" 200 3\r\ncompose.cli.verbose_proxy.proxy_callable: docker containers -> (list with 0 items)\r\ncompose.parallel.feed_queue: Pending: set()\r\ncompose.cli.verbose_proxy.proxy_callable: docker containers <- (all=False, filters={'label': ['com.docker.compose.project=temp', 'com.docker.compose.oneoff=False']})\r\nurllib3.connectionpool._make_request: http://127.0.0.1:23750 \"GET /v1.30/containers/json?limit=-1&all=0&size=0&trunc_cmd=0&filters=%7B%22label%22%3A+%5B%22com.docker.compose.project%3Dtemp%22%2C+%22com.docker.compose.oneoff%3DFalse%22%5D%7D HTTP/1.1\" 200 3\r\ncompose.cli.verbose_proxy.proxy_callable: docker containers -> (list with 0 items)\r\ncompose.cli.verbose_proxy.proxy_callable: docker containers <- (all=False, filters={'label': ['com.docker.compose.project=temp', 'com.docker.compose.oneoff=False']})\r\nurllib3.connectionpool._make_request: http://127.0.0.1:23750 \"GET /v1.30/containers/json?limit=-1&all=0&size=0&trunc_cmd=0&filters=%7B%22label%22%3A+%5B%22com.docker.compose.project%3Dtemp%22%2C+%22com.docker.compose.oneoff%3DFalse%22%5D%7D HTTP/1.1\" 200 3\r\ncompose.cli.verbose_proxy.proxy_callable: docker containers -> (list with 0 items)\r\ncompose.cli.verbose_proxy.proxy_callable: docker containers <- (all=True, filters={'label': ['com.docker.compose.project=temp', 'com.docker.compose.oneoff=False']})\r\nurllib3.connectionpool._make_request: http://127.0.0.1:23750 \"GET /v1.30/containers/json?limit=-1&all=1&size=0&trunc_cmd=0&filters=%7B%22label%22%3A+%5B%22com.docker.compose.project%3Dtemp%22%2C+%22com.docker.compose.oneoff%3DFalse%22%5D%7D HTTP/1.1\" 200 3\r\ncompose.cli.verbose_proxy.proxy_callable: docker containers -> (list with 0 items)\r\ncompose.cli.verbose_proxy.proxy_callable: docker containers <- (all=True, filters={'label': ['com.docker.compose.project=temp', 'com.docker.compose.oneoff=False']})\r\nurllib3.connectionpool._make_request: http://127.0.0.1:23750 \"GET /v1.30/containers/json?limit=-1&all=1&size=0&trunc_cmd=0&filters=%7B%22label%22%3A+%5B%22com.docker.compose.project%3Dtemp%22%2C+%22com.docker.compose.oneoff%3DFalse%22%5D%7D HTTP/1.1\" 200 3\r\ncompose.cli.verbose_proxy.proxy_callable: docker containers -> (list with 0 items)\r\ncompose.cli.verbose_proxy.proxy_callable: docker containers <- (all=True, filters={'label': ['com.docker.compose.project=temp']})\r\nurllib3.connectionpool._make_request: http://127.0.0.1:23750 \"GET /v1.30/containers/json?limit=-1&all=1&size=0&trunc_cmd=0&filters=%7B%22label%22%3A+%5B%22com.docker.compose.project%3Dtemp%22%5D%7D HTTP/1.1\" 200 3\r\ncompose.cli.verbose_proxy.proxy_callable: docker containers -> (list with 0 items)\r\ncompose.cli.verbose_proxy.proxy_callable: docker containers <- (all=True, filters={'label': ['com.docker.compose.project=temp']})\r\nurllib3.connectionpool._make_request: http://127.0.0.1:23750 \"GET /v1.30/containers/json?limit=-1&all=1&size=0&trunc_cmd=0&filters=%7B%22label%22%3A+%5B%22com.docker.compose.project%3Dtemp%22%5D%7D HTTP/1.1\" 200 3\r\ncompose.cli.verbose_proxy.proxy_callable: docker containers -> (list with 0 items)\r\ncompose.parallel.feed_queue: Pending: set()\r\ncompose.network.remove: Removing network temp_default\r\ncompose.cli.verbose_proxy.proxy_callable: docker remove_network <- ('temp_default')\r\nurllib3.connectionpool._make_request: http://127.0.0.1:23750 \"DELETE /v1.30/networks/temp_default HTTP/1.1\" 204 0\r\ncompose.cli.verbose_proxy.proxy_callable: docker remove_network -> None\r\n```\r\n\r\n\r\n## Additional information\r\n\r\nOS version / distribution, `docker-compose` install method, etc.\r\nWindows 10 10.0.16299.1686\r\ndocker installed via choco package manager\r\ndocker-compose installed via python \"pip install\"\r\n**Output of `ssh -V`**\r\n```\r\nOpenSSH_for_Windows_8.0p1, LibreSSL 2.6.5\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7265", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7265/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7265/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7265/events", "html_url": "https://github.com/docker/compose/issues/7265", "id": 574488562, "node_id": "MDU6SXNzdWU1NzQ0ODg1NjI=", "number": 7265, "title": "User namespace remap issues with docker compose", "user": {"login": "sirishkumar", "id": 27522, "node_id": "MDQ6VXNlcjI3NTIy", "avatar_url": "https://avatars1.githubusercontent.com/u/27522?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sirishkumar", "html_url": "https://github.com/sirishkumar", "followers_url": "https://api.github.com/users/sirishkumar/followers", "following_url": "https://api.github.com/users/sirishkumar/following{/other_user}", "gists_url": "https://api.github.com/users/sirishkumar/gists{/gist_id}", "starred_url": "https://api.github.com/users/sirishkumar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sirishkumar/subscriptions", "organizations_url": "https://api.github.com/users/sirishkumar/orgs", "repos_url": "https://api.github.com/users/sirishkumar/repos", "events_url": "https://api.github.com/users/sirishkumar/events{/privacy}", "received_events_url": "https://api.github.com/users/sirishkumar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-03T08:09:08Z", "updated_at": "2020-03-03T10:38:41Z", "closed_at": "2020-03-03T10:38:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "#  Description of the issue\r\nDocker compose build fails with with userns remapping enabled with UID's larger than 65535 on host machine.\r\n\r\n```\r\nERROR: Service 'test' failed to build: failed to copy files: failed to copy file: Container ID 65536 cannot be mapped to a host ID\r\n```\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.17.1, build unknown\r\ndocker-py version: 2.5.1\r\nCPython version: 2.7.17\r\nOpenSSL version: OpenSSL 1.1.1  11 Sep 2018\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient:\r\n Version:           18.09.7\r\n API version:       1.39\r\n Go version:        go1.10.1\r\n Git commit:        2d0083d\r\n Built:             Fri Aug 16 14:20:06 2019\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer:\r\n Engine:\r\n  Version:          18.09.7\r\n  API version:      1.39 (minimum version 1.12)\r\n  Go version:       go1.10.1\r\n  Git commit:       2d0083d\r\n  Built:            Wed Aug 14 19:41:23 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\nservices:\r\n  test:\r\n    build:\r\n      context: /home/test/test\r\n      dockerfile: Dockerfile\r\n    command: /bin/sh\r\nversion: '2.0'\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\nFiles relevant for this issue are copied to https://github.com/sirishkumar/docker-compose-build-issues.git\r\n\r\n1.  Create a linux user(test) with UID greater than 65535(i tried 65536), run following commands with this user.\r\n2.  Enable user namespace mapping for docker as described here https://docs.docker.com/engine/security/userns-remap/\r\n3.  Enable userns-remap for the above user with mapping \r\n```\r\ntest:231072:65536\r\n```\r\n3.  Run \"docker-compose up --build \"\r\n4.  Build fails with below message\r\n\r\n\r\n### Observed result\r\n```\r\nERROR: Service 'test' failed to build: failed to copy files: failed to copy file: Container ID 65536 cannot be mapped to a host ID\r\n```\r\n\r\n### Expected result\r\nBuild should be successful. When I tried rebuilding using docker with the Dokcer file it builds succesfully\r\n\r\n```\r\ndb@vagrant:~/docker$ docker build -t sirishkumar/test .\r\nSending build context to Docker daemon  3.584kB\r\nStep 1/3 : FROM alpine:latest\r\nlatest: Pulling from library/alpine\r\nc9b1b535fdd9: Pull complete\r\nDigest: sha256:ab00606a42621fb68f2ed6ad3c88be54397f981a7b70a79db3d1172b11c4367d\r\nStatus: Downloaded newer image for alpine:latest\r\n ---> e7d92cdc71fe\r\nStep 2/3 : WORKDIR /app\r\n ---> Running in 55f092b96268\r\nRemoving intermediate container 55f092b96268\r\n ---> 8af079e6a478\r\nStep 3/3 : COPY 1.txt .\r\n ---> b3c14a691102\r\nSuccessfully built b3c14a691102\r\nSuccessfully tagged sirishkumar/test:latest\r\n```\r\n\r\n### Stacktrace / full error message\r\n\r\n```\r\ndb@vagrant:~/docker$ docker-compose up --build\r\nCreating network \"docker_default\" with the default driver\r\nBuilding db\r\nStep 1/3 : FROM alpine:latest\r\nlatest: Pulling from library/alpine\r\nc9b1b535fdd9: Pull complete\r\nDigest: sha256:ab00606a42621fb68f2ed6ad3c88be54397f981a7b70a79db3d1172b11c4367d\r\nStatus: Downloaded newer image for alpine:latest\r\n ---> e7d92cdc71fe\r\nStep 2/3 : WORKDIR /app\r\n ---> Running in fe39955aed1a\r\nRemoving intermediate container fe39955aed1a\r\n ---> fb23b8888f4a\r\nStep 3/3 : COPY 1.txt .\r\nERROR: Service 'db' failed to build: failed to copy files: failed to copy file: Container ID 65536 cannot be mapped to a host ID\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7249", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7249/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7249/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7249/events", "html_url": "https://github.com/docker/compose/issues/7249", "id": 571149947, "node_id": "MDU6SXNzdWU1NzExNDk5NDc=", "number": 7249, "title": "docker-compose", "user": {"login": "bitixft", "id": 29671474, "node_id": "MDQ6VXNlcjI5NjcxNDc0", "avatar_url": "https://avatars1.githubusercontent.com/u/29671474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitixft", "html_url": "https://github.com/bitixft", "followers_url": "https://api.github.com/users/bitixft/followers", "following_url": "https://api.github.com/users/bitixft/following{/other_user}", "gists_url": "https://api.github.com/users/bitixft/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitixft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitixft/subscriptions", "organizations_url": "https://api.github.com/users/bitixft/orgs", "repos_url": "https://api.github.com/users/bitixft/repos", "events_url": "https://api.github.com/users/bitixft/events{/privacy}", "received_events_url": "https://api.github.com/users/bitixft/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-26T08:25:24Z", "updated_at": "2020-02-27T10:04:44Z", "closed_at": "2020-02-27T10:04:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\n(paste here)\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\n(paste here)\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\n(paste here)\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\n1.\r\n2.\r\n3.\r\n\r\n### Observed result\r\n\r\n### Expected result\r\n\r\n### Stacktrace / full error message\r\n\r\n```\r\n(paste here)\r\n```\r\n\r\n## Additional information\r\n\r\nOS version / distribution, `docker-compose` install method, etc.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7245", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7245/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7245/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7245/events", "html_url": "https://github.com/docker/compose/issues/7245", "id": 569314241, "node_id": "MDU6SXNzdWU1NjkzMTQyNDE=", "number": 7245, "title": "your jenkins is dead", "user": {"login": "JOduMonT", "id": 5204724, "node_id": "MDQ6VXNlcjUyMDQ3MjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5204724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JOduMonT", "html_url": "https://github.com/JOduMonT", "followers_url": "https://api.github.com/users/JOduMonT/followers", "following_url": "https://api.github.com/users/JOduMonT/following{/other_user}", "gists_url": "https://api.github.com/users/JOduMonT/gists{/gist_id}", "starred_url": "https://api.github.com/users/JOduMonT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JOduMonT/subscriptions", "organizations_url": "https://api.github.com/users/JOduMonT/orgs", "repos_url": "https://api.github.com/users/JOduMonT/repos", "events_url": "https://api.github.com/users/JOduMonT/events{/privacy}", "received_events_url": "https://api.github.com/users/JOduMonT/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-22T10:19:34Z", "updated_at": "2020-02-27T17:15:44Z", "closed_at": "2020-02-27T17:15:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://jenkins.dockerproject.org/job/docker/job/compose/job/master/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7242", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7242/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7242/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7242/events", "html_url": "https://github.com/docker/compose/issues/7242", "id": 567890829, "node_id": "MDU6SXNzdWU1Njc4OTA4Mjk=", "number": 7242, "title": "docker-compose with buildkit does not insert container labels", "user": {"login": "sanderegg", "id": 35365065, "node_id": "MDQ6VXNlcjM1MzY1MDY1", "avatar_url": "https://avatars2.githubusercontent.com/u/35365065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanderegg", "html_url": "https://github.com/sanderegg", "followers_url": "https://api.github.com/users/sanderegg/followers", "following_url": "https://api.github.com/users/sanderegg/following{/other_user}", "gists_url": "https://api.github.com/users/sanderegg/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanderegg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanderegg/subscriptions", "organizations_url": "https://api.github.com/users/sanderegg/orgs", "repos_url": "https://api.github.com/users/sanderegg/repos", "events_url": "https://api.github.com/users/sanderegg/events{/privacy}", "received_events_url": "https://api.github.com/users/sanderegg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ulyssessouza", "id": 373485, "node_id": "MDQ6VXNlcjM3MzQ4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/373485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulyssessouza", "html_url": "https://github.com/ulyssessouza", "followers_url": "https://api.github.com/users/ulyssessouza/followers", "following_url": "https://api.github.com/users/ulyssessouza/following{/other_user}", "gists_url": "https://api.github.com/users/ulyssessouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulyssessouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulyssessouza/subscriptions", "organizations_url": "https://api.github.com/users/ulyssessouza/orgs", "repos_url": "https://api.github.com/users/ulyssessouza/repos", "events_url": "https://api.github.com/users/ulyssessouza/events{/privacy}", "received_events_url": "https://api.github.com/users/ulyssessouza/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ulyssessouza", "id": 373485, "node_id": "MDQ6VXNlcjM3MzQ4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/373485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulyssessouza", "html_url": "https://github.com/ulyssessouza", "followers_url": "https://api.github.com/users/ulyssessouza/followers", "following_url": "https://api.github.com/users/ulyssessouza/following{/other_user}", "gists_url": "https://api.github.com/users/ulyssessouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulyssessouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulyssessouza/subscriptions", "organizations_url": "https://api.github.com/users/ulyssessouza/orgs", "repos_url": "https://api.github.com/users/ulyssessouza/repos", "events_url": "https://api.github.com/users/ulyssessouza/events{/privacy}", "received_events_url": "https://api.github.com/users/ulyssessouza/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-02-19T22:34:33Z", "updated_at": "2020-03-31T01:01:28Z", "closed_at": "2020-03-31T01:01:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\nusing the example from [https://docs.docker.com/compose/gettingstarted/](https://docs.docker.com/compose/gettingstarted/) with a modified compose file using in particular ```version: '3.7'``` and adding some labels in the ```build``` such as my compose file looks like this:\r\n```\r\nversion: '3.7'\r\nservices:\r\n  web:\r\n    build: \r\n      context: ./\r\n      labels:\r\n        some_label: \"I am the label\"\r\n    ports:\r\n      - \"5000:5000\"    \r\n  redis:\r\n    image: \"redis:alpine\"\r\n```\r\nBasically in normal mode everything works well and the labels are added to the docker image.\r\nIn buildkit mode (with both DOCKER_BUILDKIT=1 and COMPOSE_DOCKER_CLI_BUILD=1) the labels are nowhere.\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.25.3, build d4d1b42b\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.5\r\n API version:       1.40\r\n Go version:        go1.12.12\r\n Git commit:        633a0ea838\r\n Built:             Wed Nov 13 07:29:52 2019\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.5\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.12\r\n  Git commit:       633a0ea838\r\n  Built:            Wed Nov 13 07:28:22 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     true\r\n containerd:\r\n  Version:          1.2.10\r\n  GitCommit:        b34a5c8af56e510852c35414db4c1f4fa6172339\r\n runc:\r\n  Version:          1.0.0-rc8+dev\r\n  GitCommit:        3e425f80a8c931f88e6d94a8c831b9d5aa481657\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\nservices:\r\n  redis:\r\n    image: redis:alpine\r\n  web:\r\n    build:\r\n      context: /home/sanderegg/dev/github/cookiecutter-osparc-service/test\r\n      labels:\r\n        some_label: I am a label\r\n    ports:\r\n    - published: 5000\r\n      target: 5000\r\nversion: '3.7'\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. set-up he example as in [https://docs.docker.com/compose/gettingstarted/](https://docs.docker.com/compose/gettingstarted/)\r\n2. modify the docker-compose file as above\r\n3. enable docker buildkit and compose\r\n4. ```\r\ndocker-compose -f docker-compose.yml build\r\ndocker inspect test_web\r\n```\r\n\r\n### Observed result\r\nno labels when buildkit is enabled, labels present when compose buildkit is disabled.\r\n\r\n### Expected result\r\nlabels should be there in both cases\r\n\r\n### Stacktrace / full error message\r\n\r\n```\r\n(paste here)\r\n```\r\n\r\n## Additional information\r\nubuntu disco\r\nOS version / distribution, `docker-compose` install method, etc.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7241", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7241/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7241/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7241/events", "html_url": "https://github.com/docker/compose/issues/7241", "id": 567705482, "node_id": "MDU6SXNzdWU1Njc3MDU0ODI=", "number": 7241, "title": "Virus Detected - v1.25.4", "user": {"login": "laurin1", "id": 75857, "node_id": "MDQ6VXNlcjc1ODU3", "avatar_url": "https://avatars3.githubusercontent.com/u/75857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laurin1", "html_url": "https://github.com/laurin1", "followers_url": "https://api.github.com/users/laurin1/followers", "following_url": "https://api.github.com/users/laurin1/following{/other_user}", "gists_url": "https://api.github.com/users/laurin1/gists{/gist_id}", "starred_url": "https://api.github.com/users/laurin1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laurin1/subscriptions", "organizations_url": "https://api.github.com/users/laurin1/orgs", "repos_url": "https://api.github.com/users/laurin1/repos", "events_url": "https://api.github.com/users/laurin1/events{/privacy}", "received_events_url": "https://api.github.com/users/laurin1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-19T17:08:21Z", "updated_at": "2020-02-26T18:45:44Z", "closed_at": "2020-02-20T10:09:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://www.virustotal.com/gui/file/941705af6c3676ef17f1fa6726019c09efa0ad785174afda439eed8b794c36db/detection\r\n\r\n![image](https://user-images.githubusercontent.com/75857/74856664-19728200-5308-11ea-9b39-33be564ff295.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7236", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7236/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7236/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7236/events", "html_url": "https://github.com/docker/compose/issues/7236", "id": 566131491, "node_id": "MDU6SXNzdWU1NjYxMzE0OTE=", "number": 7236, "title": "\"docker-compose up\" fail. because in \".dockerignore\" have special word \"\u82f1\u6587\" (UnicodeDecodeError)", "user": {"login": "we684123", "id": 22027801, "node_id": "MDQ6VXNlcjIyMDI3ODAx", "avatar_url": "https://avatars2.githubusercontent.com/u/22027801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/we684123", "html_url": "https://github.com/we684123", "followers_url": "https://api.github.com/users/we684123/followers", "following_url": "https://api.github.com/users/we684123/following{/other_user}", "gists_url": "https://api.github.com/users/we684123/gists{/gist_id}", "starred_url": "https://api.github.com/users/we684123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/we684123/subscriptions", "organizations_url": "https://api.github.com/users/we684123/orgs", "repos_url": "https://api.github.com/users/we684123/repos", "events_url": "https://api.github.com/users/we684123/events{/privacy}", "received_events_url": "https://api.github.com/users/we684123/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}, {"id": 1605014784, "node_id": "MDU6TGFiZWwxNjA1MDE0Nzg0", "url": "https://api.github.com/repos/docker/compose/labels/stale", "name": "stale", "color": "7be0b8", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-17T08:22:40Z", "updated_at": "2020-08-16T12:24:37Z", "closed_at": "2020-08-16T12:24:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\n\"docker-compose up\" fail. because in \".dockerignore\" have special word \"\u82f1\u6587\" (UnicodeDecodeError)\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.25.4, build 8d51620a\r\ndocker-py version: 4.1.0\r\nCPython version: 3.7.4\r\nOpenSSL version: OpenSSL 1.1.1c  28 May 2019\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.5\r\n API version:       1.40\r\n Go version:        go1.12.12\r\n Git commit:        633a0ea\r\n Built:             Wed Nov 13 07:22:37 2019\r\n OS/Arch:           windows/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.5\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.12\r\n  Git commit:       633a0ea\r\n  Built:            Wed Nov 13 07:29:19 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          v1.2.10\r\n  GitCommit:        b34a5c8af56e510852c35414db4c1f4fa6172339\r\n runc:\r\n  Version:          1.0.0-rc8+dev\r\n  GitCommit:        3e425f80a8c931f88e6d94a8c831b9d5aa481657\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\nservices:\r\n  app:\r\n    build:\r\n      context: C:\\Users\\win10\\Dropbox\\Github\\TGbot\r\n    ports:\r\n    - 5984:5984/tcp\r\n    volumes:\r\n    - C:\\Users\\win10\\Dropbox\\Github\\TGbot\\data\\logs:/app/logs:rw\r\n    - C:\\Users\\win10\\Dropbox\\Github\\TGbot\\data\\excel:/app/excel:rw\r\nversion: '3.0'\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. clear all image\r\n2. creat a folder and add 4 file \"app.py\"\u3001\"Dockerfile\"\u3001\"docker-compose.yml\"\u3001\".dockerignore\"\r\n\r\n\r\n#### app.py\r\n```\r\nfrom flask import Flask\r\nfrom redis import Redis\r\n\r\napp = Flask(__name__)\r\nredis = Redis(host='redis', port=6379)\r\n\r\n@app.route('/')\r\ndef hello():\r\n    count = redis.incr('hits')\r\n    return 'Hello World! \u8be5\u9875\u9762\u5df2\u88ab\u8bbf\u95ee {} \u6b21\u3002\\n'.format(count)\r\n\r\nif __name__ == \"__main__\":\r\n    app.run(host=\"0.0.0.0\", debug=True)\r\n```\r\n\r\n#### Dockerfile\r\n```\r\nFROM python:3.6-alpine\r\nADD . /code\r\nWORKDIR /code\r\nRUN pip install redis flask\r\nCMD [\"python\", \"app.py\"]\r\n\r\n```\r\n\r\n#### docker-compose.yml\r\n```\r\nversion: '3'\r\nservices:\r\n\r\n  web:\r\n    build: .\r\n    ports:\r\n     - \"5000:5000\"\r\n\r\n  redis:\r\n    image: \"redis:alpine\"\r\n\r\n```\r\n#### .dockerignore\r\n```\r\n\u82f1\u6587QA bot.docx\r\nTelegram Bot FQA.docx\r\nREADME.md\r\ndebug.xlsx\r\n.gitignore\r\ntest\r\n```\r\n\r\n3. use win10 cmd execution \"docker-compose up\"\r\n\r\n### Observed result\r\nis not work , but if i remove \"\u82f1\u6587QA bot.docx\" (in  .dockerignore file) , is ok\r\n### Expected result\r\nNormal execution\r\n### Stacktrace / full error message\r\n\r\n```\r\nBuilding tgbot\r\nTraceback (most recent call last):\r\n  File \"docker-compose\", line 6, in <module>\r\n  File \"compose\\cli\\main.py\", line 72, in main\r\n  File \"compose\\cli\\main.py\", line 128, in perform_command\r\n  File \"compose\\cli\\main.py\", line 1077, in up\r\n  File \"compose\\cli\\main.py\", line 1073, in up\r\n  File \"compose\\project.py\", line 548, in up\r\n  File \"compose\\service.py\", line 367, in ensure_image_exists\r\n  File \"compose\\service.py\", line 1106, in build\r\n  File \"site-packages\\docker\\api\\build.py\", line 156, in build\r\nUnicodeDecodeError: 'cp950' codec can't decode byte 0xe8 in position 0: illegal multibyte sequence\r\n[5880] Failed to execute script docker-compose\r\n```\r\n\r\n## Additional information\r\n\r\nOS version / distribution, `docker-compose` install method, etc.\r\nwin10  edu 1903\r\ndocker desktop 2.2.0.3", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7234", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7234/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7234/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7234/events", "html_url": "https://github.com/docker/compose/issues/7234", "id": 565304698, "node_id": "MDU6SXNzdWU1NjUzMDQ2OTg=", "number": 7234, "title": "Plesae provide SHA-256 sum for compose releases. 1.25.3 and 1.25.4 have no SHA-256 sum on the release notes pages anymore.", "user": {"login": "svenlange", "id": 18890, "node_id": "MDQ6VXNlcjE4ODkw", "avatar_url": "https://avatars3.githubusercontent.com/u/18890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svenlange", "html_url": "https://github.com/svenlange", "followers_url": "https://api.github.com/users/svenlange/followers", "following_url": "https://api.github.com/users/svenlange/following{/other_user}", "gists_url": "https://api.github.com/users/svenlange/gists{/gist_id}", "starred_url": "https://api.github.com/users/svenlange/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svenlange/subscriptions", "organizations_url": "https://api.github.com/users/svenlange/orgs", "repos_url": "https://api.github.com/users/svenlange/repos", "events_url": "https://api.github.com/users/svenlange/events{/privacy}", "received_events_url": "https://api.github.com/users/svenlange/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777239, "node_id": "MDU6TGFiZWw2OTc3NzIzOQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-14T12:42:28Z", "updated_at": "2020-02-18T09:38:56Z", "closed_at": "2020-02-18T08:04:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Plesae provide SHA-256 sum for compose releases. 1.25.3 and 1.25.4 have no SHA-256 sum on the release notes pages anymore.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7232", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7232/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7232/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7232/events", "html_url": "https://github.com/docker/compose/issues/7232", "id": 564872285, "node_id": "MDU6SXNzdWU1NjQ4NzIyODU=", "number": 7232, "title": "Environment variables not being picked up by docker-compose", "user": {"login": "TAGC", "id": 1588951, "node_id": "MDQ6VXNlcjE1ODg5NTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1588951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TAGC", "html_url": "https://github.com/TAGC", "followers_url": "https://api.github.com/users/TAGC/followers", "following_url": "https://api.github.com/users/TAGC/following{/other_user}", "gists_url": "https://api.github.com/users/TAGC/gists{/gist_id}", "starred_url": "https://api.github.com/users/TAGC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TAGC/subscriptions", "organizations_url": "https://api.github.com/users/TAGC/orgs", "repos_url": "https://api.github.com/users/TAGC/repos", "events_url": "https://api.github.com/users/TAGC/events{/privacy}", "received_events_url": "https://api.github.com/users/TAGC/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-13T18:31:19Z", "updated_at": "2020-02-14T13:17:54Z", "closed_at": "2020-02-14T11:30:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\n\r\nEnvironment variables specified for services defined in `docker-compose.yml` aren't appearing in the docker containers at run-time.\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.24.1, build 4667896b\r\ndocker-py version: 3.7.3\r\nCPython version: 3.6.8\r\nOpenSSL version: OpenSSL 1.0.2q  20 Nov 2018\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.5\r\n API version:       1.40\r\n Go version:        go1.12.12\r\n Git commit:        633a0ea\r\n Built:             Wed Nov 13 07:22:37 2019\r\n OS/Arch:           windows/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.5\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.12\r\n  Git commit:       633a0ea\r\n  Built:            Wed Nov 13 07:29:19 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          v1.2.10\r\n  GitCommit:        b34a5c8af56e510852c35414db4c1f4fa6172339\r\n runc:\r\n  Version:          1.0.0-rc8+dev\r\n  GitCommit:        3e425f80a8c931f88e6d94a8c831b9d5aa481657\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\nservices:\r\n  api:\r\n    build:\r\n      context: C:\\Projects\\order-status\\api\r\n    environment:\r\n      ASPNETCORE_ENVIRONMENT: '\"Test\"'\r\n    expose:\r\n    - '80'\r\n  ui:\r\n    build:\r\n      context: C:\\Projects\\order-status\\ui\r\n    depends_on:\r\n    - api\r\n    environment:\r\n      REACT_APP_SERVER_BASE_URL: http://api\r\n    ports:\r\n    - 3000:80/tcp\r\nversion: '3.0'\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. Build services using `docker-compose build`.\r\n2. Run one of the services using `docker run` and specifying the entrypoint to be \"bash\"\r\n3. Run `echo $<<EXPECTED_ENVIRONMENT_VARIABLE`\r\n\r\n### Observed result\r\n\r\nThe values specified for the environment variables aren't output.\r\n\r\n### Expected result\r\n\r\nThe environment variables defined in the `environment` section should be output.\r\n\r\n## Additional information\r\n\r\nOS: Windows 10 x64\r\nDocker compose installed via Docker Desktop.\r\n\r\nOS version / distribution, `docker-compose` install method, etc.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7231", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7231/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7231/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7231/events", "html_url": "https://github.com/docker/compose/issues/7231", "id": 564631683, "node_id": "MDU6SXNzdWU1NjQ2MzE2ODM=", "number": 7231, "title": "Being able to override `build` with `image`", "user": {"login": "augnustin", "id": 1970156, "node_id": "MDQ6VXNlcjE5NzAxNTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1970156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/augnustin", "html_url": "https://github.com/augnustin", "followers_url": "https://api.github.com/users/augnustin/followers", "following_url": "https://api.github.com/users/augnustin/following{/other_user}", "gists_url": "https://api.github.com/users/augnustin/gists{/gist_id}", "starred_url": "https://api.github.com/users/augnustin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/augnustin/subscriptions", "organizations_url": "https://api.github.com/users/augnustin/orgs", "repos_url": "https://api.github.com/users/augnustin/repos", "events_url": "https://api.github.com/users/augnustin/events{/privacy}", "received_events_url": "https://api.github.com/users/augnustin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 153640415, "node_id": "MDU6TGFiZWwxNTM2NDA0MTU=", "url": "https://api.github.com/repos/docker/compose/labels/kind/feature", "name": "kind/feature", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-13T11:51:07Z", "updated_at": "2020-02-27T11:25:38Z", "closed_at": "2020-02-27T11:25:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n-->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n\r\nSay I have this `docker-compose.yml`:\r\n\r\n```\r\nservices:\r\n  app:\r\n    build: .\r\n```\r\n\r\nAnd I want to override the `build` value with an image. \r\n\r\nWith `docker-compose.override.yml` having:\r\n\r\n```\r\nservices:\r\n  app:\r\n    image: my_repo/my_app:my_tag\r\n```\r\n\r\nThe merge results:\r\n\r\n```\r\nservices:\r\n  app:\r\n    build: .\r\n    image: my_repo/my_app:my_tag\r\n```\r\n\r\nAnd it is the `image` entry which is ignored. \r\n\r\n**Describe the solution you'd like**\r\n\r\nIf a value like `build: NONE` was allowed in the override it would work, without having to change priorities. Just like for the `healthcheck CMD` entry.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nOne can work around by having separated `docker-compose.environment.yml` but then behavior is not default and doesn't work out-of-box.\r\n\r\n**Additional context**\r\n\r\nIn general, it could make sense that `docker-compose` ignores all `NONE` values in its config to make sure any value can be removed by overriding.\r\n\r\nBesides, this is pretty much backward compatible so it should not be a big issue for current users.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7229", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7229/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7229/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7229/events", "html_url": "https://github.com/docker/compose/issues/7229", "id": 563341418, "node_id": "MDU6SXNzdWU1NjMzNDE0MTg=", "number": 7229, "title": "Logs encoding corrupted when run service in detached mode with tty:true and then up all services.", "user": {"login": "AntonOvsyannikov", "id": 31636386, "node_id": "MDQ6VXNlcjMxNjM2Mzg2", "avatar_url": "https://avatars1.githubusercontent.com/u/31636386?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AntonOvsyannikov", "html_url": "https://github.com/AntonOvsyannikov", "followers_url": "https://api.github.com/users/AntonOvsyannikov/followers", "following_url": "https://api.github.com/users/AntonOvsyannikov/following{/other_user}", "gists_url": "https://api.github.com/users/AntonOvsyannikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/AntonOvsyannikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AntonOvsyannikov/subscriptions", "organizations_url": "https://api.github.com/users/AntonOvsyannikov/orgs", "repos_url": "https://api.github.com/users/AntonOvsyannikov/repos", "events_url": "https://api.github.com/users/AntonOvsyannikov/events{/privacy}", "received_events_url": "https://api.github.com/users/AntonOvsyannikov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1605014784, "node_id": "MDU6TGFiZWwxNjA1MDE0Nzg0", "url": "https://api.github.com/repos/docker/compose/labels/stale", "name": "stale", "color": "7be0b8", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-11T16:54:16Z", "updated_at": "2020-08-16T18:15:02Z", "closed_at": "2020-08-16T18:15:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description of the issue\r\nI have 2 services, both tty:true, printing some utf-8 encoded string infinitely.\r\n\r\n```\r\nversion: '3.4'\r\nservices:\r\n  main1:\r\n    tty: true\r\n    image: ubuntu:18.04\r\n    command: /bin/bash -c \"while :; do echo \u043f\u0440\u0435\u0432\u0435\u0434; sleep 1; done\"\r\n  main2:\r\n    tty: true\r\n    image: ubuntu:18.04\r\n    command: /bin/bash -c \"while :; do echo \u043f\u0440\u0435\u0432\u0435\u0434; sleep 1; done\"\r\n```\r\n\r\nWhen I start both services with `docker-compose up` everything seems ok.\r\n\r\n```\r\nmain1_1  | \u043f\u0440\u0435\u0432\u0435\u0434\r\nmain2_1  | \u043f\u0440\u0435\u0432\u0435\u0434\r\nmain2_1  | \u043f\u0440\u0435\u0432\u0435\u0434\r\nmain1_1  | \u043f\u0440\u0435\u0432\u0435\u0434\r\nmain2_1  | \u043f\u0440\u0435\u0432\u0435\u0434\r\n```\r\n\r\nBut if I start one service in detached mode first and then  do `docker-compose up` the output of services which was started in detached mode is corrupted:\r\n\r\n```\r\n$ docker-compose up -d main1\r\nCreating network \"compose-bug_default\" with the default driver\r\nCreating compose-bug_main1_1 ... done\r\n$ docker-compose up \r\ncompose-bug_main1_1 is up-to-date\r\nCreating compose-bug_main2_1 ... done\r\nAttaching to compose-bug_main1_1, compose-bug_main2_1\r\nmain2_1  | \u043f\u0440\u0435\u0432\u0435\u0434\r\nmain1_1  | \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\r\nmain1_1  | \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\r\nmain1_1  | \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\r\nmain1_1  | \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\r\nmain2_1  | \u043f\u0440\u0435\u0432\u0435\u0434\r\nmain1_1  | \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\r\nmain2_1  | \u043f\u0440\u0435\u0432\u0435\u0434\r\n```\r\n\r\n```\r\n$ docker-compose version\r\ndocker-compose version 1.25.4, build 8d51620a\r\ndocker-py version: 4.1.0\r\nCPython version: 3.7.5\r\nOpenSSL version: OpenSSL 1.1.1d  10 Sep 2019```\r\n```\r\n\r\n```\r\n$ docker version\r\nClient: Docker Engine - Community\r\n Version:           19.03.5\r\n API version:       1.40\r\n Go version:        go1.12.12\r\n Git commit:        633a0ea\r\n Built:             Wed Nov 13 07:22:34 2019\r\n OS/Arch:           darwin/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.5\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.12\r\n  Git commit:       633a0ea\r\n  Built:            Wed Nov 13 07:29:19 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          v1.2.10\r\n  GitCommit:        b34a5c8af56e510852c35414db4c1f4fa6172339\r\n runc:\r\n  Version:          1.0.0-rc8+dev\r\n  GitCommit:        3e425f80a8c931f88e6d94a8c831b9d5aa481657\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n```\r\n$docker-compose config\r\nservices:\r\n  main1:\r\n    command: /bin/bash -c \"while :; do echo \u043f\u0440\u0435\u0432\u0435\u0434; sleep 1; done\"\r\n    image: ubuntu:18.04\r\n    tty: true\r\n  main2:\r\n    command: /bin/bash -c \"while :; do echo \u043f\u0440\u0435\u0432\u0435\u0434; sleep 1; done\"\r\n    image: ubuntu:18.04\r\n    tty: true\r\nversion: '3.4'\r\n\r\n```\r\n\r\n```\r\n$ sw_vers\r\nProductName:\tMac OS X\r\nProductVersion:\t10.14.6\r\nBuildVersion:\t18G2022\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7228", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7228/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7228/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7228/events", "html_url": "https://github.com/docker/compose/issues/7228", "id": 563246762, "node_id": "MDU6SXNzdWU1NjMyNDY3NjI=", "number": 7228, "title": "container not found if multiple instance have been created in the past", "user": {"login": "augnustin", "id": 1970156, "node_id": "MDQ6VXNlcjE5NzAxNTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1970156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/augnustin", "html_url": "https://github.com/augnustin", "followers_url": "https://api.github.com/users/augnustin/followers", "following_url": "https://api.github.com/users/augnustin/following{/other_user}", "gists_url": "https://api.github.com/users/augnustin/gists{/gist_id}", "starred_url": "https://api.github.com/users/augnustin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/augnustin/subscriptions", "organizations_url": "https://api.github.com/users/augnustin/orgs", "repos_url": "https://api.github.com/users/augnustin/repos", "events_url": "https://api.github.com/users/augnustin/events{/privacy}", "received_events_url": "https://api.github.com/users/augnustin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}, {"id": 1605014784, "node_id": "MDU6TGFiZWwxNjA1MDE0Nzg0", "url": "https://api.github.com/repos/docker/compose/labels/stale", "name": "stale", "color": "7be0b8", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-11T14:32:32Z", "updated_at": "2020-08-16T15:15:02Z", "closed_at": "2020-08-16T15:15:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description of the issue\r\n\r\nI have several services in my docker-compose config. One of them is called `phoenix`.\r\n\r\nIt is actually running with `docker-compose up`:\r\n\r\n```\r\n      Name                    Command                 State                        Ports                 \r\n---------------------------------------------------------------------------------------------------------\r\napp_phoenix_4    mix phx.server                  Up (healthy)                                          \r\n```\r\n\r\nBut it is called `app_phoenix_4` because I have been using previously: \r\n\r\n```\r\ndocker-compose up -d --no-deps --scale phoenix=2 --no-recreate phoenix\r\n```\r\n\r\nAnd when I do:\r\n\r\n```\r\ndocker-compose exec phoenix bash\r\nERROR: No container found for phoenix_1\r\n```\r\n\r\nWhile it should exec `app_phoenix_4`, which is `Up` and `healthy`!\r\n\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose --version              \r\ndocker-compose version 1.23.2, build 1110ad01\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\ndocker --version\r\nDocker version 19.03.5, build 633a0ea838\r\n```\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. `docker-compose up`\r\n2. `docker-compose up -d --no-deps --scale phoenix=2 --no-recreate phoenix`\r\n3. `docker-compose exec phoenix bash`\r\n\r\n### Observed result\r\n\r\n```\r\nERROR: No container found for phoenix_1\r\n```\r\n\r\n### Expected result\r\n\r\n```\r\nbash session \r\n```\r\n\r\n## Additional information\r\n\r\nThis might be related to https://github.com/docker/compose/issues/6549 but this is definitely not the same.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7222", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7222/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7222/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7222/events", "html_url": "https://github.com/docker/compose/issues/7222", "id": 562312575, "node_id": "MDU6SXNzdWU1NjIzMTI1NzU=", "number": 7222, "title": "`up` does not build dependent image provided by other service", "user": {"login": "dms-cat", "id": 45862333, "node_id": "MDQ6VXNlcjQ1ODYyMzMz", "avatar_url": "https://avatars1.githubusercontent.com/u/45862333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dms-cat", "html_url": "https://github.com/dms-cat", "followers_url": "https://api.github.com/users/dms-cat/followers", "following_url": "https://api.github.com/users/dms-cat/following{/other_user}", "gists_url": "https://api.github.com/users/dms-cat/gists{/gist_id}", "starred_url": "https://api.github.com/users/dms-cat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dms-cat/subscriptions", "organizations_url": "https://api.github.com/users/dms-cat/orgs", "repos_url": "https://api.github.com/users/dms-cat/repos", "events_url": "https://api.github.com/users/dms-cat/events{/privacy}", "received_events_url": "https://api.github.com/users/dms-cat/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 153640415, "node_id": "MDU6TGFiZWwxNTM2NDA0MTU=", "url": "https://api.github.com/repos/docker/compose/labels/kind/feature", "name": "kind/feature", "color": "bfd4f2", "default": false, "description": null}, {"id": 69777239, "node_id": "MDU6TGFiZWw2OTc3NzIzOQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-02-10T04:09:42Z", "updated_at": "2020-02-11T20:10:28Z", "closed_at": "2020-02-11T08:32:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description of the issue\r\n\r\nI can't start a service which depends on the image of another service without manually building the other service first.\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.24.0, build 0aa5906\r\ndocker-py version: 3.7.3\r\nCPython version: 3.6.9\r\nOpenSSL version: OpenSSL 1.1.1  11 Sep 2018\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.5\r\n API version:       1.40\r\n Go version:        go1.12.12\r\n Git commit:        633a0ea838\r\n Built:             Wed Nov 13 07:29:52 2019\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.5\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.12\r\n  Git commit:       633a0ea838\r\n  Built:            Wed Nov 13 07:28:22 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.2.10\r\n  GitCommit:        b34a5c8af56e510852c35414db4c1f4fa6172339\r\n runc:\r\n  Version:          1.0.0-rc8+dev\r\n  GitCommit:        3e425f80a8c931f88e6d94a8c831b9d5aa481657\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n```\r\nservices:\r\n  child:\r\n    image: test_parent:latest\r\n  parent:\r\n    build:\r\n      context: /home/username/test\r\nversion: '3.5'\r\n```\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. `docker-compose up child`\r\n\r\n### Observed result\r\n\r\n```text\r\nCreating network \"test_default\" with the default driver\r\nPulling child (test_parent:latest)...\r\nERROR: The image for the service you're trying to recreate has been removed. If you continue, volume data could be lost. Consider backing up your data before continuing.\r\n\r\nContinue with the new image? [yN]\r\nERROR: pull access denied for test_parent, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\r\n```\r\n\r\n### Expected result\r\n\r\nIt should build test_parent:latest and then start successfully.\r\n\r\n## Additional information\r\n\r\nUbuntu 18.04.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7221", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7221/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7221/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7221/events", "html_url": "https://github.com/docker/compose/issues/7221", "id": 562144910, "node_id": "MDU6SXNzdWU1NjIxNDQ5MTA=", "number": 7221, "title": "How to specify one service with two networks(one of them is \"host\") in docker-compose.yaml", "user": {"login": "colben", "id": 7829126, "node_id": "MDQ6VXNlcjc4MjkxMjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/7829126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colben", "html_url": "https://github.com/colben", "followers_url": "https://api.github.com/users/colben/followers", "following_url": "https://api.github.com/users/colben/following{/other_user}", "gists_url": "https://api.github.com/users/colben/gists{/gist_id}", "starred_url": "https://api.github.com/users/colben/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colben/subscriptions", "organizations_url": "https://api.github.com/users/colben/orgs", "repos_url": "https://api.github.com/users/colben/repos", "events_url": "https://api.github.com/users/colben/events{/privacy}", "received_events_url": "https://api.github.com/users/colben/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777239, "node_id": "MDU6TGFiZWw2OTc3NzIzOQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-09T08:54:59Z", "updated_at": "2020-02-11T08:34:22Z", "closed_at": "2020-02-11T08:34:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "# environment\r\n- Two services: \"db\" and \"app\"\r\n- I want \"app\" to run in network \"app\", and \"db\" to run in networks \"app\" and \"host\"\r\n\r\n# issue\r\n- I've tried to specify db service with tow networks like this:\r\n    ```yaml\r\n    service:\r\n      db:\r\n        network_mode: host\r\n        networks:\r\n        - app\r\n        ...\r\n    ```\r\n- and it returned an error:\r\n    ```\r\n    ERROR: 'network_mode' and 'networks' cannot be combined\r\n    ```\r\n\r\n# expection\r\n- service \"db\" can run with tow networks, and one of them is host network\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7220", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7220/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7220/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7220/events", "html_url": "https://github.com/docker/compose/issues/7220", "id": 561752892, "node_id": "MDU6SXNzdWU1NjE3NTI4OTI=", "number": 7220, "title": " Add support for `ipc: service` syntax", "user": {"login": "EricHripko", "id": 707679, "node_id": "MDQ6VXNlcjcwNzY3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/707679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EricHripko", "html_url": "https://github.com/EricHripko", "followers_url": "https://api.github.com/users/EricHripko/followers", "following_url": "https://api.github.com/users/EricHripko/following{/other_user}", "gists_url": "https://api.github.com/users/EricHripko/gists{/gist_id}", "starred_url": "https://api.github.com/users/EricHripko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EricHripko/subscriptions", "organizations_url": "https://api.github.com/users/EricHripko/orgs", "repos_url": "https://api.github.com/users/EricHripko/repos", "events_url": "https://api.github.com/users/EricHripko/events{/privacy}", "received_events_url": "https://api.github.com/users/EricHripko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-07T16:47:46Z", "updated_at": "2020-08-10T08:14:44Z", "closed_at": "2020-08-10T08:14:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description of the issue\r\n`docker` supports `--ipc` flag, which according to [docs](https://docs.docker.com/engine/reference/run/#ipc-settings---ipc):\r\n> Shared memory segments are used to accelerate inter-process communication at memory speed, rather than through pipes or through the network stack. Shared memory is commonly used by databases and custom-built (typically C/OpenMPI, C++/using boost libraries) high performance applications for scientific computing and financial services industries. If these types of applications are broken into multiple containers, you might need to share the IPC mechanisms of the containers, using \"shareable\" mode for the main (i.e. \u201cdonor\u201d) container, and \"container:<donor-name-or-ID>\" for other containers.\r\n\r\nAssuming I have an application that makes use of shared memory, I can bring it up with `docker run --ipc=container:name ...`. All good here \ud83d\udc4d \r\n\r\nHowever, if I'm using `docker-compose` - I am unable to get the same behaviour. This is because, according to [docs](https://docs.docker.com/compose/compose-file/#domainname-hostname-ipc-mac_address-privileged-read_only-shm_size-stdin_open-tty-user-working_dir), it's simply a pass-through option.\r\n\r\n## Desired Behaviour\r\nIt would be amazing if `ipc` option in `docker-compose` supported `service:[service name]` syntax, similar to [network_mode](https://docs.docker.com/compose/compose-file/#network_mode). For example:\r\n```\r\nversion: '3.7'\r\nservices:\r\n  myrtr:\r\n    image: myipcrouter\r\n  mysvc:\r\n    build:\r\n      context: .\r\n      dockerfile: Dockerfile\r\n    ipc: service:myrtr\r\n```\r\nThis would make the container for the target (i.e., myrtr) have `--ipc=shareable` and the container for the service (i.e, mysvc) have `--ipc=container:<id of myrtr>`.\r\n\r\n## Summary\r\nWhat are your thoughts on this? I would be happy to contribute this feature if maintainers agree \ud83d\ude42 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7218", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7218/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7218/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7218/events", "html_url": "https://github.com/docker/compose/issues/7218", "id": 561350683, "node_id": "MDU6SXNzdWU1NjEzNTA2ODM=", "number": 7218, "title": "docker-compose.yml volumes \u955c\u50cf\u5bb9\u5668\u5185\u7684\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u88ab\u6e05\u7a7a", "user": {"login": "Y-Aron", "id": 39292226, "node_id": "MDQ6VXNlcjM5MjkyMjI2", "avatar_url": "https://avatars0.githubusercontent.com/u/39292226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Y-Aron", "html_url": "https://github.com/Y-Aron", "followers_url": "https://api.github.com/users/Y-Aron/followers", "following_url": "https://api.github.com/users/Y-Aron/following{/other_user}", "gists_url": "https://api.github.com/users/Y-Aron/gists{/gist_id}", "starred_url": "https://api.github.com/users/Y-Aron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Y-Aron/subscriptions", "organizations_url": "https://api.github.com/users/Y-Aron/orgs", "repos_url": "https://api.github.com/users/Y-Aron/repos", "events_url": "https://api.github.com/users/Y-Aron/events{/privacy}", "received_events_url": "https://api.github.com/users/Y-Aron/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-07T00:29:42Z", "updated_at": "2020-02-11T08:35:09Z", "closed_at": "2020-02-11T08:35:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "docker-compose.yml \r\n```\r\nversion: '3.1'\r\nservices: \r\n  ecology:\r\n    restart: always\r\n    image: e9-mysql:190902\r\n    container_name: e9\r\n    ports: \r\n      - 8080:80\r\n    volumes:\r\n      - ./ecology/album:/usr/local/weaver/ecology/album\r\n    environment:\r\n      TZ: Asia/Shanghai\r\n```\r\n\u6302\u8f7d\u955c\u50cf\u76ee\u5f55\u5230\u5bbf\u4e3b\u673a\uff0c\u4f7f\u7528 volumes \u5c5e\u6027\uff0c\u542f\u52a8\u540e\u955c\u50cf\u5bb9\u5668\u4e2d /usr/local/weaver/ecology/album \u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u88ab\u6e05\u7a7a\uff0c\u8fd9\u662f\u4ec0\u4e48\u539f\u56e0\uff1f\u5982\u4f55\u5904\u7406\uff1f", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7216", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7216/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7216/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7216/events", "html_url": "https://github.com/docker/compose/issues/7216", "id": 560863503, "node_id": "MDU6SXNzdWU1NjA4NjM1MDM=", "number": 7216, "title": "docker commit ", "user": {"login": "issahamieh", "id": 52197797, "node_id": "MDQ6VXNlcjUyMTk3Nzk3", "avatar_url": "https://avatars3.githubusercontent.com/u/52197797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/issahamieh", "html_url": "https://github.com/issahamieh", "followers_url": "https://api.github.com/users/issahamieh/followers", "following_url": "https://api.github.com/users/issahamieh/following{/other_user}", "gists_url": "https://api.github.com/users/issahamieh/gists{/gist_id}", "starred_url": "https://api.github.com/users/issahamieh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/issahamieh/subscriptions", "organizations_url": "https://api.github.com/users/issahamieh/orgs", "repos_url": "https://api.github.com/users/issahamieh/repos", "events_url": "https://api.github.com/users/issahamieh/events{/privacy}", "received_events_url": "https://api.github.com/users/issahamieh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-06T08:51:33Z", "updated_at": "2020-02-11T08:35:20Z", "closed_at": "2020-02-11T08:35:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\n\r\n## Context information (for bug reports)\r\n\r\n```\r\nOutput of \"docker-compose version\"\r\n```\r\n\r\n```\r\nOutput of \"docker version\"\r\n```\r\n\r\n```\r\nOutput of \"docker-compose config\"\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\n1.\r\n2.\r\n3.\r\n\r\n### Observed result\r\n\r\n### Expected result\r\n\r\n### Stacktrace / full error message\r\n\r\n```\r\n(if applicable)\r\n```\r\n\r\n## Additional information\r\n\r\nOS version / distribution, `docker-compose` install method, etc.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7214", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7214/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7214/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7214/events", "html_url": "https://github.com/docker/compose/issues/7214", "id": 560022921, "node_id": "MDU6SXNzdWU1NjAwMjI5MjE=", "number": 7214, "title": "Composable docker compose files (include another compose project)", "user": {"login": "beasteers", "id": 6741720, "node_id": "MDQ6VXNlcjY3NDE3MjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/6741720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beasteers", "html_url": "https://github.com/beasteers", "followers_url": "https://api.github.com/users/beasteers/followers", "following_url": "https://api.github.com/users/beasteers/following{/other_user}", "gists_url": "https://api.github.com/users/beasteers/gists{/gist_id}", "starred_url": "https://api.github.com/users/beasteers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beasteers/subscriptions", "organizations_url": "https://api.github.com/users/beasteers/orgs", "repos_url": "https://api.github.com/users/beasteers/repos", "events_url": "https://api.github.com/users/beasteers/events{/privacy}", "received_events_url": "https://api.github.com/users/beasteers/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 153640415, "node_id": "MDU6TGFiZWwxNTM2NDA0MTU=", "url": "https://api.github.com/repos/docker/compose/labels/kind/feature", "name": "kind/feature", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-04T22:41:36Z", "updated_at": "2020-02-11T08:41:37Z", "closed_at": "2020-02-11T08:41:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nOne of my coworkers has a nice repo with multiple containers setup in a docker compose file. I'd like be able to git clone and include this file into a larger compose project without copying and pasting the entire contents of the external repo compose file (for various reasons - cleanliness, maintainability, etc.). \r\n\r\nSay I have a setup like this:\r\n```bash\r\napp1/docker-compose.yml\r\napp2/docker-compose.yml\r\n...\r\nappN/docker-compose.yml\r\nnginx-proxy/docker-compose.yml\r\n```\r\n\r\nI don't want to have to cd to each app and bring each up. I'd like to just say, \r\n```bash\r\ncd ./a_global_entrypoint # pulls in each app, propagates env vars\r\ndocker-compose up -d\r\n```\r\nand have it bring up everything.\r\n\r\n**Describe the solution you'd like**\r\nHere's a sketch of a possible solution.\r\n```yaml\r\nservices:\r\n  serviceA: \r\n    image: ...\r\n    ...\r\n  \r\n  # *** Include another compose file into this one ***\r\n  other_project: # adds a namespace around the included services (e.g. other_project.serviceX)\r\n    include_project: '../other_project/docker-compose.yml' \r\n    # project_root: # defaults to ../other_project/\r\n\r\n    # then have some way of providing overrides for certain things...\r\n    env: # maybe add some global env overrides\r\n    services:\r\n      serviceX: \r\n        env: ... # modify some config values\r\n```\r\nIf you have a more versatile way to format this, I'm game, but something like this would go a long way to make docker-compose more composable. \r\n\r\n**Describe alternatives you've considered**\r\nI could make a bash script for each thing I need, but that's janky and it makes it cumbersome to run different things. It takes away from the elegance of `docker-compose up`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7212", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7212/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7212/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7212/events", "html_url": "https://github.com/docker/compose/issues/7212", "id": 559346978, "node_id": "MDU6SXNzdWU1NTkzNDY5Nzg=", "number": 7212, "title": "Dockerized tests failing without touching the code", "user": {"login": "GabrielBB", "id": 8752823, "node_id": "MDQ6VXNlcjg3NTI4MjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/8752823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GabrielBB", "html_url": "https://github.com/GabrielBB", "followers_url": "https://api.github.com/users/GabrielBB/followers", "following_url": "https://api.github.com/users/GabrielBB/following{/other_user}", "gists_url": "https://api.github.com/users/GabrielBB/gists{/gist_id}", "starred_url": "https://api.github.com/users/GabrielBB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GabrielBB/subscriptions", "organizations_url": "https://api.github.com/users/GabrielBB/orgs", "repos_url": "https://api.github.com/users/GabrielBB/repos", "events_url": "https://api.github.com/users/GabrielBB/events{/privacy}", "received_events_url": "https://api.github.com/users/GabrielBB/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}, {"id": 1605014784, "node_id": "MDU6TGFiZWwxNjA1MDE0Nzg0", "url": "https://api.github.com/repos/docker/compose/labels/stale", "name": "stale", "color": "7be0b8", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-03T21:31:38Z", "updated_at": "2020-08-11T06:27:25Z", "closed_at": "2020-08-11T06:27:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I ran `bash script/test/default tests/acceptance/cli_test.py::CLITestCase::test_up` after cloning. Lint tests pass but then the test fails with this error:\r\n\r\n![image](https://user-images.githubusercontent.com/8752823/73692461-390f7680-4689-11ea-8fe0-c4e690d73e39.png)\r\n\r\nThis is the last commit at the time of this issue:\r\n\r\n![image](https://user-images.githubusercontent.com/8752823/73692603-7aa02180-4689-11ea-8473-0e2ba6554c40.png)\r\n\r\nMy OS is Ubuntu", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7210", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7210/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7210/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7210/events", "html_url": "https://github.com/docker/compose/issues/7210", "id": 559137626, "node_id": "MDU6SXNzdWU1NTkxMzc2MjY=", "number": 7210, "title": "Unusual error when installing cuda inside a docker container", "user": {"login": "cli0", "id": 25091717, "node_id": "MDQ6VXNlcjI1MDkxNzE3", "avatar_url": "https://avatars3.githubusercontent.com/u/25091717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cli0", "html_url": "https://github.com/cli0", "followers_url": "https://api.github.com/users/cli0/followers", "following_url": "https://api.github.com/users/cli0/following{/other_user}", "gists_url": "https://api.github.com/users/cli0/gists{/gist_id}", "starred_url": "https://api.github.com/users/cli0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cli0/subscriptions", "organizations_url": "https://api.github.com/users/cli0/orgs", "repos_url": "https://api.github.com/users/cli0/repos", "events_url": "https://api.github.com/users/cli0/events{/privacy}", "received_events_url": "https://api.github.com/users/cli0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-03T14:58:04Z", "updated_at": "2020-02-11T08:44:43Z", "closed_at": "2020-02-11T08:44:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am running Docker 18 CE on an Ubuntu 18.04 OS. The base image of my docker is Ubuntu 18.04 as well. I am trying to make a custom docker image where I can also run and use nvidia and cuda. I get an unusual issue only when I am installing cuda.\r\n\r\nThis is the code to get the executable.\r\n```\r\nRUN wget https://developer.nvidia.com/compute/cuda/9.0/Prod/local_installers/cuda_9.0.176_384.81_linux-run RUN chmod +x cuda_9.0.176_384.81_linux-run \r\nRUN ./cuda_9.0.176_384.81_linux-run\r\n```\r\n\r\nWhen docker starts installing, specifically it reaches this point\r\n\r\n```\r\nStep 16/33 : RUN ./cuda_9.0.176_384.81_linux-run\r\n ---> Running in dcca0c9973cc\r\n```\r\nThe command line turns completely blank. I dont see an error message, or logs for the process as you usually do. It's just pitch black. I've let it run for hours and there is no response. \r\n\r\nMy Dockerfile is the following:\r\n\r\n```\r\nFROM ubuntu:18.04\r\n\r\nRUN apt-get update -y && apt-get install -y \\\r\n build-essential \\\r\n curl \\\r\n apt-utils \\\r\n python \\\r\n python-dev \\\r\n python-pip \\\r\n python3 \\\r\n python3-dev \\\r\n python3-pip \\\r\n swig \\\r\n unzip \\\r\n sox \\\r\n libsox-dev \\\r\n python-pyaudio \\\r\n git \\\r\n wget \\\r\n silversearcher-ag \\\r\n ranger \\\r\n ffmpeg \\\r\n python3-levenshtein \\\r\n python-numpy \\\r\n libcurl3-dev  \\\r\n ca-certificates \\\r\n gcc-6 \\\r\n g++-6 \\\r\n libsox-fmt-mp3 \\\r\n htop \\\r\n nano \\\r\n cmake \\\r\n zlib1g-dev \\\r\n libbz2-dev \\\r\n liblzma-dev \\\r\n locales \\\r\n pkg-config \\\r\n libsox-dev \\\r\n freeglut3-dev \\\r\n libx11-dev \\\r\n libxmu-dev \\\r\n libxi-dev \\\r\n libglu1-mesa \\\r\n libglu1-mesa-dev \\\r\n dpkg\r\n\r\nRUN DEBIAN_FRONTEND=noninteractive apt-get install keyboard-configuration\r\n\r\nWORKDIR /home/setup/\r\n\r\nRUN wget https://github.com/bazelbuild/bazel/releases/download/0.15.0/bazel-0.15.0-installer-linux-x86_64.sh\r\nRUN chmod +x bazel-0.15.0-installer-linux-x86_64.sh\r\nRUN ./bazel-0.15.0-installer-linux-x86_64.sh\r\nRUN rm bazel-0.15.0-installer-linux-x86_64.sh\r\n\r\n\r\n# Install NVIDIA\r\n\r\n#RUN sudo echo \"blacklist nouveau\" >> /etc/modprobe.d/blacklist-nouveau.conf\r\n#RUN sudo echo \"options nouveau modeset=0\" >> /etc/modprobe.d/blacklist-nouveau.conf\r\n\r\n#RUN add-apt-repository ppa:graphics-drivers\r\nRUN apt-get update\r\nRUN apt install nvidia-driver-390 -y\r\n\r\n# Install Python specific packages\r\n\r\nRUN pip3 install --upgrade setuptools pip wheel\r\n\r\nRUN pip3 install absl-py==0.9.0 \\\r\nastor==0.8.1 \\\r\nattrdict==2.0.1 \\\r\naudioread==2.1.8 \\\r\ncffi==1.13.2 \\\r\ncycler==0.10.0 \\\r\nCython==0.29.14 \\\r\ndecorator==4.4.1 \\\r\ndeepspeech==0.4.1 \\\r\ngast==0.3.3 \\\r\ngrpcio==1.26.0 \\\r\nh5py==2.10.0 \\\r\njoblib==0.14.1 \\\r\nKeras-Applications==1.0.8 \\\r\nKeras-Preprocessing==1.1.0 \\\r\nkiwisolver==1.1.0 \\\r\nlibrosa==0.7.2 \\\r\nllvmlite==0.31.0 \\\r\nMarkdown==3.1.1 \\\r\nmatplotlib==3.1.2 \\\r\nnumba==0.47.0 \\\r\nnumexpr==2.7.1 \\\r\nnumpy==1.18.1 \\\r\npandas==0.25.3 \\\r\nprogressbar==2.5 \\\r\nprotobuf==3.11.2 \\\r\npycparser==2.19 \\\r\npydub==0.23.1 \\\r\npyparsing==2.4.6 \\\r\npython-dateutil==2.8.1 \\\r\npython-Levenshtein==0.12.0 \\\r\npython-speech-features==0.6 \\\r\npytz==2019.3 \\\r\nresampy==0.2.2 \\\r\nscikit-learn==0.22.1 \\\r\nscipy==1.4.1 \\\r\nsix==1.14.0 \\\r\nSoundFile==0.10.3.post1 \\\r\ntables==3.6.1 \\\r\ntensorboard==1.12 \\\r\ntensorflow-gpu==1.12.0 \\\r\nWerkzeug==0.16.0\r\n\r\n## Install Cuda\r\n\r\nRUN wget https://developer.nvidia.com/compute/cuda/9.0/Prod/local_installers/cuda_9.0.176_384.81_linux-run RUN chmod +x cuda_9.0.176_384.81_linux.run \r\nRUN ./cuda_9.0.176_384.81_linux.run\r\n#RUN rm cuda_9.0.176_384.81_linux.run\r\n\r\n## Install cudnn\r\n\r\nRUN wget https://www.dropbox.com/s/o0ffjf1j0bftrq9/cudnn-9.2-linux-x64-v7.2.1.38.tgz?dl=1 -O cudnn-9.2-linux-x64-v7.2.1.38.tgz\r\nRUN tar -xzvf cudnn-9.2-linux-x64-v7.2.1.38.tgz\r\nRUN cp -P cuda/include/cudnn.h /usr/local/cuda-9.0/include\r\nRUN cp -P cuda/lib64/libcudnn* /usr/local/cuda-9.0/lib64/\r\nRUN chmod a+r /usr/local/cuda-9.0/lib64/libcudnn*\r\n\r\nRUN export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-9.0/lib64/\r\nRUN export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64/\r\n\r\n\r\nENTRYPOINT /bin/bash\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7208", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7208/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7208/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7208/events", "html_url": "https://github.com/docker/compose/issues/7208", "id": 558839858, "node_id": "MDU6SXNzdWU1NTg4Mzk4NTg=", "number": 7208, "title": "Cannot assign dot env file to build args ", "user": {"login": "abdennour", "id": 1788384, "node_id": "MDQ6VXNlcjE3ODgzODQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1788384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abdennour", "html_url": "https://github.com/abdennour", "followers_url": "https://api.github.com/users/abdennour/followers", "following_url": "https://api.github.com/users/abdennour/following{/other_user}", "gists_url": "https://api.github.com/users/abdennour/gists{/gist_id}", "starred_url": "https://api.github.com/users/abdennour/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abdennour/subscriptions", "organizations_url": "https://api.github.com/users/abdennour/orgs", "repos_url": "https://api.github.com/users/abdennour/repos", "events_url": "https://api.github.com/users/abdennour/events{/privacy}", "received_events_url": "https://api.github.com/users/abdennour/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 153640415, "node_id": "MDU6TGFiZWwxNTM2NDA0MTU=", "url": "https://api.github.com/repos/docker/compose/labels/kind/feature", "name": "kind/feature", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-03T04:48:34Z", "updated_at": "2020-02-11T08:45:22Z", "closed_at": "2020-02-11T08:45:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "In my docker-compose\r\n\r\n```\r\n  build:\r\n      context: .\r\n      args:\r\n        NODE_TAG: ${NODE_TAG}\r\n        PYTHON_TAG: ${PYTHON_TAG}\r\n        AWS_CLI_VERSION: ${AWS_CLI_VERSION}\r\n```\r\n\r\nWhile I have `.env` file\r\n\r\n\r\n```sh\r\nNODE_TAG=13.7\r\nPYTHON_TAG=3.8\r\nAWS_CLI_VERSION=1.17.1\r\n```\r\n\r\nEach time I add variable in `.env`, I have to add it in `args` of docker-compose file.\r\n\r\nI would like to comply with DRY and pass the whole `.env` file to args.\r\n\r\nI am pretty sure many of you will get confused with env_file. However, we want to highlight aggressively that this feature request is about **building image** (`services.*.build.args`),  and NOT about **container runtime** (`services.*.env_file`)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7207", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7207/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7207/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7207/events", "html_url": "https://github.com/docker/compose/issues/7207", "id": 558801685, "node_id": "MDU6SXNzdWU1NTg4MDE2ODU=", "number": 7207, "title": "How to run specific tests", "user": {"login": "GabrielBB", "id": 8752823, "node_id": "MDQ6VXNlcjg3NTI4MjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/8752823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GabrielBB", "html_url": "https://github.com/GabrielBB", "followers_url": "https://api.github.com/users/GabrielBB/followers", "following_url": "https://api.github.com/users/GabrielBB/following{/other_user}", "gists_url": "https://api.github.com/users/GabrielBB/gists{/gist_id}", "starred_url": "https://api.github.com/users/GabrielBB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GabrielBB/subscriptions", "organizations_url": "https://api.github.com/users/GabrielBB/orgs", "repos_url": "https://api.github.com/users/GabrielBB/repos", "events_url": "https://api.github.com/users/GabrielBB/events{/privacy}", "received_events_url": "https://api.github.com/users/GabrielBB/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777239, "node_id": "MDU6TGFiZWw2OTc3NzIzOQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-03T02:10:09Z", "updated_at": "2020-02-03T02:44:17Z", "closed_at": "2020-02-03T02:44:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to run the unit tests for `service.py` it throws this error:\r\n\r\n> ImportError while importing test module '/code/tests/unit/service_test.py'.\r\n> Hint: make sure your test modules/packages have valid Python names.\r\n> Traceback:\r\n> tests/unit/service_test.py:11: in <module>\r\n>     from .. import mock\r\n> E   ImportError: attempted relative import with no known parent package\r\n\r\nIf I try to run the dockerized tests but dockerignor-ing all the test files except that one it still throws that error.\r\n\r\nRunning all the tests take a loooong time, so I want to make changes to `service.py` and be able to quickly unit test them and only run all the tests when I know those specific unit tests pass\r\n\r\n(Lol You might be thinking: this dude obviously is not a python dev and it's making changes to this project. We will deny that PR asap)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7206", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7206/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7206/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7206/events", "html_url": "https://github.com/docker/compose/issues/7206", "id": 558698794, "node_id": "MDU6SXNzdWU1NTg2OTg3OTQ=", "number": 7206, "title": "\u201cDocker-compose up\u201d returns Traceback and UnicodeEncodeError:", "user": {"login": "paalss", "id": 39744024, "node_id": "MDQ6VXNlcjM5NzQ0MDI0", "avatar_url": "https://avatars1.githubusercontent.com/u/39744024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paalss", "html_url": "https://github.com/paalss", "followers_url": "https://api.github.com/users/paalss/followers", "following_url": "https://api.github.com/users/paalss/following{/other_user}", "gists_url": "https://api.github.com/users/paalss/gists{/gist_id}", "starred_url": "https://api.github.com/users/paalss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paalss/subscriptions", "organizations_url": "https://api.github.com/users/paalss/orgs", "repos_url": "https://api.github.com/users/paalss/repos", "events_url": "https://api.github.com/users/paalss/events{/privacy}", "received_events_url": "https://api.github.com/users/paalss/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-02T13:46:23Z", "updated_at": "2020-02-03T13:13:06Z", "closed_at": "2020-02-03T13:13:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\nWhen I run the command \u201cdocker-compose up\u201d in my working directory, cmd outputs a traceback list and a unicodeencode Error, instead of creating services.\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.25.2, build 698e2846\r\ndocker-py version: 4.1.0\r\nCPython version: 2.7.16\r\nOpenSSL version: OpenSSL 1.0.2q  20 Nov 2018\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.5\r\n API version:       1.40\r\n Go version:        go1.12.12\r\n Git commit:        633a0ea\r\n Built:             Wed Nov 13 07:22:37 2019\r\n OS/Arch:           windows/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.5\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.12\r\n  Git commit:       633a0ea\r\n  Built:            Wed Nov 13 07:29:19 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          v1.2.10\r\n  GitCommit:        b34a5c8af56e510852c35414db4c1f4fa6172339\r\n runc:\r\n  Version:          1.0.0-rc8+dev\r\n  GitCommit:        3e425f80a8c931f88e6d94a8c831b9d5aa481657\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\nservices:\r\n  chrome:\r\n    depends_on:\r\n    - selenium-hub\r\n    environment:\r\n      HUB_HOST: selenium-hub\r\n      HUB_PORT: '4444'\r\n      SCREEN_HEIGHT: '1080'\r\n      SCREEN_WIDTH: '1920'\r\n    image: selenium/node-chrome:3.141.59-europium\r\n    shm_size: 2gb\r\n  db:\r\n    environment:\r\n      MYSQL_DATABASE: contact_registry\r\n      MYSQL_PASSWORD: test\r\n      MYSQL_ROOT_PASSWORD: test\r\n      MYSQL_USER: user\r\n    image: mariadb\r\n    networks:\r\n      default: null\r\n    volumes:\r\n    - C:\\Users\\P\u251c\u00d1l Stakvik\\Documents\\WWW-tek\\kode\\imt2291-lecture-notes-2020\\cookies_sessions_testing\\dbInit:/docker-entrypoint-initdb.d:rw\r\n    - persistent:/var/lib/mysql:rw\r\n  firefox:\r\n    depends_on:\r\n    - selenium-hub\r\n    environment:\r\n      HUB_HOST: selenium-hub\r\n      HUB_PORT: '4444'\r\n      SCREEN_HEIGHT: '1080'\r\n      SCREEN_WIDTH: '1920'\r\n    image: selenium/node-firefox:3.141.59-europium\r\n    shm_size: 2gb\r\n  phpmyadmin:\r\n    environment:\r\n      MYSQL_PASSWORD: test\r\n      MYSQL_ROOT_PASSWORD: test\r\n      MYSQL_USER: user\r\n    image: phpmyadmin/phpmyadmin\r\n    networks:\r\n      default: null\r\n    ports:\r\n    - 8080:80/tcp\r\n  selenium-hub:\r\n    container_name: selenium-hub\r\n    image: selenium/hub:3.141.59-europium\r\n    networks:\r\n      default: null\r\n    ports:\r\n    - 4444:4444/tcp\r\n  test:\r\n    build:\r\n      context: C:\\Users\\P\u251c\u00d1l Stakvik\\Documents\\WWW-tek\\kode\\imt2291-lecture-notes-2020\\cookies_sessions_testing\r\n      dockerfile: ./Dockerfile.codeception\r\n    networks:\r\n      default: null\r\n    volumes:\r\n    - C:\\Users\\P\u251c\u00d1l Stakvik\\Documents\\WWW-tek\\kode\\imt2291-lecture-notes-2020\\cookies_sessions_testing\\tests:/var/www/test:rw\r\n    - C:\\Users\\P\u251c\u00d1l Stakvik\\Documents\\WWW-tek\\kode\\imt2291-lecture-notes-2020\\cookies_sessions_testing\\src:/var/www/html:rw\r\n  www:\r\n    build:\r\n      context: C:\\Users\\P\u251c\u00d1l Stakvik\\Documents\\WWW-tek\\kode\\imt2291-lecture-notes-2020\\cookies_sessions_testing\r\n      dockerfile: ./Dockerfile.www\r\n    networks:\r\n      default: null\r\n    ports:\r\n    - 80:80/tcp\r\n    volumes:\r\n    - C:\\Users\\P\u251c\u00d1l Stakvik\\Documents\\WWW-tek\\kode\\imt2291-lecture-notes-2020\\cookies_sessions_testing:/var/www/html/:rw\r\n    - C:\\Users\\P\u251c\u00d1l Stakvik\\Documents\\WWW-tek\\kode\\imt2291-lecture-notes-2020\\cookies_sessions_testing\\logs:/var/log/apache2/:rw\r\nversion: '3.0'\r\nvolumes:\r\n  persistent: {}\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. In Command prompt, cd into the directory which contains the docker-compose.yml file\r\n2. Run docker-compose up -d\r\n\r\n### Observed result\r\nNetwork is successfully created, but none of the services defined in docker.compose.yml is.\r\n\r\n### Expected result\r\nI expect the services defined in docker-compose.yml to be created as well as the network.\r\n\r\n### Stacktrace / full error message\r\n\r\n```\r\nC:\\Users\\P\u00e5l Stakvik\\Documents\\WWW-tek\\kode\\imt2291-lecture-notes-2020\\cookies_sessions_testing>docker-compose up -d\r\nCreating network \"cookies_sessions_testing_default\" with the default driver\r\nBuilding www\r\nTraceback (most recent call last):\r\n  File \"docker-compose\", line 6, in <module>\r\n  File \"compose\\cli\\main.py\", line 72, in main\r\n  File \"compose\\cli\\main.py\", line 128, in perform_command\r\n  File \"compose\\cli\\main.py\", line 1077, in up\r\n  File \"compose\\cli\\main.py\", line 1073, in up\r\n  File \"compose\\project.py\", line 548, in up\r\n  File \"compose\\service.py\", line 367, in ensure_image_exists\r\n  File \"compose\\service.py\", line 1106, in build\r\n  File \"site-packages\\docker\\api\\build.py\", line 158, in build\r\n  File \"site-packages\\docker\\api\\build.py\", line 341, in process_dockerfile\r\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\xe5' in position 10: ordinal not in range(128)\r\n[58348] Failed to execute script docker-compose\r\n```\r\n\r\n## Additional information\r\n\r\nOS Name:                   Microsoft Windows 10 Education\r\nOS Version:                10.0.18362 N/A Build 18362\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7205", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7205/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7205/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7205/events", "html_url": "https://github.com/docker/compose/issues/7205", "id": 558632634, "node_id": "MDU6SXNzdWU1NTg2MzI2MzQ=", "number": 7205, "title": "compose doesn't set a default port when talking to dockerd", "user": {"login": "sixcorners", "id": 585501, "node_id": "MDQ6VXNlcjU4NTUwMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/585501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sixcorners", "html_url": "https://github.com/sixcorners", "followers_url": "https://api.github.com/users/sixcorners/followers", "following_url": "https://api.github.com/users/sixcorners/following{/other_user}", "gists_url": "https://api.github.com/users/sixcorners/gists{/gist_id}", "starred_url": "https://api.github.com/users/sixcorners/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sixcorners/subscriptions", "organizations_url": "https://api.github.com/users/sixcorners/orgs", "repos_url": "https://api.github.com/users/sixcorners/repos", "events_url": "https://api.github.com/users/sixcorners/events{/privacy}", "received_events_url": "https://api.github.com/users/sixcorners/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}, {"id": 1605014784, "node_id": "MDU6TGFiZWwxNjA1MDE0Nzg0", "url": "https://api.github.com/repos/docker/compose/labels/stale", "name": "stale", "color": "7be0b8", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-02T02:52:40Z", "updated_at": "2020-08-16T10:15:01Z", "closed_at": "2020-08-16T10:15:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\nssh -f cac -L2375:/var/run/docker.sock sleep 3\r\nDOCKER_HOST=localhost docker info\r\nworks\r\n\r\nssh -f cac -L2375:/var/run/docker.sock sleep 3\r\nDOCKER_HOST=localhost docker-compose logs\r\ndocker.errors.DockerException: Invalid bind address format: port is required: localhost\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.25.3, build unknown\r\ndocker-py version: 4.1.0\r\nCPython version: 3.7.5\r\nOpenSSL version: OpenSSL 1.1.1c  28 May 2019\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.5\r\n API version:       1.40\r\n Go version:        go1.12.12\r\n Git commit:        633a0ea838\r\n Built:             Wed Nov 13 07:29:52 2019\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.5\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.12\r\n  Git commit:       633a0ea838\r\n  Built:            Wed Nov 13 07:28:22 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.2.10\r\n  GitCommit:        b34a5c8af56e510852c35414db4c1f4fa6172339\r\n runc:\r\n  Version:          1.0.0-rc8+dev\r\n  GitCommit:        3e425f80a8c931f88e6d94a8c831b9d5aa481657\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n## Steps to reproduce the issue\r\nssh -f cac -L2375:/var/run/docker.sock sleep 3\r\nDOCKER_HOST=localhost docker-compose logs\r\n\r\n### Observed result\r\ndocker.errors.DockerException: Invalid bind address format: port is required: localhost\r\n\r\n### Expected result\r\nno error\r\n\r\n### Stacktrace / full error message\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/sixcorners/.local/bin/docker-compose\", line 10, in <module>\r\n    sys.exit(main())\r\n  File \"/home/sixcorners/.local/lib/python3.7/site-packages/compose/cli/main.py\", line 72, in main\r\n    command()\r\n  File \"/home/sixcorners/.local/lib/python3.7/site-packages/compose/cli/main.py\", line 125, in perform_command\r\n    project = project_from_options('.', options)\r\n  File \"/home/sixcorners/.local/lib/python3.7/site-packages/compose/cli/command.py\", line 65, in project_from_options\r\n    environment_file=environment_file\r\n  File \"/home/sixcorners/.local/lib/python3.7/site-packages/compose/cli/command.py\", line 149, in get_project\r\n    host=host, environment=environment\r\n  File \"/home/sixcorners/.local/lib/python3.7/site-packages/compose/cli/command.py\", line 120, in get_client\r\n    environment=environment, tls_version=get_tls_version(environment)\r\n  File \"/home/sixcorners/.local/lib/python3.7/site-packages/compose/cli/docker_client.py\", line 127, in docker_client\r\n    client = APIClient(**kwargs)\r\n  File \"/home/sixcorners/.local/lib/python3.7/site-packages/docker/api/client.py\", line 133, in __init__\r\n    base_url, IS_WINDOWS_PLATFORM, tls=bool(tls)\r\n  File \"/home/sixcorners/.local/lib/python3.7/site-packages/docker/utils/utils.py\", line 288, in parse_host\r\n    ' {}'.format(addr)\r\ndocker.errors.DockerException: Invalid bind address format: port is required: localhost\r\n```\r\n\r\n## Additional information\r\nubuntu\r\nI think I used apt. If not I used pip3.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7204", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7204/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7204/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7204/events", "html_url": "https://github.com/docker/compose/issues/7204", "id": 558562367, "node_id": "MDU6SXNzdWU1NTg1NjIzNjc=", "number": 7204, "title": "UnicodeDecodeError - Windows 10", "user": {"login": "michalpietryka", "id": 11660980, "node_id": "MDQ6VXNlcjExNjYwOTgw", "avatar_url": "https://avatars0.githubusercontent.com/u/11660980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michalpietryka", "html_url": "https://github.com/michalpietryka", "followers_url": "https://api.github.com/users/michalpietryka/followers", "following_url": "https://api.github.com/users/michalpietryka/following{/other_user}", "gists_url": "https://api.github.com/users/michalpietryka/gists{/gist_id}", "starred_url": "https://api.github.com/users/michalpietryka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michalpietryka/subscriptions", "organizations_url": "https://api.github.com/users/michalpietryka/orgs", "repos_url": "https://api.github.com/users/michalpietryka/repos", "events_url": "https://api.github.com/users/michalpietryka/events{/privacy}", "received_events_url": "https://api.github.com/users/michalpietryka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-01T16:23:07Z", "updated_at": "2020-02-01T18:03:26Z", "closed_at": "2020-02-01T18:03:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\nI can not use docker-compose. No matter what i put in my docker-compose.yaml file, I end with this error. \r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.25.2, build 698e2846\r\ndocker-py version: 4.1.0\r\nCPython version: 2.7.16\r\nOpenSSL version: OpenSSL 1.0.2q  20 Nov 2018\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.5\r\n API version:       1.40\r\n Go version:        go1.12.12\r\n Git commit:        633a0ea\r\n Built:             Wed Nov 13 07:22:37 2019\r\n OS/Arch:           windows/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.5\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.12\r\n  Git commit:       633a0ea\r\n  Built:            Wed Nov 13 07:29:19 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          v1.2.10\r\n  GitCommit:        b34a5c8af56e510852c35414db4c1f4fa6172339\r\n runc:\r\n  Version:          1.0.0-rc8+dev\r\n  GitCommit:        3e425f80a8c931f88e6d94a8c831b9d5aa481657\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\nservices:\r\n  db:\r\n    image: mysql:5.7\r\nversion: '3.0'\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. run docker-compose up\r\n\r\n### Observed result\r\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xb3 in position 12: ordinal not in range(128)\r\n\r\n### Expected result\r\ndocker-compose runs normally\r\n\r\n### Stacktrace / full error message\r\n\r\n```\r\nPulling db (mysql:5.7)...\r\nTraceback (most recent call last):\r\n  File \"docker-compose\", line 6, in <module>\r\n  File \"compose\\cli\\main.py\", line 72, in main\r\n  File \"compose\\cli\\main.py\", line 128, in perform_command\r\n  File \"compose\\cli\\main.py\", line 1077, in up\r\n  File \"compose\\cli\\main.py\", line 1073, in up\r\n  File \"compose\\project.py\", line 548, in up\r\n  File \"compose\\service.py\", line 361, in ensure_image_exists\r\n  File \"compose\\service.py\", line 1250, in pull\r\n  File \"compose\\progress_stream.py\", line 102, in get_digest_from_pull\r\n  File \"compose\\service.py\", line 1215, in _do_pull\r\n  File \"site-packages\\docker\\api\\image.py\", line 396, in pull\r\n  File \"site-packages\\docker\\auth.py\", line 48, in get_config_header\r\n  File \"site-packages\\docker\\auth.py\", line 324, in resolve_authconfig\r\n  File \"site-packages\\docker\\auth.py\", line 235, in resolve_authconfig\r\n  File \"site-packages\\docker\\auth.py\", line 262, in _resolve_authconfig_credstore\r\n  File \"site-packages\\docker\\auth.py\", line 287, in _get_store_instance\r\n  File \"site-packages\\docker\\credentials\\store.py\", line 20, in __init__\r\n  File \"site-packages\\docker\\credentials\\utils.py\", line 24, in find_executable\r\n  File \"ntpath.py\", line 85, in join\r\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xb3 in position 12: ordinal not in range(128)    [15120] Failed to execute script docker-compose\r\n```\r\n\r\n## Additional information\r\n\r\nOS version: Windows 10 Pro\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7198", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7198/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7198/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7198/events", "html_url": "https://github.com/docker/compose/issues/7198", "id": 557264425, "node_id": "MDU6SXNzdWU1NTcyNjQ0MjU=", "number": 7198, "title": "how to work with  docker-compose in windows sever i ma unable to use docker-compose up", "user": {"login": "naidukr", "id": 33291960, "node_id": "MDQ6VXNlcjMzMjkxOTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/33291960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/naidukr", "html_url": "https://github.com/naidukr", "followers_url": "https://api.github.com/users/naidukr/followers", "following_url": "https://api.github.com/users/naidukr/following{/other_user}", "gists_url": "https://api.github.com/users/naidukr/gists{/gist_id}", "starred_url": "https://api.github.com/users/naidukr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/naidukr/subscriptions", "organizations_url": "https://api.github.com/users/naidukr/orgs", "repos_url": "https://api.github.com/users/naidukr/repos", "events_url": "https://api.github.com/users/naidukr/events{/privacy}", "received_events_url": "https://api.github.com/users/naidukr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-30T04:49:40Z", "updated_at": "2020-01-30T10:53:19Z", "closed_at": "2020-01-30T10:53:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\n(paste here)\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\n(paste here)\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\n(paste here)\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\n1.\r\n2.\r\n3.\r\n\r\n### Observed result\r\n\r\n### Expected result\r\n\r\n### Stacktrace / full error message\r\n\r\n```\r\n(paste here)\r\n```\r\n\r\n## Additional information\r\n\r\nOS version / distribution, `docker-compose` install method, etc.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7196", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7196/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7196/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7196/events", "html_url": "https://github.com/docker/compose/issues/7196", "id": 556630209, "node_id": "MDU6SXNzdWU1NTY2MzAyMDk=", "number": 7196, "title": "Inconsistent behavior observed when using named volume nested within bind-mounted volume", "user": {"login": "PacoHuerta", "id": 14255193, "node_id": "MDQ6VXNlcjE0MjU1MTkz", "avatar_url": "https://avatars3.githubusercontent.com/u/14255193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PacoHuerta", "html_url": "https://github.com/PacoHuerta", "followers_url": "https://api.github.com/users/PacoHuerta/followers", "following_url": "https://api.github.com/users/PacoHuerta/following{/other_user}", "gists_url": "https://api.github.com/users/PacoHuerta/gists{/gist_id}", "starred_url": "https://api.github.com/users/PacoHuerta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PacoHuerta/subscriptions", "organizations_url": "https://api.github.com/users/PacoHuerta/orgs", "repos_url": "https://api.github.com/users/PacoHuerta/repos", "events_url": "https://api.github.com/users/PacoHuerta/events{/privacy}", "received_events_url": "https://api.github.com/users/PacoHuerta/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-29T04:35:35Z", "updated_at": "2020-02-17T09:45:04Z", "closed_at": "2020-02-01T06:06:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\n```\r\nversion: '3.7'\r\n\r\nvolumes:\r\n    node_modules:\r\n\r\nservices:\r\n  web:\r\n    image: node:latest\r\n    volumes:\r\n      - '.:/usr/src/docker_test/'\r\n      - 'node_modules:/usr/src/docker_test/node_modules'\r\n    working_dir: /usr/src/docker_test\r\n    command: npm start\r\n\r\n    ports:\r\n      - '3000:3000'\r\n```\r\nWhen a named volume is mounted within a bind-mounted directory as above, the contents of the `docker_test/node_modules` directory within the container, which should point to named volume `node_modules`, will initially be separate from the node_modules directory that is within the bind-mounted directory on the host machine (`docker_test/node_modules` within host machine). This is expected; however, after a few updates to project files (described below in steps to reproduce), the contents of `docker_test/node_modules` within the container will actually be the same as that which is within the node_modules folder within the bind-mounted folder on the host machine (The contents of `docker_test/node_modules` in the host machine will eventually replace the contents of `docker_test/node_modules` within the container).\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.25.2, build 698e2846\r\ndocker-py version: 4.1.0\r\nCPython version: 3.7.5\r\nOpenSSL version: OpenSSL 1.1.1d  10 Sep 2019\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.5\r\n API version:       1.40\r\n Go version:        go1.12.12\r\n Git commit:        633a0ea\r\n Built:             Wed Nov 13 07:22:34 2019\r\n OS/Arch:           darwin/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.5\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.12\r\n  Git commit:       633a0ea\r\n  Built:            Wed Nov 13 07:29:19 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          v1.2.10\r\n  GitCommit:        b34a5c8af56e510852c35414db4c1f4fa6172339\r\n runc:\r\n  Version:          1.0.0-rc8+dev\r\n  GitCommit:        3e425f80a8c931f88e6d94a8c831b9d5aa481657\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n```\r\nservices:\r\n  web:\r\n    command: npm start\r\n    image: node:latest\r\n    ports:\r\n    - published: 3000\r\n      target: 3000\r\n    volumes:\r\n    - /Users/blsz/src/docker_test/docker_test:/usr/src/docker_test:rw\r\n    - node_modules:/usr/src/docker_test/node_modules:rw\r\n    working_dir: /usr/src/docker_test\r\nversion: '3.7'\r\nvolumes:\r\n  node_modules: {}\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\nI have created a toy repository that can be used to reproduce this issue. \r\n1. Clone toy project from https://github.com/PacoHuerta/docker_test (simple template created with create-react-app)\r\n2. From within the project root (docker_test), execute `docker-compose up`. This will install dependencies, as the `npm start` command has been changed to `\"npm install && react-scripts start\"`. This will also start the dev server.\r\n3. Once server is running, open a new terminal window, and from within `docker_test` execute ls `node_modules`. Contents should be empty, as expected.\r\n4. Execute `touch node_modules/zzz.txt`. `node_modules` directory of host machine should now only contain the file `zzz.txt`.\r\n5. Execute `docker container exec -it docker_test_web_1 bash`\r\n6. Once within the container, execute `ls node_modules`. Verify that the dependencies are listed within the container's `node_modules` directory, and that file `zzz.txt` is not to be found there.\r\n7. execute `exit` to return to host machine\r\n8. Open browser and navigate to `localhost:3000`. React logo should display (create-react-app landing page).\r\n9. From host machine's `docker_test` directory, execute `vim public/index.html`.\r\n10. Right underneath the `<noscript>` tag, insert text `this is some text right here`. Save and quit out of vim with `:wq`. The browser should refresh, and \"this is some text right here\" should show at the top of the page.\r\n11. execute `docker container exec -it docker_test_web_1 bash`\r\n12. execute `ls node_modules`\r\n\r\n### Observed result\r\nThe `node_modules` directory within the container no longer contains the dependencies that were installed through `npm install`. Instead, the directory now holds the file `zzz.txt`, which was created in step 4.\r\n\r\n**Note:** This may not happen on the first try. It is possible that steps 9-12 may have to be executed multiple times before the contents of the `node_modules` directory from the host machine are copied over to the contents of the `node_modules` directory within the container. If steps 9-12 need to be repeated, just keep alternating the text changes to `public/index.html` between `this is some text right here` and `this is some text right here man`. After about 10 or 15 tries, the issue should be visible. \r\n\r\nThe fact that one must retry steps 9-12 an indeterminate amount of times is what leads me to believe that this is a bug. The behavior is not consistent. \r\n\r\n**Note:** It is also possible that the issue manifests itself as soon as step 6 is executed; however, it is most likely that steps 9-12 will have to be repeated a few times before the issue is seen.\r\n### Expected result\r\nIt is expected that the `node_modules` directory within the container contains the dependencies installed through `npm install` and that it does not contain the file `zzz.txt`. On the host machine, it is expected that `docker_test/node_modules` contains only the file `zzz.txt`.\r\n### Stacktrace / full error message\r\nNo stacktrace is produced.\r\n\r\n## Additional information\r\n\r\nMacOS Mojave 10.14.2, Docker for Mac\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7195", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7195/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7195/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7195/events", "html_url": "https://github.com/docker/compose/issues/7195", "id": 556265428, "node_id": "MDU6SXNzdWU1NTYyNjU0Mjg=", "number": 7195, "title": "flag provided but not defined: -console", "user": {"login": "SavostinVladimir", "id": 27097483, "node_id": "MDQ6VXNlcjI3MDk3NDgz", "avatar_url": "https://avatars0.githubusercontent.com/u/27097483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SavostinVladimir", "html_url": "https://github.com/SavostinVladimir", "followers_url": "https://api.github.com/users/SavostinVladimir/followers", "following_url": "https://api.github.com/users/SavostinVladimir/following{/other_user}", "gists_url": "https://api.github.com/users/SavostinVladimir/gists{/gist_id}", "starred_url": "https://api.github.com/users/SavostinVladimir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SavostinVladimir/subscriptions", "organizations_url": "https://api.github.com/users/SavostinVladimir/orgs", "repos_url": "https://api.github.com/users/SavostinVladimir/repos", "events_url": "https://api.github.com/users/SavostinVladimir/events{/privacy}", "received_events_url": "https://api.github.com/users/SavostinVladimir/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1605014784, "node_id": "MDU6TGFiZWwxNjA1MDE0Nzg0", "url": "https://api.github.com/repos/docker/compose/labels/stale", "name": "stale", "color": "7be0b8", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-28T14:39:50Z", "updated_at": "2020-08-04T22:32:43Z", "closed_at": "2020-08-04T22:32:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/docker/cli/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- Docker Community Slack - https://dockr.ly/community\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\nHi there, I run my containers with docker-compose. It worked fine for a long time, but today I am not able to start my containers. I get the message for all my containers such as below: \r\n\r\n> ERROR: for redis  Cannot start service redis: oci runtime error: flag provided but not defined: -console\r\n\r\nmy docker-compose.yml (I show the few services to simplify):\r\n```yaml\r\npostgres:\r\n  image: unit.chat:5043/pg\r\n  volumes:\r\n    - ./data/pg:/var/lib/postgresql/data\r\n\r\nrabbit:\r\n  image: rabbitmq:3-management\r\n\r\nredis:\r\n  image: redis\r\n```\r\n\r\nthere is the logs of docker daemon on my last attempt:\r\n\r\n> Jan 28 17:09:36 test dockerd[32474]: time=\"2020-01-28T17:09:36.438148323+03:00\" level=warning msg=\"failed to retrieve runc version: unknown output format: runc version spec: 1.0.1-dev\\n\"\r\nJan 28 17:09:36 test dockerd[32474]: time=\"2020-01-28T17:09:36.440523159+03:00\" level=warning msg=\"failed to retrieve docker-init version: unknown output format: tini version 0.13.0\\n\"\r\nJan 28 17:09:36 test dockerd[32474]: time=\"2020-01-28T17:09:36.795385081+03:00\" level=error msg=\"containerd: start container\" error=\"oci runtime error: flag provided but not defined: -console\" id=a1b5aab129f9ad3c7d755a5bb62f225da90fee927c8b1d3b9b323b9fb8b5e873\r\nJan 28 17:09:36 test dockerd[32474]: time=\"2020-01-28T17:09:36.797572068+03:00\" level=error msg=\"Create container failed with error: oci runtime error: flag provided but not defined: -console\"\r\nJan 28 17:09:36 test dockerd[32474]: time=\"2020-01-28T17:09:36.798167541+03:00\" level=error msg=\"containerd: start container\" error=\"oci runtime error: flag provided but not defined: -console\" id=b5617ba6beda63677e78215e354042113109ef3dea404a031be87f1e95f3e11c\r\nJan 28 17:09:36 test dockerd[32474]: time=\"2020-01-28T17:09:36.798891371+03:00\" level=error msg=\"Create container failed with error: oci runtime error: flag provided but not defined: -console\"\r\nJan 28 17:09:36 test dockerd[32474]: time=\"2020-01-28T17:09:36.984948225+03:00\" level=warning msg=\"Couldn't run auplink before unmount /var/lib/docker/aufs/mnt/36fd6cc39d4d09ad52db2f092270c394cf3018f558b5d41fbc70d884a80a8fc7: exec: \\\"auplink\\\": executable file not found in $PATH\"\r\nJan 28 17:09:37 test dockerd[32474]: time=\"2020-01-28T17:09:37.002713495+03:00\" level=error msg=\"Handler for POST /v1.21/containers/a1b5aab129f9ad3c7d755a5bb62f225da90fee927c8b1d3b9b323b9fb8b5e873/start returned error: oci runtime error: flag provided but not defined: -console\"\r\nJan 28 17:09:37 test dockerd[32474]: time=\"2020-01-28T17:09:37.064933610+03:00\" level=warning msg=\"Couldn't run auplink before unmount /var/lib/docker/aufs/mnt/99004783b84525e84c4819e12a9efa749e953c9fc11f546a49d6b27994e04b3e: exec: \\\"auplink\\\": executable file not found in $PATH\"\r\nJan 28 17:09:37 test dockerd[32474]: time=\"2020-01-28T17:09:37.082153701+03:00\" level=error msg=\"Handler for POST /v1.21/containers/b5617ba6beda63677e78215e354042113109ef3dea404a031be87f1e95f3e11c/start returned error: oci runtime error: flag provided but not defined: -console\"\r\n\r\n\r\n**Steps to reproduce the issue:**\r\n1.`docker-compose up -d`\r\n\r\n**Describe the results you received:**\r\nas shown above\r\n\r\n\r\n**Describe the results you expected:**\r\nI expect the all my services will be start as before\r\n\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      1.13.1\r\n API version:  1.26\r\n Go version:   go1.6.2\r\n Git commit:   092cba3\r\n Built:        Thu Nov  2 20:40:23 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      1.13.1\r\n API version:  1.26 (minimum version 1.12)\r\n Go version:   go1.6.2\r\n Git commit:   092cba3\r\n Built:        Thu Nov  2 20:40:23 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 29\r\n Running: 0\r\n Paused: 0\r\n Stopped: 29\r\nImages: 49\r\nServer Version: 1.13.1\r\nStorage Driver: aufs\r\n Root Dir: /var/lib/docker/aufs\r\n Backing Filesystem: extfs\r\n Dirs: 225\r\n Dirperm1 Supported: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins: \r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version:  (expected: aa8187dbd3b7ad67d8e5e3a15115d3eef43a7ed1)\r\nrunc version: N/A (expected: 9df8b306d01f59d3a8029be411de015b7304dd8f)\r\ninit version: N/A (expected: 949e6facb77383876aeff8a6944dde66b3089574)\r\nSecurity Options:\r\n apparmor\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.4.0-119-generic\r\nOperating System: Ubuntu 16.04.6 LTS\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 2\r\nTotal Memory: 1.953 GiB\r\nName: test\r\nID: CA5L:GJ67:ZUS4:MBGH:BRA4:CQE2:AG7N:G7F3:IGWT:Q632:7EEV:4IA2\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nWARNING: No swap limit support\r\nExperimental: false\r\nInsecure Registries:\r\n unit.chat:5043\r\n 188.120.225.196:5043\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\n\r\n16.04.6 LTS (Xenial Xerus) x86_64\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7194", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7194/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7194/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7194/events", "html_url": "https://github.com/docker/compose/issues/7194", "id": 556235250, "node_id": "MDU6SXNzdWU1NTYyMzUyNTA=", "number": 7194, "title": "can i legally use docker/docker-compose in a commercial, educational video?", "user": {"login": "codefather-labs", "id": 30005592, "node_id": "MDQ6VXNlcjMwMDA1NTky", "avatar_url": "https://avatars3.githubusercontent.com/u/30005592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codefather-labs", "html_url": "https://github.com/codefather-labs", "followers_url": "https://api.github.com/users/codefather-labs/followers", "following_url": "https://api.github.com/users/codefather-labs/following{/other_user}", "gists_url": "https://api.github.com/users/codefather-labs/gists{/gist_id}", "starred_url": "https://api.github.com/users/codefather-labs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codefather-labs/subscriptions", "organizations_url": "https://api.github.com/users/codefather-labs/orgs", "repos_url": "https://api.github.com/users/codefather-labs/repos", "events_url": "https://api.github.com/users/codefather-labs/events{/privacy}", "received_events_url": "https://api.github.com/users/codefather-labs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777239, "node_id": "MDU6TGFiZWw2OTc3NzIzOQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-28T14:11:36Z", "updated_at": "2020-01-28T14:16:53Z", "closed_at": "2020-01-28T14:16:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "can i legally use docker/docker-compose in a commercial, educational video?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7192", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7192/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7192/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7192/events", "html_url": "https://github.com/docker/compose/issues/7192", "id": 555629960, "node_id": "MDU6SXNzdWU1NTU2Mjk5NjA=", "number": 7192, "title": "Add pre-tagging script for releases", "user": {"login": "ulyssessouza", "id": 373485, "node_id": "MDQ6VXNlcjM3MzQ4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/373485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulyssessouza", "html_url": "https://github.com/ulyssessouza", "followers_url": "https://api.github.com/users/ulyssessouza/followers", "following_url": "https://api.github.com/users/ulyssessouza/following{/other_user}", "gists_url": "https://api.github.com/users/ulyssessouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulyssessouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulyssessouza/subscriptions", "organizations_url": "https://api.github.com/users/ulyssessouza/orgs", "repos_url": "https://api.github.com/users/ulyssessouza/repos", "events_url": "https://api.github.com/users/ulyssessouza/events{/privacy}", "received_events_url": "https://api.github.com/users/ulyssessouza/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ulyssessouza", "id": 373485, "node_id": "MDQ6VXNlcjM3MzQ4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/373485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulyssessouza", "html_url": "https://github.com/ulyssessouza", "followers_url": "https://api.github.com/users/ulyssessouza/followers", "following_url": "https://api.github.com/users/ulyssessouza/following{/other_user}", "gists_url": "https://api.github.com/users/ulyssessouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulyssessouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulyssessouza/subscriptions", "organizations_url": "https://api.github.com/users/ulyssessouza/orgs", "repos_url": "https://api.github.com/users/ulyssessouza/repos", "events_url": "https://api.github.com/users/ulyssessouza/events{/privacy}", "received_events_url": "https://api.github.com/users/ulyssessouza/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ulyssessouza", "id": 373485, "node_id": "MDQ6VXNlcjM3MzQ4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/373485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulyssessouza", "html_url": "https://github.com/ulyssessouza", "followers_url": "https://api.github.com/users/ulyssessouza/followers", "following_url": "https://api.github.com/users/ulyssessouza/following{/other_user}", "gists_url": "https://api.github.com/users/ulyssessouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulyssessouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulyssessouza/subscriptions", "organizations_url": "https://api.github.com/users/ulyssessouza/orgs", "repos_url": "https://api.github.com/users/ulyssessouza/repos", "events_url": "https://api.github.com/users/ulyssessouza/events{/privacy}", "received_events_url": "https://api.github.com/users/ulyssessouza/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-01-27T14:57:03Z", "updated_at": "2020-02-18T09:48:02Z", "closed_at": "2020-02-18T09:48:02Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "## Description of the issue\r\nCreate a client side script to fix before tagging and pushing the items below: \r\n- [x] `Version` on  run.sh\r\n- [x] `CHANGELOG.md`\r\n- [x] Version in `compose/__init__.py`\r\n\r\nPR -> https://github.com/docker/compose/pull/7211\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7189", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7189/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7189/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7189/events", "html_url": "https://github.com/docker/compose/issues/7189", "id": 555421461, "node_id": "MDU6SXNzdWU1NTU0MjE0NjE=", "number": 7189, "title": "Pull --ignore-pull-failures does not work", "user": {"login": "pieterza", "id": 29400324, "node_id": "MDQ6VXNlcjI5NDAwMzI0", "avatar_url": "https://avatars2.githubusercontent.com/u/29400324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pieterza", "html_url": "https://github.com/pieterza", "followers_url": "https://api.github.com/users/pieterza/followers", "following_url": "https://api.github.com/users/pieterza/following{/other_user}", "gists_url": "https://api.github.com/users/pieterza/gists{/gist_id}", "starred_url": "https://api.github.com/users/pieterza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pieterza/subscriptions", "organizations_url": "https://api.github.com/users/pieterza/orgs", "repos_url": "https://api.github.com/users/pieterza/repos", "events_url": "https://api.github.com/users/pieterza/events{/privacy}", "received_events_url": "https://api.github.com/users/pieterza/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-27T08:20:15Z", "updated_at": "2020-01-29T10:00:54Z", "closed_at": "2020-01-29T10:00:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "The --ignore-pull-failures flag still exits non-zero when failing to pull.\r\n\r\nI've found this old bug report which was never solved either: https://github.com/docker/compose/issues/4377\r\n\r\nSee example \r\n\r\n```\r\npieters@Pieters-MacBook-Pro ~ $ docker-compose -f code/property-core-backend/test.yml pull --ignore-pull-failures\r\nPulling php-fpm ... error\r\n\r\nERROR: for php-fpm  pull access denied for thiswontexistanywhereihope, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\r\nERROR: pull access denied for thiswontexistanywhereihope, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\r\npieters@Pieters-MacBook-Pro ~ $ echo $?\r\n1\r\n\r\n```\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.25.2, build 698e2846\r\ndocker-py version: 4.1.0\r\nCPython version: 3.7.5\r\nOpenSSL version: OpenSSL 1.1.1d  10 Sep 2019\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nDocker version 19.03.5, build 633a0ea\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n```\r\nversion: \"3.7\"\r\n\r\nservices:\r\n  php-fpm:\r\n    image: thiswontexistanywhereihope\r\n    expose:\r\n      - 9000\r\n    volumes:\r\n      - ${PWD}/shared:/shared/app\r\n    env_file: .env.test\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. docker-compose -f test.yml pull --ignore-pull-failures  (ensure image in compose-file does not exist)\r\n\r\n\r\n### Observed result\r\n\r\nIt fails, but exits non-zero\r\n\r\n### Expected result\r\n\r\nIt fails and exists zero\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7187", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7187/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7187/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7187/events", "html_url": "https://github.com/docker/compose/issues/7187", "id": 555200175, "node_id": "MDU6SXNzdWU1NTUyMDAxNzU=", "number": 7187, "title": "Can't mount a volume with spaces in it on Windows 10 Home", "user": {"login": "cbeust", "id": 92322, "node_id": "MDQ6VXNlcjkyMzIy", "avatar_url": "https://avatars2.githubusercontent.com/u/92322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbeust", "html_url": "https://github.com/cbeust", "followers_url": "https://api.github.com/users/cbeust/followers", "following_url": "https://api.github.com/users/cbeust/following{/other_user}", "gists_url": "https://api.github.com/users/cbeust/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbeust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbeust/subscriptions", "organizations_url": "https://api.github.com/users/cbeust/orgs", "repos_url": "https://api.github.com/users/cbeust/repos", "events_url": "https://api.github.com/users/cbeust/events{/privacy}", "received_events_url": "https://api.github.com/users/cbeust/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}, {"id": 1605014784, "node_id": "MDU6TGFiZWwxNjA1MDE0Nzg0", "url": "https://api.github.com/repos/docker/compose/labels/stale", "name": "stale", "color": "7be0b8", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-26T09:01:48Z", "updated_at": "2020-07-31T16:34:26Z", "closed_at": "2020-07-31T16:34:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\n\r\nAttempting to mount a Windows path with spaces in it results in an empty directory in the container.\r\n\r\n## Context information (for bug reports)\r\n\r\nI've tried as many combinations as I could:\r\n\r\n```\r\n      -  /c/Program\\ Files/PostgreSQL/11/data:/data1\r\n      -  \"c:\\\\Program Files\\\\PostgreSQL\\\\11\\\\data:/data2\"\r\n      -  c:\\\\Program\\ Files\\\\PostgreSQL\\\\11\\\\data:/data3\r\n      -  \"c:/Program Files/PostgreSQL/11/data:/data4\"\r\n      -  c:/Program\\ Files/PostgreSQL/11/data:/data5\r\n      -  \"c:/Program Files/PostgreSQL/11/data:/data6\"\r\n      -  \"c:/Program Files/PostgreSQL/11/data:/data7\"\r\n```\r\n\r\nand the result:\r\n\r\n```\r\nroot@d091534751f7:/# ls -l /data?\r\n/data1:\r\ntotal 0\r\n\r\n/data2:\r\ntotal 0\r\n\r\n/data3:\r\ntotal 0\r\n\r\n/data4:\r\ntotal 0\r\n\r\n/data5:\r\ntotal 0\r\n\r\n/data6:\r\ntotal 0\r\n\r\n/data7:\r\ntotal 0\r\n```\r\n\r\nMounting a volume with no spaces in it works fine.\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.24.1, build 4667896b\r\ndocker-py version: 3.7.3\r\nCPython version: 3.6.8\r\nOpenSSL version: OpenSSL 1.0.2q  20 Nov 2018\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient:\r\n Version:           19.03.1\r\n API version:       1.39 (downgraded from 1.40)\r\n Go version:        go1.12.7\r\n Git commit:        74b1e89e8a\r\n Built:             Wed Jul 31 15:18:18 2019\r\n OS/Arch:           windows/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          18.09.5\r\n  API version:      1.39 (minimum version 1.12)\r\n  Go version:       go1.10.8\r\n  Git commit:       e8ff056dbc\r\n  Built:            Thu Apr 11 04:50:00 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\nservices:\r\n  db:\r\n    build:\r\n      context: C:\\Users\\cedri\\kotlin\\perry-kotlin\\db\r\n    container_name: perry-db\r\n    image: perry-db:latest\r\n    ports:\r\n    - 5432:5432/tcp\r\n    volumes:\r\n    - /c/Program/ Files/PostgreSQL/11/data:/var/lib/postgresql/data:rw\r\n    - /c/Program/ Files/PostgreSQL/11/data:/data1:rw\r\n    - /c/Program Files/PostgreSQL/11/data:/data2:rw\r\n    - /c/Program/ Files/PostgreSQL/11/data:/data3:rw\r\n    - /c/Program Files/PostgreSQL/11/data:/data4:rw\r\n    - /c/Program/ Files/PostgreSQL/11/data:/data5:rw\r\n    - /c/Program Files/PostgreSQL/11/data:/data6:rw\r\n    - /c/Program Files/PostgreSQL/11/data:/data7:rw\r\n    - /c/Users:/users:rw\r\n  web:\r\n    build:\r\n      context: C:\\Users\\cedri\\kotlin\\perry-kotlin\r\n    container_name: perry-kotlin\r\n    image: perry:latest\r\n    links:\r\n    - db\r\n    ports:\r\n    - 8000:9000/tcp\r\nversion: '3.0'\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7186", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7186/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7186/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7186/events", "html_url": "https://github.com/docker/compose/issues/7186", "id": 555083107, "node_id": "MDU6SXNzdWU1NTUwODMxMDc=", "number": 7186, "title": "\"Override\" is named incorrectly", "user": {"login": "seanmorris", "id": 640101, "node_id": "MDQ6VXNlcjY0MDEwMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/640101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seanmorris", "html_url": "https://github.com/seanmorris", "followers_url": "https://api.github.com/users/seanmorris/followers", "following_url": "https://api.github.com/users/seanmorris/following{/other_user}", "gists_url": "https://api.github.com/users/seanmorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/seanmorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seanmorris/subscriptions", "organizations_url": "https://api.github.com/users/seanmorris/orgs", "repos_url": "https://api.github.com/users/seanmorris/repos", "events_url": "https://api.github.com/users/seanmorris/events{/privacy}", "received_events_url": "https://api.github.com/users/seanmorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69777235, "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==", "url": "https://api.github.com/repos/docker/compose/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}, {"id": 1605014784, "node_id": "MDU6TGFiZWwxNjA1MDE0Nzg0", "url": "https://api.github.com/repos/docker/compose/labels/stale", "name": "stale", "color": "7be0b8", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-25T13:03:39Z", "updated_at": "2020-07-30T19:38:33Z", "closed_at": "2020-07-30T19:38:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Documentation makes multiple references to \"override\" functionality:\r\n\r\nhttps://docs.docker.com/compose/extends/\r\n\r\nHowever the functionality referenced only implements the \"append\" aspect of \"override\" when dealing with array values.\r\n\r\nThe functionality should be named correctly to avoid frustration and confusion among developers.\r\n\r\n\"Merge\" would be a good name.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7185", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7185/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7185/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7185/events", "html_url": "https://github.com/docker/compose/issues/7185", "id": 554610124, "node_id": "MDU6SXNzdWU1NTQ2MTAxMjQ=", "number": 7185, "title": "docker-compose and docker-machine not working after installing Docker Desktop for Mac", "user": {"login": "rahman-mahfuz", "id": 14675856, "node_id": "MDQ6VXNlcjE0Njc1ODU2", "avatar_url": "https://avatars3.githubusercontent.com/u/14675856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rahman-mahfuz", "html_url": "https://github.com/rahman-mahfuz", "followers_url": "https://api.github.com/users/rahman-mahfuz/followers", "following_url": "https://api.github.com/users/rahman-mahfuz/following{/other_user}", "gists_url": "https://api.github.com/users/rahman-mahfuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/rahman-mahfuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rahman-mahfuz/subscriptions", "organizations_url": "https://api.github.com/users/rahman-mahfuz/orgs", "repos_url": "https://api.github.com/users/rahman-mahfuz/repos", "events_url": "https://api.github.com/users/rahman-mahfuz/events{/privacy}", "received_events_url": "https://api.github.com/users/rahman-mahfuz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2020-01-23T22:06:52Z", "updated_at": "2020-07-15T04:22:27Z", "closed_at": "2020-01-30T14:54:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have installed Docker Desktop for Mac on my Mac with macOS Sierra version 10.12.6\r\n\r\nDocker is working fine but when I run \"docker-compose --version\" to check whether docker-compose is installed properly, it shows the following error:\r\n\r\n[8807] Error loading Python lib '/Applications/Docker.app/Contents/Resources/bin/docker-compose/.Python': dlopen: dlopen(/Applications/Docker.app/Contents/Resources/bin/docker-compose/.Python, 10): Symbol not found: _futimens\r\n  Referenced from: /Applications/Docker.app/Contents/Resources/bin/docker-compose/.Python\r\n  Expected in: /usr/lib/libSystem.B.dylib\r\n in /Applications/Docker.app/Contents/Resources/bin/docker-compose/.Python\r\n\r\nAnd when I run the command \"docker-machine --version\", it says command not found.\r\n\r\nIf you need more information, please let me know. I would appreciate if someone can help me on this as I am trying to use docker for my developments for the first time.\r\n\r\nThanks,\r\n\r\nMahfuz\r\n\r\n<!--\r\nPlease, check https://docs.docker.com/docker-for-mac/troubleshoot/.\r\nIssues without logs and details cannot be debugged, and will be closed.\r\n\r\nIssues unrelated to Docker for Mac will be closed.  In particular, see\r\n  - https://github.com/docker/compose/issues for docker-compose\r\n  - https://github.com/docker/machine/issues for docker-machine\r\n  - https://github.com/moby/moby/issues for Docker daemon\r\n  - https://github.com/docker/docker.github.io/issues for the documentation\r\n-->\r\n\r\n\r\n<!--\r\nReplace `- [ ]` with `- [x]`, or click after having submitted the issue.\r\n-->\r\n\r\n  - [ ] I have tried with the latest version of my channel (Stable or Edge)\r\n  - [x] I have uploaded Diagnostics\r\n  - Diagnostics ID: C2A4874B-6D77-45B2-80E3-F3D0FACDA238/20200123220957\r\n\r\n### Expected behavior\r\ndocker-compose and docker-machine should be installed when Docker Desktop for Mac is installed.\r\n\r\n### Actual behavior\r\ndocker-compose and docker-machine commands are not running\r\n\r\n### Information\r\n<!--\r\nPlease, help us understand the problem.  For instance:\r\n  - Is it reproducible?\r\n  - Is the problem new?\r\n  - Did the problem appear with an update?\r\n  - A reproducible case if this is a bug, Dockerfiles FTW.\r\n-->\r\n  - macOS Version: macOS Sierra version 10.12.6\r\n\r\n### Diagnostic logs\r\n<!-- Full output of the diagnostics from \"Diagnose & Feedback\" in the menu ... -->\r\n```\r\nDocker for Mac: version 12.2.0.0 (42247)\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/compose/issues/7182", "repository_url": "https://api.github.com/repos/docker/compose", "labels_url": "https://api.github.com/repos/docker/compose/issues/7182/labels{/name}", "comments_url": "https://api.github.com/repos/docker/compose/issues/7182/comments", "events_url": "https://api.github.com/repos/docker/compose/issues/7182/events", "html_url": "https://github.com/docker/compose/issues/7182", "id": 554121457, "node_id": "MDU6SXNzdWU1NTQxMjE0NTc=", "number": 7182, "title": "version 2.2.0.0 (42247): docker-compose broken", "user": {"login": "paonath", "id": 7437736, "node_id": "MDQ6VXNlcjc0Mzc3MzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/7437736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paonath", "html_url": "https://github.com/paonath", "followers_url": "https://api.github.com/users/paonath/followers", "following_url": "https://api.github.com/users/paonath/following{/other_user}", "gists_url": "https://api.github.com/users/paonath/gists{/gist_id}", "starred_url": "https://api.github.com/users/paonath/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paonath/subscriptions", "organizations_url": "https://api.github.com/users/paonath/orgs", "repos_url": "https://api.github.com/users/paonath/repos", "events_url": "https://api.github.com/users/paonath/events{/privacy}", "received_events_url": "https://api.github.com/users/paonath/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-23T12:13:51Z", "updated_at": "2020-01-23T22:00:13Z", "closed_at": "2020-01-23T17:43:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\n  - [x] I have tried with the latest version of my channel (Stable or Edge)\r\n  - [x] I have uploaded Diagnostics\r\n  - Diagnostics ID: A3663CF0-4AA1-49B2-AEA7-779D6B81A3D7/20200123114732\r\n\r\n### Expected behavior\r\nshould be able to build containers from yml: `docker-compose -f SOME_FILE.yml up --build` \r\n### Actual behavior\r\nunable to build the same docker-compose file working on previous version:\r\n\r\n```\r\ndocker-compose.exe -f SOME_FILE.yml up --build\r\n\r\n> WARNING: The Docker Engine you're using is running in swarm mode.\r\n> \r\n> Compose does not use swarm mode to deploy services to multiple nodes in a swarm. All containers will be scheduled on the current node.\r\n> \r\n> To deploy your application across the swarm, use `docker stack deploy`.\r\n> \r\n> Building SOME\r\n> Traceback (most recent call last):\r\n>   File \"docker-compose\", line 6, in <module>\r\n>   File \"compose\\cli\\main.py\", line 72, in main\r\n>   File \"compose\\cli\\main.py\", line 128, in perform_command\r\n>   File \"compose\\cli\\main.py\", line 1077, in up\r\n>   File \"compose\\cli\\main.py\", line 1073, in up\r\n>   File \"compose\\project.py\", line 548, in up\r\n>   File \"compose\\service.py\", line 351, in ensure_image_exists\r\n>   File \"compose\\service.py\", line 1106, in build\r\n>   File \"site-packages\\docker\\api\\build.py\", line 160, in build\r\n>   File \"site-packages\\docker\\utils\\build.py\", line 31, in tar\r\n>   File \"site-packages\\docker\\utils\\build.py\", line 109, in create_archive\r\n> UnicodeDecodeError: 'ascii' codec can't decode byte 0xef in position 0: ordinal not in range(128)\r\n> [15572] Failed to execute script docker-compose\r\n```\r\n\r\n### Information\r\n\r\n  - Windows Version: Windows 10 Pro N\r\n  - Docker Desktop Version: 2.2.0.0 (42247)\r\n  - Are you running inside a virtualized Windows e.g. on a cloud server or on a mac VM: NO\r\n\r\n### Steps to reproduce the behavior\r\n\r\n\r\n  1. build a mid-complex docker file\r\n  2. build a simple yml docker-compose file\r\n  3. try to build machine(s)\r\n\r\n![docker_error](https://user-images.githubusercontent.com/7437736/72983692-2fad2100-3de2-11ea-8969-3ec6342b410d.png)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}]}