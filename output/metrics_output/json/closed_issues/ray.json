{"total_count": 3087, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/ray-project/ray/issues/10223", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10223/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10223/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10223/events", "html_url": "https://github.com/ray-project/ray/issues/10223", "id": 682906824, "node_id": "MDU6SXNzdWU2ODI5MDY4MjQ=", "number": 10223, "title": "[tune] how to get parallel trials running", "user": {"login": "esquires", "id": 9272110, "node_id": "MDQ6VXNlcjkyNzIxMTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9272110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esquires", "html_url": "https://github.com/esquires", "followers_url": "https://api.github.com/users/esquires/followers", "following_url": "https://api.github.com/users/esquires/following{/other_user}", "gists_url": "https://api.github.com/users/esquires/gists{/gist_id}", "starred_url": "https://api.github.com/users/esquires/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esquires/subscriptions", "organizations_url": "https://api.github.com/users/esquires/orgs", "repos_url": "https://api.github.com/users/esquires/repos", "events_url": "https://api.github.com/users/esquires/events{/privacy}", "received_events_url": "https://api.github.com/users/esquires/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-08-20T16:52:30Z", "updated_at": "2020-08-20T22:18:09Z", "closed_at": "2020-08-20T22:18:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "### What is your question?\r\n\r\nI am following the tutorial [here](https://docs.ray.io/en/latest/tune/api_docs/grid_random.html?highlight=search#overview) and trying to figure out why my system only has one trial running at a single time. I tried playing around with [trial resources](https://docs.ray.io/en/latest/tune/user-guide.html#parallelism-gpus) (specifically giving fractions of gpus to the config) but this didn't seem to fix it (it appears that for rllib agents that one needs to specify resources in the config dict since otherwise the following code gets a value error).\r\n\r\nCan you help me identify what needs to be changed about the following code to have it run multiple trials in parallel? Thanks!\r\n\r\n```python\r\nimport gym.envs.classic_control\r\n\r\nimport ray\r\nfrom ray import tune\r\n\r\n\r\nclass Cartpole(gym.envs.classic_control.CartPoleEnv):\r\n    def __init__(self, env_config: dict):\r\n        super().__init__()\r\n\r\n\r\ndef main() -> None:\r\n    ray.init()\r\n\r\n    tune.run(\r\n        \"PPO\",\r\n        stop={\"episode_reward_mean\": 200},\r\n        config={\r\n            \"env\": Cartpole,\r\n            \"env_config\": {'override_actions': False},\r\n            \"gamma\": ray.tune.uniform(0.99, 0.999),\r\n            # \"num_gpus\": 0.1,  # this didn't help\r\n        },\r\n    )\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n``` \r\n\r\n### system information\r\n* Ray version: 0.8.7 (also built from source on the ray-0.8.7 tag) \r\n* OS: Ubuntu 18.04\r\n* Tensorflow: 1.14.0\r\n* Python version: 3.6.9\r\n* Num cpus: 12\r\n* Num gpus: 1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/10189", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10189/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10189/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10189/events", "html_url": "https://github.com/ray-project/ray/issues/10189", "id": 681495956, "node_id": "MDU6SXNzdWU2ODE0OTU5NTY=", "number": 10189, "title": "[rllib] Policy losses that depend on trajectories of experience", "user": {"login": "nrhine1", "id": 372326, "node_id": "MDQ6VXNlcjM3MjMyNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/372326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrhine1", "html_url": "https://github.com/nrhine1", "followers_url": "https://api.github.com/users/nrhine1/followers", "following_url": "https://api.github.com/users/nrhine1/following{/other_user}", "gists_url": "https://api.github.com/users/nrhine1/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrhine1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrhine1/subscriptions", "organizations_url": "https://api.github.com/users/nrhine1/orgs", "repos_url": "https://api.github.com/users/nrhine1/repos", "events_url": "https://api.github.com/users/nrhine1/events{/privacy}", "received_events_url": "https://api.github.com/users/nrhine1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ericl", "id": 14922, "node_id": "MDQ6VXNlcjE0OTIy", "avatar_url": "https://avatars3.githubusercontent.com/u/14922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericl", "html_url": "https://github.com/ericl", "followers_url": "https://api.github.com/users/ericl/followers", "following_url": "https://api.github.com/users/ericl/following{/other_user}", "gists_url": "https://api.github.com/users/ericl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericl/subscriptions", "organizations_url": "https://api.github.com/users/ericl/orgs", "repos_url": "https://api.github.com/users/ericl/repos", "events_url": "https://api.github.com/users/ericl/events{/privacy}", "received_events_url": "https://api.github.com/users/ericl/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ericl", "id": 14922, "node_id": "MDQ6VXNlcjE0OTIy", "avatar_url": "https://avatars3.githubusercontent.com/u/14922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericl", "html_url": "https://github.com/ericl", "followers_url": "https://api.github.com/users/ericl/followers", "following_url": "https://api.github.com/users/ericl/following{/other_user}", "gists_url": "https://api.github.com/users/ericl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericl/subscriptions", "organizations_url": "https://api.github.com/users/ericl/orgs", "repos_url": "https://api.github.com/users/ericl/repos", "events_url": "https://api.github.com/users/ericl/events{/privacy}", "received_events_url": "https://api.github.com/users/ericl/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-08-19T02:18:07Z", "updated_at": "2020-08-21T21:14:51Z", "closed_at": "2020-08-21T21:14:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to implement a Policy loss function that requires a somewhat long trajectory of observations and actions from the same episode (e.g. a length-10 trajectory of observations and actions). \r\n\r\nMy understanding is that the standard aggregators of experience are the `SampleBatch` and `MultiAgentBatch` objects, which don't seem to explicitly provide access to arbitrary-length trajectories of samples, at least not in any examples. However, the `SampleBatch.split_by_episodes`, `SampleBatch.rows` and `MultiAgentBatch.timeslices` methods look relevant.\r\n\r\nI am currently thinking of implementing a variant of `TrainOneStep` that, instead of calling `do_minibatch_sgd`, calls a different function that extracts windows from the SampleBatches. \r\nAny advice is appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/10182", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10182/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10182/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10182/events", "html_url": "https://github.com/ray-project/ray/issues/10182", "id": 681304907, "node_id": "MDU6SXNzdWU2ODEzMDQ5MDc=", "number": 10182, "title": "[Object spilling] For manual spilling, ask the owner for the location of the primary copy", "user": {"login": "stephanie-wang", "id": 2560516, "node_id": "MDQ6VXNlcjI1NjA1MTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2560516?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stephanie-wang", "html_url": "https://github.com/stephanie-wang", "followers_url": "https://api.github.com/users/stephanie-wang/followers", "following_url": "https://api.github.com/users/stephanie-wang/following{/other_user}", "gists_url": "https://api.github.com/users/stephanie-wang/gists{/gist_id}", "starred_url": "https://api.github.com/users/stephanie-wang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stephanie-wang/subscriptions", "organizations_url": "https://api.github.com/users/stephanie-wang/orgs", "repos_url": "https://api.github.com/users/stephanie-wang/repos", "events_url": "https://api.github.com/users/stephanie-wang/events{/privacy}", "received_events_url": "https://api.github.com/users/stephanie-wang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ray-project/ray/milestones/4", "html_url": "https://github.com/ray-project/ray/milestone/4", "labels_url": "https://api.github.com/repos/ray-project/ray/milestones/4/labels", "id": 5717613, "node_id": "MDk6TWlsZXN0b25lNTcxNzYxMw==", "number": 4, "title": "S3 object spilling", "description": "This milestone is for tracking the progress of object spilling to external storage.", "creator": {"login": "suquark", "id": 13750372, "node_id": "MDQ6VXNlcjEzNzUwMzcy", "avatar_url": "https://avatars1.githubusercontent.com/u/13750372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suquark", "html_url": "https://github.com/suquark", "followers_url": "https://api.github.com/users/suquark/followers", "following_url": "https://api.github.com/users/suquark/following{/other_user}", "gists_url": "https://api.github.com/users/suquark/gists{/gist_id}", "starred_url": "https://api.github.com/users/suquark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suquark/subscriptions", "organizations_url": "https://api.github.com/users/suquark/orgs", "repos_url": "https://api.github.com/users/suquark/repos", "events_url": "https://api.github.com/users/suquark/events{/privacy}", "received_events_url": "https://api.github.com/users/suquark/received_events", "type": "User", "site_admin": false}, "open_issues": 5, "closed_issues": 1, "state": "open", "created_at": "2020-07-31T00:08:45Z", "updated_at": "2020-08-20T21:47:00Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2020-08-18T20:02:50Z", "updated_at": "2020-08-20T21:47:00Z", "closed_at": "2020-08-20T21:47:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/10179", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10179/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10179/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10179/events", "html_url": "https://github.com/ray-project/ray/issues/10179", "id": 681179843, "node_id": "MDU6SXNzdWU2ODExNzk4NDM=", "number": 10179, "title": "'rollout_fragment_length' and 'truncate_episodes'", "user": {"login": "mimoralea", "id": 2921476, "node_id": "MDQ6VXNlcjI5MjE0NzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2921476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mimoralea", "html_url": "https://github.com/mimoralea", "followers_url": "https://api.github.com/users/mimoralea/followers", "following_url": "https://api.github.com/users/mimoralea/following{/other_user}", "gists_url": "https://api.github.com/users/mimoralea/gists{/gist_id}", "starred_url": "https://api.github.com/users/mimoralea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mimoralea/subscriptions", "organizations_url": "https://api.github.com/users/mimoralea/orgs", "repos_url": "https://api.github.com/users/mimoralea/repos", "events_url": "https://api.github.com/users/mimoralea/events{/privacy}", "received_events_url": "https://api.github.com/users/mimoralea/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-08-18T16:35:49Z", "updated_at": "2020-08-19T22:53:46Z", "closed_at": "2020-08-19T22:53:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I want to check the functionality as this comment here is a bit confusing to me:\r\n\r\nhttps://github.com/ray-project/ray/blob/f733d2648b804bb698892affced7857a72990fb9/rllib/agents/ppo/ppo.py#L62-L63\r\n\r\nI have an episodic environment with a time wrapper that prevents it from going over 1,000 timesteps; that means, the terminal signal and reward can come at any time due to the agent succeeding or failing at the task, including at the 1,000 timestep mark.\r\n\r\nIf I set the following:\r\n```\r\n'rollout_fragment_length': 200,\r\n'batch_mode': 'truncate_episodes',\r\n'train_batch_size': 5000\r\n```\r\n\r\nWill all of my episodes be truncated to 200, and then accumulated until the 5,000 `train_batch_size` is filled, or will only the last episode that would otherwise move the `train_batch_size` over 5,000 be truncated?\r\n\r\nMy concern is whether or not reward signals over the 200+ timestep will be used for training.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/10169", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10169/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10169/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10169/events", "html_url": "https://github.com/ray-project/ray/issues/10169", "id": 680578052, "node_id": "MDU6SXNzdWU2ODA1NzgwNTI=", "number": 10169, "title": "[rllib] [tune] tune.run does not work", "user": {"login": "AprilXiaoyanLiu", "id": 8538822, "node_id": "MDQ6VXNlcjg1Mzg4MjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8538822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AprilXiaoyanLiu", "html_url": "https://github.com/AprilXiaoyanLiu", "followers_url": "https://api.github.com/users/AprilXiaoyanLiu/followers", "following_url": "https://api.github.com/users/AprilXiaoyanLiu/following{/other_user}", "gists_url": "https://api.github.com/users/AprilXiaoyanLiu/gists{/gist_id}", "starred_url": "https://api.github.com/users/AprilXiaoyanLiu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AprilXiaoyanLiu/subscriptions", "organizations_url": "https://api.github.com/users/AprilXiaoyanLiu/orgs", "repos_url": "https://api.github.com/users/AprilXiaoyanLiu/repos", "events_url": "https://api.github.com/users/AprilXiaoyanLiu/events{/privacy}", "received_events_url": "https://api.github.com/users/AprilXiaoyanLiu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-17T23:11:11Z", "updated_at": "2020-08-17T23:15:24Z", "closed_at": "2020-08-17T23:15:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I'm running one customized model with customized env and it works when I run \r\n\r\n`agent = DQNTrainer(config, \"pa_dummyEnv\")\r\nfor n in range(N_ITER):\r\n  result = agent.train()\r\n  file_name = agent.save(CHECKPOINT_ROOT)\r\n`\r\n\r\nbut when I run tune.run \r\n`ray.shutdown()\r\nray.init()\r\ntune.run(\r\n    \"DQN\",\r\n    stop=stop,\r\n    config=config\r\n)`\r\n\r\nit shows error \"Trials did not complete', ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/10164", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10164/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10164/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10164/events", "html_url": "https://github.com/ray-project/ray/issues/10164", "id": 680530847, "node_id": "MDU6SXNzdWU2ODA1MzA4NDc=", "number": 10164, "title": "[rllib] DQN Torch policy + parametric is broken on GPU", "user": {"login": "concretevitamin", "id": 592670, "node_id": "MDQ6VXNlcjU5MjY3MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/592670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/concretevitamin", "html_url": "https://github.com/concretevitamin", "followers_url": "https://api.github.com/users/concretevitamin/followers", "following_url": "https://api.github.com/users/concretevitamin/following{/other_user}", "gists_url": "https://api.github.com/users/concretevitamin/gists{/gist_id}", "starred_url": "https://api.github.com/users/concretevitamin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/concretevitamin/subscriptions", "organizations_url": "https://api.github.com/users/concretevitamin/orgs", "repos_url": "https://api.github.com/users/concretevitamin/repos", "events_url": "https://api.github.com/users/concretevitamin/events{/privacy}", "received_events_url": "https://api.github.com/users/concretevitamin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2040474101, "node_id": "MDU6TGFiZWwyMDQwNDc0MTAx", "url": "https://api.github.com/repos/ray-project/ray/labels/P2", "name": "P2", "color": "eef747", "default": false, "description": "Important issue, but not time-critical"}, {"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}, {"id": 1890823772, "node_id": "MDU6TGFiZWwxODkwODIzNzcy", "url": "https://api.github.com/repos/ray-project/ray/labels/rllib", "name": "rllib", "color": "13437c", "default": false, "description": "RLlib-related issues"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-17T21:16:23Z", "updated_at": "2020-08-21T20:32:36Z", "closed_at": "2020-08-21T20:32:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is the problem?\r\n\r\nSee below. Ray 0.8.7.\r\n\r\n### Reproduction (REQUIRED)\r\n\r\n```\r\n# Modified script with \"num_gpus\": 1.\r\nrllib/examples$ p parametric_actions_cartpole.py --run=DQN --torch\r\n```\r\n\r\nhits error\r\n\r\n```\r\n  File \"/home/ubuntu/anaconda3/envs/exp/lib/python3.7/site-packages/ray/rllib/agents/dqn/dqn_torch_policy.py\", line 218, in build_q_losses\r\n    torch.where(q_t > -float(\"inf\"), q_t, torch.tensor(0.0)) *\r\nRuntimeError: Expected tensor to have CUDA Backend, but got tensor with CPU Backend (while checking arguments for CUDA_tensor_apply4)\r\n== Status ==\r\n```\r\n\r\n\r\nIf we cannot run your script, we cannot fix your issue.\r\n\r\n- [x] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [ ] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/10160", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10160/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10160/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10160/events", "html_url": "https://github.com/ray-project/ray/issues/10160", "id": 680422484, "node_id": "MDU6SXNzdWU2ODA0MjI0ODQ=", "number": 10160, "title": "[RFC][tune] write output to ./ray_results instead of ~/ray_results", "user": {"login": "sumanthratna", "id": 31281983, "node_id": "MDQ6VXNlcjMxMjgxOTgz", "avatar_url": "https://avatars1.githubusercontent.com/u/31281983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumanthratna", "html_url": "https://github.com/sumanthratna", "followers_url": "https://api.github.com/users/sumanthratna/followers", "following_url": "https://api.github.com/users/sumanthratna/following{/other_user}", "gists_url": "https://api.github.com/users/sumanthratna/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumanthratna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumanthratna/subscriptions", "organizations_url": "https://api.github.com/users/sumanthratna/orgs", "repos_url": "https://api.github.com/users/sumanthratna/repos", "events_url": "https://api.github.com/users/sumanthratna/events{/privacy}", "received_events_url": "https://api.github.com/users/sumanthratna/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1374085984, "node_id": "MDU6TGFiZWwxMzc0MDg1OTg0", "url": "https://api.github.com/repos/ray-project/ray/labels/enhancement", "name": "enhancement", "color": "a0b1ff", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-08-17T18:02:24Z", "updated_at": "2020-08-20T01:37:01Z", "closed_at": "2020-08-20T01:37:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe your feature request\r\n\r\n#### Pros\r\n- seems more intuitive (IMO): the output data of a script should be written to a folder as close to the script as possible unless specified otherwise\r\n- it's a bad practice if a script writes to the home directory -@Maltimore \r\n\r\n#### Cons\r\n- breaking change\r\n    - https://github.com/search?q=%7E%2Fray_results&type=Code\r\n- users will need to add `ray_results` to their .gitignore in order to prevent cluttering their git repos\r\n    - most users don't really work on *that* many projects\u2014at least not to the point where this becomes an issue worth complaining about -@Maltimore\r\n    - if users use Tune a lot, they can [add to their global gitignore](https://docs.github.com/en/github/using-git/ignoring-files#configuring-ignored-files-for-all-repositories-on-your-computer) which will reduce the inconvenience\r\n    - if users actually care about reproducibility/full transparency, they'll need to move ~/ray_results to their repo anyway with the current behavior\r\n        - I will admit that most users probably don't want to push `ray_results` though\r\n    - I have to add `.DS_Store` to all my gitignores anyway so I don't really mind\r\n\r\n---\r\n\r\nCC @richardliaw \r\n\r\noriginally discussed in slack a little: https://ray-distributed.slack.com/archives/CNECXMW22/p1597415968294300", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/10159", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10159/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10159/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10159/events", "html_url": "https://github.com/ray-project/ray/issues/10159", "id": 680336696, "node_id": "MDU6SXNzdWU2ODAzMzY2OTY=", "number": 10159, "title": "[rllib] Negative vf_explained_var", "user": {"login": "debackerl", "id": 245298, "node_id": "MDQ6VXNlcjI0NTI5OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/245298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/debackerl", "html_url": "https://github.com/debackerl", "followers_url": "https://api.github.com/users/debackerl/followers", "following_url": "https://api.github.com/users/debackerl/following{/other_user}", "gists_url": "https://api.github.com/users/debackerl/gists{/gist_id}", "starred_url": "https://api.github.com/users/debackerl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/debackerl/subscriptions", "organizations_url": "https://api.github.com/users/debackerl/orgs", "repos_url": "https://api.github.com/users/debackerl/repos", "events_url": "https://api.github.com/users/debackerl/events{/privacy}", "received_events_url": "https://api.github.com/users/debackerl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-17T15:48:47Z", "updated_at": "2020-08-18T16:39:36Z", "closed_at": "2020-08-18T16:39:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "### [rllib] Negative vf_explained_var\r\n\r\nPython 3.8.5, TensorFlow 2.2.0, rllib 0.8.6, Linux Pop_OS 20.04\r\n\r\nI have been trying PPO on a simple experiment. If first reward after an action is too negative, then it looks like that it won't realize that future positive rewards will make up for it. What I observed is that the vf_explained_var will first briefly grow to 0.8 before reversing, and oscillating back and forth between 0 and -1 (and always stay negative indeed). In the end, it learns to not do anything, so that there is no large negative reward, but also no positive ones. Would that be a limitation in PPO or am I formulating an ill problem?\r\n\r\nIn a nutshell, the environment has organisms which are placed in a cold storage and a live pool. Population in cold storage is stable, but goes up and down in the live pool depending on the current climate. The action specifies how much to transfer between those two, with a loss of 10% of organism during transfer in either direction. The growth rate of the live pool depending on time is given by a simple formula: exp(2*(0.02*sin(t)+0.1*sin(t*0.1)+sin(t*0.005))).\r\n\r\nThe episode lasts at most 252 timesteps. A good policy would transfer all organisms in the live pool when the environment makes them replicate, and transfer them back to cold storage before the environment kills most of them. sin(t*0.005) will be the main growth driver.\r\n\r\nDoes a negative vf_explained_var means that the expected value function is negatively correlated to the actual reward?\r\n\r\nThank you for any hint!!\r\n\r\nCode:\r\n```\r\nimport math\r\nimport gym\r\nimport numpy as np\r\nfrom gym import spaces\r\nfrom random import Random\r\n\r\nimport ray\r\nfrom ray import tune\r\nfrom ray.tune.registry import register_env\r\nfrom ray.rllib.agents.ppo import DEFAULT_CONFIG as PPO_DEFAULT_CONFIG\r\n\r\nclass TraderEnv(gym.Env):\r\n  def __init__(self, env_config):\r\n    self.action_space = spaces.Box(low=-1.0, high=1.0, shape=(1,), dtype=np.float64)\r\n    self.observation_space = spaces.Box(low=np.array([-1.0, 0.0, -1.0, -10.0, -1, -1, -1]), high=np.array([2.0, 1.0, 1.0, 15, 1, 1, 1]), shape=(7,), dtype=np.float64)\r\n\r\n    self._transfer_loss = env_config.get('transfer_loss', 0.0) # cost = transfer_loss * transfer_amount\r\n    self._max_days = env_config.get('max_days', 252)\r\n    self._shutdown_population = env_config.get('shutdown_population', 0.1)\r\n\r\n    self.seed(0)\r\n\r\n  def seed(self, seed=0):\r\n    self._rnd = Random(seed)\r\n    self._phase = self._rnd.random() * 800\r\n    return [ seed ]\r\n\r\n  def reset(self):\r\n    self._t = t = self._phase\r\n    self._log_population_t = self._log_population(t)\r\n    self._cold_storage = 1.0\r\n    self._live = 0.0\r\n    self._perf = 0.0\r\n\r\n    return [ self._perf, self._live / (self._cold_storage + self._live), self._log_population_t - self._log_population(t-1), self._log_population_t, math.sin(t), math.sin(t*0.1), math.sin(t*0.005) ]\r\n\r\n  def step(self, action):\r\n    self._t += 1\r\n    t = self._t\r\n\r\n    prev_log_population_t = self._log_population_t\r\n    self._log_population_t = log_population_t = self._log_population(t)\r\n\r\n    operation = action[0]\r\n\r\n    prev_total = self._cold_storage + self._live\r\n\r\n    if operation > 0.0:\r\n      # transfer from cold storage to live population\r\n      amount = self._cold_storage * operation\r\n      self._cold_storage -= amount\r\n      # amount = live + transfer_loss * live <=> amount = (1 + transfer_loss) * live <=> live = amount / (1 + transfer_loss)\r\n      self._live += amount / (1 + self._transfer_loss)\r\n    elif operation < 0.0:\r\n      # transfer from live population to cold storage\r\n      amount = self._live * -operation\r\n      self._live -= amount\r\n      self._cold_storage += amount * (1 - self._transfer_loss)\r\n\r\n    cost = self._cold_storage + self._live - prev_total\r\n\r\n    growth = math.exp(log_population_t - prev_log_population_t) # = math.exp(log_population_t) / math.exp(prev_log_population_t) = population_t / prev_population_t\r\n    self._live *= growth\r\n\r\n    total = self._cold_storage + self._live\r\n\r\n    reward = math.log(total / prev_total) # = math.log(self._total) - math.log(prev_total)\r\n    self._perf = (self._perf + math.log((total + cost) / prev_total)) * 0.5 # how good the agent has been doing recently\r\n\r\n    observation = [ self._perf, self._live / (self._cold_storage + self._live), log_population_t - prev_log_population_t, log_population_t, math.sin(t), math.sin(t*0.1), math.sin(t*0.005) ]\r\n\r\n    done = total < self._shutdown_population or (self._t - self._phase) >= self._max_days\r\n\r\n    info = {}\r\n\r\n    return observation, reward, done, info\r\n\r\n  def _log_population(self, t):\r\n    return 2*(0.02*math.sin(t)+0.1*math.sin(t*0.1)+math.sin(t*0.005))\r\n\r\nif __name__ == \"__main__\":\r\n  ray.init(num_cpus=8, memory=16*1024*1024*1024, object_store_memory=4*1024*1024*1024)\r\n\r\n  trainer_config = PPO_DEFAULT_CONFIG.copy()\r\n\r\n  trainer_config['env'] = 'Reactor'\r\n  trainer_config['env_config'] = {\r\n    'transfer_loss': 0.1, # 10% loss during transfer in both directions\r\n  }\r\n\r\n  trainer_config['num_gpus'] = 0 # can use fractions to have multiple workers in parallel\r\n  trainer_config['num_workers'] = 0\r\n  trainer_config['num_envs_per_worker'] = 16\r\n\r\n  trainer_config['framework'] = 'tf'\r\n  trainer_config[\"sgd_minibatch_size\"] = 50\r\n  trainer_config[\"train_batch_size\"] = 400\r\n  trainer_config[\"num_sgd_iter\"] = 10\r\n\r\n  register_env(\"Reactor\", lambda env_config: TraderEnv(env_config))\r\n\r\n  stop = {\r\n    #\"time_total_s\": 600.0,\r\n    #\"training_iteration\": 20,\r\n    \"timesteps_total\": 500000,\r\n    #\"episode_reward_mean\": 0.116\r\n  }\r\n\r\n  analysis = tune.run('PPO', name=\"Reactor\", num_samples=16, config=trainer_config, checkpoint_at_end=True, stop=stop)\r\n\r\n  print(\"Best config: \", analysis.get_best_config(metric='episode_reward_mean'))\r\n\r\n  ray.shutdown()\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/10158", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10158/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10158/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10158/events", "html_url": "https://github.com/ray-project/ray/issues/10158", "id": 680310268, "node_id": "MDU6SXNzdWU2ODAzMTAyNjg=", "number": 10158, "title": "[RLLib] Torch Policy modification of action selection functions' input", "user": {"login": "raphaelavalos", "id": 28591322, "node_id": "MDQ6VXNlcjI4NTkxMzIy", "avatar_url": "https://avatars1.githubusercontent.com/u/28591322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raphaelavalos", "html_url": "https://github.com/raphaelavalos", "followers_url": "https://api.github.com/users/raphaelavalos/followers", "following_url": "https://api.github.com/users/raphaelavalos/following{/other_user}", "gists_url": "https://api.github.com/users/raphaelavalos/gists{/gist_id}", "starred_url": "https://api.github.com/users/raphaelavalos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raphaelavalos/subscriptions", "organizations_url": "https://api.github.com/users/raphaelavalos/orgs", "repos_url": "https://api.github.com/users/raphaelavalos/repos", "events_url": "https://api.github.com/users/raphaelavalos/events{/privacy}", "received_events_url": "https://api.github.com/users/raphaelavalos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1374085984, "node_id": "MDU6TGFiZWwxMzc0MDg1OTg0", "url": "https://api.github.com/repos/ray-project/ray/labels/enhancement", "name": "enhancement", "color": "a0b1ff", "default": true, "description": ""}, {"id": 2090776337, "node_id": "MDU6TGFiZWwyMDkwNzc2MzM3", "url": "https://api.github.com/repos/ray-project/ray/labels/triage", "name": "triage", "color": "b0e7f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-17T15:10:53Z", "updated_at": "2020-08-17T22:09:40Z", "closed_at": "2020-08-17T22:09:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe your feature request\r\n\r\nHello,\r\n\r\nIn its current form the action selection in PyTorch uses either `compute_actions_from_dict` or `compute_actions` (the latter creates an input dict). Both functions relies on `_compute_action_helper` that takes as input a dict and calls either:\r\n* `action_sampler_function` which takes just the observation and there is no way provide a state.\r\n* `action_distribution_fn` same as above.\r\n* the model which takes the full dict.\r\n\r\nIMO, it would make more sense if `action_sampler_function` and `action_distribution_fn` take as input the full input dict instead of just the observations. This would allow the use of RNNs in DQN, DDPG ... #9206\r\n\r\nI can make a PR with those changes.\r\n\r\n@ericl @sven1977 What do you think?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/10153", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10153/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10153/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10153/events", "html_url": "https://github.com/ray-project/ray/issues/10153", "id": 680176065, "node_id": "MDU6SXNzdWU2ODAxNzYwNjU=", "number": 10153, "title": "`None` in the fetching list", "user": {"login": "xlnwel", "id": 10184153, "node_id": "MDQ6VXNlcjEwMTg0MTUz", "avatar_url": "https://avatars0.githubusercontent.com/u/10184153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xlnwel", "html_url": "https://github.com/xlnwel", "followers_url": "https://api.github.com/users/xlnwel/followers", "following_url": "https://api.github.com/users/xlnwel/following{/other_user}", "gists_url": "https://api.github.com/users/xlnwel/gists{/gist_id}", "starred_url": "https://api.github.com/users/xlnwel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xlnwel/subscriptions", "organizations_url": "https://api.github.com/users/xlnwel/orgs", "repos_url": "https://api.github.com/users/xlnwel/repos", "events_url": "https://api.github.com/users/xlnwel/events{/privacy}", "received_events_url": "https://api.github.com/users/xlnwel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-17T11:53:10Z", "updated_at": "2020-08-20T12:06:54Z", "closed_at": "2020-08-20T12:05:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I participate in [this challenge](https://www.aicrowd.com/challenges/neurips-2020-procgen-competition), which requires using `ray[rllib]==0.8.6`. \r\n\r\nI've implemented an algorithm and it works without any issue locally. However, when evaluating at the server, I get an error message as follows\r\n \r\n>ERROR tf_run_builder.py:47 -- Error fetching: [None, {'learner_stats': {'max_rewar\r\nd': <tf.Tensor 'default_policy/Max:0' shape=() dtype=float32>, 'discount': <tf.Tensor 'default_policy/Mean_12:0' shape=() dtype=float32>, 'gamma': <tf.Tensor 'default_policy/Cons\r\nt_14:0' shape=() dtype=float32>, 'max_prob': <tf.Tensor 'default_policy/Mean_13:0' shape=() dtype=float32>, 'max_q': <tf.Tensor 'default_policy/Mean_14:0' shape=() dtype=float32>\r\n, 'q': <tf.Tensor 'default_policy/Mean_15:0' shape=() dtype=float32>, 'next_q': <tf.Tensor 'default_policy/Mean_16:0' shape=() dtype=float32>, 'next_value': <tf.Tensor 'default_p\r\nolicy/Mean_17:0' shape=() dtype=float32>, 'next_entropy': <tf.Tensor 'default_policy/Mean_18:0' shape=() dtype=float32>, 'td_error': <tf.Tensor 'default_policy/Mean_19:0' shape=(\r\n) dtype=float32>, 'actor_loss': <tf.Tensor 'default_policy/Neg_4:0' shape=() dtype=float32>, 'critic_loss': <tf.Tensor 'default_policy/truediv_5:0' shape=() dtype=float32>, 'temp\r\n_loss': <tf.Tensor 'default_policy/Neg_5:0' shape=() dtype=float32>, 'temp_value': <tf.Tensor 'default_policy/Exp_1:0' shape=() dtype=float32>, 'entropy': <tf.Tensor 'default_pol\r\nicy/Mean_20:0' shape=() dtype=float32>, 'target_entropy': <tf.Tensor 'default_policy/Const_23:0' shape=() dtype=float64>, 'entropy_diff': <tf.Tensor 'default_policy/Mean_21:0' sh\r\nape=() dtype=float32>, 'model': {}, 'actor_norm': 0, 'critic_norm': 0, 'temp_norm': 0}, 'td_error': <tf.Tensor 'default_policy/truediv_4:0' shape=(?,) dtype=float32>}], feed_dict\r\n={<tf.Tensor 'default_policy/observation:0' shape=(?, 64, 64, 12) dtype=float32>:...\r\n\r\nI know that the second element in the fetching list, a `dict`, comes from my custom `stats_fn`(something like [this code](https://github.com/ray-project/ray/blob/edd783bc327760a4892ab89222ee551e42df15b9/rllib/agents/sac/sac_tf_policy.py#L454)), but I have no idea where the first `None` comes from. The logs provided by the server is relatively limited(see below. It basically says there is None in the fetching list), and not related to any code I write\r\n\r\n\r\n>2020-08-15 14:16:29 | (pid=103)\r\n-- | --\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103) TypeError: Fetch argument None has invalid type <class 'NoneType'>\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)     (fetch, type(fetch)))\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)   File \"/home/aicrowd/.conda/lib/python3.7/site-packages/tensorflow/python/client/session.py\", line 263, in for_fetch\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)     self._mappers = [_FetchMapper.for_fetch(fetch) for fetch in fetches]\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)   File \"/home/aicrowd/.conda/lib/python3.7/site-packages/tensorflow/python/client/session.py\", line 378, in <listcomp>\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)     self._mappers = [_FetchMapper.for_fetch(fetch) for fetch in fetches]\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)   File \"/home/aicrowd/.conda/lib/python3.7/site-packages/tensorflow/python/client/session.py\", line 378, in __init__\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)     return _ListFetchMapper(fetch)\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)   File \"/home/aicrowd/.conda/lib/python3.7/site-packages/tensorflow/python/client/session.py\", line 266, in for_fetch\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)     self._fetch_mapper = _FetchMapper.for_fetch(fetches)\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)   File \"/home/aicrowd/.conda/lib/python3.7/site-packages/tensorflow/python/client/session.py\", line 477, in __init__\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)     self._graph, fetches, feed_dict_tensor, feed_handles=feed_handles)\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)   File \"/home/aicrowd/.conda/lib/python3.7/site-packages/tensorflow/python/client/session.py\", line 1166, in _run\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)     run_metadata_ptr)\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)   File \"/home/aicrowd/.conda/lib/python3.7/site-packages/tensorflow/python/client/session.py\", line 958, in run\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)     fetches = sess.run(ops, feed_dict=feed_dict)\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)   File \"/home/aicrowd/.conda/lib/python3.7/site-packages/ray/rllib/utils/tf_run_builder.py\", line 89, in run_timeline\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)     self.feed_dict, os.environ.get(\"TF_TIMELINE_DIR\"))\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)   File \"/home/aicrowd/.conda/lib/python3.7/site-packages/ray/rllib/utils/tf_run_builder.py\", line 44, in get\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)     raise e\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)   File \"/home/aicrowd/.conda/lib/python3.7/site-packages/ray/rllib/utils/tf_run_builder.py\", line 48, in get\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)     info_out.update({k: builder.get(v) for k, v in to_fetch.items()})\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)   File \"/home/aicrowd/.conda/lib/python3.7/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 714, in <dictcomp>\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)     info_out.update({k: builder.get(v) for k, v in to_fetch.items()})\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)   File \"/home/aicrowd/.conda/lib/python3.7/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 714, in learn_on_batch\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)     grad_out = self.local_worker.learn_on_batch(replay)\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)   File \"/home/aicrowd/.conda/lib/python3.7/site-packages/ray/rllib/agents/dqn/learner_thread.py\", line 46, in step\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)     self.step()\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)   File \"/home/aicrowd/.conda/lib/python3.7/site-packages/ray/rllib/agents/dqn/learner_thread.py\", line 37, in run\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)     self.run()\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103)   File \"/home/aicrowd/.conda/lib/python3.7/threading.py\", line 926, in _bootstrap_inner\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103) Traceback (most recent call last):\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103) Exception in thread Thread-1:\r\n\u00a0 | 2020-08-15 14:16:29 | (pid=103) TypeError: Fetch argument None has invalid type <class 'NoneType'>\r\n\r\nWhere should I look at or how can I fix it?\r\n\r\nPs. I'm also confused about why there is a fetching list at all as I use TF2.2 which uses `tf.function` instead of `sess` to run the graph.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/10151", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10151/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10151/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10151/events", "html_url": "https://github.com/ray-project/ray/issues/10151", "id": 680123514, "node_id": "MDU6SXNzdWU2ODAxMjM1MTQ=", "number": 10151, "title": "Potential memory leak of a local `ObjectRef` reference", "user": {"login": "Seraphli", "id": 1586755, "node_id": "MDQ6VXNlcjE1ODY3NTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1586755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Seraphli", "html_url": "https://github.com/Seraphli", "followers_url": "https://api.github.com/users/Seraphli/followers", "following_url": "https://api.github.com/users/Seraphli/following{/other_user}", "gists_url": "https://api.github.com/users/Seraphli/gists{/gist_id}", "starred_url": "https://api.github.com/users/Seraphli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Seraphli/subscriptions", "organizations_url": "https://api.github.com/users/Seraphli/orgs", "repos_url": "https://api.github.com/users/Seraphli/repos", "events_url": "https://api.github.com/users/Seraphli/events{/privacy}", "received_events_url": "https://api.github.com/users/Seraphli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2020-08-17T10:23:42Z", "updated_at": "2020-08-19T19:03:36Z", "closed_at": "2020-08-19T19:03:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have some actor class and I want them to run some tasks in a while loop, or just complete some tasks and I don't want the result. So sometimes I don't call ray.get to get the result. Will it cause Redis memory to continually grow?\r\nWhat will happen when I just call `foo.func.remote()`? And how ray set the expire protocol of Redis?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/10144", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10144/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10144/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10144/events", "html_url": "https://github.com/ray-project/ray/issues/10144", "id": 679814016, "node_id": "MDU6SXNzdWU2Nzk4MTQwMTY=", "number": 10144, "title": "Ray got stuck on requesting more resources but actually needs less", "user": {"login": "zmonoid", "id": 16687307, "node_id": "MDQ6VXNlcjE2Njg3MzA3", "avatar_url": "https://avatars3.githubusercontent.com/u/16687307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zmonoid", "html_url": "https://github.com/zmonoid", "followers_url": "https://api.github.com/users/zmonoid/followers", "following_url": "https://api.github.com/users/zmonoid/following{/other_user}", "gists_url": "https://api.github.com/users/zmonoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/zmonoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zmonoid/subscriptions", "organizations_url": "https://api.github.com/users/zmonoid/orgs", "repos_url": "https://api.github.com/users/zmonoid/repos", "events_url": "https://api.github.com/users/zmonoid/events{/privacy}", "received_events_url": "https://api.github.com/users/zmonoid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}, {"id": 2090776337, "node_id": "MDU6TGFiZWwyMDkwNzc2MzM3", "url": "https://api.github.com/repos/ray-project/ray/labels/triage", "name": "triage", "color": "b0e7f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-08-16T19:45:42Z", "updated_at": "2020-08-16T19:59:47Z", "closed_at": "2020-08-16T19:59:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### Ray got stuck on requesting more resources but actually needs less.\r\n\r\nSince my script only need one GPU, so I set:\r\n```\r\nexport CUDA_VISIBLE_DEVICES=0\r\n```\r\n\r\nMy script is given below, it shows the following warning and program stuck here:\r\n\r\n>  INFO trainable.py:251 -- Trainable.setup took 21.559 seconds. If your trainable is slow to initialize, consider setting reuse_actors=True to reduce actor creation overheads.\r\n2020-08-17 03:33:33,853 WARNING worker.py:1134 -- The actor or task with ID ffffffffffffffff2512146c0100 is pending and cannot currently be scheduled. It requires {GPU: 0.100000}, {CPU: 1.000000} for execution and {GPU: 0.100000}, {CPU: 1.000000} for placement, but this node only has remaining {node:node_ip: 1.000000}, {GPUType:X: 1.000000}, {CPU: 19.000000}, {memory: 78.271484 GiB}, {object_store_memory: 25.878906 GiB}. In total there are 0 pending tasks and 5 pending actors on this node. This is likely due to all cluster resources being claimed by actors. To resolve the issue, consider creating fewer actors or increase the resources available to this Ray cluster. You can ignore this message if this Ray cluster is expected to auto-scale\r\n\r\n```\r\nray: 0.8.7\r\npython: 3.6.7\r\npytorch: 1.4.0\r\nos: ubuntu16.04\r\n```\r\n### Reproduction (REQUIRED)\r\nPlease provide a script that can be run to reproduce the issue. The script should have **no external library dependencies** (i.e., use fake or mock data / environments):\r\n\r\nIf we cannot run your script, we cannot fix your issue.\r\n\r\n- [ . ] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [ . ] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n\r\nBelow is a minimal example for reproduction:\r\n\r\n```python\r\nimport os\r\nos.environ['CUDA_VISIBLE_DEVICES']='0'\r\nimport ray\r\nfrom ray import tune\r\nimport torch\r\nimport torch.nn as nn\r\nimport torch.nn.functional as F\r\n\r\n@ray.remote(num_gpus=0.1)\r\nclass Actor:\r\n    def __init__(self, rank):\r\n        self.network = nn.Sequential(\r\n            nn.Linear(32, 128),\r\n            nn.ReLU(),\r\n            nn.Linear(128, 128)\r\n        )\r\n\r\n        self.network.to(0)\r\n        self.rank = rank\r\n\r\n    def sample(self):\r\n        x = torch.randn(32, 32).to(0)\r\n        y = torch.randn(32, 10).to(0)\r\n        z = self.network(x)\r\n        return z.detach(), y, self.rank\r\n\r\n\r\nclass Agent:\r\n    def __init__(self):\r\n        self.network = nn.Sequential(\r\n            nn.Linear(128, 128),\r\n            nn.ReLU(),\r\n            nn.Linear(128, 10)\r\n        )\r\n        self.network.to(0)\r\n\r\n        self.optimizer = torch.optim.Adam(self.network.parameters(), 1e-3)\r\n    \r\n    def train(self, z, y):\r\n        z = self.network(z)\r\n        loss = F.mse_loss(z, y)\r\n        \r\n        self.optimizer.zero_grad()\r\n        loss.backward()\r\n        self.optimizer.step()\r\n\r\n        return loss.detach()\r\n\r\nclass Trainer(tune.Trainable):\r\n\r\n    def _setup(self, config):\r\n        \r\n        self.actors = [Actor.remote(rank=rank) for rank in range(5)]\r\n        self.agent = Agent()\r\n        self.sample_ops = [a.sample.remote() for a in self.actors]\r\n\r\n    def _train(self):\r\n        done_id, self.sample_ops = ray.wait(self.sample_ops)\r\n        data = ray.get(done_id)\r\n        z, y, rank = data[0]\r\n        loss = self.agent.train(z, y)\r\n        self.sample_ops.append(self.actors[rank].sample.remote())\r\n        return dict(loss=loss.item())\r\n\r\n\r\nif __name__ == '__main__':\r\n    ray.init()\r\n    tune.run(\r\n        Trainer,\r\n        name='test',\r\n        verbose=1,\r\n        stop=lambda trial_id, result: result['training_iteration'] > 100,\r\n        resources_per_trial={\"gpu\": 1},\r\n    )\r\n    print(\"Done\")\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/10142", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10142/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10142/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10142/events", "html_url": "https://github.com/ray-project/ray/issues/10142", "id": 679765792, "node_id": "MDU6SXNzdWU2Nzk3NjU3OTI=", "number": 10142, "title": "[tune] Cannot create an implementation based on HyperOpt or Optuna with Ray Tune", "user": {"login": "Fritskee", "id": 18385896, "node_id": "MDQ6VXNlcjE4Mzg1ODk2", "avatar_url": "https://avatars2.githubusercontent.com/u/18385896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Fritskee", "html_url": "https://github.com/Fritskee", "followers_url": "https://api.github.com/users/Fritskee/followers", "following_url": "https://api.github.com/users/Fritskee/following{/other_user}", "gists_url": "https://api.github.com/users/Fritskee/gists{/gist_id}", "starred_url": "https://api.github.com/users/Fritskee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Fritskee/subscriptions", "organizations_url": "https://api.github.com/users/Fritskee/orgs", "repos_url": "https://api.github.com/users/Fritskee/repos", "events_url": "https://api.github.com/users/Fritskee/events{/privacy}", "received_events_url": "https://api.github.com/users/Fritskee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2020-08-16T14:38:01Z", "updated_at": "2020-08-19T07:35:56Z", "closed_at": "2020-08-19T07:34:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is your question?\r\nI'm trying to create an implementation of Raytune with Hyperopt, I have gone through the provided tutorial, however this is not relevant for how I require my hyperopt implementation.  I'm optimizing a Deep Neural Net architecture and use the HyperOpt _fmin_ function for this (this is different than from the example provided for RayTune iirc).  When I do try to base me of this example [from the documentation](https://docs.ray.io/en/master/tune/api_docs/suggestion.html#tune-hyperopt) then I keep on getting an Attribute error: \"metric unknown\" when I try to maximize the accuracy. \r\n\r\nExample of how I run my search space in HyperOpt: \r\nfn = create_model creates the DNN model of which the architecture is to be optimized. Space holds all the possible hyperparameters that are to be considered. \r\n` \r\n    best_run = fmin(fn = create_model, \r\n                    space = test_space, \r\n                    algo = tpe.suggest,\r\n                    max_evals = 10,\r\n                    trials = trials)\r\n`\r\n\r\nRegarding the Optuna library there is no example provided, although [this post](https://medium.com/riselab/cutting-edge-hyperparameter-tuning-with-ray-tune-be6c0447afdf) claims that there are 4 different search algorithm available for Optuna. Can you point me in the right direction for this?\r\n\r\n*Ray version and other system information (Python version, TensorFlow version, OS):*\r\nPython Version: 3.6\r\nTensorflow: 1.14\r\nRay: 0.8.6\r\nOS: macOS Mojave 10.14.6\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/10132", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10132/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10132/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10132/events", "html_url": "https://github.com/ray-project/ray/issues/10132", "id": 679539866, "node_id": "MDU6SXNzdWU2Nzk1Mzk4NjY=", "number": 10132, "title": "How about Further promote this project?", "user": {"login": "Wheeeeeeeeels", "id": 22765358, "node_id": "MDQ6VXNlcjIyNzY1MzU4", "avatar_url": "https://avatars2.githubusercontent.com/u/22765358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Wheeeeeeeeels", "html_url": "https://github.com/Wheeeeeeeeels", "followers_url": "https://api.github.com/users/Wheeeeeeeeels/followers", "following_url": "https://api.github.com/users/Wheeeeeeeeels/following{/other_user}", "gists_url": "https://api.github.com/users/Wheeeeeeeeels/gists{/gist_id}", "starred_url": "https://api.github.com/users/Wheeeeeeeeels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Wheeeeeeeeels/subscriptions", "organizations_url": "https://api.github.com/users/Wheeeeeeeeels/orgs", "repos_url": "https://api.github.com/users/Wheeeeeeeeels/repos", "events_url": "https://api.github.com/users/Wheeeeeeeeels/events{/privacy}", "received_events_url": "https://api.github.com/users/Wheeeeeeeeels/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-15T10:13:15Z", "updated_at": "2020-08-19T03:53:51Z", "closed_at": "2020-08-19T03:53:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is your question?\r\n\r\n*Ray version and other system information (Python version, TensorFlow version, OS):*\r\nI'd like write a chinese-version's docs about this docs,for more people can contribute this project,may i?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/10117", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10117/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10117/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10117/events", "html_url": "https://github.com/ray-project/ray/issues/10117", "id": 679311612, "node_id": "MDU6SXNzdWU2NzkzMTE2MTI=", "number": 10117, "title": "[rllib] Off Policy Estimation breaks with GPU on PyTorch (MARWIL) (Offline API)", "user": {"login": "juliusfrost", "id": 33183774, "node_id": "MDQ6VXNlcjMzMTgzNzc0", "avatar_url": "https://avatars2.githubusercontent.com/u/33183774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juliusfrost", "html_url": "https://github.com/juliusfrost", "followers_url": "https://api.github.com/users/juliusfrost/followers", "following_url": "https://api.github.com/users/juliusfrost/following{/other_user}", "gists_url": "https://api.github.com/users/juliusfrost/gists{/gist_id}", "starred_url": "https://api.github.com/users/juliusfrost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juliusfrost/subscriptions", "organizations_url": "https://api.github.com/users/juliusfrost/orgs", "repos_url": "https://api.github.com/users/juliusfrost/repos", "events_url": "https://api.github.com/users/juliusfrost/events{/privacy}", "received_events_url": "https://api.github.com/users/juliusfrost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1890801554, "node_id": "MDU6TGFiZWwxODkwODAxNTU0", "url": "https://api.github.com/repos/ray-project/ray/labels/P3", "name": "P3", "color": "a8fc9f", "default": false, "description": "Issue moderate in impact or severity"}, {"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-14T17:54:56Z", "updated_at": "2020-08-16T18:25:13Z", "closed_at": "2020-08-16T18:25:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### What is the problem?\r\n\r\nWhen I use MARWIL with PyTorch and num_gpus: 1, I get an error when computing metrics. This happens because in off policy estimation it uses the torch tensors on gpu instead of numpy arrays. Particularly, I use \"input_evaluation\": [\"is\", \"wis\"] and the error goes away when \"input_evaluation\": [\"simulation\"]\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Julius\\Anaconda3\\envs\\ray\\lib\\site-packages\\ray\\tune\\trial_runner.py\", line 497, in _process_trial\r\n    result = self.trial_executor.fetch_result(trial)\r\n  File \"C:\\Users\\Julius\\Anaconda3\\envs\\ray\\lib\\site-packages\\ray\\tune\\ray_trial_executor.py\", line 434, in fetch_result\r\n    result = ray.get(trial_future[0], DEFAULT_GET_TIMEOUT)\r\n  File \"C:\\Users\\Julius\\Anaconda3\\envs\\ray\\lib\\site-packages\\ray\\worker.py\", line 1553, in get\r\n    raise value.as_instanceof_cause()\r\nray.exceptions.RayTaskError(AttributeError): ray::MARWIL.train() (pid=9136, ip=10.0.0.18)\r\n  File \"python\\ray\\_raylet.pyx\", line 474, in ray._raylet.execute_task\r\n  File \"python\\ray\\_raylet.pyx\", line 427, in ray._raylet.execute_task.function_executor\r\n  File \"C:\\Users\\Julius\\Anaconda3\\envs\\ray\\lib\\site-packages\\ray\\function_manager.py\", line 567, in actor_method_executor\r\n    raise e\r\n  File \"C:\\Users\\Julius\\Anaconda3\\envs\\ray\\lib\\site-packages\\ray\\function_manager.py\", line 559, in actor_method_executor\r\n    method_returns = method(actor, *args, **kwargs)\r\n  File \"C:\\Users\\Julius\\Anaconda3\\envs\\ray\\lib\\site-packages\\ray\\rllib\\agents\\trainer.py\", line 522, in train\r\n    raise e\r\n  File \"C:\\Users\\Julius\\Anaconda3\\envs\\ray\\lib\\site-packages\\ray\\rllib\\agents\\trainer.py\", line 508, in train\r\n    result = Trainable.train(self)\r\n  File \"C:\\Users\\Julius\\Anaconda3\\envs\\ray\\lib\\site-packages\\ray\\tune\\trainable.py\", line 337, in train\r\n    result = self.step()\r\n  File \"C:\\Users\\Julius\\Anaconda3\\envs\\ray\\lib\\site-packages\\ray\\rllib\\agents\\trainer_template.py\", line 110, in step\r\n    res = next(self.train_exec_impl)\r\n  File \"C:\\Users\\Julius\\Anaconda3\\envs\\ray\\lib\\site-packages\\ray\\util\\iter.py\", line 758, in __next__\r\n    return next(self.built_iterator)\r\n  File \"C:\\Users\\Julius\\Anaconda3\\envs\\ray\\lib\\site-packages\\ray\\util\\iter.py\", line 793, in apply_foreach\r\n    result = fn(item)\r\n  File \"C:\\Users\\Julius\\Anaconda3\\envs\\ray\\lib\\site-packages\\ray\\rllib\\execution\\metric_ops.py\", line 87, in __call__\r\n    res = summarize_episodes(episodes, orig_episodes)\r\n  File \"C:\\Users\\Julius\\Anaconda3\\envs\\ray\\lib\\site-packages\\ray\\rllib\\evaluation\\metrics.py\", line 173, in summarize_episodes\r\n    metrics[k] = np.mean(v_list)\r\n  File \"<__array_function__ internals>\", line 6, in mean\r\n  File \"C:\\Users\\Julius\\Anaconda3\\envs\\ray\\lib\\site-packages\\numpy\\core\\fromnumeric.py\", line 3335, in mean\r\n    out=out, **kwargs)\r\n  File \"C:\\Users\\Julius\\Anaconda3\\envs\\ray\\lib\\site-packages\\numpy\\core\\_methods.py\", line 161, in _mean\r\n    ret = ret.dtype.type(ret / rcount)\r\nAttributeError: 'torch.dtype' object has no attribute 'type'\r\n``` \r\n\r\n### Reproduction (REQUIRED)\r\nPlease provide a script that can be run to reproduce the issue. The script should have **no external library dependencies** (i.e., use fake or mock data / environments):\r\n\r\nIf we cannot run your script, we cannot fix your issue.\r\n\r\n- [ ] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [ ] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/10113", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10113/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10113/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10113/events", "html_url": "https://github.com/ray-project/ray/issues/10113", "id": 679124613, "node_id": "MDU6SXNzdWU2NzkxMjQ2MTM=", "number": 10113, "title": "[tune] Questions about reproducing Tune results", "user": {"login": "guoxuxu", "id": 29363464, "node_id": "MDQ6VXNlcjI5MzYzNDY0", "avatar_url": "https://avatars2.githubusercontent.com/u/29363464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guoxuxu", "html_url": "https://github.com/guoxuxu", "followers_url": "https://api.github.com/users/guoxuxu/followers", "following_url": "https://api.github.com/users/guoxuxu/following{/other_user}", "gists_url": "https://api.github.com/users/guoxuxu/gists{/gist_id}", "starred_url": "https://api.github.com/users/guoxuxu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guoxuxu/subscriptions", "organizations_url": "https://api.github.com/users/guoxuxu/orgs", "repos_url": "https://api.github.com/users/guoxuxu/repos", "events_url": "https://api.github.com/users/guoxuxu/events{/privacy}", "received_events_url": "https://api.github.com/users/guoxuxu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2040474101, "node_id": "MDU6TGFiZWwyMDQwNDc0MTAx", "url": "https://api.github.com/repos/ray-project/ray/labels/P2", "name": "P2", "color": "eef747", "default": false, "description": "Important issue, but not time-critical"}, {"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}, {"id": 1890821689, "node_id": "MDU6TGFiZWwxODkwODIxNjg5", "url": "https://api.github.com/repos/ray-project/ray/labels/tune", "name": "tune", "color": "13437c", "default": false, "description": "Tune-related issues"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2020-08-14T12:28:44Z", "updated_at": "2020-08-17T11:14:21Z", "closed_at": "2020-08-17T11:14:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### Describe your feature request\r\n\r\nI am currently struggling with reproducing the best results using the best hyperparameters found by ray tune. Though I make sure the random seed is the same and data loaders are the same. The results just cannot be reproduced. \r\nI spent a lot of time learning ray Tune, but if it comes that the results cannot be reproduced, then it might not be a potential tool in the future. \r\nAs the early stopping is used, the best trial could be the one that did not run the whole epochs. \r\nWould it be a benefit if we can have an example of how to reproduce the results? If it is easy to reproduce trial results, it would make ray tune a hot tool in research.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/10111", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10111/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10111/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10111/events", "html_url": "https://github.com/ray-project/ray/issues/10111", "id": 679022685, "node_id": "MDU6SXNzdWU2NzkwMjI2ODU=", "number": 10111, "title": "ray dashboard not working", "user": {"login": "richardrl", "id": 5181990, "node_id": "MDQ6VXNlcjUxODE5OTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5181990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardrl", "html_url": "https://github.com/richardrl", "followers_url": "https://api.github.com/users/richardrl/followers", "following_url": "https://api.github.com/users/richardrl/following{/other_user}", "gists_url": "https://api.github.com/users/richardrl/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardrl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardrl/subscriptions", "organizations_url": "https://api.github.com/users/richardrl/orgs", "repos_url": "https://api.github.com/users/richardrl/repos", "events_url": "https://api.github.com/users/richardrl/events{/privacy}", "received_events_url": "https://api.github.com/users/richardrl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2040474101, "node_id": "MDU6TGFiZWwyMDQwNDc0MTAx", "url": "https://api.github.com/repos/ray-project/ray/labels/P2", "name": "P2", "color": "eef747", "default": false, "description": "Important issue, but not time-critical"}, {"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mfitton", "id": 3156716, "node_id": "MDQ6VXNlcjMxNTY3MTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/3156716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mfitton", "html_url": "https://github.com/mfitton", "followers_url": "https://api.github.com/users/mfitton/followers", "following_url": "https://api.github.com/users/mfitton/following{/other_user}", "gists_url": "https://api.github.com/users/mfitton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mfitton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mfitton/subscriptions", "organizations_url": "https://api.github.com/users/mfitton/orgs", "repos_url": "https://api.github.com/users/mfitton/repos", "events_url": "https://api.github.com/users/mfitton/events{/privacy}", "received_events_url": "https://api.github.com/users/mfitton/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mfitton", "id": 3156716, "node_id": "MDQ6VXNlcjMxNTY3MTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/3156716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mfitton", "html_url": "https://github.com/mfitton", "followers_url": "https://api.github.com/users/mfitton/followers", "following_url": "https://api.github.com/users/mfitton/following{/other_user}", "gists_url": "https://api.github.com/users/mfitton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mfitton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mfitton/subscriptions", "organizations_url": "https://api.github.com/users/mfitton/orgs", "repos_url": "https://api.github.com/users/mfitton/repos", "events_url": "https://api.github.com/users/mfitton/events{/privacy}", "received_events_url": "https://api.github.com/users/mfitton/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-08-14T09:15:30Z", "updated_at": "2020-08-18T18:34:36Z", "closed_at": "2020-08-18T18:34:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running the latest ray from master.\r\n\r\nAfter successfully launching my cluster on Docker + EC2 (with ray up), I run:\r\n`ray dashboard config.yaml`\r\n\r\nAnd get this error:\r\n```\r\nShared connection to 34.232.95.26 closed.\r\nFailed to forward dashboard, trying a new port...\r\nAttempting to establish dashboard locally at localhost:8339 connected to remote port 8265\r\n2020-08-14 05:13:55,740\tINFO commands.py:206 -- Using cached config at /tmp/ray-config-10c6e0ea95fc264f7720acb32cad187ddd2ca6bd\r\n2020-08-14 05:13:56,392\tINFO log_timer.py:27 -- NodeUpdater: i-08806f5968e4e77b8: Got IP  [LogTimer=443ms]\r\n2020-08-14 05:13:56,392\tINFO command_runner.py:476 -- NodeUpdater: i-08806f5968e4e77b8: Running ssh -tt -i /home/richard/.ssh/ray-autoscaler_us-east-1.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes -o ExitOnForwardFailure=yes -o ServerAliveInterval=5 -o ServerAliveCountMax=3 -o ControlMaster=auto -o ControlPath=/tmp/ray_ssh_6ae199a93c/0c1f82c8b5/%C -o ControlPersist=10s -o ConnectTimeout=120s ubuntu@34.232.95.26 bash --login -c -i 'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && command -v docker'\r\nd/usr/bin/docker\r\nShared connection to 34.232.95.26 closed.\r\nFailed to forward dashboard, trying a new port...\r\nAttempting to establish dashboard locally at localhost:8340 connected to remote port 8265\r\n2020-08-14 05:13:56,584\tINFO commands.py:206 -- Using cached config at /tmp/ray-config-10c6e0ea95fc264f7720acb32cad187ddd2ca6bd\r\n2020-08-14 05:13:57,120\tINFO log_timer.py:27 -- NodeUpdater: i-08806f5968e4e77b8: Got IP  [LogTimer=313ms]\r\n2020-08-14 05:13:57,121\tINFO command_runner.py:476 -- NodeUpdater: i-08806f5968e4e77b8: Running ssh -tt -i /home/richard/.ssh/ray-autoscaler_us-east-1.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes -o ExitOnForwardFailure=yes -o ServerAliveInterval=5 -o ServerAliveCountMax=3 -o ControlMaster=auto -o ControlPath=/tmp/ray_ssh_6ae199a93c/0c1f82c8b5/%C -o ControlPersist=10s -o ConnectTimeout=120s ubuntu@34.232.95.26 bash --login -c -i 'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && command -v docker'\r\n/usr/bin/docker\r\nShared connection to 34.232.95.26 closed.\r\nFailed to forward dashboard, trying a new port...\r\nAttempting to establish dashboard locally at localhost:8341 connected to remote port 8265\r\n2020-08-14 05:13:57,280\tINFO commands.py:206 -- Using cached config at /tmp/ray-config-10c6e0ea95fc264f7720acb32cad187ddd2ca6bd\r\n^C2020-08-14 05:13:57,565\tINFO log_timer.py:27 -- NodeUpdater: i-08806f5968e4e77b8: Got IP  [LogTimer=95ms]\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/10105", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10105/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10105/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10105/events", "html_url": "https://github.com/ray-project/ray/issues/10105", "id": 678776229, "node_id": "MDU6SXNzdWU2Nzg3NzYyMjk=", "number": 10105, "title": "[tune] better file-descriptor resource management for 21*c5.24xlarge (2000cores)", "user": {"login": "snmhaines", "id": 47899066, "node_id": "MDQ6VXNlcjQ3ODk5MDY2", "avatar_url": "https://avatars1.githubusercontent.com/u/47899066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snmhaines", "html_url": "https://github.com/snmhaines", "followers_url": "https://api.github.com/users/snmhaines/followers", "following_url": "https://api.github.com/users/snmhaines/following{/other_user}", "gists_url": "https://api.github.com/users/snmhaines/gists{/gist_id}", "starred_url": "https://api.github.com/users/snmhaines/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snmhaines/subscriptions", "organizations_url": "https://api.github.com/users/snmhaines/orgs", "repos_url": "https://api.github.com/users/snmhaines/repos", "events_url": "https://api.github.com/users/snmhaines/events{/privacy}", "received_events_url": "https://api.github.com/users/snmhaines/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}, {"id": 2090776337, "node_id": "MDU6TGFiZWwyMDkwNzc2MzM3", "url": "https://api.github.com/repos/ray-project/ray/labels/triage", "name": "triage", "color": "b0e7f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-13T22:43:41Z", "updated_at": "2020-08-14T06:25:09Z", "closed_at": "2020-08-14T06:25:08Z", "author_association": "NONE", "active_lock_reason": null, "body": " I am trying to run a large cluster on EC2 (21 x c5.24xlarge for Ubuntu 18.04), using Ray 0.8.6  but experiencing this run-time error:-\r\n```\r\n\"COULD NOT CREATE A LOGGINGFILE .... Could not create logging file: Too may open files\"  \r\n```\r\nThis has recently been reported before (issues #6583  and #7169), but neither of the solutions used therein seem to work.  I increased  ulimit in the head_start_ray_commands from 65536 to 1000000, then 10000000.  I also tried 1000000 in the worker config as well - neither made any difference: i.e. the fault occurred at about the same time in any case.  I presume that 2^16 is a hard limit determined elsewhere.\r\n\r\nI also tried \"sync_to_driver=False\" in the head-node config, after Ray is started.  This did have a noticeable effect:  the error didn't occur, at least not until I aborted the test at 30 minutes, but the performance of the cluster was crippled  - estimate that it would have taken about 20 times as long to run the test.\r\n\r\nThe test itself only involves opening and then closing one small text input file (local to each worker) on initialization, and I have run it with no problem on a cluster with a head-node and two workers.  I am guessing that the overload is being caused by the generation of all the log files on the head node, so I need a way of effectively stopping that.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/10094", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10094/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10094/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10094/events", "html_url": "https://github.com/ray-project/ray/issues/10094", "id": 678300424, "node_id": "MDU6SXNzdWU2NzgzMDA0MjQ=", "number": 10094, "title": "[dashboard] Dashboard doesn't load", "user": {"login": "mattearllongshot", "id": 37295291, "node_id": "MDQ6VXNlcjM3Mjk1Mjkx", "avatar_url": "https://avatars0.githubusercontent.com/u/37295291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattearllongshot", "html_url": "https://github.com/mattearllongshot", "followers_url": "https://api.github.com/users/mattearllongshot/followers", "following_url": "https://api.github.com/users/mattearllongshot/following{/other_user}", "gists_url": "https://api.github.com/users/mattearllongshot/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattearllongshot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattearllongshot/subscriptions", "organizations_url": "https://api.github.com/users/mattearllongshot/orgs", "repos_url": "https://api.github.com/users/mattearllongshot/repos", "events_url": "https://api.github.com/users/mattearllongshot/events{/privacy}", "received_events_url": "https://api.github.com/users/mattearllongshot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}, {"id": 2090554708, "node_id": "MDU6TGFiZWwyMDkwNTU0NzA4", "url": "https://api.github.com/repos/ray-project/ray/labels/dashboard", "name": "dashboard", "color": "0e8a16", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mfitton", "id": 3156716, "node_id": "MDQ6VXNlcjMxNTY3MTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/3156716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mfitton", "html_url": "https://github.com/mfitton", "followers_url": "https://api.github.com/users/mfitton/followers", "following_url": "https://api.github.com/users/mfitton/following{/other_user}", "gists_url": "https://api.github.com/users/mfitton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mfitton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mfitton/subscriptions", "organizations_url": "https://api.github.com/users/mfitton/orgs", "repos_url": "https://api.github.com/users/mfitton/repos", "events_url": "https://api.github.com/users/mfitton/events{/privacy}", "received_events_url": "https://api.github.com/users/mfitton/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mfitton", "id": 3156716, "node_id": "MDQ6VXNlcjMxNTY3MTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/3156716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mfitton", "html_url": "https://github.com/mfitton", "followers_url": "https://api.github.com/users/mfitton/followers", "following_url": "https://api.github.com/users/mfitton/following{/other_user}", "gists_url": "https://api.github.com/users/mfitton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mfitton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mfitton/subscriptions", "organizations_url": "https://api.github.com/users/mfitton/orgs", "repos_url": "https://api.github.com/users/mfitton/repos", "events_url": "https://api.github.com/users/mfitton/events{/privacy}", "received_events_url": "https://api.github.com/users/mfitton/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-08-13T09:39:44Z", "updated_at": "2020-08-17T08:53:02Z", "closed_at": "2020-08-13T21:30:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### What is the problem?\r\n\r\nOS: Ubuntu 18.04.4 LTS\r\nRay: 0.8.6\r\nPython: 3.8.1\r\n\r\nAfter opening the dashboard URL, the page starts to load but shortly after goes white, and the following is shown in the console:\r\n![image](https://user-images.githubusercontent.com/37295291/90118621-6c297580-dd50-11ea-81cc-362fc874681a.png)\r\n\r\n`dashboard.err` on the head node shows a mixture of these two exceptions:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/ubuntu/conda/envs/venv/lib/python3.8/site-packages/ray/dashboard/dashboard.py\", line 694, in run\r\n    reply = stub.GetNodeStats(\r\n  File \"/home/ubuntu/conda/envs/venv/lib/python3.8/site-packages/grpc/_channel.py\", line 826, in __call__\r\n    return _end_unary_response_blocking(state, call, False, None)\r\n  File \"/home/ubuntu/conda/envs/venv/lib/python3.8/site-packages/grpc/_channel.py\", line 729, in _end_unary_response_blocking\r\n    raise _InactiveRpcError(state)\r\ngrpc._channel._InactiveRpcError: <_InactiveRpcError of RPC that terminated with:\r\n        status = StatusCode.UNAVAILABLE\r\n        details = \"failed to connect to all addresses\"\r\n        debug_error_string = \"{\"created\":\"@1597310306.233611716\",\"description\":\"Failed to pick subchannel\",\"file\":\"src/core/ext/filters/client_channel/client_channel.cc\",\"file_line\":3981,\"referenced_errors\":[{\"created\":\"@1597310304.500921719\",\"description\":\"failed to connect to all addresses\",\"file\":\"src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc\",\"file_line\":394,\"grpc_status\":14}]}\"\r\n>\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/ubuntu/conda/envs/venv/lib/python3.8/site-packages/ray/dashboard/dashboard.py\", line 694, in run\r\n    reply = stub.GetNodeStats(\r\n  File \"/home/ubuntu/conda/envs/venv/lib/python3.8/site-packages/grpc/_channel.py\", line 826, in __call__\r\n    return _end_unary_response_blocking(state, call, False, None)\r\n  File \"/home/ubuntu/conda/envs/venv/lib/python3.8/site-packages/grpc/_channel.py\", line 729, in _end_unary_response_blocking\r\n    raise _InactiveRpcError(state)\r\ngrpc._channel._InactiveRpcError: <_InactiveRpcError of RPC that terminated with:\r\n        status = StatusCode.DEADLINE_EXCEEDED\r\n        details = \"Deadline Exceeded\"\r\n        debug_error_string = \"{\"created\":\"@1597310309.640169697\",\"description\":\"Deadline Exceeded\",\"file\":\"src/core/ext/filters/deadline/deadline_filter.cc\",\"file_line\":69,\"grpc_status\":4}\"\r\n>\r\n````\r\n\r\n### Reproduction (REQUIRED)\r\n\r\nBoot a cluster, spin up some workers (may or may not be necessary).  Load the dashboard URL in Firefox\r\n\r\n- [ ] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [ ] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/10082", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10082/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10082/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10082/events", "html_url": "https://github.com/ray-project/ray/issues/10082", "id": 678131447, "node_id": "MDU6SXNzdWU2NzgxMzE0NDc=", "number": 10082, "title": "[autoscaler] ray submit --start is broken", "user": {"login": "wuisawesome", "id": 3980609, "node_id": "MDQ6VXNlcjM5ODA2MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3980609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wuisawesome", "html_url": "https://github.com/wuisawesome", "followers_url": "https://api.github.com/users/wuisawesome/followers", "following_url": "https://api.github.com/users/wuisawesome/following{/other_user}", "gists_url": "https://api.github.com/users/wuisawesome/gists{/gist_id}", "starred_url": "https://api.github.com/users/wuisawesome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wuisawesome/subscriptions", "organizations_url": "https://api.github.com/users/wuisawesome/orgs", "repos_url": "https://api.github.com/users/wuisawesome/repos", "events_url": "https://api.github.com/users/wuisawesome/events{/privacy}", "received_events_url": "https://api.github.com/users/wuisawesome/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1805253707, "node_id": "MDU6TGFiZWwxODA1MjUzNzA3", "url": "https://api.github.com/repos/ray-project/ray/labels/P0", "name": "P0", "color": "cc0507", "default": false, "description": "Issue that must be fixed in short order"}, {"id": 2006551648, "node_id": "MDU6TGFiZWwyMDA2NTUxNjQ4", "url": "https://api.github.com/repos/ray-project/ray/labels/autoscaler", "name": "autoscaler", "color": "13437c", "default": false, "description": ""}, {"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-13T04:00:05Z", "updated_at": "2020-08-13T07:54:45Z", "closed_at": "2020-08-13T07:54:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is the problem?\r\n\r\n`ray submit --start ` is broken on latest master (presumably this is due to recent logging changes)\r\n\r\n### Reproduction (REQUIRED)\r\nPlease provide a script that can be run to reproduce the issue. The script should have **no external library dependencies** (i.e., use fake or mock data / environments):\r\n\r\n```\r\n(base) Alexs-MacBook-Pro-2:ray alex$ ray submit --start multi.yaml test.py \r\nTraceback (most recent call last):\r\n  File \"/Users/alex/miniconda3/bin/ray\", line 11, in <module>\r\n    load_entry_point('ray', 'console_scripts', 'ray')()\r\n  File \"/Users/alex/anyscale/ray/python/ray/scripts/scripts.py\", line 1587, in main\r\n    return cli()\r\n  File \"/Users/alex/miniconda3/lib/python3.7/site-packages/click/core.py\", line 829, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/Users/alex/miniconda3/lib/python3.7/site-packages/click/core.py\", line 782, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/Users/alex/miniconda3/lib/python3.7/site-packages/click/core.py\", line 1259, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/Users/alex/miniconda3/lib/python3.7/site-packages/click/core.py\", line 1066, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/Users/alex/miniconda3/lib/python3.7/site-packages/click/core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/Users/alex/anyscale/ray/python/ray/scripts/scripts.py\", line 1237, in submit\r\n    True, cluster_name, False)\r\nTypeError: create_or_update_cluster() missing 2 required positional arguments: 'dump_command_output' and 'use_login_shells'\r\n```\r\n\r\nIf we cannot run your script, we cannot fix your issue.\r\n\r\n- [ ] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [ ] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/10077", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10077/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10077/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10077/events", "html_url": "https://github.com/ray-project/ray/issues/10077", "id": 678056742, "node_id": "MDU6SXNzdWU2NzgwNTY3NDI=", "number": 10077, "title": "Docker + AWS fails with no such container error", "user": {"login": "richardrl", "id": 5181990, "node_id": "MDQ6VXNlcjUxODE5OTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5181990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardrl", "html_url": "https://github.com/richardrl", "followers_url": "https://api.github.com/users/richardrl/followers", "following_url": "https://api.github.com/users/richardrl/following{/other_user}", "gists_url": "https://api.github.com/users/richardrl/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardrl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardrl/subscriptions", "organizations_url": "https://api.github.com/users/richardrl/orgs", "repos_url": "https://api.github.com/users/richardrl/repos", "events_url": "https://api.github.com/users/richardrl/events{/privacy}", "received_events_url": "https://api.github.com/users/richardrl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}, {"id": 2090776337, "node_id": "MDU6TGFiZWwyMDkwNzc2MzM3", "url": "https://api.github.com/repos/ray-project/ray/labels/triage", "name": "triage", "color": "b0e7f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-13T00:18:05Z", "updated_at": "2020-08-14T02:38:33Z", "closed_at": "2020-08-14T02:38:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Latest dev version of ray\r\n\r\n```\r\n(vanilla_ray_venv) richard@richard-desktop:~/improbable/vanillas/ray/python/ray/autoscaler/aws$ ray up aws_gpu_dummy.yaml \r\n2020-08-12 20:12:39,383\tINFO config.py:268 -- _configure_iam_role: Role not specified for head node, using arn:aws:iam::179622923911:instance-profile/ray-autoscaler-v1\r\n2020-08-12 20:12:39,612\tINFO config.py:346 -- _configure_key_pair: KeyName not specified for nodes, using ray-autoscaler_us-east-1\r\n2020-08-12 20:12:39,745\tINFO config.py:407 -- _configure_subnet: SubnetIds not specified for head node, using [('subnet-f737f791', 'us-east-1a')]\r\n2020-08-12 20:12:39,746\tINFO config.py:417 -- _configure_subnet: SubnetId not specified for workers, using [('subnet-f737f791', 'us-east-1a')]\r\n2020-08-12 20:12:40,358\tINFO config.py:590 -- _create_security_group: Created new security group ray-autoscaler-richard_cluster_gpu_dummy (sg-0061ca6aff182c1bf)\r\n2020-08-12 20:12:40,739\tINFO config.py:444 -- _configure_security_group: SecurityGroupIds not specified for head node, using ray-autoscaler-richard_cluster_gpu_dummy (sg-0061ca6aff182c1bf)\r\n2020-08-12 20:12:40,739\tINFO config.py:454 -- _configure_security_group: SecurityGroupIds not specified for workers, using ray-autoscaler-richard_cluster_gpu_dummy (sg-0061ca6aff182c1bf)\r\nThis will create a new cluster [y/N]: y\r\n2020-08-12 20:12:42,619\tINFO commands.py:531 -- get_or_create_head_node: Launching new head node...\r\n2020-08-12 20:12:42,620\tINFO node_provider.py:326 -- NodeProvider: calling create_instances with subnet-f737f791 (count=1).\r\n2020-08-12 20:12:44,032\tINFO node_provider.py:354 -- NodeProvider: Created instance [id=i-0729c7a86355d5ff8, name=pending, info=pending]\r\n2020-08-12 20:12:44,223\tINFO commands.py:570 -- get_or_create_head_node: Updating files on head node...\r\n2020-08-12 20:12:44,320\tINFO command_runner.py:331 -- NodeUpdater: i-0729c7a86355d5ff8: Waiting for IP...\r\n2020-08-12 20:12:54,409\tINFO command_runner.py:331 -- NodeUpdater: i-0729c7a86355d5ff8: Waiting for IP...\r\n2020-08-12 20:12:54,534\tINFO log_timer.py:27 -- NodeUpdater: i-0729c7a86355d5ff8: Got IP  [LogTimer=10310ms]\r\n2020-08-12 20:12:54,534\tINFO command_runner.py:468 -- NodeUpdater: i-0729c7a86355d5ff8: Running ssh -tt -i /home/richard/.ssh/ray-autoscaler_us-east-1.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes -o ExitOnForwardFailure=yes -o ServerAliveInterval=5 -o ServerAliveCountMax=3 -o ControlMaster=auto -o ControlPath=/tmp/ray_ssh_6ae199a93c/cfde1c79f1/%C -o ControlPersist=10s -o ConnectTimeout=120s ubuntu@3.226.253.119 bash --login -c -i 'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && command -v docker'\r\nWarning: Permanently added '3.226.253.119' (ECDSA) to the list of known hosts.\r\n/usr/bin/docker\r\nShared connection to 3.226.253.119 closed.\r\n2020-08-12 20:14:04,587\tINFO updater.py:71 -- NodeUpdater: i-0729c7a86355d5ff8: Updating to 6b5fc8ee8c5dcdf3cfabe0bf90ba4e844f65a7c9\r\n2020-08-12 20:14:04,587\tINFO updater.py:180 -- NodeUpdater: i-0729c7a86355d5ff8: Waiting for remote shell...\r\n2020-08-12 20:14:04,587\tINFO command_runner.py:468 -- NodeUpdater: i-0729c7a86355d5ff8: Running ssh -tt -i /home/richard/.ssh/ray-autoscaler_us-east-1.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes -o ExitOnForwardFailure=yes -o ServerAliveInterval=5 -o ServerAliveCountMax=3 -o ControlMaster=auto -o ControlPath=/tmp/ray_ssh_6ae199a93c/cfde1c79f1/%C -o ControlPersist=10s -o ConnectTimeout=120s ubuntu@3.226.253.119 bash --login -c -i 'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && docker exec -it  pytorch_docker /bin/bash -c '\"'\"'bash --login -c -i '\"'\"'\"'\"'\"'\"'\"'\"'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && uptime'\"'\"'\"'\"'\"'\"'\"'\"''\"'\"' '\r\n2020-08-12 20:14:04,950\tINFO log_timer.py:27 -- AWSNodeProvider: Set tag ray-node-status=waiting-for-ssh on ['i-0729c7a86355d5ff8']  [LogTimer=361ms]\r\n                             Error: No such container: pytorch_docker\r\nShared connection to 3.226.253.119 closed.\r\n2020-08-12 20:14:21,222\tINFO command_runner.py:468 -- NodeUpdater: i-0729c7a86355d5ff8: Running ssh -tt -i /home/richard/.ssh/ray-autoscaler_us-east-1.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes -o ExitOnForwardFailure=yes -o ServerAliveInterval=5 -o ServerAliveCountMax=3 -o ControlMaster=auto -o ControlPath=/tmp/ray_ssh_6ae199a93c/cfde1c79f1/%C -o ControlPersist=10s -o ConnectTimeout=120s ubuntu@3.226.253.119 bash --login -c -i 'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && docker exec -it  pytorch_docker /bin/bash -c '\"'\"'bash --login -c -i '\"'\"'\"'\"'\"'\"'\"'\"'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && uptime'\"'\"'\"'\"'\"'\"'\"'\"''\"'\"' '\r\nError: No such container: pytorch_docker\r\nShared connection to 3.226.253.119 closed.\r\n2020-08-12 20:14:26,417\tINFO command_runner.py:468 -- NodeUpdater: i-0729c7a86355d5ff8: Running ssh -tt -i /home/richard/.ssh/ray-autoscaler_us-east-1.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes -o ExitOnForwardFailure=yes -o ServerAliveInterval=5 -o ServerAliveCountMax=3 -o ControlMaster=auto -o ControlPath=/tmp/ray_ssh_6ae199a93c/cfde1c79f1/%C -o ControlPersist=10s -o ConnectTimeout=120s ubuntu@3.226.253.119 bash --login -c -i 'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && docker exec -it  pytorch_docker /bin/bash -c '\"'\"'bash --login -c -i '\"'\"'\"'\"'\"'\"'\"'\"'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && uptime'\"'\"'\"'\"'\"'\"'\"'\"''\"'\"' '\r\nError: No such container: pytorch_docker\r\nShared connection to 3.226.253.119 closed.\r\n2020-08-12 20:14:31,610\tINFO command_runner.py:468 -- NodeUpdater: i-0729c7a86355d5ff8: Running ssh -tt -i /home/richard/.ssh/ray-autoscaler_us-east-1.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes -o ExitOnForwardFailure=yes -o ServerAliveInterval=5 -o ServerAliveCountMax=3 -o ControlMaster=auto -o ControlPath=/tmp/ray_ssh_6ae199a93c/cfde1c79f1/%C -o ControlPersist=10s -o ConnectTimeout=120s ubuntu@3.226.253.119 bash --login -c -i 'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && docker exec -it  pytorch_docker /bin/bash -c '\"'\"'bash --login -c -i '\"'\"'\"'\"'\"'\"'\"'\"'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && uptime'\"'\"'\"'\"'\"'\"'\"'\"''\"'\"' '\r\nError: No such container: pytorch_docker\r\nShared connection to 3.226.253.119 closed.\r\n2020-08-12 20:14:36,798\tINFO command_runner.py:468 -- NodeUpdater: i-0729c7a86355d5ff8: Running ssh -tt -i /home/richard/.ssh/ray-autoscaler_us-east-1.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes -o ExitOnForwardFailure=yes -o ServerAliveInterval=5 -o ServerAliveCountMax=3 -o ControlMaster=auto -o ControlPath=/tmp/ray_ssh_6ae199a93c/cfde1c79f1/%C -o ControlPersist=10s -o ConnectTimeout=120s ubuntu@3.226.253.119 bash --login -c -i 'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && docker exec -it  pytorch_docker /bin/bash -c '\"'\"'bash --login -c -i '\"'\"'\"'\"'\"'\"'\"'\"'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && uptime'\"'\"'\"'\"'\"'\"'\"'\"''\"'\"' '\r\nError: No such container: pytorch_docker\r\nShared connection to 3.226.253.119 closed.\r\n2020-08-12 20:14:41,986\tINFO command_runner.py:468 -- NodeUpdater: i-0729c7a86355d5ff8: Running ssh -tt -i /home/richard/.ssh/ray-autoscaler_us-east-1.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes -o ExitOnForwardFailure=yes -o ServerAliveInterval=5 -o ServerAliveCountMax=3 -o ControlMaster=auto -o ControlPath=/tmp/ray_ssh_6ae199a93c/cfde1c79f1/%C -o ControlPersist=10s -o ConnectTimeout=120s ubuntu@3.226.253.119 bash --login -c -i 'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && docker exec -it  pytorch_docker /bin/bash -c '\"'\"'bash --login -c -i '\"'\"'\"'\"'\"'\"'\"'\"'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && uptime'\"'\"'\"'\"'\"'\"'\"'\"''\"'\"' '\r\nError: No such container: pytorch_docker\r\nShared connection to 3.226.253.119 closed.\r\n2020-08-12 20:14:47,170\tINFO command_runner.py:468 -- NodeUpdater: i-0729c7a86355d5ff8: Running ssh -tt -i /home/richard/.ssh/ray-autoscaler_us-east-1.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes -o ExitOnForwardFailure=yes -o ServerAliveInterval=5 -o ServerAliveCountMax=3 -o ControlMaster=auto -o ControlPath=/tmp/ray_ssh_6ae199a93c/cfde1c79f1/%C -o ControlPersist=10s -o ConnectTimeout=120s ubuntu@3.226.253.119 bash --login -c -i 'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && docker exec -it  pytorch_docker /bin/bash -c '\"'\"'bash --login -c -i '\"'\"'\"'\"'\"'\"'\"'\"'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && uptime'\"'\"'\"'\"'\"'\"'\"'\"''\"'\"' '\r\nError: No such container: pytorch_docker\r\nShared connection to 3.226.253.119 closed.\r\n2020-08-12 20:14:52,358\tINFO command_runner.py:468 -- NodeUpdater: i-0729c7a86355d5ff8: Running ssh -tt -i /home/richard/.ssh/ray-autoscaler_us-east-1.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes -o ExitOnForwardFailure=yes -o ServerAliveInterval=5 -o ServerAliveCountMax=3 -o ControlMaster=auto -o ControlPath=/tmp/ray_ssh_6ae199a93c/cfde1c79f1/%C -o ControlPersist=10s -o ConnectTimeout=120s ubuntu@3.226.253.119 bash --login -c -i 'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && docker exec -it  pytorch_docker /bin/bash -c '\"'\"'bash --login -c -i '\"'\"'\"'\"'\"'\"'\"'\"'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && uptime'\"'\"'\"'\"'\"'\"'\"'\"''\"'\"' '\r\nError: No such container: pytorch_docker\r\nShared connection to 3.226.253.119 closed.\r\n2020-08-12 20:14:57,554\tINFO command_runner.py:468 -- NodeUpdater: i-0729c7a86355d5ff8: Running ssh -tt -i /home/richard/.ssh/ray-autoscaler_us-east-1.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes -o ExitOnForwardFailure=yes -o ServerAliveInterval=5 -o ServerAliveCountMax=3 -o ControlMaster=auto -o ControlPath=/tmp/ray_ssh_6ae199a93c/cfde1c79f1/%C -o ControlPersist=10s -o ConnectTimeout=120s ubuntu@3.226.253.119 bash --login -c -i 'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && docker exec -it  pytorch_docker /bin/bash -c '\"'\"'bash --login -c -i '\"'\"'\"'\"'\"'\"'\"'\"'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && uptime'\"'\"'\"'\"'\"'\"'\"'\"''\"'\"' '\r\nError: No such container: pytorch_docker\r\nShared connection to 3.226.253.119 closed.\r\n2020-08-12 20:15:02,750\tINFO command_runner.py:468 -- NodeUpdater: i-0729c7a86355d5ff8: Running ssh -tt -i /home/richard/.ssh/ray-autoscaler_us-east-1.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes -o ExitOnForwardFailure=yes -o ServerAliveInterval=5 -o ServerAliveCountMax=3 -o ControlMaster=auto -o ControlPath=/tmp/ray_ssh_6ae199a93c/cfde1c79f1/%C -o ControlPersist=10s -o ConnectTimeout=120s ubuntu@3.226.253.119 bash --login -c -i 'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && docker exec -it  pytorch_docker /bin/bash -c '\"'\"'bash --login -c -i '\"'\"'\"'\"'\"'\"'\"'\"'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && uptime'\"'\"'\"'\"'\"'\"'\"'\"''\"'\"' '\r\nError: No such container: pytorch_docker\r\nShared connection to 3.226.253.119 closed.\r\n2020-08-12 20:15:07,938\tINFO command_runner.py:468 -- NodeUpdater: i-0729c7a86355d5ff8: Running ssh -tt -i /home/richard/.ssh/ray-autoscaler_us-east-1.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes -o ExitOnForwardFailure=yes -o ServerAliveInterval=5 -o ServerAliveCountMax=3 -o ControlMaster=auto -o ControlPath=/tmp/ray_ssh_6ae199a93c/cfde1c79f1/%C -o ControlPersist=10s -o ConnectTimeout=120s ubuntu@3.226.253.119 bash --login -c -i 'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && docker exec -it  pytorch_docker /bin/bash -c '\"'\"'bash --login -c -i '\"'\"'\"'\"'\"'\"'\"'\"'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && uptime'\"'\"'\"'\"'\"'\"'\"'\"''\"'\"' '\r\nError: No such container: pytorch_docker\r\nShared connection to 3.226.253.119 closed.\r\n2020-08-12 20:15:13,126\tINFO command_runner.py:468 -- NodeUpdater: i-0729c7a86355d5ff8: Running ssh -tt -i /home/richard/.ssh/ray-autoscaler_us-east-1.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes -o ExitOnForwardFailure=yes -o ServerAliveInterval=5 -o ServerAliveCountMax=3 -o ControlMaster=auto -o ControlPath=/tmp/ray_ssh_6ae199a93c/cfde1c79f1/%C -o ControlPersist=10s -o ConnectTimeout=120s ubuntu@3.226.253.119 bash --login -c -i 'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && docker exec -it  pytorch_docker /bin/bash -c '\"'\"'bash --login -c -i '\"'\"'\"'\"'\"'\"'\"'\"'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && uptime'\"'\"'\"'\"'\"'\"'\"'\"''\"'\"' '\r\nError: No such container: pytorch_docker\r\nShared connection to 3.226.253.119 closed.\r\n2020-08-12 20:15:18,307\tINFO command_runner.py:468 -- NodeUpdater: i-0729c7a86355d5ff8: Running ssh -tt -i /home/richard/.ssh/ray-autoscaler_us-east-1.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes -o ExitOnForwardFailure=yes -o ServerAliveInterval=5 -o ServerAliveCountMax=3 -o ControlMaster=auto -o ControlPath=/tmp/ray_ssh_6ae199a93c/cfde1c79f1/%C -o ControlPersist=10s -o ConnectTimeout=120s ubuntu@3.226.253.119 bash --login -c -i 'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && docker exec -it  pytorch_docker /bin/bash -c '\"'\"'bash --login -c -i '\"'\"'\"'\"'\"'\"'\"'\"'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && uptime'\"'\"'\"'\"'\"'\"'\"'\"''\"'\"' '\r\nError: No such container: pytorch_docker\r\nShared connection to 3.226.253.119 closed.\r\n2020-08-12 20:15:23,494\tINFO command_runner.py:468 -- NodeUpdater: i-0729c7a86355d5ff8: Running ssh -tt -i /home/richard/.ssh/ray-autoscaler_us-east-1.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes -o ExitOnForwardFailure=yes -o ServerAliveInterval=5 -o ServerAliveCountMax=3 -o ControlMaster=auto -o ControlPath=/tmp/ray_ssh_6ae199a93c/cfde1c79f1/%C -o ControlPersist=10s -o ConnectTimeout=120s ubuntu@3.226.253.119 bash --login -c -i 'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && docker exec -it  pytorch_docker /bin/bash -c '\"'\"'bash --login -c -i '\"'\"'\"'\"'\"'\"'\"'\"'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && uptime'\"'\"'\"'\"'\"'\"'\"'\"''\"'\"' '\r\nError: No such container: pytorch_docker\r\nShared connection to 3.226.253.119 closed.\r\nShared connection to 3.226.253.119 closed.\r\n2020-08-12 20:19:01,502\tINFO command_runner.py:468 -- NodeUpdater: i-0729c7a86355d5ff8: Running ssh -tt -i /home/richard/.ssh/ray-autoscaler_us-east-1.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes -o ExitOnForwardFailure=yes -o ServerAliveInterval=5 -o ServerAliveCountMax=3 -o ControlMaster=auto -o ControlPath=/tmp/ray_ssh_6ae199a93c/cfde1c79f1/%C -o ControlPersist=10s -o ConnectTimeout=120s ubuntu@3.226.253.119 bash --login -c -i 'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && docker exec -it  pytorch_docker /bin/bash -c '\"'\"'bash --login -c -i '\"'\"'\"'\"'\"'\"'\"'\"'true && source ~/.bashrc && export OMP_NUM_THREADS=1 PYTHONWARNINGS=ignore && uptime'\"'\"'\"'\"'\"'\"'\"'\"''\"'\"' '\r\nError: No such container: pytorch_docker\r\nShared connection to 3.226.253.119 closed.\r\n2020-08-12 20:19:06,689\tINFO log_timer.py:27 -- NodeUpdater: i-0729c7a86355d5ff8: Got remote shell  [LogTimer=302102ms]\r\n2020-08-12 20:19:06,690\tINFO log_timer.py:27 -- NodeUpdater: i-0729c7a86355d5ff8: Applied config 6b5fc8ee8c5dcdf3cfabe0bf90ba4e844f65a7c9  [LogTimer=302103ms]\r\n2020-08-12 20:19:06,690\tERROR updater.py:88 -- NodeUpdater: i-0729c7a86355d5ff8: Error executing: Unable to connect to node\r\n\r\nException in thread Thread-2:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/threading.py\", line 916, in _bootstrap_inner\r\n    self.run()\r\n  File \"/home/richard/improbable/vanillas/ray/python/ray/autoscaler/updater.py\", line 76, in run\r\n    self.do_update()\r\n  File \"/home/richard/improbable/vanillas/ray/python/ray/autoscaler/updater.py\", line 232, in do_update\r\n    self.wait_ready(deadline)\r\n  File \"/home/richard/improbable/vanillas/ray/python/ray/autoscaler/updater.py\", line 224, in wait_ready\r\n    assert False, \"Unable to connect to node\"\r\nAssertionError: Unable to connect to node\r\n\r\n2020-08-12 20:19:06,962\tERROR commands.py:650 -- get_or_create_head_node: Updating 3.226.253.119 failed\r\n2020-08-12 20:19:07,002\tINFO log_timer.py:27 -- AWSNodeProvider: Set tag ray-node-status=update-failed on ['i-0729c7a86355d5ff8']  [LogTimer=312ms]\r\n\r\n```\r\n\r\nYAML file for repo attached.\r\n\r\n```\r\n# An unique identifier for the head node and workers of this cluster.\r\ncluster_name: richard_cluster_gpu_dummy\r\n\r\n# The minimum number of workers nodes to launch in addition to the head\r\n# node. This number should be >= 0.\r\nmin_workers: 1\r\n\r\n# The maximum number of workers nodes to launch in addition to the head\r\n# node. This takes precedence over min_workers.\r\nmax_workers: 5\r\n\r\n# The initial number of worker nodes to launch in addition to the head\r\n# node. When the cluster is first brought up (or when it is refreshed with a\r\n# subsequent `ray up`) this number of nodes will be started.\r\ninitial_workers: 1\r\n\r\n# Whether or not to autoscale aggressively. If this is enabled, if at any point\r\n#   we would start more workers, we start at least enough to bring us to\r\n#   initial_workers.\r\nautoscaling_mode: default\r\n\r\n# This executes all commands on all nodes in the docker efcontainer,\r\n# and opens all the necessary ports to support the Ray cluster.\r\n# Empty string means disabled.\r\ndocker:\r\n  image: \"pytorch/pytorch:latest\" # e.g., tensorflow/tensorflow:1.5.0-py3\r\n  container_name: \"pytorch_docker\" # e.g. ray_docker\r\n  # If true, pulls latest version of image. Otherwise, `docker run` will only pull the image\r\n  # if no cached version is present.\r\n  pull_before_run: True\r\n  run_options: []\r\n#    - $([ -d /proc/driver ] && echo -n --runtime-nvidia) # Use the nvidia runtime only if nvidia gpu's are installed\r\n  worker_run_options:\r\n    - --runtime=nvidia  # Extra options to pass into \"docker run\"\r\n\r\n  # Example of running a GPU head with CPU workers\r\n  # head_image: \"tensorflow/tensorflow:1.13.1-py3\"\r\n  # head_run_options:\r\n  #     - --runtime=nvidia\r\n\r\n  # worker_image: \"ubuntu:18.04\"\r\n  # worker_run_options: []\r\n\r\n# The autoscaler will scale up the cluster to this target fraction of resource\r\n# usage. For example, if a cluster of 10 nodes is 100% busy and\r\n# target_utilization is 0.8, it would resize the cluster to 13. This fraction\r\n# can be decreased to increase the aggressiveness of upscaling.\r\n# This value must be less than 1.0 for scaling to happen.\r\ntarget_utilization_fraction: 0.8\r\n\r\n# If a node is idle for this many minutes, it will be removed.\r\nidle_timeout_minutes: 5\r\n\r\n# Cloud-provider specific configuration.\r\nprovider:\r\n  type: aws\r\n  region: us-east-1\r\n  # Availability zone(s), comma-separated, that nodes may be launched in.\r\n  # Nodes are currently spread between zones by a round-robin approach,\r\n  # however this implementation detail should not be relied upon.\r\n  availability_zone: us-east-1a, us-east-1b\r\n  cache_stopped_nodes: False\r\n\r\n# How Ray will authenticate with newly launched nodes.\r\nauth:\r\n  ssh_user: ubuntu\r\n# By default Ray creates a new private keypair, but you can also use your own.\r\n# If you do so, make sure to also set \"KeyName\" in the head and worker node\r\n# configurations below.\r\n#    ssh_private_key: /path/to/your/key.pem\r\n\r\n# Provider-specific config for the head node, e.g. instance type. By default\r\n# Ray will auto-configure unspecified fields such as SubnetId and KeyName.\r\n# For more documentation on available fields, see:\r\n# http://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.ServiceResource.create_instances\r\nhead_node:\r\n  InstanceType: c4.2xlarge\r\n  ImageId: ami-043f9aeaf108ebc37 # Deep Learning AMI (Ubuntu) Version 24.3\r\n#   You can provision additional disk space with a conf as follows\r\n  BlockDeviceMappings:\r\n    - DeviceName: /dev/sda1\r\n      Ebs:\r\n        VolumeSize: 100\r\n\r\n  # Additional options in the boto docs.\r\n\r\n# Provider-specific config for worker nodes, e.g. instance type. By default\r\n# Ray will auto-configure unspecified fields such as SubnetId and KeyName.\r\n# For more documentation on available fields, see:\r\n# http://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.ServiceResource.create_instances\r\nworker_nodes:\r\n  InstanceType: p3.2xlarge\r\n  ImageId: ami-043f9aeaf108ebc37 # Deep Learning AMI (Ubuntu) Version 24.3\r\n\r\n  # Run workers on spot by default. Comment this out to use on-demand.\r\n  InstanceMarketOptions:\r\n    MarketType: spot\r\n    # Additional options can be found in the boto docs, e.g.\r\n    #   SpotOptions:\r\n    #       MaxPrice: MAX_HOURLY_PRICE\r\n\r\n  # Additional options in the boto docs.\r\n\r\n# Files or directories to copy to the head and worker nodes. The format is a\r\n# dictionary from REMOTE_PATH: LOCAL_PATH, e.g.\r\nfile_mounts: {\r\n\r\n}\r\n\r\n\r\n\r\n# List of commands that will be run before `setup_commands`. If docker is\r\n# enabled, these commands will run outside the container and before docker\r\n# is setup.\r\ninitialization_commands: []\r\n\r\n# List of shell commands to run to set up nodes.\r\nsetup_commands:\r\n  # Note: if you're developing Ray, you probably want to create an AMI that\r\n  # has your Ray repo pre-cloned. Then, you can replace the pip installs\r\n  # below with a git checkout <your_sha> (and possibly a recompile).\r\n  - pip install -U https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-0.9.0.dev0-cp37-cp37m-manylinux1_x86_64.whl\r\n#  - pip install -U https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-0.9.0.dev0-cp37-cp37m-manylinux1_x86_64.whl\r\n  # Consider uncommenting these if you also want to run apt-get commands during setup\r\n  # - sudo pkill -9 apt-get || true\r\n  # - sudo pkill -9 dpkg || true\r\n  # - sudo dpkg --configure -a\r\n\r\n# Custom commands that will be run on the head node after common setup.\r\nhead_setup_commands:\r\n  - pip install boto3  # 1.4.8 adds InstanceMarketOptions\r\n\r\n# Custom commands that will be run on worker nodes after common setup.\r\nworker_setup_commands:\r\n  - pip install boto3  # 1.4.8 adds InstanceMarketOptions\r\n\r\n# Command to start ray on the head node. You don't need to change this.\r\nhead_start_ray_commands:\r\n  - ray stop\r\n  - ulimit -n 65536; ray start --num-cpus=0 --head --port=6379 --object-manager-port=8076 --autoscaling-config=~/ray_bootstrap_config.yaml\r\n\r\n# Command to start ray on worker nodes. You don't need to change this.\r\nworker_start_ray_commands:\r\n  - ray stop\r\n  - ulimit -n 65536; ray start --address=$RAY_HEAD_IP:6379 --object-manager-port=8076\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/10072", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10072/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10072/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10072/events", "html_url": "https://github.com/ray-project/ray/issues/10072", "id": 677877621, "node_id": "MDU6SXNzdWU2Nzc4Nzc2MjE=", "number": 10072, "title": "[rllib] minimal build", "user": {"login": "rusu24edward", "id": 18565891, "node_id": "MDQ6VXNlcjE4NTY1ODkx", "avatar_url": "https://avatars3.githubusercontent.com/u/18565891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusu24edward", "html_url": "https://github.com/rusu24edward", "followers_url": "https://api.github.com/users/rusu24edward/followers", "following_url": "https://api.github.com/users/rusu24edward/following{/other_user}", "gists_url": "https://api.github.com/users/rusu24edward/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusu24edward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusu24edward/subscriptions", "organizations_url": "https://api.github.com/users/rusu24edward/orgs", "repos_url": "https://api.github.com/users/rusu24edward/repos", "events_url": "https://api.github.com/users/rusu24edward/events{/privacy}", "received_events_url": "https://api.github.com/users/rusu24edward/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-12T18:02:53Z", "updated_at": "2020-08-13T15:57:18Z", "closed_at": "2020-08-13T15:57:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "# What is your question?\r\n\r\nWith `pip3 install ray[rllib]`, I get to `Running setup.py install for opencv-python`, and I can't seem to move past this point, even waiting for hours. I looked up opencv-python to understand what it is. I don't have applications in computer vision, so I don't need it in my build. Is there a way to install ray[rllib] without this (and possible other) dependencies?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/10067", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10067/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10067/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10067/events", "html_url": "https://github.com/ray-project/ray/issues/10067", "id": 677522235, "node_id": "MDU6SXNzdWU2Nzc1MjIyMzU=", "number": 10067, "title": "[tune] ModuleNotFoundError for tuning script", "user": {"login": "guoxuxu", "id": 29363464, "node_id": "MDQ6VXNlcjI5MzYzNDY0", "avatar_url": "https://avatars2.githubusercontent.com/u/29363464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guoxuxu", "html_url": "https://github.com/guoxuxu", "followers_url": "https://api.github.com/users/guoxuxu/followers", "following_url": "https://api.github.com/users/guoxuxu/following{/other_user}", "gists_url": "https://api.github.com/users/guoxuxu/gists{/gist_id}", "starred_url": "https://api.github.com/users/guoxuxu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guoxuxu/subscriptions", "organizations_url": "https://api.github.com/users/guoxuxu/orgs", "repos_url": "https://api.github.com/users/guoxuxu/repos", "events_url": "https://api.github.com/users/guoxuxu/events{/privacy}", "received_events_url": "https://api.github.com/users/guoxuxu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-08-12T08:57:35Z", "updated_at": "2020-08-15T05:07:19Z", "closed_at": "2020-08-15T05:07:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is the problem?\r\n### ModuleNotFoundError: No module named 'functions'\r\n\r\nDoes it seem the ray_tune.py file must stay in the same directory with data/ ??? Otherwise, it doesn't work even if I put ```'../'``` in the data loader function...\r\nSpecifically, I run the same ray_tune.py in the parent folder and child folder respectively, but only got success when I run under the parent folder.\r\n\r\nCannot provide reproducible code here, because I used my own dataset.\r\nThis issue occurred whenever I switched the ray_tune.py to a child directory (has ```../```)...\r\n\r\n*Ray version and other system information (Python version, TensorFlow version, OS):*\r\nRay 0.8.5\r\nPython 3.7.4\r\nPytorch 1.6\r\nTensorFlow: 2.2.0\r\nOS linux\r\n\r\n![image](https://user-images.githubusercontent.com/29363464/89991868-0937d000-dcb7-11ea-9637-e5bdf15f847b.png)\r\n\r\n\r\n### Reproduction (REQUIRED)\r\nPlease provide a script that can be run to reproduce the issue. The script should have **no external library dependencies** (i.e., use fake or mock data / environments):\r\n\r\nIf we cannot run your script, we cannot fix your issue.\r\n\r\n- [x] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [ ] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/10048", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10048/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10048/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10048/events", "html_url": "https://github.com/ray-project/ray/issues/10048", "id": 677113145, "node_id": "MDU6SXNzdWU2NzcxMTMxNDU=", "number": 10048, "title": "[RLLib] RLLib Customized Env do we have to put one action_space in environment?", "user": {"login": "AprilXiaoyanLiu", "id": 8538822, "node_id": "MDQ6VXNlcjg1Mzg4MjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8538822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AprilXiaoyanLiu", "html_url": "https://github.com/AprilXiaoyanLiu", "followers_url": "https://api.github.com/users/AprilXiaoyanLiu/followers", "following_url": "https://api.github.com/users/AprilXiaoyanLiu/following{/other_user}", "gists_url": "https://api.github.com/users/AprilXiaoyanLiu/gists{/gist_id}", "starred_url": "https://api.github.com/users/AprilXiaoyanLiu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AprilXiaoyanLiu/subscriptions", "organizations_url": "https://api.github.com/users/AprilXiaoyanLiu/orgs", "repos_url": "https://api.github.com/users/AprilXiaoyanLiu/repos", "events_url": "https://api.github.com/users/AprilXiaoyanLiu/events{/privacy}", "received_events_url": "https://api.github.com/users/AprilXiaoyanLiu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-11T18:48:19Z", "updated_at": "2020-08-17T23:11:42Z", "closed_at": "2020-08-17T23:11:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\nI have a customized environment, where per state we have different numbers of actions. The idea is to create a dictionary where for each state, it has different set of number of actions. I know we can use parametric action space to handle this scenario. But we want to use a different model to handle it and customized the action distribution function. In that case, do we have to pass action_space in BaseEnv?  Or we can just put a dummy action_space there and customized the model and action distribution function the way we want. \r\n\r\nThanks.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/10038", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10038/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10038/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10038/events", "html_url": "https://github.com/ray-project/ray/issues/10038", "id": 676614820, "node_id": "MDU6SXNzdWU2NzY2MTQ4MjA=", "number": 10038, "title": "[TUNE/PBT]Maybe a bug  in tune/pbt example code?", "user": {"login": "noprohuangqi", "id": 35948614, "node_id": "MDQ6VXNlcjM1OTQ4NjE0", "avatar_url": "https://avatars2.githubusercontent.com/u/35948614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noprohuangqi", "html_url": "https://github.com/noprohuangqi", "followers_url": "https://api.github.com/users/noprohuangqi/followers", "following_url": "https://api.github.com/users/noprohuangqi/following{/other_user}", "gists_url": "https://api.github.com/users/noprohuangqi/gists{/gist_id}", "starred_url": "https://api.github.com/users/noprohuangqi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noprohuangqi/subscriptions", "organizations_url": "https://api.github.com/users/noprohuangqi/orgs", "repos_url": "https://api.github.com/users/noprohuangqi/repos", "events_url": "https://api.github.com/users/noprohuangqi/events{/privacy}", "received_events_url": "https://api.github.com/users/noprohuangqi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-11T06:17:58Z", "updated_at": "2020-08-18T08:02:58Z", "closed_at": "2020-08-18T08:02:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/ray-project/ray/blob/65848201c348bb3fccd6e11d620626ec2480a2d0/python/ray/tune/examples/pbt_convnet_example.py#L135-L136\r\n\r\nwhen I use RAY/PBT follow code above , I find in this code:\r\n```\r\n    best_checkpoint = max(\r\n        analysis.get_trial_checkpoints_paths(best_trial, \"mean_accuracy\"))\r\n```\r\nthe formula:\r\n`analysis.get_trial_checkpoints_paths(best_trial, \"mean_accuracy\")`\r\nin fact return a list like :\r\n` lists = [['009' , 0.7] , ['007' , 0.9]]`\r\nThis mean the list's item is a list which first item is a file path , and second item is 'mean_accuracy'.\r\nSo when use max function , it is compare the file path ,but not the mean_accuracy.\r\nMaybe it shoud change to:\r\n```\r\n    best_checkpoint = max(\r\n        analysis.get_trial_checkpoints_paths(best_trial, \"mean_accuracy\") , key = lambda x:x[1])\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/10028", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10028/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10028/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10028/events", "html_url": "https://github.com/ray-project/ray/issues/10028", "id": 676361656, "node_id": "MDU6SXNzdWU2NzYzNjE2NTY=", "number": 10028, "title": "Can't join a restarted AWS cluster - Heartbeat timestamp held over from last session", "user": {"login": "davidia", "id": 695500, "node_id": "MDQ6VXNlcjY5NTUwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/695500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidia", "html_url": "https://github.com/davidia", "followers_url": "https://api.github.com/users/davidia/followers", "following_url": "https://api.github.com/users/davidia/following{/other_user}", "gists_url": "https://api.github.com/users/davidia/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidia/subscriptions", "organizations_url": "https://api.github.com/users/davidia/orgs", "repos_url": "https://api.github.com/users/davidia/repos", "events_url": "https://api.github.com/users/davidia/events{/privacy}", "received_events_url": "https://api.github.com/users/davidia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-10T19:25:09Z", "updated_at": "2020-08-10T19:44:33Z", "closed_at": "2020-08-10T19:44:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I had an AWS cluster, I had my local machine join it then I stopped it. Later, I have now restarted it with `ray up cluster.yaml` and tried to join it with my local machine again. However I now get immediately kicked off because my node is stale and the last ping value in the logs is huge. I can only guess this is the timestamp from my the last hearbeat of the previous session is being used and my node doesn't have time to submit a heartbeat before being disconnected.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/10024", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10024/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10024/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10024/events", "html_url": "https://github.com/ray-project/ray/issues/10024", "id": 676117370, "node_id": "MDU6SXNzdWU2NzYxMTczNzA=", "number": 10024, "title": "[rllib]State input's shape about custom env based on gym's env", "user": {"login": "lsylusiyao", "id": 26361428, "node_id": "MDQ6VXNlcjI2MzYxNDI4", "avatar_url": "https://avatars2.githubusercontent.com/u/26361428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lsylusiyao", "html_url": "https://github.com/lsylusiyao", "followers_url": "https://api.github.com/users/lsylusiyao/followers", "following_url": "https://api.github.com/users/lsylusiyao/following{/other_user}", "gists_url": "https://api.github.com/users/lsylusiyao/gists{/gist_id}", "starred_url": "https://api.github.com/users/lsylusiyao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lsylusiyao/subscriptions", "organizations_url": "https://api.github.com/users/lsylusiyao/orgs", "repos_url": "https://api.github.com/users/lsylusiyao/repos", "events_url": "https://api.github.com/users/lsylusiyao/events{/privacy}", "received_events_url": "https://api.github.com/users/lsylusiyao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1890801554, "node_id": "MDU6TGFiZWwxODkwODAxNTU0", "url": "https://api.github.com/repos/ray-project/ray/labels/P3", "name": "P3", "color": "a8fc9f", "default": false, "description": "Issue moderate in impact or severity"}, {"id": 1374085984, "node_id": "MDU6TGFiZWwxMzc0MDg1OTg0", "url": "https://api.github.com/repos/ray-project/ray/labels/enhancement", "name": "enhancement", "color": "a0b1ff", "default": true, "description": ""}, {"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}, {"id": 1890823772, "node_id": "MDU6TGFiZWwxODkwODIzNzcy", "url": "https://api.github.com/repos/ray-project/ray/labels/rllib", "name": "rllib", "color": "13437c", "default": false, "description": "RLlib-related issues"}], "state": "closed", "locked": false, "assignee": {"login": "sven1977", "id": 5839854, "node_id": "MDQ6VXNlcjU4Mzk4NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5839854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sven1977", "html_url": "https://github.com/sven1977", "followers_url": "https://api.github.com/users/sven1977/followers", "following_url": "https://api.github.com/users/sven1977/following{/other_user}", "gists_url": "https://api.github.com/users/sven1977/gists{/gist_id}", "starred_url": "https://api.github.com/users/sven1977/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sven1977/subscriptions", "organizations_url": "https://api.github.com/users/sven1977/orgs", "repos_url": "https://api.github.com/users/sven1977/repos", "events_url": "https://api.github.com/users/sven1977/events{/privacy}", "received_events_url": "https://api.github.com/users/sven1977/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sven1977", "id": 5839854, "node_id": "MDQ6VXNlcjU4Mzk4NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5839854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sven1977", "html_url": "https://github.com/sven1977", "followers_url": "https://api.github.com/users/sven1977/followers", "following_url": "https://api.github.com/users/sven1977/following{/other_user}", "gists_url": "https://api.github.com/users/sven1977/gists{/gist_id}", "starred_url": "https://api.github.com/users/sven1977/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sven1977/subscriptions", "organizations_url": "https://api.github.com/users/sven1977/orgs", "repos_url": "https://api.github.com/users/sven1977/repos", "events_url": "https://api.github.com/users/sven1977/events{/privacy}", "received_events_url": "https://api.github.com/users/sven1977/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-08-10T12:59:58Z", "updated_at": "2020-08-12T14:38:15Z", "closed_at": "2020-08-12T14:38:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "### What is your question?\r\n\r\nI've created a custom env, which basically looks like this.\r\n\r\n```python\r\n\r\ndef __init__(self):\r\n  self.action_space = gym.spaces.Discrete(9)\r\n  self.observation_space = gym.spaces.Tuple((\r\n                gym.spaces.MultiBinary(\r\n                    (5,4)), \r\n                gym.spaces.Box(\r\n                    low=np.zeros(2, dtype=np.float32),\r\n                    high=np.array([100, 100], dtype=np.float32)\r\n                )\r\n            ))\r\ndef reset(self):\r\n  a = np.zeros((5,4), dtype=np.int32)\r\n  b = np.array([100, 100], dtype=np.float32)\r\n  return a,b\r\ndef step(self, action):\r\n# I've debugged and it seems that this function hasn't been entered. So I believe the above two functions should be enough.\r\n# sth\r\n# sth\r\n# sth\r\n# `states` is just similar as (a,b) in function `reset`\r\n  return states, reward, done, {}\r\n```\r\n\r\nThe problem is, when I wrote `reset` like this, line 375 in [modelv2.py](https://github.com/ray-project/ray/blob/master/rllib/models/modelv2.py) : `_unpack_obs(obs, obs_space.original_space, tensorlib=tensorlib)` gave out : `reshape(): argument 'shape' must be tuple of ints, but found element of type tuple at pos 2`. Later I've found out that I need to add a `newaxis` for ndarray. So I added `a = a[np.newaxis, :]` and `b = b[np.newaxis, :]` in `reset`.   \r\n\r\nHowever, after doing this, it goes wrong again on line 60 in [preprocessors.py](https://github.com/ray-project/ray/blob/master/rllib/models/preprocessors.py) : `if not self._obs_space.contains(observation)`, which is `Observation outside expected value range` ( I'm assure it's not because the absolute value in the `Box`). I got into `self._obs_space.contains(observation)` in [tuple.py](https://github.com/openai/gym/blob/master/gym/spaces/tuple.py) and found out that the problem occurred on line 28 : `space.contains(part) for (space,part) in zip(self.spaces,x)`, which returns `[True, False]`.\r\n\r\nI'm a new gay for gym and rllib, and I'm a little confused about the input. Is there any suggestion? Thanks.\r\n\r\n*Ray version and other system information (Python version, TensorFlow version, OS):*\r\nRay: 0.8.6; Python 3.8.5; PyTorch 1.6.0; Windows 10 2004", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/10015", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10015/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10015/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10015/events", "html_url": "https://github.com/ray-project/ray/issues/10015", "id": 675847688, "node_id": "MDU6SXNzdWU2NzU4NDc2ODg=", "number": 10015, "title": "[rllib] Torch policy + non-empty custom_model_config errors out", "user": {"login": "concretevitamin", "id": 592670, "node_id": "MDQ6VXNlcjU5MjY3MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/592670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/concretevitamin", "html_url": "https://github.com/concretevitamin", "followers_url": "https://api.github.com/users/concretevitamin/followers", "following_url": "https://api.github.com/users/concretevitamin/following{/other_user}", "gists_url": "https://api.github.com/users/concretevitamin/gists{/gist_id}", "starred_url": "https://api.github.com/users/concretevitamin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/concretevitamin/subscriptions", "organizations_url": "https://api.github.com/users/concretevitamin/orgs", "repos_url": "https://api.github.com/users/concretevitamin/repos", "events_url": "https://api.github.com/users/concretevitamin/events{/privacy}", "received_events_url": "https://api.github.com/users/concretevitamin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2040474101, "node_id": "MDU6TGFiZWwyMDQwNDc0MTAx", "url": "https://api.github.com/repos/ray-project/ray/labels/P2", "name": "P2", "color": "eef747", "default": false, "description": "Important issue, but not time-critical"}, {"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-10T03:58:52Z", "updated_at": "2020-08-17T18:12:21Z", "closed_at": "2020-08-17T18:12:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is the problem?\r\nOn Ray 0.8.6, Torch policy + non-empty custom_model_config + custom model would crash.\r\n\r\n### Reproduction (REQUIRED)\r\n```\r\n  File \"/home/ubuntu/anaconda3/envs/exp/lib/python3.7/site-packages/ray/rllib/policy/torch_policy_template.py\", line 120, in __init__\r\n    **self.config[\"model\"].get(\"custom_model_config\", {}))\r\n  File \"/home/ubuntu/anaconda3/envs/exp/lib/python3.7/site-packages/ray/rllib/models/catalog.py\", line 360, in get_model_v2\r\n    model_config, name, **model_kwargs)\r\nTypeError: __init__() got an unexpected keyword argument 'pool'\r\n```\r\nReproducible by any custom Torch model with a non-empty `custom_model_config`.\r\n\r\nThis error shows up if I set any `custom_model_config: {'pool': xxx}`, where `pool` is something my custom torch model can interpret; here, rllib torch template is unpacking this dict, causing erroring out.\r\n\r\n\r\nIf we cannot run your script, we cannot fix your issue.\r\n\r\n- [ ] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [ ] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/10010", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10010/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10010/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10010/events", "html_url": "https://github.com/ray-project/ray/issues/10010", "id": 675706236, "node_id": "MDU6SXNzdWU2NzU3MDYyMzY=", "number": 10010, "title": "Confused about how to extract optimal schedule after PopulationBasedTraining", "user": {"login": "alexisdrakopoulos", "id": 33128441, "node_id": "MDQ6VXNlcjMzMTI4NDQx", "avatar_url": "https://avatars1.githubusercontent.com/u/33128441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexisdrakopoulos", "html_url": "https://github.com/alexisdrakopoulos", "followers_url": "https://api.github.com/users/alexisdrakopoulos/followers", "following_url": "https://api.github.com/users/alexisdrakopoulos/following{/other_user}", "gists_url": "https://api.github.com/users/alexisdrakopoulos/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexisdrakopoulos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexisdrakopoulos/subscriptions", "organizations_url": "https://api.github.com/users/alexisdrakopoulos/orgs", "repos_url": "https://api.github.com/users/alexisdrakopoulos/repos", "events_url": "https://api.github.com/users/alexisdrakopoulos/events{/privacy}", "received_events_url": "https://api.github.com/users/alexisdrakopoulos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-09T14:08:24Z", "updated_at": "2020-08-14T00:21:13Z", "closed_at": "2020-08-14T00:21:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I read: https://github.com/ray-project/ray/issues/5489 and understand that pbt_global.txt contains the perturbations from some of the trials, however I am confused by how one would then establish an \"optimal\" schedule. Would you simply save the last value of each dictionary and then use that as your value for iteration N during the next run? \r\n\r\nFor example, if one were to run the toy example and after every iteration perturbing the learning rate, how would one extract a schedule so that you could just say \"at iteration N the learning rate should be X\". Or do I have some fundamental misunderstanding of what PBT provides?\r\n\r\nFor a more concrete example, I am running online k-NN (adding values to index over time) and thus the optimal value of k can alter. I want to find some sort of a schedule for values of k.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/10009", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/10009/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/10009/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/10009/events", "html_url": "https://github.com/ray-project/ray/issues/10009", "id": 675691315, "node_id": "MDU6SXNzdWU2NzU2OTEzMTU=", "number": 10009, "title": "[rllib] Custom policies crashes in multi-agent, tuple action space settings", "user": {"login": "MoggeM", "id": 22006774, "node_id": "MDQ6VXNlcjIyMDA2Nzc0", "avatar_url": "https://avatars3.githubusercontent.com/u/22006774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MoggeM", "html_url": "https://github.com/MoggeM", "followers_url": "https://api.github.com/users/MoggeM/followers", "following_url": "https://api.github.com/users/MoggeM/following{/other_user}", "gists_url": "https://api.github.com/users/MoggeM/gists{/gist_id}", "starred_url": "https://api.github.com/users/MoggeM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MoggeM/subscriptions", "organizations_url": "https://api.github.com/users/MoggeM/orgs", "repos_url": "https://api.github.com/users/MoggeM/repos", "events_url": "https://api.github.com/users/MoggeM/events{/privacy}", "received_events_url": "https://api.github.com/users/MoggeM/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2040474101, "node_id": "MDU6TGFiZWwyMDQwNDc0MTAx", "url": "https://api.github.com/repos/ray-project/ray/labels/P2", "name": "P2", "color": "eef747", "default": false, "description": "Important issue, but not time-critical"}, {"id": 1374085984, "node_id": "MDU6TGFiZWwxMzc0MDg1OTg0", "url": "https://api.github.com/repos/ray-project/ray/labels/enhancement", "name": "enhancement", "color": "a0b1ff", "default": true, "description": ""}, {"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}, {"id": 1890823772, "node_id": "MDU6TGFiZWwxODkwODIzNzcy", "url": "https://api.github.com/repos/ray-project/ray/labels/rllib", "name": "rllib", "color": "13437c", "default": false, "description": "RLlib-related issues"}], "state": "closed", "locked": false, "assignee": {"login": "sven1977", "id": 5839854, "node_id": "MDQ6VXNlcjU4Mzk4NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5839854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sven1977", "html_url": "https://github.com/sven1977", "followers_url": "https://api.github.com/users/sven1977/followers", "following_url": "https://api.github.com/users/sven1977/following{/other_user}", "gists_url": "https://api.github.com/users/sven1977/gists{/gist_id}", "starred_url": "https://api.github.com/users/sven1977/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sven1977/subscriptions", "organizations_url": "https://api.github.com/users/sven1977/orgs", "repos_url": "https://api.github.com/users/sven1977/repos", "events_url": "https://api.github.com/users/sven1977/events{/privacy}", "received_events_url": "https://api.github.com/users/sven1977/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sven1977", "id": 5839854, "node_id": "MDQ6VXNlcjU4Mzk4NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5839854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sven1977", "html_url": "https://github.com/sven1977", "followers_url": "https://api.github.com/users/sven1977/followers", "following_url": "https://api.github.com/users/sven1977/following{/other_user}", "gists_url": "https://api.github.com/users/sven1977/gists{/gist_id}", "starred_url": "https://api.github.com/users/sven1977/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sven1977/subscriptions", "organizations_url": "https://api.github.com/users/sven1977/orgs", "repos_url": "https://api.github.com/users/sven1977/repos", "events_url": "https://api.github.com/users/sven1977/events{/privacy}", "received_events_url": "https://api.github.com/users/sven1977/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-08-09T12:25:51Z", "updated_at": "2020-08-11T20:08:12Z", "closed_at": "2020-08-11T20:08:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "### What is the problem?\r\nCustom policies crashes with the following error:\r\n\r\nFile \"/home/mogge/.local/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1004, in _process_policy_eval_results\r\n    clipped_action = clip_action(action,\r\n  File \"/home/mogge/.local/lib/python3.8/site-packages/ray/rllib/policy/policy.py\", line 526, in clip_action\r\n    return tree.map_structure(map_, action, action_space)\r\n  File \"/home/mogge/.local/lib/python3.8/site-packages/tree/__init__.py\", line 513, in map_structure\r\n    assert_same_structure(structures[0], other, check_types=check_types)\r\n  File \"/home/mogge/.local/lib/python3.8/site-packages/tree/__init__.py\", line 369, in assert_same_structure\r\n    raise type(e)(\"%s\\n\"\r\nValueError: The two structures don't have the same nested structure.\r\n\r\nFirst structure: type=ndarray str=[0 1 2]\r\n\r\nSecond structure: type=tuple str=(Discrete(2), Discrete(2), Discrete(5))\r\n\r\nMore specifically: Substructure \"type=tuple str=(Discrete(2), Discrete(2), Discrete(5))\" is a sequence, while substructure \"type=ndarray str=[0 1 2]\" is not\r\nEntire first structure:\r\n.\r\nEntire second structure:\r\n(., ., .)\r\n\r\n\r\nIt seems to be related to clip_actions where it compares the \"raw\" action space instead of whats returned from \"get_base_struct_from_space\".\r\n\r\n*Ray version and other system information (Python version, TensorFlow version, OS):*\r\nRay==0.9.0.dev0\r\nTensorflow==2.2.0\r\nUbuntu 20.04\r\n\r\n### Reproduction (REQUIRED)\r\n\"\"\"\r\nimport ray\r\nfrom ray import tune\r\nfrom ray.rllib.examples.env.multi_agent import make_multiagent\r\nfrom ray.rllib.policy import Policy\r\nfrom ray.tune.registry import register_env\r\nfrom ray.rllib.env.multi_agent_env import MultiAgentEnv\r\n\r\nMultiAgentEnv = make_multiagent('DuplicatedInput-v0')\r\n\r\nclass RandomPolicy(Policy):\r\n    \"\"\"Hand-coded policy that returns random actions.\"\"\"\r\n\r\n    def compute_actions(self,\r\n                        obs_batch,\r\n                        state_batches=None,\r\n                        prev_action_batch=None,\r\n                        prev_reward_batch=None,\r\n                        info_batch=None,\r\n                        episodes=None,\r\n                        **kwargs):\r\n        \"\"\"Compute actions on a batch of observations.\"\"\"\r\n        return [self.action_space.sample() for _ in obs_batch], [], {}\r\n\r\n    def learn_on_batch(self, samples):\r\n        \"\"\"No learning.\"\"\"\r\n        return {}\r\n\r\n\r\nif __name__ == '__main__':\r\n    ray.init(ignore_reinit_error=True)\r\n    register_env(\"multi_agent_simple\",\r\n                 lambda _: MultiAgentEnv({\"num_agents\": 2}))\r\n    single_env = MultiAgentEnv({\"num_agents\": 2})\r\n    obs_space = single_env.observation_space\r\n    act_space = single_env.action_space\r\n\r\n    tune.run(\r\n        \"PG\",\r\n        stop={\"training_iteration\": 25},\r\n        config={\r\n            \"env\": \"multi_agent_simple\",\r\n            \"multiagent\": {\r\n                \"policies\": {\r\n                    \"random\": (RandomPolicy, obs_space, act_space, {}),\r\n                    \"random2\": (RandomPolicy, obs_space, act_space, {})\r\n                },\r\n                \"policy_mapping_fn\": (\r\n                    lambda agent_id: \"random\"),\r\n            },\r\n        },\r\n    )\r\n\"\"\"\r\n\r\n- [ x] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [ x] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9980", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9980/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9980/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9980/events", "html_url": "https://github.com/ray-project/ray/issues/9980", "id": 674861936, "node_id": "MDU6SXNzdWU2NzQ4NjE5MzY=", "number": 9980, "title": "Reproduce the best trial results found by ray tune, how to control sampling within small decimals?", "user": {"login": "guoxuxu", "id": 29363464, "node_id": "MDQ6VXNlcjI5MzYzNDY0", "avatar_url": "https://avatars2.githubusercontent.com/u/29363464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guoxuxu", "html_url": "https://github.com/guoxuxu", "followers_url": "https://api.github.com/users/guoxuxu/followers", "following_url": "https://api.github.com/users/guoxuxu/following{/other_user}", "gists_url": "https://api.github.com/users/guoxuxu/gists{/gist_id}", "starred_url": "https://api.github.com/users/guoxuxu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guoxuxu/subscriptions", "organizations_url": "https://api.github.com/users/guoxuxu/orgs", "repos_url": "https://api.github.com/users/guoxuxu/repos", "events_url": "https://api.github.com/users/guoxuxu/events{/privacy}", "received_events_url": "https://api.github.com/users/guoxuxu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-07T08:42:38Z", "updated_at": "2020-08-10T11:48:54Z", "closed_at": "2020-08-10T11:48:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is your question?\r\nI have some questions while I was trying to reproduce the results using the best config parameters found by the ray tune. First of all, I have a hyperparameter that changes with the total number of epochs, denoted as EPOCHS, which corresponds to ```training_iteration``` as in the following code. I noticed that some trials do not run the whole EPOCHS maybe because that trial consistently produced bad results (metric)? \r\n\r\n```\r\nstop_criteria = {\r\n        metric_name: 0.9,\r\n        \"training_iteration\": EPOCHS\r\n    }\r\nsched=AsyncHyperBandScheduler(time_attr=\"training_iteration\", metric=metric_name)\r\nalgo = HyperOptSearch(\r\n        space=search_space,\r\n        max_concurrent=concurrent_trials,\r\n        metric=metric_name,\r\n        mode=\"max\"\r\n    )\r\nanalysis = tune.run(\r\n        Train,\r\n        reuse_actors=True,\r\n        verbose=1,\r\n        num_samples=args.num_samples,\r\n        scheduler=sched,\r\n        search_alg=algo,\r\n        resources_per_trial=resources_per_trial,\r\n        stop=stop_criteria,\r\n    )\r\n```\r\nI set ```training_iteration```, same as EPOCHS in ```stop_criteria``` so that all trials run at most EPOCHS trials. I set ```training_iteration``` in ```AsyncHyperBandScheduler``` because it is required. Don't know if setting ```metric``` in ```AsyncHyperBandScheduler``` means whether or not a trial will be stopped is determined by the value of ```metric```?\r\n\r\nSometimes even the best trial does not run all the EPOCHS, as in the following picture\r\n![image](https://user-images.githubusercontent.com/29363464/89640023-43812600-d8e1-11ea-88d5-5e2d1160069e.png)\r\n\r\nAs in the best trial JSON file, ```iterations_since_restore``` is the same value as ```training_iteration```, both of which do not equal to EPOCHS. When I use the parameters from the best trial, it can not reproduce the same performance. I set the same random seed (random, torch, Cuda and NumPy) at the beginning of the python file as well as in the ```Train``` initialization.\r\n\r\nOne more question, what does ```reuse_actors``` actually do?\r\n\r\nThanks a lot ^^\r\n\r\n*Ray version and other system information (Python version, TensorFlow version, OS):*\r\nRay 0.8.5\r\nPython 3.7.4\r\nOS Linux\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9978", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9978/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9978/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9978/events", "html_url": "https://github.com/ray-project/ray/issues/9978", "id": 674846272, "node_id": "MDU6SXNzdWU2NzQ4NDYyNzI=", "number": 9978, "title": "Access to previous compiled Ray releases?", "user": {"login": "mnicstruwig", "id": 14093308, "node_id": "MDQ6VXNlcjE0MDkzMzA4", "avatar_url": "https://avatars1.githubusercontent.com/u/14093308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mnicstruwig", "html_url": "https://github.com/mnicstruwig", "followers_url": "https://api.github.com/users/mnicstruwig/followers", "following_url": "https://api.github.com/users/mnicstruwig/following{/other_user}", "gists_url": "https://api.github.com/users/mnicstruwig/gists{/gist_id}", "starred_url": "https://api.github.com/users/mnicstruwig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mnicstruwig/subscriptions", "organizations_url": "https://api.github.com/users/mnicstruwig/orgs", "repos_url": "https://api.github.com/users/mnicstruwig/repos", "events_url": "https://api.github.com/users/mnicstruwig/events{/privacy}", "received_events_url": "https://api.github.com/users/mnicstruwig/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-07T08:14:50Z", "updated_at": "2020-08-07T19:41:46Z", "closed_at": "2020-08-07T19:41:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\n### What is your question?\r\n\r\nAre there wheels available for previous releases of Ray? This bug of mine hasn't been addressed: https://github.com/ray-project/ray/issues/8643, and as a result I'm forced to rely on version of Ray <=0.8.1 for my academic research until it's been fixed. \r\n\r\nUnfortunately, it appears as if previous version of Ray are no longer available on PyPi, and I'm struggling to find build instructions to build the 0.8.1 release from source.\r\n\r\nThanks!\r\nMichael.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9967", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9967/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9967/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9967/events", "html_url": "https://github.com/ray-project/ray/issues/9967", "id": 674577261, "node_id": "MDU6SXNzdWU2NzQ1NzcyNjE=", "number": 9967, "title": "[RLlib] Add informative error message when bad Conv2D stack is used with fixed `num_outputs` (no flattening at end).", "user": {"login": "sven1977", "id": 5839854, "node_id": "MDQ6VXNlcjU4Mzk4NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5839854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sven1977", "html_url": "https://github.com/sven1977", "followers_url": "https://api.github.com/users/sven1977/followers", "following_url": "https://api.github.com/users/sven1977/following{/other_user}", "gists_url": "https://api.github.com/users/sven1977/gists{/gist_id}", "starred_url": "https://api.github.com/users/sven1977/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sven1977/subscriptions", "organizations_url": "https://api.github.com/users/sven1977/orgs", "repos_url": "https://api.github.com/users/sven1977/repos", "events_url": "https://api.github.com/users/sven1977/events{/privacy}", "received_events_url": "https://api.github.com/users/sven1977/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1890801554, "node_id": "MDU6TGFiZWwxODkwODAxNTU0", "url": "https://api.github.com/repos/ray-project/ray/labels/P3", "name": "P3", "color": "a8fc9f", "default": false, "description": "Issue moderate in impact or severity"}, {"id": 1374085984, "node_id": "MDU6TGFiZWwxMzc0MDg1OTg0", "url": "https://api.github.com/repos/ray-project/ray/labels/enhancement", "name": "enhancement", "color": "a0b1ff", "default": true, "description": ""}, {"id": 1890823772, "node_id": "MDU6TGFiZWwxODkwODIzNzcy", "url": "https://api.github.com/repos/ray-project/ray/labels/rllib", "name": "rllib", "color": "13437c", "default": false, "description": "RLlib-related issues"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-06T20:20:20Z", "updated_at": "2020-08-07T10:04:18Z", "closed_at": "2020-08-07T10:04:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We should add an informative error message to visionnet.py (torch and tf), when a bad Conv2D stack (`conv_filters` in model config) is configured by the user, with a fixed `num_outputs` (no flattening at end). In this case, the output of the last Conv2D layer must always be [B, num_outputs, 1, 1].\r\n\r\n```\r\nimport gym\r\nimport numpy as np\r\nimport ray\r\nfrom ray import tune\r\nfrom ray.rllib.models import ModelCatalog\r\nfrom ray.tune.registry import register_env\r\nfrom ray.rllib.agents.ppo import PPOTrainer, ppo\r\nfrom ray.tune import CLIReporter\r\nfrom ray.rllib.models.torch.torch_modelv2 import TorchModelV2\r\nfrom ray.rllib.models.torch.fcnet import FullyConnectedNetwork\r\nfrom ray.rllib.models.torch.visionnet import VisionNetwork\r\n\r\nfrom ray.rllib.utils.framework import try_import_torch\r\n\r\n\r\nray.init()\r\n\r\ntorch, nn = try_import_torch()\r\n\r\n#### ENV\r\n\r\nclass JSS(gym.Env):\r\n\r\n    def __init__(self, env_config):\r\n        self.problem_size = 16\r\n        self.action_space = gym.spaces.Discrete(self.problem_size + 1)\r\n        self.observation_space = gym.spaces.Dict({\r\n            'real_obs': gym.spaces.Box(low=0.0, high=1.0, shape=(self.problem_size, 8, 1), dtype=np.float),\r\n            'action_mask': gym.spaces.Box(low=0, high=1, shape=(self.action_space.n, ), dtype=np.int),\r\n        })\r\n        self.i = 0\r\n\r\n    def reset(self):\r\n        self.i = 0\r\n        legal_action = np.ones((self.action_space.n,), dtype=np.int)\r\n        legal_action[0] = 0\r\n        output = {\r\n            'real_obs': np.zeros((self.problem_size, 8, 1), dtype=np.float),\r\n            'action_mask': legal_action\r\n        }\r\n        return output\r\n\r\n    def step(self, action: int):\r\n        self.i += 1\r\n        legal_action = np.ones((self.action_space.n, ), dtype=np.int)\r\n        legal_action[self.problem_size] = 0\r\n        legal_action[self.i % self.problem_size + 1] = 0\r\n        output = {\r\n            'real_obs': np.zeros((self.problem_size, 8, 1), dtype=np.float),\r\n            'action_mask': legal_action\r\n        }\r\n        return output\r\n\r\n    def render(self, mode='human'):\r\n        pass\r\n\r\n\r\ndef env_creator(env_config):\r\n    return JSS(env_config)\r\n\r\n\r\nregister_env(\"jss_env\", env_creator)\r\n\r\n## MODEL\r\n\r\n# THIS ONE WORKS\r\nclass FCMaskedActionsModel(TorchModelV2, nn.Module):\r\n\r\n    def __init__(self,\r\n                 obs_space,\r\n                 action_space,\r\n                 num_outputs,\r\n                 model_config,\r\n                 name):\r\n        nn.Module.__init__(self)\r\n        super(FCMaskedActionsModel, self).__init__(obs_space, action_space, action_space.n, model_config, name)\r\n        true_obs_space = gym.spaces.MultiBinary(n=obs_space.shape[0] - action_space.n)\r\n        self.action_model = FullyConnectedNetwork(\r\n            obs_space=true_obs_space, action_space=action_space, num_outputs=action_space.n,\r\n            model_config=model_config, name=name + \"action_model\")\r\n\r\n    def forward(self, input_dict, state, seq_lens):\r\n        # Extract the available actions tensor from the observation.\r\n        action_mask = input_dict[\"obs\"][\"action_mask\"]\r\n        # Compute the predicted action embedding\r\n\r\n        raw_actions, state = self.action_model({\r\n            \"obs\": input_dict[\"obs\"][\"real_obs\"]\r\n        })\r\n        inf_mask = torch.clamp(torch.log(action_mask), min=torch.finfo(raw_actions.dtype).min)\r\n        actions = raw_actions + inf_mask\r\n\r\n        return actions, state\r\n\r\n    def value_function(self):\r\n        return self.action_model.value_function()\r\n\r\n\r\n#THIS ONE HAS A SIZE MISMATCH PROBLEM WITH THE LOGIT LAYER\r\nclass ConvMaskedActionsModel(TorchModelV2, nn.Module):\r\n\r\n    def __init__(self,\r\n                 obs_space,\r\n                 action_space,\r\n                 num_outputs,\r\n                 model_config,\r\n                 name):\r\n        nn.Module.__init__(self)\r\n        super(ConvMaskedActionsModel, self).__init__(obs_space, action_space, action_space.n, model_config, name)\r\n        true_obs_space = obs_space.original_space['real_obs']\r\n        self.action_model = VisionNetwork(\r\n            obs_space=true_obs_space, action_space=action_space, num_outputs=action_space.n,\r\n            model_config=model_config, name=name + \"action_model_conv\")\r\n\r\n    def forward(self, input_dict, state, seq_lens):\r\n        # Extract the available actions tensor from the observation.\r\n        action_mask = input_dict[\"obs\"][\"action_mask\"]\r\n        # Compute the predicted action embedding\r\n        raw_actions, state = self.action_model({\r\n            \"obs\": input_dict[\"obs\"][\"real_obs\"]\r\n        })\r\n        inf_mask = torch.clamp(torch.log(action_mask), min=torch.finfo(raw_actions.dtype).min)\r\n        actions = raw_actions + inf_mask\r\n\r\n        return actions, state\r\n\r\n    def value_function(self):\r\n        return self.action_model.value_function()\r\n\r\nModelCatalog.register_custom_model(\"fc_masked_model\", FCMaskedActionsModel)\r\nModelCatalog.register_custom_model(\"conv_masked_model\", ConvMaskedActionsModel)\r\n\r\n\r\nconfig = ppo.DEFAULT_CONFIG.copy()\r\nconfig['framework'] = 'torch'\r\nconfig['env'] = 'jss_env'\r\nconfig['model'] = {\r\n    \"conv_filters\": [[4, [4, 4], 1], [8, [4, 4], 1]],\r\n    \"custom_model\": \"conv_masked_model\",\r\n    # Nonlinearity for fully connected net (tanh, relu)\r\n    \"fcnet_activation\": \"tanh\",\r\n}\r\nconfig['train_batch_size'] = 1024\r\nconfig['rollout_fragment_length'] = 1000\r\nconfig['sgd_minibatch_size'] = 256\r\nconfig['lr'] = 1e-4\r\nconfig['evaluation_interval'] = None\r\nconfig['metrics_smoothing_episodes'] = 1000\r\n\r\nstop = {\r\n    \"time_total_s\": 60,\r\n}\r\nreporter = CLIReporter(max_progress_rows=15)\r\nreporter.add_metric_column(\"episode_reward_max\")\r\nanalysis = tune.run(PPOTrainer, config=config, stop=stop, progress_reporter=reporter)\r\nprint(\"Best config: \", analysis.get_best_config(metric=\"episode_reward_max\"))\r\nray.shutdown()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9948", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9948/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9948/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9948/events", "html_url": "https://github.com/ray-project/ray/issues/9948", "id": 674031586, "node_id": "MDU6SXNzdWU2NzQwMzE1ODY=", "number": 9948, "title": "[autoscaler]Error when using the new logger", "user": {"login": "allenyin55", "id": 17361997, "node_id": "MDQ6VXNlcjE3MzYxOTk3", "avatar_url": "https://avatars0.githubusercontent.com/u/17361997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenyin55", "html_url": "https://github.com/allenyin55", "followers_url": "https://api.github.com/users/allenyin55/followers", "following_url": "https://api.github.com/users/allenyin55/following{/other_user}", "gists_url": "https://api.github.com/users/allenyin55/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenyin55/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenyin55/subscriptions", "organizations_url": "https://api.github.com/users/allenyin55/orgs", "repos_url": "https://api.github.com/users/allenyin55/repos", "events_url": "https://api.github.com/users/allenyin55/events{/privacy}", "received_events_url": "https://api.github.com/users/allenyin55/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}, {"id": 2090776337, "node_id": "MDU6TGFiZWwyMDkwNzc2MzM3", "url": "https://api.github.com/repos/ray-project/ray/labels/triage", "name": "triage", "color": "b0e7f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-06T05:37:08Z", "updated_at": "2020-08-06T21:44:40Z", "closed_at": "2020-08-06T21:44:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### What is the problem?\r\n\r\nThis cluster.yaml used to work\r\n\r\n```yaml\r\ncluster_name: test_cluster\r\nmax_workers: 0\r\nmin_workers: 0\r\nprovider:\r\n    type: aws\r\n    region: us-west-2\r\n    availability_zone: us-west-2a\r\nsetup_commands:\r\n  - 'echo ''{\"cli_token\": \"some-token\"}'' > /tmp/test'\r\n  - 'pip install ray[all] || true'\r\nauth:\r\n    ssh_user: ubuntu\r\n```\r\nWith the new CLI logger in autoscaler, I'm getting this error when running `ray up cluster.yaml`\r\n\r\n```\r\nError executing: unmatched '{' in format spec\r\n\r\nException in thread Thread-2:\r\nTraceback (most recent call last):\r\n  File \"/Users/allenyin/anaconda3/lib/python3.7/site-packages/ray/autoscaler/updater.py\", line 74, in run\r\n    self.do_update()\r\n  File \"/Users/allenyin/anaconda3/lib/python3.7/site-packages/ray/autoscaler/updater.py\", line 285, in do_update\r\n    cmd_to_print, _numbered=(\"()\", i, total))\r\n  File \"/Users/allenyin/anaconda3/lib/python3.7/site-packages/ray/autoscaler/cli_logger.py\", line 323, in print\r\n    self._print(_format_msg(msg, *args, **kwargs))\r\n  File \"/Users/allenyin/anaconda3/lib/python3.7/site-packages/ray/autoscaler/cli_logger.py\", line 96, in _format_msg\r\n    return numbering_str + msg.format(*args, **kwargs) + tags_str\r\nValueError: unmatched '{' in format spec\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/allenyin/anaconda3/lib/python3.7/threading.py\", line 926, in _bootstrap_inner\r\n    self.run()\r\n  File \"/Users/allenyin/anaconda3/lib/python3.7/site-packages/ray/autoscaler/updater.py\", line 95, in run\r\n    cli_logger.error(str(e))  # todo: handle this better somehow?\r\n  File \"/Users/allenyin/anaconda3/lib/python3.7/site-packages/ray/autoscaler/cli_logger.py\", line 316, in error\r\n    self._print(_format_msg(cf.red(msg), *args, **kwargs))\r\n  File \"/Users/allenyin/anaconda3/lib/python3.7/site-packages/ray/autoscaler/cli_logger.py\", line 96, in _format_msg\r\n    return numbering_str + msg.format(*args, **kwargs) + tags_str\r\nValueError: expected '}' before end of string\r\n```\r\n\r\n*Ray version and other system information (Python version, TensorFlow version, OS): ray from this commit dba999b6f61cb30237d821aa86691a15ff10e15b, python 3.7.4, macos 10.15.5\r\n\r\n### Reproduction (REQUIRED)\r\nPlease provide a script that can be run to reproduce the issue. The script should have **no external library dependencies** (i.e., use fake or mock data / environments):\r\n\r\nIf we cannot run your script, we cannot fix your issue.\r\n\r\n- [x] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [ ] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9931", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9931/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9931/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9931/events", "html_url": "https://github.com/ray-project/ray/issues/9931", "id": 673585756, "node_id": "MDU6SXNzdWU2NzM1ODU3NTY=", "number": 9931, "title": "How to run tune on multiple machines?", "user": {"login": "zmonoid", "id": 16687307, "node_id": "MDQ6VXNlcjE2Njg3MzA3", "avatar_url": "https://avatars3.githubusercontent.com/u/16687307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zmonoid", "html_url": "https://github.com/zmonoid", "followers_url": "https://api.github.com/users/zmonoid/followers", "following_url": "https://api.github.com/users/zmonoid/following{/other_user}", "gists_url": "https://api.github.com/users/zmonoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/zmonoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zmonoid/subscriptions", "organizations_url": "https://api.github.com/users/zmonoid/orgs", "repos_url": "https://api.github.com/users/zmonoid/repos", "events_url": "https://api.github.com/users/zmonoid/events{/privacy}", "received_events_url": "https://api.github.com/users/zmonoid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-08-05T14:30:15Z", "updated_at": "2020-08-06T22:10:29Z", "closed_at": "2020-08-06T18:35:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is your question?\r\nMy ray version is 0.8.2.\r\nI have already setup ray successfully.\r\n\r\nServer A has 10 GPUs\r\nServer B has 4 GPUs\r\n\r\n```yaml\r\n## tune-example.yaml\r\ncluster_name: local-default\r\nprovider:\r\n  type: local\r\n  head_ip: server_a_ip\r\n  worker_ips: [server_b_ip]\r\nauth: {ssh_user: user, ssh_private_key: ~/.ssh/id_rsa}\r\nmin_workers: 3\r\nmax_workers: 3\r\n```\r\nI run  ```ray up tune-example.yaml``` on both machines with no problems.\r\nI can submit my tasks on server B like ```ray submit tune-example.yaml fullscript.py``` and the task will be run and saved on server A smoothly, which proves no problem on cluster setup.\r\n\r\nI now run a tune experiments, main script is like:\r\n```python\r\n    ray.init(memory=200 * 1024 * 1024 * 1024, object_store_memory= 100 * 1024 * 1024 * 1024)\r\n    analysis = tune.run(\r\n        run,\r\n        config={\r\n            \"adam_lr\": tune.grid_search([1e-3, 1e-4, 2e-4]),\r\n            \"param_a\": tune.grid_search([500, 200]),\r\n            \"param_b\": tune.grid_search([20, 16]),\r\n            \"param_c\": tune.grid_search([\"XX\", \"YY\"])\r\n        },\r\n        resources_per_trial={\"gpu\": 4},\r\n    )\r\n    print(\"Best config: \", analysis.get_best_config(metric=\"final_metric\"))\r\n    df = analysis.dataframe()\r\n    df.to_csv('out.csv')\r\n```\r\n\r\nWhat I want is to parallelly run 3 trials on the two servers, like 2 trial in server A and 1 trial on server B. But only 2 trials on server A are running. Server B has no movement. I \r\n\r\nMay I ask for any suggestions on this?\r\n\r\n\r\n---\r\n\r\nProblem B:\r\n\r\nWhen I run ```ray submit tune-example.yaml fullscript.py```, it actually run ```python ~/fullscript.py``` on server A. I have to copy all files/folders to home folder. How to set the working directory for the experiment?\r\n.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9929", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9929/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9929/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9929/events", "html_url": "https://github.com/ray-project/ray/issues/9929", "id": 673546313, "node_id": "MDU6SXNzdWU2NzM1NDYzMTM=", "number": 9929, "title": "[rllib] 'lr_schedule' not working in DDPPO?", "user": {"login": "ChuaCheowHuan", "id": 17569306, "node_id": "MDQ6VXNlcjE3NTY5MzA2", "avatar_url": "https://avatars0.githubusercontent.com/u/17569306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChuaCheowHuan", "html_url": "https://github.com/ChuaCheowHuan", "followers_url": "https://api.github.com/users/ChuaCheowHuan/followers", "following_url": "https://api.github.com/users/ChuaCheowHuan/following{/other_user}", "gists_url": "https://api.github.com/users/ChuaCheowHuan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChuaCheowHuan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChuaCheowHuan/subscriptions", "organizations_url": "https://api.github.com/users/ChuaCheowHuan/orgs", "repos_url": "https://api.github.com/users/ChuaCheowHuan/repos", "events_url": "https://api.github.com/users/ChuaCheowHuan/events{/privacy}", "received_events_url": "https://api.github.com/users/ChuaCheowHuan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2040474101, "node_id": "MDU6TGFiZWwyMDQwNDc0MTAx", "url": "https://api.github.com/repos/ray-project/ray/labels/P2", "name": "P2", "color": "eef747", "default": false, "description": "Important issue, but not time-critical"}, {"id": 1374085984, "node_id": "MDU6TGFiZWwxMzc0MDg1OTg0", "url": "https://api.github.com/repos/ray-project/ray/labels/enhancement", "name": "enhancement", "color": "a0b1ff", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-05T13:36:21Z", "updated_at": "2020-08-21T13:41:21Z", "closed_at": "2020-08-21T13:41:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is the problem?\r\nIs `lr_schedule ` supported in DDPPO? \r\n\r\nThe `cur_lr` didn't change throughout the training for both agents, verifiable either from `pretty_print` or tensorboard.\r\n\r\nI have included a *Minimal reproducible code* using `RockPaperScissorsEnv` available in this gist: [lr_schedule_ddppo.py](https://gist.github.com/ChuaCheowHuan/c9a3591b0b2d77bbed2eb50dc37c2ab1#file-lr_schedule_ddppo-py-L103)\r\n\r\n![Screen Shot 2020-08-05 at 1 21 05 PM](https://user-images.githubusercontent.com/17569306/89418838-2c1c2e80-d763-11ea-97bf-9bae1063d746.png)\r\n![Screen Shot 2020-08-05 at 1 21 21 PM](https://user-images.githubusercontent.com/17569306/89418848-30484c00-d763-11ea-9a9b-e5516cc671e6.png)\r\n\r\n*Ray version and other system information (Python version, TensorFlow version, OS):*\r\nray==0.9.0.dev0\r\npython==3.6.9\r\ntensorflow==2.3.0\r\nOS: \"Ubuntu 18.04.3 LTS\"\r\n\r\n### Reproduction (REQUIRED)\r\nPlease provide a script that can be run to reproduce the issue. The script should have **no external library dependencies** (i.e., use fake or mock data / environments):\r\n\r\n*Minimal reproducible code* available in this gist: [lr_schedule_ddppo.py](https://gist.github.com/ChuaCheowHuan/c9a3591b0b2d77bbed2eb50dc37c2ab1#file-lr_schedule_ddppo-py-L103)\r\n\r\nIf we cannot run your script, we cannot fix your issue.\r\n\r\n- [\u2713 ] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [\u2713 ] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9928", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9928/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9928/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9928/events", "html_url": "https://github.com/ray-project/ray/issues/9928", "id": 673508504, "node_id": "MDU6SXNzdWU2NzM1MDg1MDQ=", "number": 9928, "title": "[rllib] Test reward much lower than training reward", "user": {"login": "stefanbschneider", "id": 28340802, "node_id": "MDQ6VXNlcjI4MzQwODAy", "avatar_url": "https://avatars2.githubusercontent.com/u/28340802?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefanbschneider", "html_url": "https://github.com/stefanbschneider", "followers_url": "https://api.github.com/users/stefanbschneider/followers", "following_url": "https://api.github.com/users/stefanbschneider/following{/other_user}", "gists_url": "https://api.github.com/users/stefanbschneider/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefanbschneider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefanbschneider/subscriptions", "organizations_url": "https://api.github.com/users/stefanbschneider/orgs", "repos_url": "https://api.github.com/users/stefanbschneider/repos", "events_url": "https://api.github.com/users/stefanbschneider/events{/privacy}", "received_events_url": "https://api.github.com/users/stefanbschneider/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "sven1977", "id": 5839854, "node_id": "MDQ6VXNlcjU4Mzk4NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5839854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sven1977", "html_url": "https://github.com/sven1977", "followers_url": "https://api.github.com/users/sven1977/followers", "following_url": "https://api.github.com/users/sven1977/following{/other_user}", "gists_url": "https://api.github.com/users/sven1977/gists{/gist_id}", "starred_url": "https://api.github.com/users/sven1977/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sven1977/subscriptions", "organizations_url": "https://api.github.com/users/sven1977/orgs", "repos_url": "https://api.github.com/users/sven1977/repos", "events_url": "https://api.github.com/users/sven1977/events{/privacy}", "received_events_url": "https://api.github.com/users/sven1977/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sven1977", "id": 5839854, "node_id": "MDQ6VXNlcjU4Mzk4NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5839854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sven1977", "html_url": "https://github.com/sven1977", "followers_url": "https://api.github.com/users/sven1977/followers", "following_url": "https://api.github.com/users/sven1977/following{/other_user}", "gists_url": "https://api.github.com/users/sven1977/gists{/gist_id}", "starred_url": "https://api.github.com/users/sven1977/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sven1977/subscriptions", "organizations_url": "https://api.github.com/users/sven1977/orgs", "repos_url": "https://api.github.com/users/sven1977/repos", "events_url": "https://api.github.com/users/sven1977/events{/privacy}", "received_events_url": "https://api.github.com/users/sven1977/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2020-08-05T12:41:18Z", "updated_at": "2020-08-06T09:19:19Z", "closed_at": "2020-08-06T08:15:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm using the latest RLlib to train a PPO agent on a custom environment. My agent converged to a mean reward of almost 60:\r\n\r\n![image](https://user-images.githubusercontent.com/28340802/89413462-26a1f280-d729-11ea-9d5b-202bab635ebc.png)\r\n\r\nBut when loading and testing the trained agent on the same environment with the same seed, the episode reward is much worse (negative!)!\r\nI seed the environment after every reset such that each training episode should be the same, except for the agent's decisions.\r\n\r\nI load the agent with\r\n\r\n```python\r\nself.agent = PPOTrainer(config=self.config, env=self.env_class)\r\nself.agent.restore(checkpoint_path)\r\n```\r\n\r\nFor testing, I basically use a simple loop calling `compute_action()` as described in the [docs](https://docs.ray.io/en/master/rllib-training.html#computing-actions).\r\nI tried setting `config['explore'] = False` during testing, but that lead to even worse results.\r\n\r\nAny idea what could be the issue?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9925", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9925/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9925/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9925/events", "html_url": "https://github.com/ray-project/ray/issues/9925", "id": 673371629, "node_id": "MDU6SXNzdWU2NzMzNzE2Mjk=", "number": 9925, "title": "how to get start from scratch as a DEVELOPER of Ray?", "user": {"login": "loveJasmine", "id": 18051187, "node_id": "MDQ6VXNlcjE4MDUxMTg3", "avatar_url": "https://avatars2.githubusercontent.com/u/18051187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loveJasmine", "html_url": "https://github.com/loveJasmine", "followers_url": "https://api.github.com/users/loveJasmine/followers", "following_url": "https://api.github.com/users/loveJasmine/following{/other_user}", "gists_url": "https://api.github.com/users/loveJasmine/gists{/gist_id}", "starred_url": "https://api.github.com/users/loveJasmine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loveJasmine/subscriptions", "organizations_url": "https://api.github.com/users/loveJasmine/orgs", "repos_url": "https://api.github.com/users/loveJasmine/repos", "events_url": "https://api.github.com/users/loveJasmine/events{/privacy}", "received_events_url": "https://api.github.com/users/loveJasmine/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-05T08:51:39Z", "updated_at": "2020-08-14T03:11:01Z", "closed_at": "2020-08-14T03:11:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "specially, any details about the modules like plasma, arrow etc.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9906", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9906/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9906/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9906/events", "html_url": "https://github.com/ray-project/ray/issues/9906", "id": 672754600, "node_id": "MDU6SXNzdWU2NzI3NTQ2MDA=", "number": 9906, "title": "[Placement Group] Support reschedule placement group when a new node is added", "user": {"login": "ffbin", "id": 13081808, "node_id": "MDQ6VXNlcjEzMDgxODA4", "avatar_url": "https://avatars2.githubusercontent.com/u/13081808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffbin", "html_url": "https://github.com/ffbin", "followers_url": "https://api.github.com/users/ffbin/followers", "following_url": "https://api.github.com/users/ffbin/following{/other_user}", "gists_url": "https://api.github.com/users/ffbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffbin/subscriptions", "organizations_url": "https://api.github.com/users/ffbin/orgs", "repos_url": "https://api.github.com/users/ffbin/repos", "events_url": "https://api.github.com/users/ffbin/events{/privacy}", "received_events_url": "https://api.github.com/users/ffbin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1805253811, "node_id": "MDU6TGFiZWwxODA1MjUzODEx", "url": "https://api.github.com/repos/ray-project/ray/labels/P1", "name": "P1", "color": "e2bf34", "default": false, "description": "Issue that should be fixed within a few weeks"}, {"id": 1374085984, "node_id": "MDU6TGFiZWwxMzc0MDg1OTg0", "url": "https://api.github.com/repos/ray-project/ray/labels/enhancement", "name": "enhancement", "color": "a0b1ff", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ffbin", "id": 13081808, "node_id": "MDQ6VXNlcjEzMDgxODA4", "avatar_url": "https://avatars2.githubusercontent.com/u/13081808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffbin", "html_url": "https://github.com/ffbin", "followers_url": "https://api.github.com/users/ffbin/followers", "following_url": "https://api.github.com/users/ffbin/following{/other_user}", "gists_url": "https://api.github.com/users/ffbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffbin/subscriptions", "organizations_url": "https://api.github.com/users/ffbin/orgs", "repos_url": "https://api.github.com/users/ffbin/repos", "events_url": "https://api.github.com/users/ffbin/events{/privacy}", "received_events_url": "https://api.github.com/users/ffbin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ffbin", "id": 13081808, "node_id": "MDQ6VXNlcjEzMDgxODA4", "avatar_url": "https://avatars2.githubusercontent.com/u/13081808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffbin", "html_url": "https://github.com/ffbin", "followers_url": "https://api.github.com/users/ffbin/followers", "following_url": "https://api.github.com/users/ffbin/following{/other_user}", "gists_url": "https://api.github.com/users/ffbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffbin/subscriptions", "organizations_url": "https://api.github.com/users/ffbin/orgs", "repos_url": "https://api.github.com/users/ffbin/repos", "events_url": "https://api.github.com/users/ffbin/events{/privacy}", "received_events_url": "https://api.github.com/users/ffbin/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/ray-project/ray/milestones/3", "html_url": "https://github.com/ray-project/ray/milestone/3", "labels_url": "https://api.github.com/repos/ray-project/ray/milestones/3/labels", "id": 5710350, "node_id": "MDk6TWlsZXN0b25lNTcxMDM1MA==", "number": 3, "title": "Placement Group API", "description": "Placement groups allow users to atomically reserve groups of resources across multiple nodes (i.e., gang scheduling). They can request the resource bundles that make up the group to be packed as close as possible for locality (PACK), or spread apart (SPREAD). Groups can be destroyed to release all resources associated with the group.\r\n\r\nThe Ray Autoscaler will be aware of placement groups, and auto-scale the cluster to ensure pending groups can be placed as needed.", "creator": {"login": "ffbin", "id": 13081808, "node_id": "MDQ6VXNlcjEzMDgxODA4", "avatar_url": "https://avatars2.githubusercontent.com/u/13081808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffbin", "html_url": "https://github.com/ffbin", "followers_url": "https://api.github.com/users/ffbin/followers", "following_url": "https://api.github.com/users/ffbin/following{/other_user}", "gists_url": "https://api.github.com/users/ffbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffbin/subscriptions", "organizations_url": "https://api.github.com/users/ffbin/orgs", "repos_url": "https://api.github.com/users/ffbin/repos", "events_url": "https://api.github.com/users/ffbin/events{/privacy}", "received_events_url": "https://api.github.com/users/ffbin/received_events", "type": "User", "site_admin": false}, "open_issues": 16, "closed_issues": 9, "state": "open", "created_at": "2020-07-29T06:12:13Z", "updated_at": "2020-08-21T18:04:57Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2020-08-04T12:29:25Z", "updated_at": "2020-08-10T09:56:22Z", "closed_at": "2020-08-10T09:56:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### Describe your feature request\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9900", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9900/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9900/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9900/events", "html_url": "https://github.com/ray-project/ray/issues/9900", "id": 672592829, "node_id": "MDU6SXNzdWU2NzI1OTI4Mjk=", "number": 9900, "title": "[rllib] Clean up outdated docs", "user": {"login": "ericl", "id": 14922, "node_id": "MDQ6VXNlcjE0OTIy", "avatar_url": "https://avatars3.githubusercontent.com/u/14922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericl", "html_url": "https://github.com/ericl", "followers_url": "https://api.github.com/users/ericl/followers", "following_url": "https://api.github.com/users/ericl/following{/other_user}", "gists_url": "https://api.github.com/users/ericl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericl/subscriptions", "organizations_url": "https://api.github.com/users/ericl/orgs", "repos_url": "https://api.github.com/users/ericl/repos", "events_url": "https://api.github.com/users/ericl/events{/privacy}", "received_events_url": "https://api.github.com/users/ericl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1805253811, "node_id": "MDU6TGFiZWwxODA1MjUzODEx", "url": "https://api.github.com/repos/ray-project/ray/labels/P1", "name": "P1", "color": "e2bf34", "default": false, "description": "Issue that should be fixed within a few weeks"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-04T08:03:49Z", "updated_at": "2020-08-07T01:29:04Z", "closed_at": "2020-08-07T01:29:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Remove:\r\n\r\n> If you encounter out-of-memory errors, consider setting redis_max_memory and object_store_memory in ray.init() to reduce memory usage.\r\n\r\nReplace:\r\n\r\n> Eager execution can be enabled manually by calling tf.enable_eager_execution() or setting the \"eager\": True trainer config.\r\n\r\nwith some mention of \"framework\": \"tf2\"\r\n\r\nFix:\r\n\r\nBroken link to APPO loss function on main page.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9895", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9895/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9895/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9895/events", "html_url": "https://github.com/ray-project/ray/issues/9895", "id": 672523308, "node_id": "MDU6SXNzdWU2NzI1MjMzMDg=", "number": 9895, "title": "[Placement Group] Optimize placement group pack strategy", "user": {"login": "ffbin", "id": 13081808, "node_id": "MDQ6VXNlcjEzMDgxODA4", "avatar_url": "https://avatars2.githubusercontent.com/u/13081808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffbin", "html_url": "https://github.com/ffbin", "followers_url": "https://api.github.com/users/ffbin/followers", "following_url": "https://api.github.com/users/ffbin/following{/other_user}", "gists_url": "https://api.github.com/users/ffbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffbin/subscriptions", "organizations_url": "https://api.github.com/users/ffbin/orgs", "repos_url": "https://api.github.com/users/ffbin/repos", "events_url": "https://api.github.com/users/ffbin/events{/privacy}", "received_events_url": "https://api.github.com/users/ffbin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1805253811, "node_id": "MDU6TGFiZWwxODA1MjUzODEx", "url": "https://api.github.com/repos/ray-project/ray/labels/P1", "name": "P1", "color": "e2bf34", "default": false, "description": "Issue that should be fixed within a few weeks"}, {"id": 1374085984, "node_id": "MDU6TGFiZWwxMzc0MDg1OTg0", "url": "https://api.github.com/repos/ray-project/ray/labels/enhancement", "name": "enhancement", "color": "a0b1ff", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ffbin", "id": 13081808, "node_id": "MDQ6VXNlcjEzMDgxODA4", "avatar_url": "https://avatars2.githubusercontent.com/u/13081808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffbin", "html_url": "https://github.com/ffbin", "followers_url": "https://api.github.com/users/ffbin/followers", "following_url": "https://api.github.com/users/ffbin/following{/other_user}", "gists_url": "https://api.github.com/users/ffbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffbin/subscriptions", "organizations_url": "https://api.github.com/users/ffbin/orgs", "repos_url": "https://api.github.com/users/ffbin/repos", "events_url": "https://api.github.com/users/ffbin/events{/privacy}", "received_events_url": "https://api.github.com/users/ffbin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ffbin", "id": 13081808, "node_id": "MDQ6VXNlcjEzMDgxODA4", "avatar_url": "https://avatars2.githubusercontent.com/u/13081808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffbin", "html_url": "https://github.com/ffbin", "followers_url": "https://api.github.com/users/ffbin/followers", "following_url": "https://api.github.com/users/ffbin/following{/other_user}", "gists_url": "https://api.github.com/users/ffbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffbin/subscriptions", "organizations_url": "https://api.github.com/users/ffbin/orgs", "repos_url": "https://api.github.com/users/ffbin/repos", "events_url": "https://api.github.com/users/ffbin/events{/privacy}", "received_events_url": "https://api.github.com/users/ffbin/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/ray-project/ray/milestones/3", "html_url": "https://github.com/ray-project/ray/milestone/3", "labels_url": "https://api.github.com/repos/ray-project/ray/milestones/3/labels", "id": 5710350, "node_id": "MDk6TWlsZXN0b25lNTcxMDM1MA==", "number": 3, "title": "Placement Group API", "description": "Placement groups allow users to atomically reserve groups of resources across multiple nodes (i.e., gang scheduling). They can request the resource bundles that make up the group to be packed as close as possible for locality (PACK), or spread apart (SPREAD). Groups can be destroyed to release all resources associated with the group.\r\n\r\nThe Ray Autoscaler will be aware of placement groups, and auto-scale the cluster to ensure pending groups can be placed as needed.", "creator": {"login": "ffbin", "id": 13081808, "node_id": "MDQ6VXNlcjEzMDgxODA4", "avatar_url": "https://avatars2.githubusercontent.com/u/13081808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffbin", "html_url": "https://github.com/ffbin", "followers_url": "https://api.github.com/users/ffbin/followers", "following_url": "https://api.github.com/users/ffbin/following{/other_user}", "gists_url": "https://api.github.com/users/ffbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffbin/subscriptions", "organizations_url": "https://api.github.com/users/ffbin/orgs", "repos_url": "https://api.github.com/users/ffbin/repos", "events_url": "https://api.github.com/users/ffbin/events{/privacy}", "received_events_url": "https://api.github.com/users/ffbin/received_events", "type": "User", "site_admin": false}, "open_issues": 16, "closed_issues": 9, "state": "open", "created_at": "2020-07-29T06:12:13Z", "updated_at": "2020-08-21T18:04:57Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2020-08-04T05:48:50Z", "updated_at": "2020-08-20T22:22:56Z", "closed_at": "2020-08-20T22:22:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is the problem?\r\nAt present, the pack strategy always selects the first node, which will cause placement group creation failure. \r\n*Ray version and other system information (Python version, TensorFlow version, OS):*\r\n\r\n### Reproduction (REQUIRED)\r\nPlease provide a script that can be run to reproduce the issue. The script should have **no external library dependencies** (i.e., use fake or mock data / environments):\r\n\r\nIf we cannot run your script, we cannot fix your issue.\r\n\r\n- [ ] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [ ] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9893", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9893/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9893/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9893/events", "html_url": "https://github.com/ray-project/ray/issues/9893", "id": 672487024, "node_id": "MDU6SXNzdWU2NzI0ODcwMjQ=", "number": 9893, "title": "run as_future from thread", "user": {"login": "endremborza", "id": 11783247, "node_id": "MDQ6VXNlcjExNzgzMjQ3", "avatar_url": "https://avatars2.githubusercontent.com/u/11783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/endremborza", "html_url": "https://github.com/endremborza", "followers_url": "https://api.github.com/users/endremborza/followers", "following_url": "https://api.github.com/users/endremborza/following{/other_user}", "gists_url": "https://api.github.com/users/endremborza/gists{/gist_id}", "starred_url": "https://api.github.com/users/endremborza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/endremborza/subscriptions", "organizations_url": "https://api.github.com/users/endremborza/orgs", "repos_url": "https://api.github.com/users/endremborza/repos", "events_url": "https://api.github.com/users/endremborza/events{/privacy}", "received_events_url": "https://api.github.com/users/endremborza/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}, {"id": 2090776337, "node_id": "MDU6TGFiZWwyMDkwNzc2MzM3", "url": "https://api.github.com/repos/ray-project/ray/labels/triage", "name": "triage", "color": "b0e7f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "simon-mo", "id": 21118851, "node_id": "MDQ6VXNlcjIxMTE4ODUx", "avatar_url": "https://avatars3.githubusercontent.com/u/21118851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simon-mo", "html_url": "https://github.com/simon-mo", "followers_url": "https://api.github.com/users/simon-mo/followers", "following_url": "https://api.github.com/users/simon-mo/following{/other_user}", "gists_url": "https://api.github.com/users/simon-mo/gists{/gist_id}", "starred_url": "https://api.github.com/users/simon-mo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simon-mo/subscriptions", "organizations_url": "https://api.github.com/users/simon-mo/orgs", "repos_url": "https://api.github.com/users/simon-mo/repos", "events_url": "https://api.github.com/users/simon-mo/events{/privacy}", "received_events_url": "https://api.github.com/users/simon-mo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "simon-mo", "id": 21118851, "node_id": "MDQ6VXNlcjIxMTE4ODUx", "avatar_url": "https://avatars3.githubusercontent.com/u/21118851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simon-mo", "html_url": "https://github.com/simon-mo", "followers_url": "https://api.github.com/users/simon-mo/followers", "following_url": "https://api.github.com/users/simon-mo/following{/other_user}", "gists_url": "https://api.github.com/users/simon-mo/gists{/gist_id}", "starred_url": "https://api.github.com/users/simon-mo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simon-mo/subscriptions", "organizations_url": "https://api.github.com/users/simon-mo/orgs", "repos_url": "https://api.github.com/users/simon-mo/repos", "events_url": "https://api.github.com/users/simon-mo/events{/privacy}", "received_events_url": "https://api.github.com/users/simon-mo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-08-04T03:58:54Z", "updated_at": "2020-08-07T20:48:13Z", "closed_at": "2020-08-07T20:48:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Ray actor remote as_future can not be called from a new thread\r\n\r\nI'm building a small scheduler that uses ray actors and queues in different python threads, but I ran into an issue I couldn't really deal with and eventually went a different way. However, I thought I'd share, as it may be relevant. If not, please close the issue.\r\n\r\nthis is from ray 0.8.6, the latest on pip, python3.7\r\n\r\n### MWE\r\n\r\n```python\r\n\r\nfrom threading import Thread\r\nimport time\r\n\r\nimport ray\r\n\r\n\r\nray.init()\r\n\r\n@ray.remote\r\nclass Example:\r\n    def __init__(self, x):\r\n        self.x = x\r\n\r\n    def get(self):\r\n        return self.x\r\n\r\n    \r\ne = Example.remote(5)\r\n\r\nl = []\r\n\r\nclass Cons(Thread):\r\n    \r\n    def run(self):\r\n        e.get.remote().as_future().add_done_callback(lambda x: l.append(x.result()))\r\n\r\nc = Cons()\r\nc.start()\r\nc.join()\r\n\r\n```\r\n\r\nthis gives `RuntimeError: There is no current event loop in thread 'Thread-n'.`\r\n\r\nit works great without the `as_future()`, but this is still hard to pinpoint, and there are no available examples I could find\r\n\r\n- [x] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [ ] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9892", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9892/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9892/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9892/events", "html_url": "https://github.com/ray-project/ray/issues/9892", "id": 672479538, "node_id": "MDU6SXNzdWU2NzI0Nzk1Mzg=", "number": 9892, "title": "[JAVA] The worker died unexpectedly while executing this task", "user": {"login": "buaazhwb", "id": 16569590, "node_id": "MDQ6VXNlcjE2NTY5NTkw", "avatar_url": "https://avatars2.githubusercontent.com/u/16569590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/buaazhwb", "html_url": "https://github.com/buaazhwb", "followers_url": "https://api.github.com/users/buaazhwb/followers", "following_url": "https://api.github.com/users/buaazhwb/following{/other_user}", "gists_url": "https://api.github.com/users/buaazhwb/gists{/gist_id}", "starred_url": "https://api.github.com/users/buaazhwb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/buaazhwb/subscriptions", "organizations_url": "https://api.github.com/users/buaazhwb/orgs", "repos_url": "https://api.github.com/users/buaazhwb/repos", "events_url": "https://api.github.com/users/buaazhwb/events{/privacy}", "received_events_url": "https://api.github.com/users/buaazhwb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-04T03:34:40Z", "updated_at": "2020-08-12T00:52:31Z", "closed_at": "2020-08-12T00:52:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is your question?\r\nI am using the JAVA api to run the exercise in tutorial. \r\n\r\n\r\nHere is my code:\r\n\r\npackage com.example;\r\n\r\nimport io.ray.api.ActorHandle;\r\nimport io.ray.api.Ray;\r\nimport io.ray.api.ObjectRef;\r\n\r\n\r\npublic class test {\r\n\r\n    public static String sayHello() {\r\n        String ret = \"hello\";\r\n        System.out.println(ret);\r\n        return ret;\r\n    }\r\n\r\n    public static String sayWorld() {\r\n        String ret = \"world!\";\r\n        System.out.println(ret);\r\n        return ret;\r\n    }\r\n\r\n    public static String merge(String hello, String world) {\r\n        return hello + \",\" + world;\r\n    }\r\n\r\n    public static String sayHelloWorld() {\r\n        ObjectRef<String> hello = Ray.task(test::sayHello).remote();\r\n        ObjectRef<String> world = Ray.task(test::sayWorld).remote();\r\n        // Pass unfinished results as the parameters to another remote function.\r\n        return Ray.task(test::merge, hello, world).remote().get();\r\n    }\r\n\r\n    public static void main(String[] args) throws Exception {\r\n        try {\r\n            // Use Ray.init to initialize the Ray runtime.\r\n            Ray.init();\r\n            ObjectRef<String> hello = Ray.task(test::sayHello).remote();\r\n            ObjectRef<String> world = Ray.task(test::sayWorld).remote();\r\n            System.out.println(\"First remote call result:\" + hello.get());\r\n            System.out.println(\"Second remote call result:\" + world.get());\r\n\r\n            String helloWorld = test.sayHelloWorld();\r\n            System.out.println(helloWorld);\r\n            assert helloWorld.equals(\"hello,world!\");\r\n            Ray.shutdown();\r\n        } catch (Throwable t) {\r\n            t.printStackTrace();\r\n        } finally {\r\n            Ray.shutdown();\r\n        }\r\n    }\r\n}\r\n\r\n\r\nFirst, I have manually started up a local cluster with the following command:\r\n`ray start --head --include-java --redis-password=\"123\" --node-manager-port=61012`\r\n\r\nThen I run the program by connecting to this cluster.  \r\n\r\n\r\nAnd I got the following error:  \r\n\r\n\r\n        E0804 02:02:08.921944 48273 48360 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=NORMAL_TASK, Language=JAVA, Resources: {}, function_descriptor={type=JavaFunctionDescriptor, class_name=com.example.test, function_name=sayWorld, signature=()Ljava/lang/String;}, task_id=0f8aa561996c6719ffffffff0c00, job_id=0c00, num_args=0, num_returns=1  \r\n\r\n        E0804 02:02:08.922263 48273 48360 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=NORMAL_TASK, Language=JAVA, Resources: {}, function_descriptor={type=JavaFunctionDescriptor, class_name=com.example.test, function_name=sayHello, signature=()Ljava/lang/String;}, task_id=b9298f17cd52fc21ffffffff0c00, job_id=0c00, num_args=0, num_returns=1  \r\n\r\n        io.ray.api.exception.RayWorkerException: The worker died unexpectedly while executing this task.  \r\n\r\n        at io.ray.runtime.object.ObjectSerializer.deserialize(ObjectSerializer.java:67)   \r\n\r\n        at io.ray.runtime.object.ObjectStore.get(ObjectStore.java:100)   \r\n\r\n        at io.ray.runtime.AbstractRayRuntime.get(AbstractRayRuntime.java:98)   \r\n\r\n        at io.ray.runtime.AbstractRayRuntime.get(AbstractRayRuntime.java:85)   \r\n\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)   \r\n\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)   \r\n\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)    \r\n\r\n\r\n        at java.lang.reflect.Method.invoke(Method.java:498)  \r\n \r\n        at io.ray.runtime.RayRuntimeProxy.invoke(RayRuntimeProxy.java:45)   \r\n\r\n        at com.sun.proxy.$Proxy2.get(Unknown Source)   \r\n\r\n        at io.ray.api.Ray.get(Ray.java:74)   \r\n\r\n        at io.ray.runtime.object.ObjectRefImpl.get(ObjectRefImpl.java:47)   \r\n\r\n        at com.example.test.main(test.java:43)\r\n\r\n*Ray version and other system information (Python version, TensorFlow version, OS):*\r\nThe ray version is releases/0.8.7. What can I do to solve it?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9890", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9890/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9890/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9890/events", "html_url": "https://github.com/ray-project/ray/issues/9890", "id": 672445552, "node_id": "MDU6SXNzdWU2NzI0NDU1NTI=", "number": 9890, "title": "With 6 workers, Ape-X trains faster than interacting with the environment?", "user": {"login": "xlnwel", "id": 10184153, "node_id": "MDQ6VXNlcjEwMTg0MTUz", "avatar_url": "https://avatars0.githubusercontent.com/u/10184153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xlnwel", "html_url": "https://github.com/xlnwel", "followers_url": "https://api.github.com/users/xlnwel/followers", "following_url": "https://api.github.com/users/xlnwel/following{/other_user}", "gists_url": "https://api.github.com/users/xlnwel/gists{/gist_id}", "starred_url": "https://api.github.com/users/xlnwel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xlnwel/subscriptions", "organizations_url": "https://api.github.com/users/xlnwel/orgs", "repos_url": "https://api.github.com/users/xlnwel/repos", "events_url": "https://api.github.com/users/xlnwel/events{/privacy}", "received_events_url": "https://api.github.com/users/xlnwel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-08-04T01:51:00Z", "updated_at": "2020-08-04T07:55:39Z", "closed_at": "2020-08-04T07:55:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I run this [project](https://github.com/aicrowd/neurips2020-procgen-starter-kit) using `APEX` from ray, and noticed that the learning step is incredible fast. How does ray achieve that?\r\n\r\nAll I've done is to replace [this file](https://github.com/AIcrowd/neurips2020-procgen-starter-kit/blob/master/experiments/impala-baseline.yaml) with the following configuration\r\n\r\n```python\r\nprocgen-ppo:\r\n    env: procgen_env_wrapper  # Change this at your own risk :D\r\n    run: APEX\r\n    stop:\r\n        timesteps_total: 8000000\r\n\r\n    checkpoint_freq: 100\r\n    checkpoint_at_end: True\r\n    keep_checkpoints_num: 5\r\n\r\n    config:\r\n        env_config:\r\n            env_name: coinrun\r\n            num_levels: 0\r\n            start_level: 0\r\n            paint_vel_info: False\r\n            use_generated_assets: False\r\n            center_agent: True\r\n            use_sequential_levels: False\r\n            distribution_mode: easy\r\n\r\n        use_pytorch: False\r\n\r\n        model:\r\n            custom_model: impala_cnn_tf\r\n            custom_options: {}\r\n\r\n        num_workers: 6\r\n        num_envs_per_worker: 1\r\n        rollout_fragment_length: 100\r\n\r\n        batch_mode: truncate_episodes\r\n\r\n        num_cpus_per_worker: 1\r\n        num_gpus_per_worker: 0\r\n        num_cpus_for_driver: 1\r\n\r\n        num_gpus: 0.5\r\n        explore: True,\r\n\r\n        observation_filter: \"NoFilter\"\r\n        synchronize_filters: True\r\n        compress_observations: False\r\n        timesteps_per_iteration: 0\r\n        seed: null\r\n```\r\n\r\nHere's a snapshot from tensorboard\r\n\r\n![image](https://user-images.githubusercontent.com/10184153/89243266-1b21cf00-d636-11ea-806d-fb6dfa00f4f7.png)\r\n\r\nIn the same training time, the `num_steps_trained`(the number of training steps? if I understand it right) is 10+ times more than `num_steps_sampled`(the number of interactions between the agent and environment?). How's it even possible as `procgen` is already a fast environment? Or am I misunderstand something?\r\n\r\nAlso, I noticed the target network update frequency is extremely large in Ape-X's default configuration. It's up to 500000 training steps as [this line](https://github.com/ray-project/ray/blob/b4c527b3f3e61bbea72b15706a9958fd337c93a6/rllib/agents/dqn/apex.py#L39) shows. While recent papers recommend this value to be thousands of training steps.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9886", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9886/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9886/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9886/events", "html_url": "https://github.com/ray-project/ray/issues/9886", "id": 672440057, "node_id": "MDU6SXNzdWU2NzI0NDAwNTc=", "number": 9886, "title": "[Placement Group] Assign CUDA_VISIBLE_DEVICES properly for placement group GPU resources", "user": {"login": "ericl", "id": 14922, "node_id": "MDQ6VXNlcjE0OTIy", "avatar_url": "https://avatars3.githubusercontent.com/u/14922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericl", "html_url": "https://github.com/ericl", "followers_url": "https://api.github.com/users/ericl/followers", "following_url": "https://api.github.com/users/ericl/following{/other_user}", "gists_url": "https://api.github.com/users/ericl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericl/subscriptions", "organizations_url": "https://api.github.com/users/ericl/orgs", "repos_url": "https://api.github.com/users/ericl/repos", "events_url": "https://api.github.com/users/ericl/events{/privacy}", "received_events_url": "https://api.github.com/users/ericl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1805253811, "node_id": "MDU6TGFiZWwxODA1MjUzODEx", "url": "https://api.github.com/repos/ray-project/ray/labels/P1", "name": "P1", "color": "e2bf34", "default": false, "description": "Issue that should be fixed within a few weeks"}, {"id": 1374085984, "node_id": "MDU6TGFiZWwxMzc0MDg1OTg0", "url": "https://api.github.com/repos/ray-project/ray/labels/enhancement", "name": "enhancement", "color": "a0b1ff", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ericl", "id": 14922, "node_id": "MDQ6VXNlcjE0OTIy", "avatar_url": "https://avatars3.githubusercontent.com/u/14922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericl", "html_url": "https://github.com/ericl", "followers_url": "https://api.github.com/users/ericl/followers", "following_url": "https://api.github.com/users/ericl/following{/other_user}", "gists_url": "https://api.github.com/users/ericl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericl/subscriptions", "organizations_url": "https://api.github.com/users/ericl/orgs", "repos_url": "https://api.github.com/users/ericl/repos", "events_url": "https://api.github.com/users/ericl/events{/privacy}", "received_events_url": "https://api.github.com/users/ericl/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ericl", "id": 14922, "node_id": "MDQ6VXNlcjE0OTIy", "avatar_url": "https://avatars3.githubusercontent.com/u/14922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericl", "html_url": "https://github.com/ericl", "followers_url": "https://api.github.com/users/ericl/followers", "following_url": "https://api.github.com/users/ericl/following{/other_user}", "gists_url": "https://api.github.com/users/ericl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericl/subscriptions", "organizations_url": "https://api.github.com/users/ericl/orgs", "repos_url": "https://api.github.com/users/ericl/repos", "events_url": "https://api.github.com/users/ericl/events{/privacy}", "received_events_url": "https://api.github.com/users/ericl/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/ray-project/ray/milestones/3", "html_url": "https://github.com/ray-project/ray/milestone/3", "labels_url": "https://api.github.com/repos/ray-project/ray/milestones/3/labels", "id": 5710350, "node_id": "MDk6TWlsZXN0b25lNTcxMDM1MA==", "number": 3, "title": "Placement Group API", "description": "Placement groups allow users to atomically reserve groups of resources across multiple nodes (i.e., gang scheduling). They can request the resource bundles that make up the group to be packed as close as possible for locality (PACK), or spread apart (SPREAD). Groups can be destroyed to release all resources associated with the group.\r\n\r\nThe Ray Autoscaler will be aware of placement groups, and auto-scale the cluster to ensure pending groups can be placed as needed.", "creator": {"login": "ffbin", "id": 13081808, "node_id": "MDQ6VXNlcjEzMDgxODA4", "avatar_url": "https://avatars2.githubusercontent.com/u/13081808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffbin", "html_url": "https://github.com/ffbin", "followers_url": "https://api.github.com/users/ffbin/followers", "following_url": "https://api.github.com/users/ffbin/following{/other_user}", "gists_url": "https://api.github.com/users/ffbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffbin/subscriptions", "organizations_url": "https://api.github.com/users/ffbin/orgs", "repos_url": "https://api.github.com/users/ffbin/repos", "events_url": "https://api.github.com/users/ffbin/events{/privacy}", "received_events_url": "https://api.github.com/users/ffbin/received_events", "type": "User", "site_admin": false}, "open_issues": 16, "closed_issues": 9, "state": "open", "created_at": "2020-07-29T06:12:13Z", "updated_at": "2020-08-21T18:04:57Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2020-08-04T01:33:37Z", "updated_at": "2020-08-14T01:00:05Z", "closed_at": "2020-08-14T01:00:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since placement group GPU resource names are mangled (GPU => `GPU_group_zzz`), we don't set CUDA_VISIBLE_DEVICES properly for these resources.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9877", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9877/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9877/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9877/events", "html_url": "https://github.com/ray-project/ray/issues/9877", "id": 672270889, "node_id": "MDU6SXNzdWU2NzIyNzA4ODk=", "number": 9877, "title": "[Docs] Some doc strings aren't generating website documentation", "user": {"login": "wuisawesome", "id": 3980609, "node_id": "MDQ6VXNlcjM5ODA2MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3980609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wuisawesome", "html_url": "https://github.com/wuisawesome", "followers_url": "https://api.github.com/users/wuisawesome/followers", "following_url": "https://api.github.com/users/wuisawesome/following{/other_user}", "gists_url": "https://api.github.com/users/wuisawesome/gists{/gist_id}", "starred_url": "https://api.github.com/users/wuisawesome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wuisawesome/subscriptions", "organizations_url": "https://api.github.com/users/wuisawesome/orgs", "repos_url": "https://api.github.com/users/wuisawesome/repos", "events_url": "https://api.github.com/users/wuisawesome/events{/privacy}", "received_events_url": "https://api.github.com/users/wuisawesome/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-03T18:44:55Z", "updated_at": "2020-08-03T22:02:05Z", "closed_at": "2020-08-03T22:02:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is the problem?\r\n\r\nSome doc strings aren't generating documentation in the package reference on RTD. \r\n\r\n### Reproduction (REQUIRED)\r\nPlease provide a script that can be run to reproduce the issue. The script should have **no external library dependencies** (i.e., use fake or mock data / environments):\r\n\r\nFor example, `ParallelIterator::transform` isn't generated. Its documentation can be found here: https://github.com/ray-project/ray/blob/c741d1cf9c78f8cd60b40d58b88e8d3e4d636906/python/ray/util/iter.py#L196\r\n\r\nBut not here https://docs.ray.io/en/latest/iter.html#module-ray.util.iter\r\n\r\nIf we cannot run your script, we cannot fix your issue.\r\n\r\n- [ ] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [ ] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9875", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9875/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9875/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9875/events", "html_url": "https://github.com/ray-project/ray/issues/9875", "id": 672259354, "node_id": "MDU6SXNzdWU2NzIyNTkzNTQ=", "number": 9875, "title": "[Core] `test_dead_actors.py` has check failures.", "user": {"login": "rkooo567", "id": 18510752, "node_id": "MDQ6VXNlcjE4NTEwNzUy", "avatar_url": "https://avatars0.githubusercontent.com/u/18510752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rkooo567", "html_url": "https://github.com/rkooo567", "followers_url": "https://api.github.com/users/rkooo567/followers", "following_url": "https://api.github.com/users/rkooo567/following{/other_user}", "gists_url": "https://api.github.com/users/rkooo567/gists{/gist_id}", "starred_url": "https://api.github.com/users/rkooo567/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rkooo567/subscriptions", "organizations_url": "https://api.github.com/users/rkooo567/orgs", "repos_url": "https://api.github.com/users/rkooo567/repos", "events_url": "https://api.github.com/users/rkooo567/events{/privacy}", "received_events_url": "https://api.github.com/users/rkooo567/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1805253707, "node_id": "MDU6TGFiZWwxODA1MjUzNzA3", "url": "https://api.github.com/repos/ray-project/ray/labels/P0", "name": "P0", "color": "cc0507", "default": false, "description": "Issue that must be fixed in short order"}, {"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}, {"id": 1504751318, "node_id": "MDU6TGFiZWwxNTA0NzUxMzE4", "url": "https://api.github.com/repos/ray-project/ray/labels/release-blocker", "name": "release-blocker", "color": "8c0507", "default": false, "description": "P0 Issue that blocks the release"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-03T18:21:38Z", "updated_at": "2020-08-06T17:51:41Z", "closed_at": "2020-08-06T17:51:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is the problem?\r\n\r\n```\r\n(pid=raylet, ip=172.31.21.113) F0803 17:57:59.534689 31315 31315 service_based_accessor.cc:488]  Check failed: !local_node_id_.IsNil() This node is disconnected.\r\n(pid=raylet, ip=172.31.21.113) *** Check failure stack trace: ***\r\n(pid=raylet, ip=172.31.21.113)     @     0x56454fee9aed  google::LogMessage::Fail()\r\n(pid=raylet, ip=172.31.21.113)     @     0x56454feeac4c  google::LogMessage::SendToLog()\r\n(pid=raylet, ip=172.31.21.113)     @     0x56454fee97c9  google::LogMessage::Flush()\r\n(pid=raylet, ip=172.31.21.113)     @     0x56454fee99e1  google::LogMessage::~LogMessage()\r\n(pid=raylet, ip=172.31.21.113)     @     0x56454fed4ea9  ray::RayLog::~RayLog()\r\n(pid=raylet, ip=172.31.21.113)     @     0x56454fcce484  ray::gcs::ServiceBasedNodeInfoAccessor::UnregisterSelf()\r\n(pid=raylet, ip=172.31.21.113)     @     0x56454fb872b1  ray::raylet::Raylet::Stop()\r\n(pid=raylet, ip=172.31.21.113)     @     0x56454fb63ee7  _ZZ4mainENKUlRKN5boost6system10error_codeEiE0_clES3_i.isra.2539\r\n(pid=raylet, ip=172.31.21.113)     @     0x56454fb643b8  _ZN5boost4asio6detail14signal_handlerIZ4mainEUlRKNS_6system10error_codeEiE0_NS1_18io_object_executorINS0_8executorEEEE11do_completeEPvPNS1_19scheduler_operationES6_m\r\n(pid=raylet, ip=172.31.21.113)     @     0x5645501cfddf  boost::asio::detail::scheduler::do_run_one()\r\n(pid=raylet, ip=172.31.21.113)     @     0x5645501d12e1  boost::asio::detail::scheduler::run()\r\n(pid=raylet, ip=172.31.21.113)     @     0x5645501d2312  boost::asio::io_context::run()\r\n(pid=raylet, ip=172.31.21.113)     @     0x56454fb4669e  main\r\n(pid=raylet, ip=172.31.21.113)     @     0x7ff0ae259b97  __libc_start_main\r\n(pid=raylet, ip=172.31.21.113)     @     0x56454fb586b1  (unknown)\r\n```\r\n\r\nSeems like the root cause is that the GCS was broken with this error. \r\n```\r\nF0803 18:18:37.912014  5537  5537 gcs_actor_manager.cc:452]  Check failed: iter != actor_to_register_callbacks_.end() && !iter->second.empty() \r\nF0803 18:18:37.912014  5537  5537 gcs_actor_manager.cc:452]  Check failed: iter != actor_to_register_callbacks_.end() && !iter->second.empty() \r\nF0803 18:18:37.912014  5537  5537 gcs_actor_manager.cc:452]  Check failed: iter != actor_to_register_callbacks_.end() && !iter->second.empty() \r\nF0803 18:18:37.912014  5537  5537 gcs_actor_manager.cc:452]  Check failed: iter != actor_to_register_callbacks_.end() && !iter->second.empty() \r\n```\r\n\r\n### Reproduction (REQUIRED)\r\nPlease provide a script that can be run to reproduce the issue. The script should have **no external library dependencies** (i.e., use fake or mock data / environments):\r\n\r\nrun `test_dead_acators.py`\r\n\r\n- [ ] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [ ] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9874", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9874/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9874/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9874/events", "html_url": "https://github.com/ray-project/ray/issues/9874", "id": 672216672, "node_id": "MDU6SXNzdWU2NzIyMTY2NzI=", "number": 9874, "title": "[docs] Issue on `cluster/launcher.rst`", "user": {"login": "alexcoca", "id": 30216068, "node_id": "MDQ6VXNlcjMwMjE2MDY4", "avatar_url": "https://avatars1.githubusercontent.com/u/30216068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcoca", "html_url": "https://github.com/alexcoca", "followers_url": "https://api.github.com/users/alexcoca/followers", "following_url": "https://api.github.com/users/alexcoca/following{/other_user}", "gists_url": "https://api.github.com/users/alexcoca/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcoca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcoca/subscriptions", "organizations_url": "https://api.github.com/users/alexcoca/orgs", "repos_url": "https://api.github.com/users/alexcoca/repos", "events_url": "https://api.github.com/users/alexcoca/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcoca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-03T17:06:15Z", "updated_at": "2020-08-03T22:05:32Z", "closed_at": "2020-08-03T21:06:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Documentation Problem/Question/Comment\r\n<!-- Describe your issue/question/comment below. -->\r\nThe [page ](https://docs.ray.io/en/master/cluster/launcher.html#ref-automatic-cluster)directs the reader [here](https://docs.ray.io/en/master/package-ref.html) to read more about `ray up` and `ray exec` but these are not documented on this page (currently the `The Ray Command Line API` section is empty).\r\n\r\n<!-- If there are typos or errors in the docs, feel free to create a pull-request. -->\r\n\r\n\r\n\r\n\r\n(Created directly from the docs)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9872", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9872/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9872/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9872/events", "html_url": "https://github.com/ray-project/ray/issues/9872", "id": 671952583, "node_id": "MDU6SXNzdWU2NzE5NTI1ODM=", "number": 9872, "title": "[rllib] How to change hyperparameters after a training iteration (for MARL)?", "user": {"login": "ChuaCheowHuan", "id": 17569306, "node_id": "MDQ6VXNlcjE3NTY5MzA2", "avatar_url": "https://avatars0.githubusercontent.com/u/17569306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChuaCheowHuan", "html_url": "https://github.com/ChuaCheowHuan", "followers_url": "https://api.github.com/users/ChuaCheowHuan/followers", "following_url": "https://api.github.com/users/ChuaCheowHuan/following{/other_user}", "gists_url": "https://api.github.com/users/ChuaCheowHuan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChuaCheowHuan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChuaCheowHuan/subscriptions", "organizations_url": "https://api.github.com/users/ChuaCheowHuan/orgs", "repos_url": "https://api.github.com/users/ChuaCheowHuan/repos", "events_url": "https://api.github.com/users/ChuaCheowHuan/events{/privacy}", "received_events_url": "https://api.github.com/users/ChuaCheowHuan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-03T09:53:09Z", "updated_at": "2020-08-05T15:12:29Z", "closed_at": "2020-08-04T14:17:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is your question?\r\nHi, I would like to update the hyperparameters in the policy graphs for a subset of trainable policies after an arbituary number of training iterations. \r\n\r\nI have tested the methods below with `RockPaperScissorsEnv`. `Method 1` works but is too expensive for my use case. As of `Method 2`, the `pretty_print` seems to suggest that the `lr` of `agt_0` is changed & it's `policy_reward_mean` in tensorboard suggest that it's winning but I'm not sure if & how `method 2` will update the policy graph.\r\n\r\nWhat's an appropriate way to update hyperparameters with RLlib (for MARL)? Thank you.\r\n\r\n[gist for method 1](https://gist.github.com/ChuaCheowHuan/13e2cf69e01c4cc3fa2e803a6afdda98)\r\n```\r\n# Method 1\r\n# lr of both policies (agt_0 & agt_1) are initialize as 0 before starting the training loop.\r\n\r\ntrainer = PPOTrainer(config=my_config(), env=RockPaperScissorsEnv)   \r\nfor i in range(100):\r\n    result = trainer.train()\r\n    if i == 10:\r\n        new_config = trainer.get_config()\r\n        new_config = # edit lr of policy 'agt_0' to 0.01\r\n        save_path = trainer.save(local_dir)\r\n        trainer.stop()\r\n        trainer = ppo.PPOTrainer(config=new_config, env=RockPaperScissorsEnv)\r\n        trainer.restore(save_path)\r\n```\r\n\r\n[gist for method 2](https://gist.github.com/ChuaCheowHuan/ef1257789b42e90b33f50a8413cda259)\r\n```    \r\n# Method 2\r\n# lr of both policies (agt_0 & agt_1) are initialize as 0 before starting the training loop.\r\n\r\ntrainer = PPOTrainer(config=my_config(), env=RockPaperScissorsEnv)   \r\nfor i in range(100):\r\n    result = trainer.train()\r\n    if i == 10:\r\n        agt_0_pol = trainer.get_policy('agt_0')\r\n        agt_0_pol.lr_schedule = ConstantSchedule(0.01, framework=None)   \r\n    print(pretty_print(result))      \r\n```    \r\nResult from `Method 2`:\r\n![Screen Shot 2020-08-03 at 3 13 34 PM](https://user-images.githubusercontent.com/17569306/89170062-b45ad200-d5b1-11ea-8ef3-4834caae4966.png)\r\n\r\n*Ray version and other system information (Python version, TensorFlow version, OS):*\r\npython==3.6.9\r\nray[rllib]==0.8.6 \r\ntensorflow==2.2.0 \r\nOS: \"Ubuntu 18.04.3 LTS\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9870", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9870/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9870/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9870/events", "html_url": "https://github.com/ray-project/ray/issues/9870", "id": 671876230, "node_id": "MDU6SXNzdWU2NzE4NzYyMzA=", "number": 9870, "title": "[rllib] DQNTorchModel doesn't work with custom_model_config options", "user": {"login": "pmacalpine", "id": 7802157, "node_id": "MDQ6VXNlcjc4MDIxNTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7802157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmacalpine", "html_url": "https://github.com/pmacalpine", "followers_url": "https://api.github.com/users/pmacalpine/followers", "following_url": "https://api.github.com/users/pmacalpine/following{/other_user}", "gists_url": "https://api.github.com/users/pmacalpine/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmacalpine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmacalpine/subscriptions", "organizations_url": "https://api.github.com/users/pmacalpine/orgs", "repos_url": "https://api.github.com/users/pmacalpine/repos", "events_url": "https://api.github.com/users/pmacalpine/events{/privacy}", "received_events_url": "https://api.github.com/users/pmacalpine/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}, {"id": 1890823772, "node_id": "MDU6TGFiZWwxODkwODIzNzcy", "url": "https://api.github.com/repos/ray-project/ray/labels/rllib", "name": "rllib", "color": "13437c", "default": false, "description": "RLlib-related issues"}], "state": "closed", "locked": false, "assignee": {"login": "sven1977", "id": 5839854, "node_id": "MDQ6VXNlcjU4Mzk4NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5839854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sven1977", "html_url": "https://github.com/sven1977", "followers_url": "https://api.github.com/users/sven1977/followers", "following_url": "https://api.github.com/users/sven1977/following{/other_user}", "gists_url": "https://api.github.com/users/sven1977/gists{/gist_id}", "starred_url": "https://api.github.com/users/sven1977/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sven1977/subscriptions", "organizations_url": "https://api.github.com/users/sven1977/orgs", "repos_url": "https://api.github.com/users/sven1977/repos", "events_url": "https://api.github.com/users/sven1977/events{/privacy}", "received_events_url": "https://api.github.com/users/sven1977/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sven1977", "id": 5839854, "node_id": "MDQ6VXNlcjU4Mzk4NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5839854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sven1977", "html_url": "https://github.com/sven1977", "followers_url": "https://api.github.com/users/sven1977/followers", "following_url": "https://api.github.com/users/sven1977/following{/other_user}", "gists_url": "https://api.github.com/users/sven1977/gists{/gist_id}", "starred_url": "https://api.github.com/users/sven1977/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sven1977/subscriptions", "organizations_url": "https://api.github.com/users/sven1977/orgs", "repos_url": "https://api.github.com/users/sven1977/repos", "events_url": "https://api.github.com/users/sven1977/events{/privacy}", "received_events_url": "https://api.github.com/users/sven1977/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-08-03T07:47:08Z", "updated_at": "2020-08-05T07:14:45Z", "closed_at": "2020-08-03T09:17:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is the problem?\r\n\r\nWhen I use custom_model_config options and DQN with pytorch I get an error like the following where my custom_model_config options aren't recognized or allowed in the  DQNTorchModel constructor. \r\n```\r\nray.exceptions.RayTaskError(TypeError): ray::DQN.train() (pid=22014, ip=172.16.226.199)\r\n  File \"python/ray/_raylet.pyx\", line 439, in ray._raylet.execute_task\r\n  File \"python/ray/_raylet.pyx\", line 474, in ray._raylet.execute_task\r\n  File \"python/ray/_raylet.pyx\", line 478, in ray._raylet.execute_task\r\n  File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\r\n  File \"python/ray/_raylet.pyx\", line 432, in ray._raylet.execute_task.function_executor\r\n  File \"/home/patmac/.local/lib/python3.7/site-packages/ray/rllib/agents/trainer_template.py\", line 88, in __init__\r\n    Trainer.__init__(self, config, env, logger_creator)\r\n  File \"/home/patmac/.local/lib/python3.7/site-packages/ray/rllib/agents/trainer.py\", line 479, in __init__\r\n    super().__init__(config, logger_creator)\r\n  File \"/home/patmac/.local/lib/python3.7/site-packages/ray/tune/trainable.py\", line 241, in __init__\r\n    self.setup(copy.deepcopy(self.config))\r\n  File \"/home/patmac/.local/lib/python3.7/site-packages/ray/rllib/agents/trainer.py\", line 643, in setup\r\n    self._init(self.config, self.env_creator)\r\n  File \"/home/patmac/.local/lib/python3.7/site-packages/ray/rllib/agents/trainer_template.py\", line 102, in _init\r\n    env_creator, self._policy, config, self.config[\"num_workers\"])\r\n  File \"/home/patmac/.local/lib/python3.7/site-packages/ray/rllib/agents/trainer.py\", line 713, in _make_workers\r\n    logdir=self.logdir)\r\n  File \"/home/patmac/.local/lib/python3.7/site-packages/ray/rllib/evaluation/worker_set.py\", line 67, in __init__\r\n    RolloutWorker, env_creator, policy, 0, self._local_config)\r\n  File \"/home/patmac/.local/lib/python3.7/site-packages/ray/rllib/evaluation/worker_set.py\", line 296, in _make_worker\r\n    extra_python_environs=extra_python_environs)\r\n  File \"/home/patmac/.local/lib/python3.7/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 406, in __init__\r\n    policy_dict, policy_config)\r\n  File \"/home/patmac/.local/lib/python3.7/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 988, in _build_policy_map\r\n    policy_map[name] = cls(obs_space, act_space, merged_conf)\r\n  File \"/home/patmac/.local/lib/python3.7/site-packages/ray/rllib/policy/torch_policy_template.py\", line 121, in __init__\r\n    self, obs_space, action_space, config)\r\n  File \"/home/patmac/.local/lib/python3.7/site-packages/ray/rllib/agents/dqn/dqn_torch_policy.py\", line 154, in build_q_model_and_distribution\r\n    add_layer_norm=add_layer_norm)\r\n  File \"/home/patmac/.local/lib/python3.7/site-packages/ray/rllib/models/catalog.py\", line 366, in get_model_v2\r\n    model_config, name, **model_kwargs)\r\n  File \"/home/patmac/.local/lib/python3.7/site-packages/ray/rllib/agents/dqn/dqn_torch_model.py\", line 57, in __init__\r\n    num_outputs, model_config, name)\r\nTypeError: __init__() missing 1 required positional argument: 'hiddens'\r\n```\r\n\r\nThis breaks all algorithms that use the the DQNTorchModel such as DQN and SAC.  Things work OK with A2C and PPO, and also if I use tensorflow.  I would really like to use  DQN and SAC with torch models having custom_model_config options, and so this issue is blocking me from doing that.\r\n\r\n*Ray version and other system information (Python version, TensorFlow version, OS):*\r\nray: 0.9.0.dev0 (latest wheels installed on 8/2/20)\r\npython: 3.7.6\r\ntensorflow: 2.1\r\ntorch: 1.4.0\r\nOS: Ubuntu 16.04.6 LTS\r\n\r\n### Reproduction (REQUIRED)\r\nPlease provide a script that can be run to reproduce the issue. The script should have **no external library dependencies** (i.e., use fake or mock data / environments):\r\n\r\nThe following custom_batch_norm_model.py script recreates this problem by running the following commands:\r\nWorks with torch and PPO\r\n```\r\npython custom_batch_norm_model.py --torch --run PPO\r\n```\r\nFails with torch and DQN\r\n```\r\npython custom_batch_norm_model.py --torch --run DQN\r\n```\r\nWorks with tf for both PPO and DQN\r\n```\r\npython custom_batch_norm_model.py --run PPO\r\npython custom_batch_norm_model.py --run DQN\r\n```\r\n\r\n```python\r\n\"\"\"\r\ncustom_batch_norm_model.py \r\nExample of using a custom batch norm model.\r\n\"\"\"\r\n\r\nimport argparse\r\n\r\nimport ray\r\nfrom ray import tune\r\nfrom ray.tune.registry import register_env\r\nfrom ray.rllib.examples.env.repeat_after_me_env import RepeatAfterMeEnv\r\nfrom ray.rllib.examples.env.repeat_initial_obs_env import RepeatInitialObsEnv\r\nfrom ray.rllib.examples.models.rnn_model import RNNModel, TorchRNNModel\r\nfrom ray.rllib.models import ModelCatalog\r\nfrom ray.rllib.utils.test_utils import check_learning_achieved\r\n\r\nparser = argparse.ArgumentParser()\r\nparser.add_argument(\"--run\", type=str, default=\"PPO\")\r\nparser.add_argument(\"--env\", type=str, default=\"RepeatAfterMeEnv\")\r\nparser.add_argument(\"--num-cpus\", type=int, default=0)\r\nparser.add_argument(\"--as-test\", action=\"store_true\")\r\nparser.add_argument(\"--torch\", action=\"store_true\")\r\nparser.add_argument(\"--stop-reward\", type=float, default=90)\r\nparser.add_argument(\"--stop-iters\", type=int, default=100)\r\nparser.add_argument(\"--stop-timesteps\", type=int, default=100000)\r\n\r\nimport numpy as np\r\n\r\nfrom ray.rllib.models.modelv2 import ModelV2\r\nfrom ray.rllib.models.tf.misc import normc_initializer\r\nfrom ray.rllib.models.tf.tf_modelv2 import TFModelV2\r\nfrom ray.rllib.models.torch.misc import SlimFC, normc_initializer as \\\r\n    torch_normc_initializer\r\nfrom ray.rllib.models.torch.torch_modelv2 import TorchModelV2\r\nfrom ray.rllib.utils.annotations import override\r\nfrom ray.rllib.utils.framework import try_import_tf, try_import_torch\r\n\r\ntf1, tf, tfv = try_import_tf()\r\ntorch, nn = try_import_torch()\r\n\r\n\r\nclass BatchNormModel(TFModelV2):\r\n    \"\"\"Example of a TFModelV2 that is built w/o using tf.keras.\r\n\r\n    NOTE: This example does not work when using a keras-based TFModelV2 due\r\n    to a bug in keras related to missing values for input placeholders, even\r\n    though these input values have been provided in a forward pass through the\r\n    actual keras Model.\r\n\r\n    All Model logic (layers) is defined in the `forward` method (incl.\r\n    the batch_normalization layers). Also, all variables are registered\r\n    (only once) at the end of `forward`, so an optimizer knows which tensors\r\n    to train on. A standard `value_function` override is used.\r\n    \"\"\"\r\n    capture_index = 0\r\n\r\n    def __init__(self, obs_space, action_space, num_outputs, model_config,\r\n                 name):\r\n        super().__init__(obs_space, action_space, num_outputs, model_config,\r\n                         name)\r\n        # Have we registered our vars yet (see `forward`)?\r\n        self._registered = False\r\n\r\n        self.hiddens = model_config[\"custom_model_config\"][\"hiddens\"]\r\n\r\n    @override(ModelV2)\r\n    def forward(self, input_dict, state, seq_lens):\r\n        last_layer = input_dict[\"obs\"]\r\n        with tf1.variable_scope(\"model\", reuse=tf1.AUTO_REUSE):\r\n            for i, size in enumerate([self.hiddens, self.hiddens]):\r\n                last_layer = tf1.layers.dense(\r\n                    last_layer,\r\n                    size,\r\n                    kernel_initializer=normc_initializer(1.0),\r\n                    activation=tf.nn.tanh,\r\n                    name=\"fc{}\".format(i))\r\n                # Add a batch norm layer\r\n                last_layer = tf1.layers.batch_normalization(\r\n                    last_layer,\r\n                    training=input_dict[\"is_training\"],\r\n                    name=\"bn_{}\".format(i))\r\n\r\n            output = tf1.layers.dense(\r\n                last_layer,\r\n                self.num_outputs,\r\n                kernel_initializer=normc_initializer(0.01),\r\n                activation=None,\r\n                name=\"out\")\r\n            self._value_out = tf1.layers.dense(\r\n                last_layer,\r\n                1,\r\n                kernel_initializer=normc_initializer(1.0),\r\n                activation=None,\r\n                name=\"vf\")\r\n        if not self._registered:\r\n            self.register_variables(\r\n                tf1.get_collection(\r\n                    tf1.GraphKeys.TRAINABLE_VARIABLES, scope=\".+/model/.+\"))\r\n            self._registered = True\r\n\r\n        return output, []\r\n\r\n    @override(ModelV2)\r\n    def value_function(self):\r\n        return tf.reshape(self._value_out, [-1])\r\n\r\n\r\nclass TorchBatchNormModel(TorchModelV2, nn.Module):\r\n    \"\"\"Example of a TorchModelV2 using batch normalization.\"\"\"\r\n    capture_index = 0\r\n\r\n    def __init__(self, obs_space, action_space, num_outputs, model_config,\r\n                 name, hiddens, **kwargs):\r\n        TorchModelV2.__init__(self, obs_space, action_space, num_outputs,\r\n                              model_config, name)\r\n        nn.Module.__init__(self)\r\n        layers = []\r\n        prev_layer_size = int(np.product(obs_space.shape))\r\n        self._logits = None\r\n\r\n        # Create layers 0 to second-last.\r\n        for size in [hiddens, hiddens]:\r\n            layers.append(\r\n                SlimFC(\r\n                    in_size=prev_layer_size,\r\n                    out_size=size,\r\n                    initializer=torch_normc_initializer(1.0),\r\n                    activation_fn=nn.ReLU))\r\n            prev_layer_size = size\r\n            # Add a batch norm layer.\r\n            layers.append(nn.BatchNorm1d(prev_layer_size))\r\n\r\n        self._logits = SlimFC(\r\n            in_size=prev_layer_size,\r\n            out_size=self.num_outputs,\r\n            initializer=torch_normc_initializer(0.01),\r\n            activation_fn=None)\r\n\r\n        self._value_branch = SlimFC(\r\n            in_size=prev_layer_size,\r\n            out_size=1,\r\n            initializer=torch_normc_initializer(1.0),\r\n            activation_fn=None)\r\n\r\n        self._hidden_layers = nn.Sequential(*layers)\r\n        self._hidden_out = None\r\n\r\n    @override(ModelV2)\r\n    def forward(self, input_dict, state, seq_lens):\r\n        # Set the correct train-mode for our hidden module (only important\r\n        # b/c we have some batch-norm layers).\r\n        self._hidden_layers.train(mode=input_dict[\"is_training\"])\r\n        self._hidden_out = self._hidden_layers(input_dict[\"obs\"])\r\n        logits = self._logits(self._hidden_out)\r\n        return logits, []\r\n\r\n    @override(ModelV2)\r\n    def value_function(self):\r\n        assert self._hidden_out is not None, \"must call forward first!\"\r\n        return torch.reshape(self._value_branch(self._hidden_out), [-1])\r\n\r\nif __name__ == \"__main__\":\r\n    args = parser.parse_args()\r\n\r\n    ray.init(num_cpus=args.num_cpus or None)\r\n\r\n    ModelCatalog.register_custom_model(\r\n        \"batch_norm_model\", TorchBatchNormModel if args.torch else BatchNormModel)\r\n    register_env(\"RepeatAfterMeEnv\", lambda c: RepeatAfterMeEnv(c))\r\n    register_env(\"RepeatInitialObsEnv\", lambda _: RepeatInitialObsEnv())\r\n\r\n    config = {\r\n        \"env\": args.env,\r\n        \"env_config\": {\r\n            \"repeat_delay\": 2,\r\n        },\r\n        \"model\": {\r\n            \"custom_model\": \"batch_norm_model\",\r\n            \"custom_model_config\": {\r\n                \"hiddens\": 256\r\n            },\r\n            \"max_seq_len\": 20,\r\n        },\r\n        \"framework\": \"torch\" if args.torch else \"tf\",\r\n    }\r\n\r\n    stop = {\r\n        \"training_iteration\": args.stop_iters,\r\n        \"timesteps_total\": args.stop_timesteps,\r\n        \"episode_reward_mean\": args.stop_reward,\r\n    }\r\n\r\n    results = tune.run(args.run, config=config, stop=stop)\r\n\r\n    if args.as_test:\r\n        check_learning_achieved(results, args.stop_reward)\r\n    ray.shutdown()\r\n```\r\n\r\nIf we cannot run your script, we cannot fix your issue.\r\n\r\n- [x] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [x] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9869", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9869/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9869/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9869/events", "html_url": "https://github.com/ray-project/ray/issues/9869", "id": 671868074, "node_id": "MDU6SXNzdWU2NzE4NjgwNzQ=", "number": 9869, "title": "use fastapi as backend?", "user": {"login": "markqiu", "id": 1124637, "node_id": "MDQ6VXNlcjExMjQ2Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1124637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markqiu", "html_url": "https://github.com/markqiu", "followers_url": "https://api.github.com/users/markqiu/followers", "following_url": "https://api.github.com/users/markqiu/following{/other_user}", "gists_url": "https://api.github.com/users/markqiu/gists{/gist_id}", "starred_url": "https://api.github.com/users/markqiu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markqiu/subscriptions", "organizations_url": "https://api.github.com/users/markqiu/orgs", "repos_url": "https://api.github.com/users/markqiu/repos", "events_url": "https://api.github.com/users/markqiu/events{/privacy}", "received_events_url": "https://api.github.com/users/markqiu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1890801554, "node_id": "MDU6TGFiZWwxODkwODAxNTU0", "url": "https://api.github.com/repos/ray-project/ray/labels/P3", "name": "P3", "color": "a8fc9f", "default": false, "description": "Issue moderate in impact or severity"}, {"id": 1374085984, "node_id": "MDU6TGFiZWwxMzc0MDg1OTg0", "url": "https://api.github.com/repos/ray-project/ray/labels/enhancement", "name": "enhancement", "color": "a0b1ff", "default": true, "description": ""}, {"id": 2110730223, "node_id": "MDU6TGFiZWwyMTEwNzMwMjIz", "url": "https://api.github.com/repos/ray-project/ray/labels/serve", "name": "serve", "color": "a1f4d2", "default": false, "description": "Ray Serve Related Issue"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-03T07:34:10Z", "updated_at": "2020-08-08T03:03:12Z", "closed_at": "2020-08-08T03:02:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### Describe your feature request\r\nMay we use fastapi as the serve backend?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9867", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9867/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9867/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9867/events", "html_url": "https://github.com/ray-project/ray/issues/9867", "id": 671724971, "node_id": "MDU6SXNzdWU2NzE3MjQ5NzE=", "number": 9867, "title": "[rllib] Automatic unflattening trajectories with json input from offline data", "user": {"login": "juliusfrost", "id": 33183774, "node_id": "MDQ6VXNlcjMzMTgzNzc0", "avatar_url": "https://avatars2.githubusercontent.com/u/33183774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juliusfrost", "html_url": "https://github.com/juliusfrost", "followers_url": "https://api.github.com/users/juliusfrost/followers", "following_url": "https://api.github.com/users/juliusfrost/following{/other_user}", "gists_url": "https://api.github.com/users/juliusfrost/gists{/gist_id}", "starred_url": "https://api.github.com/users/juliusfrost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juliusfrost/subscriptions", "organizations_url": "https://api.github.com/users/juliusfrost/orgs", "repos_url": "https://api.github.com/users/juliusfrost/repos", "events_url": "https://api.github.com/users/juliusfrost/events{/privacy}", "received_events_url": "https://api.github.com/users/juliusfrost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1374085984, "node_id": "MDU6TGFiZWwxMzc0MDg1OTg0", "url": "https://api.github.com/repos/ray-project/ray/labels/enhancement", "name": "enhancement", "color": "a0b1ff", "default": true, "description": ""}, {"id": 2090776337, "node_id": "MDU6TGFiZWwyMDkwNzc2MzM3", "url": "https://api.github.com/repos/ray-project/ray/labels/triage", "name": "triage", "color": "b0e7f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-03T00:45:59Z", "updated_at": "2020-08-04T00:18:55Z", "closed_at": "2020-08-04T00:18:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Describe your feature request\r\n\r\nWhen implementing environments with complex observation spaces with offline storage, the only way to use input and output API is to flatten the data using the preprocessor and then load the flattened data with json input. This requires manual reshaping of the output to prior known dimensions in order to use the complex observation shape with custom models. Ideally, one would not have to do this and reversible preprocessing operations should be stored in the json files so that the input API can decode them into the correct shape. This makes it so you don't have to reshape the data in a custom model, and avoids problems where you need to find the correct order of reshaping (eg. order of concatenation). ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9866", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9866/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9866/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9866/events", "html_url": "https://github.com/ray-project/ray/issues/9866", "id": 671724573, "node_id": "MDU6SXNzdWU2NzE3MjQ1NzM=", "number": 9866, "title": "EC2 Ray Cluster only using the head-node", "user": {"login": "snmhaines", "id": 47899066, "node_id": "MDQ6VXNlcjQ3ODk5MDY2", "avatar_url": "https://avatars1.githubusercontent.com/u/47899066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snmhaines", "html_url": "https://github.com/snmhaines", "followers_url": "https://api.github.com/users/snmhaines/followers", "following_url": "https://api.github.com/users/snmhaines/following{/other_user}", "gists_url": "https://api.github.com/users/snmhaines/gists{/gist_id}", "starred_url": "https://api.github.com/users/snmhaines/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snmhaines/subscriptions", "organizations_url": "https://api.github.com/users/snmhaines/orgs", "repos_url": "https://api.github.com/users/snmhaines/repos", "events_url": "https://api.github.com/users/snmhaines/events{/privacy}", "received_events_url": "https://api.github.com/users/snmhaines/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}, {"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-08-03T00:44:07Z", "updated_at": "2020-08-12T19:46:59Z", "closed_at": "2020-08-12T19:46:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have previously run Ray clusters which successfully employed a number of worker nodes in parallel.  Recently I updated to Ubuntu 18.04 (from 16.04) and the latest version of Ray, but now the same sort of configuration only seems to be scheduling tasks on the head node.  I tried both c4.8xlarge (which worked before), and c5.24xlarge instances, with the same results.  I am attaching the following files:-\r\n\r\nray_config.yaml  :  This has the recent non-hyperthreading commands commented out, but the same problem occurs either way.\r\nTest.py  :  A simple test program containing the same approach that I am using for my simulation work.\r\nray-timeline*.json ; showing the result of running Test2\r\n\r\nYou can see that, despite my EC2 Console showing  showing two instances up and running, without any faults, Ray has only employed the 96 head-node CPUs - requiring serial execution on most in order to execute all 190 tasks.\r\n\r\n[Files.zip](https://github.com/ray-project/ray/files/5013275/Files.zip)\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9863", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9863/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9863/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9863/events", "html_url": "https://github.com/ray-project/ray/issues/9863", "id": 671610604, "node_id": "MDU6SXNzdWU2NzE2MTA2MDQ=", "number": 9863, "title": "How to init Ray with a specified GPU id to run all trials of Tune?", "user": {"login": "guoxuxu", "id": 29363464, "node_id": "MDQ6VXNlcjI5MzYzNDY0", "avatar_url": "https://avatars2.githubusercontent.com/u/29363464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guoxuxu", "html_url": "https://github.com/guoxuxu", "followers_url": "https://api.github.com/users/guoxuxu/followers", "following_url": "https://api.github.com/users/guoxuxu/following{/other_user}", "gists_url": "https://api.github.com/users/guoxuxu/gists{/gist_id}", "starred_url": "https://api.github.com/users/guoxuxu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guoxuxu/subscriptions", "organizations_url": "https://api.github.com/users/guoxuxu/orgs", "repos_url": "https://api.github.com/users/guoxuxu/repos", "events_url": "https://api.github.com/users/guoxuxu/events{/privacy}", "received_events_url": "https://api.github.com/users/guoxuxu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-02T12:46:26Z", "updated_at": "2020-08-03T02:01:24Z", "closed_at": "2020-08-03T02:01:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is your question?\r\n\r\nSay, I have 4 GPUs with ids=[0, 1, 2, 3] and I only want to run all trials for Tune on id=2 and id=3 only. That means I can only maximize the use of the third and fourth GPU without touching the first two GPUs. How can I achieve this? \r\n\r\n```ray.init(num_cpus=num_cpus, num_gpus=num_gpus, temp_dir=ray_log)```\r\n\r\nThe attribute ```num_gpus``` is the number of GPUs ray can use. When setting ```num_gpus=1```, all the trials run on the first device (GPU id=0).  When increasing ```num_gpus```, all the trials will ordinally use GPUs from id=0 to id=3... I want to know how to specify the exact GPU ids, e.g., all trials run on id=2 and id=3.\r\n\r\nI've tried specifying GPU id in the training functions, but raised ```RuntimeError: CUDA error: invalid device ordinal```. \r\n\r\nI'm still new to this great project. Appreciate your warm help!\r\n\r\n*Ray version and other system information (Python version, TensorFlow version, OS):*\r\nOS: Linux\r\nPython: 3.7.4\r\nRay: 0.8.6", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9847", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9847/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9847/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9847/events", "html_url": "https://github.com/ray-project/ray/issues/9847", "id": 670078551, "node_id": "MDU6SXNzdWU2NzAwNzg1NTE=", "number": 9847, "title": "Dashboard should use the correct actor states.", "user": {"login": "rkooo567", "id": 18510752, "node_id": "MDQ6VXNlcjE4NTEwNzUy", "avatar_url": "https://avatars0.githubusercontent.com/u/18510752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rkooo567", "html_url": "https://github.com/rkooo567", "followers_url": "https://api.github.com/users/rkooo567/followers", "following_url": "https://api.github.com/users/rkooo567/following{/other_user}", "gists_url": "https://api.github.com/users/rkooo567/gists{/gist_id}", "starred_url": "https://api.github.com/users/rkooo567/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rkooo567/subscriptions", "organizations_url": "https://api.github.com/users/rkooo567/orgs", "repos_url": "https://api.github.com/users/rkooo567/repos", "events_url": "https://api.github.com/users/rkooo567/events{/privacy}", "received_events_url": "https://api.github.com/users/rkooo567/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1805253707, "node_id": "MDU6TGFiZWwxODA1MjUzNzA3", "url": "https://api.github.com/repos/ray-project/ray/labels/P0", "name": "P0", "color": "cc0507", "default": false, "description": "Issue that must be fixed in short order"}, {"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}, {"id": 1504751318, "node_id": "MDU6TGFiZWwxNTA0NzUxMzE4", "url": "https://api.github.com/repos/ray-project/ray/labels/release-blocker", "name": "release-blocker", "color": "8c0507", "default": false, "description": "P0 Issue that blocks the release"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-31T18:10:23Z", "updated_at": "2020-08-05T17:35:19Z", "closed_at": "2020-08-05T17:35:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is the problem?\r\n\r\nDashboard doc & code should use newly introduced GCS actor states. \r\n\r\nfrom gcs.proto\r\n```\r\n  enum ActorState {\r\n    // Actor info is registered in GCS. But its dependencies are not ready.\r\n    DEPENDENCIES_UNREADY = 0;\r\n    // Actor local dependencies are ready. This actor is being created.\r\n    PENDING_CREATION = 1;\r\n    // Actor is alive.\r\n    ALIVE = 2;\r\n    // Actor is dead, now being restarted.\r\n    // After reconstruction finishes, the state will become alive again.\r\n    RESTARTING = 3;\r\n    // Actor is already dead and won't be restarted.\r\n    DEAD = 4;\r\n  }\r\n```\r\n\r\n### Reproduction (REQUIRED)\r\nPlease provide a script that can be run to reproduce the issue. The script should have **no external library dependencies** (i.e., use fake or mock data / environments):\r\n\r\nIf we cannot run your script, we cannot fix your issue.\r\n\r\n- [ ] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [ ] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9840", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9840/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9840/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9840/events", "html_url": "https://github.com/ray-project/ray/issues/9840", "id": 669635569, "node_id": "MDU6SXNzdWU2Njk2MzU1Njk=", "number": 9840, "title": "How to save only the best model parameters?", "user": {"login": "guoxuxu", "id": 29363464, "node_id": "MDQ6VXNlcjI5MzYzNDY0", "avatar_url": "https://avatars2.githubusercontent.com/u/29363464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guoxuxu", "html_url": "https://github.com/guoxuxu", "followers_url": "https://api.github.com/users/guoxuxu/followers", "following_url": "https://api.github.com/users/guoxuxu/following{/other_user}", "gists_url": "https://api.github.com/users/guoxuxu/gists{/gist_id}", "starred_url": "https://api.github.com/users/guoxuxu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guoxuxu/subscriptions", "organizations_url": "https://api.github.com/users/guoxuxu/orgs", "repos_url": "https://api.github.com/users/guoxuxu/repos", "events_url": "https://api.github.com/users/guoxuxu/events{/privacy}", "received_events_url": "https://api.github.com/users/guoxuxu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-31T09:52:19Z", "updated_at": "2020-08-02T05:30:05Z", "closed_at": "2020-08-02T05:30:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is your question?\r\n\r\nAs I am looking into how to save only the best model parameters. I'm curious about ```ray/tune/time_since_restore```,  ```ray/tune/time_this_iter_s```, ```ray/tune/iterations_since_restore``` and ```ray/tune/timesteps_since_restore```.  Could you explain according to the parallel coordinates view shown below? \r\n\r\n![image](https://user-images.githubusercontent.com/29363464/89022516-c0962380-d354-11ea-9c37-2e62af98c1ae.png)\r\n\r\nI'm using a trainable class with some functions as follows. \r\n\r\n```\r\n    def _save(self, checkpoint_dir):\r\n        checkpoint_path = os.path.join(checkpoint_dir, \"model.pth\")\r\n        torch.save(self.model.state_dict(), checkpoint_path)\r\n        return checkpoint_path\r\n\r\n    def _restore(self, checkpoint_dir):\r\n        checkpoint_path = os.path.join(checkpoint_dir, \"model.pth\")\r\n        self.model.load_state_dict(torch.load(checkpoint_path))\r\n\r\n    def reset_config(self, new_config):\r\n        for param_group in self.optimizer.param_groups:\r\n            if \"lr\" in new_config:\r\n                param_group[\"lr\"] = new_config[\"lr\"]\r\n        self.model = bert_clf.cuda()\r\n        self.config = new_config\r\n        return True\r\n```\r\n\r\nAbout the initialization code, I'm only using the line ```ray.init()``` now. The documentation about ```validate_save_restore``` is not clear to me and it\u2018s also unsuccessful to add the two lines directly.\r\n```\r\n        # ray.shutdown()  # Restart Ray defensively in case the ray connection is lost.\r\n        ray.init(num_cpus=os.cpu_count(), num_gpus=torch.cuda.device_count(), temp_dir=temp_dir)\r\n        # validate_save_restore(Train, config=space)\r\n        # validate_save_restore(Train, config=space, use_object_store=True)\r\n        # print(\"Success!\")\r\n```\r\n*Ray version and other system information (Python version, TensorFlow version, OS):*\r\nOS: Linux\r\nPython: 3.7.4\r\nRay: 0.8.5\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9838", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9838/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9838/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9838/events", "html_url": "https://github.com/ray-project/ray/issues/9838", "id": 669482551, "node_id": "MDU6SXNzdWU2Njk0ODI1NTE=", "number": 9838, "title": "How is the best configuration selected from all trials?", "user": {"login": "guoxuxu", "id": 29363464, "node_id": "MDQ6VXNlcjI5MzYzNDY0", "avatar_url": "https://avatars2.githubusercontent.com/u/29363464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guoxuxu", "html_url": "https://github.com/guoxuxu", "followers_url": "https://api.github.com/users/guoxuxu/followers", "following_url": "https://api.github.com/users/guoxuxu/following{/other_user}", "gists_url": "https://api.github.com/users/guoxuxu/gists{/gist_id}", "starred_url": "https://api.github.com/users/guoxuxu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guoxuxu/subscriptions", "organizations_url": "https://api.github.com/users/guoxuxu/orgs", "repos_url": "https://api.github.com/users/guoxuxu/repos", "events_url": "https://api.github.com/users/guoxuxu/events{/privacy}", "received_events_url": "https://api.github.com/users/guoxuxu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-31T06:56:19Z", "updated_at": "2020-07-31T07:51:32Z", "closed_at": "2020-07-31T07:51:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is your question?\r\n\r\nFrom the code below, I understand that ```train_mnist``` is called every trial while ```train``` is called every training iteration. It can be seen that ```tune.report``` submit mean_accuracy every training iteration. But I don't know whether every trial will select its best training iteration? \r\n\r\nFor example, every trial runs 10 iterations and```tune.report``` reports 10 different mean_accuracy while only the 5th mean_accuracy is the best. Because ```analysis.get_best_config``` can only get the best mean_accuracy among all the trials, it is not clear whether the best mean_accuracy is the best training iteration of that best trial? \r\n\r\nOr just the mean_accuracy of last training iteration (the tenth iteration in this case) of that trial?\r\n```\r\ndef train_mnist(config):\r\n    use_cuda = config.get(\"use_gpu\") and torch.cuda.is_available()\r\n    device = torch.device(\"cuda\" if use_cuda else \"cpu\")\r\n    train_loader, test_loader = get_data_loaders()\r\n    model = ConvNet().to(device)\r\n    optimizer = optim.SGD(\r\n        model.parameters(), lr=config[\"lr\"], momentum=config[\"momentum\"])\r\n\r\n    while True:\r\n        train(model, optimizer, train_loader, device)\r\n        acc = test(model, test_loader, device)\r\n        tune.report(mean_accuracy=acc)\r\n```\r\n\r\n*Ray version and other system information (Python version, TensorFlow version, OS):*\r\nPython 3.7.4\r\nRay: 0.8.6\r\nOS: linux", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9826", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9826/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9826/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9826/events", "html_url": "https://github.com/ray-project/ray/issues/9826", "id": 669154863, "node_id": "MDU6SXNzdWU2NjkxNTQ4NjM=", "number": 9826, "title": "[tune] experiment_analysis.py  nan", "user": {"login": "javadan", "id": 3356298, "node_id": "MDQ6VXNlcjMzNTYyOTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3356298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/javadan", "html_url": "https://github.com/javadan", "followers_url": "https://api.github.com/users/javadan/followers", "following_url": "https://api.github.com/users/javadan/following{/other_user}", "gists_url": "https://api.github.com/users/javadan/gists{/gist_id}", "starred_url": "https://api.github.com/users/javadan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/javadan/subscriptions", "organizations_url": "https://api.github.com/users/javadan/orgs", "repos_url": "https://api.github.com/users/javadan/repos", "events_url": "https://api.github.com/users/javadan/events{/privacy}", "received_events_url": "https://api.github.com/users/javadan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}, {"id": 2090776337, "node_id": "MDU6TGFiZWwyMDkwNzc2MzM3", "url": "https://api.github.com/repos/ray-project/ray/labels/triage", "name": "triage", "color": "b0e7f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-30T20:13:30Z", "updated_at": "2020-07-30T22:58:45Z", "closed_at": "2020-07-30T22:58:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a case where I can't get an Analysis object on some experiment directories.\r\n\r\nIt is looking for episode_reward_mean, but it is nan sometimes because it's an average.\r\n\r\nWhen debugging, I get to the below, when looking for the best config or best log dir.\r\n   `idx = df[metric].idxmax()` makes idx 'nan'.\r\n\r\n```\r\n\r\n    def _retrieve_rows(self, metric=None, mode=None):\r\n        assert mode is None or mode in [\"max\", \"min\"]\r\n        rows = {}\r\n        for path, df in self.trial_dataframes.items():\r\n            if mode == \"max\":\r\n                idx = df[metric].idxmax()\r\n            elif mode == \"min\":\r\n                idx = df[metric].idxmin()\r\n            else:\r\n                idx = -1\r\n            rows[path] = df.iloc[idx].to_dict()\r\n\r\n        return rows\r\n\r\n\r\n\r\n    def get_best_config(self, metric, mode=\"max\"):\r\n        \"\"\"Retrieve the best config corresponding to the trial.\r\n\r\n        Args:\r\n            metric (str): Key for trial info to order on.\r\n            mode (str): One of [min, max].\r\n        \"\"\"\r\n        rows = self._retrieve_rows(metric=metric, mode=mode)\r\n        if not rows:\r\n            # only nans encountered when retrieving rows\r\n            logger.warning(\"Not able to retrieve the best config for {} \"\r\n                           \"according to the specified metric \"\r\n                           \"(only nans encountered).\".format(\r\n                               self._experiment_dir))\r\n            return None\r\n        all_configs = self.get_all_configs()\r\n        compare_op = max if mode == \"max\" else min\r\n        best_path = compare_op(rows, key=lambda k: rows[k][metric])\r\n        return all_configs[best_path]\r\n\r\n```\r\n\r\nCould _retrieve_rows return a default value like None, rather than throwing an exception on the `df.iloc[idx]`  ?\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9825", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9825/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9825/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9825/events", "html_url": "https://github.com/ray-project/ray/issues/9825", "id": 669099833, "node_id": "MDU6SXNzdWU2NjkwOTk4MzM=", "number": 9825, "title": "GCS Actor Management does not work in Local Mode", "user": {"login": "ijrsvt", "id": 21353794, "node_id": "MDQ6VXNlcjIxMzUzNzk0", "avatar_url": "https://avatars2.githubusercontent.com/u/21353794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijrsvt", "html_url": "https://github.com/ijrsvt", "followers_url": "https://api.github.com/users/ijrsvt/followers", "following_url": "https://api.github.com/users/ijrsvt/following{/other_user}", "gists_url": "https://api.github.com/users/ijrsvt/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijrsvt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijrsvt/subscriptions", "organizations_url": "https://api.github.com/users/ijrsvt/orgs", "repos_url": "https://api.github.com/users/ijrsvt/repos", "events_url": "https://api.github.com/users/ijrsvt/events{/privacy}", "received_events_url": "https://api.github.com/users/ijrsvt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1805253707, "node_id": "MDU6TGFiZWwxODA1MjUzNzA3", "url": "https://api.github.com/repos/ray-project/ray/labels/P0", "name": "P0", "color": "cc0507", "default": false, "description": "Issue that must be fixed in short order"}, {"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rkooo567", "id": 18510752, "node_id": "MDQ6VXNlcjE4NTEwNzUy", "avatar_url": "https://avatars0.githubusercontent.com/u/18510752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rkooo567", "html_url": "https://github.com/rkooo567", "followers_url": "https://api.github.com/users/rkooo567/followers", "following_url": "https://api.github.com/users/rkooo567/following{/other_user}", "gists_url": "https://api.github.com/users/rkooo567/gists{/gist_id}", "starred_url": "https://api.github.com/users/rkooo567/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rkooo567/subscriptions", "organizations_url": "https://api.github.com/users/rkooo567/orgs", "repos_url": "https://api.github.com/users/rkooo567/repos", "events_url": "https://api.github.com/users/rkooo567/events{/privacy}", "received_events_url": "https://api.github.com/users/rkooo567/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rkooo567", "id": 18510752, "node_id": "MDQ6VXNlcjE4NTEwNzUy", "avatar_url": "https://avatars0.githubusercontent.com/u/18510752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rkooo567", "html_url": "https://github.com/rkooo567", "followers_url": "https://api.github.com/users/rkooo567/followers", "following_url": "https://api.github.com/users/rkooo567/following{/other_user}", "gists_url": "https://api.github.com/users/rkooo567/gists{/gist_id}", "starred_url": "https://api.github.com/users/rkooo567/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rkooo567/subscriptions", "organizations_url": "https://api.github.com/users/rkooo567/orgs", "repos_url": "https://api.github.com/users/rkooo567/repos", "events_url": "https://api.github.com/users/rkooo567/events{/privacy}", "received_events_url": "https://api.github.com/users/rkooo567/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-07-30T19:10:03Z", "updated_at": "2020-08-06T00:21:08Z", "closed_at": "2020-08-06T00:21:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is the problem?\r\nI cannot create a detached actor (and retrieve it) using GCS Actor Management.\r\n\r\n*Ray version and other system information (Python version, TensorFlow version, OS):*\r\n\r\n### Reproduction (REQUIRED)\r\n```\r\nimport ray\r\nray.init(local_mode=True)\r\n\r\n@ray.remote\r\nclass Y:\r\n   pass\r\ny = Y.options(name=\"test\").remote()\r\nray.get_actor(\"test\")  \r\n```\r\n\r\nThis results in the following error:\r\n```\r\nFailed to look up actor with name 'test'. It is either you look up the named actor you didn't create or the namedactor hasn't been created because named actor creation is asynchronous.\r\n```\r\n\r\n\r\nPlease provide a script that can be run to reproduce the issue. The script should have **no external library dependencies** (i.e., use fake or mock data / environments):\r\n\r\nIf we cannot run your script, we cannot fix your issue.\r\n\r\n- [ ] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [ ] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9821", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9821/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9821/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9821/events", "html_url": "https://github.com/ray-project/ray/issues/9821", "id": 668957567, "node_id": "MDU6SXNzdWU2Njg5NTc1Njc=", "number": 9821, "title": "Hyperthreading not disabled in Ray 0.8.6 ", "user": {"login": "snmhaines", "id": 47899066, "node_id": "MDQ6VXNlcjQ3ODk5MDY2", "avatar_url": "https://avatars1.githubusercontent.com/u/47899066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snmhaines", "html_url": "https://github.com/snmhaines", "followers_url": "https://api.github.com/users/snmhaines/followers", "following_url": "https://api.github.com/users/snmhaines/following{/other_user}", "gists_url": "https://api.github.com/users/snmhaines/gists{/gist_id}", "starred_url": "https://api.github.com/users/snmhaines/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snmhaines/subscriptions", "organizations_url": "https://api.github.com/users/snmhaines/orgs", "repos_url": "https://api.github.com/users/snmhaines/repos", "events_url": "https://api.github.com/users/snmhaines/events{/privacy}", "received_events_url": "https://api.github.com/users/snmhaines/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-30T16:45:40Z", "updated_at": "2020-08-14T19:05:37Z", "closed_at": "2020-08-14T19:05:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "This relates to the pull request \"Force OMP_NUM_THREADS=1 if unset #6998\" from February (also \"Always set OMP_NUM_THREADS even on low core machines #7006\").  I left a comment on the former, but I am not sure that anyone will have been notified.  I also posted a question on Stackoverflow: \"Disabling Hyperthreading on Nodes in an AWS EC2 Cluster through Ray Configuration\".\r\n\r\nI have updated to 0.8.6, but OMP_NUM_THREADS isn't defined on the head-node (c5.24xlarge).  If the change has not been made in the current version, then this is not a bug, and I just need advice on how to get the variable set through the config.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9819", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9819/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9819/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9819/events", "html_url": "https://github.com/ray-project/ray/issues/9819", "id": 668629339, "node_id": "MDU6SXNzdWU2Njg2MjkzMzk=", "number": 9819, "title": "[RLlib] Error if tensorflow is not installed", "user": {"login": "raphaelavalos", "id": 28591322, "node_id": "MDQ6VXNlcjI4NTkxMzIy", "avatar_url": "https://avatars1.githubusercontent.com/u/28591322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raphaelavalos", "html_url": "https://github.com/raphaelavalos", "followers_url": "https://api.github.com/users/raphaelavalos/followers", "following_url": "https://api.github.com/users/raphaelavalos/following{/other_user}", "gists_url": "https://api.github.com/users/raphaelavalos/gists{/gist_id}", "starred_url": "https://api.github.com/users/raphaelavalos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raphaelavalos/subscriptions", "organizations_url": "https://api.github.com/users/raphaelavalos/orgs", "repos_url": "https://api.github.com/users/raphaelavalos/repos", "events_url": "https://api.github.com/users/raphaelavalos/events{/privacy}", "received_events_url": "https://api.github.com/users/raphaelavalos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}, {"id": 2090776337, "node_id": "MDU6TGFiZWwyMDkwNzc2MzM3", "url": "https://api.github.com/repos/ray-project/ray/labels/triage", "name": "triage", "color": "b0e7f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-30T11:27:53Z", "updated_at": "2020-07-30T13:31:45Z", "closed_at": "2020-07-30T13:31:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\n\r\nWhen TensorFlow is not installed RLlib crashes because tf is not None and but it doesn't have a keras attribute.\r\n\r\nhttps://github.com/ray-project/ray/blob/01125b8fcfce88472c2e20d116bc6662032088e0/rllib/models/tf/layers/gru_gate.py#L6\r\n\r\nThank you for your work :)\r\n\r\n- [x] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [x] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9815", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9815/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9815/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9815/events", "html_url": "https://github.com/ray-project/ray/issues/9815", "id": 668554490, "node_id": "MDU6SXNzdWU2Njg1NTQ0OTA=", "number": 9815, "title": "[tune] How to write a correct setting to conduct hyperparam search experiment appropriately?", "user": {"login": "guoxuxu", "id": 29363464, "node_id": "MDQ6VXNlcjI5MzYzNDY0", "avatar_url": "https://avatars2.githubusercontent.com/u/29363464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guoxuxu", "html_url": "https://github.com/guoxuxu", "followers_url": "https://api.github.com/users/guoxuxu/followers", "following_url": "https://api.github.com/users/guoxuxu/following{/other_user}", "gists_url": "https://api.github.com/users/guoxuxu/gists{/gist_id}", "starred_url": "https://api.github.com/users/guoxuxu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guoxuxu/subscriptions", "organizations_url": "https://api.github.com/users/guoxuxu/orgs", "repos_url": "https://api.github.com/users/guoxuxu/repos", "events_url": "https://api.github.com/users/guoxuxu/events{/privacy}", "received_events_url": "https://api.github.com/users/guoxuxu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-30T09:46:04Z", "updated_at": "2020-08-01T08:49:40Z", "closed_at": "2020-08-01T08:44:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is your question?\r\n\r\n1. I noticed that even if I fix the random seed, the best config and best metric found can vary a lot for the same python file executed. So I'm wondering <u> what's the correct and professional way to make sure my hyperparameter search experiment is running towards a potential best config and the metric result?\r\n\r\nI tried to figure out this question by specifying ``` stop``` and ```num_samples``` in ```tune.run()```. Specifically, I guess (1) by setting ```stop{metric: 0.96, \"training_iteration\": 10}``` the larger the ```training_iteration```, the better the results; (2) the larger the ```num_samples``` is, the more possible the experiment is approaching the best config. I guess only (2) can encourage the experiment running towards the best result? If so, usually how large can we set ```num_samples```?  Please also let me know if other attributes in tune can help.\r\n\r\n It seems that the maximum iterations allowed for each trial are 100? ```training_iteration``` can only be effective when it is set to some value lower than 100? as shown below\r\n\r\n![image](https://user-images.githubusercontent.com/29363464/88908335-4f8b3900-d28c-11ea-89de-ff4a4e5bc89b.png)\r\n![image](https://user-images.githubusercontent.com/29363464/88908354-55811a00-d28c-11ea-9b30-b8356930114f.png)\r\n\r\nMy code for ray tune initialization:\r\n```\r\n    if args.address:\r\n        ray.init(address=args.address)\r\n    else:\r\n        ray.init(num_cpus=os.cpu_count(), num_gpus=torch.cuda.device_count(), temp_dir=temp_dir)\r\n    sched = AsyncHyperBandScheduler(time_attr=\"training_iteration\", metric=\"mean_accuracy\")\r\n\r\n    space = {\r\n        \"lr\": hp.loguniform(\"lr\", -10, -1),  \r\n        \"momentum\": hp.uniform(\"momentum\", 0.1, 0.9), \r\n    }\r\n    metric = \"mean_accuracy\"\r\n    algo = HyperOptSearch(\r\n        space=space,\r\n        max_concurrent=8, \r\n        metric=metric,\r\n        mode=\"max\"\r\n    )\r\n\r\n    analysis = tune.run(\r\n        train_mnist,\r\n        name=\"exp\",\r\n        verbose=1, \r\n        scheduler=sched,\r\n        search_alg=algo,\r\n        stop={\r\n            metric: 0.95,\r\n            \"training_iteration\": 10\r\n        },\r\n        resources_per_trial={\r\n            \"cpu\": 1,\r\n            \"gpu\": 0.1\r\n        },\r\n        num_samples=20,\r\n        config={\r\n            \"use_gpu\": True\r\n        })\r\n```\r\n\r\n2. To wrap the whole experiment to conduct a complete hyperparameter search, is it better to write a Trainable Class ```class train_mnist(tune.Trainable)``` than a Trainable function ```def train_mnist(config)```? What's their true difference? Through ```nvidia-smi```, I saw that a trainable function shows ```ray::WrappedTrackFunc.train()``` in version 0.8.5 and ```ray::ImplicitFunc.train()``` in version 0.8.6 while a trainable class shows ```ray::Train.__init__()``` in version 0.8.5. what do they imply?\r\n\r\n\r\n\r\n*Ray version and other system information (Python version, TensorFlow version, OS):*\r\nPython 3.7.4\r\nOS: linux\r\nRay: 0.8.5", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9812", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9812/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9812/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9812/events", "html_url": "https://github.com/ray-project/ray/issues/9812", "id": 668414372, "node_id": "MDU6SXNzdWU2Njg0MTQzNzI=", "number": 9812, "title": "How to control the number of trials running in parallel?", "user": {"login": "guoxuxu", "id": 29363464, "node_id": "MDQ6VXNlcjI5MzYzNDY0", "avatar_url": "https://avatars2.githubusercontent.com/u/29363464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guoxuxu", "html_url": "https://github.com/guoxuxu", "followers_url": "https://api.github.com/users/guoxuxu/followers", "following_url": "https://api.github.com/users/guoxuxu/following{/other_user}", "gists_url": "https://api.github.com/users/guoxuxu/gists{/gist_id}", "starred_url": "https://api.github.com/users/guoxuxu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guoxuxu/subscriptions", "organizations_url": "https://api.github.com/users/guoxuxu/orgs", "repos_url": "https://api.github.com/users/guoxuxu/repos", "events_url": "https://api.github.com/users/guoxuxu/events{/privacy}", "received_events_url": "https://api.github.com/users/guoxuxu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-30T06:28:52Z", "updated_at": "2020-07-30T07:50:23Z", "closed_at": "2020-07-30T07:50:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is your question?\r\nI have two questions related to \"resources_per_trial\" and \"num_samples\". But I have only one purpose:  controlling the number of trials that are truly running in parallel. These two attributes can not make it. \r\n\r\nMy code for ray tune initialization:\r\n\r\n```\r\n    if args.address:\r\n        ray.init(address=args.address)\r\n    else:\r\n        ray.init(num_cpus=os.cpu_count(), num_gpus=torch.cuda.device_count(), temp_dir=temp_dir')\r\n\r\n    sched = AsyncHyperBandScheduler(time_attr=\"training_iteration\", metric=\"mean_accuracy\")\r\n\r\n    space = {\r\n        \"lr\": hp.loguniform(\"lr\", -10, -1),  \r\n        \"momentum\": hp.uniform(\"momentum\", 0.1, 0.9), \r\n    }\r\n    metric = \"mean_accuracy\"\r\n    algo = HyperOptSearch(\r\n        space=space,\r\n        max_concurrent=8, \r\n        metric=metric,\r\n        mode=\"max\"\r\n    )\r\n\r\n    analysis = tune.run(\r\n        train_mnist,\r\n        name=\"exp\",\r\n        verbose=1, \r\n        scheduler=sched,\r\n        search_alg=algo,\r\n        stop={\r\n            metric: 0.95,\r\n            \"training_iteration\": 5 if args.smoke_test else 10\r\n        },\r\n        resources_per_trial={\r\n            \"cpu\": 1,\r\n            \"gpu\": 0.1\r\n        },\r\n        num_samples=20,  # trials running in parallel\r\n        config={\r\n            \"use_gpu\": True\r\n        })\r\n```\r\n\r\n#### What I know is \"resources_per_trial\" specify the number of CPUs and GPUs and Memory for a trial. E.g., I can specify gpu=1 or 0.1, which gives me different resource allocation information here in ray tune log\r\n![image](https://user-images.githubusercontent.com/29363464/88886689-9f0e3c80-d26d-11ea-9a18-6729da38ef34.png)\r\n![image](https://user-images.githubusercontent.com/29363464/88886713-aaf9fe80-d26d-11ea-955e-f192798cee52.png)\r\n\r\n> My question is: why setting gpu=0.1 gets more trials running together than setting gpu=1 or 4. What's the reason behind so that I know I'm using it in right way. I view this difference through nvidia-smi. I have four GPUs but they are not efficiently used and setting gpu=4 even makes these trials run one by one... Please look at the pics below\r\nThis pic is setting gpu=0.1\r\n![image](https://user-images.githubusercontent.com/29363464/88886869-f6141180-d26d-11ea-86f8-fa0c1f3e912e.png)\r\nThis pic is setting gpu=1\r\n![image](https://user-images.githubusercontent.com/29363464/88886951-1c39b180-d26e-11ea-8ec1-17395574def2.png)\r\nThis pic is setting gpu=4\r\n![image](https://user-images.githubusercontent.com/29363464/88887203-85212980-d26e-11ea-955c-60b4dda31034.png)\r\n\r\n#### The \"num_samples\" is the number of trials that sample configuration together and these trials are listed on the table as in the following picture. However, it seems these trials are just generated together, not run in parallel and I guess the \"loc\" attribute may indicate the current running trial... \r\n![image](https://user-images.githubusercontent.com/29363464/88887716-87d04e80-d26f-11ea-82dc-b80aea7d4eb3.png)\r\n\r\n> My question is in which way can I control how many generated trials run together? For example, I want 16 trials run together on a server with 4 GPUs and each GPU holds e.g., 4 trials or another self-adjusted number of trials. I don't want these trials generated together but run one by one which is inefficient.\r\n\r\n### Note that I didn't set up a distributed cluster environment (.yaml file) on my server. I just directly use ray tune for hyper opt purpose.\r\n\r\n\r\n*Ray version and other system information (Python version, TensorFlow version, OS):*\r\nPython 3.7.4\r\nOS: linux\r\nRay: 0.8.5\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9798", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9798/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9798/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9798/events", "html_url": "https://github.com/ray-project/ray/issues/9798", "id": 668232446, "node_id": "MDU6SXNzdWU2NjgyMzI0NDY=", "number": 9798, "title": "[Placement Groups] Support tasks", "user": {"login": "ericl", "id": 14922, "node_id": "MDQ6VXNlcjE0OTIy", "avatar_url": "https://avatars3.githubusercontent.com/u/14922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericl", "html_url": "https://github.com/ericl", "followers_url": "https://api.github.com/users/ericl/followers", "following_url": "https://api.github.com/users/ericl/following{/other_user}", "gists_url": "https://api.github.com/users/ericl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericl/subscriptions", "organizations_url": "https://api.github.com/users/ericl/orgs", "repos_url": "https://api.github.com/users/ericl/repos", "events_url": "https://api.github.com/users/ericl/events{/privacy}", "received_events_url": "https://api.github.com/users/ericl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1805253811, "node_id": "MDU6TGFiZWwxODA1MjUzODEx", "url": "https://api.github.com/repos/ray-project/ray/labels/P1", "name": "P1", "color": "e2bf34", "default": false, "description": "Issue that should be fixed within a few weeks"}, {"id": 1374085984, "node_id": "MDU6TGFiZWwxMzc0MDg1OTg0", "url": "https://api.github.com/repos/ray-project/ray/labels/enhancement", "name": "enhancement", "color": "a0b1ff", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ericl", "id": 14922, "node_id": "MDQ6VXNlcjE0OTIy", "avatar_url": "https://avatars3.githubusercontent.com/u/14922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericl", "html_url": "https://github.com/ericl", "followers_url": "https://api.github.com/users/ericl/followers", "following_url": "https://api.github.com/users/ericl/following{/other_user}", "gists_url": "https://api.github.com/users/ericl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericl/subscriptions", "organizations_url": "https://api.github.com/users/ericl/orgs", "repos_url": "https://api.github.com/users/ericl/repos", "events_url": "https://api.github.com/users/ericl/events{/privacy}", "received_events_url": "https://api.github.com/users/ericl/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ericl", "id": 14922, "node_id": "MDQ6VXNlcjE0OTIy", "avatar_url": "https://avatars3.githubusercontent.com/u/14922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericl", "html_url": "https://github.com/ericl", "followers_url": "https://api.github.com/users/ericl/followers", "following_url": "https://api.github.com/users/ericl/following{/other_user}", "gists_url": "https://api.github.com/users/ericl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericl/subscriptions", "organizations_url": "https://api.github.com/users/ericl/orgs", "repos_url": "https://api.github.com/users/ericl/repos", "events_url": "https://api.github.com/users/ericl/events{/privacy}", "received_events_url": "https://api.github.com/users/ericl/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/ray-project/ray/milestones/3", "html_url": "https://github.com/ray-project/ray/milestone/3", "labels_url": "https://api.github.com/repos/ray-project/ray/milestones/3/labels", "id": 5710350, "node_id": "MDk6TWlsZXN0b25lNTcxMDM1MA==", "number": 3, "title": "Placement Group API", "description": "Placement groups allow users to atomically reserve groups of resources across multiple nodes (i.e., gang scheduling). They can request the resource bundles that make up the group to be packed as close as possible for locality (PACK), or spread apart (SPREAD). Groups can be destroyed to release all resources associated with the group.\r\n\r\nThe Ray Autoscaler will be aware of placement groups, and auto-scale the cluster to ensure pending groups can be placed as needed.", "creator": {"login": "ffbin", "id": 13081808, "node_id": "MDQ6VXNlcjEzMDgxODA4", "avatar_url": "https://avatars2.githubusercontent.com/u/13081808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffbin", "html_url": "https://github.com/ffbin", "followers_url": "https://api.github.com/users/ffbin/followers", "following_url": "https://api.github.com/users/ffbin/following{/other_user}", "gists_url": "https://api.github.com/users/ffbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffbin/subscriptions", "organizations_url": "https://api.github.com/users/ffbin/orgs", "repos_url": "https://api.github.com/users/ffbin/repos", "events_url": "https://api.github.com/users/ffbin/events{/privacy}", "received_events_url": "https://api.github.com/users/ffbin/received_events", "type": "User", "site_admin": false}, "open_issues": 16, "closed_issues": 9, "state": "open", "created_at": "2020-07-29T06:12:13Z", "updated_at": "2020-08-21T18:04:57Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2020-07-29T23:23:41Z", "updated_at": "2020-07-31T17:51:38Z", "closed_at": "2020-07-31T17:51:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9797", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9797/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9797/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9797/events", "html_url": "https://github.com/ray-project/ray/issues/9797", "id": 668228663, "node_id": "MDU6SXNzdWU2NjgyMjg2NjM=", "number": 9797, "title": "[Placement Group] Should check for valid bundle index", "user": {"login": "ericl", "id": 14922, "node_id": "MDQ6VXNlcjE0OTIy", "avatar_url": "https://avatars3.githubusercontent.com/u/14922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericl", "html_url": "https://github.com/ericl", "followers_url": "https://api.github.com/users/ericl/followers", "following_url": "https://api.github.com/users/ericl/following{/other_user}", "gists_url": "https://api.github.com/users/ericl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericl/subscriptions", "organizations_url": "https://api.github.com/users/ericl/orgs", "repos_url": "https://api.github.com/users/ericl/repos", "events_url": "https://api.github.com/users/ericl/events{/privacy}", "received_events_url": "https://api.github.com/users/ericl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1805253811, "node_id": "MDU6TGFiZWwxODA1MjUzODEx", "url": "https://api.github.com/repos/ray-project/ray/labels/P1", "name": "P1", "color": "e2bf34", "default": false, "description": "Issue that should be fixed within a few weeks"}, {"id": 1374085984, "node_id": "MDU6TGFiZWwxMzc0MDg1OTg0", "url": "https://api.github.com/repos/ray-project/ray/labels/enhancement", "name": "enhancement", "color": "a0b1ff", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ffbin", "id": 13081808, "node_id": "MDQ6VXNlcjEzMDgxODA4", "avatar_url": "https://avatars2.githubusercontent.com/u/13081808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffbin", "html_url": "https://github.com/ffbin", "followers_url": "https://api.github.com/users/ffbin/followers", "following_url": "https://api.github.com/users/ffbin/following{/other_user}", "gists_url": "https://api.github.com/users/ffbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffbin/subscriptions", "organizations_url": "https://api.github.com/users/ffbin/orgs", "repos_url": "https://api.github.com/users/ffbin/repos", "events_url": "https://api.github.com/users/ffbin/events{/privacy}", "received_events_url": "https://api.github.com/users/ffbin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ffbin", "id": 13081808, "node_id": "MDQ6VXNlcjEzMDgxODA4", "avatar_url": "https://avatars2.githubusercontent.com/u/13081808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffbin", "html_url": "https://github.com/ffbin", "followers_url": "https://api.github.com/users/ffbin/followers", "following_url": "https://api.github.com/users/ffbin/following{/other_user}", "gists_url": "https://api.github.com/users/ffbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffbin/subscriptions", "organizations_url": "https://api.github.com/users/ffbin/orgs", "repos_url": "https://api.github.com/users/ffbin/repos", "events_url": "https://api.github.com/users/ffbin/events{/privacy}", "received_events_url": "https://api.github.com/users/ffbin/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/ray-project/ray/milestones/3", "html_url": "https://github.com/ray-project/ray/milestone/3", "labels_url": "https://api.github.com/repos/ray-project/ray/milestones/3/labels", "id": 5710350, "node_id": "MDk6TWlsZXN0b25lNTcxMDM1MA==", "number": 3, "title": "Placement Group API", "description": "Placement groups allow users to atomically reserve groups of resources across multiple nodes (i.e., gang scheduling). They can request the resource bundles that make up the group to be packed as close as possible for locality (PACK), or spread apart (SPREAD). Groups can be destroyed to release all resources associated with the group.\r\n\r\nThe Ray Autoscaler will be aware of placement groups, and auto-scale the cluster to ensure pending groups can be placed as needed.", "creator": {"login": "ffbin", "id": 13081808, "node_id": "MDQ6VXNlcjEzMDgxODA4", "avatar_url": "https://avatars2.githubusercontent.com/u/13081808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffbin", "html_url": "https://github.com/ffbin", "followers_url": "https://api.github.com/users/ffbin/followers", "following_url": "https://api.github.com/users/ffbin/following{/other_user}", "gists_url": "https://api.github.com/users/ffbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffbin/subscriptions", "organizations_url": "https://api.github.com/users/ffbin/orgs", "repos_url": "https://api.github.com/users/ffbin/repos", "events_url": "https://api.github.com/users/ffbin/events{/privacy}", "received_events_url": "https://api.github.com/users/ffbin/received_events", "type": "User", "site_admin": false}, "open_issues": 16, "closed_issues": 9, "state": "open", "created_at": "2020-07-29T06:12:13Z", "updated_at": "2020-08-21T18:04:57Z", "due_on": null, "closed_at": null}, "comments": 5, "created_at": "2020-07-29T23:13:58Z", "updated_at": "2020-08-21T18:04:57Z", "closed_at": "2020-08-21T18:04:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "An error should be immediately raised if the bundle index is invalid.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9796", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9796/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9796/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9796/events", "html_url": "https://github.com/ray-project/ray/issues/9796", "id": 668228302, "node_id": "MDU6SXNzdWU2NjgyMjgzMDI=", "number": 9796, "title": "[Placement Group] Should be able to schedule a task on \"any bundle\"", "user": {"login": "ericl", "id": 14922, "node_id": "MDQ6VXNlcjE0OTIy", "avatar_url": "https://avatars3.githubusercontent.com/u/14922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericl", "html_url": "https://github.com/ericl", "followers_url": "https://api.github.com/users/ericl/followers", "following_url": "https://api.github.com/users/ericl/following{/other_user}", "gists_url": "https://api.github.com/users/ericl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericl/subscriptions", "organizations_url": "https://api.github.com/users/ericl/orgs", "repos_url": "https://api.github.com/users/ericl/repos", "events_url": "https://api.github.com/users/ericl/events{/privacy}", "received_events_url": "https://api.github.com/users/ericl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1805253811, "node_id": "MDU6TGFiZWwxODA1MjUzODEx", "url": "https://api.github.com/repos/ray-project/ray/labels/P1", "name": "P1", "color": "e2bf34", "default": false, "description": "Issue that should be fixed within a few weeks"}, {"id": 1374085984, "node_id": "MDU6TGFiZWwxMzc0MDg1OTg0", "url": "https://api.github.com/repos/ray-project/ray/labels/enhancement", "name": "enhancement", "color": "a0b1ff", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ericl", "id": 14922, "node_id": "MDQ6VXNlcjE0OTIy", "avatar_url": "https://avatars3.githubusercontent.com/u/14922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericl", "html_url": "https://github.com/ericl", "followers_url": "https://api.github.com/users/ericl/followers", "following_url": "https://api.github.com/users/ericl/following{/other_user}", "gists_url": "https://api.github.com/users/ericl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericl/subscriptions", "organizations_url": "https://api.github.com/users/ericl/orgs", "repos_url": "https://api.github.com/users/ericl/repos", "events_url": "https://api.github.com/users/ericl/events{/privacy}", "received_events_url": "https://api.github.com/users/ericl/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ericl", "id": 14922, "node_id": "MDQ6VXNlcjE0OTIy", "avatar_url": "https://avatars3.githubusercontent.com/u/14922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericl", "html_url": "https://github.com/ericl", "followers_url": "https://api.github.com/users/ericl/followers", "following_url": "https://api.github.com/users/ericl/following{/other_user}", "gists_url": "https://api.github.com/users/ericl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericl/subscriptions", "organizations_url": "https://api.github.com/users/ericl/orgs", "repos_url": "https://api.github.com/users/ericl/repos", "events_url": "https://api.github.com/users/ericl/events{/privacy}", "received_events_url": "https://api.github.com/users/ericl/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/ray-project/ray/milestones/3", "html_url": "https://github.com/ray-project/ray/milestone/3", "labels_url": "https://api.github.com/repos/ray-project/ray/milestones/3/labels", "id": 5710350, "node_id": "MDk6TWlsZXN0b25lNTcxMDM1MA==", "number": 3, "title": "Placement Group API", "description": "Placement groups allow users to atomically reserve groups of resources across multiple nodes (i.e., gang scheduling). They can request the resource bundles that make up the group to be packed as close as possible for locality (PACK), or spread apart (SPREAD). Groups can be destroyed to release all resources associated with the group.\r\n\r\nThe Ray Autoscaler will be aware of placement groups, and auto-scale the cluster to ensure pending groups can be placed as needed.", "creator": {"login": "ffbin", "id": 13081808, "node_id": "MDQ6VXNlcjEzMDgxODA4", "avatar_url": "https://avatars2.githubusercontent.com/u/13081808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffbin", "html_url": "https://github.com/ffbin", "followers_url": "https://api.github.com/users/ffbin/followers", "following_url": "https://api.github.com/users/ffbin/following{/other_user}", "gists_url": "https://api.github.com/users/ffbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffbin/subscriptions", "organizations_url": "https://api.github.com/users/ffbin/orgs", "repos_url": "https://api.github.com/users/ffbin/repos", "events_url": "https://api.github.com/users/ffbin/events{/privacy}", "received_events_url": "https://api.github.com/users/ffbin/received_events", "type": "User", "site_admin": false}, "open_issues": 16, "closed_issues": 9, "state": "open", "created_at": "2020-07-29T06:12:13Z", "updated_at": "2020-08-21T18:04:57Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2020-07-29T23:13:02Z", "updated_at": "2020-08-06T07:05:22Z", "closed_at": "2020-08-06T07:05:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is currently no way to allow a task to run on \"any bundle\". This should be supported if bundle_index = -1.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9794", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9794/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9794/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9794/events", "html_url": "https://github.com/ray-project/ray/issues/9794", "id": 668226534, "node_id": "MDU6SXNzdWU2NjgyMjY1MzQ=", "number": 9794, "title": "[Placement Group] Recover placement groups after failure of a bundle", "user": {"login": "ericl", "id": 14922, "node_id": "MDQ6VXNlcjE0OTIy", "avatar_url": "https://avatars3.githubusercontent.com/u/14922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericl", "html_url": "https://github.com/ericl", "followers_url": "https://api.github.com/users/ericl/followers", "following_url": "https://api.github.com/users/ericl/following{/other_user}", "gists_url": "https://api.github.com/users/ericl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericl/subscriptions", "organizations_url": "https://api.github.com/users/ericl/orgs", "repos_url": "https://api.github.com/users/ericl/repos", "events_url": "https://api.github.com/users/ericl/events{/privacy}", "received_events_url": "https://api.github.com/users/ericl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1805253811, "node_id": "MDU6TGFiZWwxODA1MjUzODEx", "url": "https://api.github.com/repos/ray-project/ray/labels/P1", "name": "P1", "color": "e2bf34", "default": false, "description": "Issue that should be fixed within a few weeks"}, {"id": 1374085984, "node_id": "MDU6TGFiZWwxMzc0MDg1OTg0", "url": "https://api.github.com/repos/ray-project/ray/labels/enhancement", "name": "enhancement", "color": "a0b1ff", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ffbin", "id": 13081808, "node_id": "MDQ6VXNlcjEzMDgxODA4", "avatar_url": "https://avatars2.githubusercontent.com/u/13081808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffbin", "html_url": "https://github.com/ffbin", "followers_url": "https://api.github.com/users/ffbin/followers", "following_url": "https://api.github.com/users/ffbin/following{/other_user}", "gists_url": "https://api.github.com/users/ffbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffbin/subscriptions", "organizations_url": "https://api.github.com/users/ffbin/orgs", "repos_url": "https://api.github.com/users/ffbin/repos", "events_url": "https://api.github.com/users/ffbin/events{/privacy}", "received_events_url": "https://api.github.com/users/ffbin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ffbin", "id": 13081808, "node_id": "MDQ6VXNlcjEzMDgxODA4", "avatar_url": "https://avatars2.githubusercontent.com/u/13081808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffbin", "html_url": "https://github.com/ffbin", "followers_url": "https://api.github.com/users/ffbin/followers", "following_url": "https://api.github.com/users/ffbin/following{/other_user}", "gists_url": "https://api.github.com/users/ffbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffbin/subscriptions", "organizations_url": "https://api.github.com/users/ffbin/orgs", "repos_url": "https://api.github.com/users/ffbin/repos", "events_url": "https://api.github.com/users/ffbin/events{/privacy}", "received_events_url": "https://api.github.com/users/ffbin/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/ray-project/ray/milestones/3", "html_url": "https://github.com/ray-project/ray/milestone/3", "labels_url": "https://api.github.com/repos/ray-project/ray/milestones/3/labels", "id": 5710350, "node_id": "MDk6TWlsZXN0b25lNTcxMDM1MA==", "number": 3, "title": "Placement Group API", "description": "Placement groups allow users to atomically reserve groups of resources across multiple nodes (i.e., gang scheduling). They can request the resource bundles that make up the group to be packed as close as possible for locality (PACK), or spread apart (SPREAD). Groups can be destroyed to release all resources associated with the group.\r\n\r\nThe Ray Autoscaler will be aware of placement groups, and auto-scale the cluster to ensure pending groups can be placed as needed.", "creator": {"login": "ffbin", "id": 13081808, "node_id": "MDQ6VXNlcjEzMDgxODA4", "avatar_url": "https://avatars2.githubusercontent.com/u/13081808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffbin", "html_url": "https://github.com/ffbin", "followers_url": "https://api.github.com/users/ffbin/followers", "following_url": "https://api.github.com/users/ffbin/following{/other_user}", "gists_url": "https://api.github.com/users/ffbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffbin/subscriptions", "organizations_url": "https://api.github.com/users/ffbin/orgs", "repos_url": "https://api.github.com/users/ffbin/repos", "events_url": "https://api.github.com/users/ffbin/events{/privacy}", "received_events_url": "https://api.github.com/users/ffbin/received_events", "type": "User", "site_admin": false}, "open_issues": 16, "closed_issues": 9, "state": "open", "created_at": "2020-07-29T06:12:13Z", "updated_at": "2020-08-21T18:04:57Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2020-07-29T23:08:15Z", "updated_at": "2020-08-20T22:29:20Z", "closed_at": "2020-08-20T22:29:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If a bundle disappears, the placement group scheduler should try to recover the group by rescheduling the bundle. This should have higher priority than trying to place other placement groups.\r\n\r\nAdd unit and integration tests for this scenario.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9793", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9793/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9793/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9793/events", "html_url": "https://github.com/ray-project/ray/issues/9793", "id": 668226140, "node_id": "MDU6SXNzdWU2NjgyMjYxNDA=", "number": 9793, "title": "[Placement Group] Allow deleting placement groups", "user": {"login": "ericl", "id": 14922, "node_id": "MDQ6VXNlcjE0OTIy", "avatar_url": "https://avatars3.githubusercontent.com/u/14922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericl", "html_url": "https://github.com/ericl", "followers_url": "https://api.github.com/users/ericl/followers", "following_url": "https://api.github.com/users/ericl/following{/other_user}", "gists_url": "https://api.github.com/users/ericl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericl/subscriptions", "organizations_url": "https://api.github.com/users/ericl/orgs", "repos_url": "https://api.github.com/users/ericl/repos", "events_url": "https://api.github.com/users/ericl/events{/privacy}", "received_events_url": "https://api.github.com/users/ericl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1805253811, "node_id": "MDU6TGFiZWwxODA1MjUzODEx", "url": "https://api.github.com/repos/ray-project/ray/labels/P1", "name": "P1", "color": "e2bf34", "default": false, "description": "Issue that should be fixed within a few weeks"}, {"id": 1374085984, "node_id": "MDU6TGFiZWwxMzc0MDg1OTg0", "url": "https://api.github.com/repos/ray-project/ray/labels/enhancement", "name": "enhancement", "color": "a0b1ff", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rkooo567", "id": 18510752, "node_id": "MDQ6VXNlcjE4NTEwNzUy", "avatar_url": "https://avatars0.githubusercontent.com/u/18510752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rkooo567", "html_url": "https://github.com/rkooo567", "followers_url": "https://api.github.com/users/rkooo567/followers", "following_url": "https://api.github.com/users/rkooo567/following{/other_user}", "gists_url": "https://api.github.com/users/rkooo567/gists{/gist_id}", "starred_url": "https://api.github.com/users/rkooo567/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rkooo567/subscriptions", "organizations_url": "https://api.github.com/users/rkooo567/orgs", "repos_url": "https://api.github.com/users/rkooo567/repos", "events_url": "https://api.github.com/users/rkooo567/events{/privacy}", "received_events_url": "https://api.github.com/users/rkooo567/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rkooo567", "id": 18510752, "node_id": "MDQ6VXNlcjE4NTEwNzUy", "avatar_url": "https://avatars0.githubusercontent.com/u/18510752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rkooo567", "html_url": "https://github.com/rkooo567", "followers_url": "https://api.github.com/users/rkooo567/followers", "following_url": "https://api.github.com/users/rkooo567/following{/other_user}", "gists_url": "https://api.github.com/users/rkooo567/gists{/gist_id}", "starred_url": "https://api.github.com/users/rkooo567/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rkooo567/subscriptions", "organizations_url": "https://api.github.com/users/rkooo567/orgs", "repos_url": "https://api.github.com/users/rkooo567/repos", "events_url": "https://api.github.com/users/rkooo567/events{/privacy}", "received_events_url": "https://api.github.com/users/rkooo567/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/ray-project/ray/milestones/3", "html_url": "https://github.com/ray-project/ray/milestone/3", "labels_url": "https://api.github.com/repos/ray-project/ray/milestones/3/labels", "id": 5710350, "node_id": "MDk6TWlsZXN0b25lNTcxMDM1MA==", "number": 3, "title": "Placement Group API", "description": "Placement groups allow users to atomically reserve groups of resources across multiple nodes (i.e., gang scheduling). They can request the resource bundles that make up the group to be packed as close as possible for locality (PACK), or spread apart (SPREAD). Groups can be destroyed to release all resources associated with the group.\r\n\r\nThe Ray Autoscaler will be aware of placement groups, and auto-scale the cluster to ensure pending groups can be placed as needed.", "creator": {"login": "ffbin", "id": 13081808, "node_id": "MDQ6VXNlcjEzMDgxODA4", "avatar_url": "https://avatars2.githubusercontent.com/u/13081808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffbin", "html_url": "https://github.com/ffbin", "followers_url": "https://api.github.com/users/ffbin/followers", "following_url": "https://api.github.com/users/ffbin/following{/other_user}", "gists_url": "https://api.github.com/users/ffbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffbin/subscriptions", "organizations_url": "https://api.github.com/users/ffbin/orgs", "repos_url": "https://api.github.com/users/ffbin/repos", "events_url": "https://api.github.com/users/ffbin/events{/privacy}", "received_events_url": "https://api.github.com/users/ffbin/received_events", "type": "User", "site_admin": false}, "open_issues": 16, "closed_issues": 9, "state": "open", "created_at": "2020-07-29T06:12:13Z", "updated_at": "2020-08-21T18:04:57Z", "due_on": null, "closed_at": null}, "comments": 5, "created_at": "2020-07-29T23:07:13Z", "updated_at": "2020-08-20T22:29:04Z", "closed_at": "2020-08-20T22:29:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Add an API to list / delete placement groups.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9788", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9788/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9788/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9788/events", "html_url": "https://github.com/ray-project/ray/issues/9788", "id": 668101662, "node_id": "MDU6SXNzdWU2NjgxMDE2NjI=", "number": 9788, "title": "[tune] Tuning a non-ML system", "user": {"login": "alihadian", "id": 3843633, "node_id": "MDQ6VXNlcjM4NDM2MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3843633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alihadian", "html_url": "https://github.com/alihadian", "followers_url": "https://api.github.com/users/alihadian/followers", "following_url": "https://api.github.com/users/alihadian/following{/other_user}", "gists_url": "https://api.github.com/users/alihadian/gists{/gist_id}", "starred_url": "https://api.github.com/users/alihadian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alihadian/subscriptions", "organizations_url": "https://api.github.com/users/alihadian/orgs", "repos_url": "https://api.github.com/users/alihadian/repos", "events_url": "https://api.github.com/users/alihadian/events{/privacy}", "received_events_url": "https://api.github.com/users/alihadian/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-07-29T19:49:19Z", "updated_at": "2020-07-29T22:21:48Z", "closed_at": "2020-07-29T22:21:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am confused about how to use Ray Tune for a non-ML system. I want to optimize a software system for data cleansing, which comes with a number of parameters.\r\n\r\nI have an objective function that runs the system and computes a fitness value:\r\n```\r\ndef fitness(params):\r\n    run_LogMap(params)\r\n    return evaluate_output()\r\n```\r\n\r\nI want to use Ray Tune for its \"parallel / distributed\" facilities, and the search algorithms that help to explore the hyperparameter space more efficiently (than grid search).\r\n\r\nThe documentation of Ray Tune, however, is mostly prepared for ML-related tasks.  Even the [simplest examples](https://docs.ray.io/en/latest/tune.html) have ML-related parameters:\r\n\r\n```\r\ndef train_mnist(config):\r\n    train_loader, test_loader = get_data_loaders()\r\n    model = ConvNet()\r\n    optimizer = optim.SGD(model.parameters(), lr=config[\"lr\"])\r\n    for i in range(10):\r\n        train(model, optimizer, train_loader)\r\n        acc = test(model, test_loader)\r\n        tune.report(mean_accuracy=acc)\r\n```\r\n\r\nWhat I specifically don't understand is what is the role of the for loop? My system does not behave stochastically and it only depends on the input data and the parameters (no randomness inside the system).\r\n\r\nIs there ANY example of Ray Tune that is not mixed with these ML concepts such as \"Trial\", \"step\" and \"mean_loss\"? \r\n\r\nI just want to define the objective function, the search algorithm, and the number of parallel workers. Is Ray Tune a proper choice for this?\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9784", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9784/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9784/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9784/events", "html_url": "https://github.com/ray-project/ray/issues/9784", "id": 667947837, "node_id": "MDU6SXNzdWU2Njc5NDc4Mzc=", "number": 9784, "title": "[RLlib] Error if tensorflow is not installed", "user": {"login": "raphaelavalos", "id": 28591322, "node_id": "MDQ6VXNlcjI4NTkxMzIy", "avatar_url": "https://avatars1.githubusercontent.com/u/28591322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raphaelavalos", "html_url": "https://github.com/raphaelavalos", "followers_url": "https://api.github.com/users/raphaelavalos/followers", "following_url": "https://api.github.com/users/raphaelavalos/following{/other_user}", "gists_url": "https://api.github.com/users/raphaelavalos/gists{/gist_id}", "starred_url": "https://api.github.com/users/raphaelavalos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raphaelavalos/subscriptions", "organizations_url": "https://api.github.com/users/raphaelavalos/orgs", "repos_url": "https://api.github.com/users/raphaelavalos/repos", "events_url": "https://api.github.com/users/raphaelavalos/events{/privacy}", "received_events_url": "https://api.github.com/users/raphaelavalos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}, {"id": 1890823772, "node_id": "MDU6TGFiZWwxODkwODIzNzcy", "url": "https://api.github.com/repos/ray-project/ray/labels/rllib", "name": "rllib", "color": "13437c", "default": false, "description": "RLlib-related issues"}, {"id": 2090776337, "node_id": "MDU6TGFiZWwyMDkwNzc2MzM3", "url": "https://api.github.com/repos/ray-project/ray/labels/triage", "name": "triage", "color": "b0e7f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "sven1977", "id": 5839854, "node_id": "MDQ6VXNlcjU4Mzk4NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5839854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sven1977", "html_url": "https://github.com/sven1977", "followers_url": "https://api.github.com/users/sven1977/followers", "following_url": "https://api.github.com/users/sven1977/following{/other_user}", "gists_url": "https://api.github.com/users/sven1977/gists{/gist_id}", "starred_url": "https://api.github.com/users/sven1977/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sven1977/subscriptions", "organizations_url": "https://api.github.com/users/sven1977/orgs", "repos_url": "https://api.github.com/users/sven1977/repos", "events_url": "https://api.github.com/users/sven1977/events{/privacy}", "received_events_url": "https://api.github.com/users/sven1977/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sven1977", "id": 5839854, "node_id": "MDQ6VXNlcjU4Mzk4NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5839854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sven1977", "html_url": "https://github.com/sven1977", "followers_url": "https://api.github.com/users/sven1977/followers", "following_url": "https://api.github.com/users/sven1977/following{/other_user}", "gists_url": "https://api.github.com/users/sven1977/gists{/gist_id}", "starred_url": "https://api.github.com/users/sven1977/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sven1977/subscriptions", "organizations_url": "https://api.github.com/users/sven1977/orgs", "repos_url": "https://api.github.com/users/sven1977/repos", "events_url": "https://api.github.com/users/sven1977/events{/privacy}", "received_events_url": "https://api.github.com/users/sven1977/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-29T15:46:53Z", "updated_at": "2020-07-29T20:20:42Z", "closed_at": "2020-07-29T20:20:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "\r\nThe annotations introduced in the PR #9676 make RLlib crash if TensorFlow is not installed. The crash appears because the namespace tf1 does not have FIFOQueue attribute. \r\n\r\nhttps://github.com/ray-project/ray/blob/156067b423ef327682fa6639c3a9936bf8fa7ea9/rllib/offline/input_reader.py#L95\r\n\r\nThe same error might also appear elsewhere\r\n\r\n@michaelzhiluo maybe you can have a look. Thanks :)\r\n\r\n- [x] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [x] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9774", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9774/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9774/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9774/events", "html_url": "https://github.com/ray-project/ray/issues/9774", "id": 667586814, "node_id": "MDU6SXNzdWU2Njc1ODY4MTQ=", "number": 9774, "title": "[Placement Group] Add STRICT_PACK and STRICT_SPREAD scheduling strategy  ", "user": {"login": "wumuzi520", "id": 2016670, "node_id": "MDQ6VXNlcjIwMTY2NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2016670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wumuzi520", "html_url": "https://github.com/wumuzi520", "followers_url": "https://api.github.com/users/wumuzi520/followers", "following_url": "https://api.github.com/users/wumuzi520/following{/other_user}", "gists_url": "https://api.github.com/users/wumuzi520/gists{/gist_id}", "starred_url": "https://api.github.com/users/wumuzi520/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wumuzi520/subscriptions", "organizations_url": "https://api.github.com/users/wumuzi520/orgs", "repos_url": "https://api.github.com/users/wumuzi520/repos", "events_url": "https://api.github.com/users/wumuzi520/events{/privacy}", "received_events_url": "https://api.github.com/users/wumuzi520/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2040474101, "node_id": "MDU6TGFiZWwyMDQwNDc0MTAx", "url": "https://api.github.com/repos/ray-project/ray/labels/P2", "name": "P2", "color": "eef747", "default": false, "description": "Important issue, but not time-critical"}, {"id": 1374085984, "node_id": "MDU6TGFiZWwxMzc0MDg1OTg0", "url": "https://api.github.com/repos/ray-project/ray/labels/enhancement", "name": "enhancement", "color": "a0b1ff", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ffbin", "id": 13081808, "node_id": "MDQ6VXNlcjEzMDgxODA4", "avatar_url": "https://avatars2.githubusercontent.com/u/13081808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffbin", "html_url": "https://github.com/ffbin", "followers_url": "https://api.github.com/users/ffbin/followers", "following_url": "https://api.github.com/users/ffbin/following{/other_user}", "gists_url": "https://api.github.com/users/ffbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffbin/subscriptions", "organizations_url": "https://api.github.com/users/ffbin/orgs", "repos_url": "https://api.github.com/users/ffbin/repos", "events_url": "https://api.github.com/users/ffbin/events{/privacy}", "received_events_url": "https://api.github.com/users/ffbin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ffbin", "id": 13081808, "node_id": "MDQ6VXNlcjEzMDgxODA4", "avatar_url": "https://avatars2.githubusercontent.com/u/13081808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffbin", "html_url": "https://github.com/ffbin", "followers_url": "https://api.github.com/users/ffbin/followers", "following_url": "https://api.github.com/users/ffbin/following{/other_user}", "gists_url": "https://api.github.com/users/ffbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffbin/subscriptions", "organizations_url": "https://api.github.com/users/ffbin/orgs", "repos_url": "https://api.github.com/users/ffbin/repos", "events_url": "https://api.github.com/users/ffbin/events{/privacy}", "received_events_url": "https://api.github.com/users/ffbin/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/ray-project/ray/milestones/3", "html_url": "https://github.com/ray-project/ray/milestone/3", "labels_url": "https://api.github.com/repos/ray-project/ray/milestones/3/labels", "id": 5710350, "node_id": "MDk6TWlsZXN0b25lNTcxMDM1MA==", "number": 3, "title": "Placement Group API", "description": "Placement groups allow users to atomically reserve groups of resources across multiple nodes (i.e., gang scheduling). They can request the resource bundles that make up the group to be packed as close as possible for locality (PACK), or spread apart (SPREAD). Groups can be destroyed to release all resources associated with the group.\r\n\r\nThe Ray Autoscaler will be aware of placement groups, and auto-scale the cluster to ensure pending groups can be placed as needed.", "creator": {"login": "ffbin", "id": 13081808, "node_id": "MDQ6VXNlcjEzMDgxODA4", "avatar_url": "https://avatars2.githubusercontent.com/u/13081808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffbin", "html_url": "https://github.com/ffbin", "followers_url": "https://api.github.com/users/ffbin/followers", "following_url": "https://api.github.com/users/ffbin/following{/other_user}", "gists_url": "https://api.github.com/users/ffbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffbin/subscriptions", "organizations_url": "https://api.github.com/users/ffbin/orgs", "repos_url": "https://api.github.com/users/ffbin/repos", "events_url": "https://api.github.com/users/ffbin/events{/privacy}", "received_events_url": "https://api.github.com/users/ffbin/received_events", "type": "User", "site_admin": false}, "open_issues": 16, "closed_issues": 9, "state": "open", "created_at": "2020-07-29T06:12:13Z", "updated_at": "2020-08-21T18:04:57Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2020-07-29T06:27:42Z", "updated_at": "2020-08-20T22:30:15Z", "closed_at": "2020-08-20T22:30:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### Describe your feature request\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9763", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9763/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9763/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9763/events", "html_url": "https://github.com/ray-project/ray/issues/9763", "id": 667433669, "node_id": "MDU6SXNzdWU2Njc0MzM2Njk=", "number": 9763, "title": "[core] ray.init(raylet_socket_name=...) doesn't work with multiple workers", "user": {"login": "wuisawesome", "id": 3980609, "node_id": "MDQ6VXNlcjM5ODA2MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3980609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wuisawesome", "html_url": "https://github.com/wuisawesome", "followers_url": "https://api.github.com/users/wuisawesome/followers", "following_url": "https://api.github.com/users/wuisawesome/following{/other_user}", "gists_url": "https://api.github.com/users/wuisawesome/gists{/gist_id}", "starred_url": "https://api.github.com/users/wuisawesome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wuisawesome/subscriptions", "organizations_url": "https://api.github.com/users/wuisawesome/orgs", "repos_url": "https://api.github.com/users/wuisawesome/repos", "events_url": "https://api.github.com/users/wuisawesome/events{/privacy}", "received_events_url": "https://api.github.com/users/wuisawesome/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1805253811, "node_id": "MDU6TGFiZWwxODA1MjUzODEx", "url": "https://api.github.com/repos/ray-project/ray/labels/P1", "name": "P1", "color": "e2bf34", "default": false, "description": "Issue that should be fixed within a few weeks"}, {"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}, {"id": 2090771588, "node_id": "MDU6TGFiZWwyMDkwNzcxNTg4", "url": "https://api.github.com/repos/ray-project/ray/labels/core", "name": "core", "color": "bfdadc", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "wuisawesome", "id": 3980609, "node_id": "MDQ6VXNlcjM5ODA2MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3980609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wuisawesome", "html_url": "https://github.com/wuisawesome", "followers_url": "https://api.github.com/users/wuisawesome/followers", "following_url": "https://api.github.com/users/wuisawesome/following{/other_user}", "gists_url": "https://api.github.com/users/wuisawesome/gists{/gist_id}", "starred_url": "https://api.github.com/users/wuisawesome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wuisawesome/subscriptions", "organizations_url": "https://api.github.com/users/wuisawesome/orgs", "repos_url": "https://api.github.com/users/wuisawesome/repos", "events_url": "https://api.github.com/users/wuisawesome/events{/privacy}", "received_events_url": "https://api.github.com/users/wuisawesome/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wuisawesome", "id": 3980609, "node_id": "MDQ6VXNlcjM5ODA2MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3980609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wuisawesome", "html_url": "https://github.com/wuisawesome", "followers_url": "https://api.github.com/users/wuisawesome/followers", "following_url": "https://api.github.com/users/wuisawesome/following{/other_user}", "gists_url": "https://api.github.com/users/wuisawesome/gists{/gist_id}", "starred_url": "https://api.github.com/users/wuisawesome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wuisawesome/subscriptions", "organizations_url": "https://api.github.com/users/wuisawesome/orgs", "repos_url": "https://api.github.com/users/wuisawesome/repos", "events_url": "https://api.github.com/users/wuisawesome/events{/privacy}", "received_events_url": "https://api.github.com/users/wuisawesome/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-07-28T22:58:47Z", "updated_at": "2020-08-07T21:18:37Z", "closed_at": "2020-08-07T21:18:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is the problem?\r\n\r\n*Ray version and other system information (Python version, TensorFlow version, OS):*\r\nUbuntu 18.04 (quite certain this applies to all *nix systems)\r\n\r\n\r\n### Reproduction (REQUIRED)\r\nPlease provide a script that can be run to reproduce the issue. The script should have **no external library dependencies** (i.e., use fake or mock data / environments):\r\n\r\n```\r\nimport ray\r\nfrom time import sleep\r\nray.init(num_cpus=4, raylet_socket_name=\"/tmp/abcdef\")\r\n\r\n@ray.remote\r\ndef foo(x):\r\n    sleep(2)\r\n    return 2*x\r\n\r\nray.get([foo.remote(i) for i in range(4)])\r\n```\r\n\r\nThrows an exception\r\n\r\nIf we cannot run your script, we cannot fix your issue.\r\n\r\n- [ ] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [ ] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9761", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9761/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9761/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9761/events", "html_url": "https://github.com/ray-project/ray/issues/9761", "id": 667406504, "node_id": "MDU6SXNzdWU2Njc0MDY1MDQ=", "number": 9761, "title": "test_output is failling ", "user": {"login": "wuisawesome", "id": 3980609, "node_id": "MDQ6VXNlcjM5ODA2MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3980609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wuisawesome", "html_url": "https://github.com/wuisawesome", "followers_url": "https://api.github.com/users/wuisawesome/followers", "following_url": "https://api.github.com/users/wuisawesome/following{/other_user}", "gists_url": "https://api.github.com/users/wuisawesome/gists{/gist_id}", "starred_url": "https://api.github.com/users/wuisawesome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wuisawesome/subscriptions", "organizations_url": "https://api.github.com/users/wuisawesome/orgs", "repos_url": "https://api.github.com/users/wuisawesome/repos", "events_url": "https://api.github.com/users/wuisawesome/events{/privacy}", "received_events_url": "https://api.github.com/users/wuisawesome/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1805253707, "node_id": "MDU6TGFiZWwxODA1MjUzNzA3", "url": "https://api.github.com/repos/ray-project/ray/labels/P0", "name": "P0", "color": "cc0507", "default": false, "description": "Issue that must be fixed in short order"}, {"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}, {"id": 2090771588, "node_id": "MDU6TGFiZWwyMDkwNzcxNTg4", "url": "https://api.github.com/repos/ray-project/ray/labels/core", "name": "core", "color": "bfdadc", "default": false, "description": ""}, {"id": 1504751318, "node_id": "MDU6TGFiZWwxNTA0NzUxMzE4", "url": "https://api.github.com/repos/ray-project/ray/labels/release-blocker", "name": "release-blocker", "color": "8c0507", "default": false, "description": "P0 Issue that blocks the release"}], "state": "closed", "locked": false, "assignee": {"login": "wuisawesome", "id": 3980609, "node_id": "MDQ6VXNlcjM5ODA2MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3980609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wuisawesome", "html_url": "https://github.com/wuisawesome", "followers_url": "https://api.github.com/users/wuisawesome/followers", "following_url": "https://api.github.com/users/wuisawesome/following{/other_user}", "gists_url": "https://api.github.com/users/wuisawesome/gists{/gist_id}", "starred_url": "https://api.github.com/users/wuisawesome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wuisawesome/subscriptions", "organizations_url": "https://api.github.com/users/wuisawesome/orgs", "repos_url": "https://api.github.com/users/wuisawesome/repos", "events_url": "https://api.github.com/users/wuisawesome/events{/privacy}", "received_events_url": "https://api.github.com/users/wuisawesome/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wuisawesome", "id": 3980609, "node_id": "MDQ6VXNlcjM5ODA2MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3980609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wuisawesome", "html_url": "https://github.com/wuisawesome", "followers_url": "https://api.github.com/users/wuisawesome/followers", "following_url": "https://api.github.com/users/wuisawesome/following{/other_user}", "gists_url": "https://api.github.com/users/wuisawesome/gists{/gist_id}", "starred_url": "https://api.github.com/users/wuisawesome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wuisawesome/subscriptions", "organizations_url": "https://api.github.com/users/wuisawesome/orgs", "repos_url": "https://api.github.com/users/wuisawesome/repos", "events_url": "https://api.github.com/users/wuisawesome/events{/privacy}", "received_events_url": "https://api.github.com/users/wuisawesome/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-28T21:55:08Z", "updated_at": "2020-07-30T17:20:11Z", "closed_at": "2020-07-30T17:20:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is the problem?\r\n\r\n*Ray version and other system information (Python version, TensorFlow version, OS):*\r\nOn ubuntu:\r\n\r\nThese socket connection errors (a) shouldn't happen (b) if they should happen and are normal, they should generate error logs on startup. \r\n\r\n\r\n### Reproduction (REQUIRED)\r\nPlease provide a script that can be run to reproduce the issue. The script should have **no external library dependencies** (i.e., use fake or mock data / environments):\r\n\r\n```\r\nimport ray\r\nray.init()\r\n```\r\n\r\nprints\r\n\r\n```\r\nE0728 21:47:24.296782 18264 18264 client_connection.cc:51] Retrying to connect to socket for endpoint /tmp/ray/session_2020-07-28_21-47-22_806574_18264/sockets/raylet (num_attempts = 1, num_retries = 10)\r\n```\r\n\r\n\r\nIf we cannot run your script, we cannot fix your issue.\r\n\r\n- [ ] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [ ] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9750", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9750/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9750/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9750/events", "html_url": "https://github.com/ray-project/ray/issues/9750", "id": 666916451, "node_id": "MDU6SXNzdWU2NjY5MTY0NTE=", "number": 9750, "title": "Trials did not complete", "user": {"login": "guoxuxu", "id": 29363464, "node_id": "MDQ6VXNlcjI5MzYzNDY0", "avatar_url": "https://avatars2.githubusercontent.com/u/29363464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guoxuxu", "html_url": "https://github.com/guoxuxu", "followers_url": "https://api.github.com/users/guoxuxu/followers", "following_url": "https://api.github.com/users/guoxuxu/following{/other_user}", "gists_url": "https://api.github.com/users/guoxuxu/gists{/gist_id}", "starred_url": "https://api.github.com/users/guoxuxu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guoxuxu/subscriptions", "organizations_url": "https://api.github.com/users/guoxuxu/orgs", "repos_url": "https://api.github.com/users/guoxuxu/repos", "events_url": "https://api.github.com/users/guoxuxu/events{/privacy}", "received_events_url": "https://api.github.com/users/guoxuxu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1374085984, "node_id": "MDU6TGFiZWwxMzc0MDg1OTg0", "url": "https://api.github.com/repos/ray-project/ray/labels/enhancement", "name": "enhancement", "color": "a0b1ff", "default": true, "description": ""}, {"id": 2090776337, "node_id": "MDU6TGFiZWwyMDkwNzc2MzM3", "url": "https://api.github.com/repos/ray-project/ray/labels/triage", "name": "triage", "color": "b0e7f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-28T09:21:34Z", "updated_at": "2020-07-31T09:40:15Z", "closed_at": "2020-07-31T09:40:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\ntune\r\n### Describe your feature request\r\nCan we know which line in our code file triggers \"Trials did not complete\" Error?\r\nDon't know where to edit when everything is wrapped", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9734", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9734/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9734/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9734/events", "html_url": "https://github.com/ray-project/ray/issues/9734", "id": 666561762, "node_id": "MDU6SXNzdWU2NjY1NjE3NjI=", "number": 9734, "title": "[autoscaler] Ray cluster not starting even with start_commands being executed?", "user": {"login": "richardliaw", "id": 4529381, "node_id": "MDQ6VXNlcjQ1MjkzODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/4529381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardliaw", "html_url": "https://github.com/richardliaw", "followers_url": "https://api.github.com/users/richardliaw/followers", "following_url": "https://api.github.com/users/richardliaw/following{/other_user}", "gists_url": "https://api.github.com/users/richardliaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardliaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardliaw/subscriptions", "organizations_url": "https://api.github.com/users/richardliaw/orgs", "repos_url": "https://api.github.com/users/richardliaw/repos", "events_url": "https://api.github.com/users/richardliaw/events{/privacy}", "received_events_url": "https://api.github.com/users/richardliaw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "richardliaw", "id": 4529381, "node_id": "MDQ6VXNlcjQ1MjkzODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/4529381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardliaw", "html_url": "https://github.com/richardliaw", "followers_url": "https://api.github.com/users/richardliaw/followers", "following_url": "https://api.github.com/users/richardliaw/following{/other_user}", "gists_url": "https://api.github.com/users/richardliaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardliaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardliaw/subscriptions", "organizations_url": "https://api.github.com/users/richardliaw/orgs", "repos_url": "https://api.github.com/users/richardliaw/repos", "events_url": "https://api.github.com/users/richardliaw/events{/privacy}", "received_events_url": "https://api.github.com/users/richardliaw/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "richardliaw", "id": 4529381, "node_id": "MDQ6VXNlcjQ1MjkzODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/4529381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardliaw", "html_url": "https://github.com/richardliaw", "followers_url": "https://api.github.com/users/richardliaw/followers", "following_url": "https://api.github.com/users/richardliaw/following{/other_user}", "gists_url": "https://api.github.com/users/richardliaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardliaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardliaw/subscriptions", "organizations_url": "https://api.github.com/users/richardliaw/orgs", "repos_url": "https://api.github.com/users/richardliaw/repos", "events_url": "https://api.github.com/users/richardliaw/events{/privacy}", "received_events_url": "https://api.github.com/users/richardliaw/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-27T20:24:05Z", "updated_at": "2020-07-30T22:33:17Z", "closed_at": "2020-07-30T22:33:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### What is the problem?\r\n\r\n*Ray version and other system information (Python version, TensorFlow version, OS):*\r\n\r\nray services/cluster don\u2019t seem to be starting up properly for me (the ray start command is executed but the services don\u2019t seem to stay alive). This is even on a small yaml file on the latest ray wheels - can anyone check that this is the case?\r\n\r\n\r\nAlso, started Ray by hand. After running a simple workload, \r\n\r\n```\r\n(pid=raylet, ip=172.31.24.71) E0726 01:47:45.295694  4433  4433 node_manager.cc:3664] Failed to send get core worker stats request: IOError: 1: Cancelled\r\n(pid=raylet, ip=172.31.24.71) E0726 01:47:45.515303  4433  4433 node_manager.cc:3664] Failed to send get core worker stats request: IOError: 14: Connection reset by peer\r\n```\r\nthe cluster is no longer usable after this\r\n\r\n\r\n### Reproduction (REQUIRED)\r\nPlease provide a script that can be run to reproduce the issue. The script should have **no external library dependencies** (i.e., use fake or mock data / environments):\r\n\r\nRun ray up with this:\r\nhttps://gist.github.com/richardliaw/686f4f92d0035f48c1dd1ea82684d045\r\n\r\nIf we cannot run your script, we cannot fix your issue.\r\n\r\n- [X] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [X] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n\r\ncc @rkooo567 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9726", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9726/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9726/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9726/events", "html_url": "https://github.com/ray-project/ray/issues/9726", "id": 666262535, "node_id": "MDU6SXNzdWU2NjYyNjI1MzU=", "number": 9726, "title": "ray.tune.error.TuneError: ('Trials did not complete'\uff09", "user": {"login": "guoxuxu", "id": 29363464, "node_id": "MDQ6VXNlcjI5MzYzNDY0", "avatar_url": "https://avatars2.githubusercontent.com/u/29363464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guoxuxu", "html_url": "https://github.com/guoxuxu", "followers_url": "https://api.github.com/users/guoxuxu/followers", "following_url": "https://api.github.com/users/guoxuxu/following{/other_user}", "gists_url": "https://api.github.com/users/guoxuxu/gists{/gist_id}", "starred_url": "https://api.github.com/users/guoxuxu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guoxuxu/subscriptions", "organizations_url": "https://api.github.com/users/guoxuxu/orgs", "repos_url": "https://api.github.com/users/guoxuxu/repos", "events_url": "https://api.github.com/users/guoxuxu/events{/privacy}", "received_events_url": "https://api.github.com/users/guoxuxu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}, {"id": 2090776337, "node_id": "MDU6TGFiZWwyMDkwNzc2MzM3", "url": "https://api.github.com/repos/ray-project/ray/labels/triage", "name": "triage", "color": "b0e7f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-27T12:39:56Z", "updated_at": "2020-07-31T09:37:34Z", "closed_at": "2020-07-31T09:37:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is the problem?\r\nThe only error is \"\r\nFile \"/home/guoxu/anaconda3/lib/python3.7/site-packages/ray/tune/tune.py\", line 349, in run\r\nraise TuneError(\"Trials did not complete\", incomplete_trials)\r\n\"\r\nDon't know how to figure out where is the problem. Is there a way to point to the line which triggered this error?\r\n\r\nCode:\r\nray.init(num_cpus=os.cpu_count(), num_gpus=torch.cuda.device_count(), temp_dir='path/ray_log')\r\nsched = ASHAScheduler(\r\n        time_attr=\"training_iteration\",\r\n        metric=\"macro_f1\",\r\n        mode='max',\r\n    )\r\nanalysis = tune.run(\r\n        train,\r\n        name=\"grl_adda_lys\",\r\n        scheduler=sched,\r\n        verbose=True, #\r\n        stop={\"macro_f1\": 0.30, \"training_iteration\": num_iters},\r\n        resources_per_trial={\"cpu\": 1, \"gpu\": 0.5},\r\n        num_samples=1,\r\n        config=configargs,\r\n    )\r\n\r\n*Ray version and other system information (Python version, TensorFlow version, OS):*\r\nPython 3.7\r\nOS: linux\r\n\r\n### Reproduction (REQUIRED)\r\nPlease provide a script that can be run to reproduce the issue. The script should have **no external library dependencies** (i.e., use fake or mock data / environments):\r\n\r\nIf we cannot run your script, we cannot fix your issue.\r\n\r\n- [ ] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [ ] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9724", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9724/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9724/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9724/events", "html_url": "https://github.com/ray-project/ray/issues/9724", "id": 666220856, "node_id": "MDU6SXNzdWU2NjYyMjA4NTY=", "number": 9724, "title": "How to set number of trials run in parallel at a time?", "user": {"login": "guoxuxu", "id": 29363464, "node_id": "MDQ6VXNlcjI5MzYzNDY0", "avatar_url": "https://avatars2.githubusercontent.com/u/29363464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guoxuxu", "html_url": "https://github.com/guoxuxu", "followers_url": "https://api.github.com/users/guoxuxu/followers", "following_url": "https://api.github.com/users/guoxuxu/following{/other_user}", "gists_url": "https://api.github.com/users/guoxuxu/gists{/gist_id}", "starred_url": "https://api.github.com/users/guoxuxu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guoxuxu/subscriptions", "organizations_url": "https://api.github.com/users/guoxuxu/orgs", "repos_url": "https://api.github.com/users/guoxuxu/repos", "events_url": "https://api.github.com/users/guoxuxu/events{/privacy}", "received_events_url": "https://api.github.com/users/guoxuxu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-27T11:28:10Z", "updated_at": "2020-07-31T09:38:01Z", "closed_at": "2020-07-31T09:38:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n[tune]\r\n### What is your question?\r\n\r\nHaving read issues related to how to set the number of trials in parallel at a time, I tried setting num_workers to e.g., 10 in the config dictionary and also tried setting resources_per_trial={\"cpu\": 1, \"gpu\": 0.5}, the number of trials in parallel is only two on a server with two GPUs. I want to run 10 trials at a time to fill the two GPUs.\r\n\r\n*Ray version and other system information (Python version, TensorFlow version, OS):*\r\nPython: 3.7.4\r\nray: 0.8.6\r\nOS: linux\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9723", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9723/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9723/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9723/events", "html_url": "https://github.com/ray-project/ray/issues/9723", "id": 666193828, "node_id": "MDU6SXNzdWU2NjYxOTM4Mjg=", "number": 9723, "title": "[tune] AWS Spot Instance Automation", "user": {"login": "rohan-gt", "id": 2353212, "node_id": "MDQ6VXNlcjIzNTMyMTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2353212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan-gt", "html_url": "https://github.com/rohan-gt", "followers_url": "https://api.github.com/users/rohan-gt/followers", "following_url": "https://api.github.com/users/rohan-gt/following{/other_user}", "gists_url": "https://api.github.com/users/rohan-gt/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan-gt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan-gt/subscriptions", "organizations_url": "https://api.github.com/users/rohan-gt/orgs", "repos_url": "https://api.github.com/users/rohan-gt/repos", "events_url": "https://api.github.com/users/rohan-gt/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan-gt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-27T10:49:15Z", "updated_at": "2020-08-07T12:43:51Z", "closed_at": "2020-08-07T12:43:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using the following python tune script:\r\n\r\n**hpo.py**\r\n\r\n```python\r\n# Install and import libraries\r\nimport time\r\nfrom lightgbm import LGBMClassifier\r\nimport pandas as pd\r\nimport ray\r\nfrom sklearn.datasets import load_breast_cancer\r\nfrom sklearn.metrics import f1_score\r\nfrom sklearn.model_selection import train_test_split\r\nfrom tune_sklearn import TuneSearchCV\r\n\r\n# Start timer\r\nstart = time.time()\r\n\r\n# Initialize Ray\r\nray.init(address='auto')\r\n\r\n# Load breast cancer dataset\r\ncancer = load_breast_cancer()\r\nX = cancer.data\r\ny = cancer.target\r\n\r\n# Split into train and test\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\r\n\r\n# Initialize estimator\r\nmodel = LGBMClassifier()\r\n\r\n# Initialize parameter distributions\r\nparam_dists = {\r\n    'boosting_type': ['gbdt'],\r\n    'colsample_bytree': (0.8, 0.9, 'log-uniform'),\r\n    'reg_alpha': (1.1, 1.3),\r\n    'reg_lambda': (1.1, 1.3),\r\n    'min_split_gain': (0.3, 0.4),\r\n    'subsample': (0.7, 0.9),\r\n    'subsample_freq': (20, 21)\r\n}\r\n\r\n# Initialize tuner\r\ntuner = TuneSearchCV(\r\n    model,\r\n    param_dists,\r\n    n_iter=20,\r\n    scoring='f1_weighted',\r\n    n_jobs=-1,\r\n    verbose=2,\r\n    max_iters=10,\r\n    search_optimization='bayesian',\r\n    use_gpu=True,\r\n)\r\n\r\n# Tune hyperparameters\r\ntuner.fit(X_train, y_train)\r\nprint('Best Parameters :', tuner.best_params_)\r\n\r\n# Get cross-validated results\r\ndf_cv = pd.DataFrame(tuner.cv_results_)\r\n\r\n# Predict using best hyperparameters\r\ny_pred = tuner.predict(X_test)\r\nprint('F1 Score:', f1_score(y_test, y_pred, average='weighted'))\r\n\r\n# Get elapsed time\r\nend = time.time()\r\nprint('Elapsed Time :', (end - start))\r\n\r\n# Shutdown Ray\r\nray.shutdown()\r\n```\r\n\r\nand the following configuration file:\r\n\r\n**tune-default-hpo.yaml**\r\n\r\n```yaml\r\ncluster_name: tune-default\r\nprovider: {type: aws, region: us-east-2}\r\nauth: {ssh_user: ubuntu}\r\nmin_workers: 3\r\nmax_workers: 3\r\n\r\nhead_node:\r\n    InstanceType: c5.xlarge\r\n    ImageId: ami-08bf49c7b3a0c761e\r\n\r\n    # Run workers on spot by default. Comment this out to use on-demand.\r\n    InstanceMarketOptions:\r\n        MarketType: spot\r\n        SpotOptions:\r\n            MaxPrice: \"1\"  # Max Hourly Price\r\n\r\n# Provider-specific config for worker nodes, e.g. instance type.\r\nworker_nodes:\r\n    InstanceType: m5.large\r\n    ImageId: ami-08bf49c7b3a0c761e\r\n\r\n    # Run workers on spot by default. Comment this out to use on-demand.\r\n    InstanceMarketOptions:\r\n        MarketType: spot\r\n        SpotOptions:\r\n            MaxPrice: \"1\"  # Max Hourly Price\r\n\r\nsetup_commands: # Set up each node.\r\n    - pip install lightgbm ray scikit-optimize torch torchvision tabulate tensorboard tune_sklearn\r\n```\r\n\r\n**Command**: `ray submit tune-default-hpo.yaml hpo.py --start --stop`\r\n\r\nQuestions:\r\n1. Ray is not terminating the spot instances if the connection is lost. Is there a way to configure ray to terminate them automatically?\r\n2. Also is there a python API to deploy the instances instead of running the command on the terminal?\r\n3. How do I configure Ray to deploy on a single spot instance and not a cluster?\r\n4. How can I set the storage size for the spot instances?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9705", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9705/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9705/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9705/events", "html_url": "https://github.com/ray-project/ray/issues/9705", "id": 665604702, "node_id": "MDU6SXNzdWU2NjU2MDQ3MDI=", "number": 9705, "title": "[ray] Actor cannot inherit from ABC", "user": {"login": "51616", "id": 20886355, "node_id": "MDQ6VXNlcjIwODg2MzU1", "avatar_url": "https://avatars2.githubusercontent.com/u/20886355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/51616", "html_url": "https://github.com/51616", "followers_url": "https://api.github.com/users/51616/followers", "following_url": "https://api.github.com/users/51616/following{/other_user}", "gists_url": "https://api.github.com/users/51616/gists{/gist_id}", "starred_url": "https://api.github.com/users/51616/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/51616/subscriptions", "organizations_url": "https://api.github.com/users/51616/orgs", "repos_url": "https://api.github.com/users/51616/repos", "events_url": "https://api.github.com/users/51616/events{/privacy}", "received_events_url": "https://api.github.com/users/51616/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}, {"id": 2090776337, "node_id": "MDU6TGFiZWwyMDkwNzc2MzM3", "url": "https://api.github.com/repos/ray-project/ray/labels/triage", "name": "triage", "color": "b0e7f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-25T15:29:50Z", "updated_at": "2020-07-27T08:05:28Z", "closed_at": "2020-07-27T08:05:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is the problem?\r\n\r\nSeems like the actor class cannot be inherited from ABC superclass.\r\n\r\n### Reproduction (REQUIRED)\r\n```\r\nclass A(ABC):\r\n    def __init__(self,x):\r\n        self.x = x\r\n\r\n@ray.remote\r\nclass B(A):\r\n    def __init__(self,x):\r\n        super().__init__(x)\r\n\r\nb_instance = B.remote(1)\r\n```\r\n![image](https://user-images.githubusercontent.com/20886355/88460417-5863bf80-cec6-11ea-8387-a699c9f8b873.png)\r\n\r\n\r\nPS. The issue does not appear if class A does not inherit the ABC", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9704", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9704/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9704/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9704/events", "html_url": "https://github.com/ray-project/ray/issues/9704", "id": 665598695, "node_id": "MDU6SXNzdWU2NjU1OTg2OTU=", "number": 9704, "title": "[ray] Usage of @property in an actor class", "user": {"login": "51616", "id": 20886355, "node_id": "MDQ6VXNlcjIwODg2MzU1", "avatar_url": "https://avatars2.githubusercontent.com/u/20886355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/51616", "html_url": "https://github.com/51616", "followers_url": "https://api.github.com/users/51616/followers", "following_url": "https://api.github.com/users/51616/following{/other_user}", "gists_url": "https://api.github.com/users/51616/gists{/gist_id}", "starred_url": "https://api.github.com/users/51616/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/51616/subscriptions", "organizations_url": "https://api.github.com/users/51616/orgs", "repos_url": "https://api.github.com/users/51616/repos", "events_url": "https://api.github.com/users/51616/events{/privacy}", "received_events_url": "https://api.github.com/users/51616/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}, {"id": 2090776337, "node_id": "MDU6TGFiZWwyMDkwNzc2MzM3", "url": "https://api.github.com/repos/ray-project/ray/labels/triage", "name": "triage", "color": "b0e7f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-25T14:53:36Z", "updated_at": "2020-07-27T19:26:55Z", "closed_at": "2020-07-27T19:26:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is the problem?\r\n\r\nSeems like the use of `@property` in actor class cannot be used with ray actor.\r\n\r\n### Reproduction (REQUIRED)\r\n```\r\n@ray.remote\r\nclass A:\r\n    def __init__(self,x):\r\n        self.x = x\r\n\r\n    @property\r\n    def x_square(self):\r\n        return x**2\r\n\r\na_instance = a.remote(x=5)\r\nray.get(a_instance.x_square.remote())\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/20886355/88459663-3451af80-cec1-11ea-8cf6-b8472f10f6a2.png)\r\n\r\nIf we cannot run your script, we cannot fix your issue.\r\n\r\n- [ ] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [ ] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9702", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9702/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9702/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9702/events", "html_url": "https://github.com/ray-project/ray/issues/9702", "id": 665583429, "node_id": "MDU6SXNzdWU2NjU1ODM0Mjk=", "number": 9702, "title": "[tune] Finding best checkpoint without finished trials", "user": {"login": "javadan", "id": 3356298, "node_id": "MDQ6VXNlcjMzNTYyOTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3356298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/javadan", "html_url": "https://github.com/javadan", "followers_url": "https://api.github.com/users/javadan/followers", "following_url": "https://api.github.com/users/javadan/following{/other_user}", "gists_url": "https://api.github.com/users/javadan/gists{/gist_id}", "starred_url": "https://api.github.com/users/javadan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/javadan/subscriptions", "organizations_url": "https://api.github.com/users/javadan/orgs", "repos_url": "https://api.github.com/users/javadan/repos", "events_url": "https://api.github.com/users/javadan/events{/privacy}", "received_events_url": "https://api.github.com/users/javadan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-07-25T13:14:07Z", "updated_at": "2020-07-28T20:20:28Z", "closed_at": "2020-07-28T20:20:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm trying out PBT & ARS/PPO for basic locomotion in my robot simulation, where I'm rewarding moving forward and not falling over.\r\n\r\nI'm on my i3 laptop.  Learning is slow, and I need a workflow that makes more sense.\r\n\r\nI currently leave it running overnight with the GUI off, then I kill it, enable the GUI, and have it set up to start off from the last checkpoint.  \r\n\r\nFrom tensorboard I can see the reward mean is going up and down, and occasionally it makes it past the first step.  Most of the time it just fidgets around and falls over.\r\n\r\nSo I want to rather start training again from a peak in training, where the policy checkpoint has learned to take a step forward.\r\n\r\nAll the docs for finding the best checkpoints are for finished trials though.\r\nShould I rather limit trial lengths, and get the best checkpoint through the trial analysis object?\r\n\r\nOr is there an API way to restore from the best checkpoint for an unfinished trial?\r\nI see progress.csv keeps track of episode_mean_reward, so I can probably work out something, but would rather do things 'correctly'.\r\n\r\nThanks for the help\r\nRegards\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9701", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9701/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9701/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9701/events", "html_url": "https://github.com/ray-project/ray/issues/9701", "id": 665569779, "node_id": "MDU6SXNzdWU2NjU1Njk3Nzk=", "number": 9701, "title": "[tune] Can't retrieve saved model using Trainable api", "user": {"login": "nscotto", "id": 44670538, "node_id": "MDQ6VXNlcjQ0NjcwNTM4", "avatar_url": "https://avatars3.githubusercontent.com/u/44670538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nscotto", "html_url": "https://github.com/nscotto", "followers_url": "https://api.github.com/users/nscotto/followers", "following_url": "https://api.github.com/users/nscotto/following{/other_user}", "gists_url": "https://api.github.com/users/nscotto/gists{/gist_id}", "starred_url": "https://api.github.com/users/nscotto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nscotto/subscriptions", "organizations_url": "https://api.github.com/users/nscotto/orgs", "repos_url": "https://api.github.com/users/nscotto/repos", "events_url": "https://api.github.com/users/nscotto/events{/privacy}", "received_events_url": "https://api.github.com/users/nscotto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-25T11:34:56Z", "updated_at": "2020-07-25T15:04:52Z", "closed_at": "2020-07-25T15:04:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nThis is my attempt at  using ray tune algorithms for tuning a keras model, it's a CIFAR100 example with options for using bohb, asha, bayesian optimisation or grid search. Currently I am having troubles finding the right way to use the `Trainable` interface, despite having gone through the examples, more precisely I can't manage to use the `_save` and `_restore` properly... \r\n\r\nThis is the error:\r\n```\r\nOSError: SavedModel file does not exist at: /home/user/ray_results/CIFAR_100_classifier_-_search:_bohb_-_sched:_bohb/CIFAR100Trainable_7_gamma=0.40277,lr=0.010388,max_train_batch=10,step=7_2020-07-25_11-14-20l2njx6hg/tmpsx89i4x2restore_from_object/checkpoint/checkpoint/{saved_model.pbtxt|saved_model.pb}\r\n```\r\n\r\n*Edit:* I printed the paths when saving/restoring on another run, if that helps:\r\n- save:\r\n  `/home/user/ray_results/CIFAR_100_classifier_-_search:_bohb_-_sched:_bohb/CIFAR100Trainable_2_gamma=0.66874,lr=0.0059214,max_train_batch=10,step=5_2020-07-25_14-08-51w0sgzogq/tmpztjedkn6save_to_object/checkpoint_1/checkpoint`\r\n- restore:\r\n  `/home/user/ray_results/CIFAR_100_classifier_-_search:_bohb_-_sched:_bohb/CIFAR100Trainable_2_gamma=0.66874,lr=0.0059214,max_train_batch=10,step=5_2020-07-25_14-08-51w0sgzogq/tmpc3fmz1h0restore_from_object/checkpoint/checkpoint/{saved_model.pbtxt|saved_model.pb}`\r\n\r\nHere's the code (sorry for the example not being minimalist):\r\n```PYTHON\r\nimport os\r\nimport json\r\nfrom datetime import datetime\r\n\r\nimport numpy as np\r\nfrom tensorflow.keras.datasets.cifar100 import load_data\r\n\r\nimport ConfigSpace as CS\r\n\r\nimport ray\r\nfrom ray import tune\r\nfrom ray.tune.schedulers import ASHAScheduler\r\nfrom ray.tune.suggest.ax import AxSearch\r\nfrom ray.tune.schedulers.hb_bohb import HyperBandForBOHB\r\nfrom ray.tune.suggest.bohb import TuneBOHB\r\n\r\n\r\ndef map_augmentation(input_shape):\r\n    import tensorflow as tf\r\n    HEIGHT, WIDTH, NUM_CHANNELS = input_shape\r\n\r\n    def augmentation_fn(x, y):\r\n        x = tf.image.resize_with_crop_or_pad(x, HEIGHT + 8, WIDTH + 8)\r\n        x = tf.image.random_crop(x, [HEIGHT, WIDTH, NUM_CHANNELS])\r\n        x = tf.image.random_flip_left_right(x)\r\n        return x, y\r\n\r\n    return augmentation_fn\r\n\r\n\r\ndef map_resize(input_shape):\r\n    import tensorflow as tf\r\n    HEIGHT, WIDTH, NUM_CHANNELS = input_shape\r\n\r\n    def augmentation_fn(x, y):\r\n        x = tf.image.resize_with_crop_or_pad(x, HEIGHT + 8, WIDTH + 8)\r\n        x = tf.image.random_crop(x, [HEIGHT, WIDTH, NUM_CHANNELS])\r\n        return x, y\r\n\r\n    return augmentation_fn\r\n\r\n\r\ndef map_preprocess(x, y):\r\n    import tensorflow as tf\r\n    import tensorflow.keras.applications as app\r\n    x = tf.cast(x, tf.float32)\r\n    x = app.mobilenet.preprocess_input(x)\r\n\r\n    y = tf.cast(y, tf.float32)\r\n\r\n    return (x, y)\r\n\r\n\r\ndef get_classifier(input_shape, classes):\r\n    import tensorflow as tf\r\n    import tensorflow.keras.applications as app\r\n\r\n    feature_extractor_layer = app.mobilenet.MobileNet(\r\n        input_shape=input_shape, include_top=False, weights='imagenet')\r\n    global_average_layer = tf.keras.layers.GlobalAveragePooling2D()\r\n    prediction_layer = tf.keras.layers.Dense(classes)\r\n\r\n    model = tf.keras.Sequential([\r\n        feature_extractor_layer,\r\n        global_average_layer,\r\n        prediction_layer,\r\n    ])\r\n\r\n    return model\r\n\r\n\r\nclass CIFAR100Trainable(tune.Trainable):\r\n    def _setup(self, config):\r\n        self.id = datetime.timestamp(datetime.now())\r\n        print(f'{self.id}: init')\r\n\r\n        self.input_shape = (32, 32, 3)\r\n        self.classes = 100\r\n\r\n        self.comfig = config\r\n\r\n        # IMPORTANT: See the above note.\r\n        import tensorflow as tf\r\n        train_data, test_data = load_data()\r\n\r\n        self.train_ds = tf.data.Dataset.from_tensor_slices(train_data) \\\r\n            .map(map_augmentation(self.input_shape)) \\\r\n            .map(map_preprocess) \\\r\n            .batch(config.get(\"batch_size\", 128))\r\n\r\n        self.test_ds = tf.data.Dataset.from_tensor_slices(test_data) \\\r\n            .map(map_resize(self.input_shape)) \\\r\n            .map(map_preprocess) \\\r\n            .batch(config.get(\"batch_size\", 128))\r\n\r\n        max_train_batch = config.get('max_train_batch')\r\n        if max_train_batch:\r\n            self.train_ds = self.train_ds.take(max_train_batch)\r\n            self.test_ds = self.test_ds.take(max_train_batch)\r\n\r\n        model = get_classifier(self.input_shape, self.classes)\r\n        steps = np.arange(config.get('step'), config.get('epochs'), config.get('step'))\r\n        lr_steps = [config.get('lr')*config.get('gamma')**i for i in range(len(steps)+1)]\r\n        lr_scheduler = tf.keras.optimizers.schedules.PiecewiseConstantDecay(steps, lr_steps) if steps else config.get('lr')\r\n        opt = tf.keras.optimizers.Adam(learning_rate=lr_scheduler)\r\n        model.compile(\r\n            loss='sparse_categorical_crossentropy',\r\n            optimizer=opt,\r\n            metrics=['accuracy'],\r\n        )\r\n        self.model = model\r\n\r\n\r\n    def _train(self):\r\n        import tensorflow as tf\r\n\r\n        print(f'{self.id}: epoch {self.iteration}')\r\n        self.model.fit(self.train_ds, verbose=args.verbose_fit)\r\n        _, accuracy = self.model.evaluate(self.test_ds, verbose=args.verbose_evaluate)\r\n        # It is important to return tf.Tensors as numpy objects.\r\n        return {\r\n            \"mean_accuracy\": accuracy,\r\n        }\r\n\r\n    def _save(self, checkpoint_dir):\r\n        model_path = os.path.join(checkpoint_dir, 'checkpoint')\r\n        self.model.save(model_path)\r\n        return model_path\r\n\r\n    def _restore(self, checkpoint_dir):\r\n        import tensorflow as tf\r\n        model_path = os.path.join(checkpoint_dir, 'checkpoint')\r\n        self.model = tf.saved_model.load(model_path)\r\n\r\n    def _stop(self):\r\n        # If need, save your model when exit.\r\n        # saved_path = self.model.save(self.logdir)\r\n        # print(\"save model at: \", saved_path)\r\n        pass\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    import argparse\r\n    from ax.service.ax_client import AxClient\r\n\r\n    parser = argparse.ArgumentParser()\r\n    parser.add_argument(\r\n        \"--epochs\", type=int, default=20, help=\"Number of epochs (bypassed by --smoke-test)\")\r\n    parser.add_argument(\r\n        \"--gpu\", type=float, default=0, help=\"Number of gpu per trial\")\r\n    parser.add_argument(\r\n        \"--smoke-test\", action=\"store_true\", help=\"Finish quickly for testing\")\r\n    parser.add_argument(\r\n        \"--reuse-actors\", action=\"store_true\", help=\"Reuse actor.\")\r\n    parser.add_argument(\r\n        '--verbose', '-v', action='store_true', help='Verbose mode.')\r\n    grp_train = parser.add_argument_group('Training')\r\n    grp_train.add_argument(\r\n        '--verbose-fit', action='store_true', help='Verbose mode for keras fit.')\r\n    grp_train.add_argument(\r\n        '--verbose-evaluate', action='store_true', help='Verbose mode for keras evaluate.')\r\n    grp_train.add_argument(\r\n        '--max-train-batch', type=int, default=0, help='Maximum batch per epoch.')\r\n    grp_search = parser.add_argument_group('Search')\r\n    grp_search.add_argument(\r\n        '--search', choices=['gs', 'bo', 'bohb'], default='gs', help='Search algorithm')\r\n    grp_scheduler = parser.add_argument_group('Scheduler')\r\n    grp_scheduler.add_argument(\r\n        '--scheduler', choices=['none', 'asha'], default='none', help='Scheduler algorithm')\r\n    grp_scheduler.add_argument(\r\n        '--grace-period', type=int, default=1, help='Only stop trials at least this old in epoch.')\r\n    grp_scheduler.add_argument(\r\n        '--reduction-factor', type=int, default=4, help='Used to set halving rate and amount.')\r\n    args = parser.parse_args()\r\n\r\n    if args.smoke_test:\r\n        args.max_train_batch = 10\r\n\r\n    ray.init(webui_host='127.0.0.1')\r\n\r\n    load_data()  # we download data on the driver to avoid race conditions.\r\n\r\n    if args.search == 'bo':\r\n        print('Using bo')\r\n        client = AxClient(enforce_sequential_optimization=False)\r\n        parameters = [\r\n            {\r\n                \"name\": \"lr\",\r\n                \"type\": \"range\",\r\n                \"bounds\": [0.001, 0.1],\r\n                \"log_scale\": True\r\n            },\r\n            {\r\n                \"name\": \"gamma\",\r\n                \"type\": \"range\",\r\n                \"bounds\": [0.1, 1.0],\r\n                \"log_scale\": False\r\n            },\r\n            {\r\n                \"name\": \"step\",\r\n                \"type\": \"choice\",\r\n                \"values\": [5, 7],\r\n            },\r\n            {\r\n                \"name\": \"max_train_batch\",\r\n                \"type\": \"fixed\",\r\n                \"value\": args.max_train_batch\r\n            },\r\n        ]\r\n        client.create_experiment(\r\n            parameters=parameters,\r\n            objective_name=\"mean_accuracy\",\r\n        )\r\n        search = AxSearch(client)\r\n        config = dict(\r\n            num_samples=12,  # same number as the grid search\r\n        )\r\n    elif args.search == 'bohb':\r\n        print('Using bohb search')\r\n        # BOHB uses ConfigSpace for their hyperparameter search space\r\n        config_space = CS.ConfigurationSpace()\r\n        config_space.add_hyperparameter(\r\n            CS.UniformFloatHyperparameter(\"lr\", lower=0.001, upper=0.1))\r\n        config_space.add_hyperparameter(\r\n            CS.UniformFloatHyperparameter(\"gamma\", lower=0.1, upper=1.))\r\n        config_space.add_hyperparameter(\r\n            CS.CategoricalHyperparameter('step', choices=[5, 7]))\r\n        config_space.add_hyperparameter(\r\n            CS.CategoricalHyperparameter('max_train_batch', choices=[args.max_train_batch]))\r\n\r\n        experiment_metrics = dict(metric=\"mean_accuracy\", mode=\"max\")\r\n        search = TuneBOHB(\r\n            config_space, **experiment_metrics)\r\n        config = dict(\r\n            num_samples=12,  # same number as the grid search\r\n        )\r\n        args.scheduler = 'bohb'  # override args scheduler\r\n    else:\r\n        print('Using grid search')\r\n        parameters = {\r\n            \"lr\": tune.grid_search([0.1, 0.01, 0.001]),\r\n            \"gamma\": tune.grid_search([0.8, 0.5]),\r\n            \"step\": tune.grid_search([5, 7]),\r\n            \"max_train_batch\": args.max_train_batch,\r\n        }\r\n        config = dict(config=parameters)\r\n\r\n    if args.scheduler == 'asha':\r\n        print('Using ASHA scheduler')\r\n        sched = ASHAScheduler(\r\n            metric='mean_accuracy',\r\n            mode='max',\r\n            max_t=100,\r\n            grace_period=args.grace_period,\r\n            reduction_factor=args.reduction_factor,\r\n        )\r\n    elif args.scheduler == 'bohb':\r\n        print('Using bohb scheduler')\r\n        sched = HyperBandForBOHB(\r\n            time_attr=\"training_iteration\",\r\n            max_t=100,\r\n            reduction_factor=args.reduction_factor,\r\n            **experiment_metrics)\r\n    else:\r\n        print('Using no scheduler')\r\n        sched = None\r\n\r\n    elapsed = datetime.now()\r\n\r\n    try:\r\n        import mltracked\r\n    except:\r\n        local_dir = None\r\n    else:\r\n        local_dir = '/tensorboard'\r\n\r\n    analysis = tune.run(\r\n        CIFAR100Trainable,\r\n        name=f'CIFAR_100_classifier_-_search:_{args.search}_-_sched:_{args.scheduler}',\r\n        stop={\"training_iteration\": 5 if args.smoke_test else args.epochs},\r\n        search_alg=search,\r\n        scheduler=sched,\r\n        **config,\r\n        resources_per_trial={'gpu': args.gpu},\r\n        reuse_actors=args.reuse_actors,\r\n        verbose=args.verbose,\r\n        local_dir=local_dir,\r\n    )\r\n\r\n    elapsed = datetime.now() - elapsed\r\n\r\n    print(f'Best config: {analysis.get_best_config(\"mean_accuracy\")}')\r\n    print(f'Best trial: {analysis.get_best_trial(\"mean_accuracy\")}')\r\n    print(f'Elapsed time: {elapsed.total_seconds()}s')\r\n```\r\nI run it with\r\n```bash\r\npython tf_cifar100.py --smoke-stest --gpu 1 --search bohb\r\n```\r\n\r\nRay: 0.8.6\r\nTensorflow: 2.1.0\r\nPython: 3.7\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9698", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9698/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9698/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9698/events", "html_url": "https://github.com/ray-project/ray/issues/9698", "id": 665430300, "node_id": "MDU6SXNzdWU2NjU0MzAzMDA=", "number": 9698, "title": "[GCS Actor Management] `test_dead_actors` release test is flaky. GCS fails with check failures.", "user": {"login": "rkooo567", "id": 18510752, "node_id": "MDQ6VXNlcjE4NTEwNzUy", "avatar_url": "https://avatars0.githubusercontent.com/u/18510752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rkooo567", "html_url": "https://github.com/rkooo567", "followers_url": "https://api.github.com/users/rkooo567/followers", "following_url": "https://api.github.com/users/rkooo567/following{/other_user}", "gists_url": "https://api.github.com/users/rkooo567/gists{/gist_id}", "starred_url": "https://api.github.com/users/rkooo567/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rkooo567/subscriptions", "organizations_url": "https://api.github.com/users/rkooo567/orgs", "repos_url": "https://api.github.com/users/rkooo567/repos", "events_url": "https://api.github.com/users/rkooo567/events{/privacy}", "received_events_url": "https://api.github.com/users/rkooo567/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1805253707, "node_id": "MDU6TGFiZWwxODA1MjUzNzA3", "url": "https://api.github.com/repos/ray-project/ray/labels/P0", "name": "P0", "color": "cc0507", "default": false, "description": "Issue that must be fixed in short order"}, {"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rkooo567", "id": 18510752, "node_id": "MDQ6VXNlcjE4NTEwNzUy", "avatar_url": "https://avatars0.githubusercontent.com/u/18510752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rkooo567", "html_url": "https://github.com/rkooo567", "followers_url": "https://api.github.com/users/rkooo567/followers", "following_url": "https://api.github.com/users/rkooo567/following{/other_user}", "gists_url": "https://api.github.com/users/rkooo567/gists{/gist_id}", "starred_url": "https://api.github.com/users/rkooo567/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rkooo567/subscriptions", "organizations_url": "https://api.github.com/users/rkooo567/orgs", "repos_url": "https://api.github.com/users/rkooo567/repos", "events_url": "https://api.github.com/users/rkooo567/events{/privacy}", "received_events_url": "https://api.github.com/users/rkooo567/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rkooo567", "id": 18510752, "node_id": "MDQ6VXNlcjE4NTEwNzUy", "avatar_url": "https://avatars0.githubusercontent.com/u/18510752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rkooo567", "html_url": "https://github.com/rkooo567", "followers_url": "https://api.github.com/users/rkooo567/followers", "following_url": "https://api.github.com/users/rkooo567/following{/other_user}", "gists_url": "https://api.github.com/users/rkooo567/gists{/gist_id}", "starred_url": "https://api.github.com/users/rkooo567/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rkooo567/subscriptions", "organizations_url": "https://api.github.com/users/rkooo567/orgs", "repos_url": "https://api.github.com/users/rkooo567/repos", "events_url": "https://api.github.com/users/rkooo567/events{/privacy}", "received_events_url": "https://api.github.com/users/rkooo567/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/ray-project/ray/milestones/2", "html_url": "https://github.com/ray-project/ray/milestone/2", "labels_url": "https://api.github.com/repos/ray-project/ray/milestones/2/labels", "id": 5657594, "node_id": "MDk6TWlsZXN0b25lNTY1NzU5NA==", "number": 2, "title": "Turn On GCS Actor Management By Default", "description": "", "creator": {"login": "rkooo567", "id": 18510752, "node_id": "MDQ6VXNlcjE4NTEwNzUy", "avatar_url": "https://avatars0.githubusercontent.com/u/18510752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rkooo567", "html_url": "https://github.com/rkooo567", "followers_url": "https://api.github.com/users/rkooo567/followers", "following_url": "https://api.github.com/users/rkooo567/following{/other_user}", "gists_url": "https://api.github.com/users/rkooo567/gists{/gist_id}", "starred_url": "https://api.github.com/users/rkooo567/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rkooo567/subscriptions", "organizations_url": "https://api.github.com/users/rkooo567/orgs", "repos_url": "https://api.github.com/users/rkooo567/repos", "events_url": "https://api.github.com/users/rkooo567/events{/privacy}", "received_events_url": "https://api.github.com/users/rkooo567/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 14, "state": "closed", "created_at": "2020-07-15T18:05:48Z", "updated_at": "2020-07-30T17:20:17Z", "due_on": null, "closed_at": "2020-07-29T06:11:22Z"}, "comments": 2, "created_at": "2020-07-24T21:34:29Z", "updated_at": "2020-07-30T17:20:17Z", "closed_at": "2020-07-30T17:20:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is the problem?\r\n\r\n*Ray version and other system information (Python version, TensorFlow version, OS):*\r\n![image](https://user-images.githubusercontent.com/18510752/88437114-9d9acb00-cdba-11ea-9318-8336fdb40462.png)\r\n\r\nTests occasionally failed with check failures. There must be a hidden race condition here. Could be related to flaky `test_multi_node`. \r\n\r\n### Reproduction (REQUIRED)\r\nPlease provide a script that can be run to reproduce the issue. The script should have **no external library dependencies** (i.e., use fake or mock data / environments):\r\n\r\nRun `test_dead_actors.py` with the specified cluster configuration.\r\n\r\n- [ ] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [ ] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9686", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9686/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9686/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9686/events", "html_url": "https://github.com/ray-project/ray/issues/9686", "id": 665282734, "node_id": "MDU6SXNzdWU2NjUyODI3MzQ=", "number": 9686, "title": "[Tune Documentation] Fix Logging Docs", "user": {"login": "amogkam", "id": 8068268, "node_id": "MDQ6VXNlcjgwNjgyNjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/8068268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amogkam", "html_url": "https://github.com/amogkam", "followers_url": "https://api.github.com/users/amogkam/followers", "following_url": "https://api.github.com/users/amogkam/following{/other_user}", "gists_url": "https://api.github.com/users/amogkam/gists{/gist_id}", "starred_url": "https://api.github.com/users/amogkam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amogkam/subscriptions", "organizations_url": "https://api.github.com/users/amogkam/orgs", "repos_url": "https://api.github.com/users/amogkam/repos", "events_url": "https://api.github.com/users/amogkam/events{/privacy}", "received_events_url": "https://api.github.com/users/amogkam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1805253707, "node_id": "MDU6TGFiZWwxODA1MjUzNzA3", "url": "https://api.github.com/repos/ray-project/ray/labels/P0", "name": "P0", "color": "cc0507", "default": false, "description": "Issue that must be fixed in short order"}, {"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "amogkam", "id": 8068268, "node_id": "MDQ6VXNlcjgwNjgyNjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/8068268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amogkam", "html_url": "https://github.com/amogkam", "followers_url": "https://api.github.com/users/amogkam/followers", "following_url": "https://api.github.com/users/amogkam/following{/other_user}", "gists_url": "https://api.github.com/users/amogkam/gists{/gist_id}", "starred_url": "https://api.github.com/users/amogkam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amogkam/subscriptions", "organizations_url": "https://api.github.com/users/amogkam/orgs", "repos_url": "https://api.github.com/users/amogkam/repos", "events_url": "https://api.github.com/users/amogkam/events{/privacy}", "received_events_url": "https://api.github.com/users/amogkam/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "amogkam", "id": 8068268, "node_id": "MDQ6VXNlcjgwNjgyNjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/8068268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amogkam", "html_url": "https://github.com/amogkam", "followers_url": "https://api.github.com/users/amogkam/followers", "following_url": "https://api.github.com/users/amogkam/following{/other_user}", "gists_url": "https://api.github.com/users/amogkam/gists{/gist_id}", "starred_url": "https://api.github.com/users/amogkam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amogkam/subscriptions", "organizations_url": "https://api.github.com/users/amogkam/orgs", "repos_url": "https://api.github.com/users/amogkam/repos", "events_url": "https://api.github.com/users/amogkam/events{/privacy}", "received_events_url": "https://api.github.com/users/amogkam/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-24T16:32:39Z", "updated_at": "2020-07-24T18:20:53Z", "closed_at": "2020-07-24T18:20:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is the problem?\r\n\r\nThe Tune Logging page (https://docs.ray.io/en/master/tune/api_docs/logging.html) in the master docs still has references to `tune.track` which is now deprecated. This has led to some confusion with users https://github.com/ray-project/ray/issues/9685. We need to update the docs to show proper logging using the functional API.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9685", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9685/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9685/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9685/events", "html_url": "https://github.com/ray-project/ray/issues/9685", "id": 665266592, "node_id": "MDU6SXNzdWU2NjUyNjY1OTI=", "number": 9685, "title": "[tune] Cannot access logdir in functional API", "user": {"login": "renatobellotti", "id": 10884299, "node_id": "MDQ6VXNlcjEwODg0Mjk5", "avatar_url": "https://avatars1.githubusercontent.com/u/10884299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/renatobellotti", "html_url": "https://github.com/renatobellotti", "followers_url": "https://api.github.com/users/renatobellotti/followers", "following_url": "https://api.github.com/users/renatobellotti/following{/other_user}", "gists_url": "https://api.github.com/users/renatobellotti/gists{/gist_id}", "starred_url": "https://api.github.com/users/renatobellotti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/renatobellotti/subscriptions", "organizations_url": "https://api.github.com/users/renatobellotti/orgs", "repos_url": "https://api.github.com/users/renatobellotti/repos", "events_url": "https://api.github.com/users/renatobellotti/events{/privacy}", "received_events_url": "https://api.github.com/users/renatobellotti/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}, {"id": 2090776337, "node_id": "MDU6TGFiZWwyMDkwNzc2MzM3", "url": "https://api.github.com/repos/ray-project/ray/labels/triage", "name": "triage", "color": "b0e7f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-24T16:04:01Z", "updated_at": "2020-07-24T19:00:35Z", "closed_at": "2020-07-24T18:20:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is the problem?\r\nI am trying to save something at the end of the training. To achieve this, I'm trying to get the save directory for the trial. The code from the [documentation](https://docs.ray.io/en/latest/tune/api_docs/logging.html#custom-loggers) (\"Trainable Logging\" --> \"Functional API\") is as follows:\r\n\r\n```python\r\ndef trainable(config):\r\n    library.init(\r\n        name=trial_id,\r\n        id=trial_id,\r\n        resume=trial_id,\r\n        reinit=True,\r\n        allow_val_change=True)\r\n    library.set_log_path(tune.track.logdir)\r\n\r\n    for step in range(100):\r\n        library.log_model(...)\r\n        library.log(results, step=step)\r\n        tune.track.log(results)\r\n```\r\n\r\nTo me, it is not clear where the name ``library`` comes from. So I was assuming  this had nothing to do with my problem, and thought the relevant part was the ``tune.track.logdir`` variable. However, that variable does not exist.\r\n\r\nWhen I run the example code, I get the following error message:\r\n\r\n```\r\nAttributeError: module 'ray.tune' has no attribute 'track'\r\n```\r\n\r\nI'm new to ray and tune, so perhaps there is another way to get the log directory for the trial. I found the documentation a bit sparse about this issue if the functional API is used.\r\n\r\n### Reproduction (REQUIRED)\r\nRay version: 0.8.6 (from PyPI)\r\n\r\n```python\r\nimport ray\r\nfrom ray import tune\r\n\r\ndef training_function(config):\r\n    # see:\r\n    # https://docs.ray.io/en/latest/tune/api_docs/logging.html\r\n    # (section \"Trainable Logging\")\r\n    tune.report(logdir=tune.track.logdir)\r\n\r\nray.init()\r\n\r\nanalysis = tune.run(training_function,\r\n                    config={\r\n                        'dummy': [1],\r\n                    },\r\n                    local_dir='test_local_dir',\r\n                    num_samples=1,\r\n                    resources_per_trial={'cpu': 1},\r\n                    queue_trials=False)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9667", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9667/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9667/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9667/events", "html_url": "https://github.com/ray-project/ray/issues/9667", "id": 664564768, "node_id": "MDU6SXNzdWU2NjQ1NjQ3Njg=", "number": 9667, "title": "[RLlib] Bugs in PyTorch version of DDPG", "user": {"login": "raphaelavalos", "id": 28591322, "node_id": "MDQ6VXNlcjI4NTkxMzIy", "avatar_url": "https://avatars1.githubusercontent.com/u/28591322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raphaelavalos", "html_url": "https://github.com/raphaelavalos", "followers_url": "https://api.github.com/users/raphaelavalos/followers", "following_url": "https://api.github.com/users/raphaelavalos/following{/other_user}", "gists_url": "https://api.github.com/users/raphaelavalos/gists{/gist_id}", "starred_url": "https://api.github.com/users/raphaelavalos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raphaelavalos/subscriptions", "organizations_url": "https://api.github.com/users/raphaelavalos/orgs", "repos_url": "https://api.github.com/users/raphaelavalos/repos", "events_url": "https://api.github.com/users/raphaelavalos/events{/privacy}", "received_events_url": "https://api.github.com/users/raphaelavalos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2040474101, "node_id": "MDU6TGFiZWwyMDQwNDc0MTAx", "url": "https://api.github.com/repos/ray-project/ray/labels/P2", "name": "P2", "color": "eef747", "default": false, "description": "Important issue, but not time-critical"}, {"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}, {"id": 1890823772, "node_id": "MDU6TGFiZWwxODkwODIzNzcy", "url": "https://api.github.com/repos/ray-project/ray/labels/rllib", "name": "rllib", "color": "13437c", "default": false, "description": "RLlib-related issues"}], "state": "closed", "locked": false, "assignee": {"login": "sven1977", "id": 5839854, "node_id": "MDQ6VXNlcjU4Mzk4NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5839854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sven1977", "html_url": "https://github.com/sven1977", "followers_url": "https://api.github.com/users/sven1977/followers", "following_url": "https://api.github.com/users/sven1977/following{/other_user}", "gists_url": "https://api.github.com/users/sven1977/gists{/gist_id}", "starred_url": "https://api.github.com/users/sven1977/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sven1977/subscriptions", "organizations_url": "https://api.github.com/users/sven1977/orgs", "repos_url": "https://api.github.com/users/sven1977/repos", "events_url": "https://api.github.com/users/sven1977/events{/privacy}", "received_events_url": "https://api.github.com/users/sven1977/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sven1977", "id": 5839854, "node_id": "MDQ6VXNlcjU4Mzk4NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5839854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sven1977", "html_url": "https://github.com/sven1977", "followers_url": "https://api.github.com/users/sven1977/followers", "following_url": "https://api.github.com/users/sven1977/following{/other_user}", "gists_url": "https://api.github.com/users/sven1977/gists{/gist_id}", "starred_url": "https://api.github.com/users/sven1977/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sven1977/subscriptions", "organizations_url": "https://api.github.com/users/sven1977/orgs", "repos_url": "https://api.github.com/users/sven1977/repos", "events_url": "https://api.github.com/users/sven1977/events{/privacy}", "received_events_url": "https://api.github.com/users/sven1977/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 23, "created_at": "2020-07-23T15:18:44Z", "updated_at": "2020-07-30T11:14:21Z", "closed_at": "2020-07-28T12:15:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\n\r\nI spotted some bugs in the implementation of DDPG in PyTorch.\r\n* The gradient clipping is not implemented correctly, it uses the 'grad_norm_clipping' parameter instead of 'grad_clip' and the function `ray.rllib.utils.torch_ops.minimize_and_clip` which is not correct. All the others algorithms seems to use `ray.rllib.agents.a3c.a3c_torch_policy.apply_grad_clipping`. I propose to replace minimize_and_clip by the A3C function in torch_ops.\r\n\r\n* In the PyTorch model of DDPG the parameters to bound the action space (range and minimum) are not tracked by PyTorch as they are not registered as parameters. This means that they are not converted to cuda tensors resulting in an error.\r\n\r\n* The target model is placed on the gpu even if ray was not configure to use the gpu.\r\n\r\nI will make a PR with everything. But I don't know if I should replace minimize_and_clip. \r\n\r\n- [x] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [x]  I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9664", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9664/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9664/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9664/events", "html_url": "https://github.com/ray-project/ray/issues/9664", "id": 664438824, "node_id": "MDU6SXNzdWU2NjQ0Mzg4MjQ=", "number": 9664, "title": "[core] Prints in remote functions spam into other processes' terminals", "user": {"login": "aaarne", "id": 30664255, "node_id": "MDQ6VXNlcjMwNjY0MjU1", "avatar_url": "https://avatars1.githubusercontent.com/u/30664255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaarne", "html_url": "https://github.com/aaarne", "followers_url": "https://api.github.com/users/aaarne/followers", "following_url": "https://api.github.com/users/aaarne/following{/other_user}", "gists_url": "https://api.github.com/users/aaarne/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaarne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaarne/subscriptions", "organizations_url": "https://api.github.com/users/aaarne/orgs", "repos_url": "https://api.github.com/users/aaarne/repos", "events_url": "https://api.github.com/users/aaarne/events{/privacy}", "received_events_url": "https://api.github.com/users/aaarne/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}, {"id": 2090776337, "node_id": "MDU6TGFiZWwyMDkwNzc2MzM3", "url": "https://api.github.com/repos/ray-project/ray/labels/triage", "name": "triage", "color": "b0e7f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-23T12:38:57Z", "updated_at": "2020-07-24T12:38:54Z", "closed_at": "2020-07-24T12:38:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is the problem?\r\nPrints in remote functions spam into the stdouts of other ray clients.\r\nEspecially if there are multiple scripts running, you will see the messages printed from within remote function in every terminal. It becomes quite cluttered quickly.\r\n\r\n#### Versions\r\n- python version: 3.6.9\r\n- OS: openSUSE Leap 15\r\n- ray version: 0.8.6\r\n\r\n\r\n### Reproduction (REQUIRED)\r\n1. Start a ray process in head mode:\r\n```bash\r\nray start --head\r\n```\r\n2. Optionally attach workers\r\n3. Start one script using ray. E.g.:\r\n```python\r\nimport time\r\nimport ray; ray.init(address='theaddress', redis_password='thepassword')\r\n\r\n@ray.remote\r\ndef useless():\r\n    time.sleep(1000)\r\n\r\nray.get(useless.remote())\r\n```\r\n4. Start a second script using the same ray instance. E.g.:\r\n```python\r\nimport ray; ray.init(address='theaddress', redis_password='thepassword')\r\n\r\n@ray.remote\r\ndef annoying():\r\n    for i in range(1000):\r\n        print(f\"The number is {i}!\")\r\n\r\nray.get(annoying.remote())\r\n```\r\n\r\n:arrow_right: You will see the prints to the stdout in the terminals of BOTH processes.\r\n\r\n- [x] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [ ] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n\r\n#### Bug or Feature?\r\nIs this considered a bug or a feature?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9662", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9662/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9662/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9662/events", "html_url": "https://github.com/ray-project/ray/issues/9662", "id": 664372677, "node_id": "MDU6SXNzdWU2NjQzNzI2Nzc=", "number": 9662, "title": "Can't reduce num_workers for local node provider", "user": {"login": "AmeerHajAli", "id": 18361764, "node_id": "MDQ6VXNlcjE4MzYxNzY0", "avatar_url": "https://avatars2.githubusercontent.com/u/18361764?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AmeerHajAli", "html_url": "https://github.com/AmeerHajAli", "followers_url": "https://api.github.com/users/AmeerHajAli/followers", "following_url": "https://api.github.com/users/AmeerHajAli/following{/other_user}", "gists_url": "https://api.github.com/users/AmeerHajAli/gists{/gist_id}", "starred_url": "https://api.github.com/users/AmeerHajAli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AmeerHajAli/subscriptions", "organizations_url": "https://api.github.com/users/AmeerHajAli/orgs", "repos_url": "https://api.github.com/users/AmeerHajAli/repos", "events_url": "https://api.github.com/users/AmeerHajAli/events{/privacy}", "received_events_url": "https://api.github.com/users/AmeerHajAli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1890801554, "node_id": "MDU6TGFiZWwxODkwODAxNTU0", "url": "https://api.github.com/repos/ray-project/ray/labels/P3", "name": "P3", "color": "a8fc9f", "default": false, "description": "Issue moderate in impact or severity"}, {"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-23T10:40:39Z", "updated_at": "2020-08-03T17:38:45Z", "closed_at": "2020-08-03T17:38:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consecutive calls to `ray up` with a reduced number of workers for local node provider crashes.\r\n\r\nsteps to reproduce:\r\n1) ray up example-full.yaml\r\n2) //remove one worker\r\n3) ray up example_full.yaml\r\n\r\nThis triggers the following assert:\r\nhttps://github.com/ray-project/ray/blob/993ff5fd81fa2b7bda70a43ab3067ec754ceb5c7/python/ray/autoscaler/local/node_provider.py#L60\r\n\r\nI will fix that in an upcoming PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9659", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9659/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9659/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9659/events", "html_url": "https://github.com/ray-project/ray/issues/9659", "id": 664338061, "node_id": "MDU6SXNzdWU2NjQzMzgwNjE=", "number": 9659, "title": "[rllib] Simplex action space bug", "user": {"login": "p-christ", "id": 26346243, "node_id": "MDQ6VXNlcjI2MzQ2MjQz", "avatar_url": "https://avatars3.githubusercontent.com/u/26346243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/p-christ", "html_url": "https://github.com/p-christ", "followers_url": "https://api.github.com/users/p-christ/followers", "following_url": "https://api.github.com/users/p-christ/following{/other_user}", "gists_url": "https://api.github.com/users/p-christ/gists{/gist_id}", "starred_url": "https://api.github.com/users/p-christ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/p-christ/subscriptions", "organizations_url": "https://api.github.com/users/p-christ/orgs", "repos_url": "https://api.github.com/users/p-christ/repos", "events_url": "https://api.github.com/users/p-christ/events{/privacy}", "received_events_url": "https://api.github.com/users/p-christ/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1890801554, "node_id": "MDU6TGFiZWwxODkwODAxNTU0", "url": "https://api.github.com/repos/ray-project/ray/labels/P3", "name": "P3", "color": "a8fc9f", "default": false, "description": "Issue moderate in impact or severity"}, {"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}, {"id": 1890823772, "node_id": "MDU6TGFiZWwxODkwODIzNzcy", "url": "https://api.github.com/repos/ray-project/ray/labels/rllib", "name": "rllib", "color": "13437c", "default": false, "description": "RLlib-related issues"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-23T09:46:36Z", "updated_at": "2020-07-27T15:38:59Z", "closed_at": "2020-07-27T15:38:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When trying to initialise the Simplex action space I get the below error\r\n\r\n`AttributeError: 'NoneType' object has no attribute 'seed'`\r\n\r\nTo reproduce the problem exactly you can run:\r\n\r\n```\r\n!pip3 install ray[rlib]==0.8.6\r\n!pip3 install dm-tree\r\nfrom ray.rllib.utils.spaces.simplex import Simplex\r\nSimplex(shape=(4,))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9654", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9654/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9654/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9654/events", "html_url": "https://github.com/ray-project/ray/issues/9654", "id": 664257436, "node_id": "MDU6SXNzdWU2NjQyNTc0MzY=", "number": 9654, "title": "[Core] Worker stderr should be printed to stderr, not stdout", "user": {"login": "wuisawesome", "id": 3980609, "node_id": "MDQ6VXNlcjM5ODA2MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3980609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wuisawesome", "html_url": "https://github.com/wuisawesome", "followers_url": "https://api.github.com/users/wuisawesome/followers", "following_url": "https://api.github.com/users/wuisawesome/following{/other_user}", "gists_url": "https://api.github.com/users/wuisawesome/gists{/gist_id}", "starred_url": "https://api.github.com/users/wuisawesome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wuisawesome/subscriptions", "organizations_url": "https://api.github.com/users/wuisawesome/orgs", "repos_url": "https://api.github.com/users/wuisawesome/repos", "events_url": "https://api.github.com/users/wuisawesome/events{/privacy}", "received_events_url": "https://api.github.com/users/wuisawesome/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1805253707, "node_id": "MDU6TGFiZWwxODA1MjUzNzA3", "url": "https://api.github.com/repos/ray-project/ray/labels/P0", "name": "P0", "color": "cc0507", "default": false, "description": "Issue that must be fixed in short order"}, {"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}, {"id": 2090771588, "node_id": "MDU6TGFiZWwyMDkwNzcxNTg4", "url": "https://api.github.com/repos/ray-project/ray/labels/core", "name": "core", "color": "bfdadc", "default": false, "description": ""}, {"id": 1504751318, "node_id": "MDU6TGFiZWwxNTA0NzUxMzE4", "url": "https://api.github.com/repos/ray-project/ray/labels/release-blocker", "name": "release-blocker", "color": "8c0507", "default": false, "description": "P0 Issue that blocks the release"}], "state": "closed", "locked": false, "assignee": {"login": "wuisawesome", "id": 3980609, "node_id": "MDQ6VXNlcjM5ODA2MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3980609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wuisawesome", "html_url": "https://github.com/wuisawesome", "followers_url": "https://api.github.com/users/wuisawesome/followers", "following_url": "https://api.github.com/users/wuisawesome/following{/other_user}", "gists_url": "https://api.github.com/users/wuisawesome/gists{/gist_id}", "starred_url": "https://api.github.com/users/wuisawesome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wuisawesome/subscriptions", "organizations_url": "https://api.github.com/users/wuisawesome/orgs", "repos_url": "https://api.github.com/users/wuisawesome/repos", "events_url": "https://api.github.com/users/wuisawesome/events{/privacy}", "received_events_url": "https://api.github.com/users/wuisawesome/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wuisawesome", "id": 3980609, "node_id": "MDQ6VXNlcjM5ODA2MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3980609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wuisawesome", "html_url": "https://github.com/wuisawesome", "followers_url": "https://api.github.com/users/wuisawesome/followers", "following_url": "https://api.github.com/users/wuisawesome/following{/other_user}", "gists_url": "https://api.github.com/users/wuisawesome/gists{/gist_id}", "starred_url": "https://api.github.com/users/wuisawesome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wuisawesome/subscriptions", "organizations_url": "https://api.github.com/users/wuisawesome/orgs", "repos_url": "https://api.github.com/users/wuisawesome/repos", "events_url": "https://api.github.com/users/wuisawesome/events{/privacy}", "received_events_url": "https://api.github.com/users/wuisawesome/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-07-23T07:23:40Z", "updated_at": "2020-07-30T01:27:44Z", "closed_at": "2020-07-30T01:27:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is the problem?\r\n\r\nWorker stderr logs should be printed to stderr not stdout\r\n\r\nThis should really be fixed before Ray 1.0. There's also some old unused legacy code around raylet error logging that could be cleaned up with this. \r\n\r\nOnce unit tests are written for this, they should be removed from the list in #9692\r\n\r\n### Reproduction (REQUIRED)\r\nPlease provide a script that can be run to reproduce the issue. The script should have **no external library dependencies** (i.e., use fake or mock data / environments):\r\n\r\n```\r\n@ray.remote\r\ndef print_to_err():\r\n print(\"hello world\", file=sys.stderr)\r\n\r\nray.get(print_to_err.remote())\r\n```\r\n\r\nThis will print \"(pid=xxx) hello world\" to the driver's stdout. \r\n\r\nIf we cannot run your script, we cannot fix your issue.\r\n\r\n- [ ] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [ ] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9649", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9649/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9649/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9649/events", "html_url": "https://github.com/ray-project/ray/issues/9649", "id": 664176357, "node_id": "MDU6SXNzdWU2NjQxNzYzNTc=", "number": 9649, "title": "[GCS]Java testcase crash", "user": {"login": "ffbin", "id": 13081808, "node_id": "MDQ6VXNlcjEzMDgxODA4", "avatar_url": "https://avatars2.githubusercontent.com/u/13081808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffbin", "html_url": "https://github.com/ffbin", "followers_url": "https://api.github.com/users/ffbin/followers", "following_url": "https://api.github.com/users/ffbin/following{/other_user}", "gists_url": "https://api.github.com/users/ffbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffbin/subscriptions", "organizations_url": "https://api.github.com/users/ffbin/orgs", "repos_url": "https://api.github.com/users/ffbin/repos", "events_url": "https://api.github.com/users/ffbin/events{/privacy}", "received_events_url": "https://api.github.com/users/ffbin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ffbin", "id": 13081808, "node_id": "MDQ6VXNlcjEzMDgxODA4", "avatar_url": "https://avatars2.githubusercontent.com/u/13081808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffbin", "html_url": "https://github.com/ffbin", "followers_url": "https://api.github.com/users/ffbin/followers", "following_url": "https://api.github.com/users/ffbin/following{/other_user}", "gists_url": "https://api.github.com/users/ffbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffbin/subscriptions", "organizations_url": "https://api.github.com/users/ffbin/orgs", "repos_url": "https://api.github.com/users/ffbin/repos", "events_url": "https://api.github.com/users/ffbin/events{/privacy}", "received_events_url": "https://api.github.com/users/ffbin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ffbin", "id": 13081808, "node_id": "MDQ6VXNlcjEzMDgxODA4", "avatar_url": "https://avatars2.githubusercontent.com/u/13081808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffbin", "html_url": "https://github.com/ffbin", "followers_url": "https://api.github.com/users/ffbin/followers", "following_url": "https://api.github.com/users/ffbin/following{/other_user}", "gists_url": "https://api.github.com/users/ffbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffbin/subscriptions", "organizations_url": "https://api.github.com/users/ffbin/orgs", "repos_url": "https://api.github.com/users/ffbin/repos", "events_url": "https://api.github.com/users/ffbin/events{/privacy}", "received_events_url": "https://api.github.com/users/ffbin/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-23T03:22:26Z", "updated_at": "2020-07-24T21:09:06Z", "closed_at": "2020-07-24T21:09:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is the problem?\r\nTestcase is MultiThreadingTest.\r\n\r\nStack: [0x0000700002740000,0x0000700002840000],  sp=0x000070000283e190,  free space=1016k\r\nNative frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)\r\nC  [libcore_worker_library_java.dylib+0x18ccf0]  _ZNSt3__113unordered_mapIN3ray7ActorIDENS_8functionIFvRKNS3_IFvNS1_6StatusEEEEEEENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorINS_4pairIKS2_SA_EEEEEixERSH_+0x70\r\nC  [libcore_worker_library_java.dylib+0x18c500]  _ZN3ray3gcs29ServiceBasedActorInfoAccessor14AsyncSubscribeERKNS_7ActorIDERKNSt3__18functionIFvS4_RKNS_3rpc14ActorTableDataEEEERKNS6_IFvNS_6StatusEEEE+0x3b0\r\nC  [libcore_worker_library_java.dylib+0x2dcef]  _ZN3ray12ActorManager14AddActorHandleENSt3__110unique_ptrINS_11ActorHandleENS1_14default_deleteIS3_EEEEbRKNS_6TaskIDERKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_3rpc7AddressERKNS_7ActorIDERKNS_8ObjectIDE+0x15f\r\nC  [libcore_worker_library_java.dylib+0x2e527]  _ZN3ray12ActorManager17AddNewActorHandleENSt3__110unique_ptrINS_11ActorHandleENS1_14default_deleteIS3_EEEERKNS_6TaskIDERKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_3rpc7AddressEb+0x107\r\nC  [libcore_worker_library_java.dylib+0x45c90]  _ZN3ray10CoreWorker11CreateActorERKNS_11RayFunctionERKNSt3__16vectorINS4_10unique_ptrINS_7TaskArgENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEERKNS_20ActorCreationOptionsERKNS4_12basic_stringIcNS4_11char_traitsIcEENSB_IcEEEEPNS_7ActorIDE+0x4b0\r\nC  [libcore_worker_library_java.dylib+0x220bd]  Java_io_ray_runtime_task_NativeTaskSubmitter_nativeCreateActor+0x11d\r\nj  io.ray.runtime.task.NativeTaskSubmitter.nativeCreateActor(Lio/ray/runtime/functionmanager/FunctionDescriptor;ILjava/util/List;Lio/ray/api/options/ActorCreationOptions;)[B+0\r\nj  io.ray.runtime.task.NativeTaskSubmitter.createActor(Lio/ray/runtime/functionmanager/FunctionDescriptor;Ljava/util/List;Lio/ray/api/options/ActorCreationOptions;)Lio/ray/api/BaseActorHandle;+79\r\nj  io.ray.runtime.AbstractRayRuntime.createActorImpl(Lio/ray/runtime/functionmanager/FunctionDescriptor;[Ljava/lang/Object;Lio/ray/api/options/ActorCreationOptions;)Lio/ray/api/BaseActorHandle;+46\r\nj  io.ray.runtime.AbstractRayRuntime.createActor(Lio/ray/api/function/RayFunc;[Ljava/lang/Object;Lio/ray/api/options/ActorCreationOptions;)Lio/ray/api/ActorHandle;+27\r\n*Ray version and other system information (Python version, TensorFlow version, OS):*\r\n\r\n### Reproduction (REQUIRED)\r\nPlease provide a script that can be run to reproduce the issue. The script should have **no external library dependencies** (i.e., use fake or mock data / environments):\r\n\r\nIf we cannot run your script, we cannot fix your issue.\r\n\r\n- [ ] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [ ] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9648", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9648/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9648/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9648/events", "html_url": "https://github.com/ray-project/ray/issues/9648", "id": 664138921, "node_id": "MDU6SXNzdWU2NjQxMzg5MjE=", "number": 9648, "title": "--redis--shard-ports unknown argument", "user": {"login": "Vysybyl", "id": 18312039, "node_id": "MDQ6VXNlcjE4MzEyMDM5", "avatar_url": "https://avatars0.githubusercontent.com/u/18312039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vysybyl", "html_url": "https://github.com/Vysybyl", "followers_url": "https://api.github.com/users/Vysybyl/followers", "following_url": "https://api.github.com/users/Vysybyl/following{/other_user}", "gists_url": "https://api.github.com/users/Vysybyl/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vysybyl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vysybyl/subscriptions", "organizations_url": "https://api.github.com/users/Vysybyl/orgs", "repos_url": "https://api.github.com/users/Vysybyl/repos", "events_url": "https://api.github.com/users/Vysybyl/events{/privacy}", "received_events_url": "https://api.github.com/users/Vysybyl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-23T01:05:19Z", "updated_at": "2020-07-24T21:10:40Z", "closed_at": "2020-07-24T21:10:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is the problem?\r\n\r\nUbuntu 20.04\r\nPython 3.8\r\nRay 0.8.6\r\n\r\n### Reproduction (REQUIRED)\r\n\r\n`ray start      --head      --port=6379      --redis--shard-ports=6380      --object-manager-port=8076`\r\n\r\nwill fail, but\r\n\r\n`ray start --help`\r\n\r\nwill list --redis--shard-ports among possible arguments\r\n\r\n- [X] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [X] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9641", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9641/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9641/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9641/events", "html_url": "https://github.com/ray-project/ray/issues/9641", "id": 663975805, "node_id": "MDU6SXNzdWU2NjM5NzU4MDU=", "number": 9641, "title": "RuntimeError: Synchronized objects should only be shared between processes through inheritance", "user": {"login": "Lewisracing", "id": 48195265, "node_id": "MDQ6VXNlcjQ4MTk1MjY1", "avatar_url": "https://avatars3.githubusercontent.com/u/48195265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lewisracing", "html_url": "https://github.com/Lewisracing", "followers_url": "https://api.github.com/users/Lewisracing/followers", "following_url": "https://api.github.com/users/Lewisracing/following{/other_user}", "gists_url": "https://api.github.com/users/Lewisracing/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lewisracing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lewisracing/subscriptions", "organizations_url": "https://api.github.com/users/Lewisracing/orgs", "repos_url": "https://api.github.com/users/Lewisracing/repos", "events_url": "https://api.github.com/users/Lewisracing/events{/privacy}", "received_events_url": "https://api.github.com/users/Lewisracing/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-22T18:52:24Z", "updated_at": "2020-07-28T11:35:52Z", "closed_at": "2020-07-28T11:35:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is your question?\r\nRuntimeError: Synchronized objects should only be shared between processes through inheritance\r\n\r\nI'm trying to build an Ape-X Rl myself. The main codes are as follows\r\n\r\n    cfg=Strategist_config()\r\n    cfg.worker_NN_update_period = 200\r\n    cfg.worker_send_samples_period = 100\r\n    cfg.worker_send_batch_size = 2048\r\n    cfg.learner_batch_size = 64\r\n    cfg.learner_start_min_mem = 30000\r\n    cfg.learner_save_NN_period = 1000\r\n    cfg.learner_Shared_NN_update_period = 5\r\n    global_mem=CustomPrioritizedReplayBuffer.remote(1000000, 0.6)\r\n    N_workers=4\r\n\r\n    DDPG_leaner=Learner.remote(cfg,global_mem)\r\n    DDPG_workers = [Worker.remote(i, cfg, global_mem) for i in range(N_workers)]\r\n    DDPG_director=Director.remote(cfg)\r\n\r\n    processes=[]\r\n    for worker in DDPG_workers:\r\n        processes.append(worker)\r\n    processes.append(DDPG_leaner)\r\n    processes.append(DDPG_director)\r\n\r\n    processes=[proc.run.remote() for proc in processes]\r\n    ray.wait(processes)\r\n    ray.timeline()\r\n\r\nAnd I got the error of \r\nFile \"C:/Users/s267565/OneDrive - Cranfield University/Desktop/Works/To_learn/PER_regNN_reg_sharemem_hypertune_noclip_enable_Tamb_maxPrio_raymem/test.py\", line 22, in <module>\r\n    DDPG_leaner=Learner.remote(cfg,global_mem)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ray\\actor.py\", line 379, in remote\r\n    return self._remote(args=args, kwargs=kwargs)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ray\\actor.py\", line 572, in _remote\r\n    extension_data=str(actor_method_cpu))\r\n  File \"python\\ray\\_raylet.pyx\", line 911, in ray._raylet.CoreWorker.create_actor\r\n  File \"python\\ray\\_raylet.pyx\", line 916, in ray._raylet.CoreWorker.create_actor\r\n  File \"python\\ray\\_raylet.pyx\", line 276, in ray._raylet.prepare_args\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ray\\serialization.py\", line 396, in serialize\r\n    return self._serialize_to_msgpack(metadata, value)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ray\\serialization.py\", line 368, in _serialize_to_msgpack\r\n    self._serialize_to_pickle5(metadata, python_objects)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ray\\serialization.py\", line 348, in _serialize_to_pickle5\r\n    raise e\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ray\\serialization.py\", line 345, in _serialize_to_pickle5\r\n    value, protocol=5, buffer_callback=writer.buffer_callback)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ray\\cloudpickle\\cloudpickle_fast.py\", line 70, in dumps\r\n    cp.dump(obj)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ray\\cloudpickle\\cloudpickle_fast.py\", line 656, in dump\r\n    return Pickler.dump(self, obj)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\multiprocessing\\sharedctypes.py\", line 199, in __reduce__\r\n    assert_spawning(self)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\multiprocessing\\context.py\", line 356, in assert_spawning\r\n    ' through inheritance' % type(obj).__name__\r\nRuntimeError: Synchronized objects should only be shared between processes through inheritance\r\n\r\nSo what am I doing wrong?\r\n*Ray version and other system information (Python version, TensorFlow version, OS):*\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9637", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9637/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9637/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9637/events", "html_url": "https://github.com/ray-project/ray/issues/9637", "id": 663859576, "node_id": "MDU6SXNzdWU2NjM4NTk1NzY=", "number": 9637, "title": "ConnectionResetError: [WinError 10054] An existing connection was forcibly closed by the remote host", "user": {"login": "semiter1", "id": 47540765, "node_id": "MDQ6VXNlcjQ3NTQwNzY1", "avatar_url": "https://avatars3.githubusercontent.com/u/47540765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semiter1", "html_url": "https://github.com/semiter1", "followers_url": "https://api.github.com/users/semiter1/followers", "following_url": "https://api.github.com/users/semiter1/following{/other_user}", "gists_url": "https://api.github.com/users/semiter1/gists{/gist_id}", "starred_url": "https://api.github.com/users/semiter1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semiter1/subscriptions", "organizations_url": "https://api.github.com/users/semiter1/orgs", "repos_url": "https://api.github.com/users/semiter1/repos", "events_url": "https://api.github.com/users/semiter1/events{/privacy}", "received_events_url": "https://api.github.com/users/semiter1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774489, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODk=", "url": "https://api.github.com/repos/ray-project/ray/labels/question", "name": "question", "color": "dddddd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-07-22T15:39:55Z", "updated_at": "2020-07-23T02:56:07Z", "closed_at": "2020-07-23T02:56:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is your question?\r\n\r\nHi I am new to Ray and TensorFlow. I am trying to parallelize a simple neural network problem. When the training data is small (300 MB), I had no problem running, although I still get the following warning: \r\n\r\n> 2020-07-22 10:18:09,186\tWARNING worker.py:1047 -- Warning: The remote function __main__.nn1 has size 749505929 when pickled. It will be stored in Redis, which could cause memory issues. This may mean that its definition uses a large array or other object.\r\n\r\nWhen I use a larger training data (~2GB), the program stopped with the following error message: \r\n\r\n> 2020-07-22 10:18:09,186\tWARNING worker.py:1047 -- Warning: The remote function __main__.nn1 has size 749505929 when pickled. It will be stored in Redis, which could cause memory issues. This may mean that its definition uses a large array or other object.\r\n> Traceback (most recent call last):\r\n> \r\n>   File \"C:\\Users\\jxl128031\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\redis\\connection.py\", line 700, in send_packed_command\r\n>     sendall(self._sock, item)\r\n> \r\n>   File \"C:\\Users\\jxl128031\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\redis\\_compat.py\", line 8, in sendall\r\n>     return sock.sendall(*args, **kwargs)\r\n> \r\n> ConnectionResetError: [WinError 10054] An existing connection was forcibly closed by the remote host\r\n> \r\n> \r\n> During handling of the above exception, another exception occurred:\r\n> \r\n> Traceback (most recent call last):\r\n> \r\n>   File \"<ipython-input-38-71ac0ae4d4d4>\", line 3, in <module>\r\n>     ids = [nn1.remote(Xtrain_id, ytrain_id,  Xtest_id, lbd_list_id,lr_list_id, ne, nl, nlr) for ne in range(1)]\r\n> \r\n>   File \"<ipython-input-38-71ac0ae4d4d4>\", line 3, in <listcomp>\r\n>     ids = [nn1.remote(Xtrain_id, ytrain_id,  Xtest_id, lbd_list_id,lr_list_id, ne, nl, nlr) for ne in range(1)]\r\n> \r\n>   File \"C:\\Users\\jxl128031\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\ray\\remote_function.py\", line 95, in _remote_proxy\r\n>     return self._remote(args=args, kwargs=kwargs)\r\n> \r\n>   File \"C:\\Users\\jxl128031\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\ray\\remote_function.py\", line 176, in _remote\r\n>     worker.function_actor_manager.export(self)\r\n> \r\n>   File \"C:\\Users\\jxl128031\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\ray\\function_manager.py\", line 152, in export\r\n>     \"max_calls\": remote_function._max_calls\r\n> \r\n>   File \"C:\\Users\\jxl128031\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\redis\\client.py\", line 3023, in hmset\r\n>     return self.execute_command('HMSET', name, *items)\r\n> \r\n>   File \"C:\\Users\\jxl128031\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\redis\\client.py\", line 877, in execute_command\r\n>     conn.send_command(*args)\r\n> \r\n>   File \"C:\\Users\\jxl128031\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\redis\\connection.py\", line 721, in send_command\r\n>     check_health=kwargs.get('check_health', True))\r\n> \r\n>   File \"C:\\Users\\jxl128031\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\redis\\connection.py\", line 713, in send_packed_command\r\n>     (errno, errmsg))\r\n> \r\n> ConnectionError: Error 10054 while writing to socket. An existing connection was forcibly closed by the remote host.\r\n\r\nCan someone please help how I can resolve this issue? Thanks. \r\n\r\nMy code is below: \r\n\r\n```\r\nray.shutdown()\r\nray.init(ignore_reinit_error=True, num_cpus=10, memory=28000 * 1024 * 1024, object_store_memory=14000*1024*1024)\r\n\r\n@ray.remote\r\ndef nn1(Xtrain, ytrain, ne):\r\n    import tensorflow as tf\r\n    from tensorflow import keras\r\n    from tensorflow.keras.optimizers import Adam #maybe put this at the top of your file\r\n    import os\r\n\r\n    #tf.random.set_seed(ne)\r\n    tf.random.set_random_seed(ne)\r\n    lbd = 0.01\r\n    lr  = 0.01\r\n    print(lbd, lr)\r\n    NEP =1\r\n    batch_size= 10000\r\n    ptc = 5  \r\n    early_stopping_cb = keras.callbacks.EarlyStopping(patience=ptc, restore_best_weights=True)\r\n  \r\n    model = keras.models.Sequential([  \r\n    keras.layers.Dense(32,activation='relu', input_shape=Xtrain.shape[1:], kernel_initializer='he_normal',\r\n                       kernel_regularizer = keras.regularizers.l1(lbd)),\r\n    keras.layers.BatchNormalization(),\r\n    keras.layers.Dense(1, activation='linear',  kernel_initializer='he_normal',kernel_regularizer = keras.regularizers.l1(lbd))\r\n    ])\r\n\r\n    opt = Adam(lr=lr)  \r\n    model.compile(optimizer=opt, loss='mse')\r\n\r\n    history = model.fit(Xtrain, ytrain, epochs=NEP, validation_data=(Xvalid, yvalid),\r\n                        callbacks=[early_stopping_cb], batch_size = batch_size)\r\n\r\n    return os.getpid()\r\n\r\nXtrain_id = ray.put(Xtrain)\r\nytrain_id = ray.put(ytrain)\r\n\r\nids = [nn1.remote(Xtrain_id, ytrain_id, ne) for ne in range(10)]\r\n```\r\n*Ray version and other system information (Python version, TensorFlow version, OS):*\r\n\r\nPython version: 3.7.7\r\nTensorFlow version: 1.14.0\r\nOS: windows 10 \r\nRAM: 76 GB\r\nLogical processors: 24\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9631", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9631/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9631/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9631/events", "html_url": "https://github.com/ray-project/ray/issues/9631", "id": 663589016, "node_id": "MDU6SXNzdWU2NjM1ODkwMTY=", "number": 9631, "title": "[rllib] tensorflow 1.14 doesn't work with GPUs any longer", "user": {"login": "andrew-rosenfeld-ts", "id": 20407429, "node_id": "MDQ6VXNlcjIwNDA3NDI5", "avatar_url": "https://avatars1.githubusercontent.com/u/20407429?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrew-rosenfeld-ts", "html_url": "https://github.com/andrew-rosenfeld-ts", "followers_url": "https://api.github.com/users/andrew-rosenfeld-ts/followers", "following_url": "https://api.github.com/users/andrew-rosenfeld-ts/following{/other_user}", "gists_url": "https://api.github.com/users/andrew-rosenfeld-ts/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrew-rosenfeld-ts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrew-rosenfeld-ts/subscriptions", "organizations_url": "https://api.github.com/users/andrew-rosenfeld-ts/orgs", "repos_url": "https://api.github.com/users/andrew-rosenfeld-ts/repos", "events_url": "https://api.github.com/users/andrew-rosenfeld-ts/events{/privacy}", "received_events_url": "https://api.github.com/users/andrew-rosenfeld-ts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1805253707, "node_id": "MDU6TGFiZWwxODA1MjUzNzA3", "url": "https://api.github.com/repos/ray-project/ray/labels/P0", "name": "P0", "color": "cc0507", "default": false, "description": "Issue that must be fixed in short order"}, {"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}, {"id": 1890823772, "node_id": "MDU6TGFiZWwxODkwODIzNzcy", "url": "https://api.github.com/repos/ray-project/ray/labels/rllib", "name": "rllib", "color": "13437c", "default": false, "description": "RLlib-related issues"}], "state": "closed", "locked": false, "assignee": {"login": "sven1977", "id": 5839854, "node_id": "MDQ6VXNlcjU4Mzk4NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5839854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sven1977", "html_url": "https://github.com/sven1977", "followers_url": "https://api.github.com/users/sven1977/followers", "following_url": "https://api.github.com/users/sven1977/following{/other_user}", "gists_url": "https://api.github.com/users/sven1977/gists{/gist_id}", "starred_url": "https://api.github.com/users/sven1977/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sven1977/subscriptions", "organizations_url": "https://api.github.com/users/sven1977/orgs", "repos_url": "https://api.github.com/users/sven1977/repos", "events_url": "https://api.github.com/users/sven1977/events{/privacy}", "received_events_url": "https://api.github.com/users/sven1977/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sven1977", "id": 5839854, "node_id": "MDQ6VXNlcjU4Mzk4NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5839854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sven1977", "html_url": "https://github.com/sven1977", "followers_url": "https://api.github.com/users/sven1977/followers", "following_url": "https://api.github.com/users/sven1977/following{/other_user}", "gists_url": "https://api.github.com/users/sven1977/gists{/gist_id}", "starred_url": "https://api.github.com/users/sven1977/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sven1977/subscriptions", "organizations_url": "https://api.github.com/users/sven1977/orgs", "repos_url": "https://api.github.com/users/sven1977/repos", "events_url": "https://api.github.com/users/sven1977/events{/privacy}", "received_events_url": "https://api.github.com/users/sven1977/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2020-07-22T08:49:19Z", "updated_at": "2020-07-25T09:46:18Z", "closed_at": "2020-07-25T09:46:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "### What is the problem?\r\n\r\nUsing a recent nightly build of Ray/RLlib, you can't train using GPUs with TensorFlow 1.14 due to an API mismatch.\r\n\r\nrollout_worker.py assumes that tensorflow has a function `list_physical_devices` but in 1.14, it's only `experimental_list_devices`, so you get \r\n\r\n`\r\nAttributeError: module 'tensorflow._api.v1.config' has no attribute 'list_physical_devices'\r\n`\r\n\r\nHere's the code in question in rollout_worker.py:\r\n\r\n```python\r\nif (ray.is_initialized() and\r\n                ray.worker._mode() != ray.worker.LOCAL_MODE):\r\n            # Check available number of GPUs\r\n            if not ray.get_gpu_ids():\r\n                logger.debug(\r\n                    \"Creating policy evaluation worker {}\".format(\r\n                        worker_index) +\r\n                    \" on CPU (please ignore any CUDA init errors)\")\r\n            elif (policy_config[\"framework\"] in [\"tf2\", \"tf\", \"tfe\"] and\r\n                  not tf.config.list_physical_devices(\"GPU\")) or \\\r\n                    (policy_config[\"framework\"] == \"torch\" and\r\n                     not torch.cuda.is_available()):\r\n                raise RuntimeError(\r\n                    \"GPUs were assigned to this worker by Ray, but \"\r\n                    \"your DL framework ({}) reports GPU acceleration is \"\r\n                    \"disabled. This could be due to a bad CUDA- or {} \"\r\n                    \"installation.\".format(\r\n                        policy_config[\"framework\"],\r\n                        policy_config[\"framework\"]))\r\n```\r\n\r\nvs the API in `tensorflow/_api/v1/config/__init__.py`:\r\n\r\n```python\r\nfrom tensorflow.python.eager.context import list_devices as experimental_list_devices\r\n```\r\n\r\nand here's the full stacktrace:\r\n\r\n```Failure # 1 (occurred at 2020-07-22_08-30-52)\r\nTraceback (most recent call last):\r\n  File \"/home/andrew/miniconda3/envs/ray_nightly_tf14/lib/python3.7/site-packages/ray/tune/trial_runner.py\", line 471, in _process_trial\r\n    result = self.trial_executor.fetch_result(trial)\r\n  File \"/home/andrew/miniconda3/envs/ray_nightly_tf14/lib/python3.7/site-packages/ray/tune/ray_trial_executor.py\", line 430, in fetch_result\r\n    result = ray.get(trial_future[0], DEFAULT_GET_TIMEOUT)\r\n  File \"/home/andrew/miniconda3/envs/ray_nightly_tf14/lib/python3.7/site-packages/ray/worker.py\", line 1532, in get\r\n    raise value.as_instanceof_cause()\r\nray.exceptions.RayTaskError(AttributeError): ray::PPO.train() (pid=7711, ip=10.128.0.4)\r\n  File \"python/ray/_raylet.pyx\", line 433, in ray._raylet.execute_task\r\n  File \"python/ray/_raylet.pyx\", line 468, in ray._raylet.execute_task\r\n  File \"python/ray/_raylet.pyx\", line 472, in ray._raylet.execute_task\r\n  File \"python/ray/_raylet.pyx\", line 473, in ray._raylet.execute_task\r\n  File \"python/ray/_raylet.pyx\", line 426, in ray._raylet.execute_task.function_executor\r\n  File \"/home/andrew/miniconda3/envs/ray_nightly_tf14/lib/python3.7/site-packages/ray/rllib/agents/trainer_template.py\", line 88, in __init__\r\n    Trainer.__init__(self, config, env, logger_creator)\r\n  File \"/home/andrew/miniconda3/envs/ray_nightly_tf14/lib/python3.7/site-packages/ray/rllib/agents/trainer.py\", line 475, in __init__\r\n    super().__init__(config, logger_creator)\r\n  File \"/home/andrew/miniconda3/envs/ray_nightly_tf14/lib/python3.7/site-packages/ray/tune/trainable.py\", line 232, in __init__\r\n    self.setup(copy.deepcopy(self.config))\r\n  File \"/home/andrew/miniconda3/envs/ray_nightly_tf14/lib/python3.7/site-packages/ray/rllib/agents/trainer.py\", line 639, in setup\r\n    self._init(self.config, self.env_creator)\r\n  File \"/home/andrew/miniconda3/envs/ray_nightly_tf14/lib/python3.7/site-packages/ray/rllib/agents/trainer_template.py\", line 102, in _init\r\n    env_creator, self._policy, config, self.config[\"num_workers\"])\r\n  File \"/home/andrew/miniconda3/envs/ray_nightly_tf14/lib/python3.7/site-packages/ray/rllib/agents/trainer.py\", line 709, in _make_workers\r\n    logdir=self.logdir)\r\n  File \"/home/andrew/miniconda3/envs/ray_nightly_tf14/lib/python3.7/site-packages/ray/rllib/evaluation/worker_set.py\", line 67, in __init__\r\n    RolloutWorker, env_creator, policy, 0, self._local_config)\r\n  File \"/home/andrew/miniconda3/envs/ray_nightly_tf14/lib/python3.7/site-packages/ray/rllib/evaluation/worker_set.py\", line 296, in _make_worker\r\n    extra_python_environs=extra_python_environs)\r\n  File \"/home/andrew/miniconda3/envs/ray_nightly_tf14/lib/python3.7/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 415, in __init__\r\n    not tf.config.list_physical_devices(\"GPU\")) or \\\r\n  File \"/home/andrew/miniconda3/envs/ray_nightly_tf14/lib/python3.7/site-packages/tensorflow/python/util/deprecation_wrapper.py\", line 106, in __getattr__\r\n    attr = getattr(self._dw_wrapped_module, name)\r\nAttributeError: module 'tensorflow._api.v1.config' has no attribute 'list_physical_devices'\r\n```\r\n\r\n### Reproduction (REQUIRED)\r\nRay: latest nightly wheel as of 2020-07-22\r\nTensorFlow: 1.14 \r\nPython: 3.7\r\nOS: Ubuntu 20.04\r\n\r\n```python\r\nfrom ray import tune\r\nfrom ray.rllib.agents.ppo import PPOTrainer\r\ntune.run(PPOTrainer,\r\n         config={\r\n             \"env\": \"CartPole-v0\",\r\n             \"num_workers\": 4,\r\n             \"num_envs_per_worker\": 2,\r\n             \"num_gpus\": 0.5,\r\n             \"num_gpus_per_worker\": 0.1,\r\n         })\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9629", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9629/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9629/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9629/events", "html_url": "https://github.com/ray-project/ray/issues/9629", "id": 663497129, "node_id": "MDU6SXNzdWU2NjM0OTcxMjk=", "number": 9629, "title": "`test_advanced_2` seems to fail at the master", "user": {"login": "rkooo567", "id": 18510752, "node_id": "MDQ6VXNlcjE4NTEwNzUy", "avatar_url": "https://avatars0.githubusercontent.com/u/18510752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rkooo567", "html_url": "https://github.com/rkooo567", "followers_url": "https://api.github.com/users/rkooo567/followers", "following_url": "https://api.github.com/users/rkooo567/following{/other_user}", "gists_url": "https://api.github.com/users/rkooo567/gists{/gist_id}", "starred_url": "https://api.github.com/users/rkooo567/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rkooo567/subscriptions", "organizations_url": "https://api.github.com/users/rkooo567/orgs", "repos_url": "https://api.github.com/users/rkooo567/repos", "events_url": "https://api.github.com/users/rkooo567/events{/privacy}", "received_events_url": "https://api.github.com/users/rkooo567/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}, {"id": 2090776337, "node_id": "MDU6TGFiZWwyMDkwNzc2MzM3", "url": "https://api.github.com/repos/ray-project/ray/labels/triage", "name": "triage", "color": "b0e7f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-22T05:58:33Z", "updated_at": "2020-07-24T18:14:40Z", "closed_at": "2020-07-24T18:14:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is the problem?\r\n\r\nhttps://travis-ci.com/github/ray-project/ray/jobs/363568635\r\n\r\n### Reproduction (REQUIRED)\r\nPlease provide a script that can be run to reproduce the issue. The script should have **no external library dependencies** (i.e., use fake or mock data / environments):\r\n\r\nIf we cannot run your script, we cannot fix your issue.\r\n\r\n- [ ] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [ ] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9628", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9628/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9628/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9628/events", "html_url": "https://github.com/ray-project/ray/issues/9628", "id": 663496888, "node_id": "MDU6SXNzdWU2NjM0OTY4ODg=", "number": 9628, "title": "`test_temp_file` timeouts at master", "user": {"login": "rkooo567", "id": 18510752, "node_id": "MDQ6VXNlcjE4NTEwNzUy", "avatar_url": "https://avatars0.githubusercontent.com/u/18510752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rkooo567", "html_url": "https://github.com/rkooo567", "followers_url": "https://api.github.com/users/rkooo567/followers", "following_url": "https://api.github.com/users/rkooo567/following{/other_user}", "gists_url": "https://api.github.com/users/rkooo567/gists{/gist_id}", "starred_url": "https://api.github.com/users/rkooo567/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rkooo567/subscriptions", "organizations_url": "https://api.github.com/users/rkooo567/orgs", "repos_url": "https://api.github.com/users/rkooo567/repos", "events_url": "https://api.github.com/users/rkooo567/events{/privacy}", "received_events_url": "https://api.github.com/users/rkooo567/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}, {"id": 2090776337, "node_id": "MDU6TGFiZWwyMDkwNzc2MzM3", "url": "https://api.github.com/repos/ray-project/ray/labels/triage", "name": "triage", "color": "b0e7f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-22T05:57:55Z", "updated_at": "2020-07-24T18:14:34Z", "closed_at": "2020-07-24T18:14:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is the problem?\r\n\r\nhttps://travis-ci.com/github/ray-project/ray/jobs/363568635\r\n\r\n### Reproduction (REQUIRED)\r\nPlease provide a script that can be run to reproduce the issue. The script should have **no external library dependencies** (i.e., use fake or mock data / environments):\r\n\r\nIf we cannot run your script, we cannot fix your issue.\r\n\r\n- [ ] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [ ] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9627", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9627/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9627/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9627/events", "html_url": "https://github.com/ray-project/ray/issues/9627", "id": 663496783, "node_id": "MDU6SXNzdWU2NjM0OTY3ODM=", "number": 9627, "title": "`test_joblib` failed at the master. ", "user": {"login": "rkooo567", "id": 18510752, "node_id": "MDQ6VXNlcjE4NTEwNzUy", "avatar_url": "https://avatars0.githubusercontent.com/u/18510752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rkooo567", "html_url": "https://github.com/rkooo567", "followers_url": "https://api.github.com/users/rkooo567/followers", "following_url": "https://api.github.com/users/rkooo567/following{/other_user}", "gists_url": "https://api.github.com/users/rkooo567/gists{/gist_id}", "starred_url": "https://api.github.com/users/rkooo567/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rkooo567/subscriptions", "organizations_url": "https://api.github.com/users/rkooo567/orgs", "repos_url": "https://api.github.com/users/rkooo567/repos", "events_url": "https://api.github.com/users/rkooo567/events{/privacy}", "received_events_url": "https://api.github.com/users/rkooo567/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1805253707, "node_id": "MDU6TGFiZWwxODA1MjUzNzA3", "url": "https://api.github.com/repos/ray-project/ray/labels/P0", "name": "P0", "color": "cc0507", "default": false, "description": "Issue that must be fixed in short order"}, {"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-22T05:57:39Z", "updated_at": "2020-07-24T16:53:42Z", "closed_at": "2020-07-24T16:53:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is the problem?\r\n\r\nhttps://travis-ci.com/github/ray-project/ray/jobs/363568635\r\n\r\n### Reproduction (REQUIRED)\r\nPlease provide a script that can be run to reproduce the issue. The script should have **no external library dependencies** (i.e., use fake or mock data / environments):\r\n\r\nIf we cannot run your script, we cannot fix your issue.\r\n\r\n- [ ] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [ ] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9616", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9616/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9616/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9616/events", "html_url": "https://github.com/ray-project/ray/issues/9616", "id": 663266384, "node_id": "MDU6SXNzdWU2NjMyNjYzODQ=", "number": 9616, "title": "Ray error logs should be printed to stdout ", "user": {"login": "wuisawesome", "id": 3980609, "node_id": "MDQ6VXNlcjM5ODA2MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3980609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wuisawesome", "html_url": "https://github.com/wuisawesome", "followers_url": "https://api.github.com/users/wuisawesome/followers", "following_url": "https://api.github.com/users/wuisawesome/following{/other_user}", "gists_url": "https://api.github.com/users/wuisawesome/gists{/gist_id}", "starred_url": "https://api.github.com/users/wuisawesome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wuisawesome/subscriptions", "organizations_url": "https://api.github.com/users/wuisawesome/orgs", "repos_url": "https://api.github.com/users/wuisawesome/repos", "events_url": "https://api.github.com/users/wuisawesome/events{/privacy}", "received_events_url": "https://api.github.com/users/wuisawesome/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1805253811, "node_id": "MDU6TGFiZWwxODA1MjUzODEx", "url": "https://api.github.com/repos/ray-project/ray/labels/P1", "name": "P1", "color": "e2bf34", "default": false, "description": "Issue that should be fixed within a few weeks"}, {"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}, {"id": 2090771588, "node_id": "MDU6TGFiZWwyMDkwNzcxNTg4", "url": "https://api.github.com/repos/ray-project/ray/labels/core", "name": "core", "color": "bfdadc", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mehrdadn", "id": 523212, "node_id": "MDQ6VXNlcjUyMzIxMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/523212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mehrdadn", "html_url": "https://github.com/mehrdadn", "followers_url": "https://api.github.com/users/mehrdadn/followers", "following_url": "https://api.github.com/users/mehrdadn/following{/other_user}", "gists_url": "https://api.github.com/users/mehrdadn/gists{/gist_id}", "starred_url": "https://api.github.com/users/mehrdadn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mehrdadn/subscriptions", "organizations_url": "https://api.github.com/users/mehrdadn/orgs", "repos_url": "https://api.github.com/users/mehrdadn/repos", "events_url": "https://api.github.com/users/mehrdadn/events{/privacy}", "received_events_url": "https://api.github.com/users/mehrdadn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mehrdadn", "id": 523212, "node_id": "MDQ6VXNlcjUyMzIxMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/523212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mehrdadn", "html_url": "https://github.com/mehrdadn", "followers_url": "https://api.github.com/users/mehrdadn/followers", "following_url": "https://api.github.com/users/mehrdadn/following{/other_user}", "gists_url": "https://api.github.com/users/mehrdadn/gists{/gist_id}", "starred_url": "https://api.github.com/users/mehrdadn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mehrdadn/subscriptions", "organizations_url": "https://api.github.com/users/mehrdadn/orgs", "repos_url": "https://api.github.com/users/mehrdadn/repos", "events_url": "https://api.github.com/users/mehrdadn/events{/privacy}", "received_events_url": "https://api.github.com/users/mehrdadn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-07-21T19:50:06Z", "updated_at": "2020-07-24T18:15:01Z", "closed_at": "2020-07-24T18:15:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is the problem?\r\n\r\nc++ errors should be printed to the driver's stdout but aren't. \r\n\r\n### Reproduction (REQUIRED)\r\nPlease provide a script that can be run to reproduce the issue. The script should have **no external library dependencies** (i.e., use fake or mock data / environments):\r\n\r\nPut a `RAY_LOG(ERROR) << \"dfasdf\";` in `CoreWorker::ExecuteTask` and in `NodeManager::HandleWorkerLeaseRequest`. Neither will will be printed. \r\n\r\nIf we cannot run your script, we cannot fix your issue.\r\n\r\n- [ ] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [ ] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ray-project/ray/issues/9608", "repository_url": "https://api.github.com/repos/ray-project/ray", "labels_url": "https://api.github.com/repos/ray-project/ray/issues/9608/labels{/name}", "comments_url": "https://api.github.com/repos/ray-project/ray/issues/9608/comments", "events_url": "https://api.github.com/repos/ray-project/ray/issues/9608/events", "html_url": "https://github.com/ray-project/ray/issues/9608", "id": 662785355, "node_id": "MDU6SXNzdWU2NjI3ODUzNTU=", "number": 9608, "title": "zsh:4: command not found: cp", "user": {"login": "wumuzi520", "id": 2016670, "node_id": "MDQ6VXNlcjIwMTY2NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2016670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wumuzi520", "html_url": "https://github.com/wumuzi520", "followers_url": "https://api.github.com/users/wumuzi520/followers", "following_url": "https://api.github.com/users/wumuzi520/following{/other_user}", "gists_url": "https://api.github.com/users/wumuzi520/gists{/gist_id}", "starred_url": "https://api.github.com/users/wumuzi520/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wumuzi520/subscriptions", "organizations_url": "https://api.github.com/users/wumuzi520/orgs", "repos_url": "https://api.github.com/users/wumuzi520/repos", "events_url": "https://api.github.com/users/wumuzi520/events{/privacy}", "received_events_url": "https://api.github.com/users/wumuzi520/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468774484, "node_id": "MDU6TGFiZWw0Njg3NzQ0ODQ=", "url": "https://api.github.com/repos/ray-project/ray/labels/bug", "name": "bug", "color": "77dd82", "default": true, "description": ""}, {"id": 2090776337, "node_id": "MDU6TGFiZWwyMDkwNzc2MzM3", "url": "https://api.github.com/repos/ray-project/ray/labels/triage", "name": "triage", "color": "b0e7f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mehrdadn", "id": 523212, "node_id": "MDQ6VXNlcjUyMzIxMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/523212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mehrdadn", "html_url": "https://github.com/mehrdadn", "followers_url": "https://api.github.com/users/mehrdadn/followers", "following_url": "https://api.github.com/users/mehrdadn/following{/other_user}", "gists_url": "https://api.github.com/users/mehrdadn/gists{/gist_id}", "starred_url": "https://api.github.com/users/mehrdadn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mehrdadn/subscriptions", "organizations_url": "https://api.github.com/users/mehrdadn/orgs", "repos_url": "https://api.github.com/users/mehrdadn/repos", "events_url": "https://api.github.com/users/mehrdadn/events{/privacy}", "received_events_url": "https://api.github.com/users/mehrdadn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mehrdadn", "id": 523212, "node_id": "MDQ6VXNlcjUyMzIxMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/523212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mehrdadn", "html_url": "https://github.com/mehrdadn", "followers_url": "https://api.github.com/users/mehrdadn/followers", "following_url": "https://api.github.com/users/mehrdadn/following{/other_user}", "gists_url": "https://api.github.com/users/mehrdadn/gists{/gist_id}", "starred_url": "https://api.github.com/users/mehrdadn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mehrdadn/subscriptions", "organizations_url": "https://api.github.com/users/mehrdadn/orgs", "repos_url": "https://api.github.com/users/mehrdadn/repos", "events_url": "https://api.github.com/users/mehrdadn/events{/privacy}", "received_events_url": "https://api.github.com/users/mehrdadn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-07-21T09:15:05Z", "updated_at": "2020-07-21T17:17:51Z", "closed_at": "2020-07-21T17:17:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--Please include [tune], [rllib], [autoscaler] etc. in the issue title if relevant-->\r\n\r\n### What is the problem?\r\n![image](https://user-images.githubusercontent.com/2016670/88035509-da758080-cb74-11ea-87ac-e010e3289c57.png)\r\n\r\nThe `path` variable is reserved in zsh, which is bind with `PATH`, so the `path` should not be used as a common variable in the script.\r\n\r\n*Ray version and other system information (Python version, TensorFlow version, OS):*\r\n\r\n### Reproduction (REQUIRED)\r\nPlease provide a script that can be run to reproduce the issue. The script should have **no external library dependencies** (i.e., use fake or mock data / environments):\r\n\r\nIf we cannot run your script, we cannot fix your issue.\r\n\r\n- [ ] I have verified my script runs in a clean environment and reproduces the issue.\r\n- [ ] I have verified the issue also occurs with the [latest wheels](https://docs.ray.io/en/latest/installation.html).\r\n", "performed_via_github_app": null, "score": 1.0}]}