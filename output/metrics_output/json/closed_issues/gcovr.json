{"total_count": 184, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/gcovr/gcovr/issues/406", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/406/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/406/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/406/events", "html_url": "https://github.com/gcovr/gcovr/issues/406", "id": 676503272, "node_id": "MDU6SXNzdWU2NzY1MDMyNzI=", "number": 406, "title": "[debian] Help wanted, what is gcov option for dpkg-buildpackage --buildinfo-option=? when do debian compile?", "user": {"login": "tim-rj", "id": 51427706, "node_id": "MDQ6VXNlcjUxNDI3NzA2", "avatar_url": "https://avatars3.githubusercontent.com/u/51427706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tim-rj", "html_url": "https://github.com/tim-rj", "followers_url": "https://api.github.com/users/tim-rj/followers", "following_url": "https://api.github.com/users/tim-rj/following{/other_user}", "gists_url": "https://api.github.com/users/tim-rj/gists{/gist_id}", "starred_url": "https://api.github.com/users/tim-rj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tim-rj/subscriptions", "organizations_url": "https://api.github.com/users/tim-rj/orgs", "repos_url": "https://api.github.com/users/tim-rj/repos", "events_url": "https://api.github.com/users/tim-rj/events{/privacy}", "received_events_url": "https://api.github.com/users/tim-rj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834073566, "node_id": "MDU6TGFiZWw4MzQwNzM1NjY=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Gcov", "name": "Gcov", "color": "1735c6", "default": false, "description": null}, {"id": 39711550, "node_id": "MDU6TGFiZWwzOTcxMTU1MA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Question", "name": "Type: Question", "color": "E80C59", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-11T00:56:41Z", "updated_at": "2020-08-12T09:56:09Z", "closed_at": "2020-08-12T09:56:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi gcov team, we want to enable gcov in debian environment, can you help share the option for it, i have tried below option, all failed:\r\n```\r\n--buildinfo-option=--enable-gcov\r\n```\r\n```\r\n--buildinfo-option=--enable-coverage\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/396", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/396/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/396/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/396/events", "html_url": "https://github.com/gcovr/gcovr/issues/396", "id": 649703688, "node_id": "MDU6SXNzdWU2NDk3MDM2ODg=", "number": 396, "title": "(WARNING) Unrecognized GCOV output", "user": {"login": "andyLiuChina", "id": 9606967, "node_id": "MDQ6VXNlcjk2MDY5Njc=", "avatar_url": "https://avatars0.githubusercontent.com/u/9606967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andyLiuChina", "html_url": "https://github.com/andyLiuChina", "followers_url": "https://api.github.com/users/andyLiuChina/followers", "following_url": "https://api.github.com/users/andyLiuChina/following{/other_user}", "gists_url": "https://api.github.com/users/andyLiuChina/gists{/gist_id}", "starred_url": "https://api.github.com/users/andyLiuChina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andyLiuChina/subscriptions", "organizations_url": "https://api.github.com/users/andyLiuChina/orgs", "repos_url": "https://api.github.com/users/andyLiuChina/repos", "events_url": "https://api.github.com/users/andyLiuChina/events{/privacy}", "received_events_url": "https://api.github.com/users/andyLiuChina/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-02T07:29:34Z", "updated_at": "2020-07-02T09:35:20Z", "closed_at": "2020-07-02T09:25:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "HI, please help to this problem.\r\n\r\nThe C compiler identification is GNU 6.3.0\r\n\r\nCMD: ['gcovr', '--filter=.*\\\\.c$', '--exclude=.*Mock.*', '--root=C:\\\\Users\\\\cnaliu\\\\Desktop\\\\myGitWorkspace\\\\SourceC0\\\\cApp', '--object-directory=C:\\\\Users\\\\cnaliu\\\\Desktop\\\\myGitWorkspace\\\\SourceC0\\\\cApp\\\\Output\\\\UnitTest', '--sort-percentage', '--keep', '--html', '--output=C:\\\\Users\\\\cnaliu\\\\Desktop\\\\myGitWorkspace\\\\SourceC0\\\\cApp\\\\Output\\\\UnitTest\\\\Report\\\\Coverage.html']\r\n\r\n(WARNING) Unrecognized GCOV output for C:\\Users\\cnaliu\\Desktop\\myGitWorkspace\\SourceC0\\cApp\\BSW\\SvHIDC\\lib\\src\\IPMMessageHandle\\IPMMessageHandle.c\r\n\r\nptSendData->wDataLen = (unsigned short)(SVHIDC_IPM_HEADER_SIZE_IN_BYTES + wDataLen);\r\n\r\nThis is indicative of a gcov output parse error.\r\n\r\nPlease report this to the gcovr developers\r\n\r\nat <https://github.com/gcovr/gcovr/issues>.\r\n\r\n(ERROR) Exiting because of parse errors.\r\n\r\nYou can run gcovr with --gcov-ignore-parse-errors\r\n\r\nto continue anyway.\r\n\r\nTraceback (most recent call last):\r\n\r\nFile \"c:\\users\\cnaliu\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\gcovr\\workers.py\", line 71, in worker\r\n\r\nwork(*args, **kwargs)\r\n\r\nFile \"c:\\users\\cnaliu\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\gcovr\\gcov.py\", line 589, in process_datafile\r\n\r\ndone = run_gcov_and_process_files(\r\n\r\nFile \"c:\\users\\cnaliu\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\gcovr\\gcov.py\", line 676, in run_gcov_and_process_files\r\n\r\nprocess_gcov_data(fname, covdata, abs_filename, options)\r\n\r\nFile \"c:\\users\\cnaliu\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\gcovr\\gcov.py\", line 119, in process_gcov_data\r\n\r\nparser.parse_all_lines(\r\n\r\nFile \"c:\\users\\cnaliu\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\gcovr\\gcov.py\", line 240, in parse_all_lines\r\n\r\nself.check_unrecognized_lines(ignore_parse_errors=ignore_parse_errors)\r\n\r\nFile \"c:\\users\\cnaliu\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\gcovr\\gcov.py\", line 511, in check_unrecognized_lines\r\n\r\nsys.exit(1)\r\n\r\nSystemExit: 1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/395", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/395/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/395/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/395/events", "html_url": "https://github.com/gcovr/gcovr/issues/395", "id": 647218741, "node_id": "MDU6SXNzdWU2NDcyMTg3NDE=", "number": 395, "title": "Gathering Information between gcovr 4.1 & 4.2", "user": {"login": "NINI1988", "id": 2767665, "node_id": "MDQ6VXNlcjI3Njc2NjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2767665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NINI1988", "html_url": "https://github.com/NINI1988", "followers_url": "https://api.github.com/users/NINI1988/followers", "following_url": "https://api.github.com/users/NINI1988/following{/other_user}", "gists_url": "https://api.github.com/users/NINI1988/gists{/gist_id}", "starred_url": "https://api.github.com/users/NINI1988/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NINI1988/subscriptions", "organizations_url": "https://api.github.com/users/NINI1988/orgs", "repos_url": "https://api.github.com/users/NINI1988/repos", "events_url": "https://api.github.com/users/NINI1988/events{/privacy}", "received_events_url": "https://api.github.com/users/NINI1988/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834073149, "node_id": "MDU6TGFiZWw4MzQwNzMxNDk=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Filters", "name": "Filters", "color": "2befd2", "default": false, "description": "related to filters, include/exclude, path handling"}, {"id": 799643750, "node_id": "MDU6TGFiZWw3OTk2NDM3NTA=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Platform:%20Windows", "name": "Platform: Windows", "color": "fef2c0", "default": false, "description": null}, {"id": 39711550, "node_id": "MDU6TGFiZWwzOTcxMTU1MA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Question", "name": "Type: Question", "color": "E80C59", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-29T08:27:21Z", "updated_at": "2020-07-28T07:10:53Z", "closed_at": "2020-07-07T20:56:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since the update to Gcovr 4.2, my html reports are not generated as before.\r\nIn Gcovr4.1 all works as expected, but in Gcovr4.2, source files are filtered out.\r\nI guess something has changed for the root filtering?\r\nBut changing root to ../.. is not an option, because there are many other projects where coverage files will be found.\r\nAnd using `--object-directory` does not work, because this adds only a folder but doesn't replace the files found in root.\r\n\r\nCommand: `gcovr --verbose --root . --html --html-details -o out/coverage/Cov.html`\r\n\r\nGcovr4.1\r\n```\r\nFilters for --root: (1)\r\n- re.compile('C:\\\\\\\\Working\\\\\\\\project\\\\\\\\project\\\\\\\\Tests\\\\\\\\unitTest\\\\\\\\')\r\nFilters for --filter: (1)\r\n- DirectoryPrefixFilter(C:/Working/project/project/Tests/unitTest/)\r\nFilters for --exclude: (0)\r\nFilters for --gcov-filter: (1)\r\n- AlwaysMatchFilter()\r\nFilters for --gcov-exclude: (0)\r\nFilters for --exclude-directories: (0)\r\nScanning directory . for gcda/gcno files...\r\nFound 2 files (and will process 1)\r\nPool started with 1 threads\r\nProcessing file: C:\\Working\\project\\project\\Tests\\unitTest\\out\\obj\\AdcProcess.gcda\r\nRunning gcov: 'gcov C:\\Working\\project\\project\\Tests\\unitTest\\out\\obj\\AdcProcess.gcda --branch-counts --branch-probabilities --preserve-paths --object-directory C:\\Working\\project\\project\\Tests\\unitTest\\out\\obj' in 'C:\\Users\\C8BFB~1.NIE\\AppData\\Local\\Temp\\tmp3_h6bkfa'\r\nRunning gcov: 'gcov C:\\Working\\project\\project\\Tests\\unitTest\\out\\obj\\AdcProcess.gcda --branch-counts --branch-probabilities --preserve-paths --object-directory C:\\Working\\project\\project\\Tests\\unitTest\\out\\obj' in 'C:\\Working\\project\\project\\Tests\\unitTest'\r\nFinding source file corresponding to a gcov data file\r\n  currdir      C:\\Working\\project\\project\\Tests\\unitTest\r\n  gcov_fname   C:\\Users\\C8BFB~1.NIE\\AppData\\Local\\Temp\\tmp3_h6bkfa\\^#^#^#project#Firmware#application#src#general#AdcProcess.c.gcov\r\n               ['        -', '    0', 'Source', '../../../project/Firmware/application/src/general/AdcProcess.c\\n']\r\n  source_fname C:\\Working\\project\\project\\Tests\\unitTest\\out\\obj\\AdcProcess.gcda\r\n  root         C:\\Working\\project\\project\\Tests\\unitTest\r\n  fname        C:\\Working\\project\\project\\Tests\\unitTest\\..\\..\\..\\project\\Firmware\\application\\src\\general\\AdcProcess.c\r\nParsing coverage data for file C:\\Working\\project\\project\\Tests\\unitTest\\..\\..\\..\\project\\Firmware\\application\\src\\general\\AdcProcess.c\r\nuncovered: {133, 134}\r\ncovered:   {69: 27, 71: 81, 73: 54, 75: 27, 77: 27, 79: 27, 90: 105, 92: 207, 94: 177, 96: 75, 100: 30, 108: 75, 110: 75, 112: 75, 114: 30, 115: 30, 116: 30, 117: 30, 118: 30, 120: 30, 121: 30, 122: 30, \r\n124: 30, 126: 30, 128: 15, 131: 15, 132: 15, 137: 75, 140: 36, 142: 36, 143: 36, 145: 15, 146: 15, 147: 15, 149: 21, 159: 30, 161: 30, 162: 30, 164: 15, 165: 15, 166: 15, 168: 15, 176: 45, 179: 45, 181: \r\n21, 185: 24, 188: 45, 189: 36, 190: 36, 191: 36, 193: 36}\r\nbranches:  {71: {0: 54, 1: 27}, 77: {1: 0, 2: 27}, 92: {0: 177, 1: 30}, 94: {0: 132, 1: 45, 2: 30, 3: 102}, 112: {0: 30, 1: 30, 2: 15, 3: 0}, 115: {1: 0, 2: 30}, 121: {1: 0, 2: 30}, 122: {0: 30, 1: 0}, 143: {0: 15, 1: 21}, 162: {0: 15, 1: 15}, 179: {0: 21, 1: 24}, 188: {0: 9, 1: 36, 3: 9, 4: 0, 5: 9, 6: 0, 12: 0, 13: 9}}\r\nnoncode:   {130, 135, 136, 138, 139, 13, 141, 15, 144, 18, 148, 22, 150, 24, 151, 30, 32, 160, 163, 38, 167, 40, 169, 170, 44, 45, 47, 48, 49, 177, 180, 182, 183, 56, 184, 186, 187, 61, 62, 192, 194, 70, 72, 74, 76, 78, 80, 81, 82, 83, 91, 93, 95, 97, 98, 99, 101, 102, 109, 111, 113, 119, 123, 125, 127}\r\nFinding source file corresponding to a gcov data file\r\n  currdir      C:\\Working\\project\\project\\Tests\\unitTest\r\n  gcov_fname   C:\\Users\\C8BFB~1.NIE\\AppData\\Local\\Temp\\tmp3_h6bkfa\\^#^#^#project#Firmware#bootloader#src#general#log#Log.h.gcov\r\n               ['        -', '    0', 'Source', '../../../project/Firmware/bootloader/src/general/log/Log.h\\n']\r\n  source_fname C:\\Working\\project\\project\\Tests\\unitTest\\out\\obj\\AdcProcess.gcda\r\n  root         C:\\Working\\project\\project\\Tests\\unitTest\r\n  fname        C:\\Working\\project\\project\\Tests\\unitTest\\..\\..\\..\\project\\Firmware\\bootloader\\src\\general\\log\\Log.h\r\nParsing coverage data for file C:\\Working\\project\\project\\Tests\\unitTest\\..\\..\\..\\project\\Firmware\\bootloader\\src\\general\\log\\Log.h\r\nuncovered: set()\r\ncovered:   {39: 18, 41: 18, 42: 18, 44: 18, 45: 18, 46: 18, 47: 18, 48: 18, 49: 18, 50: 18, 51: 18, 53: 18, 90: 18, 92: 18, 93: 18, 94: 18, 96: 18, 97: 18, 99: 18}\r\nbranches:  {42: {0: 18, 1: 0}, 94: {0: 18, 1: 0}}\r\nnoncode:   {130, 132, 134, 7, 136, 262, 10, 138, 139, 14, 400, 18, 278, 27, 413, 30, 34, 36, 38, 294, 40, 169, 426, 307, 52, 54, 439, 56, 187, 322, 195, 452, 76, 77, 78, 206, 80, 208, 210, 334, 465, 87, \r\n88, 89, 91, 478, 351, 224, 98, 226, 100, 101, 102, 359, 105, 489, 109, 110, 366, 240, 242, 500, 502, 503, 378}\r\nGathered coveraged data for 2 files\r\n```\r\n\r\nGcovr4.2\r\n```\r\nFilters for --root: (1)\r\n- re.compile('C:\\\\\\\\Working\\\\\\\\project\\\\\\\\project\\\\\\\\Tests\\\\\\\\unitTest\\\\\\\\')\r\nFilters for --filter: (1)\r\n- DirectoryPrefixFilter(C:/Working/project/project/Tests/unitTest/)\r\nFilters for --exclude: (0)\r\nFilters for --gcov-filter: (1)\r\n- AlwaysMatchFilter()\r\nFilters for --gcov-exclude: (0)\r\nFilters for --exclude-directories: (0)\r\nScanning directory . for gcda/gcno files...\r\nFound 2 files (and will process 1)\r\nPool started with 1 threads\r\nProcessing file: C:\\Working\\project\\project\\Tests\\unitTest\\out\\obj\\AdcProcess.gcda\r\nRunning gcov: 'gcov C:\\Working\\project\\project\\Tests\\unitTest\\out\\obj\\AdcProcess.gcda --branch-counts --branch-probabilities --preserve-paths --object-directory C:\\Working\\project\\project\\Tests\\unitTest\\out\\obj' in 'C:\\Users\\C8BFB~1.NIE\\AppData\\Local\\Temp\\tmpagnyvgpp'\r\nRunning gcov: 'gcov C:\\Working\\project\\project\\Tests\\unitTest\\out\\obj\\AdcProcess.gcda --branch-counts --branch-probabilities --preserve-paths --object-directory C:\\Working\\project\\project\\Tests\\unitTest\\out\\obj' in 'C:\\Working\\project\\project\\Tests\\unitTest'\r\nFinding source file corresponding to a gcov data file\r\n  currdir      C:\\Working\\project\\project\\Tests\\unitTest\r\n  gcov_fname   C:\\Users\\C8BFB~1.NIE\\AppData\\Local\\Temp\\tmpagnyvgpp\\^#^#^#project#Firmware#application#src#general#AdcProcess.c.gcov\r\n               ['        -', '    0', 'Source', '../../../project/Firmware/application/src/general/AdcProcess.c\\n']\r\n  source_fname C:\\Working\\project\\project\\Tests\\unitTest\\out\\obj\\AdcProcess.gcda\r\n  root         C:\\Working\\project\\project\\Tests\\unitTest\r\n  fname        C:\\Working\\project\\project\\Tests\\unitTest\\..\\..\\..\\project\\Firmware\\application\\src\\general\\AdcProcess.c\r\nParsing coverage data for file C:\\Working\\project\\project\\Tests\\unitTest\\..\\..\\..\\project\\Firmware\\application\\src\\general\\AdcProcess.c\r\n  Filtering coverage data for file C:\\Working\\project\\project\\Tests\\unitTest\\..\\..\\..\\project\\Firmware\\application\\src\\general\\AdcProcess.c\r\nFinding source file corresponding to a gcov data file\r\n  currdir      C:\\Working\\project\\project\\Tests\\unitTest\r\n  gcov_fname   C:\\Users\\C8BFB~1.NIE\\AppData\\Local\\Temp\\tmpagnyvgpp\\^#^#^#project#Firmware#bootloader#src#general#log#Log.h.gcov\r\n               ['        -', '    0', 'Source', '../../../project/Firmware/bootloader/src/general/log/Log.h\\n']\r\n  source_fname C:\\Working\\project\\project\\Tests\\unitTest\\out\\obj\\AdcProcess.gcda\r\n  root         C:\\Working\\project\\project\\Tests\\unitTest\r\n  fname        C:\\Working\\project\\project\\Tests\\unitTest\\..\\..\\..\\project\\Firmware\\bootloader\\src\\general\\log\\Log.h\r\nParsing coverage data for file C:\\Working\\project\\project\\Tests\\unitTest\\..\\..\\..\\project\\Firmware\\bootloader\\src\\general\\log\\Log.h\r\n  Filtering coverage data for file C:\\Working\\project\\project\\Tests\\unitTest\\..\\..\\..\\project\\Firmware\\bootloader\\src\\general\\log\\Log.h\r\nGathered coveraged data for 0 files\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/394", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/394/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/394/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/394/events", "html_url": "https://github.com/gcovr/gcovr/issues/394", "id": 641988223, "node_id": "MDU6SXNzdWU2NDE5ODgyMjM=", "number": 394, "title": "Branch Coverage is not showing in gcov Report for mock Functions", "user": {"login": "ustmalaysia", "id": 62544969, "node_id": "MDQ6VXNlcjYyNTQ0OTY5", "avatar_url": "https://avatars0.githubusercontent.com/u/62544969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ustmalaysia", "html_url": "https://github.com/ustmalaysia", "followers_url": "https://api.github.com/users/ustmalaysia/followers", "following_url": "https://api.github.com/users/ustmalaysia/following{/other_user}", "gists_url": "https://api.github.com/users/ustmalaysia/gists{/gist_id}", "starred_url": "https://api.github.com/users/ustmalaysia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ustmalaysia/subscriptions", "organizations_url": "https://api.github.com/users/ustmalaysia/orgs", "repos_url": "https://api.github.com/users/ustmalaysia/repos", "events_url": "https://api.github.com/users/ustmalaysia/events{/privacy}", "received_events_url": "https://api.github.com/users/ustmalaysia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 39711551, "node_id": "MDU6TGFiZWwzOTcxMTU1MQ==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-19T13:55:18Z", "updated_at": "2020-06-19T15:15:39Z", "closed_at": "2020-06-19T15:15:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "![image](https://user-images.githubusercontent.com/62544969/85140192-7f9bf100-b277-11ea-9d5d-8f6b6ad503ed.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/391", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/391/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/391/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/391/events", "html_url": "https://github.com/gcovr/gcovr/issues/391", "id": 633342601, "node_id": "MDU6SXNzdWU2MzMzNDI2MDE=", "number": 391, "title": "Vote: giving everyone* write access", "user": {"login": "latk", "id": 1782927, "node_id": "MDQ6VXNlcjE3ODI5Mjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1782927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/latk", "html_url": "https://github.com/latk", "followers_url": "https://api.github.com/users/latk/followers", "following_url": "https://api.github.com/users/latk/following{/other_user}", "gists_url": "https://api.github.com/users/latk/gists{/gist_id}", "starred_url": "https://api.github.com/users/latk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/latk/subscriptions", "organizations_url": "https://api.github.com/users/latk/orgs", "repos_url": "https://api.github.com/users/latk/repos", "events_url": "https://api.github.com/users/latk/events{/privacy}", "received_events_url": "https://api.github.com/users/latk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 790686708, "node_id": "MDU6TGFiZWw3OTA2ODY3MDg=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Vote", "name": "Type: Vote", "color": "850CE8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-07T11:52:15Z", "updated_at": "2020-07-07T20:42:51Z", "closed_at": "2020-07-07T20:42:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "For the last two years of gcovr development there have been many great contributions from the community, but I haven't always managed to stay atop of things and keep things flowing smoothly. I am therefore looking for ways to become less of a bottleneck, in particular by giving out write access more actively.\r\n\r\nProposal:\r\n* Starting 2020-06-15, I will begin inviting previous contributors to the @gcovr organization, which will give them **write access** to the gcovr/gcovr repository.\r\n* Instead of a heavyweight process, I'll act at my discretion to decide whether giving someone write access is appropriate. E.g. I expect that nearly all pull requests indicate that the contributor would use write access for good.\r\n* This policy will primarily trigger on future contributions, but I also expect to look at some existing contributors.\r\n\r\nPer the voting procedure suggested in #176, all **existing members** (@gcovr/developers, @gcovr/owners) are asked to **cast a vote** on this proprosal by writing a comment. Voting closes after one week, at 2020-06-15 12:00 UTC.\r\n\r\nDetails / Background / Safeguards:\r\n\r\n* People with write access (\u201cdevelopers\u201d) can manage issues, review pull requests, merge them, and cut releases.\r\n\r\n* The master branch is a protected branch, meaning that developers cannot push to it directly. Pull requests can only be merged if a different developer approves the PR. This serves as a safeguard to prevent abuse of write access.\r\n\r\n* The gcovr project has yet to adopt a formal Code of Conduct. In the meanwhile:\r\n  * Everyone (whether developer or other) is expected to act respectfully.\r\n  * Developers act on behalf of the project and must hold themselves to a higher standard.\r\n  * Trolling and rule-lawyering is not welcome in this context.\r\n  * I pledge to investigate and sanction unacceptable behaviour with due care, and can be reached at opensource at lukasatkinson.de (please mention `[CoC]` in the subject).\r\n  * This is not subject to the vote because I take this for granted.\r\n\r\n* There previously was a [process](https://gcovr.com/en/4.2/contributing.html#become-a-gcovr-developer) to get developer access, but it was never invoked. If this proposal is accepted, the old process will be retired.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/384", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/384/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/384/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/384/events", "html_url": "https://github.com/gcovr/gcovr/issues/384", "id": 628666982, "node_id": "MDU6SXNzdWU2Mjg2NjY5ODI=", "number": 384, "title": "Errors when gcov path contains space", "user": {"login": "cconverse711", "id": 4616788, "node_id": "MDQ6VXNlcjQ2MTY3ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/4616788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cconverse711", "html_url": "https://github.com/cconverse711", "followers_url": "https://api.github.com/users/cconverse711/followers", "following_url": "https://api.github.com/users/cconverse711/following{/other_user}", "gists_url": "https://api.github.com/users/cconverse711/gists{/gist_id}", "starred_url": "https://api.github.com/users/cconverse711/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cconverse711/subscriptions", "organizations_url": "https://api.github.com/users/cconverse711/orgs", "repos_url": "https://api.github.com/users/cconverse711/repos", "events_url": "https://api.github.com/users/cconverse711/events{/privacy}", "received_events_url": "https://api.github.com/users/cconverse711/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 799643750, "node_id": "MDU6TGFiZWw3OTk2NDM3NTA=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Platform:%20Windows", "name": "Platform: Windows", "color": "fef2c0", "default": false, "description": null}, {"id": 39711546, "node_id": "MDU6TGFiZWwzOTcxMTU0Ng==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Bug", "name": "Type: Bug", "color": "FF2408", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-01T19:20:54Z", "updated_at": "2020-06-02T07:47:39Z", "closed_at": "2020-06-02T07:47:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Should probably use `shlex.split` to properly handle spaces in quoted paths\r\n\r\nhttps://github.com/gcovr/gcovr/blob/56e2b2e2af2d8bf01ff9c283b24433a07e32657d/gcovr/gcov.py#L629\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/381", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/381/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/381/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/381/events", "html_url": "https://github.com/gcovr/gcovr/issues/381", "id": 627811365, "node_id": "MDU6SXNzdWU2Mjc4MTEzNjU=", "number": 381, "title": "Add color themes for html report", "user": {"login": "Spacetown", "id": 40258682, "node_id": "MDQ6VXNlcjQwMjU4Njgy", "avatar_url": "https://avatars3.githubusercontent.com/u/40258682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Spacetown", "html_url": "https://github.com/Spacetown", "followers_url": "https://api.github.com/users/Spacetown/followers", "following_url": "https://api.github.com/users/Spacetown/following{/other_user}", "gists_url": "https://api.github.com/users/Spacetown/gists{/gist_id}", "starred_url": "https://api.github.com/users/Spacetown/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Spacetown/subscriptions", "organizations_url": "https://api.github.com/users/Spacetown/orgs", "repos_url": "https://api.github.com/users/Spacetown/repos", "events_url": "https://api.github.com/users/Spacetown/events{/privacy}", "received_events_url": "https://api.github.com/users/Spacetown/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834072145, "node_id": "MDU6TGFiZWw4MzQwNzIxNDU=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Format:%20HTML", "name": "Format: HTML", "color": "CC9128", "default": false, "description": null}, {"id": 39711546, "node_id": "MDU6TGFiZWwzOTcxMTU0Ng==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Bug", "name": "Type: Bug", "color": "FF2408", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-30T20:16:44Z", "updated_at": "2020-07-23T20:10:25Z", "closed_at": "2020-07-23T20:10:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "From work I know CTC which uses red/blue, Jenkins default is also red/blue because of redgreen blind people. It would be nice to have such a feature for gcovr also.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/374", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/374/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/374/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/374/events", "html_url": "https://github.com/gcovr/gcovr/issues/374", "id": 615198971, "node_id": "MDU6SXNzdWU2MTUxOTg5NzE=", "number": 374, "title": "Extend tests to use an unified diff instead of a simple assert", "user": {"login": "Spacetown", "id": 40258682, "node_id": "MDQ6VXNlcjQwMjU4Njgy", "avatar_url": "https://avatars3.githubusercontent.com/u/40258682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Spacetown", "html_url": "https://github.com/Spacetown", "followers_url": "https://api.github.com/users/Spacetown/followers", "following_url": "https://api.github.com/users/Spacetown/following{/other_user}", "gists_url": "https://api.github.com/users/Spacetown/gists{/gist_id}", "starred_url": "https://api.github.com/users/Spacetown/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Spacetown/subscriptions", "organizations_url": "https://api.github.com/users/Spacetown/orgs", "repos_url": "https://api.github.com/users/Spacetown/repos", "events_url": "https://api.github.com/users/Spacetown/events{/privacy}", "received_events_url": "https://api.github.com/users/Spacetown/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2039433702, "node_id": "MDU6TGFiZWwyMDM5NDMzNzAy", "url": "https://api.github.com/repos/gcovr/gcovr/labels/QA", "name": "QA", "color": "c600b6", "default": false, "description": "related to testing, build infrastructure, etc"}, {"id": 39711548, "node_id": "MDU6TGFiZWwzOTcxMTU0OA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Enhancement", "name": "Type: Enhancement", "color": "300DFF", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-09T15:24:08Z", "updated_at": "2020-05-28T20:35:56Z", "closed_at": "2020-05-28T20:35:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be easier to check the tests if the output is an unified diff with a context ov several lines instead of a full diff.\r\nIf the test fails the clean should be skipped for easier update of the reference. The output directories should be ignored by git. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/370", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/370/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/370/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/370/events", "html_url": "https://github.com/gcovr/gcovr/issues/370", "id": 612846065, "node_id": "MDU6SXNzdWU2MTI4NDYwNjU=", "number": 370, "title": "The file name has underscore sign instead of dot in extension", "user": {"login": "Eldadc", "id": 2790397, "node_id": "MDQ6VXNlcjI3OTAzOTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2790397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Eldadc", "html_url": "https://github.com/Eldadc", "followers_url": "https://api.github.com/users/Eldadc/followers", "following_url": "https://api.github.com/users/Eldadc/following{/other_user}", "gists_url": "https://api.github.com/users/Eldadc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Eldadc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Eldadc/subscriptions", "organizations_url": "https://api.github.com/users/Eldadc/orgs", "repos_url": "https://api.github.com/users/Eldadc/repos", "events_url": "https://api.github.com/users/Eldadc/events{/privacy}", "received_events_url": "https://api.github.com/users/Eldadc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834072315, "node_id": "MDU6TGFiZWw4MzQwNzIzMTU=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Format:%20XML", "name": "Format: XML", "color": "7F683F", "default": false, "description": null}, {"id": 39711550, "node_id": "MDU6TGFiZWwzOTcxMTU1MA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Question", "name": "Type: Question", "color": "E80C59", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-05T19:38:12Z", "updated_at": "2020-05-06T09:13:26Z", "closed_at": "2020-05-06T09:13:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nAfter created a cobertura report , It seems all file names have underscore sign instead of dot in the file extension. \r\n\r\nExample : abc_cpp\r\nIs it by design? \r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/369", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/369/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/369/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/369/events", "html_url": "https://github.com/gcovr/gcovr/issues/369", "id": 612815531, "node_id": "MDU6SXNzdWU2MTI4MTU1MzE=", "number": 369, "title": "Legend in html is wrong if threshold options are 0% or 100%", "user": {"login": "Spacetown", "id": 40258682, "node_id": "MDQ6VXNlcjQwMjU4Njgy", "avatar_url": "https://avatars3.githubusercontent.com/u/40258682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Spacetown", "html_url": "https://github.com/Spacetown", "followers_url": "https://api.github.com/users/Spacetown/followers", "following_url": "https://api.github.com/users/Spacetown/following{/other_user}", "gists_url": "https://api.github.com/users/Spacetown/gists{/gist_id}", "starred_url": "https://api.github.com/users/Spacetown/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Spacetown/subscriptions", "organizations_url": "https://api.github.com/users/Spacetown/orgs", "repos_url": "https://api.github.com/users/Spacetown/repos", "events_url": "https://api.github.com/users/Spacetown/events{/privacy}", "received_events_url": "https://api.github.com/users/Spacetown/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834072145, "node_id": "MDU6TGFiZWw4MzQwNzIxNDU=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Format:%20HTML", "name": "Format: HTML", "color": "CC9128", "default": false, "description": null}, {"id": 39711546, "node_id": "MDU6TGFiZWwzOTcxMTU0Ng==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Bug", "name": "Type: Bug", "color": "FF2408", "default": false, "description": null}, {"id": 39711548, "node_id": "MDU6TGFiZWwzOTcxMTU0OA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Enhancement", "name": "Type: Enhancement", "color": "300DFF", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2020-05-05T18:44:38Z", "updated_at": "2020-05-27T16:43:12Z", "closed_at": "2020-05-27T16:42:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If `--html-high-threshold` is 100% in the html the legend is:\r\n`high: >= 100%`\r\nIf `--html-medium-threshold` is 0% in the html the legend is:\r\n`low: <= 0%`\r\n\r\nThe `=`shall only be printed if threshold isn't 0% or 100%", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/357", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/357/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/357/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/357/events", "html_url": "https://github.com/gcovr/gcovr/issues/357", "id": 582427488, "node_id": "MDU6SXNzdWU1ODI0Mjc0ODg=", "number": 357, "title": "--json ignores output file and prints to stdout", "user": {"login": "readmodifywrite", "id": 3618507, "node_id": "MDQ6VXNlcjM2MTg1MDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3618507?v=4", "gravatar_id": "", "url": "https://api.github.com/users/readmodifywrite", "html_url": "https://github.com/readmodifywrite", "followers_url": "https://api.github.com/users/readmodifywrite/followers", "following_url": "https://api.github.com/users/readmodifywrite/following{/other_user}", "gists_url": "https://api.github.com/users/readmodifywrite/gists{/gist_id}", "starred_url": "https://api.github.com/users/readmodifywrite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/readmodifywrite/subscriptions", "organizations_url": "https://api.github.com/users/readmodifywrite/orgs", "repos_url": "https://api.github.com/users/readmodifywrite/repos", "events_url": "https://api.github.com/users/readmodifywrite/events{/privacy}", "received_events_url": "https://api.github.com/users/readmodifywrite/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1436650001, "node_id": "MDU6TGFiZWwxNDM2NjUwMDAx", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Format:%20JSON", "name": "Format: JSON", "color": "efac8f", "default": false, "description": ""}, {"id": 39711546, "node_id": "MDU6TGFiZWwzOTcxMTU0Ng==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Bug", "name": "Type: Bug", "color": "FF2408", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-16T16:19:10Z", "updated_at": "2020-03-20T21:17:16Z", "closed_at": "2020-03-19T11:09:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "gcovr 4.2\r\n\r\nThe --json option doesn't write to a given output file (per the docs).  It will either ignore it and print results to stdout, or in some cases come up with an unknown directory error.\r\n\r\ngcovr -s -j --json stuff.json", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/354", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/354/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/354/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/354/events", "html_url": "https://github.com/gcovr/gcovr/issues/354", "id": 577542451, "node_id": "MDU6SXNzdWU1Nzc1NDI0NTE=", "number": 354, "title": "BUG: Please fix workers.py import queue ", "user": {"login": "Cherish-Gww", "id": 40050326, "node_id": "MDQ6VXNlcjQwMDUwMzI2", "avatar_url": "https://avatars2.githubusercontent.com/u/40050326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cherish-Gww", "html_url": "https://github.com/Cherish-Gww", "followers_url": "https://api.github.com/users/Cherish-Gww/followers", "following_url": "https://api.github.com/users/Cherish-Gww/following{/other_user}", "gists_url": "https://api.github.com/users/Cherish-Gww/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cherish-Gww/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cherish-Gww/subscriptions", "organizations_url": "https://api.github.com/users/Cherish-Gww/orgs", "repos_url": "https://api.github.com/users/Cherish-Gww/repos", "events_url": "https://api.github.com/users/Cherish-Gww/events{/privacy}", "received_events_url": "https://api.github.com/users/Cherish-Gww/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 39711551, "node_id": "MDU6TGFiZWwzOTcxMTU1MQ==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-08T18:21:18Z", "updated_at": "2020-03-09T09:46:14Z", "closed_at": "2020-03-09T09:35:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "queue package in python2.7 and python 3.5 is different, please change workers.py as flows\r\n```\r\ntry:\r\n   from queue import Queue, Empty\r\nexcept ImportError:\r\n   from Queue import Queue, Empty\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/353", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/353/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/353/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/353/events", "html_url": "https://github.com/gcovr/gcovr/issues/353", "id": 577535774, "node_id": "MDU6SXNzdWU1Nzc1MzU3NzQ=", "number": 353, "title": "BUG: Please fix workers.py import queue", "user": {"login": "Cherish-Gww", "id": 40050326, "node_id": "MDQ6VXNlcjQwMDUwMzI2", "avatar_url": "https://avatars2.githubusercontent.com/u/40050326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cherish-Gww", "html_url": "https://github.com/Cherish-Gww", "followers_url": "https://api.github.com/users/Cherish-Gww/followers", "following_url": "https://api.github.com/users/Cherish-Gww/following{/other_user}", "gists_url": "https://api.github.com/users/Cherish-Gww/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cherish-Gww/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cherish-Gww/subscriptions", "organizations_url": "https://api.github.com/users/Cherish-Gww/orgs", "repos_url": "https://api.github.com/users/Cherish-Gww/repos", "events_url": "https://api.github.com/users/Cherish-Gww/events{/privacy}", "received_events_url": "https://api.github.com/users/Cherish-Gww/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-08T17:30:57Z", "updated_at": "2020-03-08T18:10:20Z", "closed_at": "2020-03-08T18:10:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "The queue package in python 2.7 is queue, in python3.5 is Queue, Please fix workers.py import as:\r\n```\r\ntry:\r\n    import queue\r\nexcept ImportError:\r\n    import Queue as queue\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/352", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/352/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/352/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/352/events", "html_url": "https://github.com/gcovr/gcovr/issues/352", "id": 571250012, "node_id": "MDU6SXNzdWU1NzEyNTAwMTI=", "number": 352, "title": "Gcovr generate empty coverage report", "user": {"login": "lifreshman", "id": 3888136, "node_id": "MDQ6VXNlcjM4ODgxMzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3888136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lifreshman", "html_url": "https://github.com/lifreshman", "followers_url": "https://api.github.com/users/lifreshman/followers", "following_url": "https://api.github.com/users/lifreshman/following{/other_user}", "gists_url": "https://api.github.com/users/lifreshman/gists{/gist_id}", "starred_url": "https://api.github.com/users/lifreshman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lifreshman/subscriptions", "organizations_url": "https://api.github.com/users/lifreshman/orgs", "repos_url": "https://api.github.com/users/lifreshman/repos", "events_url": "https://api.github.com/users/lifreshman/events{/privacy}", "received_events_url": "https://api.github.com/users/lifreshman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834073566, "node_id": "MDU6TGFiZWw4MzQwNzM1NjY=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Gcov", "name": "Gcov", "color": "1735c6", "default": false, "description": null}, {"id": 39711550, "node_id": "MDU6TGFiZWwzOTcxMTU1MA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Question", "name": "Type: Question", "color": "E80C59", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-02-26T11:01:48Z", "updated_at": "2020-03-09T09:45:49Z", "closed_at": "2020-03-09T09:45:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "gcovr version 4.2\r\nsrc dir: `/opt/examples/src/test/test1/example.cpp`\r\ngcda dir: `/opt/examples/build/test/test1/example.gcda`\r\ngcno dir: `/opt/examples/build/test/test1/example.gcno`\r\ncd /opt/examples\r\n1. `gcovr -r ./src ./build`  generate **empty** coverage report\r\n2. `gcovr -r ./src/* ./build`  generate **empty** coverage report\r\n3. `gcovr -r ./src/*/* ./build`  get **correct** coverage report\r\n\r\nWhy are the coverage reports 1 & 2 empty?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/349", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/349/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/349/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/349/events", "html_url": "https://github.com/gcovr/gcovr/issues/349", "id": 556778878, "node_id": "MDU6SXNzdWU1NTY3Nzg4Nzg=", "number": 349, "title": "make it optional to use inline css or not", "user": {"login": "derived-coder", "id": 42534866, "node_id": "MDQ6VXNlcjQyNTM0ODY2", "avatar_url": "https://avatars3.githubusercontent.com/u/42534866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/derived-coder", "html_url": "https://github.com/derived-coder", "followers_url": "https://api.github.com/users/derived-coder/followers", "following_url": "https://api.github.com/users/derived-coder/following{/other_user}", "gists_url": "https://api.github.com/users/derived-coder/gists{/gist_id}", "starred_url": "https://api.github.com/users/derived-coder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/derived-coder/subscriptions", "organizations_url": "https://api.github.com/users/derived-coder/orgs", "repos_url": "https://api.github.com/users/derived-coder/repos", "events_url": "https://api.github.com/users/derived-coder/events{/privacy}", "received_events_url": "https://api.github.com/users/derived-coder/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834072145, "node_id": "MDU6TGFiZWw4MzQwNzIxNDU=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Format:%20HTML", "name": "Format: HTML", "color": "CC9128", "default": false, "description": null}, {"id": 39711548, "node_id": "MDU6TGFiZWwzOTcxMTU0OA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Enhancement", "name": "Type: Enhancement", "color": "300DFF", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-29T10:44:35Z", "updated_at": "2020-06-01T18:30:15Z", "closed_at": "2020-02-02T14:37:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Some CI servers has disabled inline css by default:\r\nhttps://wiki.jenkins.io/display/JENKINS/Configuring+Content+Security+Policy\r\n\r\nplease make it possible to generate a HTML report where the css is not inlined.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/347", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/347/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/347/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/347/events", "html_url": "https://github.com/gcovr/gcovr/issues/347", "id": 537630451, "node_id": "MDU6SXNzdWU1Mzc2MzA0NTE=", "number": 347, "title": "Allow generating text report in addition to any of the other output formats", "user": {"login": "Ram-Z", "id": 1587259, "node_id": "MDQ6VXNlcjE1ODcyNTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1587259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ram-Z", "html_url": "https://github.com/Ram-Z", "followers_url": "https://api.github.com/users/Ram-Z/followers", "following_url": "https://api.github.com/users/Ram-Z/following{/other_user}", "gists_url": "https://api.github.com/users/Ram-Z/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ram-Z/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ram-Z/subscriptions", "organizations_url": "https://api.github.com/users/Ram-Z/orgs", "repos_url": "https://api.github.com/users/Ram-Z/repos", "events_url": "https://api.github.com/users/Ram-Z/events{/privacy}", "received_events_url": "https://api.github.com/users/Ram-Z/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834071903, "node_id": "MDU6TGFiZWw4MzQwNzE5MDM=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Format:%20Text", "name": "Format: Text", "color": "FFB532", "default": false, "description": null}, {"id": 39711548, "node_id": "MDU6TGFiZWwzOTcxMTU0OA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Enhancement", "name": "Type: Enhancement", "color": "300DFF", "default": false, "description": null}, {"id": 788981331, "node_id": "MDU6TGFiZWw3ODg5ODEzMzE=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": null}, {"id": 788980057, "node_id": "MDU6TGFiZWw3ODg5ODAwNTc=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/help%20wanted", "name": "help wanted", "color": "0e8a16", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-12-13T16:04:19Z", "updated_at": "2020-07-20T19:17:17Z", "closed_at": "2020-07-20T19:17:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently when choosing any of the other output formats it's not possible to get the text report printed to stdout or even a file.\r\n\r\nI've tried the following, but neither work.\r\n\r\n```\r\n$ gcovr --sonarqube coverage.xml --output\r\nusage: gcovr [options] [search_paths...]\r\ngcovr: error: argument -o/--output: expected one argument\r\n$ gcovr --sonarqube coverage.xml --output -\r\n(WARNING) --output='-' option was provided but not used.\r\n$ gcovr --sonarqube coverage.xml --output /dev/stdout\r\n(WARNING) --output='/dev/stdout' option was provided but not used.\r\n$ gcovr --sonarqube coverage.xml --output report.txt\r\n(WARNING) --output='report.txt' option was provided but not used.\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/346", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/346/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/346/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/346/events", "html_url": "https://github.com/gcovr/gcovr/issues/346", "id": 536358075, "node_id": "MDU6SXNzdWU1MzYzNTgwNzU=", "number": 346, "title": "Early fail when HTML details output directory does not exist", "user": {"login": "0ge", "id": 7213234, "node_id": "MDQ6VXNlcjcyMTMyMzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/7213234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0ge", "html_url": "https://github.com/0ge", "followers_url": "https://api.github.com/users/0ge/followers", "following_url": "https://api.github.com/users/0ge/following{/other_user}", "gists_url": "https://api.github.com/users/0ge/gists{/gist_id}", "starred_url": "https://api.github.com/users/0ge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0ge/subscriptions", "organizations_url": "https://api.github.com/users/0ge/orgs", "repos_url": "https://api.github.com/users/0ge/repos", "events_url": "https://api.github.com/users/0ge/events{/privacy}", "received_events_url": "https://api.github.com/users/0ge/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834072145, "node_id": "MDU6TGFiZWw4MzQwNzIxNDU=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Format:%20HTML", "name": "Format: HTML", "color": "CC9128", "default": false, "description": null}, {"id": 39711548, "node_id": "MDU6TGFiZWwzOTcxMTU0OA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Enhancement", "name": "Type: Enhancement", "color": "300DFF", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-11T13:06:53Z", "updated_at": "2020-06-03T09:37:05Z", "closed_at": "2020-06-03T09:37:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "If `gcovr` is run with `--html-details`, but the designated output directory does not exist, gcovr will run the analysis (which may take some time). It will only then discover that the output directory does not exist, and fail with `IOError: [Errno 2] No such file or directory`.\r\n\r\nFrom a user perspective, it would be great if this was checked prior to the analysis. It may need some consideration if multiple output formats are specified.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/343", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/343/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/343/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/343/events", "html_url": "https://github.com/gcovr/gcovr/issues/343", "id": 531961594, "node_id": "MDU6SXNzdWU1MzE5NjE1OTQ=", "number": 343, "title": "hilite unexecuted executable lines", "user": {"login": "StevanWhite", "id": 1576377, "node_id": "MDQ6VXNlcjE1NzYzNzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1576377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/StevanWhite", "html_url": "https://github.com/StevanWhite", "followers_url": "https://api.github.com/users/StevanWhite/followers", "following_url": "https://api.github.com/users/StevanWhite/following{/other_user}", "gists_url": "https://api.github.com/users/StevanWhite/gists{/gist_id}", "starred_url": "https://api.github.com/users/StevanWhite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/StevanWhite/subscriptions", "organizations_url": "https://api.github.com/users/StevanWhite/orgs", "repos_url": "https://api.github.com/users/StevanWhite/repos", "events_url": "https://api.github.com/users/StevanWhite/events{/privacy}", "received_events_url": "https://api.github.com/users/StevanWhite/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834072145, "node_id": "MDU6TGFiZWw4MzQwNzIxNDU=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Format:%20HTML", "name": "Format: HTML", "color": "CC9128", "default": false, "description": null}, {"id": 834073566, "node_id": "MDU6TGFiZWw4MzQwNzM1NjY=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Gcov", "name": "Gcov", "color": "1735c6", "default": false, "description": null}, {"id": 39711548, "node_id": "MDU6TGFiZWwzOTcxMTU0OA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Enhancement", "name": "Type: Enhancement", "color": "300DFF", "default": false, "description": null}, {"id": 39711551, "node_id": "MDU6TGFiZWwzOTcxMTU1MQ==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-03T12:49:02Z", "updated_at": "2019-12-03T16:49:05Z", "closed_at": "2019-12-03T13:17:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "In its HTML output, gcovr hilites lines that are executed, and is concerned with how many times they were executed.  This is great for understanding performance.\r\n\r\nAnother important function of coverage is to check that all code has been tested, that is, to clearly indicate any code that has *not* been executed in the tests.\r\n\r\nBut (near as I can tell) the HTML output of gcovr doesn't distinguish between non-executable lines (comments, declarations, and blank lines) and executable lines.  This makes it very hard to perform this necessary coverage check.\r\n\r\nIt would be very helpful if all executable lines were somehow marked.  For instance, by hiliting them in light gray, it would be visually obvious that some lines had been overlooked in tests.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/340", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/340/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/340/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/340/events", "html_url": "https://github.com/gcovr/gcovr/issues/340", "id": 524722368, "node_id": "MDU6SXNzdWU1MjQ3MjIzNjg=", "number": 340, "title": "gcovr not working with out-of-source builds", "user": {"login": "freesurfer-rge", "id": 26102296, "node_id": "MDQ6VXNlcjI2MTAyMjk2", "avatar_url": "https://avatars2.githubusercontent.com/u/26102296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/freesurfer-rge", "html_url": "https://github.com/freesurfer-rge", "followers_url": "https://api.github.com/users/freesurfer-rge/followers", "following_url": "https://api.github.com/users/freesurfer-rge/following{/other_user}", "gists_url": "https://api.github.com/users/freesurfer-rge/gists{/gist_id}", "starred_url": "https://api.github.com/users/freesurfer-rge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/freesurfer-rge/subscriptions", "organizations_url": "https://api.github.com/users/freesurfer-rge/orgs", "repos_url": "https://api.github.com/users/freesurfer-rge/repos", "events_url": "https://api.github.com/users/freesurfer-rge/events{/privacy}", "received_events_url": "https://api.github.com/users/freesurfer-rge/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834073149, "node_id": "MDU6TGFiZWw4MzQwNzMxNDk=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Filters", "name": "Filters", "color": "2befd2", "default": false, "description": "related to filters, include/exclude, path handling"}, {"id": 39711550, "node_id": "MDU6TGFiZWwzOTcxMTU1MA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Question", "name": "Type: Question", "color": "E80C59", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-19T01:48:32Z", "updated_at": "2019-11-21T02:47:37Z", "closed_at": "2019-11-19T14:12:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm trying to use gcovr with a cmake project, and it's failing to report code coverage on a fairly basic setup. I've created a sample repository to demonstrate the issue:\r\nhttps://github.com/freesurfer-rge/gcovr-learn\r\n\r\nFor reference, if the sources are compiled using the `manualbuild.sh` script in the repo root, then after running the binary, `gcovr -r .` produces a sensible report.\r\n\r\nHowever, if I go to `/tmp/bld` and run\r\n```\r\ncmake ~/gcovr-learn/\r\nmake\r\n./tst/SimpleTest\r\n```\r\nthen `gcovr -r .` finds no source files and reports no usage. The `.gcno` and `.gcda` files are definitely produced. In particular:\r\n```\r\n./tst/CMakeFiles/SimpleTest.dir:\r\nCXX.includecache  cmake_clean.cmake  flags.make     simpletests.cpp.gcda  test.cpp.gcda\r\nDependInfo.cmake  depend.internal    link.txt       simpletests.cpp.gcno  test.cpp.gcno\r\nbuild.make        depend.make        progress.make  simpletests.cpp.o     test.cpp.o\r\n```\r\nbut they don't seem to be found. Running with `--verbose` I see output such as:\r\n```\r\nPool started with 1 threads\r\nProcessing file: /tmp/bld/src/CMakeFiles/simple.dir/simple.cpp.gcda\r\nRunning gcov: 'gcov /tmp/bld/src/CMakeFiles/simple.dir/simple.cpp.gcda --branch-counts --branch-probabilities --preserve-paths --object-directory /tmp/bld/src/CMakeFiles/simple.dir' in '/tmp/tmps35c5cdp'\r\nFinding source file corresponding to a gcov data file\r\n  currdir      /tmp/bld\r\n  gcov_fname   /tmp/tmps35c5cdp/#home#freesurferrge#gcovr-learn#src#simple.cpp.gcov\r\n               ['        -', '    0', 'Source', '/home/freesurferrge/gcovr-learn/src/simple.cpp\\n']\r\n  source_fname /tmp/bld/src/CMakeFiles/simple.dir/simple.cpp.gcda\r\n  root         /tmp/bld\r\n  fname        /home/freesurferrge/gcovr-learn/src/simple.cpp\r\nParsing coverage data for file /home/freesurferrge/gcovr-learn/src/simple.cpp\r\n  Filtering coverage data for file /home/freesurferrge/gcovr-learn/src/simple.cpp\r\n```\r\nwhich implies that files are being found OK.\r\n\r\nThe machine is a stock Azure ubuntu 18.04 VM, with the modifications detailed in the `setup-commands.txt` file in the repo root.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/339", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/339/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/339/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/339/events", "html_url": "https://github.com/gcovr/gcovr/issues/339", "id": 524694148, "node_id": "MDU6SXNzdWU1MjQ2OTQxNDg=", "number": 339, "title": "GCOVR seems to have a branch counting problem", "user": {"login": "iuripereira", "id": 20001741, "node_id": "MDQ6VXNlcjIwMDAxNzQx", "avatar_url": "https://avatars1.githubusercontent.com/u/20001741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iuripereira", "html_url": "https://github.com/iuripereira", "followers_url": "https://api.github.com/users/iuripereira/followers", "following_url": "https://api.github.com/users/iuripereira/following{/other_user}", "gists_url": "https://api.github.com/users/iuripereira/gists{/gist_id}", "starred_url": "https://api.github.com/users/iuripereira/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iuripereira/subscriptions", "organizations_url": "https://api.github.com/users/iuripereira/orgs", "repos_url": "https://api.github.com/users/iuripereira/repos", "events_url": "https://api.github.com/users/iuripereira/events{/privacy}", "received_events_url": "https://api.github.com/users/iuripereira/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834073566, "node_id": "MDU6TGFiZWw4MzQwNzM1NjY=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Gcov", "name": "Gcov", "color": "1735c6", "default": false, "description": null}, {"id": 39711550, "node_id": "MDU6TGFiZWwzOTcxMTU1MA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Question", "name": "Type: Question", "color": "E80C59", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-19T00:10:40Z", "updated_at": "2019-11-19T13:44:25Z", "closed_at": "2019-11-19T13:44:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a piece of code zipped to explain my question\r\n\r\nI compiled it with GCC 8+ with the command:\r\n`g++ -O0 --coverage -fno-exceptions -fno-inline main.cpp -o main`\r\n\r\nAfter that I executed the following command:\r\n`gcovr -r . --html -o index.html -p --print-summary --html-details  --exclude-unreachable-branches --exclude-throw-branches\r\n`\r\n\r\nWhen I was seeing the report, it shows me 1 of 2 branches taken at line **delete m** . Wich for me it was kinda awkward. \r\n\r\nThen I git cloned LCOV 1.14 and tried to make the same thing and with lcov this behavior is not present. There's no branches is this code.\r\n\r\nDo you think there is a bug counting branches in gcorv or am I wrong?\r\n[main.zip](https://github.com/gcovr/gcovr/files/3861276/main.zip)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/338", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/338/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/338/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/338/events", "html_url": "https://github.com/gcovr/gcovr/issues/338", "id": 518282441, "node_id": "MDU6SXNzdWU1MTgyODI0NDE=", "number": 338, "title": "Aggregation of coverage measurements for code with ifdef", "user": {"login": "peter-toft-greve", "id": 48215001, "node_id": "MDQ6VXNlcjQ4MjE1MDAx", "avatar_url": "https://avatars0.githubusercontent.com/u/48215001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-toft-greve", "html_url": "https://github.com/peter-toft-greve", "followers_url": "https://api.github.com/users/peter-toft-greve/followers", "following_url": "https://api.github.com/users/peter-toft-greve/following{/other_user}", "gists_url": "https://api.github.com/users/peter-toft-greve/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-toft-greve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-toft-greve/subscriptions", "organizations_url": "https://api.github.com/users/peter-toft-greve/orgs", "repos_url": "https://api.github.com/users/peter-toft-greve/repos", "events_url": "https://api.github.com/users/peter-toft-greve/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-toft-greve/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 39711550, "node_id": "MDU6TGFiZWwzOTcxMTU1MA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Question", "name": "Type: Question", "color": "E80C59", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-11-06T07:07:28Z", "updated_at": "2019-11-07T09:43:18Z", "closed_at": "2019-11-07T09:21:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have tried to raise a question on how to aggregate coverage measures for code with ifdef\r\nin https://stackoverflow.com/questions/58632496/how-to-get-100-coverage-with-gcovr-with-ifdef-code\r\nBasically - how can I summarize or aggregate test results from my code when tested with different \r\ncompile options. I cannot make this work.\r\n\r\nI guess that I probably should have asked here directly.\r\nIf answered I will cross-answer the stackoverflow my self.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/337", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/337/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/337/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/337/events", "html_url": "https://github.com/gcovr/gcovr/issues/337", "id": 517242629, "node_id": "MDU6SXNzdWU1MTcyNDI2Mjk=", "number": 337, "title": "--sonarqube option does not work", "user": {"login": "rianf2", "id": 12033128, "node_id": "MDQ6VXNlcjEyMDMzMTI4", "avatar_url": "https://avatars2.githubusercontent.com/u/12033128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rianf2", "html_url": "https://github.com/rianf2", "followers_url": "https://api.github.com/users/rianf2/followers", "following_url": "https://api.github.com/users/rianf2/following{/other_user}", "gists_url": "https://api.github.com/users/rianf2/gists{/gist_id}", "starred_url": "https://api.github.com/users/rianf2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rianf2/subscriptions", "organizations_url": "https://api.github.com/users/rianf2/orgs", "repos_url": "https://api.github.com/users/rianf2/repos", "events_url": "https://api.github.com/users/rianf2/events{/privacy}", "received_events_url": "https://api.github.com/users/rianf2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 39711550, "node_id": "MDU6TGFiZWwzOTcxMTU1MA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Question", "name": "Type: Question", "color": "E80C59", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-04T15:53:50Z", "updated_at": "2019-11-07T08:49:22Z", "closed_at": "2019-11-07T08:48:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to use gcovr to get some coverage statistics which will be parsed by SonarQube. It seems the ```--sonarqube``` option is not supported but is documented.  \r\n\r\nFor example, when I run this command: \r\n```gcovr -r . -r someUnwantedDir/ --sonarqube``` \r\n\r\nI get the following output: \r\n```usage: gcovr [options] [search_paths...]```\r\n```gcovr: error: unrecognized arguments: --sonarqube```\r\n\r\nI am using gcovr version 4.1.\r\n\r\nCan somebody please help?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/333", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/333/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/333/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/333/events", "html_url": "https://github.com/gcovr/gcovr/issues/333", "id": 493990560, "node_id": "MDU6SXNzdWU0OTM5OTA1NjA=", "number": 333, "title": "use --html-details to generate html file, but could not search source files", "user": {"login": "Cherish-forever", "id": 22201156, "node_id": "MDQ6VXNlcjIyMjAxMTU2", "avatar_url": "https://avatars2.githubusercontent.com/u/22201156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cherish-forever", "html_url": "https://github.com/Cherish-forever", "followers_url": "https://api.github.com/users/Cherish-forever/followers", "following_url": "https://api.github.com/users/Cherish-forever/following{/other_user}", "gists_url": "https://api.github.com/users/Cherish-forever/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cherish-forever/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cherish-forever/subscriptions", "organizations_url": "https://api.github.com/users/Cherish-forever/orgs", "repos_url": "https://api.github.com/users/Cherish-forever/repos", "events_url": "https://api.github.com/users/Cherish-forever/events{/privacy}", "received_events_url": "https://api.github.com/users/Cherish-forever/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834073149, "node_id": "MDU6TGFiZWw4MzQwNzMxNDk=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Filters", "name": "Filters", "color": "2befd2", "default": false, "description": "related to filters, include/exclude, path handling"}, {"id": 39711550, "node_id": "MDU6TGFiZWwzOTcxMTU1MA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Question", "name": "Type: Question", "color": "E80C59", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-16T11:24:21Z", "updated_at": "2019-09-16T13:52:15Z", "closed_at": "2019-09-16T13:22:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi \r\nI am using gcovr to generate html details for my coverage test, and I have some questions for gcovr:\r\nquestion:\r\nMy source files directory and my coverage build directory is in different path, and I use --html-details to generate coverage html details report, here is my command:\r\ngcovr -p -b -e \\\".*[Cc]eedling.vendor.*|^vendor.*|^build.*|^test.*|^lib.*\\\" --html --html-details -r . -o  \\\"build/artifacts/gcov/GcovCoverageResults.html\\\"\r\n\r\nI can get report, but html report could not show the details of my code coverage.\r\nI think the key is parameter -r.\r\nI run this command on my build root, and I did not tell gcovr where my source file is.\r\nbut when I give -r to my source file absolute path, it could`t show code too.\r\nSo I think your source code directory, and your build path, must be at a relative path, am I right? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/332", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/332/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/332/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/332/events", "html_url": "https://github.com/gcovr/gcovr/issues/332", "id": 493778637, "node_id": "MDU6SXNzdWU0OTM3Nzg2Mzc=", "number": 332, "title": "4.1: test suite is failing", "user": {"login": "kloczek", "id": 31284574, "node_id": "MDQ6VXNlcjMxMjg0NTc0", "avatar_url": "https://avatars0.githubusercontent.com/u/31284574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kloczek", "html_url": "https://github.com/kloczek", "followers_url": "https://api.github.com/users/kloczek/followers", "following_url": "https://api.github.com/users/kloczek/following{/other_user}", "gists_url": "https://api.github.com/users/kloczek/gists{/gist_id}", "starred_url": "https://api.github.com/users/kloczek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kloczek/subscriptions", "organizations_url": "https://api.github.com/users/kloczek/orgs", "repos_url": "https://api.github.com/users/kloczek/repos", "events_url": "https://api.github.com/users/kloczek/events{/privacy}", "received_events_url": "https://api.github.com/users/kloczek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 39711550, "node_id": "MDU6TGFiZWwzOTcxMTU1MA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Question", "name": "Type: Question", "color": "E80C59", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-15T19:51:48Z", "updated_at": "2019-11-07T09:19:55Z", "closed_at": "2019-11-07T09:19:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "<pre>+ cd gcovr-4.1\r\n+ /usr/bin/python3 setup.py test\r\nrunning test\r\nrunning egg_info\r\nwriting gcovr.egg-info/PKG-INFO\r\nwriting dependency_links to gcovr.egg-info/dependency_links.txt\r\nwriting entry points to gcovr.egg-info/entry_points.txt\r\nwriting requirements to gcovr.egg-info/requires.txt\r\nwriting top-level names to gcovr.egg-info/top_level.txt\r\nreading manifest file &apos;gcovr.egg-info/SOURCES.txt&apos;\r\nwriting manifest file &apos;gcovr.egg-info/SOURCES.txt&apos;\r\nrunning build_ext\r\ntest_gcovr (unittest.loader._FailedTest) ... ERROR\r\ngcovr.tests.test_gcovr (unittest.loader._FailedTest) ... ERROR\r\n\r\n======================================================================\r\nERROR: test_gcovr (unittest.loader._FailedTest)\r\n----------------------------------------------------------------------\r\nImportError: Failed to import test module: test_gcovr\r\nTraceback (most recent call last):\r\n  File &quot;/usr/lib64/python3.8/unittest/loader.py&quot;, line 154, in loadTestsFromName\r\n    module = __import__(module_name)\r\n  File &quot;/home/tkloczko/rpmbuild/BUILD/gcovr-4.1/gcovr/tests/test_gcovr.py&quot;, line 11, in &lt;module&gt;\r\n    from pyutilib.misc.pyyaml_util import compare_repn as compare_xml\r\nModuleNotFoundError: No module named &apos;pyutilib&apos;\r\n\r\n\r\n======================================================================\r\nERROR: gcovr.tests.test_gcovr (unittest.loader._FailedTest)\r\n----------------------------------------------------------------------\r\nImportError: Failed to import test module: gcovr.tests.test_gcovr\r\nTraceback (most recent call last):\r\n  File &quot;/usr/lib64/python3.8/unittest/loader.py&quot;, line 436, in _find_test_path\r\n    module = self._get_module_from_name(name)\r\n  File &quot;/usr/lib64/python3.8/unittest/loader.py&quot;, line 377, in _get_module_from_name\r\n    __import__(name)\r\n  File &quot;/home/tkloczko/rpmbuild/BUILD/gcovr-4.1/gcovr/tests/test_gcovr.py&quot;, line 11, in &lt;module&gt;\r\n    from pyutilib.misc.pyyaml_util import compare_repn as compare_xml\r\nModuleNotFoundError: No module named &apos;pyutilib&apos;\r\n\r\n\r\n----------------------------------------------------------------------\r\nRan 2 tests in 0.000s\r\n\r\nFAILED (errors=2)\r\nTest failed: &lt;unittest.runner.TextTestResult run=2 errors=2 failures=0&gt;\r\nerror: Test failed: &lt;unittest.runner.TextTestResult run=2 errors=2 failures=0&gt;\r\nerror: Bad exit status from /var/tmp/rpm-tmp.ddQtY5 (%check)\r\n</pre>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/329", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/329/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/329/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/329/events", "html_url": "https://github.com/gcovr/gcovr/issues/329", "id": 486239099, "node_id": "MDU6SXNzdWU0ODYyMzkwOTk=", "number": 329, "title": "Headers containing definitions are filtered in out-of-source build", "user": {"login": "mjvankampen", "id": 29380294, "node_id": "MDQ6VXNlcjI5MzgwMjk0", "avatar_url": "https://avatars0.githubusercontent.com/u/29380294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjvankampen", "html_url": "https://github.com/mjvankampen", "followers_url": "https://api.github.com/users/mjvankampen/followers", "following_url": "https://api.github.com/users/mjvankampen/following{/other_user}", "gists_url": "https://api.github.com/users/mjvankampen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjvankampen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjvankampen/subscriptions", "organizations_url": "https://api.github.com/users/mjvankampen/orgs", "repos_url": "https://api.github.com/users/mjvankampen/repos", "events_url": "https://api.github.com/users/mjvankampen/events{/privacy}", "received_events_url": "https://api.github.com/users/mjvankampen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834073149, "node_id": "MDU6TGFiZWw4MzQwNzMxNDk=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Filters", "name": "Filters", "color": "2befd2", "default": false, "description": "related to filters, include/exclude, path handling"}, {"id": 799643750, "node_id": "MDU6TGFiZWw3OTk2NDM3NTA=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Platform:%20Windows", "name": "Platform: Windows", "color": "fef2c0", "default": false, "description": null}, {"id": 39711546, "node_id": "MDU6TGFiZWwzOTcxMTU0Ng==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Bug", "name": "Type: Bug", "color": "FF2408", "default": false, "description": null}, {"id": 788981331, "node_id": "MDU6TGFiZWw3ODg5ODEzMzE=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": null}, {"id": 788980057, "node_id": "MDU6TGFiZWw3ODg5ODAwNTc=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/help%20wanted", "name": "help wanted", "color": "0e8a16", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2019-08-28T08:43:11Z", "updated_at": "2020-07-21T07:44:57Z", "closed_at": "2020-07-21T07:44:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that headers that contain definitions (such as templates) that are included in other cpp files get a path in gcov that is lower-case on windows (not sure on other OS). This means they do not match the root path anymore. Could the root filter be case-insensitive or do you feel this is an issue with gcov/gcc (6.3.0) and it should be fixed there? For me this seems like the directory is matching so this should not be filtered.\r\n\r\n```\r\nFinding source file corresponding to a gcov data file\r\n  currdir      C:\\Soft_Dev\\590008\\JLSCONTROL\\JLSOCSOURCE\\build\r\n  gcov_fname   C:\\Users\\mjvk\\AppData\\Local\\Temp\\tmp00sj52vb\\c~#soft_dev#590008#jlscontrol#jlsocsource#master#mastercommon#include#mastercommon#votercoremessages.hpp.gcov\r\n               ['        -', '    0', 'Source', 'c:/soft_dev/590008/jlscontrol/jlsocsource/master/mastercommon/include/mastercommon/votercoremessages.hpp\\n']\r\n  source_fname C:\\Soft_Dev\\590008\\JLSCONTROL\\JLSOCSOURCE\\build\\core\\src\\CMakeFiles\\libocscore.dir\\CoreScheduler.cpp.gcda\r\n  root         C:\\Soft_Dev\\590008\\JLSCONTROL\\JLSOCSOURCE\\MASTER\r\n  fname        c:\\soft_dev\\590008\\jlscontrol\\jlsocsource\\master\\mastercommon\\include\\mastercommon\\votercoremessages.hpp\r\nParsing coverage data for file c:\\soft_dev\\590008\\jlscontrol\\jlsocsource\\master\\mastercommon\\include\\mastercommon\\votercoremessages.hpp\r\n  Filtering coverage data for file c:\\soft_dev\\590008\\jlscontrol\\jlsocsource\\master\\mastercommon\\include\\mastercommon\\votercoremessages.hpp\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/327", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/327/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/327/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/327/events", "html_url": "https://github.com/gcovr/gcovr/issues/327", "id": 482205565, "node_id": "MDU6SXNzdWU0ODIyMDU1NjU=", "number": 327, "title": "Gcovr total line count different from lcov", "user": {"login": "charleyw", "id": 1860329, "node_id": "MDQ6VXNlcjE4NjAzMjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1860329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charleyw", "html_url": "https://github.com/charleyw", "followers_url": "https://api.github.com/users/charleyw/followers", "following_url": "https://api.github.com/users/charleyw/following{/other_user}", "gists_url": "https://api.github.com/users/charleyw/gists{/gist_id}", "starred_url": "https://api.github.com/users/charleyw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charleyw/subscriptions", "organizations_url": "https://api.github.com/users/charleyw/orgs", "repos_url": "https://api.github.com/users/charleyw/repos", "events_url": "https://api.github.com/users/charleyw/events{/privacy}", "received_events_url": "https://api.github.com/users/charleyw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834073566, "node_id": "MDU6TGFiZWw4MzQwNzM1NjY=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Gcov", "name": "Gcov", "color": "1735c6", "default": false, "description": null}, {"id": 39711546, "node_id": "MDU6TGFiZWwzOTcxMTU0Ng==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Bug", "name": "Type: Bug", "color": "FF2408", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-19T09:34:46Z", "updated_at": "2019-08-19T11:56:32Z", "closed_at": "2019-08-19T11:39:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there, \r\nI'm using gcovr to generate coverage data on exist .gcov files. It's very good tool.\r\n\r\nBut I found there is a small diference in counting total lines according to lcov results. \r\nGcovr always show more total line than lcov results (in html results).\r\nI found it's because lcov totally respect \"-\" marker in .gcov file, but Gcovr not, see the source code below,\r\n\r\n```python\r\n        if firstchar == '-' or (self.excluding and firstchar in \"#=0123456789\"):\r\n            # remember certain non-executed lines\r\n            if self.excluding or is_non_code(code):\r\n                self.coverage.line(self.lineno).noncode = True\r\n            return True\r\n\r\n```\r\nBecause this piece of code there are lots of code (comments, include statements, declaration) that lcov not deem as executable code but gcovr seem to treat as executable code. \r\nThis caused a big issue that the line coverage is very low in gcovr compare with lcov which is due to the total line in gcovr is bigger.\r\n\r\nI googled that \"-\" in .gcov file means no code, so i just edit gcovr source code(list above) to following. Then the line coverage calculated in gcovr is same as lcov.\r\n```python\r\n        if firstchar == '-':\r\n            self.coverage.line(self.lineno).noncode = True\r\n            return True\r\n\r\n        if (self.excluding and firstchar in \"#=0123456789\"):\r\n            # remember certain non-executed lines\r\n            if self.excluding or is_non_code(code):\r\n                self.coverage.line(self.lineno).noncode = True\r\n            return True\r\n```\r\nSo. I doubt that is lcov calculation is wrong or there are some mistakes in gcovr?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/322", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/322/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/322/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/322/events", "html_url": "https://github.com/gcovr/gcovr/issues/322", "id": 464689670, "node_id": "MDU6SXNzdWU0NjQ2ODk2NzA=", "number": 322, "title": "Generating coverage report on another machine?", "user": {"login": "inorton", "id": 58906, "node_id": "MDQ6VXNlcjU4OTA2", "avatar_url": "https://avatars3.githubusercontent.com/u/58906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inorton", "html_url": "https://github.com/inorton", "followers_url": "https://api.github.com/users/inorton/followers", "following_url": "https://api.github.com/users/inorton/following{/other_user}", "gists_url": "https://api.github.com/users/inorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/inorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inorton/subscriptions", "organizations_url": "https://api.github.com/users/inorton/orgs", "repos_url": "https://api.github.com/users/inorton/repos", "events_url": "https://api.github.com/users/inorton/events{/privacy}", "received_events_url": "https://api.github.com/users/inorton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834073566, "node_id": "MDU6TGFiZWw4MzQwNzM1NjY=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Gcov", "name": "Gcov", "color": "1735c6", "default": false, "description": null}, {"id": 39711548, "node_id": "MDU6TGFiZWwzOTcxMTU0OA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Enhancement", "name": "Type: Enhancement", "color": "300DFF", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-05T15:29:55Z", "updated_at": "2019-07-06T18:16:50Z", "closed_at": "2019-07-06T18:16:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "My builds are executed inside docker containers, I have disposable build environments and only keep the build outputs (I keep my programs and the gcno files)\r\n\r\nWhen I run my tests on a real system I see gcda files being created correctly, I can change where they appear by setting GCOV_PREFIX and GCOV_PREFIX_STRIP and this works.\r\n\r\nHowever, gcovr reads the original compile-time absolute path from the gcda files (which is not on this test machine) yet I do have the source tree availble (just at a different absolute path).\r\n\r\nThe error messages appear as warnings like so:\r\n```\r\n(WARNING) GCOV produced the following errors processing /home/devel/bamboo-agent-home/xml-data/build-dir/CIR-CKCOV-CKL64/build-host-linux-gcov/cutils/examples/CMakeFiles/examples-obj.dir/ncthread-unix.c.gcda:\r\n\t\tCannot open source file /home/devel/bamboo-agent-home/xml-data/build-dir/NC-MAIN01-GCOV64/cutils/examples/ncthread-unix.c\r\n```\r\n\r\nHow do I tell gcovr to actually look in my `--root` folder instead of these absolute paths in the gcda files?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/321", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/321/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/321/events", "html_url": "https://github.com/gcovr/gcovr/issues/321", "id": 464190572, "node_id": "MDU6SXNzdWU0NjQxOTA1NzI=", "number": 321, "title": "Addition of json reports ", "user": {"login": "Minkush-sopho", "id": 22594194, "node_id": "MDQ6VXNlcjIyNTk0MTk0", "avatar_url": "https://avatars3.githubusercontent.com/u/22594194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Minkush-sopho", "html_url": "https://github.com/Minkush-sopho", "followers_url": "https://api.github.com/users/Minkush-sopho/followers", "following_url": "https://api.github.com/users/Minkush-sopho/following{/other_user}", "gists_url": "https://api.github.com/users/Minkush-sopho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Minkush-sopho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Minkush-sopho/subscriptions", "organizations_url": "https://api.github.com/users/Minkush-sopho/orgs", "repos_url": "https://api.github.com/users/Minkush-sopho/repos", "events_url": "https://api.github.com/users/Minkush-sopho/events{/privacy}", "received_events_url": "https://api.github.com/users/Minkush-sopho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1436650001, "node_id": "MDU6TGFiZWwxNDM2NjUwMDAx", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Format:%20JSON", "name": "Format: JSON", "color": "efac8f", "default": false, "description": ""}, {"id": 39711548, "node_id": "MDU6TGFiZWwzOTcxMTU0OA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Enhancement", "name": "Type: Enhancement", "color": "300DFF", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-04T10:27:11Z", "updated_at": "2019-07-04T20:19:49Z", "closed_at": "2019-07-04T20:18:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Addition of choice of json reports can be implemented which should just simply generate a json with missing lines coverage along with file name in a json format. \r\nSomewhat like this: \r\n`{\r\nfiles: [\r\npath: 'A.cpp'\r\ncoverage: {\r\nline: 43\r\nexec_count : 0\r\n}\r\n...\r\n]\r\n}`\r\nSuch form of report can be highly useful in integrating the coverage data in other development tools such Gerrit. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/317", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/317/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/317/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/317/events", "html_url": "https://github.com/gcovr/gcovr/issues/317", "id": 456195585, "node_id": "MDU6SXNzdWU0NTYxOTU1ODU=", "number": 317, "title": "gcda", "user": {"login": "the-code-cult", "id": 10877255, "node_id": "MDQ6VXNlcjEwODc3MjU1", "avatar_url": "https://avatars1.githubusercontent.com/u/10877255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the-code-cult", "html_url": "https://github.com/the-code-cult", "followers_url": "https://api.github.com/users/the-code-cult/followers", "following_url": "https://api.github.com/users/the-code-cult/following{/other_user}", "gists_url": "https://api.github.com/users/the-code-cult/gists{/gist_id}", "starred_url": "https://api.github.com/users/the-code-cult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the-code-cult/subscriptions", "organizations_url": "https://api.github.com/users/the-code-cult/orgs", "repos_url": "https://api.github.com/users/the-code-cult/repos", "events_url": "https://api.github.com/users/the-code-cult/events{/privacy}", "received_events_url": "https://api.github.com/users/the-code-cult/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-14T11:19:05Z", "updated_at": "2019-06-14T11:19:15Z", "closed_at": "2019-06-14T11:19:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/316", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/316/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/316/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/316/events", "html_url": "https://github.com/gcovr/gcovr/issues/316", "id": 454306713, "node_id": "MDU6SXNzdWU0NTQzMDY3MTM=", "number": 316, "title": "Collecting coverage under QNX", "user": {"login": "latk", "id": 1782927, "node_id": "MDQ6VXNlcjE3ODI5Mjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1782927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/latk", "html_url": "https://github.com/latk", "followers_url": "https://api.github.com/users/latk/followers", "following_url": "https://api.github.com/users/latk/following{/other_user}", "gists_url": "https://api.github.com/users/latk/gists{/gist_id}", "starred_url": "https://api.github.com/users/latk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/latk/subscriptions", "organizations_url": "https://api.github.com/users/latk/orgs", "repos_url": "https://api.github.com/users/latk/repos", "events_url": "https://api.github.com/users/latk/events{/privacy}", "received_events_url": "https://api.github.com/users/latk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834073566, "node_id": "MDU6TGFiZWw4MzQwNzM1NjY=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Gcov", "name": "Gcov", "color": "1735c6", "default": false, "description": null}, {"id": 39711550, "node_id": "MDU6TGFiZWwzOTcxMTU1MA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Question", "name": "Type: Question", "color": "E80C59", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-10T18:30:23Z", "updated_at": "2019-06-11T12:08:57Z", "closed_at": "2019-06-11T12:08:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "_Originally posted by @nikhilbagul in https://github.com/gcovr/gcovr/issues/259#issuecomment-500504846_\r\n\r\nI am running into a similar issue. I am building and running a UnitTest app for shared libraries made in QT. I am running it on an arm_v8 platform running QNX 7.0\r\n\r\nBelow are the environment specs to help you understand better: \r\n\r\nCompiler toolchain: \r\nqmake (3.1) (Qt 5.12.0)\r\nqcc\r\n\r\nI followed the steps mentioned here : \r\n[gcov on QNX](https://www.qnx.com/developers/docs/7.0.0/#com.qnx.doc.neutrino.utilities/topic/g/gcov.html)\r\n\r\nAfter playing around much I am still trying to get my head around why the .gcda files generated on target do not produce a **gcovr** code coverage report when moved back to the host. \r\n\r\nBelow is the log for reference: \r\n\r\n```\r\nFilters for --root: (1)\r\n- <_sre.SRE_Pattern object at 0x7facca83d200>\r\nFilters for --filter: (1)\r\n- DirectoryPrefixFilter(\\/Users\\/nikhil\\.bagul\\/QtProjects\\/VPCluster\\/InstrumentCluster\\/InstrumentCluster\\/DatahandlerUtil\\/FixedID\\/src\\/)\r\nFilters for --exclude: (0)\r\nFilters for --gcov-filter: (1)\r\n- AlwaysMatchFilter()\r\nFilters for --gcov-exclude: (0)\r\nFilters for --exclude-directories: (0)\r\nScanning directory . for gcda/gcno files...\r\nFound 5 files (and will process 3)\r\nPool started with 1 threads\r\nProcessing file: /Users/nikhil.bagul/QtProjects/VPCluster/InstrumentCluster/InstrumentCluster/DatahandlerUtil/FixedID/src/fixed_id.gcda\r\nRunning gcov: 'gcov /Users/nikhil.bagul/QtProjects/VPCluster/InstrumentCluster/InstrumentCluster/DatahandlerUtil/FixedID/src/fixed_id.gcda --branch-counts --branch-probabilities --preserve-paths --object-directory /Users/nikhil.bagul/QtProjects/VPCluster/InstrumentCluster/InstrumentCluster/DatahandlerUtil/FixedID/src' in '/var/folders/_2/pxhj8y854g54d1bzsqkbt0jj8_vp25/T/tmpeNuONP'\r\nProcessing file: /Users/nikhil.bagul/QtProjects/VPCluster/InstrumentCluster/InstrumentCluster/DatahandlerUtil/FixedID/src/moc_fixed_id.gcda\r\nRunning gcov: 'gcov /Users/nikhil.bagul/QtProjects/VPCluster/InstrumentCluster/InstrumentCluster/DatahandlerUtil/FixedID/src/moc_fixed_id.gcda --branch-counts --branch-probabilities --preserve-paths --object-directory /Users/nikhil.bagul/QtProjects/VPCluster/InstrumentCluster/InstrumentCluster/DatahandlerUtil/FixedID/src' in '/var/folders/_2/pxhj8y854g54d1bzsqkbt0jj8_vp25/T/tmpeNuONP'\r\nProcessing file: /Users/nikhil.bagul/QtProjects/VPCluster/InstrumentCluster/InstrumentCluster/DatahandlerUtil/FixedID/src/moc_fixed_values.gcno\r\nRunning gcov: 'gcov /Users/nikhil.bagul/QtProjects/VPCluster/InstrumentCluster/InstrumentCluster/DatahandlerUtil/FixedID/src/moc_fixed_values.gcno --branch-counts --branch-probabilities --preserve-paths --object-directory /Users/nikhil.bagul/QtProjects/VPCluster/InstrumentCluster/InstrumentCluster/DatahandlerUtil/FixedID/src' in '/var/folders/_2/pxhj8y854g54d1bzsqkbt0jj8_vp25/T/tmpeNuONP'\r\nGathered coveraged data for 0 files\r\n```\r\n\r\nThe generated coverage report is empty.\r\n\r\nI have also tried running gcov on an individual source file to run into the following issue: \r\n\r\nUnexpected version: *405.\r\nInvalid .gcno File!\r\n\r\nI double checked my paths and environment variables on the target platform with no luck, I am running out of ideas here. If you had any luck on generating coverage in your cross-platform venture it will be super helpful if you can share some wisdom. \r\n\r\nThanks bud!\r\n\r\nAlso attaching the Makefile for reference.\r\n[Makefile.txt](https://github.com/gcovr/gcovr/files/3273139/Makefile.txt)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/314", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/314/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/314/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/314/events", "html_url": "https://github.com/gcovr/gcovr/issues/314", "id": 450144137, "node_id": "MDU6SXNzdWU0NTAxNDQxMzc=", "number": 314, "title": "*.gcda:stamp mismatch with notes file", "user": {"login": "the-code-cult", "id": 10877255, "node_id": "MDQ6VXNlcjEwODc3MjU1", "avatar_url": "https://avatars1.githubusercontent.com/u/10877255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the-code-cult", "html_url": "https://github.com/the-code-cult", "followers_url": "https://api.github.com/users/the-code-cult/followers", "following_url": "https://api.github.com/users/the-code-cult/following{/other_user}", "gists_url": "https://api.github.com/users/the-code-cult/gists{/gist_id}", "starred_url": "https://api.github.com/users/the-code-cult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the-code-cult/subscriptions", "organizations_url": "https://api.github.com/users/the-code-cult/orgs", "repos_url": "https://api.github.com/users/the-code-cult/repos", "events_url": "https://api.github.com/users/the-code-cult/events{/privacy}", "received_events_url": "https://api.github.com/users/the-code-cult/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834073566, "node_id": "MDU6TGFiZWw4MzQwNzM1NjY=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Gcov", "name": "Gcov", "color": "1735c6", "default": false, "description": null}, {"id": 39711550, "node_id": "MDU6TGFiZWwzOTcxMTU1MA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Question", "name": "Type: Question", "color": "E80C59", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-30T05:58:52Z", "updated_at": "2019-05-31T15:33:44Z", "closed_at": "2019-05-31T15:33:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am working on code-coverage part, in which there is a step where upon running the UnitTest binary files on QNX target(VMWare workstation). I get intermediate files (*.gcda) attributed with its generation time stamp.\r\n\r\n \r\n\r\n**Background**:\r\n\r\nGCOV tool runs considering the objects files(*.gcno) and data files(*.gcda) which are result of project build and binary execution on the target respectively.\r\n\r\n \r\n\r\n**Problem**:\r\n\r\nSince there is a coupling between time stamp of both *gcno and *gcda order. Code coverage result is not produced for few of the files.\r\n\r\ni.e gcda files' timestap is lagging behind than gcno due to QNX(VMWare workstation) time settings.\r\n\r\n \r\n\r\n**What I have tried:**\r\n\r\n**1.** I have changed the time by \"date\" command and I get proper display with new time set.\r\n\r\nHow to change date and time in QNX machine\r\n\r\nDate <MonthDayHourMinuteCenturyYear> 5Th May 2:50 20th century 2019\r\n\r\ndate 052914502019\r\n \r\n\r\n**2.** I have changed the TIMEZONE also from GMT to Indian Standard TIME.\r\n\r\nenv TZ=PST8PDT\r\n\r\nexport TZ=PST8PDT\r\n\r\nsetconf _CS_TIMEZONE PST8PDT (I failed to run this step)\r\n\r\n **3.** When I run \"date\" command I get --> Wed May 29 09\r\n\r\nUnfortunately: When I execute the binaries, I always get the *gcda files with lagging time stamp from the QNX target machine?\r\n\r\n **4.** I have **touched** the files by touch command, it changes the time stamp. But still gcov give same results.\r\n\r\n I tried touch command, it changes the time stamp attribute of the respective file. But somehow gcov does not recognize this new time stamp.\r\n\r\nI think now its GCOV's issue to read and address the attribute changes?\r\n\r\nRegards,\r\nBasavaraj A S", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/313", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/313/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/313/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/313/events", "html_url": "https://github.com/gcovr/gcovr/issues/313", "id": 448121430, "node_id": "MDU6SXNzdWU0NDgxMjE0MzA=", "number": 313, "title": "Windows absolute paths are garbled when passed to shutil", "user": {"login": "tuze-kuyucu", "id": 43579646, "node_id": "MDQ6VXNlcjQzNTc5NjQ2", "avatar_url": "https://avatars0.githubusercontent.com/u/43579646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tuze-kuyucu", "html_url": "https://github.com/tuze-kuyucu", "followers_url": "https://api.github.com/users/tuze-kuyucu/followers", "following_url": "https://api.github.com/users/tuze-kuyucu/following{/other_user}", "gists_url": "https://api.github.com/users/tuze-kuyucu/gists{/gist_id}", "starred_url": "https://api.github.com/users/tuze-kuyucu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tuze-kuyucu/subscriptions", "organizations_url": "https://api.github.com/users/tuze-kuyucu/orgs", "repos_url": "https://api.github.com/users/tuze-kuyucu/repos", "events_url": "https://api.github.com/users/tuze-kuyucu/events{/privacy}", "received_events_url": "https://api.github.com/users/tuze-kuyucu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834073149, "node_id": "MDU6TGFiZWw4MzQwNzMxNDk=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Filters", "name": "Filters", "color": "2befd2", "default": false, "description": "related to filters, include/exclude, path handling"}, {"id": 799643750, "node_id": "MDU6TGFiZWw3OTk2NDM3NTA=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Platform:%20Windows", "name": "Platform: Windows", "color": "fef2c0", "default": false, "description": null}, {"id": 39711546, "node_id": "MDU6TGFiZWwzOTcxMTU0Ng==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Bug", "name": "Type: Bug", "color": "FF2408", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-24T11:30:06Z", "updated_at": "2019-05-24T13:37:37Z", "closed_at": "2019-05-24T13:37:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Relative paths seem to work fine i.e. `gcovr -r .` but giving the absolute path to a repo ends up in the exception below:\r\n```\r\nc:\\code\\cc13xx_firmware\\build_host>python -m gcovr -r C:/code/cc13xx_firmware\r\nTraceback (most recent call last):\r\n  File \"C:\\Anaconda3\\envs\\dt_python3\\lib\\site-packages\\gcovr\\workers.py\", line 71, in worker\r\n    work(*args, **kwargs)\r\n  File \"C:\\Anaconda3\\envs\\dt_python3\\lib\\site-packages\\gcovr\\gcov.py\", line 564, in process_datafile\r\n    options=options, logger=logger, toerase=toerase, errors=errors, chdir=dir_, tempdir=workdir)\r\n  File \"C:\\Anaconda3\\envs\\dt_python3\\lib\\site-packages\\gcovr\\gcov.py\", line 666, in run_gcov_and_process_files\r\n    tempdir=tempdir)\r\n  File \"C:\\Anaconda3\\envs\\dt_python3\\lib\\site-packages\\gcovr\\gcov.py\", line 711, in select_gcov_files_from_stdout\r\n    shutil.copyfile(full, active_files[-1])\r\n  File \"C:\\Anaconda3\\envs\\dt_python3\\lib\\shutil.py\", line 114, in copyfile\r\n    with open(src, 'rb') as fsrc:\r\nFileNotFoundError: [Errno 2] No such file or directory: 'C:\\\\#home#tuze#repos#cc13xx_firmware#dt_mcu_lib#drivers_cc13xx#dt_nvm#src#dt_nvm_counter.c.gcov'\r\nTraceback (most recent call last):\r\n  File \"C:\\Anaconda3\\envs\\dt_python3\\lib\\site-packages\\gcovr\\workers.py\", line 71, in worker\r\n    work(*args, **kwargs)\r\n  File \"C:\\Anaconda3\\envs\\dt_python3\\lib\\site-packages\\gcovr\\gcov.py\", line 564, in process_datafile\r\n    options=options, logger=logger, toerase=toerase, errors=errors, chdir=dir_, tempdir=workdir)\r\n  File \"C:\\Anaconda3\\envs\\dt_python3\\lib\\site-packages\\gcovr\\gcov.py\", line 666, in run_gcov_and_process_files\r\n    tempdir=tempdir)\r\n  File \"C:\\Anaconda3\\envs\\dt_python3\\lib\\site-packages\\gcovr\\gcov.py\", line 711, in select_gcov_files_from_stdout\r\n    shutil.copyfile(full, active_files[-1])\r\n  File \"C:\\Anaconda3\\envs\\dt_python3\\lib\\shutil.py\", line 114, in copyfile\r\n    with open(src, 'rb') as fsrc:\r\nFileNotFoundError: [Errno 2] No such file or directory: 'C:\\\\#home#tuze#repos#cc13xx_firmware#dt_mcu_lib#drivers_cc13xx#dt_nvm#src#dt_nvm_counter.c.gcov'\r\nTraceback (most recent call last):\r\n  File \"C:\\Anaconda3\\envs\\dt_python3\\lib\\runpy.py\", line 170, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"C:\\Anaconda3\\envs\\dt_python3\\lib\\runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"C:\\Anaconda3\\envs\\dt_python3\\lib\\site-packages\\gcovr\\__main__.py\", line 600, in <module>\r\n    main()\r\n  File \"C:\\Anaconda3\\envs\\dt_python3\\lib\\site-packages\\gcovr\\__main__.py\", line 562, in main\r\n    contexts = pool.wait()\r\n  File \"C:\\Anaconda3\\envs\\dt_python3\\lib\\site-packages\\gcovr\\workers.py\", line 160, in __exit__\r\n    self.wait()\r\n  File \"C:\\Anaconda3\\envs\\dt_python3\\lib\\site-packages\\gcovr\\workers.py\", line 151, in wait\r\n    raise self.exceptions[0][1]\r\n  File \"C:\\Anaconda3\\envs\\dt_python3\\lib\\site-packages\\gcovr\\__main__.py\", line 562, in main\r\n    contexts = pool.wait()\r\n  File \"C:\\Anaconda3\\envs\\dt_python3\\lib\\site-packages\\gcovr\\workers.py\", line 151, in wait\r\n    raise self.exceptions[0][1]\r\n  File \"C:\\Anaconda3\\envs\\dt_python3\\lib\\site-packages\\gcovr\\workers.py\", line 71, in worker\r\n    work(*args, **kwargs)\r\n  File \"C:\\Anaconda3\\envs\\dt_python3\\lib\\site-packages\\gcovr\\gcov.py\", line 564, in process_datafile\r\n    options=options, logger=logger, toerase=toerase, errors=errors, chdir=dir_, tempdir=workdir)\r\n  File \"C:\\Anaconda3\\envs\\dt_python3\\lib\\site-packages\\gcovr\\gcov.py\", line 666, in run_gcov_and_process_files\r\n    tempdir=tempdir)\r\n  File \"C:\\Anaconda3\\envs\\dt_python3\\lib\\site-packages\\gcovr\\gcov.py\", line 711, in select_gcov_files_from_stdout\r\n    shutil.copyfile(full, active_files[-1])\r\n  File \"C:\\Anaconda3\\envs\\dt_python3\\lib\\shutil.py\", line 114, in copyfile\r\n    with open(src, 'rb') as fsrc:\r\nFileNotFoundError: [Errno 2] No such file or directory: 'C:\\\\#home#tuze#repos#cc13xx_firmware#dt_mcu_lib#drivers_cc13xx#dt_nvm#src#dt_nvm_counter.c.gcov'\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/310", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/310/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/310/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/310/events", "html_url": "https://github.com/gcovr/gcovr/issues/310", "id": 446438188, "node_id": "MDU6SXNzdWU0NDY0MzgxODg=", "number": 310, "title": "How to generate *.gcov selectivily within & | outside a Project.", "user": {"login": "the-code-cult", "id": 10877255, "node_id": "MDQ6VXNlcjEwODc3MjU1", "avatar_url": "https://avatars1.githubusercontent.com/u/10877255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the-code-cult", "html_url": "https://github.com/the-code-cult", "followers_url": "https://api.github.com/users/the-code-cult/followers", "following_url": "https://api.github.com/users/the-code-cult/following{/other_user}", "gists_url": "https://api.github.com/users/the-code-cult/gists{/gist_id}", "starred_url": "https://api.github.com/users/the-code-cult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the-code-cult/subscriptions", "organizations_url": "https://api.github.com/users/the-code-cult/orgs", "repos_url": "https://api.github.com/users/the-code-cult/repos", "events_url": "https://api.github.com/users/the-code-cult/events{/privacy}", "received_events_url": "https://api.github.com/users/the-code-cult/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834073566, "node_id": "MDU6TGFiZWw4MzQwNzM1NjY=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Gcov", "name": "Gcov", "color": "1735c6", "default": false, "description": null}, {"id": 39711550, "node_id": "MDU6TGFiZWwzOTcxMTU1MA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Question", "name": "Type: Question", "color": "E80C59", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-21T06:28:48Z", "updated_at": "2019-05-29T09:04:54Z", "closed_at": "2019-05-22T14:05:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I m working on code coverage automation via GCov(with GCovr combo)... And I am getting too many unwanted *.gcov generated in the project. \r\n**_I suspect, some how \"exclude \" does not seem to work._**\r\n\r\n\r\nThe question here is:\r\n1. *.gcov files are getting generated for files which are out of the project root folder.(but required for project to build) How to ignore them?\r\n\r\n2. How to ignore  specific files / folders within the project also?\r\n\r\nI tried \r\n1. -e=/some/folder/path/*\r\n2. --exclude=*.\\hpp \r\n\r\nWhat is missing here?\r\n\r\n\r\nRegards,\r\nBasu A S", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/309", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/309/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/309/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/309/events", "html_url": "https://github.com/gcovr/gcovr/issues/309", "id": 441204171, "node_id": "MDU6SXNzdWU0NDEyMDQxNzE=", "number": 309, "title": "Documentation offline", "user": {"login": "robinvalk", "id": 3050565, "node_id": "MDQ6VXNlcjMwNTA1NjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3050565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robinvalk", "html_url": "https://github.com/robinvalk", "followers_url": "https://api.github.com/users/robinvalk/followers", "following_url": "https://api.github.com/users/robinvalk/following{/other_user}", "gists_url": "https://api.github.com/users/robinvalk/gists{/gist_id}", "starred_url": "https://api.github.com/users/robinvalk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robinvalk/subscriptions", "organizations_url": "https://api.github.com/users/robinvalk/orgs", "repos_url": "https://api.github.com/users/robinvalk/repos", "events_url": "https://api.github.com/users/robinvalk/events{/privacy}", "received_events_url": "https://api.github.com/users/robinvalk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834075967, "node_id": "MDU6TGFiZWw4MzQwNzU5Njc=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Docs", "name": "Docs", "color": "e99695", "default": false, "description": "related to the documentation or website"}, {"id": 39711546, "node_id": "MDU6TGFiZWwzOTcxMTU0Ng==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Bug", "name": "Type: Bug", "color": "FF2408", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-07T12:25:59Z", "updated_at": "2019-11-07T09:09:50Z", "closed_at": "2019-11-07T09:09:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nIt seems that the documentation on [http://gcovr.com/guide.html](http://gcovr.com/guide.html) is offline. Idk if you are aware of this issue, therefore this issue ^^\r\n\r\nThanks for your work!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/306", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/306/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/306/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/306/events", "html_url": "https://github.com/gcovr/gcovr/issues/306", "id": 438246520, "node_id": "MDU6SXNzdWU0MzgyNDY1MjA=", "number": 306, "title": "GCOVR run is not recognising the source in version 4.1", "user": {"login": "the-code-cult", "id": 10877255, "node_id": "MDQ6VXNlcjEwODc3MjU1", "avatar_url": "https://avatars1.githubusercontent.com/u/10877255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the-code-cult", "html_url": "https://github.com/the-code-cult", "followers_url": "https://api.github.com/users/the-code-cult/followers", "following_url": "https://api.github.com/users/the-code-cult/following{/other_user}", "gists_url": "https://api.github.com/users/the-code-cult/gists{/gist_id}", "starred_url": "https://api.github.com/users/the-code-cult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the-code-cult/subscriptions", "organizations_url": "https://api.github.com/users/the-code-cult/orgs", "repos_url": "https://api.github.com/users/the-code-cult/repos", "events_url": "https://api.github.com/users/the-code-cult/events{/privacy}", "received_events_url": "https://api.github.com/users/the-code-cult/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 39711550, "node_id": "MDU6TGFiZWwzOTcxMTU1MA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Question", "name": "Type: Question", "color": "E80C59", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-29T10:24:23Z", "updated_at": "2019-04-30T08:03:57Z", "closed_at": "2019-04-30T07:23:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have simple project with one source file. Corresponding *.gcda, *.gcno files.\r\n*gcda, *.gcno files are placed in <ProjectRoot>/gcov_intermediate.\r\nsource file is present in <ProjectRoot>/src/abc.cpp\r\n\r\nI run gcovr via batch scripts as below:\r\n\r\nset datafiles=gcov_intermediate\r\nset gcovr_src=deliverables\\src\\\r\ngcovr %datafiles% %gcovr_src% -s -p --html --html-details -o Test.html --verbose\r\n\r\n\r\n\r\n**Error I am facing is:**\r\nTraceback (most recent call last):\r\n  File \"c:\\toolbase\\python\\3.6.6.2\\python-3.6.6.amd64\\lib\\site-packages\\gcovr\\workers.py\", line 71, in worker\r\n    work(*args, **kwargs)\r\n  File \"c:\\toolbase\\python\\3.6.6.2\\python-3.6.6.amd64\\lib\\site-packages\\gcovr\\gcov.py\", line 564, in process_datafile\r\n    options=options, logger=logger, toerase=toerase, errors=errors, chdir=dir_, tempdir=workdir)\r\n  File \"c:\\toolbase\\python\\3.6.6.2\\python-3.6.6.amd64\\lib\\site-packages\\gcovr\\gcov.py\", line 655, in run_gcov_and_process_files\r\n    stderr=subprocess.PIPE).communicate()\r\n  File \"c:\\toolbase\\python\\3.6.6.2\\python-3.6.6.amd64\\lib\\subprocess.py\", line 709, in __init__\r\n    restore_signals, start_new_session)\r\n  File \"c:\\toolbase\\python\\3.6.6.2\\python-3.6.6.amd64\\lib\\subprocess.py\", line 997, in _execute_child\r\n    startupinfo)\r\nFileNotFoundError: [WinError 2] The system cannot find the file specified", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/305", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/305/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/305/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/305/events", "html_url": "https://github.com/gcovr/gcovr/issues/305", "id": 436135705, "node_id": "MDU6SXNzdWU0MzYxMzU3MDU=", "number": 305, "title": "Gcovr does not recognize some gcda files", "user": {"login": "zhankangbao", "id": 39553841, "node_id": "MDQ6VXNlcjM5NTUzODQx", "avatar_url": "https://avatars0.githubusercontent.com/u/39553841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhankangbao", "html_url": "https://github.com/zhankangbao", "followers_url": "https://api.github.com/users/zhankangbao/followers", "following_url": "https://api.github.com/users/zhankangbao/following{/other_user}", "gists_url": "https://api.github.com/users/zhankangbao/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhankangbao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhankangbao/subscriptions", "organizations_url": "https://api.github.com/users/zhankangbao/orgs", "repos_url": "https://api.github.com/users/zhankangbao/repos", "events_url": "https://api.github.com/users/zhankangbao/events{/privacy}", "received_events_url": "https://api.github.com/users/zhankangbao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 39711550, "node_id": "MDU6TGFiZWwzOTcxMTU1MA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Question", "name": "Type: Question", "color": "E80C59", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-23T11:24:57Z", "updated_at": "2019-04-26T13:44:21Z", "closed_at": "2019-04-23T11:52:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Use command gcovr -r . get coverage,but Gcovr does not recognize some gcda files,Gcovr only recognizes partial coverage information.such as\r\n![image](https://user-images.githubusercontent.com/39553841/56577922-da4ba580-65fe-11e9-8ce1-df4282a897e0.png)\r\nthe number of gcda file is more than above:\uff0cThese files have paired gcda files, gcno files, and source code.\r\n![image](https://user-images.githubusercontent.com/39553841/56577931-e33c7700-65fe-11e9-9c93-c4094bd10e69.png)\r\nUse Lcov + genhtml can recognize these missing gcda files.\r\n![image](https://user-images.githubusercontent.com/39553841/56578407-34009f80-6600-11e9-94de-e868ef688163.png)\r\nuse -v args,output something\r\n![image](https://user-images.githubusercontent.com/39553841/56578468-52669b00-6600-11e9-9f9d-f6e6417a3e6e.png)\r\n\r\nHas anyone meet such a problem?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/303", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/303/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/303/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/303/events", "html_url": "https://github.com/gcovr/gcovr/issues/303", "id": 430877196, "node_id": "MDU6SXNzdWU0MzA4NzcxOTY=", "number": 303, "title": "Feature request: option to disable branch coverage", "user": {"login": "tovrstra", "id": 99431, "node_id": "MDQ6VXNlcjk5NDMx", "avatar_url": "https://avatars3.githubusercontent.com/u/99431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tovrstra", "html_url": "https://github.com/tovrstra", "followers_url": "https://api.github.com/users/tovrstra/followers", "following_url": "https://api.github.com/users/tovrstra/following{/other_user}", "gists_url": "https://api.github.com/users/tovrstra/gists{/gist_id}", "starred_url": "https://api.github.com/users/tovrstra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tovrstra/subscriptions", "organizations_url": "https://api.github.com/users/tovrstra/orgs", "repos_url": "https://api.github.com/users/tovrstra/repos", "events_url": "https://api.github.com/users/tovrstra/events{/privacy}", "received_events_url": "https://api.github.com/users/tovrstra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834073566, "node_id": "MDU6TGFiZWw4MzQwNzM1NjY=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Gcov", "name": "Gcov", "color": "1735c6", "default": false, "description": null}, {"id": 39711548, "node_id": "MDU6TGFiZWwzOTcxMTU0OA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Enhancement", "name": "Type: Enhancement", "color": "300DFF", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-04-09T09:58:06Z", "updated_at": "2019-06-21T21:07:08Z", "closed_at": "2019-04-09T11:14:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "As explained in the following commit, branch coverage is never going to be perfect for C++: https://github.com/gcovr/gcovr/commit/84e85f0faa48c66bc01f6e79950a48cdab322a8f It would be convenient to have an option to disable branch analysis, essentially not passing the options `--branch-counts` and `--branch-probabilities` to `gcov` here: https://github.com/gcovr/gcovr/blob/master/gcovr/gcov.py#L636.\r\n\r\nMy motivation for opening this issue is that inherent limitations with branch analysis for C++ code result in unhelpful coverage percentages on codecov.io. The following is an example with 100% line coverage but showing up as 18.29% due to spurious missed branches: \r\n\r\nhttps://codecov.io/gh/theochem/cellcutoff/src/master/cellcutoff/tests/test_iterators.cpp\r\n\r\nOne could argue that codecov.io is processing the branch coverage incorrectly, but I guess that is always going to be debatable.\r\n\r\n(I may be missing other ways to get around this issue. so feel free to fill me in.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/301", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/301/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/301/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/301/events", "html_url": "https://github.com/gcovr/gcovr/issues/301", "id": 428458811, "node_id": "MDU6SXNzdWU0Mjg0NTg4MTE=", "number": 301, "title": "Adding support for txt-like JSON report output", "user": {"login": "opikalo", "id": 508670, "node_id": "MDQ6VXNlcjUwODY3MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/508670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opikalo", "html_url": "https://github.com/opikalo", "followers_url": "https://api.github.com/users/opikalo/followers", "following_url": "https://api.github.com/users/opikalo/following{/other_user}", "gists_url": "https://api.github.com/users/opikalo/gists{/gist_id}", "starred_url": "https://api.github.com/users/opikalo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opikalo/subscriptions", "organizations_url": "https://api.github.com/users/opikalo/orgs", "repos_url": "https://api.github.com/users/opikalo/repos", "events_url": "https://api.github.com/users/opikalo/events{/privacy}", "received_events_url": "https://api.github.com/users/opikalo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1436650001, "node_id": "MDU6TGFiZWwxNDM2NjUwMDAx", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Format:%20JSON", "name": "Format: JSON", "color": "efac8f", "default": false, "description": ""}, {"id": 39711548, "node_id": "MDU6TGFiZWwzOTcxMTU0OA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Enhancement", "name": "Type: Enhancement", "color": "300DFF", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-02T21:43:42Z", "updated_at": "2019-11-02T17:27:47Z", "closed_at": "2019-11-02T17:27:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There are currently 3 types of output: txt, xml and html. \r\nHowever, when I tried to use the output for programmatically processing coverage data downstream, each format offered some kind of challenge. Text output report has special formatting/headers that prevent robust parsing. XML is tailored for Jenkins reporting and does not have the same level of detail as text report, and HTML is mostly used for end-user consumption. \r\n\r\nIs there an intermediate format that I can use? Would there be enough interest in JSON report output? Getting the schema versioning right could be a primary challenge. \r\n\r\nThis is different from the intermediate output in #282 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/300", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/300/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/300/events", "html_url": "https://github.com/gcovr/gcovr/issues/300", "id": 422744887, "node_id": "MDU6SXNzdWU0MjI3NDQ4ODc=", "number": 300, "title": "OOS builds and relative exclude paths", "user": {"login": "kjerstadius", "id": 25018564, "node_id": "MDQ6VXNlcjI1MDE4NTY0", "avatar_url": "https://avatars1.githubusercontent.com/u/25018564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjerstadius", "html_url": "https://github.com/kjerstadius", "followers_url": "https://api.github.com/users/kjerstadius/followers", "following_url": "https://api.github.com/users/kjerstadius/following{/other_user}", "gists_url": "https://api.github.com/users/kjerstadius/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjerstadius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjerstadius/subscriptions", "organizations_url": "https://api.github.com/users/kjerstadius/orgs", "repos_url": "https://api.github.com/users/kjerstadius/repos", "events_url": "https://api.github.com/users/kjerstadius/events{/privacy}", "received_events_url": "https://api.github.com/users/kjerstadius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-03-19T13:53:50Z", "updated_at": "2019-05-26T18:35:34Z", "closed_at": "2019-05-26T18:35:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm using the current tip of master (c018e2b) and what I'm trying to do is to define some excludes using a gcovr.cfg file. When combining this with an OOS build (in my case Meson, but the same principle would apply for CMake too) I find that I'm unable to define exclude path(s) in a satisfactory manner. If I'm not mistaken, the problem I see arises because of the fact that relative filters are always generated relative to the current working directory, which in an OOS build will never be the same directory as the sources are in (except for generated sources, which may complicate things further). This means that in order to exclude a source file from the report, you either need to know the absolute path to the file, or the relative path to the file _from the build directory_. Since neither of these are known such that they can be defined once, the prospect of having a gcovr.cfg file with excludes defined sort of falls apart.\r\n\r\nThe way I see it there are a couple of different options that could help solving this issue (in no particular order):\r\n- Allow relative filters to be built relative to the source root by passing an additional (optional) argument to build_filter().\r\n- Allow gcovr.cfg files to be located in the build root.\r\n- Add some kind of expression or syntax to tell gcovr that an exclude is or isn't relative to the source root.\r\n\r\nI already tried the first approach by making some minimal changes on my fork ([see here](https://github.com/kjerstadius/gcovr/commit/ee966af7ec2bc0b6ded2f35e3dbf93056374c102), I've not yet made a PR of it since I wanted to discuss first). It works for my simple test and passed all CI tests, but I'm not sure whether there may be unknown (to me) side effects, or if other filters should be given the same treatment. There may also be problems in the case of generated sources, in which case the source code will be in the build directory, the name and location of which is unknown at the time of writing the cfg file, so that sort of puts us back at square one.\r\n\r\nI don't really like the third option, but I thought I'd throw it out there. The second one I find interesting though. Since a staple of modern build systems in the concept of configuring files to generate sources based on the current environment, couldn't it make sense to support that for gcovr.cfg in OOS builds too? What I'd propose is for the logic in find_config_name() to change slightly so that if the source root and the current working directory are different, the current working dir (assumed to be the build root in OOS build) is searched first and if there's no file there, the source root is checked. This way the filter generation would remain the same, and compatibility with generated sources should be maintained.\r\n\r\nWhat do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/299", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/299/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/299/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/299/events", "html_url": "https://github.com/gcovr/gcovr/issues/299", "id": 420924319, "node_id": "MDU6SXNzdWU0MjA5MjQzMTk=", "number": 299, "title": "Use os.path.commonpath in guess_source_filename", "user": {"login": "clynamen", "id": 578915, "node_id": "MDQ6VXNlcjU3ODkxNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/578915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clynamen", "html_url": "https://github.com/clynamen", "followers_url": "https://api.github.com/users/clynamen/followers", "following_url": "https://api.github.com/users/clynamen/following{/other_user}", "gists_url": "https://api.github.com/users/clynamen/gists{/gist_id}", "starred_url": "https://api.github.com/users/clynamen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clynamen/subscriptions", "organizations_url": "https://api.github.com/users/clynamen/orgs", "repos_url": "https://api.github.com/users/clynamen/repos", "events_url": "https://api.github.com/users/clynamen/events{/privacy}", "received_events_url": "https://api.github.com/users/clynamen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 39711546, "node_id": "MDU6TGFiZWwzOTcxMTU0Ng==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Bug", "name": "Type: Bug", "color": "FF2408", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-14T09:57:23Z", "updated_at": "2019-03-14T10:59:19Z", "closed_at": "2019-03-14T10:59:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/gcovr/gcovr/blob/a782972a0a1bba585c35c42d3977d3931b03b5ec/gcovr/gcov.py#L167\r\n\r\nI ran into an error where not-existing filename where generated due to common prefix. Indeed this function will return an invalid directory in this case\r\n\r\n```\r\ndata_fname=/cygdrive/my_source/my_main.cpp\r\ncurrdir=/cygdrive/my_build\r\n```\r\n\r\nit will result in directory _/cygdrive/my_ due to the fact that commonprefix return the prefix string instead of the prefix path\r\n\r\nI think the proper function to use here is \r\nhttps://docs.python.org/3/library/os.path.html#os.path.commonpath\r\n\r\nA similar issue caused https://github.com/gcovr/gcovr/issues/52", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/298", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/298/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/298/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/298/events", "html_url": "https://github.com/gcovr/gcovr/issues/298", "id": 420191688, "node_id": "MDU6SXNzdWU0MjAxOTE2ODg=", "number": 298, "title": "Unexecuted code that lives in root should display as 0% coverage", "user": {"login": "aparks5", "id": 10458690, "node_id": "MDQ6VXNlcjEwNDU4Njkw", "avatar_url": "https://avatars1.githubusercontent.com/u/10458690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aparks5", "html_url": "https://github.com/aparks5", "followers_url": "https://api.github.com/users/aparks5/followers", "following_url": "https://api.github.com/users/aparks5/following{/other_user}", "gists_url": "https://api.github.com/users/aparks5/gists{/gist_id}", "starred_url": "https://api.github.com/users/aparks5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aparks5/subscriptions", "organizations_url": "https://api.github.com/users/aparks5/orgs", "repos_url": "https://api.github.com/users/aparks5/repos", "events_url": "https://api.github.com/users/aparks5/events{/privacy}", "received_events_url": "https://api.github.com/users/aparks5/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-03-12T20:31:21Z", "updated_at": "2019-03-14T15:59:23Z", "closed_at": "2019-03-14T13:37:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "i had to run the following to show files that aren't touched at all by my tests, but definitely live in the code base and are used in the primary client program.\r\n\r\ni realize that without a *gcda, gcovr has nothing to go on, but its easy enough to find the missing files, why can't they all be marked and displayed as 0% and penalize our code coverage score?\r\n\r\n```cd arch-gcov/\r\nls -1 *gcda > covered.txt\r\nls -1 *gcno > allgcov.txt\r\ncat covered.txt | cut -d. -f1 > covered.log\r\ncat allgcov.txt | cut -d. -f1 > allfiles.log\r\ndiff covered.log allfiles.log \r\ndiff covered.log allfiles.log > no_gtest_coverage.diff\r\ncat no_gtest_coverage.diff ```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/297", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/297/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/297/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/297/events", "html_url": "https://github.com/gcovr/gcovr/issues/297", "id": 418649984, "node_id": "MDU6SXNzdWU0MTg2NDk5ODQ=", "number": 297, "title": "Next gcovr release", "user": {"login": "kolrami", "id": 4687748, "node_id": "MDQ6VXNlcjQ2ODc3NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/4687748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kolrami", "html_url": "https://github.com/kolrami", "followers_url": "https://api.github.com/users/kolrami/followers", "following_url": "https://api.github.com/users/kolrami/following{/other_user}", "gists_url": "https://api.github.com/users/kolrami/gists{/gist_id}", "starred_url": "https://api.github.com/users/kolrami/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kolrami/subscriptions", "organizations_url": "https://api.github.com/users/kolrami/orgs", "repos_url": "https://api.github.com/users/kolrami/repos", "events_url": "https://api.github.com/users/kolrami/events{/privacy}", "received_events_url": "https://api.github.com/users/kolrami/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-08T06:24:31Z", "updated_at": "2019-11-07T09:17:54Z", "closed_at": "2019-11-07T09:17:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am currently using gcovr from pypi with version 4.1. However, I saw that in the master branch here there is a new option `--exclude_throw_branches` and I would like to also use that option. Do you already know when a new gcovr 4.2 release will be made and when this option is available in the official pypi package?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/296", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/296/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/296/events", "html_url": "https://github.com/gcovr/gcovr/issues/296", "id": 410338838, "node_id": "MDU6SXNzdWU0MTAzMzg4Mzg=", "number": 296, "title": "HTML Title inconsequential", "user": {"login": "dscole", "id": 9452449, "node_id": "MDQ6VXNlcjk0NTI0NDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/9452449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dscole", "html_url": "https://github.com/dscole", "followers_url": "https://api.github.com/users/dscole/followers", "following_url": "https://api.github.com/users/dscole/following{/other_user}", "gists_url": "https://api.github.com/users/dscole/gists{/gist_id}", "starred_url": "https://api.github.com/users/dscole/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dscole/subscriptions", "organizations_url": "https://api.github.com/users/dscole/orgs", "repos_url": "https://api.github.com/users/dscole/repos", "events_url": "https://api.github.com/users/dscole/events{/privacy}", "received_events_url": "https://api.github.com/users/dscole/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834072145, "node_id": "MDU6TGFiZWw4MzQwNzIxNDU=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Format:%20HTML", "name": "Format: HTML", "color": "CC9128", "default": false, "description": null}, {"id": 39711548, "node_id": "MDU6TGFiZWwzOTcxMTU0OA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Enhancement", "name": "Type: Enhancement", "color": "300DFF", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-02-14T14:56:09Z", "updated_at": "2020-05-28T06:55:42Z", "closed_at": "2020-05-28T06:55:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "First I would say I know almost nothing about html. Hopefully, what I say still makes sense :)\r\n\r\nIt appears the argument I pass to `--html-title` ends up being set in the html report's `<head>` section's title, not the `<body>`'s title. The effect I'm seeing is that the `--html-title` argument controls the name of the tab in my browser, but the report itself still has the title of `GCC Code Coverage Report`.\r\nUsually my browser tabs are not even wide enough to even show the full title. I think it makes more sense for the `--html-title` to set the title of the report I see, rather than then tab name.\r\n\r\nI tried looking how I would make this change myself in the code, but there are just so many instances of `GCC Code Coverage Report` in the repo, that I didn't know which I actually need to change.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/295", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/295/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/295/events", "html_url": "https://github.com/gcovr/gcovr/issues/295", "id": 410128069, "node_id": "MDU6SXNzdWU0MTAxMjgwNjk=", "number": 295, "title": "Create directory hierarchy in HTML report", "user": {"login": "dscole", "id": 9452449, "node_id": "MDQ6VXNlcjk0NTI0NDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/9452449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dscole", "html_url": "https://github.com/dscole", "followers_url": "https://api.github.com/users/dscole/followers", "following_url": "https://api.github.com/users/dscole/following{/other_user}", "gists_url": "https://api.github.com/users/dscole/gists{/gist_id}", "starred_url": "https://api.github.com/users/dscole/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dscole/subscriptions", "organizations_url": "https://api.github.com/users/dscole/orgs", "repos_url": "https://api.github.com/users/dscole/repos", "events_url": "https://api.github.com/users/dscole/events{/privacy}", "received_events_url": "https://api.github.com/users/dscole/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834072145, "node_id": "MDU6TGFiZWw4MzQwNzIxNDU=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Format:%20HTML", "name": "Format: HTML", "color": "CC9128", "default": false, "description": null}, {"id": 39711548, "node_id": "MDU6TGFiZWwzOTcxMTU0OA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Enhancement", "name": "Type: Enhancement", "color": "300DFF", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-14T04:58:09Z", "updated_at": "2019-02-27T20:05:23Z", "closed_at": "2019-02-14T17:02:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently the HTML report creates a single html page with all the source file listed in it. For our project where we have 1000s of source files, it makes the html report less useful. \r\n\r\nIt would be much more useful to us, if you could at least create another level of indirection, so that the main html page only shows directories  (with statistics aggregated on the sources files in that directory). Basically, what genhtml does. If you want to see individual files, you click on the directory and get the listing and statistics of each file in that directory.\r\nEven nicer would be to provide a complete directory hierarchy that mimics the source directory structure (which genhtml doesn't have).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/294", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/294/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/294/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/294/events", "html_url": "https://github.com/gcovr/gcovr/issues/294", "id": 404297255, "node_id": "MDU6SXNzdWU0MDQyOTcyNTU=", "number": 294, "title": "Relative path parts are not resolved corrupting the package name", "user": {"login": "stoesselt", "id": 38289313, "node_id": "MDQ6VXNlcjM4Mjg5MzEz", "avatar_url": "https://avatars3.githubusercontent.com/u/38289313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stoesselt", "html_url": "https://github.com/stoesselt", "followers_url": "https://api.github.com/users/stoesselt/followers", "following_url": "https://api.github.com/users/stoesselt/following{/other_user}", "gists_url": "https://api.github.com/users/stoesselt/gists{/gist_id}", "starred_url": "https://api.github.com/users/stoesselt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stoesselt/subscriptions", "organizations_url": "https://api.github.com/users/stoesselt/orgs", "repos_url": "https://api.github.com/users/stoesselt/repos", "events_url": "https://api.github.com/users/stoesselt/events{/privacy}", "received_events_url": "https://api.github.com/users/stoesselt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834073149, "node_id": "MDU6TGFiZWw4MzQwNzMxNDk=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Filters", "name": "Filters", "color": "2befd2", "default": false, "description": "related to filters, include/exclude, path handling"}, {"id": 39711546, "node_id": "MDU6TGFiZWwzOTcxMTU0Ng==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Bug", "name": "Type: Bug", "color": "FF2408", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-01-29T13:43:28Z", "updated_at": "2019-01-30T09:48:40Z", "closed_at": "2019-01-29T22:26:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using gcovr 3.2 on a Ubuntu 16.04 system and gcovr 4.1 on a Windows 10 machine via Jenkins. My command line paramters are \r\n`gcovr -x -r ../../.. -f '.*/pump/source/.*'  --object-directory '${WORKSPACE}/tests/build/gcc'  --exclude-unreachable-branches -o Coverage.xml`\r\n\r\nThis does its job pretty well on the Ubuntu system. Only files in the folders `pump/source/*` are considered. Package names and file paths are correct in the output file. On the Windows machine, however, every file path and package is prefixed with `tests/build/gcc/../../..` in the XML output. This messes up the Cobertura report.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/293", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/293/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/293/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/293/events", "html_url": "https://github.com/gcovr/gcovr/issues/293", "id": 403461404, "node_id": "MDU6SXNzdWU0MDM0NjE0MDQ=", "number": 293, "title": "Add support for an \"exclude file\"", "user": {"login": "jpakkane", "id": 4079821, "node_id": "MDQ6VXNlcjQwNzk4MjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/4079821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpakkane", "html_url": "https://github.com/jpakkane", "followers_url": "https://api.github.com/users/jpakkane/followers", "following_url": "https://api.github.com/users/jpakkane/following{/other_user}", "gists_url": "https://api.github.com/users/jpakkane/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpakkane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpakkane/subscriptions", "organizations_url": "https://api.github.com/users/jpakkane/orgs", "repos_url": "https://api.github.com/users/jpakkane/repos", "events_url": "https://api.github.com/users/jpakkane/events{/privacy}", "received_events_url": "https://api.github.com/users/jpakkane/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834073149, "node_id": "MDU6TGFiZWw4MzQwNzMxNDk=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Filters", "name": "Filters", "color": "2befd2", "default": false, "description": "related to filters, include/exclude, path handling"}, {"id": 39711548, "node_id": "MDU6TGFiZWwzOTcxMTU0OA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Enhancement", "name": "Type: Enhancement", "color": "300DFF", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-26T17:15:11Z", "updated_at": "2019-07-01T12:46:41Z", "closed_at": "2019-01-26T22:22:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently you can exclude files and directories with `-e` and company. It would be nice to have a possibility to add support for an exclude file. The way it works is that if you have a `tests` subdirectory that you don't want to have in the coverage reports, then you'd create a (potentially empty) file `tests/.gcovr-ignore`. Then gcovr would not print coverage stats for that directory or any of its subdirectories. The front page might list all directories ignored in this way for clarity.\r\n\r\nThis would be convenient for tests, third party code and so on. You can also change which parts of the source tree to ignore without having to edit the commands used to invoke gcovr.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/292", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/292/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/292/events", "html_url": "https://github.com/gcovr/gcovr/issues/292", "id": 401510975, "node_id": "MDU6SXNzdWU0MDE1MTA5NzU=", "number": 292, "title": "UnicodeDecodeError when running gcovr with meson", "user": {"login": "robinmoussu", "id": 6200547, "node_id": "MDQ6VXNlcjYyMDA1NDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/6200547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robinmoussu", "html_url": "https://github.com/robinmoussu", "followers_url": "https://api.github.com/users/robinmoussu/followers", "following_url": "https://api.github.com/users/robinmoussu/following{/other_user}", "gists_url": "https://api.github.com/users/robinmoussu/gists{/gist_id}", "starred_url": "https://api.github.com/users/robinmoussu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robinmoussu/subscriptions", "organizations_url": "https://api.github.com/users/robinmoussu/orgs", "repos_url": "https://api.github.com/users/robinmoussu/repos", "events_url": "https://api.github.com/users/robinmoussu/events{/privacy}", "received_events_url": "https://api.github.com/users/robinmoussu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834073566, "node_id": "MDU6TGFiZWw4MzQwNzM1NjY=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Gcov", "name": "Gcov", "color": "1735c6", "default": false, "description": null}, {"id": 39711551, "node_id": "MDU6TGFiZWwzOTcxMTU1MQ==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-01-21T21:08:47Z", "updated_at": "2019-01-22T20:13:37Z", "closed_at": "2019-01-22T19:56:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI'm trying to generate code coverage on my pet project using meson build system. I think the issue comes from gcovr, but I'm not totally sure.\r\n\r\nIt may be the same issue that #166\r\n\r\nTo sum-up, I get the following error:\r\n\r\n```\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 108: invalid start byte\r\n```\r\n\r\nIt may be a locale related error. I tried to re-build + re-run gcov after doing `export LANG=C`, or by modifying /usr/lib/python3.7/site-packages/gcovr/gcov.py to LC_ALL='C' (as someone did in #166), but it didn't fixed it.\r\n\r\nI tried to include anything possible, but feel free to ask me more details.\r\n\r\n```\r\n\u279c  $ locale\r\nLANG=fr_FR.UTF-8\r\nLC_CTYPE=fr_FR.UTF-8\r\nLC_NUMERIC=\"fr_FR.UTF-8\"\r\nLC_TIME=\"fr_FR.UTF-8\"\r\nLC_COLLATE=\"fr_FR.UTF-8\"\r\nLC_MONETARY=\"fr_FR.UTF-8\"\r\nLC_MESSAGES=\"fr_FR.UTF-8\"\r\nLC_PAPER=\"fr_FR.UTF-8\"\r\nLC_NAME=\"fr_FR.UTF-8\"\r\nLC_ADDRESS=\"fr_FR.UTF-8\"\r\nLC_TELEPHONE=\"fr_FR.UTF-8\"\r\nLC_MEASUREMENT=\"fr_FR.UTF-8\"\r\nLC_IDENTIFICATION=\"fr_FR.UTF-8\"\r\nLC_ALL=\r\n\u279c  $ locale -a\r\nC\r\nen_US.utf8\r\nfr_FR.utf8\r\nPOSIX\r\n\u279c  $ uname -a\r\nLinux scha 4.20.3-arch1-1-ARCH #1 SMP PREEMPT Wed Jan 16 22:38:58 UTC 2019 x86_64 GNU/Linux\r\n```\r\n\r\nStep to reproduce:\r\n\r\n```\r\n\u279c  $ git clone https://github.com/tiernemi/meson-sample-project.git && cd meson-sample-project.git\r\n\u279c  $ mkdir build && cd build\r\n\u279c  $ meson  -Db_coverage=true ..\r\nThe Meson build system\r\nVersion: 0.49.0\r\nSource dir: /home/robin/dev/meson-sample-project\r\nBuild dir: /home/robin/dev/meson-sample-project/build\r\nBuild type: native build\r\nProject name: sample_cpp_project\r\nProject version: 1.0\r\nNative C++ compiler: ccache c++ (gcc 9.0.0 \"c++ (GCC) 9.0.0 20190107 (experimental)\")\r\nBuild machine cpu family: x86_64\r\nBuild machine cpu: x86_64\r\nConfiguring config.h using configuration\r\nLibrary fizz found: YES\r\nFound pkg-config: /usr/bin/pkg-config (1.6.0)\r\nDependency GTest found: YES 1.8.1\r\nDependency threads found: YES\r\nDependency benchmark found: YES 1.4.1\r\nDependency threads found: YES (cached)\r\nConfiguring Doxyfile using configuration\r\nProgram doxygen found: YES (/usr/bin/doxygen)\r\nConfiguring .clang-format using configuration\r\nmeson.build:51: WARNING: Got an empty configuration_data() object and found no substitutions in the input file '.clang-format'. If you want to copy a file to the build dir, use the 'copy:' keyword argument added in 0.47.0\r\nConfiguring .clang-tidy using configuration\r\nmeson.build:61: WARNING: Got an empty configuration_data() object and found no substitutions in the input file '.clang-tidy'. If you want to copy a file to the build dir, use the 'copy:' keyword argument added in 0.47.0\r\nBuild targets in project: 13\r\nFound ninja-1.8.2 at /usr/bin/ninja\r\n\u279c  $ ninja\r\n[24/24] Linking target benchmarks/all_benchmarks.\r\n\u279c  $ ninja test\r\n[0/1] Running all tests.\r\n1/2 foo test                                OK       0.04 s\r\n2/2 bar test                                OK       0.04 s\r\n\r\nOk:                    2\r\nExpected Fail:         0\r\nFail:                  0\r\nUnexpected Pass:       0\r\nSkipped:               0\r\nTimeout:               0\r\n\r\nFull log written to /home/robin/dev/meson-sample-project/build/meson-logs/testlog.txt\r\n\u279c  $ ninja coverage-text\r\n[1/1] Generates text coverage report.\r\nFAILED: meson-coverage-text\r\n/usr/bin/meson --internal coverage --text /home/robin/dev/meson-sample-project /home/robin/dev/meson-sample-project/subprojects /home/robin/dev/meson-sample-project/build /home/robin/dev/meson-sample-project/build/meson-logs\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/gcovr/workers.py\", line 71, in worker\r\n    work(*args, **kwargs)\r\n  File \"/usr/lib/python3.7/site-packages/gcovr/gcov.py\", line 564, in process_datafile\r\n    options=options, logger=logger, toerase=toerase, errors=errors, chdir=dir_, tempdir=workdir)\r\n  File \"/usr/lib/python3.7/site-packages/gcovr/gcov.py\", line 656, in run_gcov_and_process_files\r\n    out = out.decode('utf-8')\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc0 in position 1346: invalid start byte\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/gcovr/workers.py\", line 71, in worker\r\n    work(*args, **kwargs)\r\n  File \"/usr/lib/python3.7/site-packages/gcovr/gcov.py\", line 564, in process_datafile\r\n    options=options, logger=logger, toerase=toerase, errors=errors, chdir=dir_, tempdir=workdir)\r\n  File \"/usr/lib/python3.7/site-packages/gcovr/gcov.py\", line 656, in run_gcov_and_process_files\r\n    out = out.decode('utf-8')\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc0 in position 1346: invalid start byte\r\nTraceback (most recent call last):\r\n  File \"/usr/bin/gcovr\", line 11, in <module>\r\n    load_entry_point('gcovr==4.1', 'console_scripts', 'gcovr')()\r\n  File \"/usr/lib/python3.7/site-packages/gcovr/__main__.py\", line 562, in main\r\n    contexts = pool.wait()\r\n  File \"/usr/lib/python3.7/site-packages/gcovr/workers.py\", line 160, in __exit__\r\n    self.wait()\r\n  File \"/usr/lib/python3.7/site-packages/gcovr/workers.py\", line 151, in wait\r\n    raise self.exceptions[0][1]\r\n  File \"/usr/lib/python3.7/site-packages/gcovr/__main__.py\", line 562, in main\r\n    contexts = pool.wait()\r\n  File \"/usr/lib/python3.7/site-packages/gcovr/workers.py\", line 151, in wait\r\n    raise self.exceptions[0][1]\r\n  File \"/usr/lib/python3.7/site-packages/gcovr/workers.py\", line 71, in worker\r\n    work(*args, **kwargs)\r\n  File \"/usr/lib/python3.7/site-packages/gcovr/gcov.py\", line 564, in process_datafile\r\n    options=options, logger=logger, toerase=toerase, errors=errors, chdir=dir_, tempdir=workdir)\r\n  File \"/usr/lib/python3.7/site-packages/gcovr/gcov.py\", line 656, in run_gcov_and_process_files\r\n    out = out.decode('utf-8')\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc0 in position 1346: invalid start byte\r\nTraceback (most recent call last):\r\n  File \"/usr/bin/meson\", line 11, in <module>\r\n    load_entry_point('meson==0.49.0', 'console_scripts', 'meson')()\r\n  File \"/usr/lib/python3.7/site-packages/mesonbuild/mesonmain.py\", line 192, in main\r\n    return run(sys.argv[1:], launcher)\r\n  File \"/usr/lib/python3.7/site-packages/mesonbuild/mesonmain.py\", line 181, in run\r\n    return run_script_command(args[1], args[2:])\r\n  File \"/usr/lib/python3.7/site-packages/mesonbuild/mesonmain.py\", line 145, in run_script_command\r\n    return module.run(script_args)\r\n  File \"/usr/lib/python3.7/site-packages/mesonbuild/scripts/coverage.py\", line 149, in run\r\n    options.log_dir)\r\n  File \"/usr/lib/python3.7/site-packages/mesonbuild/scripts/coverage.py\", line 49, in coverage\r\n    '-o', os.path.join(log_dir, 'coverage.txt'),\r\n  File \"/usr/lib/python3.7/subprocess.py\", line 347, in check_call\r\n    raise CalledProcessError(retcode, cmd)\r\nsubprocess.CalledProcessError: Command '['gcovr', '-r', '/home/robin/dev/meson-sample-project/build', '-e', '/home/robin/dev/meson-sample-project/subprojects', '-o', '/home/robin/dev/meson-sample-project/build/meson-logs/coverage.txt']' returned non-zero exit status 1.\r\nninja: build stopped: subcommand failed.\r\n```\r\n\r\n---\r\n\r\nIf I try to to re-run the gcovr command with `-v`, I get the same error:\r\n\r\n```\r\n\u279c  $ gcovr -v -r /home/robin/dev/meson-sample-project/build -e /home/robin/dev/meson-sample-project/subprojects -o /home/robin/dev/meson-sample-project/build/meson-logs/coverage.txt\r\n# lots of output\r\nRunning gcov: 'gcov /home/robin/dev/meson-sample-project/build/src/foo/1c916c5@@foo@sta/foo.cc.gcda --branch-counts --branch-probabilities --preserve-paths --object-directory /home/robin/dev/meson-sample-project/build/src/foo/1c916c5@@foo@sta' in '/tmp/tmpxpkiucu2'\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/gcovr/workers.py\", line 71, in worker\r\n    work(*args, **kwargs)\r\n  File \"/usr/lib/python3.7/site-packages/gcovr/gcov.py\", line 564, in process_datafile\r\n    options=options, logger=logger, toerase=toerase, errors=errors, chdir=dir_, tempdir=workdir)\r\n  File \"/usr/lib/python3.7/site-packages/gcovr/gcov.py\", line 658, in run_gcov_and_process_files\r\n    out = out.decode('utf-8')\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x91 in position 86: invalid start byte\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/gcovr/workers.py\", line 71, in worker\r\n    work(*args, **kwargs)\r\n  File \"/usr/lib/python3.7/site-packages/gcovr/gcov.py\", line 564, in process_datafile\r\n    options=options, logger=logger, toerase=toerase, errors=errors, chdir=dir_, tempdir=workdir)\r\n  File \"/usr/lib/python3.7/site-packages/gcovr/gcov.py\", line 658, in run_gcov_and_process_files\r\n    out = out.decode('utf-8')\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x91 in position 86: invalid start byte\r\nTraceback (most recent call last):\r\n  File \"/usr/bin/gcovr\", line 11, in <module>\r\n    load_entry_point('gcovr==4.1', 'console_scripts', 'gcovr')()\r\n  File \"/usr/lib/python3.7/site-packages/gcovr/__main__.py\", line 562, in main\r\n    contexts = pool.wait()\r\n  File \"/usr/lib/python3.7/site-packages/gcovr/workers.py\", line 160, in __exit__\r\n    self.wait()\r\n  File \"/usr/lib/python3.7/site-packages/gcovr/workers.py\", line 151, in wait\r\n    raise self.exceptions[0][1]\r\n  File \"/usr/lib/python3.7/site-packages/gcovr/__main__.py\", line 562, in main\r\n    contexts = pool.wait()\r\n  File \"/usr/lib/python3.7/site-packages/gcovr/workers.py\", line 151, in wait\r\n    raise self.exceptions[0][1]\r\n  File \"/usr/lib/python3.7/site-packages/gcovr/workers.py\", line 71, in worker\r\n    work(*args, **kwargs)\r\n  File \"/usr/lib/python3.7/site-packages/gcovr/gcov.py\", line 564, in process_datafile\r\n    options=options, logger=logger, toerase=toerase, errors=errors, chdir=dir_, tempdir=workdir)\r\n  File \"/usr/lib/python3.7/site-packages/gcovr/gcov.py\", line 658, in run_gcov_and_process_files\r\n    out = out.decode('utf-8')\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x91 in position 86: invalid start byte\r\n```\r\n\r\nI am not sure if the type of the gcda type should be binary:\r\n\r\n```\r\n\u279c  $ file -bi  /home/robin/dev/meson-sample-project/build/src/foo/1c916c5@@foo@sta/foo.cc.gcda\r\napplication/octet-stream; charset=binary\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/291", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/291/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/291/events", "html_url": "https://github.com/gcovr/gcovr/issues/291", "id": 401425612, "node_id": "MDU6SXNzdWU0MDE0MjU2MTI=", "number": 291, "title": "Feature Request: Generate xml and html outputs in a unique run", "user": {"login": "csauge", "id": 9370091, "node_id": "MDQ6VXNlcjkzNzAwOTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/9370091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csauge", "html_url": "https://github.com/csauge", "followers_url": "https://api.github.com/users/csauge/followers", "following_url": "https://api.github.com/users/csauge/following{/other_user}", "gists_url": "https://api.github.com/users/csauge/gists{/gist_id}", "starred_url": "https://api.github.com/users/csauge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csauge/subscriptions", "organizations_url": "https://api.github.com/users/csauge/orgs", "repos_url": "https://api.github.com/users/csauge/repos", "events_url": "https://api.github.com/users/csauge/events{/privacy}", "received_events_url": "https://api.github.com/users/csauge/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834072145, "node_id": "MDU6TGFiZWw4MzQwNzIxNDU=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Format:%20HTML", "name": "Format: HTML", "color": "CC9128", "default": false, "description": null}, {"id": 834072315, "node_id": "MDU6TGFiZWw4MzQwNzIzMTU=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Format:%20XML", "name": "Format: XML", "color": "7F683F", "default": false, "description": null}, {"id": 39711548, "node_id": "MDU6TGFiZWwzOTcxMTU0OA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Enhancement", "name": "Type: Enhancement", "color": "300DFF", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-21T16:22:37Z", "updated_at": "2019-11-06T15:14:44Z", "closed_at": "2019-11-06T15:14:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Today we need to run twice the gcovr to generate a xml and a html.\r\nIt would be great to generate both during a unique execution of gcovr.\r\n\r\n\"Gcovr prints a text report by default, but can switch to XML **or** HTML.\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/290", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/290/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/290/events", "html_url": "https://github.com/gcovr/gcovr/issues/290", "id": 397770566, "node_id": "MDU6SXNzdWUzOTc3NzA1NjY=", "number": 290, "title": "Request: Report no coverage (hits=0 for all lines) for files that were not executed", "user": {"login": "csauge", "id": 9370091, "node_id": "MDQ6VXNlcjkzNzAwOTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/9370091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csauge", "html_url": "https://github.com/csauge", "followers_url": "https://api.github.com/users/csauge/followers", "following_url": "https://api.github.com/users/csauge/following{/other_user}", "gists_url": "https://api.github.com/users/csauge/gists{/gist_id}", "starred_url": "https://api.github.com/users/csauge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csauge/subscriptions", "organizations_url": "https://api.github.com/users/csauge/orgs", "repos_url": "https://api.github.com/users/csauge/repos", "events_url": "https://api.github.com/users/csauge/events{/privacy}", "received_events_url": "https://api.github.com/users/csauge/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-10T10:42:57Z", "updated_at": "2019-03-14T12:43:10Z", "closed_at": "2019-01-10T13:33:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "This would be a good feature to add this, because today we need to use lcov tool to do so.\r\nSee: https://stackoverflow.com/questions/23923040/generating-empty-gcda-files\r\nOr I could be great to know if a tool to generate gcda files from a gcno exists.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/289", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/289/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/289/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/289/events", "html_url": "https://github.com/gcovr/gcovr/issues/289", "id": 390498967, "node_id": "MDU6SXNzdWUzOTA0OTg5Njc=", "number": 289, "title": "Speed up gcovr", "user": {"login": "RPGillespie6", "id": 9853156, "node_id": "MDQ6VXNlcjk4NTMxNTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9853156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RPGillespie6", "html_url": "https://github.com/RPGillespie6", "followers_url": "https://api.github.com/users/RPGillespie6/followers", "following_url": "https://api.github.com/users/RPGillespie6/following{/other_user}", "gists_url": "https://api.github.com/users/RPGillespie6/gists{/gist_id}", "starred_url": "https://api.github.com/users/RPGillespie6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RPGillespie6/subscriptions", "organizations_url": "https://api.github.com/users/RPGillespie6/orgs", "repos_url": "https://api.github.com/users/RPGillespie6/repos", "events_url": "https://api.github.com/users/RPGillespie6/events{/privacy}", "received_events_url": "https://api.github.com/users/RPGillespie6/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834073566, "node_id": "MDU6TGFiZWw4MzQwNzM1NjY=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Gcov", "name": "Gcov", "color": "1735c6", "default": false, "description": null}, {"id": 39711548, "node_id": "MDU6TGFiZWwzOTcxMTU0OA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Enhancement", "name": "Type: Enhancement", "color": "300DFF", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2018-12-13T03:07:24Z", "updated_at": "2020-04-01T18:27:56Z", "closed_at": "2020-04-01T18:27:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Gcovr is way too slow.\r\n\r\nFor example, if I do the following:\r\n\r\n`find . -name *.gcda | grep -v \"\\.test\"` I get a list of ~200 files in 100 ms.\r\n\r\nIf I then spawn 8 gcov processes in parallel like such:\r\n```\r\ngcov -i <25 files> &\r\ngcov -i <next 25 files> &\r\ngcov -i <next 25 files> &\r\ngcov -i <next 25 files> &\r\ngcov -i <next 25 files> &\r\ngcov -i <next 25 files> &\r\ngcov -i <next 25 files> &\r\ngcov -i <all remaining files> &\r\n```\r\n\r\nIt takes 800 milliseconds to complete, bringing total execution time to 900 ms. All that remains is to process the .gcov files. On my system, there are 550 gcov files generated, but the vast majority should be ignored (system headers) so I doubt that should take more than a second.\r\n\r\nWhen I use `gcovr -j8 -e '\\.test.*$' --exclude-directories '/usr/include'` it takes >30 seconds to run to completion. I suspect that the reason `gcovr` is so slow is that it is forking 1 gcov per gcda file which in my case ends up being more than 200 forks.\r\n\r\nI propose a slight change in architecture so that gcovr operates like this:\r\n1) Get list of all gcda files\r\n2) iterate through list once, filtering files according to user input arriving at T files remaining\r\n3) Spawn N gcov processes (in my case 8), each getting T/N files as arguments (in my case 25 files)\r\n4) Process gcov files as normal (also in parallel), ignoring ones that were specified by user filters\r\n\r\nI was actually thinking of making my own coverage utility to do this, but in I am willing to implement this here to avoid creating YAGW (yet another gcov wrapper). Contribution guide says to discuss enhancements as issues first.\r\n\r\nThoughts?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/288", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/288/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/288/events", "html_url": "https://github.com/gcovr/gcovr/issues/288", "id": 390491777, "node_id": "MDU6SXNzdWUzOTA0OTE3Nzc=", "number": 288, "title": "Add option to output as lcov .info format", "user": {"login": "RPGillespie6", "id": 9853156, "node_id": "MDQ6VXNlcjk4NTMxNTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9853156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RPGillespie6", "html_url": "https://github.com/RPGillespie6", "followers_url": "https://api.github.com/users/RPGillespie6/followers", "following_url": "https://api.github.com/users/RPGillespie6/following{/other_user}", "gists_url": "https://api.github.com/users/RPGillespie6/gists{/gist_id}", "starred_url": "https://api.github.com/users/RPGillespie6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RPGillespie6/subscriptions", "organizations_url": "https://api.github.com/users/RPGillespie6/orgs", "repos_url": "https://api.github.com/users/RPGillespie6/repos", "events_url": "https://api.github.com/users/RPGillespie6/events{/privacy}", "received_events_url": "https://api.github.com/users/RPGillespie6/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 39711548, "node_id": "MDU6TGFiZWwzOTcxMTU0OA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Enhancement", "name": "Type: Enhancement", "color": "300DFF", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-13T02:29:08Z", "updated_at": "2018-12-13T14:37:54Z", "closed_at": "2018-12-13T14:37:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I like how gcovr is faster than lcov, but I don't like how gcovr's html output is one monstrously long list of source files. I prefer lcov's drill down approach. I would like to implement the ability to output as lcov's `.info` files so I can use `genhtml` to generate the html report. Contribution guide says to discuss enhancements as issues first.\r\n\r\nThoughts?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/287", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/287/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/287/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/287/events", "html_url": "https://github.com/gcovr/gcovr/issues/287", "id": 390226798, "node_id": "MDU6SXNzdWUzOTAyMjY3OTg=", "number": 287, "title": "Offline installation", "user": {"login": "bat2grb", "id": 12748178, "node_id": "MDQ6VXNlcjEyNzQ4MTc4", "avatar_url": "https://avatars3.githubusercontent.com/u/12748178?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bat2grb", "html_url": "https://github.com/bat2grb", "followers_url": "https://api.github.com/users/bat2grb/followers", "following_url": "https://api.github.com/users/bat2grb/following{/other_user}", "gists_url": "https://api.github.com/users/bat2grb/gists{/gist_id}", "starred_url": "https://api.github.com/users/bat2grb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bat2grb/subscriptions", "organizations_url": "https://api.github.com/users/bat2grb/orgs", "repos_url": "https://api.github.com/users/bat2grb/repos", "events_url": "https://api.github.com/users/bat2grb/events{/privacy}", "received_events_url": "https://api.github.com/users/bat2grb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 39711550, "node_id": "MDU6TGFiZWwzOTcxMTU1MA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Question", "name": "Type: Question", "color": "E80C59", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-12T13:30:49Z", "updated_at": "2018-12-12T13:45:18Z", "closed_at": "2018-12-12T13:45:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "On my computer with windows 10, I can create following conda environment\r\n```\r\nconda create -n test-coverage python=3.6\r\nactivate test-coverage\r\npip install gcovr\r\n```\r\nNow, I want to create this conda environment on a Windows 7 computer with no internet connection. I checked this link\r\n\r\nhttps://stackoverflow.com/questions/41577527/conda-offline-install-update\r\n\r\nbut I couldn't find the package\r\n\r\n>     gcovr.tar.bz2\r\n\r\nHow can I install gcovr on an offline computer? Where can I find the current package of gcovr to download?\r\n\r\nThanks!\r\n\r\nOriginal from https://stackoverflow.com/questions/53743751/conda-gcovr-offline-installation", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/286", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/286/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/286/events", "html_url": "https://github.com/gcovr/gcovr/issues/286", "id": 383538106, "node_id": "MDU6SXNzdWUzODM1MzgxMDY=", "number": 286, "title": "--keep option is not working", "user": {"login": "kunhong", "id": 5070249, "node_id": "MDQ6VXNlcjUwNzAyNDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5070249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kunhong", "html_url": "https://github.com/kunhong", "followers_url": "https://api.github.com/users/kunhong/followers", "following_url": "https://api.github.com/users/kunhong/following{/other_user}", "gists_url": "https://api.github.com/users/kunhong/gists{/gist_id}", "starred_url": "https://api.github.com/users/kunhong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kunhong/subscriptions", "organizations_url": "https://api.github.com/users/kunhong/orgs", "repos_url": "https://api.github.com/users/kunhong/repos", "events_url": "https://api.github.com/users/kunhong/events{/privacy}", "received_events_url": "https://api.github.com/users/kunhong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834073566, "node_id": "MDU6TGFiZWw4MzQwNzM1NjY=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Gcov", "name": "Gcov", "color": "1735c6", "default": false, "description": null}, {"id": 39711546, "node_id": "MDU6TGFiZWwzOTcxMTU0Ng==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Bug", "name": "Type: Bug", "color": "FF2408", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-22T13:33:50Z", "updated_at": "2018-11-22T21:13:09Z", "closed_at": "2018-11-22T21:12:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is my simple program to test coverage\r\n```\r\n#include <iostream>\r\n\r\nclass Test {\r\npublic:\r\n\tTest() {\r\n\t\tstd::cout << \"Test Constructor\" << std::endl;\r\n\t}\r\n\r\n\t~Test() {\r\n\t\tstd::cout << \"Test Destructor\" << std::endl;\r\n\t}\r\n\r\n\tvoid foo(bool v) {\r\n\t\tif (v) {\r\n\t\t\tstd::cout << \"calling foo\" << std::endl;\r\n\t\t}\r\n\t}\r\n\r\n};\r\nint main() {\r\n\tTest test;\r\n\ttest.foo(true);\r\n\ttest.foo(false);\r\n\r\n    return 0;\r\n}\r\n```\r\n\r\n**compile & run**\r\n```\r\n$ g++ -fprofile-arcs -ftest-coverage -fPIC -O0 example.cpp -o program\r\n$ ./program \r\n```\r\n\r\n**run gcovr**\r\n```\r\n$ gcovr -k -v -r .\r\n...\r\nFilters for --root: (1)\r\n- re.compile('/Users/hongkun/dev/git_projects/Temp/')\r\nFilters for --filter: (1)\r\n- DirectoryPrefixFilter(/Users/hongkun/dev/git_projects/Temp/)\r\nFilters for --exclude: (0)\r\nFilters for --gcov-filter: (1)\r\n- AlwaysMatchFilter()\r\nFilters for --gcov-exclude: (0)\r\nFilters for --exclude-directories: (0)\r\nScanning directory . for gcda/gcno files...\r\nFound 2 files (and will process 1)\r\nPool started with 1 threads\r\nProcessing file: /Users/hongkun/dev/git_projects/Temp/example.gcda\r\nRunning gcov: 'gcov /Users/hongkun/dev/git_projects/Temp/example.gcda --branch-counts --branch-probabilities --preserve-paths --object-directory /Users/hongkun/dev/git_projects/Temp' in '/var/folders/j8/p3thzgnx2_b51ctyv4sc0cf40000gn/T/tmpascthv56'\r\nFinding source file corresponding to a gcov data file\r\n  currdir      /Users/hongkun/dev/git_projects/Temp\r\n  gcov_fname   /var/folders/j8/p3thzgnx2_b51ctyv4sc0cf40000gn/T/tmpascthv56/#Applications#Xcode.app#Contents#Developer#Toolchains#XcodeDefault.xctoolchain#usr#include#c++#v1#__locale.gcov\r\n               ['        -', '    0', 'Source', '/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale\\n']\r\n  source_fname /Users/hongkun/dev/git_projects/Temp/example.gcda\r\n  root         /Users/hongkun/dev/git_projects/Temp\r\n  fname        /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale\r\n...\r\n```\r\n```\r\n$ ls\r\nexample.cpp\texample.gcda\texample.gcno\tprogram\r\n```\r\ngcovr with keep option is not working. i could not find example.cpp.gcov file in my source folder\r\n\r\nIt looks like gcovr will delete .gcov file. also it seems it writes it to /var folder\r\n\r\n**Version**\r\n```\r\n$ gcovr --version\r\ngcovr 4.1\r\n\r\nCopyright 2013-2018 the gcovr authors\r\nCopyright 2013 Sandia Corporation\r\nUnder the terms of Contract DE-AC04-94AL85000 with Sandia Corporation,\r\nthe U.S. Government retains certain rights in this software.\r\n$ g++ --version\r\nConfigured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/c++/4.2.1\r\nApple LLVM version 10.0.0 (clang-1000.11.45.5)\r\nTarget: x86_64-apple-darwin18.2.0\r\nThread model: posix\r\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\r\n$ gcov --version\r\nApple LLVM version 10.0.0 (clang-1000.11.45.5)\r\n  Optimized build.\r\n  Default target: x86_64-apple-darwin18.2.0\r\n  Host CPU: broadwell\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/283", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/283/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/283/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/283/events", "html_url": "https://github.com/gcovr/gcovr/issues/283", "id": 367493596, "node_id": "MDU6SXNzdWUzNjc0OTM1OTY=", "number": 283, "title": "Meaning of multiple X and V next to if statements", "user": {"login": "deblauwetom", "id": 2629599, "node_id": "MDQ6VXNlcjI2Mjk1OTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2629599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deblauwetom", "html_url": "https://github.com/deblauwetom", "followers_url": "https://api.github.com/users/deblauwetom/followers", "following_url": "https://api.github.com/users/deblauwetom/following{/other_user}", "gists_url": "https://api.github.com/users/deblauwetom/gists{/gist_id}", "starred_url": "https://api.github.com/users/deblauwetom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deblauwetom/subscriptions", "organizations_url": "https://api.github.com/users/deblauwetom/orgs", "repos_url": "https://api.github.com/users/deblauwetom/repos", "events_url": "https://api.github.com/users/deblauwetom/events{/privacy}", "received_events_url": "https://api.github.com/users/deblauwetom/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834073566, "node_id": "MDU6TGFiZWw4MzQwNzM1NjY=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Gcov", "name": "Gcov", "color": "1735c6", "default": false, "description": null}, {"id": 39711548, "node_id": "MDU6TGFiZWwzOTcxMTU0OA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Enhancement", "name": "Type: Enhancement", "color": "300DFF", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-06T20:35:34Z", "updated_at": "2018-10-12T21:40:07Z", "closed_at": "2018-10-12T21:34:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI installed gcovr and it works very well, really easy to use(and fast in comparison with lcov !). \r\n\r\nNow I have a question that I did not find in the documentation.\r\n\r\nWhen I see an \"if()\" statement, it sometimes contains multiple X and V's but it is only a simple statement for example `if (isValid(obj)) {`. So after some searching I understood that some other people using lcov also had this problem and that it is due to some exception handling that could happen in that if-statement. Then I found this code from a guy who filters lcov files just before they generate html output to \"clean up\" the if statements. See: https://github.com/gsauthof/imapdl/blob/master/ci/filterbr.py\r\nI don't know if maybe something similar could be added to gcovr? That would be cool! Or maybe just that it is clear what checkmarks are about the total if-statement itself, and what is about parts of it. That would already solve the problem for me.\r\n\r\nBest regards,\r\nTom,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/278", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/278/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/278/events", "html_url": "https://github.com/gcovr/gcovr/issues/278", "id": 357501040, "node_id": "MDU6SXNzdWUzNTc1MDEwNDA=", "number": 278, "title": "Report date & time is shown in UTC time zone", "user": {"login": "armandas", "id": 58389, "node_id": "MDQ6VXNlcjU4Mzg5", "avatar_url": "https://avatars1.githubusercontent.com/u/58389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/armandas", "html_url": "https://github.com/armandas", "followers_url": "https://api.github.com/users/armandas/followers", "following_url": "https://api.github.com/users/armandas/following{/other_user}", "gists_url": "https://api.github.com/users/armandas/gists{/gist_id}", "starred_url": "https://api.github.com/users/armandas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/armandas/subscriptions", "organizations_url": "https://api.github.com/users/armandas/orgs", "repos_url": "https://api.github.com/users/armandas/repos", "events_url": "https://api.github.com/users/armandas/events{/privacy}", "received_events_url": "https://api.github.com/users/armandas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-06T05:27:22Z", "updated_at": "2018-09-06T05:51:50Z", "closed_at": "2018-09-06T05:29:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "For some reason, the HTML report date is shown in UTC time. I checked the source code for the html_generator.py and saw that it uses the following line to generate the date and time:\r\n\r\n`datetime.datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")`\r\n\r\nI ran that line on my server and got the correct date, but the HTML output is incorrect. Any ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/277", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/277/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/277/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/277/events", "html_url": "https://github.com/gcovr/gcovr/issues/277", "id": 354280886, "node_id": "MDU6SXNzdWUzNTQyODA4ODY=", "number": 277, "title": "Configure tab size for HTML report", "user": {"login": "itavero", "id": 203398, "node_id": "MDQ6VXNlcjIwMzM5OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/203398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itavero", "html_url": "https://github.com/itavero", "followers_url": "https://api.github.com/users/itavero/followers", "following_url": "https://api.github.com/users/itavero/following{/other_user}", "gists_url": "https://api.github.com/users/itavero/gists{/gist_id}", "starred_url": "https://api.github.com/users/itavero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itavero/subscriptions", "organizations_url": "https://api.github.com/users/itavero/orgs", "repos_url": "https://api.github.com/users/itavero/repos", "events_url": "https://api.github.com/users/itavero/events{/privacy}", "received_events_url": "https://api.github.com/users/itavero/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834072145, "node_id": "MDU6TGFiZWw4MzQwNzIxNDU=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Format:%20HTML", "name": "Format: HTML", "color": "CC9128", "default": false, "description": null}, {"id": 39711548, "node_id": "MDU6TGFiZWwzOTcxMTU0OA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Enhancement", "name": "Type: Enhancement", "color": "300DFF", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-27T11:26:43Z", "updated_at": "2020-05-29T12:01:14Z", "closed_at": "2020-05-29T12:01:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "At work we use hard tabs (so no spaces) in our code.\r\nIt would be nice if we could configure the CSS `tab-size` property when calling Gcovr.\r\nThat way we can set it to `3` (in our case) and have the HTML reports be aligned properly.\r\n\r\nIn most browser it defaults to `8`, but I would say a default of `4` or even `2` would also make a lot of sense (that are defaults used by a lot of IDEs).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/276", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/276/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/276/events", "html_url": "https://github.com/gcovr/gcovr/issues/276", "id": 349062284, "node_id": "MDU6SXNzdWUzNDkwNjIyODQ=", "number": 276, "title": "Detail of license: \"U.S. Government retains certain rights in this software\"", "user": {"login": "maxbrito", "id": 3287582, "node_id": "MDQ6VXNlcjMyODc1ODI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3287582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxbrito", "html_url": "https://github.com/maxbrito", "followers_url": "https://api.github.com/users/maxbrito/followers", "following_url": "https://api.github.com/users/maxbrito/following{/other_user}", "gists_url": "https://api.github.com/users/maxbrito/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxbrito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxbrito/subscriptions", "organizations_url": "https://api.github.com/users/maxbrito/orgs", "repos_url": "https://api.github.com/users/maxbrito/repos", "events_url": "https://api.github.com/users/maxbrito/events{/privacy}", "received_events_url": "https://api.github.com/users/maxbrito/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 39711550, "node_id": "MDU6TGFiZWwzOTcxMTU1MA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Question", "name": "Type: Question", "color": "E80C59", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-09T10:06:55Z", "updated_at": "2018-09-06T06:19:36Z", "closed_at": "2018-09-06T06:19:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'm creating an inventory of 3rd party items where gcovr is one of the items being used. The license is very standard and friendly (thank you for sharing the code), my doubt is about the text: \"U.S. Government retains certain rights in this software\".\r\n\r\nWould it be possible to list which rights are retained?\r\n\r\nMany thanks,\r\nMax", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/274", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/274/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/274/events", "html_url": "https://github.com/gcovr/gcovr/issues/274", "id": 347573528, "node_id": "MDU6SXNzdWUzNDc1NzM1Mjg=", "number": 274, "title": "rtura absolute path in jenkins", "user": {"login": "knapptimezzz", "id": 4129956, "node_id": "MDQ6VXNlcjQxMjk5NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4129956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/knapptimezzz", "html_url": "https://github.com/knapptimezzz", "followers_url": "https://api.github.com/users/knapptimezzz/followers", "following_url": "https://api.github.com/users/knapptimezzz/following{/other_user}", "gists_url": "https://api.github.com/users/knapptimezzz/gists{/gist_id}", "starred_url": "https://api.github.com/users/knapptimezzz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/knapptimezzz/subscriptions", "organizations_url": "https://api.github.com/users/knapptimezzz/orgs", "repos_url": "https://api.github.com/users/knapptimezzz/repos", "events_url": "https://api.github.com/users/knapptimezzz/events{/privacy}", "received_events_url": "https://api.github.com/users/knapptimezzz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-04T01:16:51Z", "updated_at": "2018-08-04T01:17:01Z", "closed_at": "2018-08-04T01:17:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/273", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/273/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/273/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/273/events", "html_url": "https://github.com/gcovr/gcovr/issues/273", "id": 344177628, "node_id": "MDU6SXNzdWUzNDQxNzc2Mjg=", "number": 273, "title": "search_paths seems to overwrite --object_directory", "user": {"login": "bdevorem", "id": 11051530, "node_id": "MDQ6VXNlcjExMDUxNTMw", "avatar_url": "https://avatars3.githubusercontent.com/u/11051530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdevorem", "html_url": "https://github.com/bdevorem", "followers_url": "https://api.github.com/users/bdevorem/followers", "following_url": "https://api.github.com/users/bdevorem/following{/other_user}", "gists_url": "https://api.github.com/users/bdevorem/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdevorem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdevorem/subscriptions", "organizations_url": "https://api.github.com/users/bdevorem/orgs", "repos_url": "https://api.github.com/users/bdevorem/repos", "events_url": "https://api.github.com/users/bdevorem/events{/privacy}", "received_events_url": "https://api.github.com/users/bdevorem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834073566, "node_id": "MDU6TGFiZWw4MzQwNzM1NjY=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Gcov", "name": "Gcov", "color": "1735c6", "default": false, "description": null}, {"id": 39711550, "node_id": "MDU6TGFiZWwzOTcxMTU1MA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Question", "name": "Type: Question", "color": "E80C59", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-24T19:45:45Z", "updated_at": "2018-07-30T07:31:36Z", "closed_at": "2018-07-30T07:31:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Prepare for major information dump! If this question has already been asked, please let me know. I tried looking for anything related to this, with no luck, but definitely point me in the right direction if I missed it!\r\n\r\nFor my project, my build directory is separate from my source directory, and I also need the .gcda files in a separate directory. The reason for this is my source and build directories are located on a shared filesystem, and I have workers that will each test the executable and then run gcovr. If the .gcda, .gcov, and output files aren't in different locations for each worker, then I'll have a race condition because the workers run in parallel.\r\n\r\nHere is an example file structure. I'm working with a larger project, so there are actually more subdirectories, but I think this gets the point across:\r\n\r\n```\r\n\u251c\u2500\u2500 target\r\n\u2502   \u2514\u2500\u2500 build\r\n\u2502       \u2514\u2500\u2500 build_flavor\r\n\u2502           \u251c\u2500\u2500 subdir 1\r\n\u2502           \u2502   \u2514\u2500\u2500 .gcda files\r\n\u2502           \u251c\u2500\u2500 subdir 2\r\n\u2502           \u2502   \u2514\u2500\u2500 .gcda files\r\n\u2502           \u2514\u2500\u2500 subdir 3\r\n\u2502               \u2514\u2500\u2500 .gcda files\r\n\u251c\u2500\u2500 src\r\n\u2502   \u251c\u2500\u2500 makefile\r\n\u2502   \u251c\u2500\u2500 README.md\r\n\u2502   \u251c\u2500\u2500 subdir 1\r\n\u2502   \u2502   \u251c\u2500\u2500 .c files\r\n\u2502   \u2502   \u2514\u2500\u2500 .h files\r\n\u2502   \u251c\u2500\u2500 subdir 2\r\n\u2502   \u2502   \u251c\u2500\u2500 .c files\r\n\u2502   \u2502   \u2514\u2500\u2500 .h files\r\n\u2502   \u2514\u2500\u2500 subdir 3\r\n\u2502       \u251c\u2500\u2500 .c files\r\n\u2502       \u2514\u2500\u2500 .h files\r\n\u2514\u2500\u2500 build\r\n    \u2514\u2500\u2500 build_flavor\r\n        \u251c\u2500\u2500 subdir 1\r\n        \u2502   \u251c\u2500\u2500 .o files\r\n        \u2502   \u251c\u2500\u2500 .gcno files\r\n        \u2502   \u251c\u2500\u2500 .dso files\r\n        \u2502   \u2514\u2500\u2500 .d files\r\n        \u251c\u2500\u2500 subdir 2\r\n        \u2502   \u251c\u2500\u2500 .o files\r\n        \u2502   \u251c\u2500\u2500 .gcno files\r\n        \u2502   \u251c\u2500\u2500 .dso files\r\n        \u2502   \u2514\u2500\u2500 .d files\r\n        \u2514\u2500\u2500 subdir 3\r\n        \u2502   \u251c\u2500\u2500 .o files\r\n        \u2502   \u251c\u2500\u2500 .gcno files\r\n        \u2502   \u251c\u2500\u2500 .dso files\r\n        \u2502   \u2514\u2500\u2500 .d files\r\n```\r\n\r\nBasically, `src/` has my source code (shocker!). When I build the source, the object files go into `build/`, with the file structure retained. Additionally during compilation, I have two environment variables set, `GCOV_PREFIX` and `GCOV_PREFIX_STRIP`, such that the .gcda files for each source file are placed in `target/`, with the file structure retained. `target/` consists of a subdirectory that is the exact same as `build/`, except that it *only* contains .gcda files (and not object files).\r\n\r\nNow, where the problem exists, I'm running the following gcovr command:\r\n\r\n```\r\ngcovr -v -r /absolute/path/to/src --html --html-details -o test-details.html --object-directory=/absolute/path/to/build /absolute/path/to/target/build\r\n```\r\n\r\nI expected this to check `/absolute/path/to/src` for my source code, `/absolute/path/to/build ` for my object files, and `/absolute/path/to/target/build` for the .gcda files (as gcovr documentation says  `search_paths: Search these directories for coverage files`). Looking at the output from this command (since I ran with `-v`), I'm seeing output and multiple gcov commands of the following form:\r\n\r\n```\r\nProcessing file: /absolute/path/to/target/build/build_flavor/subdir1/filename.gcda\r\nRunning gcov: 'gcov /absolute/path/to/target/build/build_flavor/subdir1/filename.gcda --branch-counts --branch-probabilities --preserve-paths --object-directory /absolute/path/to/target/build/build_flavor/subdir1' in '/tmp/tmphbIP3v'\r\n```\r\nThe output for that gcov command is: `/absolute/path/to/target/build/build_flavor/subdir1/filename.gcno:cannot open notes file`. That's because the .gcno files are under the top-level `build/` and not `target/build/`.\r\nIt seems like the `search_paths` path overwrote the `--object-directory` path from my original gcovr command. I expected a gcov output like the following (only difference is in the --object-directory path):\r\n\r\n```\r\nProcessing file: /absolute/path/to/target/build/build_flavor/subdir1/filename.gcda\r\nRunning gcov: 'gcov /absolute/path/to/target/build/build_flavor/subdir1/filename.gcda --branch-counts --branch-probabilities --preserve-paths --object-directory /absolute/path/to/build/build_flavor/subdir1' in '/tmp/tmphbIP3v'\r\n```\r\nAnd when I run this command, the output is as I expect, with the proper coverage percentages as well.\r\n\r\nIs this expected behavior?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/272", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/272/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/272/events", "html_url": "https://github.com/gcovr/gcovr/issues/272", "id": 341548622, "node_id": "MDU6SXNzdWUzNDE1NDg2MjI=", "number": 272, "title": "ValueError on line 632, in process_gcov_data", "user": {"login": "psalvaggio", "id": 13050294, "node_id": "MDQ6VXNlcjEzMDUwMjk0", "avatar_url": "https://avatars0.githubusercontent.com/u/13050294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/psalvaggio", "html_url": "https://github.com/psalvaggio", "followers_url": "https://api.github.com/users/psalvaggio/followers", "following_url": "https://api.github.com/users/psalvaggio/following{/other_user}", "gists_url": "https://api.github.com/users/psalvaggio/gists{/gist_id}", "starred_url": "https://api.github.com/users/psalvaggio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/psalvaggio/subscriptions", "organizations_url": "https://api.github.com/users/psalvaggio/orgs", "repos_url": "https://api.github.com/users/psalvaggio/repos", "events_url": "https://api.github.com/users/psalvaggio/events{/privacy}", "received_events_url": "https://api.github.com/users/psalvaggio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-16T14:43:37Z", "updated_at": "2018-07-16T15:53:19Z", "closed_at": "2018-07-16T15:00:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI ran into this issue on the RedHat Bugzilla:\r\n\r\nhttps://bugzilla.redhat.com/show_bug.cgi?id=1567948\r\n\r\nThat I thought should be posted here. The stack I get is:\r\n```\r\nWriting directory view page.\r\nOverall coverage rate:\r\n  lines......: 86.2% (882 of 1023 lines)\r\n  functions..: 55.6% (133 of 239 functions)\r\nTraceback (most recent call last):\r\n  File \"/usr/bin/gcovr\", line 2318, in <module>\r\n    process_datafile(file_, covdata, options)\r\n  File \"/usr/bin/gcovr\", line 897, in process_datafile\r\n    process_gcov_data(fname, covdata, abs_filename, options)\r\n  File \"/usr/bin/gcovr\", line 632, in process_gcov_data\r\n    covered[lineno] = int(segments[0].strip())\r\nValueError: invalid literal for int() with base 10: '2*'\r\n```\r\nSeems like it's not stripping off that trailing *. Any ideas how to fix this issue?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/270", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/270/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/270/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/270/events", "html_url": "https://github.com/gcovr/gcovr/issues/270", "id": 340567913, "node_id": "MDU6SXNzdWUzNDA1Njc5MTM=", "number": 270, "title": "Can't get coverage with gcc 8.1.0", "user": {"login": "lisongmin", "id": 2513062, "node_id": "MDQ6VXNlcjI1MTMwNjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2513062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lisongmin", "html_url": "https://github.com/lisongmin", "followers_url": "https://api.github.com/users/lisongmin/followers", "following_url": "https://api.github.com/users/lisongmin/following{/other_user}", "gists_url": "https://api.github.com/users/lisongmin/gists{/gist_id}", "starred_url": "https://api.github.com/users/lisongmin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lisongmin/subscriptions", "organizations_url": "https://api.github.com/users/lisongmin/orgs", "repos_url": "https://api.github.com/users/lisongmin/repos", "events_url": "https://api.github.com/users/lisongmin/events{/privacy}", "received_events_url": "https://api.github.com/users/lisongmin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 39711550, "node_id": "MDU6TGFiZWwzOTcxMTU1MA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Question", "name": "Type: Question", "color": "E80C59", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-12T09:53:14Z", "updated_at": "2019-07-31T13:42:47Z", "closed_at": "2018-07-12T10:24:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "\r\nI can't get coverage from gcc 8.1.0, follow is vebose info:\r\n\r\n```\r\n\u2570\u2500 $ gcovr --verbose --use-gcov-files /tmp/tmpm1t0t91w/\\#core\\#Queue.cpp.gcov\r\nFilters for --root: (1)\r\n- re.compile('\\\\/work\\\\/github\\\\/gcovr\\\\/')\r\nFilters for --filter: (1)\r\n- DirectoryPrefixFilter(\\/work\\/github\\/gcovr\\/)\r\nFilters for --exclude: (0)\r\nFilters for --gcov-filter: (1)\r\n- AlwaysMatchFilter()\r\nFilters for --gcov-exclude: (0)\r\nFilters for --exclude-directories: (0)\r\nScanning directory /tmp/tmpm1t0t91w/#core#Queue.cpp.gcov for gcov files...\r\nFound 0 files (and will process 0)\r\nPool started with 1 threads\r\nGathered coveraged data for 0 files\r\n------------------------------------------------------------------------------\r\n                           GCC Code Coverage Report\r\nDirectory: .\r\n------------------------------------------------------------------------------\r\nFile                                       Lines    Exec  Cover   Missing\r\n------------------------------------------------------------------------------\r\n------------------------------------------------------------------------------\r\nTOTAL                                          0       0    --%\r\n------------------------------------------------------------------------------\r\n```\r\n\r\nthe gcov content:\r\n\r\n```\r\n        -:    0:Source:/core/Queue.cpp\r\n        -:    0:Graph:/core/CMakeFiles/hacore.dir/Queue.cpp.gcno\r\n        -:    0:Data:/core/CMakeFiles/hacore.dir/Queue.cpp.gcda\r\n        -:    0:Runs:1\r\n        -:    0:Programs:1\r\n        -:    1:/**\r\n        -:    2: * \\file Queue.cpp\r\n        -:    3: * \\brief\r\n        -:    4: * \\author  \r\n        -:    5: * \\copyright \r\n        -:    6: * reserved.\r\n        -:    7: */\r\n        -:    8:\r\n        -:    9:#include <ha/core/Queue.hpp>\r\n        -:   10:\r\n        -:   11:namespace ha {\r\n        -:   12:namespace core {\r\n        -:   13:\r\nfunction _ZN2ha4core12make_messageE10HaDispatch9HaEventId called 228 returned 100% blocks executed 90%\r\n      228:   14:std::unique_ptr<HaMessage> make_message(HaDispatch dispatch_id,\r\n        -:   15:                                        HaEventId ev_id) {\r\n      228:   16:  std::unique_ptr<HaMessage> up_msg = std::make_unique<HaMessage>();\r\ncall    0 returned 228\r\n      228:   17:  up_msg->mutable_msg_header()->set_process(dispatch_id);\r\ncall    0 returned 228\r\ncall    1 returned 228\r\nbranch  2 taken 228 (fallthrough)\r\nbranch  3 taken 0 (throw)\r\ncall    4 returned 228\r\nbranch  5 taken 228 (fallthrough)\r\nbranch  6 taken 0 (throw)\r\n      228:   18:  up_msg->set_event_id(ev_id);\r\ncall    0 returned 228\r\ncall    1 returned 228\r\nbranch  2 taken 228 (fallthrough)\r\nbranch  3 taken 0 (throw)\r\n      228:   19:  return up_msg;\r\n        -:   20:}\r\n        -:   21:\r\n        -:   22:}  // namespace core\r\n        -:   23:}  // namespace ha\r\n```\r\n\r\ngcov and gcovr version info:\r\n\r\n```\r\n\u2570\u2500 $ gcovr --version\r\ngcovr 4.1\r\n\r\nCopyright 2013-2018 the gcovr authors\r\nCopyright 2013 Sandia Corporation\r\nUnder the terms of Contract DE-AC04-94AL85000 with Sandia Corporation,\r\nthe U.S. Government retains certain rights in this software.\r\n\u2570\u2500 $ gcov --version\r\ngcov (GCC) 8.1.1 20180531\r\nCopyright (C) 2018 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.\r\nThere is NO warranty; not even for MERCHANTABILITY or\r\nFITNESS FOR A PARTICULAR PURPOSE.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/261", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/261/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/261/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/261/events", "html_url": "https://github.com/gcovr/gcovr/issues/261", "id": 332266421, "node_id": "MDU6SXNzdWUzMzIyNjY0MjE=", "number": 261, "title": "Add option to change threshold in HTML", "user": {"login": "Spacetown", "id": 40258682, "node_id": "MDQ6VXNlcjQwMjU4Njgy", "avatar_url": "https://avatars3.githubusercontent.com/u/40258682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Spacetown", "html_url": "https://github.com/Spacetown", "followers_url": "https://api.github.com/users/Spacetown/followers", "following_url": "https://api.github.com/users/Spacetown/following{/other_user}", "gists_url": "https://api.github.com/users/Spacetown/gists{/gist_id}", "starred_url": "https://api.github.com/users/Spacetown/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Spacetown/subscriptions", "organizations_url": "https://api.github.com/users/Spacetown/orgs", "repos_url": "https://api.github.com/users/Spacetown/repos", "events_url": "https://api.github.com/users/Spacetown/events{/privacy}", "received_events_url": "https://api.github.com/users/Spacetown/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834072145, "node_id": "MDU6TGFiZWw4MzQwNzIxNDU=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Format:%20HTML", "name": "Format: HTML", "color": "CC9128", "default": false, "description": null}, {"id": 39711548, "node_id": "MDU6TGFiZWwzOTcxMTU0OA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Enhancement", "name": "Type: Enhancement", "color": "300DFF", "default": false, "description": null}, {"id": 788980057, "node_id": "MDU6TGFiZWw3ODg5ODAwNTc=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/help%20wanted", "name": "help wanted", "color": "0e8a16", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-06-14T06:24:24Z", "updated_at": "2018-06-16T19:23:34Z", "closed_at": "2018-06-16T19:23:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be helpful if the thresholds for medium_coverage and high_coverage could be changed in the command line.\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/260", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/260/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/260/events", "html_url": "https://github.com/gcovr/gcovr/issues/260", "id": 332116009, "node_id": "MDU6SXNzdWUzMzIxMTYwMDk=", "number": 260, "title": "Support setup.cfg when using gcovr in Python + C projects", "user": {"login": "stadelmanma", "id": 16710141, "node_id": "MDQ6VXNlcjE2NzEwMTQx", "avatar_url": "https://avatars0.githubusercontent.com/u/16710141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stadelmanma", "html_url": "https://github.com/stadelmanma", "followers_url": "https://api.github.com/users/stadelmanma/followers", "following_url": "https://api.github.com/users/stadelmanma/following{/other_user}", "gists_url": "https://api.github.com/users/stadelmanma/gists{/gist_id}", "starred_url": "https://api.github.com/users/stadelmanma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stadelmanma/subscriptions", "organizations_url": "https://api.github.com/users/stadelmanma/orgs", "repos_url": "https://api.github.com/users/stadelmanma/repos", "events_url": "https://api.github.com/users/stadelmanma/events{/privacy}", "received_events_url": "https://api.github.com/users/stadelmanma/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 39711550, "node_id": "MDU6TGFiZWwzOTcxMTU1MA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Question", "name": "Type: Question", "color": "E80C59", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-13T18:41:30Z", "updated_at": "2018-06-14T17:07:33Z", "closed_at": "2018-06-13T22:32:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "First off thank you for this tool, it is a great alternative to lcov. The project I am currently using it on is a mix of Python and C extension modules. Would it be possible to support configuration via the \"semi-standard\" `setup.cfg` file as an alternative to just command line options? \r\n\r\nSecondly, this is beyond the scope of this particular issue but relevant to supporting Python C extensions better. An issue with using gcov on Python C extensions is is that I can't get the setup.py script to **not** recompile source files shared between extension modules that are already an object file. As a result that the timestamps between the `*.gcno` and `*.gcda` files can be mismatched and gcov emits a warning.  Maybe I'm missing the mark and there is a way to configure `setup.py build_ext` to do things more like `make`? (if so ignore this portion completely)\r\n\r\nThis is easily fixed using the code snippet below (where files have been globbed appropriately)\r\n```Python\r\n# gcda/gcno header format: [int32:magic int32:version int32:stamp]\r\n\r\n# collect a timestamp from the first notes file to replicate\r\nwith open(gcno_files[0], 'rb') as fp:\r\n    fp.seek(8)\r\n    stamp = fp.read(4)\r\n\r\n# replace stamp in header across all files to prevent errors\r\nfor file in gcno_files + gcda_files:\r\n    with open(file, 'r+b') as fp:\r\n        fp.seek(8)\r\n        fp.write(stamp)\r\n```  \r\nHowever I don't know how you and your team feel about adding language specific logic into the utility. Supporting standard config files is one thing, but I completely understand the desire to let users deal with hacks like the one above.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/259", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/259/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/259/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/259/events", "html_url": "https://github.com/gcovr/gcovr/issues/259", "id": 331166271, "node_id": "MDU6SXNzdWUzMzExNjYyNzE=", "number": 259, "title": "get coverage in a cross compilation environment", "user": {"login": "gocarlos", "id": 1331762, "node_id": "MDQ6VXNlcjEzMzE3NjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1331762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gocarlos", "html_url": "https://github.com/gocarlos", "followers_url": "https://api.github.com/users/gocarlos/followers", "following_url": "https://api.github.com/users/gocarlos/following{/other_user}", "gists_url": "https://api.github.com/users/gocarlos/gists{/gist_id}", "starred_url": "https://api.github.com/users/gocarlos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gocarlos/subscriptions", "organizations_url": "https://api.github.com/users/gocarlos/orgs", "repos_url": "https://api.github.com/users/gocarlos/repos", "events_url": "https://api.github.com/users/gocarlos/events{/privacy}", "received_events_url": "https://api.github.com/users/gocarlos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834073566, "node_id": "MDU6TGFiZWw4MzQwNzM1NjY=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Gcov", "name": "Gcov", "color": "1735c6", "default": false, "description": null}, {"id": 39711550, "node_id": "MDU6TGFiZWwzOTcxMTU1MA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Question", "name": "Type: Question", "color": "E80C59", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-06-11T12:22:17Z", "updated_at": "2019-06-10T18:37:34Z", "closed_at": "2018-07-21T07:54:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to get the code coverage by cross compiling some unit tests, moving them into a  root file system  of the target platform (arm) and executing them using ssh. \r\n\r\nAfter this step I run gcovr from the host on the mounted root file system of the target platform (where the gcno files are) with: \r\n```\r\n# connect to target and run tests\r\nssh root@target_ip\r\ncd /opt/my_progr/bin/\r\n./my_unit_test\r\nexit\r\n# get back to host\r\ncd /home/user/target_filesystem/opt/my_progr/bin\r\ngcovr -r  path/to/src_dir/on/host --exclude=\".*/third_party/*.\" --exclude=\".*/test/*.\" --exclude=\".*/app/*.\"\r\n# output is a list of files, all with 0.0% line coverage\r\n```\r\n\r\ngcovr run but does not show any coverage (0.0% lines) but only branches... \r\n\r\nthe same executables compiled nativelly (x86) work well with gcovr\r\n\r\n\r\nCould this be a bug? \r\nUsing version 3.3\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/258", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/258/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/258/events", "html_url": "https://github.com/gcovr/gcovr/issues/258", "id": 326899818, "node_id": "MDU6SXNzdWUzMjY4OTk4MTg=", "number": 258, "title": "gcovr does not seem to respect \"--exclude-directories\"", "user": {"login": "gocarlos", "id": 1331762, "node_id": "MDQ6VXNlcjEzMzE3NjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1331762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gocarlos", "html_url": "https://github.com/gocarlos", "followers_url": "https://api.github.com/users/gocarlos/followers", "following_url": "https://api.github.com/users/gocarlos/following{/other_user}", "gists_url": "https://api.github.com/users/gocarlos/gists{/gist_id}", "starred_url": "https://api.github.com/users/gocarlos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gocarlos/subscriptions", "organizations_url": "https://api.github.com/users/gocarlos/orgs", "repos_url": "https://api.github.com/users/gocarlos/repos", "events_url": "https://api.github.com/users/gocarlos/events{/privacy}", "received_events_url": "https://api.github.com/users/gocarlos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834073149, "node_id": "MDU6TGFiZWw4MzQwNzMxNDk=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Filters", "name": "Filters", "color": "2befd2", "default": false, "description": "related to filters, include/exclude, path handling"}, {"id": 39711550, "node_id": "MDU6TGFiZWwzOTcxMTU1MA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Question", "name": "Type: Question", "color": "E80C59", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-28T05:23:20Z", "updated_at": "2018-05-28T11:22:45Z", "closed_at": "2018-05-28T08:34:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "When building this [hello world example](https://github.com/gocarlos/gtest-demo-gitlab)\r\n\r\nI get this: \r\n![image](https://user-images.githubusercontent.com/1331762/40598356-859d2f06-6247-11e8-9612-a059107c3f4e.png)\r\n\r\n\r\neven though I call gcovr in the build directory with `gcovr -r .. --exclude-directories=external --html -o coverage.html`\r\n\r\n## Full instructions to see the issue: \r\n```\r\ngit clone --recursive https://github.com/gocarlos/gtest-demo-gitlab.git\r\n#!/bin/bash\r\nrm -rf _build\r\nmkdir _build\r\ncd _build\r\ncmake ..\r\ncmake --build .\r\nctest\r\ngcovr -r .. --exclude-directories=external --html -o coverage.html\r\n```\r\n\r\nAlso tried \r\ngcovr -r .. --exclude-directories=\"^external*\" --html -o coverage.html\r\ngcovr -r .. --exclude-directories=\"../external\" --html -o coverage.html\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/252", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/252/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/252/events", "html_url": "https://github.com/gcovr/gcovr/issues/252", "id": 314166778, "node_id": "MDU6SXNzdWUzMTQxNjY3Nzg=", "number": 252, "title": "Sphinxify the command line documentation", "user": {"login": "latk", "id": 1782927, "node_id": "MDQ6VXNlcjE3ODI5Mjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1782927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/latk", "html_url": "https://github.com/latk", "followers_url": "https://api.github.com/users/latk/followers", "following_url": "https://api.github.com/users/latk/following{/other_user}", "gists_url": "https://api.github.com/users/latk/gists{/gist_id}", "starred_url": "https://api.github.com/users/latk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/latk/subscriptions", "organizations_url": "https://api.github.com/users/latk/orgs", "repos_url": "https://api.github.com/users/latk/repos", "events_url": "https://api.github.com/users/latk/events{/privacy}", "received_events_url": "https://api.github.com/users/latk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834075967, "node_id": "MDU6TGFiZWw4MzQwNzU5Njc=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Docs", "name": "Docs", "color": "e99695", "default": false, "description": "related to the documentation or website"}, {"id": 39711548, "node_id": "MDU6TGFiZWwzOTcxMTU0OA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Enhancement", "name": "Type: Enhancement", "color": "300DFF", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "latk", "id": 1782927, "node_id": "MDQ6VXNlcjE3ODI5Mjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1782927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/latk", "html_url": "https://github.com/latk", "followers_url": "https://api.github.com/users/latk/followers", "following_url": "https://api.github.com/users/latk/following{/other_user}", "gists_url": "https://api.github.com/users/latk/gists{/gist_id}", "starred_url": "https://api.github.com/users/latk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/latk/subscriptions", "organizations_url": "https://api.github.com/users/latk/orgs", "repos_url": "https://api.github.com/users/latk/repos", "events_url": "https://api.github.com/users/latk/events{/privacy}", "received_events_url": "https://api.github.com/users/latk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "latk", "id": 1782927, "node_id": "MDQ6VXNlcjE3ODI5Mjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1782927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/latk", "html_url": "https://github.com/latk", "followers_url": "https://api.github.com/users/latk/followers", "following_url": "https://api.github.com/users/latk/following{/other_user}", "gists_url": "https://api.github.com/users/latk/gists{/gist_id}", "starred_url": "https://api.github.com/users/latk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/latk/subscriptions", "organizations_url": "https://api.github.com/users/latk/orgs", "repos_url": "https://api.github.com/users/latk/repos", "events_url": "https://api.github.com/users/latk/events{/privacy}", "received_events_url": "https://api.github.com/users/latk/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-04-13T16:09:58Z", "updated_at": "2018-05-19T22:09:27Z", "closed_at": "2018-05-19T22:09:27Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently, the command line docs are rendered in the guide by piping the `gcovr --help` output into a file, and including it as a literal block. This works \u2026 but is ugly, hard to read, and cannot be used to link to a specific option.\r\n\r\nCan we use some Sphinx features to improve this documentation, without having to duplicate the command line docs?\r\n\r\nOf course, there are already Sphinx plugins that might be helpful:\r\n\r\n[sphinxcontrib.autoprogram](https://sphinxcontrib-autoprogram.readthedocs.io/) renders the command line parameters nicely. However, it lumps all argument groups together which hides valuable context and makes the long list of options more difficult to read.\r\n\r\n[sphinx-argparse](https://sphinx-argparse.readthedocs.io/) does render argument groups correctly, but uses tables for layout instead of the correct Sphinx roles. These tables overflow and have to be scrolled horizontally. Also, option value placeholders (metavars) are not rendered, which makes the phrasing of some option help messages difficult to read.\r\n\r\nDue to these problems, neither of those plugins is currently a good replacement for the CLI documentation.\r\n\r\nHelp wanted:\r\n\r\n - Are there any other alternatives that do not suffer from these problems?\r\n\r\n - If no alternative exists, could the existing modules be extended to address these issues? E.g. I believe it would be possible to add subgroup support to autoprogram since it already supports subparsers.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/251", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/251/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/251/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/251/events", "html_url": "https://github.com/gcovr/gcovr/issues/251", "id": 313977138, "node_id": "MDU6SXNzdWUzMTM5NzcxMzg=", "number": 251, "title": "Coverage not generated due to UnicodeDecodeError", "user": {"login": "shashank-gece", "id": 25522298, "node_id": "MDQ6VXNlcjI1NTIyMjk4", "avatar_url": "https://avatars2.githubusercontent.com/u/25522298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shashank-gece", "html_url": "https://github.com/shashank-gece", "followers_url": "https://api.github.com/users/shashank-gece/followers", "following_url": "https://api.github.com/users/shashank-gece/following{/other_user}", "gists_url": "https://api.github.com/users/shashank-gece/gists{/gist_id}", "starred_url": "https://api.github.com/users/shashank-gece/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shashank-gece/subscriptions", "organizations_url": "https://api.github.com/users/shashank-gece/orgs", "repos_url": "https://api.github.com/users/shashank-gece/repos", "events_url": "https://api.github.com/users/shashank-gece/events{/privacy}", "received_events_url": "https://api.github.com/users/shashank-gece/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 39711546, "node_id": "MDU6TGFiZWwzOTcxMTU0Ng==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Bug", "name": "Type: Bug", "color": "FF2408", "default": false, "description": null}, {"id": 796841523, "node_id": "MDU6TGFiZWw3OTY4NDE1MjM=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/more%20info%20needed", "name": "more info needed", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-13T05:50:55Z", "updated_at": "2018-04-27T09:23:08Z", "closed_at": "2018-04-27T09:23:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "UnicodeDecodeError: 'cp932' codec can't decode byte 0x94 in position 1918: illegal multibyte sequence\r\n\r\nBecause of the above stated error, the coverage file is not generated.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/243", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/243/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/243/events", "html_url": "https://github.com/gcovr/gcovr/issues/243", "id": 304159251, "node_id": "MDU6SXNzdWUzMDQxNTkyNTE=", "number": 243, "title": "Gcovr does not handle \"Could not open output file\" error message. ", "user": {"login": "MartinXMraz", "id": 37264955, "node_id": "MDQ6VXNlcjM3MjY0OTU1", "avatar_url": "https://avatars2.githubusercontent.com/u/37264955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MartinXMraz", "html_url": "https://github.com/MartinXMraz", "followers_url": "https://api.github.com/users/MartinXMraz/followers", "following_url": "https://api.github.com/users/MartinXMraz/following{/other_user}", "gists_url": "https://api.github.com/users/MartinXMraz/gists{/gist_id}", "starred_url": "https://api.github.com/users/MartinXMraz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MartinXMraz/subscriptions", "organizations_url": "https://api.github.com/users/MartinXMraz/orgs", "repos_url": "https://api.github.com/users/MartinXMraz/repos", "events_url": "https://api.github.com/users/MartinXMraz/events{/privacy}", "received_events_url": "https://api.github.com/users/MartinXMraz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834073566, "node_id": "MDU6TGFiZWw4MzQwNzM1NjY=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Gcov", "name": "Gcov", "color": "1735c6", "default": false, "description": null}, {"id": 39711546, "node_id": "MDU6TGFiZWwzOTcxMTU0Ng==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Bug", "name": "Type: Bug", "color": "FF2408", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-03-11T13:41:04Z", "updated_at": "2018-03-11T16:07:54Z", "closed_at": "2018-03-11T16:07:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#Gcov produces error message \"Could not open output file\" in e.g. case it tries to create temporary *.c.gcov file beyond 259 chars limitation on Windows (or path+name will exceed this limitation), but gcovr does not handle this type of error message. Therefore the gcovr continues and does not create report for this file.\r\nGcovr handles correctly error message \"Cannot open source file\" comming from gcov, but not error message \"Could not open output file\".", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/240", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/240/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/240/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/240/events", "html_url": "https://github.com/gcovr/gcovr/issues/240", "id": 303057917, "node_id": "MDU6SXNzdWUzMDMwNTc5MTc=", "number": 240, "title": "Tests should check for more BASE_OS types in Windows", "user": {"login": "landofcake", "id": 12685679, "node_id": "MDQ6VXNlcjEyNjg1Njc5", "avatar_url": "https://avatars2.githubusercontent.com/u/12685679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/landofcake", "html_url": "https://github.com/landofcake", "followers_url": "https://api.github.com/users/landofcake/followers", "following_url": "https://api.github.com/users/landofcake/following{/other_user}", "gists_url": "https://api.github.com/users/landofcake/gists{/gist_id}", "starred_url": "https://api.github.com/users/landofcake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/landofcake/subscriptions", "organizations_url": "https://api.github.com/users/landofcake/orgs", "repos_url": "https://api.github.com/users/landofcake/repos", "events_url": "https://api.github.com/users/landofcake/events{/privacy}", "received_events_url": "https://api.github.com/users/landofcake/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 799643750, "node_id": "MDU6TGFiZWw3OTk2NDM3NTA=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Platform:%20Windows", "name": "Platform: Windows", "color": "fef2c0", "default": false, "description": null}, {"id": 39711546, "node_id": "MDU6TGFiZWwzOTcxMTU0Ng==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Bug", "name": "Type: Bug", "color": "FF2408", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-07T11:14:25Z", "updated_at": "2018-03-07T22:17:02Z", "closed_at": "2018-03-07T22:15:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is a follow on from #230 . The tests currently don't work correctly in any Windows build environment which doesn't perfectly expose MSYS_NT as part of uname where everything would be absolutely fine otherwise.\r\n\r\nFor instance, in my case, I'm building and running everything in a MinGW/MSYS environment which happens to expose uname in a way that causes BASE_OS to resolve to MINGW_NT.\r\n\r\nIn this instance, if you simply tell the test makefiles to use everything as if we had returned MSYS_NT, everything is OK.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/235", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/235/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/235/events", "html_url": "https://github.com/gcovr/gcovr/issues/235", "id": 302412628, "node_id": "MDU6SXNzdWUzMDI0MTI2Mjg=", "number": 235, "title": "Manage documentation with Sphinx", "user": {"login": "latk", "id": 1782927, "node_id": "MDQ6VXNlcjE3ODI5Mjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1782927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/latk", "html_url": "https://github.com/latk", "followers_url": "https://api.github.com/users/latk/followers", "following_url": "https://api.github.com/users/latk/following{/other_user}", "gists_url": "https://api.github.com/users/latk/gists{/gist_id}", "starred_url": "https://api.github.com/users/latk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/latk/subscriptions", "organizations_url": "https://api.github.com/users/latk/orgs", "repos_url": "https://api.github.com/users/latk/repos", "events_url": "https://api.github.com/users/latk/events{/privacy}", "received_events_url": "https://api.github.com/users/latk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834075967, "node_id": "MDU6TGFiZWw4MzQwNzU5Njc=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Docs", "name": "Docs", "color": "e99695", "default": false, "description": "related to the documentation or website"}, {"id": 39711548, "node_id": "MDU6TGFiZWwzOTcxMTU0OA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Enhancement", "name": "Type: Enhancement", "color": "300DFF", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-05T18:35:32Z", "updated_at": "2018-04-11T12:43:10Z", "closed_at": "2018-04-06T21:38:59Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Sphinx <http://www.sphinx-doc.org/> can manage a set of RestructuredText documents. It is widely used to manage the documentation of Python projects.\r\n\r\nCurrently, our docs are structured like this:\r\n\r\n - `README.rst` serves as an entry point to gcovr, and must render well on GitHub and on PyPI.\r\n - `CONTRIBUTING.rst` is the development guide, and must render well on GitHub.\r\n - `AUTHORS.txt`, `CHANGELOG.txt` and `LICENSE.txt` are various metadata.\r\n - `doc/guide.rst` is a more in-depth user guide. It is published on the gcovr home page <http://gcovr.com/guide.html>. It includes various examples, and the `gcovr --help` output.\r\n\r\nThe `doc/examples` directory includes a few example programs that are included in the documentation. The screenshots are based on these examples.\r\n\r\nI want to use Sphinx so that I can (at some later time):\r\n\r\n - split the guide into smaller documents\r\n - use some extension for better command line option documentation (fixed-width text is difficult to read)\r\n - use the readme (or something based on it) as the gcovr home page (the current homepage is super minimal, and is maintained by hand)\r\n - host the readme on readthedocs.io\r\n - build and publish new docs automatically through Travis CI.\r\n\r\nWould anyone like to take a shot at Sphinx? This shouldn't be too difficult. Note that the `*.txt` files are not yet translated to ReST, and that the current documentation build process also executes tests and can automatically make screenshots. I would like to preserve this ability under Sphinx.\r\n\r\nI'll be happy to assist in any way that I can.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/232", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/232/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/232/events", "html_url": "https://github.com/gcovr/gcovr/issues/232", "id": 302069701, "node_id": "MDU6SXNzdWUzMDIwNjk3MDE=", "number": 232, "title": "Another Cmake out-of-source test case", "user": {"login": "inorton", "id": 58906, "node_id": "MDQ6VXNlcjU4OTA2", "avatar_url": "https://avatars3.githubusercontent.com/u/58906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inorton", "html_url": "https://github.com/inorton", "followers_url": "https://api.github.com/users/inorton/followers", "following_url": "https://api.github.com/users/inorton/following{/other_user}", "gists_url": "https://api.github.com/users/inorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/inorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inorton/subscriptions", "organizations_url": "https://api.github.com/users/inorton/orgs", "repos_url": "https://api.github.com/users/inorton/repos", "events_url": "https://api.github.com/users/inorton/events{/privacy}", "received_events_url": "https://api.github.com/users/inorton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834073566, "node_id": "MDU6TGFiZWw4MzQwNzM1NjY=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Gcov", "name": "Gcov", "color": "1735c6", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-04T09:09:10Z", "updated_at": "2018-03-04T16:24:21Z", "closed_at": "2018-03-04T13:28:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, As mentioned in another issue I've been trying to use cmake and gcovr without much luck.\r\n\r\nI have created a basic cmake repo with a handful of small c libraries and a single test program that re-creates the sort of structure I'm using (which is common in cmake) and where gcovr doesnt find any data.\r\n\r\nhttps://github.com/inorton/cmake-gcovr-oos\r\n\r\nThere is a simple \"build.sh\" that builds, runs a test and then runs gcovr.\r\n\r\nI've been running this using gcc 4.9 on 64bit linux\r\n\r\nMany thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/231", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/231/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/231/events", "html_url": "https://github.com/gcovr/gcovr/issues/231", "id": 302067619, "node_id": "MDU6SXNzdWUzMDIwNjc2MTk=", "number": 231, "title": "Which versions of gcov are supported?", "user": {"login": "inorton", "id": 58906, "node_id": "MDQ6VXNlcjU4OTA2", "avatar_url": "https://avatars3.githubusercontent.com/u/58906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inorton", "html_url": "https://github.com/inorton", "followers_url": "https://api.github.com/users/inorton/followers", "following_url": "https://api.github.com/users/inorton/following{/other_user}", "gists_url": "https://api.github.com/users/inorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/inorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inorton/subscriptions", "organizations_url": "https://api.github.com/users/inorton/orgs", "repos_url": "https://api.github.com/users/inorton/repos", "events_url": "https://api.github.com/users/inorton/events{/privacy}", "received_events_url": "https://api.github.com/users/inorton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834073566, "node_id": "MDU6TGFiZWw4MzQwNzM1NjY=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Gcov", "name": "Gcov", "color": "1735c6", "default": false, "description": null}, {"id": 39711550, "node_id": "MDU6TGFiZWwzOTcxMTU1MA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Question", "name": "Type: Question", "color": "E80C59", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-04T08:31:23Z", "updated_at": "2018-03-04T13:41:33Z", "closed_at": "2018-03-04T13:41:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, At the moment I'm having to build with quite an old GCC (4.9.2) and occasionally also 3.0.4!\r\n\r\nWhat versions of gcov does gcovr currently support  as a minimum?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/229", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/229/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/229/events", "html_url": "https://github.com/gcovr/gcovr/issues/229", "id": 301562128, "node_id": "MDU6SXNzdWUzMDE1NjIxMjg=", "number": 229, "title": "Project specific exclusion (configuration?) filter file", "user": {"login": "thejk", "id": 977644, "node_id": "MDQ6VXNlcjk3NzY0NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/977644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thejk", "html_url": "https://github.com/thejk", "followers_url": "https://api.github.com/users/thejk/followers", "following_url": "https://api.github.com/users/thejk/following{/other_user}", "gists_url": "https://api.github.com/users/thejk/gists{/gist_id}", "starred_url": "https://api.github.com/users/thejk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thejk/subscriptions", "organizations_url": "https://api.github.com/users/thejk/orgs", "repos_url": "https://api.github.com/users/thejk/repos", "events_url": "https://api.github.com/users/thejk/events{/privacy}", "received_events_url": "https://api.github.com/users/thejk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 39711548, "node_id": "MDU6TGFiZWwzOTcxMTU0OA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Enhancement", "name": "Type: Enhancement", "color": "300DFF", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 29, "created_at": "2018-03-01T21:15:42Z", "updated_at": "2018-10-11T09:18:45Z", "closed_at": "2018-10-11T09:18:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When using gcovr in multiple projects and especially when used as generic targets like in meson build system I often wished I could add just one or more exclude rule. But also, would be nice to just be able to run `gcovr -r .. -o report` without having to remember exactly what excludes are useful/needed for this project.\r\n\r\nSo, I purpose to add something like a .gitignore file but for gcovr, like .gcovrignore (yes imaginative I know) where each line will act as an extra --exclude filter relative to the ignore file.\r\nTo start with perhaps just look in the root dir but would be nice to check all searched directories. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/226", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/226/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/226/events", "html_url": "https://github.com/gcovr/gcovr/issues/226", "id": 299375150, "node_id": "MDU6SXNzdWUyOTkzNzUxNTA=", "number": 226, "title": "gcovr fails with GCC 8.0.1", "user": {"login": "ernestask", "id": 26867637, "node_id": "MDQ6VXNlcjI2ODY3NjM3", "avatar_url": "https://avatars3.githubusercontent.com/u/26867637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ernestask", "html_url": "https://github.com/ernestask", "followers_url": "https://api.github.com/users/ernestask/followers", "following_url": "https://api.github.com/users/ernestask/following{/other_user}", "gists_url": "https://api.github.com/users/ernestask/gists{/gist_id}", "starred_url": "https://api.github.com/users/ernestask/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ernestask/subscriptions", "organizations_url": "https://api.github.com/users/ernestask/orgs", "repos_url": "https://api.github.com/users/ernestask/repos", "events_url": "https://api.github.com/users/ernestask/events{/privacy}", "received_events_url": "https://api.github.com/users/ernestask/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834073566, "node_id": "MDU6TGFiZWw4MzQwNzM1NjY=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Gcov", "name": "Gcov", "color": "1735c6", "default": false, "description": null}, {"id": 39711546, "node_id": "MDU6TGFiZWwzOTcxMTU0Ng==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Bug", "name": "Type: Bug", "color": "FF2408", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-02-22T14:31:43Z", "updated_at": "2018-03-06T14:26:20Z", "closed_at": "2018-03-06T14:14:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is actually a different trace than I got the first time, but trying to generate a coverage report in a CI pipeline results in this:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/gcovr\", line 2412, in <module>\r\n    process_datafile(file_, covdata, options)\r\n  File \"/usr/local/bin/gcovr\", line 884, in process_datafile\r\n    process_gcov_data(fname, covdata, abs_filename, options)\r\n  File \"/usr/local/bin/gcovr\", line 616, in process_gcov_data\r\n    covered[lineno] = int(segments[0].strip())\r\nValueError: invalid literal for int() with base 10: '1*'\r\n```\r\nThe one I saw before was an `IndexError` at this line: https://github.com/gcovr/gcovr/blob/5b0e68f0ecdbe3ebfa584778f381912ebc5e9a50/gcovr/gcov.py#L232\r\n\r\n\r\nThe distro is current Fedora Rawhide with gcovr installed via pip, as the distro package is outdated now.\r\n\r\nFull log: https://gitlab.gnome.org/GNOME/nautilus/-/jobs/8807/raw.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/220", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/220/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/220/events", "html_url": "https://github.com/gcovr/gcovr/issues/220", "id": 297702290, "node_id": "MDU6SXNzdWUyOTc3MDIyOTA=", "number": 220, "title": "Regression on filtering between gcovr 3.4 and gcovr 3.3", "user": {"login": "mayeut", "id": 9768336, "node_id": "MDQ6VXNlcjk3NjgzMzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9768336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mayeut", "html_url": "https://github.com/mayeut", "followers_url": "https://api.github.com/users/mayeut/followers", "following_url": "https://api.github.com/users/mayeut/following{/other_user}", "gists_url": "https://api.github.com/users/mayeut/gists{/gist_id}", "starred_url": "https://api.github.com/users/mayeut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mayeut/subscriptions", "organizations_url": "https://api.github.com/users/mayeut/orgs", "repos_url": "https://api.github.com/users/mayeut/repos", "events_url": "https://api.github.com/users/mayeut/events{/privacy}", "received_events_url": "https://api.github.com/users/mayeut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834073149, "node_id": "MDU6TGFiZWw4MzQwNzMxNDk=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Filters", "name": "Filters", "color": "2befd2", "default": false, "description": "related to filters, include/exclude, path handling"}, {"id": 799626491, "node_id": "MDU6TGFiZWw3OTk2MjY0OTE=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Discussion", "name": "Type: Discussion", "color": "F300FF", "default": false, "description": null}, {"id": 39711550, "node_id": "MDU6TGFiZWwzOTcxMTU1MA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Question", "name": "Type: Question", "color": "E80C59", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-16T07:37:00Z", "updated_at": "2018-06-03T20:38:08Z", "closed_at": "2018-06-03T20:38:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The way filtering works has changed between 3.3 and 3.4, since commit 90589892b9f32d811bedca3008d1e8960389faf2\r\n\r\nFeel free to mark as won't fix but just thought I'd report the regression I saw.\r\nThe way filtering works is properly documented in the guide for 3.4\r\nThe changelog only says `Fix to support filtering with absolute paths.`\r\n\r\nSample layout:\r\n```\r\nroot\r\n|-extern\r\n|  |- ...\r\n|- lib\r\n|  |- ...\r\n```\r\nRun with `gcovr -r ../root -e extern` from the `lib` subfolder:\r\n`extern` was excluded with gcovr 3.3. It's not anymore with gcvor 3.4", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/216", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/216/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/216/events", "html_url": "https://github.com/gcovr/gcovr/issues/216", "id": 297272178, "node_id": "MDU6SXNzdWUyOTcyNzIxNzg=", "number": 216, "title": "Add coverage report for gcovr", "user": {"login": "mayeut", "id": 9768336, "node_id": "MDQ6VXNlcjk3NjgzMzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9768336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mayeut", "html_url": "https://github.com/mayeut", "followers_url": "https://api.github.com/users/mayeut/followers", "following_url": "https://api.github.com/users/mayeut/following{/other_user}", "gists_url": "https://api.github.com/users/mayeut/gists{/gist_id}", "starred_url": "https://api.github.com/users/mayeut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mayeut/subscriptions", "organizations_url": "https://api.github.com/users/mayeut/orgs", "repos_url": "https://api.github.com/users/mayeut/repos", "events_url": "https://api.github.com/users/mayeut/events{/privacy}", "received_events_url": "https://api.github.com/users/mayeut/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-14T22:43:51Z", "updated_at": "2018-02-15T22:16:15Z", "closed_at": "2018-02-15T22:16:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "IMHO, gcovr is missing a public coverage report on CI builds.\r\n\r\nIt would allow:\r\n- To track coverage progress when adding tests, before refactoring gcovr\r\n- To make sure PR are well tested and reject PR that have an insufficient diff coverage\r\n- For everyone to know what's tested\r\n\r\nThere are at least 2 service providers that allow to get a report on each CI build that I know of:\r\n- codecov\r\n- coveralls\r\n\r\nHere's a sample output using codecov: https://codecov.io/gh/mayeut/gcovr/branch/module-coverage\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/215", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/215/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/215/events", "html_url": "https://github.com/gcovr/gcovr/issues/215", "id": 297155383, "node_id": "MDU6SXNzdWUyOTcxNTUzODM=", "number": 215, "title": "How to modularize \u2013 structure suggestions", "user": {"login": "latk", "id": 1782927, "node_id": "MDQ6VXNlcjE3ODI5Mjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1782927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/latk", "html_url": "https://github.com/latk", "followers_url": "https://api.github.com/users/latk/followers", "following_url": "https://api.github.com/users/latk/following{/other_user}", "gists_url": "https://api.github.com/users/latk/gists{/gist_id}", "starred_url": "https://api.github.com/users/latk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/latk/subscriptions", "organizations_url": "https://api.github.com/users/latk/orgs", "repos_url": "https://api.github.com/users/latk/repos", "events_url": "https://api.github.com/users/latk/events{/privacy}", "received_events_url": "https://api.github.com/users/latk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 799626491, "node_id": "MDU6TGFiZWw3OTk2MjY0OTE=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Discussion", "name": "Type: Discussion", "color": "F300FF", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-02-14T16:16:21Z", "updated_at": "2018-02-19T21:35:10Z", "closed_at": "2018-02-19T21:35:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When splitting the gcovr script into multiple smaller modules, how should we divide them? In this issue, we can discuss design decisions before settling on a particular choice.\r\n\r\nThe modularization that was done on the dev branch uses this structure:\r\n\r\n| Module | Contents |\r\n| --- | --- |\r\n| `gcovr` | namespace |\r\n| `gcovr.args` | supplies `parse_arguments()` function |\r\n| `gcovr.data` | `CoverageData`, and processing of gcov data files |\r\n| `gcovr.driver` | supplies `main()` function, and a `main_()` entrypoint |\r\n| `gcovr.path` | path utilities |\r\n| `gcovr.version` | `__version__` declaration and `version_str()` function |\r\n| `gcovr.prints` | namespace |\r\n| `gcovr.prints.html` | `print_html_report()` and supporting functions |\r\n| `gcovr.prints.xml` | `print_xml_report()` function |\r\n| `gcovr.prints.text` | `print_text_report()` and `print_summary()` functions |\r\n\r\nI'd prefer a slightly different design:\r\n\r\n- get rid of the `gcovr.prints` namespace\r\n- possibly, separate text and summary output\r\n- put argument parsing, main(), and entrypoint into `gcovr.app`\r\n- (later) add `gcovr.logging` which formats verbose diagnostics and error messages\r\n- put gcov invocation and parsing into `gcovr.gcov`\r\n\r\nSo I'd probably do:\r\n\r\n| Module | Contents |\r\n| --- | --- |\r\n| `gcovr` | namespace |\r\n| `gcovr.app` | `parse_arguments()`, `main()`, entrypoint |\r\n| `gcovr.coverage` | `CoverageData` data model that is generated by `gcovr.gcov` and consumed by the output formats |\r\n| `gcovr.gcov` | invoking gcov and parsing gcov files |\r\n| `gcovr.utils` | utilities, including path handling and filters |\r\n| `gcovr.version` | declares `__version__` and nothing else, can be `exec()`d by `setup.py` |\r\n| `gcovr.html` | HTML report |\r\n| `gcovr.xml` | XML report |\r\n| `gcovr.txt` | text report |\r\n| `gcovr.summary`  | summary report |\r\n\r\nOne thing that bothers me with both of these approaches is the rather generic module names like `html`. Would `html_output` be a better name?\r\n\r\nAre there any alternative suggestions? Any weaknesses with the proposed structures?\r\n\r\nOnce we've decided on a design, implementing the modularization is going to be fairly easy. Further refactoring can come afterwards.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/213", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/213/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/213/events", "html_url": "https://github.com/gcovr/gcovr/issues/213", "id": 296857664, "node_id": "MDU6SXNzdWUyOTY4NTc2NjQ=", "number": 213, "title": "Appveyor tests aren't using Python 3", "user": {"login": "latk", "id": 1782927, "node_id": "MDQ6VXNlcjE3ODI5Mjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1782927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/latk", "html_url": "https://github.com/latk", "followers_url": "https://api.github.com/users/latk/followers", "following_url": "https://api.github.com/users/latk/following{/other_user}", "gists_url": "https://api.github.com/users/latk/gists{/gist_id}", "starred_url": "https://api.github.com/users/latk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/latk/subscriptions", "organizations_url": "https://api.github.com/users/latk/orgs", "repos_url": "https://api.github.com/users/latk/repos", "events_url": "https://api.github.com/users/latk/events{/privacy}", "received_events_url": "https://api.github.com/users/latk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 799643750, "node_id": "MDU6TGFiZWw3OTk2NDM3NTA=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Platform:%20Windows", "name": "Platform: Windows", "color": "fef2c0", "default": false, "description": null}, {"id": 39711546, "node_id": "MDU6TGFiZWwzOTcxMTU0Ng==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Bug", "name": "Type: Bug", "color": "FF2408", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-13T19:30:21Z", "updated_at": "2018-02-14T13:21:47Z", "closed_at": "2018-02-14T13:21:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I am currently working on modularization. But the tests fail on Windows! It seems when the test Makefiles invoke the gcovr script, it is using this `sys.path` for our Python 3 tests:\r\n\r\n```\r\n./subdir/B/testcase\r\n../../../scripts/gcovr -r subdir -d -x -o coverage.xml\r\nCould not find gcovr modules in:\r\nC:\\projects\\gcovr\\scripts\r\nC:\\windows\\SYSTEM32\\python27.zip\r\nC:\\Python27\\DLLs\r\nC:\\Python27\\lib\r\nC:\\Python27\\lib\\plat-win\r\nC:\\Python27\\lib\\lib-tk\r\nC:\\Python27\r\nC:\\Python27\\lib\\site-packages\r\nTraceback (most recent call last):\r\n  File \"../../../scripts/gcovr\", line 44, in <module>\r\n    from gcovr.app import parse_arguments\r\nImportError: No module named gcovr.app\r\nmake: *** [Makefile:16: xml] Error 1\r\n```\r\n\r\nSo gcovr was installed using Python 3, but we try to run it under Python 2 :/\r\n\r\nAnd indeed, the appveyor.yml selects the Python version through an env variable:\r\n\r\n``` yml\r\nenvironment:\r\n  matrix:\r\n    - PYTHON: C:\\Python27\\python.exe\r\n    - PYTHON: C:\\Python36-x64\\python.exe\r\n```\r\n\r\nIn the Makefile, the script is invoked like this, without using that env variable:\r\n\r\n```\r\n../../../scripts/gcovr -d -x -o coverage.xml\r\n```\r\n\r\nI assume the tests should be updated to explicitly run the selected Python, e.g.\r\n\r\n``` Makefile\r\nPYTHON ?= python\r\n\r\nxml:\r\n\t$(PYTHON) ../../../scripts/gcovr -d -x -o coverage.xml\r\n```\r\n\r\nMy questions:\r\n\r\n - does this analysis seem sensible?\r\n - can someone with a Windows machine verify?\r\n - would someone like to contribute a fix?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/207", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/207/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/207/events", "html_url": "https://github.com/gcovr/gcovr/issues/207", "id": 293017440, "node_id": "MDU6SXNzdWUyOTMwMTc0NDA=", "number": 207, "title": "Jekins Cobertura does not show  source code", "user": {"login": "AlexYIN", "id": 12268932, "node_id": "MDQ6VXNlcjEyMjY4OTMy", "avatar_url": "https://avatars1.githubusercontent.com/u/12268932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexYIN", "html_url": "https://github.com/AlexYIN", "followers_url": "https://api.github.com/users/AlexYIN/followers", "following_url": "https://api.github.com/users/AlexYIN/following{/other_user}", "gists_url": "https://api.github.com/users/AlexYIN/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexYIN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexYIN/subscriptions", "organizations_url": "https://api.github.com/users/AlexYIN/orgs", "repos_url": "https://api.github.com/users/AlexYIN/repos", "events_url": "https://api.github.com/users/AlexYIN/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexYIN/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 39711550, "node_id": "MDU6TGFiZWwzOTcxMTU1MA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Question", "name": "Type: Question", "color": "E80C59", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-31T03:17:07Z", "updated_at": "2018-02-09T20:37:22Z", "closed_at": "2018-02-09T20:37:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Steps to reproduce: \r\n\r\nsubmit a Job to Jenkins, and wait for it to succeed \r\n(if Job is failing, fix the compilation and unit testing problem, and try again) \r\nvisit Cobertura Coverage Report for daemon/table/fib.hpp \r\nExpected: the report displays the source code of daemon/table/fib.hpp, and highlights which lines are not covered by unit testing. \r\n\r\nActual: \r\nCobertura is unable to display painted source code when code coverage XML is generated from the Unix command line \"gcovr -x\" and the plugin configuration is set to correct xml report pattern. Error is:\r\n\r\nSource code is unavailable. Some possible reasons are:\r\n\r\nThis is not the most recent build (to save on disk space, this plugin only keeps the most recent build's source code).\r\nCobertura found the source code but did not provide enough information to locate the source code.\r\nCobertura could not find the source code, so this plugin has no hope of finding it.\r\nThe code coverage XML data file is located in the same directory as the source file.\r\nNote that the Trend diagram, Package Coverage Summary, File Coverage Summary, Class Coverage Summary display normally.\r\n\r\nFYI. \r\nxml generated steps: \r\ncd daemon/table \r\ngcovr -r ./ --xml-pretty -s -o ./gcovr.xml \r\n\r\nthe gcovr.xml head as below \r\n`SYSTEM 'http://cobertura.sourceforge.net/xml/coverage-03.dtd'> <coverage branch-rate=\"0.0132740135658\" line-rate=\"0.0193204762236\" timestamp=\"1517384737\" version=\"gcovr 3.3\"> <sources> <source>./</source> </sources> <packages>`\r\n\r\ngcovr version: 3.3 \r\ncobertura version: 1.11 \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/202", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/202/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/202/events", "html_url": "https://github.com/gcovr/gcovr/issues/202", "id": 290603390, "node_id": "MDU6SXNzdWUyOTA2MDMzOTA=", "number": 202, "title": "Plan for the next release", "user": {"login": "mayeut", "id": 9768336, "node_id": "MDQ6VXNlcjk3NjgzMzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9768336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mayeut", "html_url": "https://github.com/mayeut", "followers_url": "https://api.github.com/users/mayeut/followers", "following_url": "https://api.github.com/users/mayeut/following{/other_user}", "gists_url": "https://api.github.com/users/mayeut/gists{/gist_id}", "starred_url": "https://api.github.com/users/mayeut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mayeut/subscriptions", "organizations_url": "https://api.github.com/users/mayeut/orgs", "repos_url": "https://api.github.com/users/mayeut/repos", "events_url": "https://api.github.com/users/mayeut/events{/privacy}", "received_events_url": "https://api.github.com/users/mayeut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 799626491, "node_id": "MDU6TGFiZWw3OTk2MjY0OTE=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Discussion", "name": "Type: Discussion", "color": "F300FF", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/gcovr/gcovr/milestones/6", "html_url": "https://github.com/gcovr/gcovr/milestone/6", "labels_url": "https://api.github.com/repos/gcovr/gcovr/milestones/6/labels", "id": 3068100, "node_id": "MDk6TWlsZXN0b25lMzA2ODEwMA==", "number": 6, "title": "gcovr 3.4", "description": "", "creator": {"login": "latk", "id": 1782927, "node_id": "MDQ6VXNlcjE3ODI5Mjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1782927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/latk", "html_url": "https://github.com/latk", "followers_url": "https://api.github.com/users/latk/followers", "following_url": "https://api.github.com/users/latk/following{/other_user}", "gists_url": "https://api.github.com/users/latk/gists{/gist_id}", "starred_url": "https://api.github.com/users/latk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/latk/subscriptions", "organizations_url": "https://api.github.com/users/latk/orgs", "repos_url": "https://api.github.com/users/latk/repos", "events_url": "https://api.github.com/users/latk/events{/privacy}", "received_events_url": "https://api.github.com/users/latk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 6, "state": "closed", "created_at": "2018-01-27T12:07:13Z", "updated_at": "2018-04-15T15:51:03Z", "due_on": null, "closed_at": "2018-04-15T15:51:03Z"}, "comments": 14, "created_at": "2018-01-22T20:25:43Z", "updated_at": "2018-02-13T09:41:45Z", "closed_at": "2018-02-12T23:05:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "All is in the title, what's the plan for the next release ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/199", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/199/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/199/events", "html_url": "https://github.com/gcovr/gcovr/issues/199", "id": 289950458, "node_id": "MDU6SXNzdWUyODk5NTA0NTg=", "number": 199, "title": "Why the conditional coverage generated by gcovr is uncertain under different test conditions\uff1f", "user": {"login": "common1994", "id": 17662241, "node_id": "MDQ6VXNlcjE3NjYyMjQx", "avatar_url": "https://avatars3.githubusercontent.com/u/17662241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/common1994", "html_url": "https://github.com/common1994", "followers_url": "https://api.github.com/users/common1994/followers", "following_url": "https://api.github.com/users/common1994/following{/other_user}", "gists_url": "https://api.github.com/users/common1994/gists{/gist_id}", "starred_url": "https://api.github.com/users/common1994/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/common1994/subscriptions", "organizations_url": "https://api.github.com/users/common1994/orgs", "repos_url": "https://api.github.com/users/common1994/repos", "events_url": "https://api.github.com/users/common1994/events{/privacy}", "received_events_url": "https://api.github.com/users/common1994/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 39711550, "node_id": "MDU6TGFiZWwzOTcxMTU1MA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Question", "name": "Type: Question", "color": "E80C59", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-19T11:50:07Z", "updated_at": "2018-01-21T17:47:17Z", "closed_at": "2018-01-21T17:47:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "main.png is my main function;\r\ntest_case1, test_case2 and test_case3 are my test cases.\r\n\r\nI use the gcovr tool to generate the xml file, explain the xml file generated by the previous step through the Jenkins plugin Cobertura and display it in html, and my gcovr option is \"gcovr -r <source_root_dir> --xml --xml-pretty --output coverage_report.xml\"\r\n\r\nDuring the testing, I had some questions on the conditional coverage generated by gcovr.\r\n1. Why the line 92 in testCondition4While function performed 21 times?\r\n2. Why does defining a pointer and using the std::vector<int>::push_back function cause branches to occur on lines 102 and 103??\r\n3. Why line 105 has been implemented twice, this line should not be implemented once?\r\n\r\nCan you help me about the these question? @nschum \r\n\r\n![main](https://user-images.githubusercontent.com/17662241/35149522-5d912f9a-fd51-11e7-8175-0e4ac4a08dff.png)\r\n![test_case1](https://user-images.githubusercontent.com/17662241/35149523-5dbe487c-fd51-11e7-97dd-24e0d0885edb.png)\r\n![test_case2](https://user-images.githubusercontent.com/17662241/35149524-5deaf480-fd51-11e7-8694-5bea4deece17.png)\r\n![test_case3](https://user-images.githubusercontent.com/17662241/35149525-5e1915ea-fd51-11e7-96db-a268b0323afa.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/197", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/197/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/197/events", "html_url": "https://github.com/gcovr/gcovr/issues/197", "id": 289575962, "node_id": "MDU6SXNzdWUyODk1NzU5NjI=", "number": 197, "title": "testpypi deployment fails (deprecated API)", "user": {"login": "latk", "id": 1782927, "node_id": "MDQ6VXNlcjE3ODI5Mjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1782927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/latk", "html_url": "https://github.com/latk", "followers_url": "https://api.github.com/users/latk/followers", "following_url": "https://api.github.com/users/latk/following{/other_user}", "gists_url": "https://api.github.com/users/latk/gists{/gist_id}", "starred_url": "https://api.github.com/users/latk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/latk/subscriptions", "organizations_url": "https://api.github.com/users/latk/orgs", "repos_url": "https://api.github.com/users/latk/repos", "events_url": "https://api.github.com/users/latk/events{/privacy}", "received_events_url": "https://api.github.com/users/latk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 39711546, "node_id": "MDU6TGFiZWwzOTcxMTU0Ng==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Bug", "name": "Type: Bug", "color": "FF2408", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2018-01-18T10:22:31Z", "updated_at": "2018-04-02T19:01:27Z", "closed_at": "2018-03-13T22:40:41Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Travis CI is configured to deploy the state of the master branch to testpypi. This is valuable to test the release process before doing an actual release. Unfortunately, this [doesn't work][travis-error]:\r\n\r\n> Uploading distributions to https://testpypi.python.org/pypi\r\n> Uploading gcovr-3.3-py2-none-any.whl\r\n> HTTPError: 410 Client Error: Gone (This API has been deprecated and removed from legacy PyPI in favor of using the APIs available in the new PyPI.org implementation of PyPI (located at https://pypi.org/). For more information about migrating your use of this API to PyPI.org, please see https://packaging.python.org/guides/migrating-to-pypi-org/#uploading. For more information about the sunsetting of this API, please see https://mail.python.org/pipermail/distutils-sig/2017-June/030766.html) for url: https://testpypi.python.org/pypi\r\n\r\n  [travis-error]: https://travis-ci.org/gcovr/gcovr/jobs/330012531#L1239\r\n\r\nThe currently used .travis.yml states:\r\n\r\n``` yml\r\ndeploy:\r\n  - provider: pypi\r\n    server: https://testpypi.python.org/pypi\r\n    user: whart111\r\n    password:\r\n      secure: ...\r\n    distributions: sdist --format=gztar bdist_wheel\r\n    on:\r\n      tags: false\r\n      branch: master\r\n      python: '2.7'\r\n```\r\n\r\nPyPI deployment from Travis CI is documented here: https://docs.travis-ci.com/user/deployment/pypi/\r\n\u2026 but that doesn't shed any light on this problem :(\r\n\r\nWould someone like to try fixing this? Because a pull request addressing this problem can't be tested before merging, please:\r\n\r\n - explain why the problem occurred,\r\n - explain why the pull request will fix this,\r\n - point to the relevant Travis and PyPI documentation, and\r\n - if possible, point to another project using the proposed solution, where upload demonstrably works.\r\n\r\nI will then be happy to assist by reviewing, merging, and iterating proposed changes until this works.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/191", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/191/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/191/events", "html_url": "https://github.com/gcovr/gcovr/issues/191", "id": 287033971, "node_id": "MDU6SXNzdWUyODcwMzM5NzE=", "number": 191, "title": "Exclude flag broken on Windows", "user": {"login": "wolf99", "id": 281700, "node_id": "MDQ6VXNlcjI4MTcwMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/281700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wolf99", "html_url": "https://github.com/wolf99", "followers_url": "https://api.github.com/users/wolf99/followers", "following_url": "https://api.github.com/users/wolf99/following{/other_user}", "gists_url": "https://api.github.com/users/wolf99/gists{/gist_id}", "starred_url": "https://api.github.com/users/wolf99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wolf99/subscriptions", "organizations_url": "https://api.github.com/users/wolf99/orgs", "repos_url": "https://api.github.com/users/wolf99/repos", "events_url": "https://api.github.com/users/wolf99/events{/privacy}", "received_events_url": "https://api.github.com/users/wolf99/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 39711546, "node_id": "MDU6TGFiZWwzOTcxMTU0Ng==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Bug", "name": "Type: Bug", "color": "FF2408", "default": false, "description": null}, {"id": 799626491, "node_id": "MDU6TGFiZWw3OTk2MjY0OTE=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Discussion", "name": "Type: Discussion", "color": "F300FF", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/gcovr/gcovr/milestones/7", "html_url": "https://github.com/gcovr/gcovr/milestone/7", "labels_url": "https://api.github.com/repos/gcovr/gcovr/milestones/7/labels", "id": 3268062, "node_id": "MDk6TWlsZXN0b25lMzI2ODA2Mg==", "number": 7, "title": "gcovr 4.0", "description": "The 4.0 release is an opportunity for minor backwards-incompatible changes, e.g. modularization.", "creator": {"login": "latk", "id": 1782927, "node_id": "MDQ6VXNlcjE3ODI5Mjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1782927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/latk", "html_url": "https://github.com/latk", "followers_url": "https://api.github.com/users/latk/followers", "following_url": "https://api.github.com/users/latk/following{/other_user}", "gists_url": "https://api.github.com/users/latk/gists{/gist_id}", "starred_url": "https://api.github.com/users/latk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/latk/subscriptions", "organizations_url": "https://api.github.com/users/latk/orgs", "repos_url": "https://api.github.com/users/latk/repos", "events_url": "https://api.github.com/users/latk/events{/privacy}", "received_events_url": "https://api.github.com/users/latk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "closed", "created_at": "2018-04-15T15:50:31Z", "updated_at": "2018-06-17T16:17:14Z", "due_on": null, "closed_at": "2018-06-17T16:17:14Z"}, "comments": 13, "created_at": "2018-01-09T10:09:57Z", "updated_at": "2018-06-05T11:11:09Z", "closed_at": "2018-06-03T20:27:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since #152  was merged it seems like gcov is now generating detailed HTML reports on Windows. So the following works as expected - yay! \ud83d\ude4c \r\n\r\n```bash\r\n> gcovr -p -b --html --html-details -r . -o \"build/artifacts/gcov/GcovCoverageResults.html\"\r\n```\r\n\r\nHowever it appears that the exclude flag is now broken:\r\n\r\n```bash\r\n>gcovr -p -b -e \"^vendor.*|^build.*|^test.*|^lib.*\" --html --html-details -r . -o \"build/artifacts/gcov/GcovCoverageResults.html\"\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Me\\AppData\\Local\\Programs\\Python\\Python36\\Scripts\\gcovr.py\", line 2326, in <module>\r\n    options.exclude[i] = re.compile(os.path.realpath(options.exclude[i]))\r\n  File \"C:\\Users\\Me\\AppData\\Local\\Programs\\Python\\Python36\\lib\\re.py\", line 233, in compile\r\n    return _compile(pattern, flags)\r\n  File \"C:\\Users\\Me\\AppData\\Local\\Programs\\Python\\Python36\\lib\\re.py\", line 301, in _compile\r\n    p = sre_compile.compile(pattern, flags)\r\n  File \"C:\\Users\\Me\\AppData\\Local\\Programs\\Python\\Python36\\lib\\sre_compile.py\", line 562, in compile\r\n    p = sre_parse.parse(p, flags)\r\n  File \"C:\\Users\\Me\\AppData\\Local\\Programs\\Python\\Python36\\lib\\sre_parse.py\", line 855, in parse\r\n    p = _parse_sub(source, pattern, flags & SRE_FLAG_VERBOSE, 0)\r\n  File \"C:\\Users\\Me\\AppData\\Local\\Programs\\Python\\Python36\\lib\\sre_parse.py\", line 416, in _parse_sub\r\n    not nested and not items))\r\n  File \"C:\\Users\\Me\\AppData\\Local\\Programs\\Python\\Python36\\lib\\sre_parse.py\", line 502, in _parse\r\n    code = _escape(source, this, state)\r\n  File \"C:\\Users\\Me\\AppData\\Local\\Programs\\Python\\Python36\\lib\\sre_parse.py\", line 368, in _escape\r\n    raise source.error(\"incomplete escape %s\" % escape, len(escape))\r\nsre_constants.error: incomplete escape \\U at position 2\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/189", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/189/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/189/events", "html_url": "https://github.com/gcovr/gcovr/issues/189", "id": 286857323, "node_id": "MDU6SXNzdWUyODY4NTczMjM=", "number": 189, "title": "Testing on Windows: how to compile under MinGW-w64?", "user": {"login": "latk", "id": 1782927, "node_id": "MDQ6VXNlcjE3ODI5Mjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1782927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/latk", "html_url": "https://github.com/latk", "followers_url": "https://api.github.com/users/latk/followers", "following_url": "https://api.github.com/users/latk/following{/other_user}", "gists_url": "https://api.github.com/users/latk/gists{/gist_id}", "starred_url": "https://api.github.com/users/latk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/latk/subscriptions", "organizations_url": "https://api.github.com/users/latk/orgs", "repos_url": "https://api.github.com/users/latk/repos", "events_url": "https://api.github.com/users/latk/events{/privacy}", "received_events_url": "https://api.github.com/users/latk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-08T19:24:54Z", "updated_at": "2018-01-21T17:46:43Z", "closed_at": "2018-01-21T17:46:06Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "There have been a lot of path-related problems on Windows, so I would like to add automated tests using AppVeyor. They offer a Windows-based continuous integration service similar to Travis CI. Their images provide MinGW, MSYS2, and so on.\r\n\r\n**The question is: how can I run the test suite under Windows? What environment variables must be set? What is the correct mixture of backslashes and forward slashes in path names?** If anyone has managed to do that or has related tips/insights, please discuss those in this issue.\r\n\r\nBecause I don't have a Windows development machine, I'm dependent on your contributions for this.\r\n\r\nThe gcovr test suite is based on Makefiles that run the compiler (CXX) and generate gcovr reports. Some Makefiles use CMake to drive the build. The tests are driven by the `gcovr/tests/test_gcovr.py` script. The reports are then compared to baseline files.\r\n\r\nTo run the tests under Linux, I set the CC, CXX, GCOV environment variables to the GCC version I want to test (should be GCC 5, else the baseline files assume slightly different coverage). Then I run `python -m nose -v` for a convenient test-runner, or invoke `python gcovr/tests/test_gcovr.py` directly. See also the [`.travis.yml`](https://github.com/gcovr/gcovr/blob/master/.travis.yml).\r\n\r\nI've started to work on an AppVeyor config at [latk/appveyor](https://github.com/latk/gcovr/tree/appveyor): [`.appveyor.yml`](https://github.com/latk/gcovr/blob/appveyor/.appveyor.yml). Note that this branch is rather volatile and will be rebased frequently.\r\n\r\nCurrently, the tests start to run but the Makefiles fail when the compiler is invoked. But the compiler does exist when I invoke it from the cmd shell. The CMake tests want to build with Visual Studio, ignoring my CXX setting.\r\n\r\nYou can see the [build logs on AppVeyor](https://ci.appveyor.com/project/latk/gcovr/history).\r\n\r\nThe available software on AppVeyor images is documented [here](https://www.appveyor.com/docs/build-environment/#pre-installed-software).\r\n\r\nI expect Windows testing to discover a lot of bugs. I want these to be figured out and resolved before any large refactoring of gcovr is started so that regressions can be prevented.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/184", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/184/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/184/events", "html_url": "https://github.com/gcovr/gcovr/issues/184", "id": 285113809, "node_id": "MDU6SXNzdWUyODUxMTM4MDk=", "number": 184, "title": "Vote: add \"@latk\" as admin?", "user": {"login": "latk", "id": 1782927, "node_id": "MDQ6VXNlcjE3ODI5Mjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1782927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/latk", "html_url": "https://github.com/latk", "followers_url": "https://api.github.com/users/latk/followers", "following_url": "https://api.github.com/users/latk/following{/other_user}", "gists_url": "https://api.github.com/users/latk/gists{/gist_id}", "starred_url": "https://api.github.com/users/latk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/latk/subscriptions", "organizations_url": "https://api.github.com/users/latk/orgs", "repos_url": "https://api.github.com/users/latk/repos", "events_url": "https://api.github.com/users/latk/events{/privacy}", "received_events_url": "https://api.github.com/users/latk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 790686708, "node_id": "MDU6TGFiZWw3OTA2ODY3MDg=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Vote", "name": "Type: Vote", "color": "850CE8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-12-29T15:48:40Z", "updated_at": "2018-01-30T12:06:49Z", "closed_at": "2018-01-30T12:06:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi, I am Lukas Atkinson (@latk) and would like to serve as an admin for gcovr.\r\n\r\nI think I can fill that role well because:\r\n\r\n - I am kind and thoughtful,\r\n - I am interested in gcovr, and\r\n - I have enough time.\r\n\r\nIn real life, I am a computer science student from Frankfurt, Germany.\r\n\r\n**What can an admin do?**\r\n\r\nI already have push access to the gcovr repos and can manage issues/discussions. If I become admin, I can also:\r\n\r\n - change repository settings, such as adding protections for the \"master\" branch.\r\n - manage the gcovr organization, such as adding new members.\r\n\r\n**Is an admin also a project lead?**\r\n\r\nNo, admin access only gives extra administrative permissions. But it is a position of trust.\r\n\r\nHowever, I am one of the more interested people in this project. Admin access will help me move this project forward.\r\n\r\n**Why do we need another admin?**\r\n\r\nThe current admins are @whart222 and @jsiirola, both of which no longer seem to be very interested in day to day operations. By adding a more involved admin, admin-level requests can be handled more quickly (in #176 it took multiple months for new members to be added). In any case, this reduces the \u201cbus factor\u201d of the project.\r\n\r\n**How does this vote work?**\r\n\r\nAs per the discussion in #176, all **members** of the gcovr organization may cast their vote. There are currently 8 members in total. Jsiirola will add an admin when two-thirds of the votes are in favour. Please cast a **vote by adding a comment** and not via emoji reactions, so that membership status is easy to see. The comment should clearly convey your intent (in favour, oppose, abstain). In order to give everyone enough time, this vote will run for four weeks **until Jan 26th**, 16:00 UTC.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/183", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/183/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/183/events", "html_url": "https://github.com/gcovr/gcovr/issues/183", "id": 283427139, "node_id": "MDU6SXNzdWUyODM0MjcxMzk=", "number": 183, "title": "gcovr does not work when cpp file is more than 10000 lines", "user": {"login": "warguss", "id": 9556139, "node_id": "MDQ6VXNlcjk1NTYxMzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/9556139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/warguss", "html_url": "https://github.com/warguss", "followers_url": "https://api.github.com/users/warguss/followers", "following_url": "https://api.github.com/users/warguss/following{/other_user}", "gists_url": "https://api.github.com/users/warguss/gists{/gist_id}", "starred_url": "https://api.github.com/users/warguss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/warguss/subscriptions", "organizations_url": "https://api.github.com/users/warguss/orgs", "repos_url": "https://api.github.com/users/warguss/repos", "events_url": "https://api.github.com/users/warguss/events{/privacy}", "received_events_url": "https://api.github.com/users/warguss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-20T02:07:11Z", "updated_at": "2018-01-07T12:42:07Z", "closed_at": "2018-01-07T12:42:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have more than 10000 lines of cpp files.\r\nWhen outputting to an xml report, there is a problem that the file is excluded and output.\r\n\r\nIs there a solution?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/182", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/182/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/182/events", "html_url": "https://github.com/gcovr/gcovr/issues/182", "id": 275222386, "node_id": "MDU6SXNzdWUyNzUyMjIzODY=", "number": 182, "title": "AttributeError: module 'itertools' has no attribute 'izip'", "user": {"login": "ShigekiKarita", "id": 6745326, "node_id": "MDQ6VXNlcjY3NDUzMjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/6745326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShigekiKarita", "html_url": "https://github.com/ShigekiKarita", "followers_url": "https://api.github.com/users/ShigekiKarita/followers", "following_url": "https://api.github.com/users/ShigekiKarita/following{/other_user}", "gists_url": "https://api.github.com/users/ShigekiKarita/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShigekiKarita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShigekiKarita/subscriptions", "organizations_url": "https://api.github.com/users/ShigekiKarita/orgs", "repos_url": "https://api.github.com/users/ShigekiKarita/repos", "events_url": "https://api.github.com/users/ShigekiKarita/events{/privacy}", "received_events_url": "https://api.github.com/users/ShigekiKarita/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-20T02:50:20Z", "updated_at": "2017-11-20T02:55:01Z", "closed_at": "2017-11-20T02:55:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/gcovr/gcovr/blob/16c81ccbdbcc43844b991c68a6941ddfcbd9a6a0/scripts/gcovr#L413\r\n\r\nthis should be `zip` instead of `izip` in python3 http://www.diveintopython3.net/porting-code-to-python-3-with-2to3.html#itertools", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/181", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/181/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/181/events", "html_url": "https://github.com/gcovr/gcovr/issues/181", "id": 273324652, "node_id": "MDU6SXNzdWUyNzMzMjQ2NTI=", "number": 181, "title": "can't install in archlinux ", "user": {"login": "jyapujuju", "id": 6636860, "node_id": "MDQ6VXNlcjY2MzY4NjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/6636860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyapujuju", "html_url": "https://github.com/jyapujuju", "followers_url": "https://api.github.com/users/jyapujuju/followers", "following_url": "https://api.github.com/users/jyapujuju/following{/other_user}", "gists_url": "https://api.github.com/users/jyapujuju/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyapujuju/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyapujuju/subscriptions", "organizations_url": "https://api.github.com/users/jyapujuju/orgs", "repos_url": "https://api.github.com/users/jyapujuju/repos", "events_url": "https://api.github.com/users/jyapujuju/events{/privacy}", "received_events_url": "https://api.github.com/users/jyapujuju/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-13T06:37:38Z", "updated_at": "2017-11-15T03:51:59Z", "closed_at": "2017-11-15T03:51:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "python2-setuptools can't be retrieved...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/179", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/179/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/179/events", "html_url": "https://github.com/gcovr/gcovr/issues/179", "id": 267893315, "node_id": "MDU6SXNzdWUyNjc4OTMzMTU=", "number": 179, "title": "No indication of gcov version compatibility", "user": {"login": "Anketell", "id": 14371698, "node_id": "MDQ6VXNlcjE0MzcxNjk4", "avatar_url": "https://avatars2.githubusercontent.com/u/14371698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Anketell", "html_url": "https://github.com/Anketell", "followers_url": "https://api.github.com/users/Anketell/followers", "following_url": "https://api.github.com/users/Anketell/following{/other_user}", "gists_url": "https://api.github.com/users/Anketell/gists{/gist_id}", "starred_url": "https://api.github.com/users/Anketell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Anketell/subscriptions", "organizations_url": "https://api.github.com/users/Anketell/orgs", "repos_url": "https://api.github.com/users/Anketell/repos", "events_url": "https://api.github.com/users/Anketell/events{/privacy}", "received_events_url": "https://api.github.com/users/Anketell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 39711548, "node_id": "MDU6TGFiZWwzOTcxMTU0OA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Enhancement", "name": "Type: Enhancement", "color": "300DFF", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-10-24T04:25:48Z", "updated_at": "2018-03-11T01:23:28Z", "closed_at": "2018-02-11T19:57:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are currently using a recent version of gcc and experiencing issues with gcovr ver 3.3\r\n\r\nIt would be useful if you would provide compatibility and/or tested against version numbers of gcc/gcov in your release history.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/178", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/178/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/178/events", "html_url": "https://github.com/gcovr/gcovr/issues/178", "id": 260979103, "node_id": "MDU6SXNzdWUyNjA5NzkxMDM=", "number": 178, "title": "UPdate documentation about how data are filtered", "user": {"login": "1ce8erg0H", "id": 17098969, "node_id": "MDQ6VXNlcjE3MDk4OTY5", "avatar_url": "https://avatars1.githubusercontent.com/u/17098969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1ce8erg0H", "html_url": "https://github.com/1ce8erg0H", "followers_url": "https://api.github.com/users/1ce8erg0H/followers", "following_url": "https://api.github.com/users/1ce8erg0H/following{/other_user}", "gists_url": "https://api.github.com/users/1ce8erg0H/gists{/gist_id}", "starred_url": "https://api.github.com/users/1ce8erg0H/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1ce8erg0H/subscriptions", "organizations_url": "https://api.github.com/users/1ce8erg0H/orgs", "repos_url": "https://api.github.com/users/1ce8erg0H/repos", "events_url": "https://api.github.com/users/1ce8erg0H/events{/privacy}", "received_events_url": "https://api.github.com/users/1ce8erg0H/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 834075967, "node_id": "MDU6TGFiZWw4MzQwNzU5Njc=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Docs", "name": "Docs", "color": "e99695", "default": false, "description": "related to the documentation or website"}, {"id": 39711548, "node_id": "MDU6TGFiZWwzOTcxMTU0OA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Enhancement", "name": "Type: Enhancement", "color": "300DFF", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-27T13:42:31Z", "updated_at": "2018-02-11T21:01:33Z", "closed_at": "2018-02-11T21:01:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "By default if sources file are not under the root directory they will be ignored.\r\nThis is not an obvious design choice and so it should be documented better.\r\n\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/177", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/177/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/177/events", "html_url": "https://github.com/gcovr/gcovr/issues/177", "id": 259777347, "node_id": "MDU6SXNzdWUyNTk3NzczNDc=", "number": 177, "title": "Absolute path for <source> in xml file", "user": {"login": "eDeviser", "id": 22425985, "node_id": "MDQ6VXNlcjIyNDI1OTg1", "avatar_url": "https://avatars0.githubusercontent.com/u/22425985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eDeviser", "html_url": "https://github.com/eDeviser", "followers_url": "https://api.github.com/users/eDeviser/followers", "following_url": "https://api.github.com/users/eDeviser/following{/other_user}", "gists_url": "https://api.github.com/users/eDeviser/gists{/gist_id}", "starred_url": "https://api.github.com/users/eDeviser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eDeviser/subscriptions", "organizations_url": "https://api.github.com/users/eDeviser/orgs", "repos_url": "https://api.github.com/users/eDeviser/repos", "events_url": "https://api.github.com/users/eDeviser/events{/privacy}", "received_events_url": "https://api.github.com/users/eDeviser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 39711548, "node_id": "MDU6TGFiZWwzOTcxMTU0OA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Enhancement", "name": "Type: Enhancement", "color": "300DFF", "default": false, "description": null}, {"id": 39711551, "node_id": "MDU6TGFiZWwzOTcxMTU1MQ==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-22T10:51:41Z", "updated_at": "2018-01-08T16:33:44Z", "closed_at": "2018-01-08T16:33:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using gcovr with `-x` an xml file is produced which can be used with jenkins plugin cobertura. This is really awesome! :-)\r\n\r\nWell there is a little problem:\r\n\r\nUsing gcovr with `gcovr -r . -x` sets the source in the xml file to this: `<source>.<\\source>`\r\n\r\nThus cobertura cannot find the sources because it is a relative path. It would be much better if gcovr would convert the path into an absolute one by using `realpath` which should be included to the most unix distributions.\r\n\r\nFor me I fixed this problem by calling gcovr in this way: \"gcovr -r \\`pwd\\` -x\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/176", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/176/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/176/events", "html_url": "https://github.com/gcovr/gcovr/issues/176", "id": 250922040, "node_id": "MDU6SXNzdWUyNTA5MjIwNDA=", "number": 176, "title": "Is gcovr still maintained?", "user": {"login": "pbregener", "id": 6407709, "node_id": "MDQ6VXNlcjY0MDc3MDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6407709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pbregener", "html_url": "https://github.com/pbregener", "followers_url": "https://api.github.com/users/pbregener/followers", "following_url": "https://api.github.com/users/pbregener/following{/other_user}", "gists_url": "https://api.github.com/users/pbregener/gists{/gist_id}", "starred_url": "https://api.github.com/users/pbregener/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pbregener/subscriptions", "organizations_url": "https://api.github.com/users/pbregener/orgs", "repos_url": "https://api.github.com/users/pbregener/repos", "events_url": "https://api.github.com/users/pbregener/events{/privacy}", "received_events_url": "https://api.github.com/users/pbregener/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 26, "created_at": "2017-08-17T12:08:39Z", "updated_at": "2018-01-06T20:46:01Z", "closed_at": "2018-01-06T20:46:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @whart222!\r\n\r\nThere are quite a few open issues and open PRs for the `gcovr` project, and people are opening new tickets and are trying to contribute code (and fix bugs) on a regular basis.  \r\nHowever, the last commit dates back almost exactly one year ago.\r\nShould we consider `gcovr` unmaintained now? Are you looking for one or several new maintainers? Should someone fork it?\r\n\r\nSeems like there are many people who use and like `gcovr` but the lack of progress is somewhat disappointing right now.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/174", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/174/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/174/events", "html_url": "https://github.com/gcovr/gcovr/issues/174", "id": 249341482, "node_id": "MDU6SXNzdWUyNDkzNDE0ODI=", "number": 174, "title": "Filters broken in Python2.6.6", "user": {"login": "verbitan", "id": 1447276, "node_id": "MDQ6VXNlcjE0NDcyNzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1447276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/verbitan", "html_url": "https://github.com/verbitan", "followers_url": "https://api.github.com/users/verbitan/followers", "following_url": "https://api.github.com/users/verbitan/following{/other_user}", "gists_url": "https://api.github.com/users/verbitan/gists{/gist_id}", "starred_url": "https://api.github.com/users/verbitan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/verbitan/subscriptions", "organizations_url": "https://api.github.com/users/verbitan/orgs", "repos_url": "https://api.github.com/users/verbitan/repos", "events_url": "https://api.github.com/users/verbitan/events{/privacy}", "received_events_url": "https://api.github.com/users/verbitan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 39711546, "node_id": "MDU6TGFiZWwzOTcxMTU0Ng==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Bug", "name": "Type: Bug", "color": "FF2408", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-08-10T13:11:56Z", "updated_at": "2018-01-30T13:00:26Z", "closed_at": "2018-01-30T13:00:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I run the following command in gcovr3.3 without issue, however if I run the same command on the latest version I get no output.\r\n\r\n> gcovr -r /path/to/coverage --branches --sort-percentage --gcov-exclude=\".*Pattern.*\" --html --html-details -o Coverage.html\r\n\r\nI've traced this to commit 90589892b9f32d811bedca3008d1e8960389faf2. I added the following debugging statement which showed the error.\r\n\r\n```\r\n    sys.stdout.write(re.compile(options.gcov_exclude[i]).pattern)\r\n    sys.stdout.write(re.compile(os.path.realpath(options.gcov_exclude[i])).pattern)\r\n```\r\n\r\n> /path/to/file/.*Pattern.*\r\n> Traceback (most recent call last):\r\n>   File \"/usr/local/bin/gcovr\", line 2286, in <module>\r\n>     sys.stdout.write(re.compile(os.path.realpath(options.gcov_exclude[i])).pattern)\r\n>   File \"/usr/lib64/python2.6/posixpath.py\", line 357, in realpath\r\n>     if isabs(filename):\r\n>   File \"/usr/lib64/python2.6/posixpath.py\", line 52, in isabs\r\n>     return s.startswith('/')\r\n> AttributeError: startswith\r\n\r\nI haven't yet been able to try different versions of Python, although I couldn't see a minimum version specified. The closest I found was doc/guide.txt saying that gcovr has been tested with 2.7, 3.4 and 3.5.\r\n\r\nWould it be possible to either fix the above issue, or check that the minimum supported version of Python is being used when executing gcovr?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/172", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/172/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/172/events", "html_url": "https://github.com/gcovr/gcovr/issues/172", "id": 244655592, "node_id": "MDU6SXNzdWUyNDQ2NTU1OTI=", "number": 172, "title": "Cannot analyse class under test in some cases", "user": {"login": "BelteZol", "id": 30345150, "node_id": "MDQ6VXNlcjMwMzQ1MTUw", "avatar_url": "https://avatars0.githubusercontent.com/u/30345150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BelteZol", "html_url": "https://github.com/BelteZol", "followers_url": "https://api.github.com/users/BelteZol/followers", "following_url": "https://api.github.com/users/BelteZol/following{/other_user}", "gists_url": "https://api.github.com/users/BelteZol/gists{/gist_id}", "starred_url": "https://api.github.com/users/BelteZol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BelteZol/subscriptions", "organizations_url": "https://api.github.com/users/BelteZol/orgs", "repos_url": "https://api.github.com/users/BelteZol/repos", "events_url": "https://api.github.com/users/BelteZol/events{/privacy}", "received_events_url": "https://api.github.com/users/BelteZol/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 796841523, "node_id": "MDU6TGFiZWw3OTY4NDE1MjM=", "url": "https://api.github.com/repos/gcovr/gcovr/labels/more%20info%20needed", "name": "more info needed", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-21T12:34:49Z", "updated_at": "2018-01-17T17:48:28Z", "closed_at": "2018-01-17T17:48:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "My tests are written with gtest framework and used CMake.\r\n\r\n    ClassUnderTest.h:\r\n    class ClassUnderTest\r\n    {\r\n    public:\r\n        uint8_t Start(int in_a, int in_b);\r\n\r\n        static uint8_t MethodToTest(int a, const uint8_t *b, uint32_t c);\r\n    }\r\n\r\nI have 2 test cases. One uses \"TEST\"s the other uses \"TEST_F\"s (a.k.a Test fixtures).\r\n\r\nTest without Fixture:\r\n \r\n     TestCase1.cpp:\r\n     TEST (Test_Start, MethodToTest_test)\r\n     {\r\n         ClassUnderTest       TestObj;\r\n\r\n         EXPECT_EQ(TestObj.Start(1,2),0xFF));\r\n     }\r\n\r\nTest with Fixture:\r\n \r\n     TestCase2.cpp:\r\n     class ClassUnderTest_Test : public ::testing::Test, public ClassUnderTest\r\n     {\r\n     public:\r\n         virtual void SetUp();\r\n         virtual void TearDown();\r\n\r\n         bool TestCase2();\r\n     };\r\n\r\n    bool ClassUnderTest_Test :: TestCase2()\r\n    {\r\n        uint8_t retval;\r\n        retval = ClassUnderTest::MethodToTest(1,2,3);\r\n\r\n        return retval;\r\n    }\r\n\r\n    TEST_F( ClassUnderTest_Test , MethodToTest_test )\r\n    {\r\n        ASSERT_EQ( TestCase2(), true );\r\n    }\r\n\r\nIn both cases ClassUnderTest.cpp.gcno is generated and inside the data seems valid, but then when I call gcovr in a following way:\r\npython C:\\Python27\\Scripts\\gcovr --html --html-details -o output-file-name.html\r\n\r\nOnly the coverage of TestCase1 found in the html report, TestCase2 coverage is not visible at ClassUnderTest.cpp.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/169", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/169/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/169/events", "html_url": "https://github.com/gcovr/gcovr/issues/169", "id": 228964833, "node_id": "MDU6SXNzdWUyMjg5NjQ4MzM=", "number": 169, "title": "An empty report is created if absolute paths are used in gcc command line", "user": {"login": "not-a-user", "id": 1785927, "node_id": "MDQ6VXNlcjE3ODU5Mjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1785927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/not-a-user", "html_url": "https://github.com/not-a-user", "followers_url": "https://api.github.com/users/not-a-user/followers", "following_url": "https://api.github.com/users/not-a-user/following{/other_user}", "gists_url": "https://api.github.com/users/not-a-user/gists{/gist_id}", "starred_url": "https://api.github.com/users/not-a-user/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/not-a-user/subscriptions", "organizations_url": "https://api.github.com/users/not-a-user/orgs", "repos_url": "https://api.github.com/users/not-a-user/repos", "events_url": "https://api.github.com/users/not-a-user/events{/privacy}", "received_events_url": "https://api.github.com/users/not-a-user/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 39711550, "node_id": "MDU6TGFiZWwzOTcxMTU1MA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Question", "name": "Type: Question", "color": "E80C59", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-16T09:13:55Z", "updated_at": "2018-01-09T22:51:20Z", "closed_at": "2018-01-09T22:51:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "To reproduce (Ubuntu 16.04):\r\n\r\n    SRC=/tmp/src\r\n    mkdir -p /tmp/build &&\r\n    cd /tmp/build &&\r\n    wget https://raw.githubusercontent.com/gcovr/gcovr/master/scripts/gcovr -O ./gcovr &&\r\n    chmod 755 ./gcovr &&\r\n    mkdir -p $SRC &&\r\n    echo \"int main(){return 0;}\" > $SRC/prog.c &&\r\n    gcc --coverage -o prog $SRC/prog.c &&\r\n    ./prog &&\r\n    ./gcovr -v -r .\r\n\r\nThis will result in an empty report.\r\n\r\nHowever if I set `SRC=../src` (which should be equivalent in this example), I get 100% coverage for `../src/prog.c`, which is what I expect.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/167", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/167/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/167/events", "html_url": "https://github.com/gcovr/gcovr/issues/167", "id": 221999453, "node_id": "MDU6SXNzdWUyMjE5OTk0NTM=", "number": 167, "title": "Configuration files", "user": {"login": "psukys", "id": 1302529, "node_id": "MDQ6VXNlcjEzMDI1Mjk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1302529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/psukys", "html_url": "https://github.com/psukys", "followers_url": "https://api.github.com/users/psukys/followers", "following_url": "https://api.github.com/users/psukys/following{/other_user}", "gists_url": "https://api.github.com/users/psukys/gists{/gist_id}", "starred_url": "https://api.github.com/users/psukys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/psukys/subscriptions", "organizations_url": "https://api.github.com/users/psukys/orgs", "repos_url": "https://api.github.com/users/psukys/repos", "events_url": "https://api.github.com/users/psukys/events{/privacy}", "received_events_url": "https://api.github.com/users/psukys/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-16T09:00:22Z", "updated_at": "2018-10-11T09:14:47Z", "closed_at": "2017-04-17T13:00:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI am new both to gcov/lcov and gcovr and wonder whether gcovr uses any kind of configuration file (as I failed to quick-search through documentation). If yes, where can I find more information? Else, is there some kind of approach for using configuration files? In particular, I am looking to exclude specific directories via conf file", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/164", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/164/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/164/events", "html_url": "https://github.com/gcovr/gcovr/issues/164", "id": 207166589, "node_id": "MDU6SXNzdWUyMDcxNjY1ODk=", "number": 164, "title": "Add support to the latest Cobertura format", "user": {"login": "lmussier", "id": 11352254, "node_id": "MDQ6VXNlcjExMzUyMjU0", "avatar_url": "https://avatars0.githubusercontent.com/u/11352254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lmussier", "html_url": "https://github.com/lmussier", "followers_url": "https://api.github.com/users/lmussier/followers", "following_url": "https://api.github.com/users/lmussier/following{/other_user}", "gists_url": "https://api.github.com/users/lmussier/gists{/gist_id}", "starred_url": "https://api.github.com/users/lmussier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lmussier/subscriptions", "organizations_url": "https://api.github.com/users/lmussier/orgs", "repos_url": "https://api.github.com/users/lmussier/repos", "events_url": "https://api.github.com/users/lmussier/events{/privacy}", "received_events_url": "https://api.github.com/users/lmussier/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 39711548, "node_id": "MDU6TGFiZWwzOTcxMTU0OA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Enhancement", "name": "Type: Enhancement", "color": "300DFF", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-02-13T09:49:29Z", "updated_at": "2018-01-08T18:28:10Z", "closed_at": "2018-01-07T22:15:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nCould you add the support of the latest cobertura format [coverage-04.dtd](https://github.com/cobertura/web/blob/master/htdocs/xml/coverage-04.dtd)  for xml output?\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/162", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/162/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/162/events", "html_url": "https://github.com/gcovr/gcovr/issues/162", "id": 195503068, "node_id": "MDU6SXNzdWUxOTU1MDMwNjg=", "number": 162, "title": "Add option to exclude coverage reported for destruction of global variables", "user": {"login": "mambu", "id": 210711, "node_id": "MDQ6VXNlcjIxMDcxMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/210711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mambu", "html_url": "https://github.com/mambu", "followers_url": "https://api.github.com/users/mambu/followers", "following_url": "https://api.github.com/users/mambu/following{/other_user}", "gists_url": "https://api.github.com/users/mambu/gists{/gist_id}", "starred_url": "https://api.github.com/users/mambu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mambu/subscriptions", "organizations_url": "https://api.github.com/users/mambu/orgs", "repos_url": "https://api.github.com/users/mambu/repos", "events_url": "https://api.github.com/users/mambu/events{/privacy}", "received_events_url": "https://api.github.com/users/mambu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 39711550, "node_id": "MDU6TGFiZWwzOTcxMTU1MA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Question", "name": "Type: Question", "color": "E80C59", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-14T11:10:04Z", "updated_at": "2018-01-22T13:12:31Z", "closed_at": "2018-01-22T13:12:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI basically have the same issue reported here for LCOV: http://stackoverflow.com/questions/20866420/lcov-branches-at-the-end-of-a-function\r\nI see multiple branches reported for the last line of the last function in every source file. This is being added to the total branch report for the file/class and therefore is causing a wrong total value.\r\nThe coverage report of such a function is usually meaningless and therefore it would be good if we could exclude it from the gcovr report.\r\n\r\n```\r\nfunction _ZN24CFhUsBook_InstrumentData5ClearEv called 0 returned 0% blocks executed 0%\r\n    #####:   37:void CFhUsBook_InstrumentData::Clear()\r\n    $$$$$:   37-block  0\r\n        -:   38:{\r\n        -:   39:    // This will clear the TopRows filters too\r\n    #####:   40:    summaryBook_.Clear();\r\n    $$$$$:   40-block  0\r\ncall    0 never executed\r\n        -:   41:    // Clear time\r\n    #####:   42:    lastUpdateTs_.Initialise();\r\ncall    0 never executed\r\nfunction _GLOBAL__sub_I_FhUsBookInstrumentData.cc called 1 returned 100% blocks executed 100%\r\nfunction _Z41__static_initialization_and_destruction_0ii called 1 returned 100% blocks executed 100%\r\n        4:   43:}\r\n        1:   43-block  0\r\n        1:   43-block  1\r\ncall    0 returned 100%\r\n        1:   43-block  2\r\n        1:   43-block  3\r\nbranch  1 taken 100% (fallthrough)\r\nbranch  2 taken 0%\r\n        1:   43-block  4\r\nbranch  3 taken 100% (fallthrough)\r\nbranch  4 taken 0%\r\n```\r\n\r\nThanks,\r\nMarco", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/161", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/161/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/161/events", "html_url": "https://github.com/gcovr/gcovr/issues/161", "id": 195500218, "node_id": "MDU6SXNzdWUxOTU1MDAyMTg=", "number": 161, "title": "Add option to filter branches automatically created for exceptions in C++", "user": {"login": "mambu", "id": 210711, "node_id": "MDQ6VXNlcjIxMDcxMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/210711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mambu", "html_url": "https://github.com/mambu", "followers_url": "https://api.github.com/users/mambu/followers", "following_url": "https://api.github.com/users/mambu/following{/other_user}", "gists_url": "https://api.github.com/users/mambu/gists{/gist_id}", "starred_url": "https://api.github.com/users/mambu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mambu/subscriptions", "organizations_url": "https://api.github.com/users/mambu/orgs", "repos_url": "https://api.github.com/users/mambu/repos", "events_url": "https://api.github.com/users/mambu/events{/privacy}", "received_events_url": "https://api.github.com/users/mambu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 39711548, "node_id": "MDU6TGFiZWwzOTcxMTU0OA==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/Type:%20Enhancement", "name": "Type: Enhancement", "color": "300DFF", "default": false, "description": null}, {"id": 39711551, "node_id": "MDU6TGFiZWwzOTcxMTU1MQ==", "url": "https://api.github.com/repos/gcovr/gcovr/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-14T10:56:57Z", "updated_at": "2017-12-28T12:33:14Z", "closed_at": "2017-12-28T12:33:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nThe branch coverage reported for our code is not usable because it contains a lot of wrong/unwanted results from automatic branches added to handler exceptions in C++. However we cannot use gcc with -fno-exceptions in our code and tests, since we sometimes use exceptions (so with that command line options our code does not compile).\r\nSee [http://stackoverflow.com/questions/29368482/gcov-reports-branches-for-plain-function-calls](url)\r\n\r\nIt would be beneficial if we had a gcovr option to skip processing those branches.\r\nIt seems they always have the same pattern:\r\n\r\n1. a call line\r\n2. a branch taken 100% (fallthrough)\r\n3. a branch taken 0% (throw)\r\n\r\nso it should be possible to identify those cases and optionally skip them.\r\n\r\nThis is the output of `gcov -ab`\r\n\r\n> function _ZN19CFhUsBook_ConflatorC2Emm called 27 returned 100% blocks executed 58%\r\n       27:    6:CFhUsBook_Conflator::CFhUsBook_Conflator(std::size_t period, std::size_t mapSize) :\r\n       27:    6-block  0\r\n        -:    7:    period_(period),\r\n        -:    8:    lastUpdateTsDiff_(0,0,0,0,static_cast<int>(period)),\r\n       27:    9:    fimDataMap_(mapSize)\r\n       27:    9-block  0\r\ncall    0 returned 100%\r\ncall    1 returned 100%\r\ncall    2 returned 100%\r\ncall    3 returned 100%\r\nbranch  4 taken 100% (fallthrough)\r\nbranch  5 taken 0% (throw)\r\n       27:    9-block  1\r\ncall    6 returned 100%\r\n    %%%%%:    9-block  2\r\n    %%%%%:    9-block  3\r\n    %%%%%:    9-block  4\r\ncall    7 never executed\r\n    %%%%%:    9-block  5\r\ncall    8 never executed\r\n        -:   10:{\r\n       27:   11:}\r\n        -:   12:\r\n\r\n\r\nAnd this is the source code for the constructor above at line 6:\r\n\r\n    CFhUsBook_Conflator::CFhUsBook_Conflator(std::size_t period, std::size_t mapSize) :\r\n        period_(period),\r\n        lastUpdateTsDiff_(0,0,0,0,static_cast<int>(period)),\r\n        fimDataMap_(mapSize)\r\n    {\r\n    }\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gcovr/gcovr/issues/155", "repository_url": "https://api.github.com/repos/gcovr/gcovr", "labels_url": "https://api.github.com/repos/gcovr/gcovr/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/gcovr/gcovr/issues/155/comments", "events_url": "https://api.github.com/repos/gcovr/gcovr/issues/155/events", "html_url": "https://github.com/gcovr/gcovr/issues/155", "id": 188489644, "node_id": "MDU6SXNzdWUxODg0ODk2NDQ=", "number": 155, "title": "how to report coverage for files that were not executed", "user": {"login": "ffengcs", "id": 7343471, "node_id": "MDQ6VXNlcjczNDM0NzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/7343471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffengcs", "html_url": "https://github.com/ffengcs", "followers_url": "https://api.github.com/users/ffengcs/followers", "following_url": "https://api.github.com/users/ffengcs/following{/other_user}", "gists_url": "https://api.github.com/users/ffengcs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffengcs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffengcs/subscriptions", "organizations_url": "https://api.github.com/users/ffengcs/orgs", "repos_url": "https://api.github.com/users/ffengcs/repos", "events_url": "https://api.github.com/users/ffengcs/events{/privacy}", "received_events_url": "https://api.github.com/users/ffengcs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-10T11:56:53Z", "updated_at": "2018-02-11T20:03:25Z", "closed_at": "2018-02-11T20:03:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "lcov can do like this :\r\n![image](https://cloud.githubusercontent.com/assets/7343471/20175805/987d0f1c-a77f-11e6-934f-8d360d57ff25.png)\r\n\r\nwhat should gcovr do?\r\n", "performed_via_github_app": null, "score": 1.0}]}