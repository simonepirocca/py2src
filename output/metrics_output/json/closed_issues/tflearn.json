{"total_count": 351, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/tflearn/tflearn/issues/1127", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/1127/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/1127/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/1127/events", "html_url": "https://github.com/tflearn/tflearn/issues/1127", "id": 433853668, "node_id": "MDU6SXNzdWU0MzM4NTM2Njg=", "number": 1127, "title": "what is weighted_r2 used for?", "user": {"login": "crazydogen", "id": 23455010, "node_id": "MDQ6VXNlcjIzNDU1MDEw", "avatar_url": "https://avatars2.githubusercontent.com/u/23455010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crazydogen", "html_url": "https://github.com/crazydogen", "followers_url": "https://api.github.com/users/crazydogen/followers", "following_url": "https://api.github.com/users/crazydogen/following{/other_user}", "gists_url": "https://api.github.com/users/crazydogen/gists{/gist_id}", "starred_url": "https://api.github.com/users/crazydogen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crazydogen/subscriptions", "organizations_url": "https://api.github.com/users/crazydogen/orgs", "repos_url": "https://api.github.com/users/crazydogen/repos", "events_url": "https://api.github.com/users/crazydogen/events{/privacy}", "received_events_url": "https://api.github.com/users/crazydogen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-16T15:44:37Z", "updated_at": "2019-05-16T13:33:56Z", "closed_at": "2019-05-16T13:33:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have noticed that there is extra weighted weighted_r2 func  in Metrics class. And I wonder when and how to use this metric. \r\nSource codes are as follows.\r\n```\r\ndef weighted_r2_op(predictions, targets, inputs):\r\n    \"\"\" weighted_r2_op.\r\n    An op that calculates the standard error.\r\n    Examples:\r\n        ```python\r\n        input_data = placeholder(shape=[None, 784])\r\n        y_pred = my_network(input_data) # Apply some ops\r\n        y_true = placeholder(shape=[None, 10]) # Labels\r\n        stderr_op = weighted_r2_op(y_pred, y_true, input_data)\r\n        # Calculate standard error by feeding data X and labels Y\r\n        std_error = sess.run(stderr_op, feed_dict={input_data: X, y_true: Y})\r\n        ```\r\n    Arguments:\r\n        predictions: `Tensor`.\r\n        targets: `Tensor`.\r\n        inputs: `Tensor`.\r\n    Returns:\r\n        `Float`. The standard error.\r\n    \"\"\"\r\n    with tf.name_scope('WeightedStandardError'):\r\n        if hasattr(inputs, '__len__'):\r\n            inputs = tf.add_n(inputs)\r\n        if inputs.get_shape().as_list() != targets.get_shape().as_list():\r\n            raise Exception(\"Weighted R2 metric requires Inputs and Targets to \"\r\n                            \"have same shape.\")\r\n        a = tf.reduce_sum(tf.square(predictions - inputs))\r\n        b = tf.reduce_sum(tf.square(targets - inputs))\r\n        return tf.divide(a, b)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/1120", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/1120/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/1120/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/1120/events", "html_url": "https://github.com/tflearn/tflearn/issues/1120", "id": 416297794, "node_id": "MDU6SXNzdWU0MTYyOTc3OTQ=", "number": 1120, "title": "AttributeError: module 'pandas' has no attribute 'compat'.", "user": {"login": "g7dhaliwal", "id": 5044382, "node_id": "MDQ6VXNlcjUwNDQzODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5044382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/g7dhaliwal", "html_url": "https://github.com/g7dhaliwal", "followers_url": "https://api.github.com/users/g7dhaliwal/followers", "following_url": "https://api.github.com/users/g7dhaliwal/following{/other_user}", "gists_url": "https://api.github.com/users/g7dhaliwal/gists{/gist_id}", "starred_url": "https://api.github.com/users/g7dhaliwal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/g7dhaliwal/subscriptions", "organizations_url": "https://api.github.com/users/g7dhaliwal/orgs", "repos_url": "https://api.github.com/users/g7dhaliwal/repos", "events_url": "https://api.github.com/users/g7dhaliwal/events{/privacy}", "received_events_url": "https://api.github.com/users/g7dhaliwal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-01T22:05:47Z", "updated_at": "2019-03-01T22:07:26Z", "closed_at": "2019-03-01T22:07:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\n  I am trying to use ScipyOptimizerInterface() in the tensorflow, but it has started to get me weird error \r\n\r\nAttributeError: module 'pandas' has no attribute 'compat'.\r\n\r\nBy going through the discussion threads at Tensorflow github page, I have upgarded \"dask\", downgraded pandas, reinstalled tensorflow and scipy packages. Unfortunately, it is still giving me same AttributeError. Does anyone having similar issues and can help me to resolve it? I can use tensorflow normally for other minimizations algorithms (tested ADAMS) but for scipy's BFGS implementation, I am getting this attribute error.\r\n\r\nI am running code on Linux Centos system with python 3.6 and tensorflow 1.12.0. Version for pandas is 0.24.0. I tried to downgrade the pandas to 0.19.2 but it broke other parts of my code which use f2py library.\r\n\r\nAny thoughts on how to fix this issue? \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/1117", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/1117/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/1117/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/1117/events", "html_url": "https://github.com/tflearn/tflearn/issues/1117", "id": 409408270, "node_id": "MDU6SXNzdWU0MDk0MDgyNzA=", "number": 1117, "title": "ValueError: Incompatible shapes with conv_2d_transpose", "user": {"login": "SinclairHudson", "id": 30478652, "node_id": "MDQ6VXNlcjMwNDc4NjUy", "avatar_url": "https://avatars3.githubusercontent.com/u/30478652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SinclairHudson", "html_url": "https://github.com/SinclairHudson", "followers_url": "https://api.github.com/users/SinclairHudson/followers", "following_url": "https://api.github.com/users/SinclairHudson/following{/other_user}", "gists_url": "https://api.github.com/users/SinclairHudson/gists{/gist_id}", "starred_url": "https://api.github.com/users/SinclairHudson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SinclairHudson/subscriptions", "organizations_url": "https://api.github.com/users/SinclairHudson/orgs", "repos_url": "https://api.github.com/users/SinclairHudson/repos", "events_url": "https://api.github.com/users/SinclairHudson/events{/privacy}", "received_events_url": "https://api.github.com/users/SinclairHudson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-12T17:12:41Z", "updated_at": "2019-02-13T16:21:38Z", "closed_at": "2019-02-13T16:21:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been getting the following error when running the following code. I'm not too sure how the conv_2d_transpose layer works, so I'll do my best to explain what I want it to do. I'm making a GAN that generates 250x250 rgb images. So, the output for the generator should be (1x250x250x3), for 1 image that is 250px by 250px in three colour channels. I am generating them from random noise in the form of a [batch-size, 10, 10 3] array, which could be thought of as 10x10 rgb images. But I can't really get this to work. Let me know if you notice anything, or if I should approach the problem differently. Also, markdown really messes with my comments and turns them into headers... Thanks in advance!\r\n`\r\nfrom __future__ import division, print_function, absolute_import\r\n\r\nimport numpy as np\r\nimport tensorflow as tf\r\nimport tflearn\r\nimport data\r\n\r\nprint(\"loading data...\")\r\nX = data.getImages(50, 250, 250)\r\n\r\nprint(X.shape)\r\ntotal_samples = len(X)\r\n\r\n\r\n# Generator\r\ndef generator(x, reuse=False):\r\n    with tf.variable_scope('Generator', reuse=reuse):\r\n        # first layer is a deconvolutional layer with 4 filters, each of 5*5, outputting a larger tensor\r\n        # that is of shape [batch, 250, 250, 4]\r\n        x = tflearn.conv_2d_transpose(x, 4, [5, 5], [250, 250], activation='leaky_relu')\r\n        # final layer pulls out a vector that can be reshaped to form the image.\r\n        x = tflearn.fully_connected(x, 250*250*3, activation='leaky_relu')\r\n        x = tflearn.reshape(x, [1, 250, 250, 3])  # reshape to look like an image\r\n        return x\r\n\r\n\r\n# Discriminator\r\ndef discriminator(x, reuse=False):\r\n    with tf.variable_scope('Discriminator', reuse=reuse):\r\n        x = tflearn.conv_2d(x, 2, [15, 15], activation='leaky_relu')\r\n        x = tflearn.fully_connected(x, 1, activation='leaky_relu')  # pollock or fake, yes or no?\r\n        return x\r\n\r\n# Build Networks\r\ngen_input = tflearn.input_data(shape=[None, 10, 10, 3], name='input_noise') #feeding generator random 10 * 10 rgb images\r\ndisc_input = tflearn.input_data(shape=[None, 250, 250, 3], name='disc_input') #feeding discriminator with full images\r\n\r\ngen_sample = generator(gen_input) #these are the samples that are generated.\r\ndisc_real = discriminator(disc_input) #this is a true pollock for the discriminator\r\ndisc_fake = discriminator(gen_sample, reuse=True) #this is a fake for the discriminator\r\n\r\n# Define Loss functions. Notice how the generator's loss is really just the negative of the discriminator's ability to\r\n# determine fakes.\r\ndisc_loss = -tf.reduce_mean(tf.log(disc_real) + tf.log(1. - disc_fake))\r\ngen_loss = -tf.reduce_mean(tf.log(disc_fake))\r\n\r\n# Build Training Ops for both Generator and Discriminator.\r\n# Each network optimization should only update its own variable, thus we need\r\n# to retrieve each network variables (with get_layer_variables_by_scope) and set\r\n# 'placeholder=None' because we do not need to feed any target.\r\ngen_vars = tflearn.get_layer_variables_by_scope('Generator')\r\ngen_model = tflearn.regression(gen_sample, placeholder=None, optimizer='adam',\r\n                               loss=gen_loss, trainable_vars=gen_vars,\r\n                               batch_size=64, name='target_gen', op_name='GEN')\r\ndisc_vars = tflearn.get_layer_variables_by_scope('Discriminator')\r\ndisc_model = tflearn.regression(disc_real, placeholder=None, optimizer='adam',\r\n                                loss=disc_loss, trainable_vars=disc_vars,\r\n                                batch_size=64, name='target_disc', op_name='DISC')\r\n# Define GAN model, that output the generated images.\r\ngan = tflearn.DNN(gen_model)\r\n\r\n# Generate noise to feed to the generator\r\nz = np.random.uniform(0, 255, size=[total_samples, 10, 10, 3])\r\n# Start training, feed both noise and real images.\r\ngan.fit(X_inputs={gen_input: z, disc_input: X},\r\n        Y_targets=None,\r\n        n_epoch=1000)\r\n`\r\n# Running this leads to the following error:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/sinclair/.local/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 558, in set_shape\r\n    unknown_shape)\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Dimension 1 in both shapes must be equal, but are 250 and 10. Shapes are [?,250,250,3] and [?,10,10,3].\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/sinclair/.local/lib/python3.6/site-packages/tensorflow/python/ops/gradients_impl.py\", line 841, in _GradientsHelper\r\n    in_grad.set_shape(t_in.get_shape())\r\n  File \"/home/sinclair/.local/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 561, in set_shape\r\n    raise ValueError(str(e))\r\nValueError: Dimension 1 in both shapes must be equal, but are 250 and 10. Shapes are [?,250,250,3] and [?,10,10,3].\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/sinclair/Desktop/Pollocks/Pollock.py\", line 60, in <module>\r\n    gan = tflearn.DNN(gen_model)\r\n  File \"/home/sinclair/.local/lib/python3.6/site-packages/tflearn/models/dnn.py\", line 65, in __init__\r\n    best_val_accuracy=best_val_accuracy)\r\n  File \"/home/sinclair/.local/lib/python3.6/site-packages/tflearn/helpers/trainer.py\", line 131, in __init__\r\n    clip_gradients)\r\n  File \"/home/sinclair/.local/lib/python3.6/site-packages/tflearn/helpers/trainer.py\", line 697, in initialize_training_ops\r\n    self.grad = tf.gradients(total_loss, self.train_vars)\r\n  File \"/home/sinclair/.local/lib/python3.6/site-packages/tensorflow/python/ops/gradients_impl.py\", line 630, in gradients\r\n    gate_gradients, aggregation_method, stop_gradients)\r\n  File \"/home/sinclair/.local/lib/python3.6/site-packages/tensorflow/python/ops/gradients_impl.py\", line 848, in _GradientsHelper\r\n    (op.name, i, t_in.shape, in_grad.shape))\r\nValueError: Incompatible shapes between op input and calculated input gradient.  Forward operation: Generator/Conv2DTranspose/conv2d_transpose.  Input index: 2. Original input shape: (?, 10, 10, 3).  Calculated input gradient shape: (?, 250, 250, 3)`\r\n> ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/1114", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/1114/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/1114/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/1114/events", "html_url": "https://github.com/tflearn/tflearn/issues/1114", "id": 402491161, "node_id": "MDU6SXNzdWU0MDI0OTExNjE=", "number": 1114, "title": "Curses at Windows WORKS if I remove... (+)", "user": {"login": "KMiNT21", "id": 30261279, "node_id": "MDQ6VXNlcjMwMjYxMjc5", "avatar_url": "https://avatars1.githubusercontent.com/u/30261279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KMiNT21", "html_url": "https://github.com/KMiNT21", "followers_url": "https://api.github.com/users/KMiNT21/followers", "following_url": "https://api.github.com/users/KMiNT21/following{/other_user}", "gists_url": "https://api.github.com/users/KMiNT21/gists{/gist_id}", "starred_url": "https://api.github.com/users/KMiNT21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KMiNT21/subscriptions", "organizations_url": "https://api.github.com/users/KMiNT21/orgs", "repos_url": "https://api.github.com/users/KMiNT21/repos", "events_url": "https://api.github.com/users/KMiNT21/events{/privacy}", "received_events_url": "https://api.github.com/users/KMiNT21/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-24T00:34:49Z", "updated_at": "2019-02-25T00:05:25Z", "closed_at": "2019-02-25T00:05:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Windows, Python 3.7, tflearn-0.3.2, windows_curses-1.0\r\n\r\n\r\n\r\nIf I removed in callbacks.py:\r\n\r\n```python\r\nsys.stdout.write(curses.tigetstr('cvvis').decode())\r\n```\r\n\r\nwhich cause exception AttributeError: 'NoneType' object has no attribute 'decode'\r\n\r\nflag CURSES_SUPPORTED left to be True, so it works perfect in window console - no new lines while printing progress.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/1109", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/1109/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/1109/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/1109/events", "html_url": "https://github.com/tflearn/tflearn/issues/1109", "id": 393922632, "node_id": "MDU6SXNzdWUzOTM5MjI2MzI=", "number": 1109, "title": "Real time preprocessing of images", "user": {"login": "brijeshiitg", "id": 21377671, "node_id": "MDQ6VXNlcjIxMzc3Njcx", "avatar_url": "https://avatars2.githubusercontent.com/u/21377671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brijeshiitg", "html_url": "https://github.com/brijeshiitg", "followers_url": "https://api.github.com/users/brijeshiitg/followers", "following_url": "https://api.github.com/users/brijeshiitg/following{/other_user}", "gists_url": "https://api.github.com/users/brijeshiitg/gists{/gist_id}", "starred_url": "https://api.github.com/users/brijeshiitg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brijeshiitg/subscriptions", "organizations_url": "https://api.github.com/users/brijeshiitg/orgs", "repos_url": "https://api.github.com/users/brijeshiitg/repos", "events_url": "https://api.github.com/users/brijeshiitg/events{/privacy}", "received_events_url": "https://api.github.com/users/brijeshiitg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-24T19:16:29Z", "updated_at": "2020-03-20T04:44:45Z", "closed_at": "2020-03-20T04:44:45Z", "author_association": "NONE", "active_lock_reason": null, "body": ".", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/1105", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/1105/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/1105/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/1105/events", "html_url": "https://github.com/tflearn/tflearn/issues/1105", "id": 391432329, "node_id": "MDU6SXNzdWUzOTE0MzIzMjk=", "number": 1105, "title": "how to get the output of any specific layer", "user": {"login": "WuChannn", "id": 25492462, "node_id": "MDQ6VXNlcjI1NDkyNDYy", "avatar_url": "https://avatars3.githubusercontent.com/u/25492462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WuChannn", "html_url": "https://github.com/WuChannn", "followers_url": "https://api.github.com/users/WuChannn/followers", "following_url": "https://api.github.com/users/WuChannn/following{/other_user}", "gists_url": "https://api.github.com/users/WuChannn/gists{/gist_id}", "starred_url": "https://api.github.com/users/WuChannn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WuChannn/subscriptions", "organizations_url": "https://api.github.com/users/WuChannn/orgs", "repos_url": "https://api.github.com/users/WuChannn/repos", "events_url": "https://api.github.com/users/WuChannn/events{/privacy}", "received_events_url": "https://api.github.com/users/WuChannn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-16T03:42:47Z", "updated_at": "2019-01-07T14:55:03Z", "closed_at": "2019-01-03T09:19:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to get the output of a fully-connected layer, but i can't find any api I can use. can anyone help me? thank u", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/1092", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/1092/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/1092/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/1092/events", "html_url": "https://github.com/tflearn/tflearn/issues/1092", "id": 369641095, "node_id": "MDU6SXNzdWUzNjk2NDEwOTU=", "number": 1092, "title": "One of the activation function parameters, 'selu' be generates an error.", "user": {"login": "LEE-SEON-WOO", "id": 12380660, "node_id": "MDQ6VXNlcjEyMzgwNjYw", "avatar_url": "https://avatars2.githubusercontent.com/u/12380660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LEE-SEON-WOO", "html_url": "https://github.com/LEE-SEON-WOO", "followers_url": "https://api.github.com/users/LEE-SEON-WOO/followers", "following_url": "https://api.github.com/users/LEE-SEON-WOO/following{/other_user}", "gists_url": "https://api.github.com/users/LEE-SEON-WOO/gists{/gist_id}", "starred_url": "https://api.github.com/users/LEE-SEON-WOO/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LEE-SEON-WOO/subscriptions", "organizations_url": "https://api.github.com/users/LEE-SEON-WOO/orgs", "repos_url": "https://api.github.com/users/LEE-SEON-WOO/repos", "events_url": "https://api.github.com/users/LEE-SEON-WOO/events{/privacy}", "received_events_url": "https://api.github.com/users/LEE-SEON-WOO/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-12T17:25:13Z", "updated_at": "2018-10-17T03:49:37Z", "closed_at": "2018-10-17T03:49:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am currently using version 1.9 of tensorflow, and version tflearn is using version 0.32.\r\nOne of the activation function parameters of tflearn, selu does not work properly.\r\nThe symptoms are as follows.\r\nx = tflearn.conv_2d(_input, 16, 3, activation='selu', scope='conv1_1')\r\n-> TypeError: expected string or bytes-like object\r\nSo I did the following processing.\r\nMove to the location where tflearn is installed and change it to 'return scale * tf.nn.elu (x, alpha)' to 'return tf.nn.selu (x)' in 'activations.py'.\r\n![image](https://user-images.githubusercontent.com/12380660/46884186-333bc380-ce8f-11e8-97d8-952be40a9d88.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/1089", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/1089/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/1089/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/1089/events", "html_url": "https://github.com/tflearn/tflearn/issues/1089", "id": 360826118, "node_id": "MDU6SXNzdWUzNjA4MjYxMTg=", "number": 1089, "title": "Predicting a conv1d model in keras that takes index of words in a sentence as input Ask Question", "user": {"login": "sushiboo", "id": 43215279, "node_id": "MDQ6VXNlcjQzMjE1Mjc5", "avatar_url": "https://avatars0.githubusercontent.com/u/43215279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sushiboo", "html_url": "https://github.com/sushiboo", "followers_url": "https://api.github.com/users/sushiboo/followers", "following_url": "https://api.github.com/users/sushiboo/following{/other_user}", "gists_url": "https://api.github.com/users/sushiboo/gists{/gist_id}", "starred_url": "https://api.github.com/users/sushiboo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sushiboo/subscriptions", "organizations_url": "https://api.github.com/users/sushiboo/orgs", "repos_url": "https://api.github.com/users/sushiboo/repos", "events_url": "https://api.github.com/users/sushiboo/events{/privacy}", "received_events_url": "https://api.github.com/users/sushiboo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-17T11:30:03Z", "updated_at": "2018-09-17T11:33:34Z", "closed_at": "2018-09-17T11:33:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "So I have prepared a sentiment analysis model and I am trying to predict it with new input but I am faced with an error:\r\n\r\n```\r\ndata = getFile('Cleaned Data.xlsx')\r\n\r\ndata['Description'] = data['Description'].apply(lambda x: x.lower())\r\ndata['Description'] = data['Description'].apply((lambda x: re.sub('[^a-zA-z0-9\\s]','',x)))\r\n\r\nprint(data[ data['Classification'] == 1].size)\r\nprint(data[ data['Classification'] == 0].size)\r\n\r\nfor idx,row in data.iterrows():\r\n    row[1] = row[1].replace('rt',' ')\r\n\r\ntokenizer = Tokenizer(split=' ')\r\ntokenizer.fit_on_texts(data['Description'].values)\r\n\r\n#vectorizer = CountVectorizer()\r\n#X = vectorizer.fit_transform(jobSpec['Description']).toarray()\r\n\r\nX = tokenizer.texts_to_sequences(data['Description'].values)\r\nX = pad_sequences(X, maxlen=100, value=0.)\r\n\r\ndisplay(X.shape)\r\n\r\nvocab_size = len(tokenizer.word_index) + 1\r\nmax_length = max([len(s.split()) for s in data['Description']])\r\n\r\nY = pd.get_dummies(data['Classification']).values\r\nX_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size = 0.33, random_state = 42)\r\n\r\n\r\ntokens_docs = [doc.split(\" \") for doc in data['Description'].values]\r\nall_tokens = itertools.chain.from_iterable(tokens_docs)\r\nmy_dict = {token: token if token.isdigit() else idx for idx, token in enumerate(set(all_tokens))}\r\n\r\nprint(X_train.shape,Y_train.shape)\r\nprint(X_test.shape,Y_test.shape)\r\n\r\nraw_embedding = load_embedding('glove.6B.100d.txt')\r\n\r\nembedding_vectors= get_weight_matrix(raw_embedding, tokenizer.word_index)\r\nembedding_layer = Embedding(vocab_size, 100, weights=[embedding_vectors], input_length = X.shape[1], trainable=False, name=\"Embeddings\")\r\n\r\ndisplay(embedding_vectors.shape)\r\n\r\n# define model\r\nsequence_input = Input(shape=(100,), dtype='int32')\r\nembedded_sequences = embedding_layer(sequence_input)\r\nx = Conv1D(128, 5, activation='relu')(embedded_sequences)\r\nx = MaxPooling1D(2)(x)\r\nx = Conv1D(128, 5, activation='relu')(x)\r\nx = MaxPooling1D(2)(x)\r\nx = Conv1D(128, 5, activation='relu')(x)\r\nx = MaxPooling1D(18)(x)\r\nx = Flatten()(x)\r\nx = Dense(128, activation='relu')(x)\r\npreds = Dense(2, activation='softmax')(x)\r\nmodel = Model(sequence_input, preds)\r\nmodel.compile(loss='categorical_crossentropy',\r\n              optimizer='adam',\r\n              metrics=['acc'])\r\n\r\n\r\n# input for which we need the embedding\r\ninput_str = \"the company our client is a renowned civil actor who have consistently and safely delivered major civil infrastructure  ts across a\"\r\n\r\n# build index based on our `vocabulary`\r\nword_to_idx = OrderedDict({w:all_tokens.index(w) for w in input_str.split() if w in all_tokens})\r\n\r\nynew = model.predict([1],[3],[5],[7])\r\ndisplay(ynew)\r\n```\r\nwhen I try to predict this model with new input:\r\n\r\n```\r\nynew = model.predict([1],[3],[5],[7])\r\ndisplay(ynew)\r\n```\r\nit gives me an error message:\r\n\r\n`ValueError: Error when checking input: expected input_29 to have shape (100,) but got array with shape (1,)`\r\nI have tried to change the shapes of the model to None and 1 but it gives me other new errors. I am quite new to the machine learning stuff so really not sure how to fix this one.\r\n\r\nAny help will be appreciated", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/1088", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/1088/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/1088/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/1088/events", "html_url": "https://github.com/tflearn/tflearn/issues/1088", "id": 359896102, "node_id": "MDU6SXNzdWUzNTk4OTYxMDI=", "number": 1088, "title": "Tflearn Trained model with pretrained embeddings on Android studio", "user": {"login": "sushiboo", "id": 43215279, "node_id": "MDQ6VXNlcjQzMjE1Mjc5", "avatar_url": "https://avatars0.githubusercontent.com/u/43215279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sushiboo", "html_url": "https://github.com/sushiboo", "followers_url": "https://api.github.com/users/sushiboo/followers", "following_url": "https://api.github.com/users/sushiboo/following{/other_user}", "gists_url": "https://api.github.com/users/sushiboo/gists{/gist_id}", "starred_url": "https://api.github.com/users/sushiboo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sushiboo/subscriptions", "organizations_url": "https://api.github.com/users/sushiboo/orgs", "repos_url": "https://api.github.com/users/sushiboo/repos", "events_url": "https://api.github.com/users/sushiboo/events{/privacy}", "received_events_url": "https://api.github.com/users/sushiboo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-13T13:28:27Z", "updated_at": "2018-09-17T11:27:39Z", "closed_at": "2018-09-17T11:27:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a CNN model for text classification which uses a pre-trained embedding of the glove. I have frozen that graph optimized for inference and using it on the android studio. The problem is when I try to pass the weights into the model for inference. I have a JSON file with the key-value pairs between the words and the embedding which I use to create an input of embeddings from the text that the user types in. I can already get the embeddings from the JSON file but when I try to feed it into the graph for inference, it gives me the following error:\r\n\r\njava.lang.IllegalArgumentException: indices[0,3891] = -2 is not in [0, 7459)\r\n    \t [[Node: EmbeddingLayer/embedding_lookup = Gather[Tindices=DT_INT32, Tparams=DT_FLOAT, _class=[\"loc:@EmbeddingLayer/W\"], validate_indices=false, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](EmbeddingLayer/W/read, EmbeddingLayer/Cast)]]\r\n\r\nThis is the code I use for freezing the graph:\r\n\r\ndef freeze_graph(model_folder,output_graph=\"/Users/sushanlimbu/Desktop/MScProject/cnnModel/frozen_model.pb\"):\r\n    try:\r\n        checkpoint = tf.train.get_checkpoint_state(model_folder)\r\n        input_checkpoint = checkpoint.model_checkpoint_path\r\n        print(\"[INFO] input_checkpoint:\", input_checkpoint)\r\n    except:\r\n        input_checkpoint = model_folder\r\n        print(\"[INFO] Model folder\", model_folder) \r\n        \r\n    output_node_names = \"FullyConnected/Softmax\"\r\n    \r\n    saver = tf.train.import_meta_graph(input_checkpoint + '.meta', clear_devices=True)\r\n    \r\n    graph = tf.get_default_graph()\r\n    input_graph_def = graph.as_graph_def()\r\n    \r\n    with tf.Session() as sess:\r\n        saver.restore(sess, input_checkpoint)\r\n\r\n        output_graph_def = graph_util.remove_training_nodes(\r\n            input_graph_def\r\n        )\r\n        # We use a built-in TF helper to export variables to constants\r\n        output_graph_def = graph_util.convert_variables_to_constants(\r\n            sess,                        # The session is used to retrieve the weights\r\n            input_graph_def,             # The graph_def is used to retrieve the nodes \r\n            output_node_names.split(\",\"), # The output node names are used to select the usefull nodes\r\n        ) \r\n        with tf.gfile.GFile(output_graph, \"wb\") as f:\r\n            f.write(output_graph_def.SerializeToString())\r\n        print(\"%d ops in the final graph.\" % len(output_graph_def.node))\r\n\r\n        print(\"[INFO] output_graph:\",output_graph)\r\n        print(\"[INFO] all done\")\r\n\r\n\r\nHere is the Java code I use to classify the input (array of float value containing the embeddings of all the words that the user types)\r\n\r\nprivate void classify(float[] input){\r\n        TFInference = new TensorFlowInferenceInterface(getAssets(), MODEL_FILE);\r\n\r\n        TFInference.feed(INPUT_NODE, input, 1, input.length);\r\n        TFInference.run(OUTPUT_NODES);\r\n        float[] resu = new float[2];\r\n        TFInference.fetch(OUTPUT_NODE, resu);\r\n        tvResult.setText(\"Programmer: \" + Float.toString(resu[0]) + \"\\n Construction\" +  Float.toString(resu[1]));\r\n        Log.e(\"Result: \", Float.toString(resu[0]));\r\n    }\r\n\r\nHere is the code I use for building the input (The result of this method is the one I feed into the graph for inference):\r\n\r\nprivate float[] buildInput(List<String> words){\r\n        maxLength = words.size();\r\n        List<float[]> allInput = new ArrayList<float[]>();\r\n        float[] input = new float[batchSize * maxLength]; \r\n            if (vocabMap == null) {\r\n                Log.e(\"Error\", \"Empty Vocab\");\r\n            } else {\r\n                int i = 0;\r\n                for (String word : words) {\r\n                    if (vocabMap.get(word) != null) {\r\n                        float[] index = vocabMap.get(word);\r\n                        allInput.add(index);\r\n                        Log.e(\"i\", Float.toString(input[i]));\r\n\r\n                        for (float f : index){\r\n                            Log.e(\"index\", Float.toString(f));\r\n                        }\r\n\r\n                        i++;\r\n                        if (i == maxLength)\r\n                            break;\r\n                    }\r\n\r\n                }\r\n            }\r\n            for (float[] f : allInput){\r\n                input = ArrayUtils.addAll(input, f);\r\n            }\r\n        return input;\r\n    }\r\n\r\nThank you in advance \ud83c\udf61 \r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/1087", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/1087/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/1087/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/1087/events", "html_url": "https://github.com/tflearn/tflearn/issues/1087", "id": 353752315, "node_id": "MDU6SXNzdWUzNTM3NTIzMTU=", "number": 1087, "title": "max_checkpoints cannot save my best model", "user": {"login": "ikingkong876", "id": 16949639, "node_id": "MDQ6VXNlcjE2OTQ5NjM5", "avatar_url": "https://avatars0.githubusercontent.com/u/16949639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikingkong876", "html_url": "https://github.com/ikingkong876", "followers_url": "https://api.github.com/users/ikingkong876/followers", "following_url": "https://api.github.com/users/ikingkong876/following{/other_user}", "gists_url": "https://api.github.com/users/ikingkong876/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikingkong876/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikingkong876/subscriptions", "organizations_url": "https://api.github.com/users/ikingkong876/orgs", "repos_url": "https://api.github.com/users/ikingkong876/repos", "events_url": "https://api.github.com/users/ikingkong876/events{/privacy}", "received_events_url": "https://api.github.com/users/ikingkong876/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-24T11:49:08Z", "updated_at": "2019-02-05T00:45:57Z", "closed_at": "2018-09-27T02:36:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I set max_checkpoints=5 as the code:\r\n    `trainer = tflearn.helpers.trainer.Trainer(train_ops=trainop, tensorboard_verbose=0, max_checkpoints=5,                                                  tensorboard_dir='./tmp/tflearn_logs', best_val_accuracy=0.6,                                                  best_checkpoint_path='./Best_Model/{}'.format(m_f),                                                  checkpoint_path='./Checkpoint_Model/{}'.format(m_f))`\r\nand in the folder Best_Model and Checkpoint_Model, there are only 5 files in folder Checkpoint_Model, nothing is in the folder Best_Model.\r\nHow can i keep the best model in Best_Model and another lastest 5 model in Checkpoint_Model?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/1077", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/1077/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/1077/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/1077/events", "html_url": "https://github.com/tflearn/tflearn/issues/1077", "id": 343407029, "node_id": "MDU6SXNzdWUzNDM0MDcwMjk=", "number": 1077, "title": "cannot feed value of shape (4575, 32, 32, 3) for Tensor 'Placeholder_8:0', which has shape '(?, 32, 32, 1)'", "user": {"login": "doaa90", "id": 36426442, "node_id": "MDQ6VXNlcjM2NDI2NDQy", "avatar_url": "https://avatars1.githubusercontent.com/u/36426442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doaa90", "html_url": "https://github.com/doaa90", "followers_url": "https://api.github.com/users/doaa90/followers", "following_url": "https://api.github.com/users/doaa90/following{/other_user}", "gists_url": "https://api.github.com/users/doaa90/gists{/gist_id}", "starred_url": "https://api.github.com/users/doaa90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doaa90/subscriptions", "organizations_url": "https://api.github.com/users/doaa90/orgs", "repos_url": "https://api.github.com/users/doaa90/repos", "events_url": "https://api.github.com/users/doaa90/events{/privacy}", "received_events_url": "https://api.github.com/users/doaa90/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-22T13:42:17Z", "updated_at": "2018-07-30T14:08:38Z", "closed_at": "2018-07-30T14:08:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/1075", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/1075/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/1075/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/1075/events", "html_url": "https://github.com/tflearn/tflearn/issues/1075", "id": 342908123, "node_id": "MDU6SXNzdWUzNDI5MDgxMjM=", "number": 1075, "title": "Calling regression() with parameter loss='weighted_crossentropy'", "user": {"login": "tnightengale", "id": 17347282, "node_id": "MDQ6VXNlcjE3MzQ3Mjgy", "avatar_url": "https://avatars2.githubusercontent.com/u/17347282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tnightengale", "html_url": "https://github.com/tnightengale", "followers_url": "https://api.github.com/users/tnightengale/followers", "following_url": "https://api.github.com/users/tnightengale/following{/other_user}", "gists_url": "https://api.github.com/users/tnightengale/gists{/gist_id}", "starred_url": "https://api.github.com/users/tnightengale/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tnightengale/subscriptions", "organizations_url": "https://api.github.com/users/tnightengale/orgs", "repos_url": "https://api.github.com/users/tnightengale/repos", "events_url": "https://api.github.com/users/tnightengale/events{/privacy}", "received_events_url": "https://api.github.com/users/tnightengale/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-19T22:15:44Z", "updated_at": "2018-07-20T00:26:44Z", "closed_at": "2018-07-20T00:26:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I am currently also trying to implement a weighted CE loss function. I'd really appreciate some guidance on how to call this function from the `loss=` parameter of the `tflearn.regression()` function.\r\n\r\nThe following attempt to use the above method in my code yields:\r\n```\r\nnet_2 = net = tflearn.input_data(shape=[None, n_features])\r\nnet_2 = tflearn.fully_connected(net_2, 16, activation='relu')\r\nnet_2 = tflearn.dropout(net_2, 0.8)\r\nnet_2 = tflearn.fully_connected(net_2, 32, activation='relu')\r\nnet_2 = tflearn.dropout(net_2, 0.8)\r\nnet_2 = tflearn.fully_connected(net_2, 64, activation='relu')\r\nnet_2 = tflearn.dropout(net_2, 0.8)\r\nnet_2 = tflearn.fully_connected(net_2, 64, activation='relu')\r\nnet_2 = tflearn.dropout(net_2, 0.8)\r\nnet_2 = tflearn.fully_connected(net_2, 2, activation='softmax')\r\nfrom tflearn.objectives import weighted_crossentropy\r\nnet_2 = tflearn.regression(net, optimizer='adam', loss=lambda data, target: weighted_crossentropy(data, target, weight=.5))\r\n```\r\n\r\n<img width=\"704\" alt=\"screen shot 2018-07-19 at 3 19 07 pm\" src=\"https://user-images.githubusercontent.com/17347282/42965146-250f5ab2-8b67-11e8-8f15-06ad377677af.png\">\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/1071", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/1071/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/1071/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/1071/events", "html_url": "https://github.com/tflearn/tflearn/issues/1071", "id": 337889873, "node_id": "MDU6SXNzdWUzMzc4ODk4NzM=", "number": 1071, "title": "tflearn Installation issues.", "user": {"login": "Nadedic", "id": 16009575, "node_id": "MDQ6VXNlcjE2MDA5NTc1", "avatar_url": "https://avatars0.githubusercontent.com/u/16009575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadedic", "html_url": "https://github.com/Nadedic", "followers_url": "https://api.github.com/users/Nadedic/followers", "following_url": "https://api.github.com/users/Nadedic/following{/other_user}", "gists_url": "https://api.github.com/users/Nadedic/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadedic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadedic/subscriptions", "organizations_url": "https://api.github.com/users/Nadedic/orgs", "repos_url": "https://api.github.com/users/Nadedic/repos", "events_url": "https://api.github.com/users/Nadedic/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadedic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-03T13:03:30Z", "updated_at": "2018-07-04T11:29:42Z", "closed_at": "2018-07-04T11:29:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nI've been trying to install tflearn module for a while now and haven't been able to do so. I have checked most documentations and other problems but none seem to be usefull. \r\n\r\nI am using anaconda extension. I have tensorflow installed, it's current installed version is 1.8 and as far as I understood it should be higher or equal to 1.0.\r\n\r\nI can't use anaconda navigator for some reason but the prompt is working just fine and that's where I've been trying. \r\n\r\n`import tflearn\r\ncurses is not supported on this machine (please install/reinstall curses for an optimal experience)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Users\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\tflearn-0.3.2-py3.6.egg\\tflearn\\__init__.py\", line 62, in <module>\r\n  File \"C:\\Users\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\tflearn-0.3.2-py3.6.egg\\tflearn\\datasets\\__init__.py\", line 1, in <module>\r\n    # -*- coding: utf-8 -*-\r\n  File \"C:\\Users\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\tflearn-0.3.2-py3.6.egg\\tflearn\\datasets\\cifar10.py\", line 16, in <module>\r\n  File \"C:\\Users\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\tflearn-0.3.2-py3.6.egg\\tflearn\\data_utils.py\", line 7, in <module>\r\n  File \"C:\\Users\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\PIL\\Image.py\", line 60, in <module>\r\n    from . import _imaging as core\r\nImportError: DLL load failed: The specified module could not be found.`\r\n\r\nThat's the error that comes up when I try to import it from the prompt. It seems like it is installed but not importable\r\n\r\n`~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\PIL\\Image.py in <module>()\r\n     58     # Also note that Image.core is not a publicly documented interface,\r\n     59     # and should be considered private and subject to change.\r\n---> 60     from . import _imaging as core\r\n     61     if PILLOW_VERSION != getattr(core, 'PILLOW_VERSION', None):\r\n     62         raise ImportError(\"The _imaging extension was built for another \"\r\nImportError: DLL load failed: The specified module could not be found.`\r\n\r\nAnd that's a jupyter's notebook import error. \r\n\r\nPlease guide me!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/1069", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/1069/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/1069/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/1069/events", "html_url": "https://github.com/tflearn/tflearn/issues/1069", "id": 336203502, "node_id": "MDU6SXNzdWUzMzYyMDM1MDI=", "number": 1069, "title": "Importing tflearn is slow due to tf.contrib imports", "user": {"login": "akx", "id": 58669, "node_id": "MDQ6VXNlcjU4NjY5", "avatar_url": "https://avatars2.githubusercontent.com/u/58669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akx", "html_url": "https://github.com/akx", "followers_url": "https://api.github.com/users/akx/followers", "following_url": "https://api.github.com/users/akx/following{/other_user}", "gists_url": "https://api.github.com/users/akx/gists{/gist_id}", "starred_url": "https://api.github.com/users/akx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akx/subscriptions", "organizations_url": "https://api.github.com/users/akx/orgs", "repos_url": "https://api.github.com/users/akx/repos", "events_url": "https://api.github.com/users/akx/events{/privacy}", "received_events_url": "https://api.github.com/users/akx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-27T12:15:07Z", "updated_at": "2018-07-01T23:28:32Z", "closed_at": "2018-07-01T23:28:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey \ud83d\udc4b \r\n\r\n[Someone over at Stack Overflow was wondering](https://stackoverflow.com/q/51061689/51685) about the time it takes to import `tflearn` compared to other modules (4.3 seconds for `tflearn`, 1.1 seconds for `tensorflow` in my example container).\r\nIn my SO answer I sleuthed around a bit, and it looks like the brunt of the import time comes from [`tflearn.variables` importing `tensorflow.contrib` for the `add_arg_scope` decorator](https://github.com/tflearn/tflearn/blob/8aa8436a641f019983a4d5ea2290ba98eed8a181/tflearn/variables.py#L7).\r\n\r\nSince the `arg_scope` module isn't too complex, maybe it would be worth it to vendor it in `tflearn` to avoid the added import time?\r\n\r\nOther places within tflearn that import `tf.contrib`, as of 8aa8436a641f019983, seem to be:\r\n\r\n```\r\n$ git grep tensorflow.contrib tflearn/\r\ntflearn/data_utils.py:    from tensorflow.contrib.learn.python.learn.preprocessing.text import \\\r\ntflearn/estimators/cluster/kmeans.py:from tensorflow.contrib.factorization.python.ops import clustering_ops as c_ops\r\ntflearn/estimators/cluster/kmeans.py:from tensorflow.contrib.tensor_forest.python.ops import data_ops\r\ntflearn/estimators/ensemble/forest.py:from tensorflow.contrib.tensor_forest.python import tensor_forest\r\ntflearn/estimators/ensemble/forest.py:from tensorflow.contrib.tensor_forest.python.ops import data_ops\r\ntflearn/initializations.py:    from tensorflow.contrib.layers.python.layers.initializers import \\\r\ntflearn/initializations.py:    from tensorflow.contrib.layers.python.layers.initializers import \\\r\ntflearn/layers/recurrent.py:    from tensorflow.contrib.rnn.python.ops.core_rnn import static_rnn as _rnn, static_bidirectional_rnn as _brnn\r\ntflearn/layers/recurrent.py:    from tensorflow.contrib.rnn.python.ops import core_rnn_cell\r\ntflearn/variables.py:from tensorflow.contrib.framework.python.ops import add_arg_scope as contrib_add_arg_scope\r\n```\r\n\r\nOf these, it looks like `tflearn.variables`, `tflearn.data_utils`, `tflearn.initializations` and `tflearn.layers.recurrent` are always imported, so it might be worth it to look into lazily importing the `tf.contrib` dependencies in them? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/1060", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/1060/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/1060/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/1060/events", "html_url": "https://github.com/tflearn/tflearn/issues/1060", "id": 330187056, "node_id": "MDU6SXNzdWUzMzAxODcwNTY=", "number": 1060, "title": "The problem of accuracy of Dnn_regression model using tflearn", "user": {"login": "Rra2", "id": 40023295, "node_id": "MDQ6VXNlcjQwMDIzMjk1", "avatar_url": "https://avatars3.githubusercontent.com/u/40023295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rra2", "html_url": "https://github.com/Rra2", "followers_url": "https://api.github.com/users/Rra2/followers", "following_url": "https://api.github.com/users/Rra2/following{/other_user}", "gists_url": "https://api.github.com/users/Rra2/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rra2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rra2/subscriptions", "organizations_url": "https://api.github.com/users/Rra2/orgs", "repos_url": "https://api.github.com/users/Rra2/repos", "events_url": "https://api.github.com/users/Rra2/events{/privacy}", "received_events_url": "https://api.github.com/users/Rra2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-07T09:21:19Z", "updated_at": "2018-06-15T11:33:09Z", "closed_at": "2018-06-15T11:33:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Question 1.\r\nI want to check the accuracy of the regression result window, not binary_acc. Because of this, only the binary_acc is displayed in the tensorboard graph, and it is displayed as 0 only.\r\n\r\nQuestion 2.\r\nI would like to apply the loss function to mean absolute percentage error instead of mse. I would like to ask for advice on the code that should be added to objectives.py.\r\n\r\nQuestion 3.\r\nIf there is a theoretical error of deep running in my code, I would appreciate your advice.\r\n\r\nHere is my code and the results:\r\n\r\n\r\n# -*- coding: utf-8 -*-\r\nfrom xlrd import open_workbook\r\nfrom sklearn.model_selection import train_test_split\r\nimport tflearn\r\nimport numpy as np\r\nimport random\r\nimport tensorflow as tf\r\n\r\n\r\n\r\nclass EarlyStoppingCallback(tflearn.callbacks.Callback):\r\n    def __init__(self, loss_threshold):\r\n        self.loss_threshold = loss_threshold\r\n\r\n    def on_epoch_end(self, training_state):\r\n        if training_state.val_loss is None: return\r\n        if training_state.val_loss < self.loss_threshold and training_state.val_loss!=0.:\r\n            raise StopIteration\r\n\r\n# Loss function\r\ndef mean_absolute_percentage_error(y_test, estimation_result):\r\n    y_test, estimation_result = np.array(y_test), np.array(estimation_result)\r\n    return np.mean(np.abs((y_test - estimation_result) / y_test)) * 100\r\n\r\n# control variables\r\nneeded_col_numbers_for_data = [2,3,4,5,6,7,8,9,10,11]\r\nnum_feat = 9\r\nneeded_col_numbers_for_label = [11]\r\nstarting_row_index = 4  # this variable can be modified according to the data format in given excel file\r\n\r\n# read data from excel file\r\nfilename = 'concrete_mix_data_6.xlsx'\r\nworkbook = open_workbook(filename)\r\nworksheet = workbook.sheet_by_index(0)\r\nnrows = worksheet.nrows\r\nncols = worksheet.ncols\r\n\r\n# data preparation --> data & label\r\nending_row_index = nrows\r\ndata_and_label = []\r\nfor row_num in range(starting_row_index-1, ending_row_index):\r\n    data_and_label.append([worksheet.row_values(row_num)[i] for i in needed_col_numbers_for_data])\r\nrandom.shuffle(data_and_label)\r\ndata_and_label = np.array(data_and_label)\r\nX = data_and_label[:,:-1]\r\nY = np.array(data_and_label[:,-1])\r\nY = np.reshape(Y, (len(Y),1))\r\n\r\n# split data into training and testing group\r\nx_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.25)\r\n\r\n\r\n# init\r\ntflearn.init_graph(num_cores=4, gpu_memory_fraction=0.5)\r\n\r\nprint('======================= DNN regression model  ==================')\r\n\r\n# Build neural network\r\nnet = tflearn.input_data(shape=[None, num_feat])\r\nnet = tflearn.fully_connected(net, 1000, activation='relu', name='Layer1')\r\nnet = tflearn.dropout(net, 0.5, name='Dropout1')\r\nnet = tflearn.fully_connected(net, 1000, activation='relu', name='Layer2')\r\nnet = tflearn.dropout(net, 0.5, name='Dropout2')\r\nnet = tflearn.fully_connected(net, 1000, activation='relu', name='Layer3')\r\nnet = tflearn.dropout(net, 0.5, name='Dropout3')\r\nnet = tflearn.fully_connected(net, 1000, activation='relu', name='Layer4')\r\n# net = tflearn.dropout(net, 0.5, name='Dropout4')\r\nnet = tflearn.fully_connected(net, 1000, activation='relu', name='Layer5')\r\n# net = tflearn.dropout(net, 0.5, name='Dropout5')\r\n\r\nnet = tflearn.fully_connected(net, 1, activation='linear')\r\n\r\nnet = tflearn.regression(net, optimizer='Adam', loss='mean_square', metric='accuracy', learning_rate=0.001)\r\n\r\n# Define model\r\nmodel = tflearn.DNN(net, tensorboard_verbose=3, tensorboard_dir=\"/tmp/tflearn_logs/test\")\r\n\r\n# Start training (apply gradient descent algorithm)\r\n# print X\r\n# print Y\r\nearlyStoppingCallback = EarlyStoppingCallback(loss_threshold = 60)\r\nmodel.fit(X, Y, n_epoch=10000, batch_size=60, show_metric=True,  snapshot_epoch=True,  validation_set=0.25, callbacks=earlyStoppingCallback,  run_id=\"tensorboard_test\")\r\n\r\n\r\n# Predictive Data('best')\r\nestimation_result = model.predict(x_test)\r\n\r\n\r\n# Results\r\nresult = np.concatenate((estimation_result,y_test),axis=1)\r\nprint('======================= DNN regression Results  ==================')\r\nprint('Estimation Result / Target ')\r\nprint(result)\r\nprint('==================================================================')\r\nmape = mean_absolute_percentage_error(y_test, estimation_result)\r\nprint('Mean absolute percentage error :',mape)\r\n# mse = mean_squared_error(y_test, estimation_result)\r\n# print(mse)\r\n\r\n# # Save a model\r\nmodel.save('tensorboard_test2.tflearn')\r\n\r\n\r\nTraining Step: 7377  | total loss: 133.95444 | time: 0.787s\r\n| Adam | epoch: 1054 | loss: 133.95444 - binary_acc: 0.0000 -- iter: 360/390\r\nTraining Step: 7378  | total loss: 132.92976 | time: 1.935s\r\n| Adam | epoch: 1054 | loss: 132.92976 - binary_acc: 0.0000 | val_loss: 76.89469 - val_acc: 0.0000 -- iter: 390/390", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/1049", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/1049/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/1049/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/1049/events", "html_url": "https://github.com/tflearn/tflearn/issues/1049", "id": 321858189, "node_id": "MDU6SXNzdWUzMjE4NTgxODk=", "number": 1049, "title": "mistake in the docs", "user": {"login": "lyocean17", "id": 22868849, "node_id": "MDQ6VXNlcjIyODY4ODQ5", "avatar_url": "https://avatars1.githubusercontent.com/u/22868849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lyocean17", "html_url": "https://github.com/lyocean17", "followers_url": "https://api.github.com/users/lyocean17/followers", "following_url": "https://api.github.com/users/lyocean17/following{/other_user}", "gists_url": "https://api.github.com/users/lyocean17/gists{/gist_id}", "starred_url": "https://api.github.com/users/lyocean17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lyocean17/subscriptions", "organizations_url": "https://api.github.com/users/lyocean17/orgs", "repos_url": "https://api.github.com/users/lyocean17/repos", "events_url": "https://api.github.com/users/lyocean17/events{/privacy}", "received_events_url": "https://api.github.com/users/lyocean17/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-10T08:55:39Z", "updated_at": "2018-05-24T03:15:20Z", "closed_at": "2018-05-24T03:15:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "http://tflearn.org/layers/merge_ops/#merge\r\n\r\n\"'elemwise_mul': outputs element-wise sum\" \r\n\r\nthe \"sum\" should be \"mul\" ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/1042", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/1042/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/1042/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/1042/events", "html_url": "https://github.com/tflearn/tflearn/issues/1042", "id": 317747340, "node_id": "MDU6SXNzdWUzMTc3NDczNDA=", "number": 1042, "title": "ImportError: cannot import name config", "user": {"login": "apoorvapantoola", "id": 21217892, "node_id": "MDQ6VXNlcjIxMjE3ODky", "avatar_url": "https://avatars3.githubusercontent.com/u/21217892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apoorvapantoola", "html_url": "https://github.com/apoorvapantoola", "followers_url": "https://api.github.com/users/apoorvapantoola/followers", "following_url": "https://api.github.com/users/apoorvapantoola/following{/other_user}", "gists_url": "https://api.github.com/users/apoorvapantoola/gists{/gist_id}", "starred_url": "https://api.github.com/users/apoorvapantoola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apoorvapantoola/subscriptions", "organizations_url": "https://api.github.com/users/apoorvapantoola/orgs", "repos_url": "https://api.github.com/users/apoorvapantoola/repos", "events_url": "https://api.github.com/users/apoorvapantoola/events{/privacy}", "received_events_url": "https://api.github.com/users/apoorvapantoola/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-25T18:40:55Z", "updated_at": "2018-04-26T14:02:11Z", "closed_at": "2018-04-26T14:02:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi ,\r\nWhen I am trying to import tflearn i am getting the following error \r\n\r\n---------------------------------------------------------------------------\r\nImportError                               Traceback (most recent call last)\r\n<ipython-input-31-1dcc0aeffa10> in <module>()\r\n----> 1 import tflearn\r\n\r\n/Applications/anaconda2/lib/python2.7/site-packages/tflearn/__init__.py in <module>()\r\n      2 \r\n      3 # Config\r\n----> 4 from . import config\r\n      5 from .config import is_training, get_training_mode, init_graph\r\n      6 \r\n\r\nImportError: cannot import name config\r\n\r\n\r\nPlease help .\r\nThank you\r\nPS: tensorflow is working fine", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/1037", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/1037/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/1037/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/1037/events", "html_url": "https://github.com/tflearn/tflearn/issues/1037", "id": 314894070, "node_id": "MDU6SXNzdWUzMTQ4OTQwNzA=", "number": 1037, "title": "Calling model.predict() from multiple processes", "user": {"login": "Rampagy", "id": 32419459, "node_id": "MDQ6VXNlcjMyNDE5NDU5", "avatar_url": "https://avatars2.githubusercontent.com/u/32419459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rampagy", "html_url": "https://github.com/Rampagy", "followers_url": "https://api.github.com/users/Rampagy/followers", "following_url": "https://api.github.com/users/Rampagy/following{/other_user}", "gists_url": "https://api.github.com/users/Rampagy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rampagy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rampagy/subscriptions", "organizations_url": "https://api.github.com/users/Rampagy/orgs", "repos_url": "https://api.github.com/users/Rampagy/repos", "events_url": "https://api.github.com/users/Rampagy/events{/privacy}", "received_events_url": "https://api.github.com/users/Rampagy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-17T03:41:39Z", "updated_at": "2018-04-23T06:10:22Z", "closed_at": "2018-04-17T18:37:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Maybe this is an issue with my implementation, tflearn or tensorflow, I guess I am not sure.  The code hangs when I call `model.predict()` in multiple processes, but I know the exact same code works when evaluated in a single process.  [See my reproduction steps here](https://github.com/Rampagy/InvertedPendulum/tree/master/testing/multiprocessing).\r\n\r\nI know I have seen [lots of issues with tensorflow](https://github.com/tensorflow/tensorflow/issues/8220) hanging when trying to predict within multiple processes, so I am not sure if this is a tflearn issue or a tensorflow issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/1025", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/1025/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/1025/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/1025/events", "html_url": "https://github.com/tflearn/tflearn/issues/1025", "id": 300501582, "node_id": "MDU6SXNzdWUzMDA1MDE1ODI=", "number": 1025, "title": "Argument in tflearn.fully_connected?", "user": {"login": "monk1337", "id": 17107749, "node_id": "MDQ6VXNlcjE3MTA3NzQ5", "avatar_url": "https://avatars2.githubusercontent.com/u/17107749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/monk1337", "html_url": "https://github.com/monk1337", "followers_url": "https://api.github.com/users/monk1337/followers", "following_url": "https://api.github.com/users/monk1337/following{/other_user}", "gists_url": "https://api.github.com/users/monk1337/gists{/gist_id}", "starred_url": "https://api.github.com/users/monk1337/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/monk1337/subscriptions", "organizations_url": "https://api.github.com/users/monk1337/orgs", "repos_url": "https://api.github.com/users/monk1337/repos", "events_url": "https://api.github.com/users/monk1337/events{/privacy}", "received_events_url": "https://api.github.com/users/monk1337/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-27T05:48:37Z", "updated_at": "2018-06-17T19:19:04Z", "closed_at": "2018-06-17T19:19:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to learn tflearn and Here i have some confusions,\r\n\r\nIf i get correctly then in this line\r\n\r\nnet = tflearn.input_data(shape=[None, len(train_x[0])])\r\n\r\nlen(train_x[0]) is shape of my output matrix ? If i am wrong please provide info about this.\r\n\r\nSecond doubt is what is 8 in this line ?\r\n\r\nnet = tflearn.fully_connected(net, 8)\r\n\r\ni tried to search and found it is n_units i think but what are they and how i suppose to choose how many units i will require in which case ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/1018", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/1018/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/1018/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/1018/events", "html_url": "https://github.com/tflearn/tflearn/issues/1018", "id": 297343552, "node_id": "MDU6SXNzdWUyOTczNDM1NTI=", "number": 1018, "title": "TypeError: Cannot cast ufunc subtract output from dtype('float64') to dtype('uint8') with casting rule 'same_kind'", "user": {"login": "andrfgs", "id": 9550364, "node_id": "MDQ6VXNlcjk1NTAzNjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/9550364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrfgs", "html_url": "https://github.com/andrfgs", "followers_url": "https://api.github.com/users/andrfgs/followers", "following_url": "https://api.github.com/users/andrfgs/following{/other_user}", "gists_url": "https://api.github.com/users/andrfgs/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrfgs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrfgs/subscriptions", "organizations_url": "https://api.github.com/users/andrfgs/orgs", "repos_url": "https://api.github.com/users/andrfgs/repos", "events_url": "https://api.github.com/users/andrfgs/events{/privacy}", "received_events_url": "https://api.github.com/users/andrfgs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-15T06:41:50Z", "updated_at": "2020-02-27T01:06:26Z", "closed_at": "2020-02-27T01:03:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't seem to be able to use TFLearn at all. Whenever I try to run it, Thread 3 in Python crashes, showing this error.\r\n\r\nI installed TensorFlow and TFLearn a day ago and I was trying to test this tutorial code: [https://medium.com/@ageitgey/machine-learning-is-fun-part-3-deep-learning-and-convolutional-neural-networks-f40359318721](url)\r\n\r\nUsing:\r\nWindows 10, Python 3.6\r\nAnaconda 4.4.10\r\nTensorFlow 1.5\r\nTFLearn 0.32\r\n\r\nFull console log:\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\h5py\\__init__.py:34: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.\r\n  from ._conv import register_converters as _register_converters\r\ncurses is not supported on this machine (please install/reinstall curses for an optimal experience)\r\nWARNING:tensorflow:From C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tflearn\\initializations.py:119: UniformUnitScaling.__init__ (from tensorflow.python.ops.init_ops) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nUse tf.initializers.variance_scaling instead with distribution=uniform to get equivalent behavior.\r\nWARNING:tensorflow:From C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tflearn\\objectives.py:66: calling reduce_sum (from tensorflow.python.ops.math_ops) with keep_dims is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nkeep_dims is deprecated, use keepdims instead\r\n2018-02-15 06:22:15.563652: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows\\PY\\36\\tensorflow\\core\\platform\\cpu_feature_guard.cc:137] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX AVX2\r\n---------------------------------\r\nRun id: fire-classifier\r\nLog directory: /tmp/tflearn_logs/\r\n---------------------------------\r\nPreprocessing... Calculating mean over all dataset (this may take long)...\r\nMean: 99.04967060701352 (To avoid repetitive computation, add it to argument 'mean' of `add_featurewise_zero_center`)\r\n---------------------------------\r\nPreprocessing... Calculating std over all dataset (this may take long)...\r\nSTD: 62.02319644890393 (To avoid repetitive computation, add it to argument 'std' of `add_featurewise_stdnorm`)\r\n---------------------------------\r\nTraining samples: 583\r\nValidation samples: 0\r\n--\r\nException in thread Thread-3:\r\nTraceback (most recent call last):\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\threading.py\", line 916, in _bootstrap_inner\r\n    self.run()\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\threading.py\", line 864, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tflearn\\data_flow.py\", line 195, in fill_feed_dict_queue\r\n    data[k] = self.dprep_dict[k].apply(data[k])\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tflearn\\data_preprocessing.py\", line 46, in apply\r\n    batch = m(batch)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tflearn\\data_preprocessing.py\", line 216, in _featurewise_zero_center\r\n    batch[i] -= self.global_mean.value\r\nTypeError: Cannot cast ufunc subtract output from dtype('float64') to dtype('uint8') with casting rule 'same_kind'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/1014", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/1014/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/1014/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/1014/events", "html_url": "https://github.com/tflearn/tflearn/issues/1014", "id": 293237125, "node_id": "MDU6SXNzdWUyOTMyMzcxMjU=", "number": 1014, "title": "Wrong architecture in residual block", "user": {"login": "giordand", "id": 8845274, "node_id": "MDQ6VXNlcjg4NDUyNzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/8845274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giordand", "html_url": "https://github.com/giordand", "followers_url": "https://api.github.com/users/giordand/followers", "following_url": "https://api.github.com/users/giordand/following{/other_user}", "gists_url": "https://api.github.com/users/giordand/gists{/gist_id}", "starred_url": "https://api.github.com/users/giordand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giordand/subscriptions", "organizations_url": "https://api.github.com/users/giordand/orgs", "repos_url": "https://api.github.com/users/giordand/repos", "events_url": "https://api.github.com/users/giordand/events{/privacy}", "received_events_url": "https://api.github.com/users/giordand/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-31T17:03:56Z", "updated_at": "2018-02-01T00:28:40Z", "closed_at": "2018-02-01T00:28:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/tflearn/tflearn/blob/b1a34ae7293ed3e388b079e857ba362028da6e9b/tflearn/layers/conv.py#L1489\r\n\r\nAfter several days reading the paper of reference (Deep Residual Learning for Image Recognition) i realised that the architecture of the coded (referenced) block is invalid. Let's take a look at the residual block that shows the paper:\r\n\r\n![image](https://user-images.githubusercontent.com/8845274/35636027-b0b7f00a-068e-11e8-82a7-b84f7337755c.png)\r\n\r\nAnd now lets see what is actually coded:\r\n\r\n![image](https://user-images.githubusercontent.com/8845274/35636098-e1125a1a-068e-11e8-993d-5f4d764e4e79.png)\r\n\r\nI'm experimenting what's the difference in accuracy and loss between these two blocks. However, it must be corrected because it do not reflect the original paper structure.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/998", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/998/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/998/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/998/events", "html_url": "https://github.com/tflearn/tflearn/issues/998", "id": 289021506, "node_id": "MDU6SXNzdWUyODkwMjE1MDY=", "number": 998, "title": "IndexError: list index out of range related to #360", "user": {"login": "gouthamand", "id": 7520529, "node_id": "MDQ6VXNlcjc1MjA1Mjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7520529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gouthamand", "html_url": "https://github.com/gouthamand", "followers_url": "https://api.github.com/users/gouthamand/followers", "following_url": "https://api.github.com/users/gouthamand/following{/other_user}", "gists_url": "https://api.github.com/users/gouthamand/gists{/gist_id}", "starred_url": "https://api.github.com/users/gouthamand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gouthamand/subscriptions", "organizations_url": "https://api.github.com/users/gouthamand/orgs", "repos_url": "https://api.github.com/users/gouthamand/repos", "events_url": "https://api.github.com/users/gouthamand/events{/privacy}", "received_events_url": "https://api.github.com/users/gouthamand/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-16T19:06:19Z", "updated_at": "2018-01-17T14:34:34Z", "closed_at": "2018-01-17T14:34:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello All,\r\n\r\nHas this error been fixed ?. I have used tf.reset_default_graph().\r\n\r\ncall trace narrows to this code in /utils.py and feed_dict function.\r\n/opt/conda/lib/python3.6/site-packages/tflearn/utils.py in feed_dict_builder(X, Y, net_inputs, net_targets)\r\n298 X = [X]\r\n299 for i, x in enumerate(X):\r\n--> 300 feed_dict[net_inputs[i]] = x\r\n\r\nOne of things I observed is that following code created two separate input tensor\r\niname = input_data(shape= [None,name.shape[1]], name=\"iname\" )\r\nemb_name = embedding(iname, MAX_TEXT, 60//3)\r\n\r\n[<tf.Tensor 'iname/X:0' shape=(?, 13) dtype=float32>,\r\n<tf.Tensor 'netname/X:0' shape=(?, 13) dtype=float32>],\r\n\r\nis that correct ?. Shouldn't it be create one only one tensor. Am i missing something. \r\n\r\nModel expect's two input tensor during fit and  generates above stated error\r\nlist index out of range.\r\nHow to avoid generating two different input tensor.\r\n\r\n\r\nThanks in advance for the help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/990", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/990/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/990/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/990/events", "html_url": "https://github.com/tflearn/tflearn/issues/990", "id": 285882764, "node_id": "MDU6SXNzdWUyODU4ODI3NjQ=", "number": 990, "title": "Cannot feed value of shape (96, 227, 227) for Tensor 'InputData/X:0', which has shape '(?, 227, 227, 1)'", "user": {"login": "mlanier", "id": 17572610, "node_id": "MDQ6VXNlcjE3NTcyNjEw", "avatar_url": "https://avatars3.githubusercontent.com/u/17572610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlanier", "html_url": "https://github.com/mlanier", "followers_url": "https://api.github.com/users/mlanier/followers", "following_url": "https://api.github.com/users/mlanier/following{/other_user}", "gists_url": "https://api.github.com/users/mlanier/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlanier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlanier/subscriptions", "organizations_url": "https://api.github.com/users/mlanier/orgs", "repos_url": "https://api.github.com/users/mlanier/repos", "events_url": "https://api.github.com/users/mlanier/events{/privacy}", "received_events_url": "https://api.github.com/users/mlanier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-04T05:05:21Z", "updated_at": "2018-01-09T04:53:44Z", "closed_at": "2018-01-09T04:53:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to use different data in your example:\r\n\r\n```\r\n\r\n\r\nfrom __future__ import division, print_function, absolute_import\r\nimport scipy\r\nimport tflearn\r\nfrom tflearn.data_utils import shuffle, to_categorical\r\nfrom tflearn.layers.core import input_data, dropout, fully_connected\r\nfrom tflearn.layers.conv import conv_2d, max_pool_2d\r\nfrom tflearn.layers.estimator import regression\r\nfrom tflearn.data_preprocessing import ImagePreprocessing\r\nfrom tflearn.data_augmentation import ImageAugmentation\r\n\r\n\r\n\r\ndataset_file = 'train'\r\nfrom tflearn.data_utils import image_preloader\r\nX, Y = image_preloader(dataset_file, image_shape=(227, 227,1),   mode='folder', categorical_labels=True,grayscale=True)\r\n\r\n\r\n\r\n\r\n\r\n# Real-time data preprocessing\r\nimg_prep = ImagePreprocessing()\r\nimg_prep.add_featurewise_zero_center()\r\nimg_prep.add_featurewise_stdnorm()\r\n\r\n# Real-time data augmentation\r\nimg_aug = ImageAugmentation()\r\nimg_aug.add_random_flip_leftright()\r\nimg_aug.add_random_rotation(max_angle=25.)\r\n\r\n# Convolutional network building\r\nnetwork = input_data(shape=[None, 227, 227, 1],\r\n                     data_preprocessing=img_prep,\r\n                     data_augmentation=img_aug)\r\nnetwork = conv_2d(network, 32, 3, activation='relu')\r\nnetwork = max_pool_2d(network, 2)\r\nnetwork = conv_2d(network, 64, 3, activation='relu')\r\nnetwork = conv_2d(network, 64, 3, activation='relu')\r\nnetwork = max_pool_2d(network, 2)\r\nnetwork = fully_connected(network, 512, activation='relu')\r\nnetwork = dropout(network, 0.5)\r\nnetwork = fully_connected(network, 12, activation='softmax')\r\nnetwork = regression(network, optimizer='adam',\r\n                     loss='categorical_crossentropy',\r\n                     learning_rate=0.001)\r\n\r\n# Train using classifier\r\nmodel = tflearn.DNN(network, tensorboard_verbose=0)\r\nmodel.fit(X, Y, n_epoch=50, shuffle=True, validation_set=.1,\r\n          show_metric=True, batch_size=96, run_id='cifar10_cnn')\r\n\r\n```\r\n\r\nI am getting this error:\r\n`\r\nCannot feed value of shape (96, 227, 227) for Tensor 'InputData/X:0', which has shape '(?, 227, 227, 1)'`\r\n\r\nThe data I have is from https://www.kaggle.com/c/plant-seedlings-classification/data\r\n\r\n\r\n  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/985", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/985/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/985/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/985/events", "html_url": "https://github.com/tflearn/tflearn/issues/985", "id": 284995796, "node_id": "MDU6SXNzdWUyODQ5OTU3OTY=", "number": 985, "title": "Error Importing tflearn", "user": {"login": "AjejeBrazorfEU", "id": 34924739, "node_id": "MDQ6VXNlcjM0OTI0NzM5", "avatar_url": "https://avatars1.githubusercontent.com/u/34924739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AjejeBrazorfEU", "html_url": "https://github.com/AjejeBrazorfEU", "followers_url": "https://api.github.com/users/AjejeBrazorfEU/followers", "following_url": "https://api.github.com/users/AjejeBrazorfEU/following{/other_user}", "gists_url": "https://api.github.com/users/AjejeBrazorfEU/gists{/gist_id}", "starred_url": "https://api.github.com/users/AjejeBrazorfEU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AjejeBrazorfEU/subscriptions", "organizations_url": "https://api.github.com/users/AjejeBrazorfEU/orgs", "repos_url": "https://api.github.com/users/AjejeBrazorfEU/repos", "events_url": "https://api.github.com/users/AjejeBrazorfEU/events{/privacy}", "received_events_url": "https://api.github.com/users/AjejeBrazorfEU/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-28T21:46:31Z", "updated_at": "2018-05-28T11:12:17Z", "closed_at": "2018-05-28T11:12:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to import tflearn i get this error:\r\n`Traceback (most recent call last):\r\n  File \"C:\\Users\\Adam\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\platform\\self_check.py\", line 75, in preload_check\r\n    ctypes.WinDLL(build_info.cudart_dll_name)\r\n  File \"C:\\Users\\Adam\\AppData\\Local\\Programs\\Python\\Python36\\lib\\ctypes\\__init__.py\", line 348, in __init__\r\n    self._handle = _dlopen(self._name, mode)\r\nOSError: [WinError 126] The specified module could not be found(I translated this)`\r\n\r\n\r\nI've simply installed tflearn with :\r\n`pip install tflearn`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/984", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/984/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/984/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/984/events", "html_url": "https://github.com/tflearn/tflearn/issues/984", "id": 284283485, "node_id": "MDU6SXNzdWUyODQyODM0ODU=", "number": 984, "title": "Can't load the model which I have trained", "user": {"login": "moshuilanting", "id": 25631749, "node_id": "MDQ6VXNlcjI1NjMxNzQ5", "avatar_url": "https://avatars0.githubusercontent.com/u/25631749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moshuilanting", "html_url": "https://github.com/moshuilanting", "followers_url": "https://api.github.com/users/moshuilanting/followers", "following_url": "https://api.github.com/users/moshuilanting/following{/other_user}", "gists_url": "https://api.github.com/users/moshuilanting/gists{/gist_id}", "starred_url": "https://api.github.com/users/moshuilanting/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moshuilanting/subscriptions", "organizations_url": "https://api.github.com/users/moshuilanting/orgs", "repos_url": "https://api.github.com/users/moshuilanting/repos", "events_url": "https://api.github.com/users/moshuilanting/events{/privacy}", "received_events_url": "https://api.github.com/users/moshuilanting/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-23T03:40:51Z", "updated_at": "2018-01-24T01:31:43Z", "closed_at": "2018-01-24T01:31:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I used the vgg-net to do a classification task in GPU 980Ti , I trained the model  with the following code:\r\n\r\n```\r\nimport tflearn\r\nfrom tflearn.layers.core import input_data, dropout, fully_connected\r\nfrom tflearn.layers.conv import conv_2d, max_pool_2d\r\nfrom tflearn.layers.estimator import regression\r\nfrom tflearn.data_utils import image_preloader\r\n\r\ndataset_file = 'label.txt'\r\nX, Y = image_preloader(dataset_file, image_shape=(224, 224),   mode='file', categorical_labels=True,   normalize=True)\r\n\r\n# Building 'VGG Network'\r\nnetwork = input_data(shape=[None, 224, 224, 3])\r\n\r\nnetwork = conv_2d(network, 64, 3, activation='relu')\r\nnetwork = conv_2d(network, 64, 3, activation='relu')\r\nnetwork = max_pool_2d(network, 2, strides=2)\r\n\r\nnetwork = conv_2d(network, 128, 3, activation='relu')\r\nnetwork = conv_2d(network, 128, 3, activation='relu')\r\nnetwork = max_pool_2d(network, 2, strides=2)\r\n\r\nnetwork = conv_2d(network, 256, 3, activation='relu')\r\nnetwork = conv_2d(network, 256, 3, activation='relu')\r\nnetwork = conv_2d(network, 256, 3, activation='relu')\r\nnetwork = max_pool_2d(network, 2, strides=2)\r\n\r\nnetwork = conv_2d(network, 512, 3, activation='relu')\r\nnetwork = conv_2d(network, 512, 3, activation='relu')\r\nnetwork = conv_2d(network, 512, 3, activation='relu')\r\nnetwork = max_pool_2d(network, 2, strides=2)\r\nr\nnetwork = conv_2d(network, 512, 3, activation='relu')\r\nnetwork = conv_2d(network, 512, 3, activation='relu')\r\nnetwork = conv_2d(network, 512, 3, activation='relu')\r\nnetwork = max_pool_2d(network, 2, strides=2)\r\n\r\nnetwork = fully_connected(network, 4096, activation='relu')\r\nnetwork = dropout(network, 0.5)\r\nnetwork = fully_connected(network, 4096, activation='relu')\r\nnetwork = dropout(network, 0.5)\r\nnetwork = fully_connected(network, 121, activation='softmax')\r\n\r\nnetwork = regression(network, optimizer='rmsprop',\r\n                     loss='categorical_crossentropy',\r\n                     learning_rate=0.0001)\r\n\r\nmodel = tflearn.DNN(network, checkpoint_path='second/model_vgg',\r\n                    max_checkpoints=1, tensorboard_verbose=0)\r\nmodel.fit(X, Y, n_epoch=100, shuffle=True,\r\n          show_metric=True, batch_size=16, snapshot_step=1000,\r\n          snapshot_epoch=False, run_id='dog')\r\n\r\nmodel.save(\"dog.model\")              \r\n```       \r\n\r\nI got the three file _(dog.model.data-00000-of-00001,dog.model.index,dog.model.meta)_  under the current directory, but when I wanted to load the model with the following code,\r\n\r\n```\r\nimport tflearn\r\nfrom tflearn.layers.core import input_data, dropout, fully_connected\r\nfrom tflearn.layers.conv import conv_2d, max_pool_2d\r\nfrom tflearn.layers.estimator import regression\r\nfrom tflearn.data_utils import image_preloader\r\n\r\nX_test, Y_test = image_preloader('test_label.txt', image_shape=(224, 224),   mode='file', categorical_labels=True,   normalize=True)\r\n\r\n\r\nnetwork = input_data(shape=[None, 224, 224, 3])\r\n\r\nnetwork = conv_2d(network, 64, 3, activation='relu')\r\nnetwork = conv_2d(network, 64, 3, activation='relu')\r\nnetwork = max_pool_2d(network, 2, strides=2)\r\n\r\nnetwork = conv_2d(network, 128, 3, activation='relu')\r\nnetwork = conv_2d(network, 128, 3, activation='relu')\r\nnetwork = max_pool_2d(network, 2, strides=2)\r\n\r\nnetwork = conv_2d(network, 256, 3, activation='relu')\r\nnetwork = conv_2d(network, 256, 3, activation='relu')\r\nnetwork = conv_2d(network, 256, 3, activation='relu')\r\nnetwork = max_pool_2d(network, 2, strides=2)\r\n\r\nnetwork = conv_2d(network, 512, 3, activation='relu')\r\nnetwork = conv_2d(network, 512, 3, activation='relu')\r\nnetwork = conv_2d(network, 512, 3, activation='relu')\r\nnetwork = max_pool_2d(network, 2, strides=2)\r\n\r\nnetwork = conv_2d(network, 512, 3, activation='relu')\r\nnetwork = conv_2d(network, 512, 3, activation='relu')\r\nnetwork = conv_2d(network, 512, 3, activation='relu')\r\nnetwork = max_pool_2d(network, 2, strides=2)\r\n\r\nnetwork = fully_connected(network, 4096, activation='relu')\r\nnetwork = dropout(network, 0.5)\r\nnetwork = fully_connected(network, 4096, activation='relu')\r\nnetwork = dropout(network, 0.5)\r\nnetwork = fully_connected(network, 121, activation='softmax')\r\n\r\nnetwork = regression(network, optimizer='rmsprop',\r\n                     loss='categorical_crossentropy',\r\n                     learning_rate=0.0001)\r\n\r\n\r\nmodel = tflearn.DNN(network)\r\nmodel.load(\"dog.model\")\r\npred = model.predict(X_test[0])\r\nprint X_test[0]\r\n```\r\n\r\n\r\nI got the problem about the ResourceExhaustedError , following:\r\n\r\n```\r\nResourceExhaustedError                    Traceback (most recent call last)\r\n<ipython-input-1-a9aa1cfde330> in <module>()\r\n     47 \r\n     48 model = tflearn.DNN(network)\r\n---> 49 model.load(\"dog.model\")\r\n     50 pred = model.predict(X_test[0])\r\n     51 print X_test[0]\r\n\r\n/usr/local/lib/python2.7/dist-packages/tflearn/models/dnn.pyc in load(self, model_file, weights_only, **optargs)\r\n    306                      created for the restored variables.\r\n    307         \"\"\"\r\n--> 308         self.trainer.restore(model_file, weights_only, **optargs)\r\n    309         self.session = self.trainer.session\r\n    310         self.predictor = Evaluator([self.net],\r\n\r\n/usr/local/lib/python2.7/dist-packages/tflearn/helpers/trainer.pyc in restore(self, model_file, trainable_variable_only, variable_name_map, scope_for_restore, create_new_session, verbose)\r\n    455                                   tf.local_variables_initializer()])\r\n    456             except Exception:\r\n--> 457                 self.session.run(tf.initialize_all_variables())\r\n    458 \r\n    459         if scope_for_restore is not None:       # allow variables to be restored into a different scope\r\n\r\n/home/jtl/.local/lib/python2.7/site-packages/tensorflow/python/client/session.pyc in run(self, fetches, feed_dict, options, run_metadata)\r\n    887     try:\r\n    888       result = self._run(None, fetches, feed_dict, options_ptr,\r\n--> 889                          run_metadata_ptr)\r\n    890       if run_metadata:\r\n    891         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)\r\n\r\n/home/jtl/.local/lib/python2.7/site-packages/tensorflow/python/client/session.pyc in _run(self, handle, fetches, feed_dict, options, run_metadata)\r\n   1118     if final_fetches or final_targets or (handle and feed_dict_tensor):\r\n   1119       results = self._do_run(handle, final_targets, final_fetches,\r\n-> 1120                              feed_dict_tensor, options, run_metadata)\r\n   1121     else:\r\n   1122       results = []\r\n\r\n/home/jtl/.local/lib/python2.7/site-packages/tensorflow/python/client/session.pyc in _do_run(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\r\n   1315     if handle is None:\r\n   1316       return self._do_call(_run_fn, self._session, feeds, fetches, targets,\r\n-> 1317                            options, run_metadata)\r\n   1318     else:\r\n   1319       return self._do_call(_prun_fn, self._session, handle, feeds, fetches)\r\n\r\n/home/jtl/.local/lib/python2.7/site-packages/tensorflow/python/client/session.pyc in _do_call(self, fn, *args)\r\n   1334         except KeyError:\r\n   1335           pass\r\n-> 1336       raise type(e)(node_def, op, message)\r\n   1337 \r\n   1338   def _extend_graph(self):\r\n\r\nResourceExhaustedError: OOM when allocating tensor of shape [25088,4096] and type float\r\n\t [[Node: FullyConnected/W/RMSProp_1/Initializer/zeros = Const[_class=[\"loc:@FullyConnected/W\"], dtype=DT_FLOAT, value=Tensor<type: float shape: [25088,4096] values: [0 0 0]...>, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"]()]]\r\n\r\nCaused by op u'FullyConnected/W/RMSProp_1/Initializer/zeros', defined at:\r\n  File \"/usr/lib/python2.7/runpy.py\", line 174, in _run_module_as_main\r\n    \"__main__\", fname, loader, pkg_name)\r\n  File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code\r\n    exec code in run_globals\r\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel_launcher.py\", line 16, in <module>\r\n    app.launch_new_instance()\r\n  File \"/usr/local/lib/python2.7/dist-packages/traitlets/config/application.py\", line 658, in launch_instance\r\n    app.start()\r\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel/kernelapp.py\", line 477, in start\r\n    ioloop.IOLoop.instance().start()\r\n  File \"/usr/local/lib/python2.7/dist-packages/zmq/eventloop/ioloop.py\", line 177, in start\r\n    super(ZMQIOLoop, self).start()\r\n  File \"/usr/local/lib/python2.7/dist-packages/tornado/ioloop.py\", line 888, in start\r\n    handler_func(fd_obj, events)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tornado/stack_context.py\", line 277, in null_wrapper\r\n    return fn(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/zmq/eventloop/zmqstream.py\", line 440, in _handle_events\r\n    self._handle_recv()\r\n  File \"/usr/local/lib/python2.7/dist-packages/zmq/eventloop/zmqstream.py\", line 472, in _handle_recv\r\n    self._run_callback(callback, msg)\r\n  File \"/usr/local/lib/python2.7/dist-packages/zmq/eventloop/zmqstream.py\", line 414, in _run_callback\r\n    callback(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tornado/stack_context.py\", line 277, in null_wrapper\r\n    return fn(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel/kernelbase.py\", line 283, in dispatcher\r\n    return self.dispatch_shell(stream, msg)\r\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel/kernelbase.py\", line 235, in dispatch_shell\r\n    handler(stream, idents, msg)\r\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel/kernelbase.py\", line 399, in execute_request\r\n    user_expressions, allow_stdin)\r\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel/ipkernel.py\", line 196, in do_execute\r\n    res = shell.run_cell(code, store_history=store_history, silent=silent)\r\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel/zmqshell.py\", line 533, in run_cell\r\n    return super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/IPython/core/interactiveshell.py\", line 2718, in run_cell\r\n    interactivity=interactivity, compiler=compiler, result=result)\r\n  File \"/usr/local/lib/python2.7/dist-packages/IPython/core/interactiveshell.py\", line 2822, in run_ast_nodes\r\n    if self.run_code(code, result):\r\n  File \"/usr/local/lib/python2.7/dist-packages/IPython/core/interactiveshell.py\", line 2882, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-1-a9aa1cfde330>\", line 48, in <module>\r\n    model = tflearn.DNN(network)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tflearn/models/dnn.py\", line 65, in __init__\r\n    best_val_accuracy=best_val_accuracy)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tflearn/helpers/trainer.py\", line 131, in __init__\r\n    clip_gradients)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tflearn/helpers/trainer.py\", line 706, in initialize_training_ops\r\n    name=\"apply_grad_op_\" + str(i))\r\n  File \"/home/jtl/.local/lib/python2.7/site-packages/tensorflow/python/training/optimizer.py\", line 474, in apply_gradients\r\n    self._create_slots([_get_variable_for(v) for v in var_list])\r\n  File \"/home/jtl/.local/lib/python2.7/site-packages/tensorflow/python/training/rmsprop.py\", line 111, in _create_slots\r\n    self._zeros_slot(v, \"momentum\", self._name)\r\n  File \"/home/jtl/.local/lib/python2.7/site-packages/tensorflow/python/training/optimizer.py\", line 796, in _zeros_slot\r\n    named_slots[_var_key(var)] = slot_creator.create_zeros_slot(var, op_name)\r\n  File \"/home/jtl/.local/lib/python2.7/site-packages/tensorflow/python/training/slot_creator.py\", line 174, in create_zeros_slot\r\n    colocate_with_primary=colocate_with_primary)\r\n  File \"/home/jtl/.local/lib/python2.7/site-packages/tensorflow/python/training/slot_creator.py\", line 148, in create_slot_with_initializer\r\n    dtype)\r\n  File \"/home/jtl/.local/lib/python2.7/site-packages/tensorflow/python/training/slot_creator.py\", line 67, in _create_slot_var\r\n    validate_shape=validate_shape)\r\n  File \"/home/jtl/.local/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 1203, in get_variable\r\n    constraint=constraint)\r\n  File \"/home/jtl/.local/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 1092, in get_variable\r\n    constraint=constraint)\r\n  File \"/home/jtl/.local/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 425, in get_variable\r\n    constraint=constraint)\r\n  File \"/home/jtl/.local/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 394, in _true_getter\r\n    use_resource=use_resource, constraint=constraint)\r\n  File \"/home/jtl/.local/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 805, in _get_single_variable\r\n    constraint=constraint)\r\n  File \"/home/jtl/.local/lib/python2.7/site-packages/tensorflow/python/ops/variables.py\", line 213, in __init__\r\n    constraint=constraint)\r\n  File \"/home/jtl/.local/lib/python2.7/site-packages/tensorflow/python/ops/variables.py\", line 303, in _init_from_args\r\n    initial_value(), name=\"initial_value\", dtype=dtype)\r\n  File \"/home/jtl/.local/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 779, in <lambda>\r\n    shape.as_list(), dtype=dtype, partition_info=partition_info)\r\n  File \"/home/jtl/.local/lib/python2.7/site-packages/tensorflow/python/ops/init_ops.py\", line 93, in __call__\r\n    return array_ops.zeros(shape, dtype)\r\n  File \"/home/jtl/.local/lib/python2.7/site-packages/tensorflow/python/ops/array_ops.py\", line 1439, in zeros\r\n    output = constant(zero, shape=shape, dtype=dtype, name=name)\r\n  File \"/home/jtl/.local/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.py\", line 214, in constant\r\n    name=name).outputs[0]\r\n  File \"/home/jtl/.local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2956, in create_op\r\n    op_def=op_def)\r\n  File \"/home/jtl/.local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1470, in __init__\r\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\nResourceExhaustedError (see above for traceback): OOM when allocating tensor of shape [25088,4096] and type float\r\n\t [[Node: FullyConnected/W/RMSProp_1/Initializer/zeros = Const[_class=[\"loc:@FullyConnected/W\"], dtype=DT_FLOAT, value=Tensor<type: float shape: [25088,4096] values: [0 0 0]...>, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"]()]]\r\n```\r\n\r\n\r\nI find some answer about ResourceExhaustedError,looks like the problems about GPU capacity,however, I can't understand why I can't load the model which was trained by my compuer. I am a new person for using  tensorflow and tflearn.\r\n\r\nCan you help me , and tell me how to solve it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/978", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/978/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/978/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/978/events", "html_url": "https://github.com/tflearn/tflearn/issues/978", "id": 281645012, "node_id": "MDU6SXNzdWUyODE2NDUwMTI=", "number": 978, "title": "\"RecursionError: maximum recursion depth exceeded while calling a Python object\" when using tflearn Trainer", "user": {"login": "selcouthlyBlue", "id": 13268675, "node_id": "MDQ6VXNlcjEzMjY4Njc1", "avatar_url": "https://avatars2.githubusercontent.com/u/13268675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/selcouthlyBlue", "html_url": "https://github.com/selcouthlyBlue", "followers_url": "https://api.github.com/users/selcouthlyBlue/followers", "following_url": "https://api.github.com/users/selcouthlyBlue/following{/other_user}", "gists_url": "https://api.github.com/users/selcouthlyBlue/gists{/gist_id}", "starred_url": "https://api.github.com/users/selcouthlyBlue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/selcouthlyBlue/subscriptions", "organizations_url": "https://api.github.com/users/selcouthlyBlue/orgs", "repos_url": "https://api.github.com/users/selcouthlyBlue/repos", "events_url": "https://api.github.com/users/selcouthlyBlue/events{/privacy}", "received_events_url": "https://api.github.com/users/selcouthlyBlue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-13T07:04:10Z", "updated_at": "2018-01-26T06:15:45Z", "closed_at": "2018-01-26T06:15:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I followed the [example](https://github.com/tflearn/tflearn/blob/master/examples/extending_tensorflow/trainer.py) in using TFLearn's Trainer class to be able to train your own models not covered by TFLearn. Thus me having this code:\r\n\r\n```\r\nimport dataset_utils\r\nimport tensorflow as tf\r\nimport tflearn\r\n\r\nfrom tensorflow.contrib import grid_rnn\r\n\r\n\r\ndef main(_):\r\n    image_paths, labels = dataset_utils.read_dataset_list('../test/dummy_labels_file.txt')\r\n    data_dir = \"../test/dummy_data/\"\r\n    images = dataset_utils.read_images(data_dir=data_dir, image_paths=image_paths, image_extension='png')\r\n    print('Done reading images')\r\n    images = dataset_utils.resize(images, (1596, 48))\r\n    images = dataset_utils.transpose(images)\r\n    labels = dataset_utils.encode(labels)\r\n    x_train, x_test, y_train, y_test = dataset_utils.split(features=images, test_size=0.5, labels=labels)\r\n    y_train = dataset_utils.convert_to_sparse(y_train)\r\n    y_test = dataset_utils.convert_to_sparse(y_test)\r\n\r\n    with tf.Graph().as_default():\r\n        X = tf.placeholder(tf.float32, [None, None, 48])\r\n        Y = tf.sparse_placeholder(tf.int32)\r\n        seq_lens = tf.placeholder(tf.int32, [None])\r\n\r\n        def dnn(x):\r\n            cell_fw = grid_rnn.Grid2LSTMCell(num_units=128)\r\n            cell_bw = grid_rnn.Grid2LSTMCell(num_units=128)\r\n            bidirectional_grid_rnn = tf.nn.bidirectional_dynamic_rnn(cell_fw, cell_bw, x, dtype=tf.float32)\r\n            outputs = tf.reshape(bidirectional_grid_rnn[0], [-1, 256])\r\n\r\n            W = tf.Variable(tf.truncated_normal([256,\r\n                                                 80],\r\n                                                stddev=0.1, dtype=tf.float32), name='W')\r\n            b = tf.Variable(tf.constant(0., dtype=tf.float32, shape=[80], name='b'))\r\n\r\n            logits = tf.matmul(outputs, W) + b\r\n            logits = tf.reshape(logits, [tf.shape(x)[0], -1, 80])\r\n            logits = tf.transpose(logits, (1, 0, 2))\r\n            return logits\r\n\r\n        net = dnn(X)\r\n        decoded, _ = tf.nn.ctc_beam_search_decoder(net, seq_lens, merge_repeated=False)\r\n        cost = tf.reduce_mean(tf.nn.ctc_loss(inputs=net, labels=Y, sequence_length=seq_lens))\r\n        optimizer = tf.train.MomentumOptimizer(learning_rate=0.001, momentum=0.5)\r\n        label_error_rate = tf.reduce_mean(tf.edit_distance(tf.cast(decoded[0], tf.int32), Y))\r\n\r\n        train_op = tflearn.TrainOp(loss=cost, optimizer=optimizer, metric=label_error_rate, batch_size=1)\r\n        trainer = tflearn.Trainer(train_ops=train_op, tensorboard_verbose=0)\r\n\r\n        trainer.fit({X: x_train, Y: y_train, seq_lens: dataset_utils.get_seq_lens(x_train)},\r\n                    val_feed_dicts={X: x_test, Y: y_test, seq_lens: dataset_utils.get_seq_lens(x_test)},\r\n                    n_epoch=1,\r\n                    show_metric=True)\r\n\r\n\r\nif __name__ == '__main__':\r\n    tf.app.run(main=main)\r\n```\r\n\r\nUnfortunately, when I run the code, it throws a `RecursionError` and I want to figure out how to fix it. To reproduce it, simply clone this [repository](https://github.com/selcouthlyBlue/simplified_bi_lstm_ocr) run train_using_tflearn_trainer.py.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/976", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/976/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/976/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/976/events", "html_url": "https://github.com/tflearn/tflearn/issues/976", "id": 281318983, "node_id": "MDU6SXNzdWUyODEzMTg5ODM=", "number": 976, "title": "Bidirectional rnn Throws Shape Error", "user": {"login": "selcouthlyBlue", "id": 13268675, "node_id": "MDQ6VXNlcjEzMjY4Njc1", "avatar_url": "https://avatars2.githubusercontent.com/u/13268675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/selcouthlyBlue", "html_url": "https://github.com/selcouthlyBlue", "followers_url": "https://api.github.com/users/selcouthlyBlue/followers", "following_url": "https://api.github.com/users/selcouthlyBlue/following{/other_user}", "gists_url": "https://api.github.com/users/selcouthlyBlue/gists{/gist_id}", "starred_url": "https://api.github.com/users/selcouthlyBlue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/selcouthlyBlue/subscriptions", "organizations_url": "https://api.github.com/users/selcouthlyBlue/orgs", "repos_url": "https://api.github.com/users/selcouthlyBlue/repos", "events_url": "https://api.github.com/users/selcouthlyBlue/events{/privacy}", "received_events_url": "https://api.github.com/users/selcouthlyBlue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-12T09:48:18Z", "updated_at": "2018-11-25T11:31:05Z", "closed_at": "2017-12-13T01:36:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm not sure if this is similar to this [issue](https://github.com/tflearn/tflearn/issues/818) but I encountered this error when I'm using tflearn's bidirectional_rnn:\r\n\r\n`ValueError: Shape (48, ?) must have rank at least 3`\r\n\r\nHere's the relevant code:\r\n\r\n```\r\nself.inputs = network_utils.input_data([None, self.num_time_steps, self.input_dimension], name=\"input\")\r\n... # label placeholders and whatnot\r\nmodel = tflearn.input_data([None, 1596, 48])\r\nmodel = bidirectional_rnn(model, BasicLSTMCell(50), BasicLSTMCell(50), return_seq=True)\r\n... # loss and stuff\r\n```\r\n\r\nI'm using tensorflow 1.4 and tflearn 0.3.2\r\n\r\nIf you want to reproduce the error yourself, you can clone this [repository](https://github.com/selcouthlyBlue/simplified_bi_lstm_ocr) and run train.py\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/962", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/962/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/962/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/962/events", "html_url": "https://github.com/tflearn/tflearn/issues/962", "id": 275230807, "node_id": "MDU6SXNzdWUyNzUyMzA4MDc=", "number": 962, "title": "Input Formay", "user": {"login": "GaryGao829", "id": 4152364, "node_id": "MDQ6VXNlcjQxNTIzNjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/4152364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GaryGao829", "html_url": "https://github.com/GaryGao829", "followers_url": "https://api.github.com/users/GaryGao829/followers", "following_url": "https://api.github.com/users/GaryGao829/following{/other_user}", "gists_url": "https://api.github.com/users/GaryGao829/gists{/gist_id}", "starred_url": "https://api.github.com/users/GaryGao829/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GaryGao829/subscriptions", "organizations_url": "https://api.github.com/users/GaryGao829/orgs", "repos_url": "https://api.github.com/users/GaryGao829/repos", "events_url": "https://api.github.com/users/GaryGao829/events{/privacy}", "received_events_url": "https://api.github.com/users/GaryGao829/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-20T03:58:19Z", "updated_at": "2017-11-20T14:49:50Z", "closed_at": "2017-11-20T14:49:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys, I'm trying to use this example(VGG16) as a transfer learning research. I found that in the Oxford flower project, you are using pickle to load data. I wonder whether there's a way to load data like Tensorflow style? I mean read path/to/image01.jpg from a txt-like file\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/957", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/957/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/957/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/957/events", "html_url": "https://github.com/tflearn/tflearn/issues/957", "id": 273852480, "node_id": "MDU6SXNzdWUyNzM4NTI0ODA=", "number": 957, "title": "Cannot Load Model", "user": {"login": "abtpst", "id": 4314840, "node_id": "MDQ6VXNlcjQzMTQ4NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4314840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abtpst", "html_url": "https://github.com/abtpst", "followers_url": "https://api.github.com/users/abtpst/followers", "following_url": "https://api.github.com/users/abtpst/following{/other_user}", "gists_url": "https://api.github.com/users/abtpst/gists{/gist_id}", "starred_url": "https://api.github.com/users/abtpst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abtpst/subscriptions", "organizations_url": "https://api.github.com/users/abtpst/orgs", "repos_url": "https://api.github.com/users/abtpst/repos", "events_url": "https://api.github.com/users/abtpst/events{/privacy}", "received_events_url": "https://api.github.com/users/abtpst/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-14T16:18:27Z", "updated_at": "2017-11-14T20:59:59Z", "closed_at": "2017-11-14T20:59:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to train, save and load a tensorflow model using tflearn\r\n\r\n    \r\n            # Building convolutional network\r\n    \r\n            network = input_data(shape=[None, imageSize, imageSize, 1], name='input')\r\n            network = conv_2d(network, imageSize, self.windowSize, activation='relu', regularizer=\"L2\")\r\n            network = max_pool_2d(network, 2)\r\n            network = local_response_normalization(network)\r\n            network = conv_2d(network, imageSize * 2, self.windowSize, activation='relu', regularizer=\"L2\")\r\n            network = max_pool_2d(network, 2)\r\n            network = local_response_normalization(network)\r\n            network = fully_connected(network, (dim4 * dim4) * (imageSize * 2), activation='tanh')\r\n            network = dropout(network, keep)\r\n            network = fully_connected(network, (dim4 * dim4) * (imageSize * 2), activation='tanh')\r\n            network = dropout(network, keep)\r\n            network = fully_connected(network, n_classes, activation='softmax')\r\n            network = regression(network, optimizer='adam', learning_rate=self.learningRate,\r\n                                    loss='categorical_crossentropy', name='target')\r\n        \r\n            model = tflearn.DNN(network, tensorboard_verbose=0, tensorboard_dir='some/dir')\r\n            model.fit(\r\n    \r\n                {'input': np.array(myData.train_x).reshape(-1, self.imageSize, self.imageSize, 1)}, {'target': myData.train_y}, n_epoch=self.epochs,\r\n    \r\n                validation_set=(\r\n                    {'input': np.array(myData.test_x).reshape(-1, self.imageSize, self.imageSize, 1)},\r\n                {'target': myData.test_y}),\r\n            snapshot_step=100, show_metric=True, run_id='convnet')\r\n            model.save(\"some/path/model\")\r\n\r\nthis part works. next, i do\r\n           \r\n            model_path = \"some/path/model.meta\"\r\n            \r\n            if os.path.exists(model_path):\r\n                model.load(model_path)\r\n            else :\r\n                return \"need to train the model\"\r\n            \r\n            prediction = self.model.predict([<some_input>])\r\n            print(str(prediction))\r\n            return prediction\r\n\r\nthis fails at `model.load(model_path)`. I get the following error trace\r\n\r\n    DataLossError (see above for traceback): Unable to open table file some/path/model.meta: Data loss: not an sstable (bad magic number): perhaps your file is in a different file format and you need to use a different restore operator?\r\n    \t [[Node: save_5/RestoreV2_4 = RestoreV2[dtypes=[DT_FLOAT], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](_arg_save_5/Const_0_0, save_5/RestoreV2_4/tensor_names, save_5/RestoreV2_4/shape_and_slices)]]\r\n    Caused by op 'save_5/RestoreV2_4', defined at:\r\nwhat is meant by\r\n\r\n    Data loss: not an sstable (bad magic number): perhaps your file is in a different file format and you need to use a different restore operator?\r\n\r\nI can see that the model is indeed saved properly and is not an empty file. Why cant i load it?\r\nWhat am i doing wrong? Is there something in the name of the model? Do I need to have a certain extension?\r\n\r\nI have even tried changing the folder but it does not work.\r\n\r\nVersion Information\r\n\r\n    tensorflow==1.4.0\r\n    tensorflow-tensorboard==0.4.0rc2\r\n    tflearn==0.3.2\r\n    Python 3.6.3 :: Anaconda, Inc.\r\n    MAC OS Sierra\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/946", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/946/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/946/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/946/events", "html_url": "https://github.com/tflearn/tflearn/issues/946", "id": 269788976, "node_id": "MDU6SXNzdWUyNjk3ODg5NzY=", "number": 946, "title": "Can't visualize the event on tensorboard", "user": {"login": "egg-west", "id": 27271284, "node_id": "MDQ6VXNlcjI3MjcxMjg0", "avatar_url": "https://avatars2.githubusercontent.com/u/27271284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/egg-west", "html_url": "https://github.com/egg-west", "followers_url": "https://api.github.com/users/egg-west/followers", "following_url": "https://api.github.com/users/egg-west/following{/other_user}", "gists_url": "https://api.github.com/users/egg-west/gists{/gist_id}", "starred_url": "https://api.github.com/users/egg-west/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/egg-west/subscriptions", "organizations_url": "https://api.github.com/users/egg-west/orgs", "repos_url": "https://api.github.com/users/egg-west/repos", "events_url": "https://api.github.com/users/egg-west/events{/privacy}", "received_events_url": "https://api.github.com/users/egg-west/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-30T23:41:11Z", "updated_at": "2018-03-01T08:48:08Z", "closed_at": "2017-11-01T13:17:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does it not work because I use tensorflow1.3 ?\r\nI found there are event file in a directory in tflearn_logs, but I open tensorboard and get nothing.\r\nThanks to everybody sees this issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/933", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/933/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/933/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/933/events", "html_url": "https://github.com/tflearn/tflearn/issues/933", "id": 265102422, "node_id": "MDU6SXNzdWUyNjUxMDI0MjI=", "number": 933, "title": "Predict image and get softmax output", "user": {"login": "druedaplata", "id": 3858537, "node_id": "MDQ6VXNlcjM4NTg1Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3858537?v=4", "gravatar_id": "", "url": "https://api.github.com/users/druedaplata", "html_url": "https://github.com/druedaplata", "followers_url": "https://api.github.com/users/druedaplata/followers", "following_url": "https://api.github.com/users/druedaplata/following{/other_user}", "gists_url": "https://api.github.com/users/druedaplata/gists{/gist_id}", "starred_url": "https://api.github.com/users/druedaplata/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/druedaplata/subscriptions", "organizations_url": "https://api.github.com/users/druedaplata/orgs", "repos_url": "https://api.github.com/users/druedaplata/repos", "events_url": "https://api.github.com/users/druedaplata/events{/privacy}", "received_events_url": "https://api.github.com/users/druedaplata/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-12T22:02:07Z", "updated_at": "2017-10-18T14:33:04Z", "closed_at": "2017-10-18T14:33:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "In tflearn I have seen we can predict an image and we get a one_hot vector as a prediction [0, 0, 0, 1].\r\n\r\nI would like to actually get the softmax output where all values add up to 1 such as [0.1, 0.7, 0.1, 0.1]\r\n\r\nI haven't found a way to get this using tflearn.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/930", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/930/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/930/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/930/events", "html_url": "https://github.com/tflearn/tflearn/issues/930", "id": 264568031, "node_id": "MDU6SXNzdWUyNjQ1NjgwMzE=", "number": 930, "title": "Import takes 5-8 seconds", "user": {"login": "jspayneii", "id": 31096706, "node_id": "MDQ6VXNlcjMxMDk2NzA2", "avatar_url": "https://avatars2.githubusercontent.com/u/31096706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jspayneii", "html_url": "https://github.com/jspayneii", "followers_url": "https://api.github.com/users/jspayneii/followers", "following_url": "https://api.github.com/users/jspayneii/following{/other_user}", "gists_url": "https://api.github.com/users/jspayneii/gists{/gist_id}", "starred_url": "https://api.github.com/users/jspayneii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jspayneii/subscriptions", "organizations_url": "https://api.github.com/users/jspayneii/orgs", "repos_url": "https://api.github.com/users/jspayneii/repos", "events_url": "https://api.github.com/users/jspayneii/events{/privacy}", "received_events_url": "https://api.github.com/users/jspayneii/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-11T12:32:23Z", "updated_at": "2017-10-22T11:08:51Z", "closed_at": "2017-10-22T11:08:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Why does the tflearn import take 5-8 seconds while the tensorflow import takes less than a second?  I have tried it on multiple machines and multiple OS's (Ubuntu, Mac OSx, Centos).  Is there something I am doing wrong?\r\n\r\nos, numpy, pandas: 0.439 secs\r\nTensorFlow: 0.831 secs\r\nTFLearn: 7.601 secs", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/922", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/922/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/922/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/922/events", "html_url": "https://github.com/tflearn/tflearn/issues/922", "id": 263098975, "node_id": "MDU6SXNzdWUyNjMwOTg5NzU=", "number": 922, "title": "How to collect ouput of a layer?", "user": {"login": "bhaskar-dhariyal", "id": 20501023, "node_id": "MDQ6VXNlcjIwNTAxMDIz", "avatar_url": "https://avatars2.githubusercontent.com/u/20501023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhaskar-dhariyal", "html_url": "https://github.com/bhaskar-dhariyal", "followers_url": "https://api.github.com/users/bhaskar-dhariyal/followers", "following_url": "https://api.github.com/users/bhaskar-dhariyal/following{/other_user}", "gists_url": "https://api.github.com/users/bhaskar-dhariyal/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhaskar-dhariyal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhaskar-dhariyal/subscriptions", "organizations_url": "https://api.github.com/users/bhaskar-dhariyal/orgs", "repos_url": "https://api.github.com/users/bhaskar-dhariyal/repos", "events_url": "https://api.github.com/users/bhaskar-dhariyal/events{/privacy}", "received_events_url": "https://api.github.com/users/bhaskar-dhariyal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-05T11:58:51Z", "updated_at": "2019-04-24T10:45:07Z", "closed_at": "2019-04-24T10:45:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "How do I get collect after the maxpool layer? I want to randomly initialise weights and pass it through my customised error function and optimiser to hardcode my FC layer.\r\n```\r\n[from __future__ import division, print_function, absolute_import\r\n\r\nimport tensorflow as tf\r\nimport tflearn\r\nfrom tflearn.layers.core import input_data, dropout, fully_connected\r\nfrom tflearn.layers.conv import conv_1d, global_max_pool\r\nfrom tflearn.layers.merge_ops import merge\r\nfrom tflearn.layers.estimator import regression\r\nfrom tflearn.data_utils import to_categorical, pad_sequences\r\nfrom tflearn.datasets import imdb\r\n\r\n# IMDB Dataset loading\r\ntrain, test, _ = imdb.load_data(path='imdb.pkl', n_words=10000,\r\n                                valid_portion=0.1)\r\ntrainX, trainY = train\r\ntestX, testY = test\r\n\r\n# Data preprocessing\r\n# Sequence padding\r\ntrainX = pad_sequences(trainX, maxlen=100, value=0.)\r\ntestX = pad_sequences(testX, maxlen=100, value=0.)\r\n# Converting labels to binary vectors\r\ntrainY = to_categorical(trainY, nb_classes=2)\r\ntestY = to_categorical(testY, nb_classes=2)\r\n\r\n# Building convolutional network\r\nnetwork = input_data(shape=[None, 100], name='input')\r\nnetwork = tflearn.embedding(network, input_dim=10000, output_dim=128)\r\nbranch1 = conv_1d(network, 128, 3, padding='valid', activation='relu', regularizer=\"L2\")\r\nbranch2 = conv_1d(network, 128, 4, padding='valid', activation='relu', regularizer=\"L2\")\r\nbranch3 = conv_1d(network, 128, 5, padding='valid', activation='relu', regularizer=\"L2\")\r\nnetwork = merge([branch1, branch2, branch3], mode='concat', axis=1)\r\nnetwork = tf.expand_dims(network, 2)\r\nnetwork = global_max_pool(network)\r\nnetwork = dropout(network, 0.5)\r\n#-----Require ouput here\r\nnetwork = fully_connected(network, 2, activation='softmax')\r\nnetwork = regression(network, optimizer='adam', learning_rate=0.001,\r\n                     loss='categorical_crossentropy', name='target')\r\n# Training\r\nmodel = tflearn.DNN(network, tensorboard_verbose=0)\r\nmodel.fit(trainX, trainY, n_epoch = 5, shuffle=True, validation_set=(testX, testY), show_metric=True, batch_size=32)](url)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/915", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/915/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/915/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/915/events", "html_url": "https://github.com/tflearn/tflearn/issues/915", "id": 260260052, "node_id": "MDU6SXNzdWUyNjAyNjAwNTI=", "number": 915, "title": "model.load closes session.", "user": {"login": "r3db", "id": 9978724, "node_id": "MDQ6VXNlcjk5Nzg3MjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/9978724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r3db", "html_url": "https://github.com/r3db", "followers_url": "https://api.github.com/users/r3db/followers", "following_url": "https://api.github.com/users/r3db/following{/other_user}", "gists_url": "https://api.github.com/users/r3db/gists{/gist_id}", "starred_url": "https://api.github.com/users/r3db/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r3db/subscriptions", "organizations_url": "https://api.github.com/users/r3db/orgs", "repos_url": "https://api.github.com/users/r3db/repos", "events_url": "https://api.github.com/users/r3db/events{/privacy}", "received_events_url": "https://api.github.com/users/r3db/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-25T12:36:23Z", "updated_at": "2017-09-25T13:14:02Z", "closed_at": "2017-09-25T13:14:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "tensorflow: 1.1.0\r\ntflearn: 0.3.2\r\n\r\n---\r\n\r\nI've noticed that `model.load()` closes the current session.\r\nThis code:\r\n\r\n```python\r\nwith tf.Session() as sess:\r\n    # Create a model\r\n    model = tflearn.DNN(network, tensorboard_verbose=0, session=sess)\r\n    sess.run(tf.global_variables_initializer())\r\n    \r\n    # Offending Code\r\n    model.load(\"graph.chkp\")\r\n\r\n    # Cannot run this line\r\n    print(sess.run(tf.add(5, 6)))\r\n```\r\n\r\nRaises the following error:\r\n`RuntimeError: Attempted to use a closed Session.`\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 132, in <module>\r\n    print(sess.run(tf.add(5, 6)))\r\n  File \"C:\\ProgramData\\Anaconda3\\envs\\tf\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1214, in __exit__\r\n    exec_type, exec_value, exec_tb)\r\n  File \"C:\\ProgramData\\Anaconda3\\envs\\tf\\lib\\contextlib.py\", line 77, in __exit__\r\n    self.gen.throw(type, value, traceback)\r\n  File \"C:\\ProgramData\\Anaconda3\\envs\\tf\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 3625, in get_controller\r\n    yield default\r\n  File \"detection.py\", line 132, in <module>\r\n    print(sess.run(tf.add(5, 6)))\r\n  File \"C:\\ProgramData\\Anaconda3\\envs\\tf\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 778, in run\r\n    run_metadata_ptr)\r\n  File \"C:\\ProgramData\\Anaconda3\\envs\\tf\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 914, in _run\r\n    raise RuntimeError('Attempted to use a closed Session.')\r\nRuntimeError: Attempted to use a closed Session.\r\n```\r\n\r\nif I comment `model.load(\"graph.chkp\")` then it runs fine.\r\n\r\nIs this a bug or am I doing anything wrong?\r\nThe reason I need the session is to later freeze the network.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/914", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/914/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/914/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/914/events", "html_url": "https://github.com/tflearn/tflearn/issues/914", "id": 260090935, "node_id": "MDU6SXNzdWUyNjAwOTA5MzU=", "number": 914, "title": "how can i use data augmentation", "user": {"login": "fffupeng", "id": 20182561, "node_id": "MDQ6VXNlcjIwMTgyNTYx", "avatar_url": "https://avatars2.githubusercontent.com/u/20182561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fffupeng", "html_url": "https://github.com/fffupeng", "followers_url": "https://api.github.com/users/fffupeng/followers", "following_url": "https://api.github.com/users/fffupeng/following{/other_user}", "gists_url": "https://api.github.com/users/fffupeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/fffupeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fffupeng/subscriptions", "organizations_url": "https://api.github.com/users/fffupeng/orgs", "repos_url": "https://api.github.com/users/fffupeng/repos", "events_url": "https://api.github.com/users/fffupeng/events{/privacy}", "received_events_url": "https://api.github.com/users/fffupeng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-24T14:57:14Z", "updated_at": "2017-09-28T02:20:55Z", "closed_at": "2017-09-28T02:20:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have noticed that \r\nfrom tflearn.data_augmentation import ImageAugmentation\r\nhas provided an method to get data augmentation, but how can i use it, when i am training my net\uff1f\r\nFor example i read data from jpgs:\r\nimgs,labels = image_preloader(dataset_file, image_shape=(224, 224),   mode='file', categorical_labels=True, normalize=True)\r\nhow can i use data augmentation?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/909", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/909/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/909/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/909/events", "html_url": "https://github.com/tflearn/tflearn/issues/909", "id": 259100837, "node_id": "MDU6SXNzdWUyNTkxMDA4Mzc=", "number": 909, "title": "AttributeError: 'Tensor' object has no attribute 'initialized_value'", "user": {"login": "TrinhNC", "id": 19979949, "node_id": "MDQ6VXNlcjE5OTc5OTQ5", "avatar_url": "https://avatars2.githubusercontent.com/u/19979949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TrinhNC", "html_url": "https://github.com/TrinhNC", "followers_url": "https://api.github.com/users/TrinhNC/followers", "following_url": "https://api.github.com/users/TrinhNC/following{/other_user}", "gists_url": "https://api.github.com/users/TrinhNC/gists{/gist_id}", "starred_url": "https://api.github.com/users/TrinhNC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TrinhNC/subscriptions", "organizations_url": "https://api.github.com/users/TrinhNC/orgs", "repos_url": "https://api.github.com/users/TrinhNC/repos", "events_url": "https://api.github.com/users/TrinhNC/events{/privacy}", "received_events_url": "https://api.github.com/users/TrinhNC/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-20T09:36:38Z", "updated_at": "2017-09-22T14:28:24Z", "closed_at": "2017-09-22T14:28:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using [AlexNet model][1] to train a network for grasp detection. The code is [here][2], link to a small dataset for trial is in README. Basically, I created a customized metric using tensorflow and used it for validation. However, when I start training, this error shows up: \r\n\r\n    File \"gnet.py\", line 59, in <module>\r\n        max_checkpoints=1, tensorboard_verbose=0)\r\n      File \"/usr/local/lib/python2.7/dist-packages/tflearn/models/dnn.py\", line 65, in __init__\r\n        best_val_accuracy=best_val_accuracy)\r\n      File \"/usr/local/lib/python2.7/dist-packages/tflearn/helpers/trainer.py\", line 131, in __init__\r\n        clip_gradients)\r\n      File \"/usr/local/lib/python2.7/dist-packages/tflearn/helpers/trainer.py\", line 675, in initialize_training_ops\r\n        acc_avg_op = self.acc_averages.apply([self.metric])\r\n      File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/moving_averages.py\", line 375, in apply\r\n        colocate_with_primary=(var.op.type in [\"Variable\", \"VariableV2\"]))\r\n      File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/slot_creator.py\", line 169, in create_zeros_slot\r\n        else array_ops.shape(primary.initialized_value()))\r\n    AttributeError: 'Tensor' object has no attribute 'initialized_value'\r\n\r\nI have upgraded Tensorflow (v1.3) but the error is still there. Could someone please take a look and give me some suggestions? Thank you very much in advance!\r\n\r\n  [1]: https://github.com/tflearn/tflearn/blob/master/examples/images/alexnet.py\r\n  [2]: https://github.com/TrinhTUHH/GraspNet", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/906", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/906/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/906/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/906/events", "html_url": "https://github.com/tflearn/tflearn/issues/906", "id": 258015537, "node_id": "MDU6SXNzdWUyNTgwMTU1Mzc=", "number": 906, "title": "visualize the DNN error with tensorboard_berbose = 3", "user": {"login": "Fankbai", "id": 10338671, "node_id": "MDQ6VXNlcjEwMzM4Njcx", "avatar_url": "https://avatars2.githubusercontent.com/u/10338671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Fankbai", "html_url": "https://github.com/Fankbai", "followers_url": "https://api.github.com/users/Fankbai/followers", "following_url": "https://api.github.com/users/Fankbai/following{/other_user}", "gists_url": "https://api.github.com/users/Fankbai/gists{/gist_id}", "starred_url": "https://api.github.com/users/Fankbai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Fankbai/subscriptions", "organizations_url": "https://api.github.com/users/Fankbai/orgs", "repos_url": "https://api.github.com/users/Fankbai/repos", "events_url": "https://api.github.com/users/Fankbai/events{/privacy}", "received_events_url": "https://api.github.com/users/Fankbai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-15T11:56:29Z", "updated_at": "2017-09-19T00:55:20Z", "closed_at": "2017-09-19T00:55:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "** code  :**\r\n```python\r\nmodel = tflearn.DNN(net, tensorboard_verbose = 3)\r\n```\r\nBUT TENSORBOARD SHOWS NOTHING(PIC 3 ) WHILE THE FOLDER WAS GOT THE events FILE LIKE PIC2. I TRY \r\n```powershell\r\ntensorboard.exe --inspect  --event_file = E:\\tmp\\tflearn_logs\\835CJT\\\r\n```\r\nRETURN LIKE PIC 1\r\n![2017-09-15_193327](https://user-images.githubusercontent.com/10338671/30480806-2f8a9a04-9a0b-11e7-9bff-1ac9ad66b76d.jpg)    \r\nPIC 1\r\n\r\n![2017-09-15_193537](https://user-images.githubusercontent.com/10338671/30480810-324effe6-9a0b-11e7-9c80-6cc14584a06f.jpg)   \r\n PIC2\r\n![2017-09-15_193756](https://user-images.githubusercontent.com/10338671/30480807-308565f6-9a0b-11e7-9a5d-7049ce4dc15e.jpg)   \r\nPIC3", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/899", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/899/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/899/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/899/events", "html_url": "https://github.com/tflearn/tflearn/issues/899", "id": 256229860, "node_id": "MDU6SXNzdWUyNTYyMjk4NjA=", "number": 899, "title": "How to save and restore network architektur in tflearn", "user": {"login": "tomalbrecht", "id": 17781570, "node_id": "MDQ6VXNlcjE3NzgxNTcw", "avatar_url": "https://avatars0.githubusercontent.com/u/17781570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomalbrecht", "html_url": "https://github.com/tomalbrecht", "followers_url": "https://api.github.com/users/tomalbrecht/followers", "following_url": "https://api.github.com/users/tomalbrecht/following{/other_user}", "gists_url": "https://api.github.com/users/tomalbrecht/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomalbrecht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomalbrecht/subscriptions", "organizations_url": "https://api.github.com/users/tomalbrecht/orgs", "repos_url": "https://api.github.com/users/tomalbrecht/repos", "events_url": "https://api.github.com/users/tomalbrecht/events{/privacy}", "received_events_url": "https://api.github.com/users/tomalbrecht/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-08T11:51:47Z", "updated_at": "2018-07-16T14:44:00Z", "closed_at": "2018-02-09T13:24:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am looking for a way to save and restore a network-structure with tflearn. The embeded model.save takes care about the weights persistance. But in case I want to forget about the network structure and load it again, I have to build the net again. Therefore I have to \"remember\" the structure (layers, amount of neurons) and so on.\r\n\r\nI've experimented with pickle (something like pickle.dump(net)) and tf.train.import_meta_graph (combine tflearn with tensorflow) without success.\r\n\r\nLets say I have a training like this:\r\n\r\n```\r\n`from future import division, print_function, absolute_import\r\n\r\nimport numpy as np\r\nimport tflearn\r\n\r\nimport tflearn.datasets.mnist as mnist\r\n\r\nX, Y, testX, testY = mnist.load_data(one_hot=True)\r\nX = np.reshape(X, (-1, 28, 28))\r\n\r\ntestX = np.reshape(testX, (-1, 28, 28))\r\n\r\nnet = tflearn.input_data(shape=[None, 28, 28])\r\nnet = tflearn.lstm(net, 128, return_seq=True)\r\nnet = tflearn.lstm(net, 128)\r\nnet = tflearn.regression(net, optimizer='adam',\r\nloss='categorical_crossentropy', name=\"output1\")\r\nmodel = tflearn.DNN(net, tensorboard_verbose=2,tensorboard_dir='lstm')\r\nmodel.fit(X, Y, n_epoch=1, validation_set=0.1, show_metric=True,\r\nsnapshot_step=100)\r\n\r\nmodel.save('lstm_load.tflearn')`\r\n```\r\n\r\nLater I want to restore all needed stuff in a different program or session like this (pseudo-like code does not work of course ;-))\r\n\r\n```\r\n`from future import division, print_function, absolute_import\r\n\r\nimport numpy as np\r\nimport tflearn\r\n\r\nimport tflearn.datasets.mnist as mnist\r\n\r\nX, Y, testX, testY = mnist.load_data(one_hot=True)\r\nX = np.reshape(X, (-1, 28, 28))\r\n\r\ntestX = np.reshape(testX, (-1, 28, 28))\r\n\r\nmodel = model.load_everything(\"model.tfl\")\r\nprediction = model.predict([X])`\r\n```\r\n\r\nAny ideas?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/895", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/895/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/895/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/895/events", "html_url": "https://github.com/tflearn/tflearn/issues/895", "id": 254749146, "node_id": "MDU6SXNzdWUyNTQ3NDkxNDY=", "number": 895, "title": "Do you know how to install tflearn in pycharm?", "user": {"login": "gsw888", "id": 31453111, "node_id": "MDQ6VXNlcjMxNDUzMTEx", "avatar_url": "https://avatars3.githubusercontent.com/u/31453111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gsw888", "html_url": "https://github.com/gsw888", "followers_url": "https://api.github.com/users/gsw888/followers", "following_url": "https://api.github.com/users/gsw888/following{/other_user}", "gists_url": "https://api.github.com/users/gsw888/gists{/gist_id}", "starred_url": "https://api.github.com/users/gsw888/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gsw888/subscriptions", "organizations_url": "https://api.github.com/users/gsw888/orgs", "repos_url": "https://api.github.com/users/gsw888/repos", "events_url": "https://api.github.com/users/gsw888/events{/privacy}", "received_events_url": "https://api.github.com/users/gsw888/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-09-01T20:54:27Z", "updated_at": "2019-09-24T02:47:38Z", "closed_at": "2017-11-01T20:44:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is no ftlearn package in pycharm, so I installed it by \"pip install tflearn\", the installation is successful. However when I start using it, it always says \"ImportError: No module named 'tflearn.data_utils'; 'tflearn' is not a package\"\r\nI use \"pip show tflearn\", I can see it is under:\r\nLocation: c:\\users\\geoff\\anaconda3\\envs\\keras\\lib\\site-packages\r\nI tried pip3 install tflearn as well but it didn't work since my pycharm doesn't have pip3.\r\nThe python compiler I am using are: 3.5.3\r\nAny help is highly appreciated!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/893", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/893/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/893/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/893/events", "html_url": "https://github.com/tflearn/tflearn/issues/893", "id": 254440437, "node_id": "MDU6SXNzdWUyNTQ0NDA0Mzc=", "number": 893, "title": "Accuracy is too high for inputs that are predicted wrong.", "user": {"login": "igorvishnevskiy", "id": 19984347, "node_id": "MDQ6VXNlcjE5OTg0MzQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/19984347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorvishnevskiy", "html_url": "https://github.com/igorvishnevskiy", "followers_url": "https://api.github.com/users/igorvishnevskiy/followers", "following_url": "https://api.github.com/users/igorvishnevskiy/following{/other_user}", "gists_url": "https://api.github.com/users/igorvishnevskiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorvishnevskiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorvishnevskiy/subscriptions", "organizations_url": "https://api.github.com/users/igorvishnevskiy/orgs", "repos_url": "https://api.github.com/users/igorvishnevskiy/repos", "events_url": "https://api.github.com/users/igorvishnevskiy/events{/privacy}", "received_events_url": "https://api.github.com/users/igorvishnevskiy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-08-31T19:19:03Z", "updated_at": "2017-09-23T00:11:34Z", "closed_at": "2017-09-23T00:07:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have created an NLP LSTM RNN model using following example:\r\nhttps://github.com/tflearn/tflearn/blob/master/examples/nlp/lstm.py\r\n\r\nModel has trained and performs great predicting inputs that exist in the training set or close to those in training set. It predicts them very accurately actually.\r\n\r\n**>> The problem** however is that I always receive one high accuracy rate for those inputs that have no related examples provided for in the training set. Below I specified the accuracies that I receive for different inputs. As you can see, those that are predicted correctly, have slightly different accuracy rates. However those that have not been predicted correctly, always have one accuracy rate that is set to the same value for all such inputs: \"0.68496119976043701172\". That value is quite high. And since I choose the highest accuracy result, I would always get this incorrect prediction with high accuracy that is above my threshold. When I trained with more epochs I would get that accuracy rate raise even higher to 84% about. What am I not doing correctly? For the inputs that do not have any similar examples provided for in the training set, I should receive much lower accuracy rates, not what I receive. I would expect it to predict something, but should not be with accuracy of 68% or higher. S.O.S. I need help. Thank you so much for helping me!\r\n\r\n\r\n## **Code of my network:**\r\n\r\n    net = tflearn.input_data([None, len(train_x[0])])\r\n    net = tflearn.embedding(net, input_dim=10000, output_dim=128)\r\n    net = tflearn.lstm(net, 128, dropout=0.8)\r\n    net = tflearn.fully_connected(net, len(train_y[0]), activation='softmax')\r\n    net = tflearn.regression(net, optimizer='adam', learning_rate=0.001, loss='categorical_crossentropy')\r\n    model = tflearn.DNN(net, tensorboard_dir='tflearn_logs')\r\n    model.fit(train_x, train_y, n_epoch = 1000, shuffle=True, validation_set=(train_x, train_y), show_metric=True, batch_size=64)\r\n\r\n\r\n## **Examples of too high of the accuracy for incorrect predictions:**\r\n\r\n_INCORRECT PREDICTION  - Input has nothing similar to it in the training set that I used for this training_\r\n\r\nInput:\r\najhhjasvdhgs823754shg83w74 asjhasj nope come on never\r\n\r\nsentence_words\r\n['ajhhjasvdhgs823754shg83w74', 'asjhasj', 'nope']\r\n\r\n0.00035618932452052832\r\n0.00002501290146028623\r\n0.00044306437484920025\r\n0.00509987585246562958\r\n0.00013837174628861248\r\n0.00008657085709273815\r\n0.00148472678847610950\r\n0.00004535137850325555\r\n0.00080926803639158607\r\n0.00313436333090066910\r\n0.00195945147424936295\r\n0.00264072138816118240\r\n0.00138593628071248531\r\n0.00004885421367362142\r\n0.68496119976043701172\r\n0.00038353921263478696\r\n0.00009397857502335683\r\n0.00078909739386290312\r\n0.00368964602239429951\r\n0.00059157644864171743\r\n0.00353096914477646351\r\n0.00132497865706682205\r\n0.00003743696652236395\r\n0.00140456133522093296\r\n0.00009372259955853224\r\n0.00089485925855115056\r\n0.25274342298507690430\r\n0.00002111023241013754\r\n0.00984090939164161682\r\n0.00004694214658229612\r\n0.02175975404679775238\r\n0.00013464479707181454\r\n\r\n{'confidence': 0.6849612, 'intent': 'get_company_contact_information', 'response': u\"- company name - contact information can be located on the following page of our website: URL\"}\r\n\r\n**+++++++++++++++++++++**\r\n\r\n_INCORRECT PREDICTION - Input has nothing similar to it in the training set that I used for this training_\r\n\r\nInput:\r\nFlying cars for mankind\r\n\r\nsentence_words\r\n['flying', u'car', 'mankind']\r\n\r\n0.00035618932452052832\r\n0.00002501290146028623\r\n0.00044306437484920025\r\n0.00509987585246562958\r\n0.00013837174628861248\r\n0.00008657085709273815\r\n0.00148472678847610950\r\n0.00004535137850325555\r\n0.00080926803639158607\r\n0.00313436333090066910\r\n0.00195945147424936295\r\n0.00264072138816118240\r\n0.00138593628071248531\r\n0.00004885421367362142\r\n0.68496119976043701172\r\n0.00038353921263478696\r\n0.00009397857502335683\r\n0.00078909739386290312\r\n0.00368964602239429951\r\n0.00059157644864171743\r\n0.00353096914477646351\r\n0.00132497865706682205\r\n0.00003743696652236395\r\n0.00140456133522093296\r\n0.00009372259955853224\r\n0.00089485925855115056\r\n0.25274342298507690430\r\n0.00002111023241013754\r\n0.00984090939164161682\r\n0.00004694214658229612\r\n0.02175975404679775238\r\n0.00013464479707181454\r\n\r\n{'confidence': 0.6849612, 'intent': 'get_company_contact_information', 'response': u\"- company name - contact information can be located on the following page of our website: URL\"}\r\n\r\n**+++++++++++++++++++++**\r\n\r\n\r\n\r\n## **Examples of correct predictions:**\r\n\r\n\r\n_CORRECT PREDICTION_\r\n\r\nInput:\r\nWhere can I find your products documentation?\r\n\r\nsentence_words\r\n[u'product', 'documentation']\r\n\r\n0.00612614396959543228\r\n0.00011750899284379557\r\n0.00069767667446285486\r\n0.00085104035679250956\r\n0.00008564032759750262\r\n0.00028970753191970289\r\n0.00068009214010089636\r\n0.00120029202662408352\r\n0.00062775332480669022\r\n0.00147092458792030811\r\n0.00233637029305100441\r\n0.00895396433770656586\r\n0.00052287138532847166\r\n0.00035432158620096743\r\n0.00243101338855922222\r\n0.00387038756161928177\r\n0.00194357126019895077\r\n0.00049759971443563700\r\n0.89442783594131469727\r\n0.00236937170848250389\r\n0.00370639306493103504\r\n0.00438989093527197838\r\n0.00004709115455625579\r\n0.00104782730340957642\r\n0.00004982457539881580\r\n0.00015152101696003228\r\n0.01096363924443721771\r\n0.00006660592043772340\r\n0.00367720634676516056\r\n0.00037029836676083505\r\n0.04505829513072967529\r\n0.00061725842533633113\r\n\r\n{'confidence': 0.89442784, 'intent': 'get_product_documentaton', 'response': u\"Please navigate to the following web address for Complete - company name - Product Documentation: URL\"}\r\n\r\n**+++++++++++++++++++++**\r\n\r\n_CORRECT PREDICTION_\r\n\r\nInput:\r\nI need to create one more issue ticket\r\n\r\nsentence_words\r\n['create', 'one', 'issue', 'ticket']\r\n\r\n0.00036033347714692354\r\n0.00085572013631463051\r\n0.00156056694686412811\r\n0.00330810411833226681\r\n0.00003927011493942700\r\n0.00007325618207687512\r\n0.01852107793092727661\r\n0.01555508282035589218\r\n0.00225663976743817329\r\n0.00266261305660009384\r\n0.00165271642617881298\r\n0.00103618251159787178\r\n0.00292959786020219326\r\n0.00010923387162620202\r\n0.00389660405926406384\r\n0.00816982984542846680\r\n0.00009279943333240226\r\n0.00008974337106337771\r\n0.00987286027520895004\r\n0.00082714710151776671\r\n0.00068086449755355716\r\n0.00123500928748399019\r\n0.00066235440317541361\r\n0.00063234707340598106\r\n0.00007008510874584317\r\n0.00058565364452078938\r\n0.00426529068499803543\r\n0.00021767383441329002\r\n0.00110195914749056101\r\n0.00031603770912624896\r\n0.91631835699081420898\r\n0.00004503972741076723\r\n\r\n{'confidence': 0.91631836, 'intent': 'submit_product_issue', 'response': u\"What - company name - product do you need help with? You can say for example: 'I am having issues with ....'\"}\r\n\r\n**+++++++++++++++++++++**\r\n\r\n_CORRECT PREDICTION_\r\n\r\nInput:\r\nI need to create one more issue ticket\r\n\r\nsentence_words\r\n['create', 'one', 'issue', 'ticket']\r\n\r\n0.00036033347714692354\r\n0.00085572013631463051\r\n0.00156056694686412811\r\n0.00330810411833226681\r\n0.00003927011493942700\r\n0.00007325618207687512\r\n0.01852107793092727661\r\n0.01555508282035589218\r\n0.00225663976743817329\r\n0.00266261305660009384\r\n0.00165271642617881298\r\n0.00103618251159787178\r\n0.00292959786020219326\r\n0.00010923387162620202\r\n0.00389660405926406384\r\n0.00816982984542846680\r\n0.00009279943333240226\r\n0.00008974337106337771\r\n0.00987286027520895004\r\n0.00082714710151776671\r\n0.00068086449755355716\r\n0.00123500928748399019\r\n0.00066235440317541361\r\n0.00063234707340598106\r\n0.00007008510874584317\r\n0.00058565364452078938\r\n0.00426529068499803543\r\n0.00021767383441329002\r\n0.00110195914749056101\r\n0.00031603770912624896\r\n0.91631835699081420898\r\n0.00004503972741076723\r\n\r\n{'confidence': 0.91631836, 'intent': 'submit_product_issue', 'response': u\"What - company name - product do you need help with? You can say for example: 'I am having issues with ....'\"}\r\n\r\n**+++++++++++++++++++++**\r\n\r\n_CORRECT PREDICTION_\r\n\r\nInput:\r\nHow are you bot\r\n\r\nsentence_words\r\n['you', 'bot']\r\n\r\n0.00178559648338705301\r\n0.00133074948098510504\r\n0.00027116999262943864\r\n0.02856334298849105835\r\n0.00220576790161430836\r\n0.00076102046296000481\r\n0.00604180758818984032\r\n0.00046779369586147368\r\n0.00036897676181979477\r\n0.00884445756673812866\r\n0.00867486372590065002\r\n0.00998522993177175522\r\n0.00275757559575140476\r\n0.01562077831476926804\r\n0.00771301519125699997\r\n0.00126908253878355026\r\n0.00027335909544490278\r\n0.00203047576360404491\r\n0.00422610156238079071\r\n0.00466328905895352364\r\n0.00738375540822744370\r\n0.00825943239033222198\r\n0.00026308928499929607\r\n0.00243258429691195488\r\n0.00214211596176028252\r\n0.00018701943918131292\r\n0.01025947183370590210\r\n0.00180692458525300026\r\n0.76838761568069458008\r\n0.00528547680005431175\r\n0.01701507344841957092\r\n0.06872295588254928589\r\n\r\n{'confidence': 0.76838762, 'intent': 'greeting_how_are_you', 'response': u\"I'm fine, Thank you for asking. I am here to help you find information about - company name - products. Please let me know what you are looking for?\"}\r\n\r\n**+++++++++++++++++++++**\r\n\r\n_CORRECT PREDICTION_\r\n\r\nInput:\r\nwhats up bot\r\n\r\nsentence_words\r\n['up', 'bot']\r\n\r\n0.00010749076318461448\r\n0.00032820369233377278\r\n0.01560913864523172379\r\n0.69569045305252075195\r\n0.00057597202248871326\r\n0.00067718361970037222\r\n0.00241628172807395458\r\n0.00179249793291091919\r\n0.00070093647809699178\r\n0.00467830337584018707\r\n0.00495495973154902458\r\n0.00330604217015206814\r\n0.00955209229141473770\r\n0.00068924174411222339\r\n0.00623606564477086067\r\n0.00237366184592247009\r\n0.00020166784815955907\r\n0.00352962105534970760\r\n0.00449099112302064896\r\n0.00038545206189155579\r\n0.00571734830737113953\r\n0.00052963860798627138\r\n0.00179245695471763611\r\n0.02322339266538619995\r\n0.00093399430625140667\r\n0.00093780242605134845\r\n0.16592630743980407715\r\n0.00039016545633785427\r\n0.00223310827277600765\r\n0.00021289504365995526\r\n0.03942415863275527954\r\n0.00038231405778788030\r\n\r\n{'confidence': 0.69569045, 'intent': 'funny_greeting', 'response': u'Hi, how are you human?'}", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/892", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/892/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/892/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/892/events", "html_url": "https://github.com/tflearn/tflearn/issues/892", "id": 254177647, "node_id": "MDU6SXNzdWUyNTQxNzc2NDc=", "number": 892, "title": "Fully connected layer weight initialization", "user": {"login": "abhven", "id": 23343711, "node_id": "MDQ6VXNlcjIzMzQzNzEx", "avatar_url": "https://avatars1.githubusercontent.com/u/23343711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abhven", "html_url": "https://github.com/abhven", "followers_url": "https://api.github.com/users/abhven/followers", "following_url": "https://api.github.com/users/abhven/following{/other_user}", "gists_url": "https://api.github.com/users/abhven/gists{/gist_id}", "starred_url": "https://api.github.com/users/abhven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abhven/subscriptions", "organizations_url": "https://api.github.com/users/abhven/orgs", "repos_url": "https://api.github.com/users/abhven/repos", "events_url": "https://api.github.com/users/abhven/events{/privacy}", "received_events_url": "https://api.github.com/users/abhven/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-31T01:00:57Z", "updated_at": "2017-09-01T21:15:24Z", "closed_at": "2017-09-01T21:15:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "While using bias initialization with fully connected layer, there is an error while using \r\n\r\n```\r\ninitial = np.array([[1., 0, 0], [0, 1., 0]])\r\ninitial = initial.astype('float32')\r\ninitial = initial.flatten()\r\nb_fc_loc2 = tf.Variable(initial_value=initial, name='b_fc_loc2')\r\n\r\nloc_network= fully_connected(loc_network, 6, bias_init=b_fc_loc2 , activation='tanh')\r\n\r\n```\r\nyou will get an error, \r\n`ValueError: If initializer is a constant, do not specify shape.\r\n`\r\nSolution: in the fully_connected function, use \r\n```\r\nif bias:\r\n    if isinstance(bias_init, str):\r\n        bias_init = initializations.get(bias_init)()\r\n        b = va.variable('b', shape=[n_units], initializer=bias_init,\r\n                        trainable=trainable, restore=restore)\r\n    \r\n    else:\r\n        b = va.variable('b', initializer=bias_init,\r\n                        trainable=trainable, restore=restore)\r\n    tf.add_to_collection(tf.GraphKeys.LAYER_VARIABLES + '/' + name, b)\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/886", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/886/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/886/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/886/events", "html_url": "https://github.com/tflearn/tflearn/issues/886", "id": 252521490, "node_id": "MDU6SXNzdWUyNTI1MjE0OTA=", "number": 886, "title": "tflearn import error", "user": {"login": "iulialexandra", "id": 7911087, "node_id": "MDQ6VXNlcjc5MTEwODc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7911087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iulialexandra", "html_url": "https://github.com/iulialexandra", "followers_url": "https://api.github.com/users/iulialexandra/followers", "following_url": "https://api.github.com/users/iulialexandra/following{/other_user}", "gists_url": "https://api.github.com/users/iulialexandra/gists{/gist_id}", "starred_url": "https://api.github.com/users/iulialexandra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iulialexandra/subscriptions", "organizations_url": "https://api.github.com/users/iulialexandra/orgs", "repos_url": "https://api.github.com/users/iulialexandra/repos", "events_url": "https://api.github.com/users/iulialexandra/events{/privacy}", "received_events_url": "https://api.github.com/users/iulialexandra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-24T08:13:43Z", "updated_at": "2017-08-24T08:29:41Z", "closed_at": "2017-08-24T08:29:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI get the following error when trying to import tflearn:\r\n\r\n```\r\n    raise ValueError(\"Function has keyword-only arguments or annotations\"\r\nValueError: Function has keyword-only arguments or annotations, use getfullargspec() API which can support them\r\n```\r\n\r\nI get this error only in python 3.5, python 2.7 works fine. I am using virtualenvs in Ubuntu 16.04, tflearn version 0.3.2, installed with pip.\r\n\r\nThanks for you help!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/881", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/881/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/881/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/881/events", "html_url": "https://github.com/tflearn/tflearn/issues/881", "id": 251905131, "node_id": "MDU6SXNzdWUyNTE5MDUxMzE=", "number": 881, "title": "Print metric on screen per epoch instead of per step", "user": {"login": "jrzaurin", "id": 7262383, "node_id": "MDQ6VXNlcjcyNjIzODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/7262383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrzaurin", "html_url": "https://github.com/jrzaurin", "followers_url": "https://api.github.com/users/jrzaurin/followers", "following_url": "https://api.github.com/users/jrzaurin/following{/other_user}", "gists_url": "https://api.github.com/users/jrzaurin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrzaurin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrzaurin/subscriptions", "organizations_url": "https://api.github.com/users/jrzaurin/orgs", "repos_url": "https://api.github.com/users/jrzaurin/repos", "events_url": "https://api.github.com/users/jrzaurin/events{/privacy}", "received_events_url": "https://api.github.com/users/jrzaurin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-22T10:08:05Z", "updated_at": "2017-08-23T16:26:00Z", "closed_at": "2017-08-23T16:26:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "This might be (or surely is) a trivial question, but I don't seem to find the solution in the documentation or online. I simply want to change the logs to be printed on screen when using tflearn.\r\n\r\nFor example, a simple model like this: \r\n\r\n    embedding_layer = input_data(shape=[None,max_seq_len], name='input')\r\n    net = embedding(\r\n    \tembedding_layer,\r\n    \tinput_dim=vocab_size,\r\n    \toutput_dim=embedding_dim,\r\n    \tweights_init = tf.convert_to_tensor(embedding_matrix, dtype='float32'),\r\n    \ttrainable=False,\r\n    \tname=\"EmbeddingLayer\")\r\n    net = fully_connected(embedded_sequences, class_count, activation='softmax')\r\n    net = regression(\r\n    \tnet,\r\n    \toptimizer=optimizer,\r\n    \tloss='categorical_crossentropy')\r\n    model = tflearn.DNN(net, tensorboard_verbose=0)\r\n\r\nWhen I use `model.fit`:\r\n\r\n    model.fit(\r\n        X, one_hot_y,\r\n        n_epoch=epochs,\r\n        batch_size = batch_size,\r\n        show_metric=True)\r\n\r\nit prints the results per step: \r\n\r\n\t---------------------------------\r\n\tRun id: E2VXW6\r\n\tLog directory: /tmp/tflearn_logs/\r\n\tINFO:tensorflow:Summary name Accuracy/ (raw) is illegal; using Accuracy/__raw_ instead.\r\n\tINFO:tensorflow:Summary name Accuracy/ (raw) is illegal; using Accuracy/__raw_ instead.\r\n\t---------------------------------\r\n\tTraining samples: 18821\r\n\tValidation samples: 0\r\n\t--\r\n\tTraining Step: 1  | time: 0.035s\r\n\t| Adam | epoch: 001 | loss: 0.00000 - acc: 0.0000 -- iter: 00032/18821\r\n\tTraining Step: 2  | total loss: 3.22912 | time: 0.039s\r\n\t| Adam | epoch: 001 | loss: 3.22912 - acc: 0.0844 -- iter: 00064/18821\r\n\tTraining Step: 3  | total loss: 4.40546 | time: 0.043s\r\n\t| Adam | epoch: 001 | loss: 4.40546 - acc: 0.0665 -- iter: 00096/18821\r\n\tTraining Step: 4  | total loss: 4.53110 | time: 0.047s\r\n\t| Adam | epoch: 001 | loss: 4.53110 - acc: 0.0401 -- iter: 00128/18821\r\n\tTraining Step: 5  | total loss: 4.18489 | time: 0.051s\r\n        ....\r\n\r\nI have tried to change parameters like `snapshot_epoch ` or `snapshot_step` but I don't think these have any control over it. I even tried to code a callback class, but still prints per step. \r\n\r\nHow can I print **per epoch** instead?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/880", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/880/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/880/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/880/events", "html_url": "https://github.com/tflearn/tflearn/issues/880", "id": 251872327, "node_id": "MDU6SXNzdWUyNTE4NzIzMjc=", "number": 880, "title": "noob question on string colums as target column", "user": {"login": "michelson", "id": 11976, "node_id": "MDQ6VXNlcjExOTc2", "avatar_url": "https://avatars0.githubusercontent.com/u/11976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michelson", "html_url": "https://github.com/michelson", "followers_url": "https://api.github.com/users/michelson/followers", "following_url": "https://api.github.com/users/michelson/following{/other_user}", "gists_url": "https://api.github.com/users/michelson/gists{/gist_id}", "starred_url": "https://api.github.com/users/michelson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michelson/subscriptions", "organizations_url": "https://api.github.com/users/michelson/orgs", "repos_url": "https://api.github.com/users/michelson/repos", "events_url": "https://api.github.com/users/michelson/events{/privacy}", "received_events_url": "https://api.github.com/users/michelson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-22T08:10:58Z", "updated_at": "2017-08-23T00:35:11Z", "closed_at": "2017-08-23T00:35:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello there,\r\nI've a model in tflearn which is predicting an integer column on a data set, and is working fine\r\nbut what should I do if I want to get a string column ? something like\r\n\r\n  `data = [1,1,\"hello\"], [0,0,\"good bye\"]`\r\n\r\n  `test([.2,.2]) == \"good bye\" `\r\n\r\nis possible to encode each string on the dataset and then return the most accurated string ? \r\nwhich path should I take ?\r\n\r\nthanks \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/867", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/867/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/867/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/867/events", "html_url": "https://github.com/tflearn/tflearn/issues/867", "id": 249406803, "node_id": "MDU6SXNzdWUyNDk0MDY4MDM=", "number": 867, "title": "import error with latest tf version 1.2", "user": {"login": "stevewyl", "id": 12755003, "node_id": "MDQ6VXNlcjEyNzU1MDAz", "avatar_url": "https://avatars0.githubusercontent.com/u/12755003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stevewyl", "html_url": "https://github.com/stevewyl", "followers_url": "https://api.github.com/users/stevewyl/followers", "following_url": "https://api.github.com/users/stevewyl/following{/other_user}", "gists_url": "https://api.github.com/users/stevewyl/gists{/gist_id}", "starred_url": "https://api.github.com/users/stevewyl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stevewyl/subscriptions", "organizations_url": "https://api.github.com/users/stevewyl/orgs", "repos_url": "https://api.github.com/users/stevewyl/repos", "events_url": "https://api.github.com/users/stevewyl/events{/privacy}", "received_events_url": "https://api.github.com/users/stevewyl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-10T16:36:22Z", "updated_at": "2017-10-09T08:25:54Z", "closed_at": "2017-08-11T00:23:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I cannot import tflearn with tensorflow 1.2 version. \r\nI met with following errors:\r\n\r\n  File \"D:\\Anaconda3\\lib\\site-packages\\tflearn\\layers\\__init__.py\", line 2, in <module>\r\n    from .conv import conv_2d, max_pool_2d, avg_pool_2d, conv_1d, \\\r\nImportError: cannot import name 'deconv_2d'\r\n\r\nMaybe deconv_2d means tf.nn.conv2d_transpose. I'm not sure", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/864", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/864/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/864/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/864/events", "html_url": "https://github.com/tflearn/tflearn/issues/864", "id": 248578178, "node_id": "MDU6SXNzdWUyNDg1NzgxNzg=", "number": 864, "title": "Time series forecasting gap between prediction and reality", "user": {"login": "Erickira3", "id": 19682779, "node_id": "MDQ6VXNlcjE5NjgyNzc5", "avatar_url": "https://avatars3.githubusercontent.com/u/19682779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Erickira3", "html_url": "https://github.com/Erickira3", "followers_url": "https://api.github.com/users/Erickira3/followers", "following_url": "https://api.github.com/users/Erickira3/following{/other_user}", "gists_url": "https://api.github.com/users/Erickira3/gists{/gist_id}", "starred_url": "https://api.github.com/users/Erickira3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Erickira3/subscriptions", "organizations_url": "https://api.github.com/users/Erickira3/orgs", "repos_url": "https://api.github.com/users/Erickira3/repos", "events_url": "https://api.github.com/users/Erickira3/events{/privacy}", "received_events_url": "https://api.github.com/users/Erickira3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-08T01:51:38Z", "updated_at": "2017-10-12T03:45:54Z", "closed_at": "2017-09-08T09:40:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "First thanks you for your attention on this post.\r\n\r\nI'm using Tflearn for time series forecasting (regression problem). After lot of trouble on some part my network finally work and the training go well. I just have a question:\r\n- Like seen in this excel file [PredictionandReality.zip](https://github.com/tflearn/tflearn/files/1206680/prediction1Training0Epoch100.zip) I have a lag problem, my prediction value start increasing/decreasing BEFORE my real value (I thought it would be the other sense).\r\nWhat could be the problem here?\r\n\r\nHere is my training code:\r\n```\r\nimport numpy as np\r\nimport tflearn\r\nfrom pandas import DataFrame\r\nfrom pandas import Series\r\nfrom pandas import concat\r\nfrom pandas import read_csv\r\nfrom sklearn.preprocessing import MinMaxScaler\r\nimport datetime\r\nimport tensorflow as tf\r\nimport os\r\n\r\ndef preprocess(data):\r\n    return np.array(data, dtype=np.int32)\r\n\r\n\r\ndef parser(x):\r\n    return datetime.datetime.strptime(x, '%Y-%m-%d %H:%M:%S')\r\n\r\n\r\n# frame a sequence as a supervised learning problem\r\ndef timeseries_to_supervised(data, lag=1):\r\n    df = DataFrame(data)\r\n    columns = [df.shift(i) for i in range(1, lag + 1)]\r\n    columns.append(df)\r\n    df = concat(columns, axis=1)\r\n    df.fillna(0, inplace=True)\r\n    return df\r\n\r\n\r\ndef difference(dataset, interval=1):\r\n    diff = list()\r\n    for i in range(interval, len(dataset)):\r\n        value = dataset[i] - dataset[i - interval]\r\n        diff.append(value)\r\n    return Series(diff)\r\n\r\n\r\n# scale train and test data to [-1, 1]\r\ndef scale(train):\r\n    # fit scaler\r\n    scaler = MinMaxScaler(feature_range=(-1, 1))\r\n    scaler = scaler.fit(train)\r\n    # transform train\r\n    train = train.reshape(train.shape[0], train.shape[1])\r\n    train_scaled = scaler.transform(train)\r\n    return scaler, train_scaled\r\n\r\n\r\ndef fit_lstm(train, batch_size, nb_epoch, x, timesteps, training):\r\n    X, y = train[0:-1], train[:, -1]\r\n    X = X[:, 0].reshape(len(X), timesteps, 1)\r\n    y = y.reshape(len(y), 1)\r\n\r\n    # init\r\n    tflearn.init_graph(num_cores=8, gpu_memory_fraction=0.5)\r\n\r\n    # Build neural network\r\n\r\n    net = tflearn.input_data(shape=[None, 1, 1])\r\n    tnorm = tflearn.initializations.uniform(minval=-1.0, maxval=1.0)\r\n    net = tflearn.lstm(net, timesteps, dropout=0.8)\r\n\r\n    net = tflearn.fully_connected(net, 1, activation='linear', weights_init=tnorm)\r\n    net = tflearn.regression(net, optimizer='adam', learning_rate=0.01,\r\n                             loss='mean_square', metric='R2')\r\n\r\n\r\n    # Define model\r\n    model = tflearn.DNN(net, clip_gradients=0., tensorboard_verbose=3, tensorboard_dir=\"logs\",)\r\n\r\n    model.fit(X, y, n_epoch=nb_epoch, batch_size=batch_size, shuffle=False, show_metric=True, validation_set=0.1)\r\n    model.save(os.path.join('/directory/path/','model.tflearn'))\r\n\r\ndef training(spotId):\r\n    training = [0]\r\n    epoch = [25]\r\n    for x in training:\r\n        for y in epoch:\r\n            tf.reset_default_graph()\r\n            # Load CSV file, indicate that the first column represents labels\r\n            data = read_csv('nowcastScaled'+str(spotId)+'.csv', header=0, parse_dates=[0], index_col=0, squeeze=True, date_parser=parser)\r\n\r\n            # transform data to be stationary\r\n            raw_values = data.values\r\n            diff_values = difference(raw_values, 1)\r\n\r\n            # transform data to be supervised learning\r\n            supervised = timeseries_to_supervised(diff_values, 1)\r\n            supervised_values = supervised.values\r\n\r\n            # split data into train and test-sets\r\n            train = supervised_values[x:]\r\n\r\n            # transform the scale of the data\r\n            scaler, train_scaled = scale(train)\r\n            # fit the model\r\n            fit_lstm(train_scaled, 32, y, spotId, 1, x)\r\n```\r\nand here is my prediction code:\r\n```\r\nimport numpy\r\nimport numpy as np\r\nimport tflearn\r\nfrom pandas import DataFrame\r\nfrom pandas import Series\r\nfrom pandas import concat\r\nfrom pandas import read_csv\r\nfrom sklearn.preprocessing import MinMaxScaler\r\nimport csv\r\nimport datetime\r\nimport os\r\nimport tensorflow as tf\r\n# Preprocessing function\r\nfrom tflearn import Accuracy, Momentum, dropout\r\n\r\n\r\ndef preprocess(data):\r\n    return np.array(data, dtype=np.int32)\r\n\r\n\r\ndef parser(x):\r\n    return datetime.datetime.strptime(x, '%Y-%m-%d %H:%M:%S')\r\n\r\n\r\n# frame a sequence as a supervised learning problem\r\ndef timeseries_to_supervised(data, lag=1):\r\n    df = DataFrame(data)\r\n    columns = [df.shift(i) for i in range(1, lag + 1)]\r\n    columns.append(df)\r\n    df = concat(columns, axis=1)\r\n    df.fillna(0, inplace=True)\r\n    return df\r\n\r\n\r\ndef difference(dataset, interval=1):\r\n    diff = list()\r\n    for i in range(interval, len(dataset)):\r\n        value = dataset[i] - dataset[i - interval]\r\n        diff.append(value)\r\n    return Series(diff)\r\n\r\n\r\n# invert differenced value\r\ndef inverse_difference(history, yhat, interval=1):\r\n    return yhat + history[-interval]\r\n\r\n\r\n# scale train and test data to [-1, 1]\r\ndef scale(train):\r\n    # fit scaler\r\n    scaler = MinMaxScaler(feature_range=(-1, 1))\r\n    scaler = scaler.fit(train)\r\n    # transform train\r\n    train = train.reshape(train.shape[0], train.shape[1])\r\n    train_scaled = scaler.transform(train)\r\n    return scaler, train_scaled\r\n\r\n\r\n# inverse scaling for a forecasted value\r\ndef invert_scale(scaler, X, value):\r\n    T = list()\r\n    T.append(X)\r\n    new_row = [x for x in T] + [value]\r\n    array = numpy.array(new_row)\r\n    array = array.reshape(-1, len(array))\r\n    inverted = scaler.inverse_transform(array)\r\n    return inverted[0, -1]\r\n\r\n\r\n# make a one-step forecast\r\ndef forecast_lstm2(model, X):\r\n    X = X.reshape(-1, 1, 1)\r\n    yhat = model.predict(X)\r\n    return yhat[0, 0]\r\n\r\n\r\ndef prediction(spotId):\r\n    training = [0]\r\n    epoch = [25]\r\n    for x in training:\r\n        for e in epoch:\r\n            tf.reset_default_graph()\r\n\r\n            # Load CSV file, indicate that the first column represents labels\r\n            data = read_csv('nowcastScaled'+str(spotId)+'.csv', header=0, parse_dates=[0], index_col=0, squeeze=True, date_parser=parser)\r\n\r\n            # transform data to be stationary\r\n            raw_values = data.values\r\n            diff_values = difference(raw_values, 1)\r\n\r\n            # transform data to be supervised learning\r\n            supervised = timeseries_to_supervised(diff_values, 1)\r\n            supervised_values = supervised.values\r\n\r\n            # split data into train and test-sets\r\n            train = supervised_values[x:]\r\n\r\n            # transform the scale of the data\r\n            scaler, train_scaled = scale(train)\r\n            # Build neural network\r\n            net = tflearn.input_data(shape=[None, 1, 1])\r\n            tnorm = tflearn.initializations.uniform(minval=-1.0, maxval=1.0)\r\n            net = tflearn.lstm(net, 1, dropout=0.8)\r\n            net = tflearn.fully_connected(net, 1, activation='linear', weights_init=tnorm)\r\n            net = tflearn.regression(net, optimizer='adam', learning_rate=0.01,\r\n                                     loss='mean_square', metric='R2')\r\n            lstm_model = tflearn.DNN(net, clip_gradients=0.)\r\n            lstm_model.load(os.path.join('/directory/path/','model.tflearn'))\r\n\r\n            # forecast the entire training dataset to build up state for forecasting\r\n            train_reshaped = train_scaled[:, 0].reshape(len(train_scaled), 1, 1)\r\n            lstm_model.predict(train_reshaped)\r\n            # walk-forward validation on the test data\r\n            predictions = list()\r\n            predictionFeeder = list()\r\n            X, y = train_scaled[0, 0:-1], train_scaled[0, -1]\r\n            predictionFeeder.append(X)\r\n            for i in range(0, 10000):\r\n                # make one-step forecast\r\n                yhat = forecast_lstm2(lstm_model, predictionFeeder[i])\r\n                predictionFeeder.append(yhat)\r\n                # invert scaling\r\n                yhat2 = invert_scale(scaler, predictionFeeder[i + 1], yhat)\r\n                yhat3 = inverse_difference(raw_values, yhat2, 10000 + 1 - i)\r\n                predictions.append(yhat3)\r\n```\r\nDo you know what could be the reason for this problem?\r\nFor information I use 2 excel file, one with only training data (400 000 of training data with the timestamp one it) and 1 who have the value I'm trying to predict (10 000 of data, only using it after prediction to put both prediction and reality on an excel file). \r\nI separated them to be sure the testing set would never be used for training/predicting (when the data are on the same file suddenly my prediction are accurate and no time gap).\r\nThank you for your time and your help!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/858", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/858/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/858/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/858/events", "html_url": "https://github.com/tflearn/tflearn/issues/858", "id": 247014341, "node_id": "MDU6SXNzdWUyNDcwMTQzNDE=", "number": 858, "title": "Confusion Matrix for HDF5 Convolutional Neural Network", "user": {"login": "DavidFH", "id": 6671333, "node_id": "MDQ6VXNlcjY2NzEzMzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6671333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavidFH", "html_url": "https://github.com/DavidFH", "followers_url": "https://api.github.com/users/DavidFH/followers", "following_url": "https://api.github.com/users/DavidFH/following{/other_user}", "gists_url": "https://api.github.com/users/DavidFH/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavidFH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavidFH/subscriptions", "organizations_url": "https://api.github.com/users/DavidFH/orgs", "repos_url": "https://api.github.com/users/DavidFH/repos", "events_url": "https://api.github.com/users/DavidFH/events{/privacy}", "received_events_url": "https://api.github.com/users/DavidFH/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-01T09:49:39Z", "updated_at": "2019-03-30T11:20:24Z", "closed_at": "2017-08-02T13:10:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am currently working with TFLearn to test different CNNs on a dataset. I have converted the dataset to HDF5 and managed to train a few practice networks. My question is how do I predict and plot a confusion matrix? The code I have so far is as follows:\r\n\r\n```\r\nfrom __future__ import division, print_function, absolute_import\r\n\r\nimport tflearn\r\nfrom tflearn.layers.core import input_data, dropout, fully_connected\r\nfrom tflearn.layers.conv import conv_2d, max_pool_2d\r\nfrom tflearn.layers.normalization import local_response_normalization\r\nfrom tflearn.layers.estimator import regression\r\n\r\nimport h5py\r\nimport numpy\r\nfrom sklearn.metrics import confusion_matrix\r\n\r\n# Import test data\r\nhdf5Test = h5py.File('/home/fletch67/dfhProject/Data/twoClasses/twoTest.h5',\r\n                      'r')\r\n\r\n# Split into features and labels\r\nX = hdf5Test['X']\r\nY = hdf5Test['Y']\r\n\r\n# Building convolutional network\r\nnetwork = input_data(shape=[None, 240, 320, 3], name='input')\r\nnetwork = conv_2d(network, 32, 3, activation='relu', regularizer=\"L2\")\r\nnetwork = max_pool_2d(network, 2)\r\nnetwork = local_response_normalization(network)\r\nnetwork = conv_2d(network, 64, 3, activation='relu', regularizer=\"L2\")\r\nnetwork = max_pool_2d(network, 2)\r\nnetwork = local_response_normalization(network)\r\nnetwork = fully_connected(network, 128, activation='tanh')\r\nnetwork = dropout(network, 0.8)\r\nnetwork = fully_connected(network, 256, activation='tanh')\r\nnetwork = dropout(network, 0.8)\r\nnetwork = fully_connected(network, 2, activation='softmax')\r\nnetwork = regression(\r\n  network,\r\n  optimizer='sgd',\r\n  learning_rate=0.01,\r\n  loss='categorical_crossentropy',\r\n  name='target'\r\n)\r\n\r\n# Training\r\nmodel = tflearn.DNN(network, tensorboard_verbose=0)\r\nmodel.load('/home/fletch67/dfhProject/Models/twoClasses/basicCNN/basicCNN_test'\r\n           '.tflearn')\r\n\r\n# Predict Values\r\npredictions = model.predict(X)\r\nprint(predictions)\r\n```\r\n\r\nWhen ever I try to print predictions I get the following error:\r\n\r\n```\r\nterminate called after throwing an instance of 'std::bad_alloc'\r\n  what():  std::bad_alloc\r\nAborted (core dumped)\r\n```\r\n\r\nI've read that sklearn can be used to produce a confusion matrix, however, have been unable to find direct instructions, any help or guidance would be appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/854", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/854/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/854/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/854/events", "html_url": "https://github.com/tflearn/tflearn/issues/854", "id": 246014889, "node_id": "MDU6SXNzdWUyNDYwMTQ4ODk=", "number": 854, "title": "Data augmentation modifies the original input data(?)", "user": {"login": "mubastan", "id": 17276763, "node_id": "MDQ6VXNlcjE3Mjc2NzYz", "avatar_url": "https://avatars0.githubusercontent.com/u/17276763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mubastan", "html_url": "https://github.com/mubastan", "followers_url": "https://api.github.com/users/mubastan/followers", "following_url": "https://api.github.com/users/mubastan/following{/other_user}", "gists_url": "https://api.github.com/users/mubastan/gists{/gist_id}", "starred_url": "https://api.github.com/users/mubastan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mubastan/subscriptions", "organizations_url": "https://api.github.com/users/mubastan/orgs", "repos_url": "https://api.github.com/users/mubastan/repos", "events_url": "https://api.github.com/users/mubastan/events{/privacy}", "received_events_url": "https://api.github.com/users/mubastan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-27T11:51:10Z", "updated_at": "2017-08-05T13:58:27Z", "closed_at": "2017-08-05T13:58:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "When processing an input mini batch of images with data augmentation (e.g., random blur) during training, are the original images also modified? Normally, I would expect that a copy of each batch is processed at each iteration and the original images are not modified, otherwise, the transformations are accumulated and this is not expected.\r\n\r\nIs this the case in tflearn? If it is, then it is very important and should at least be emphasized in the documentation.\r\n\r\nI have been doing cross-validation and realized that the validation performance steadily drops at each cross-validation iteration, which was unexpected. Then, I provided the training with a new copy of the data at each CV iteration and the results improved significantly. However this is only a partial solution, if the original training data is overwritten/modified by data augmentation, since it gets accumulated at each epoch.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/845", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/845/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/845/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/845/events", "html_url": "https://github.com/tflearn/tflearn/issues/845", "id": 244158040, "node_id": "MDU6SXNzdWUyNDQxNTgwNDA=", "number": 845, "title": "SELU Activation Fails (ELU updated?)", "user": {"login": "neighthan", "id": 12573501, "node_id": "MDQ6VXNlcjEyNTczNTAx", "avatar_url": "https://avatars3.githubusercontent.com/u/12573501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neighthan", "html_url": "https://github.com/neighthan", "followers_url": "https://api.github.com/users/neighthan/followers", "following_url": "https://api.github.com/users/neighthan/following{/other_user}", "gists_url": "https://api.github.com/users/neighthan/gists{/gist_id}", "starred_url": "https://api.github.com/users/neighthan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neighthan/subscriptions", "organizations_url": "https://api.github.com/users/neighthan/orgs", "repos_url": "https://api.github.com/users/neighthan/repos", "events_url": "https://api.github.com/users/neighthan/events{/privacy}", "received_events_url": "https://api.github.com/users/neighthan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-19T20:05:30Z", "updated_at": "2017-12-03T05:52:15Z", "closed_at": "2017-12-03T05:52:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "The `selu` activation function throws an error when run as is. It attempts\r\n\r\n```\r\nalpha = 1.6732632423543772848170429916717\r\nscale = 1.0507009873554804934193349852946\r\nreturn scale * tf.nn.elu(x, alpha)\r\n```\r\n\r\nbut `tf.nn.elu` accepts as parameters `features` and `name`. Thus `alpha` is being passed in as `name` which leads to the error copied below. I'm wondering if this SELU implementation was written on an older version of TF where ELU accepted different arguments? I'm using TF version 1.2.0 on macOS Sierra (10.12.5).\r\n\r\nExample code to generate this bug:\r\n```\r\nimport tensorflow as tf\r\nfrom tflearn import activations\r\n\r\ntf.layers.dense(tf.placeholder(tf.float32, (None, 1)), 1, activation=activations.selu)\r\n```\r\n\r\nError message:\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-3-bf4705907658> in <module>()\r\n      2 from tflearn import activations\r\n      3 \r\n----> 4 tf.layers.dense(tf.placeholder(tf.float32, (None, 1)), 1, activation=activations.selu)\r\n\r\n/anaconda/lib/python3.6/site-packages/tensorflow/python/layers/core.py in dense(inputs, units, activation, use_bias, kernel_initializer, bias_initializer, kernel_regularizer, bias_regularizer, activity_regularizer, trainable, name, reuse)\r\n    213                 _scope=name,\r\n    214                 _reuse=reuse)\r\n--> 215   return layer.apply(inputs)\r\n    216 \r\n    217 \r\n\r\n/anaconda/lib/python3.6/site-packages/tensorflow/python/layers/base.py in apply(self, inputs, *args, **kwargs)\r\n    490       Output tensor(s).\r\n    491     \"\"\"\r\n--> 492     return self.__call__(inputs, *args, **kwargs)\r\n    493 \r\n    494   def _assert_input_compatibility(self, inputs):\r\n\r\n/anaconda/lib/python3.6/site-packages/tensorflow/python/layers/base.py in __call__(self, inputs, *args, **kwargs)\r\n    439         # Check input assumptions set after layer building, e.g. input shape.\r\n    440         self._assert_input_compatibility(inputs)\r\n--> 441         outputs = self.call(inputs, *args, **kwargs)\r\n    442 \r\n    443         # Apply activity regularization.\r\n\r\n/anaconda/lib/python3.6/site-packages/tensorflow/python/layers/core.py in call(self, inputs)\r\n    143       outputs = nn.bias_add(outputs, self.bias)\r\n    144     if self.activation is not None:\r\n--> 145       return self.activation(outputs)  # pylint: disable=not-callable\r\n    146     return outputs\r\n    147 \r\n\r\n/anaconda/lib/python3.6/site-packages/tflearn/activations.py in selu(x)\r\n    304     alpha = 1.6732632423543772848170429916717\r\n    305     scale = 1.0507009873554804934193349852946\r\n--> 306     return scale * tf.nn.elu(x, alpha)\r\n\r\n/anaconda/lib/python3.6/site-packages/tensorflow/python/ops/gen_nn_ops.py in elu(features, name)\r\n    942     A `Tensor`. Has the same type as `features`.\r\n    943   \"\"\"\r\n--> 944   result = _op_def_lib.apply_op(\"Elu\", features=features, name=name)\r\n    945   return result\r\n    946 \r\n\r\n/anaconda/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py in apply_op(self, op_type_name, name, **keywords)\r\n    372     inputs = []\r\n    373     input_types = []\r\n--> 374     with g.as_default(), ops.name_scope(name) as scope:\r\n    375 \r\n    376       # Perform input type inference\r\n\r\n/anaconda/lib/python3.6/contextlib.py in __enter__(self)\r\n     80     def __enter__(self):\r\n     81         try:\r\n---> 82             return next(self.gen)\r\n     83         except StopIteration:\r\n     84             raise RuntimeError(\"generator didn't yield\") from None\r\n\r\n/anaconda/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in name_scope(name, default_name, values)\r\n   4357     values = []\r\n   4358   g = _get_graph_from_inputs(values)\r\n-> 4359   with g.as_default(), g.name_scope(n) as scope:\r\n   4360     yield scope\r\n   4361 # pylint: enable=g-doc-return-or-yield\r\n\r\n/anaconda/lib/python3.6/contextlib.py in __enter__(self)\r\n     80     def __enter__(self):\r\n     81         try:\r\n---> 82             return next(self.gen)\r\n     83         except StopIteration:\r\n     84             raise RuntimeError(\"generator didn't yield\") from None\r\n\r\n/anaconda/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in name_scope(self, name)\r\n   3012         # that are illegal as the initial character of an op name\r\n   3013         # (viz. '-', '\\', '/', and '_').\r\n-> 3014         if not _VALID_SCOPE_NAME_REGEX.match(name):\r\n   3015           raise ValueError(\"'%s' is not a valid scope name\" % name)\r\n   3016       else:\r\n\r\nTypeError: expected string or bytes-like object", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/833", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/833/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/833/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/833/events", "html_url": "https://github.com/tflearn/tflearn/issues/833", "id": 242299451, "node_id": "MDU6SXNzdWUyNDIyOTk0NTE=", "number": 833, "title": "Accuracy null and low loss", "user": {"login": "Erickira3", "id": 19682779, "node_id": "MDQ6VXNlcjE5NjgyNzc5", "avatar_url": "https://avatars3.githubusercontent.com/u/19682779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Erickira3", "html_url": "https://github.com/Erickira3", "followers_url": "https://api.github.com/users/Erickira3/followers", "following_url": "https://api.github.com/users/Erickira3/following{/other_user}", "gists_url": "https://api.github.com/users/Erickira3/gists{/gist_id}", "starred_url": "https://api.github.com/users/Erickira3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Erickira3/subscriptions", "organizations_url": "https://api.github.com/users/Erickira3/orgs", "repos_url": "https://api.github.com/users/Erickira3/repos", "events_url": "https://api.github.com/users/Erickira3/events{/privacy}", "received_events_url": "https://api.github.com/users/Erickira3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-12T08:29:35Z", "updated_at": "2017-07-20T05:58:42Z", "closed_at": "2017-07-20T05:58:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello everyone and thank you for looking at my question. \r\n\r\nI have data made of date (one entry per minute) for the first column and congestion (value, between 0 and 200) for the 2nd. My goal is to feed it to my neural network and so be able to predict for the next week the congestion at each minute (my dataset is more than 10M of entry, I shouldn't have problem of lack of data for training).\r\n\r\nProblem: I have an error (may be linked to me using the wrong loss/optimizer). When using my code (10 000 data of training for now) I have an accuracy of 0, a low loss (0.00X) and a bad prediction (not even close to the reality). Do you have any idea of where it could come from (I use Adam as an optimizer, Mean_square for loss and linear for activation)?\r\n\r\nHere is an example of what I got \r\n\r\n> Training Step: 7100 | total loss: 0.00304 | time: 1.385s | Adam | epoch: 100 | loss: 0.00304 - binary_acc: 0.0000 | val_loss: 0.00260 - val_acc: 0.0000 -- iter: 8999/8999\r\n\r\nMy code look like that:\r\n```\r\nfrom __future__ import print_function\r\nimport numpy\r\nimport numpy as np\r\nimport tflearn\r\nfrom pandas import DataFrame\r\nfrom pandas import Series\r\nfrom pandas import concat\r\nfrom pandas import read_csv\r\nfrom sklearn.preprocessing import MinMaxScaler\r\nfrom sklearn.metrics import mean_squared_error\r\nfrom math import sqrt\r\n\r\nimport datetime\r\n\r\n# Preprocessing function\r\nfrom tflearn import Accuracy\r\n\r\n\r\ndef preprocess(data):\r\n    return np.array(data, dtype=np.int32)\r\n\r\ndef parser(x):\r\n    return datetime.datetime.strptime(x, '%Y-%m-%d %H:%M:%S')\r\n\r\n\r\n# frame a sequence as a supervised learning problem\r\ndef timeseries_to_supervised(data, lag=1):\r\n    df = DataFrame(data)\r\n    columns = [df.shift(i) for i in range(1, lag + 1)]\r\n    columns.append(df)\r\n    df = concat(columns, axis=1)\r\n    df.fillna(0, inplace=True)\r\n    return df\r\n\r\n\r\ndef difference(dataset, interval=1):\r\n    diff = list()\r\n    for i in range(interval, len(dataset)):\r\n        value = dataset[i] - dataset[i - interval]\r\n        diff.append(value)\r\n    return Series(diff)\r\n\r\n\r\n# invert differenced value\r\ndef inverse_difference(history, yhat, interval=1):\r\n    return yhat + history[-interval]\r\n\r\n\r\n# scale train and test data to [-1, 1]\r\ndef scale(train, test):\r\n    # fit scaler\r\n    scaler = MinMaxScaler(feature_range=(-1, 1))\r\n    scaler = scaler.fit(train)\r\n    # transform train\r\n    train = train.reshape(train.shape[0], train.shape[1])\r\n    train_scaled = scaler.transform(train)\r\n    # transform test\r\n    test = test.reshape(test.shape[0], test.shape[1])\r\n    test_scaled = scaler.transform(test)\r\n    return scaler, train_scaled, test_scaled\r\n\r\n\r\n# inverse scaling for a forecasted value\r\ndef invert_scale(scaler, X, value):\r\n    new_row = [x for x in X] + [value]\r\n    array = numpy.array(new_row)\r\n    array = array.reshape(1, len(array))\r\n    inverted = scaler.inverse_transform(array)\r\n    return inverted[0, -1]\r\n\r\n\r\ndef fit_lstm(train, batch_size, nb_epoch, neurons):\r\n    X, y = train[0:-1], train[:, -1]\r\n    X = X[:, 0].reshape(len(X), 1)\r\n    y = y.reshape(len(y), 1)\r\n    # Build neural network\r\n    net = tflearn.input_data(shape=[None, 1])\r\n    net = tflearn.fully_connected(net, 1, activation='linear')\r\n    acc = Accuracy()\r\n    net = tflearn.regression(net, optimizer='adam', learning_rate=0.001,\r\n                             loss='mean_square', metric=acc)\r\n    # Define model\r\n    model = tflearn.DNN(net)\r\n    print (X.shape)\r\n    model.fit(X, y, n_epoch=nb_epoch, batch_size=batch_size, shuffle=False, show_metric=True)\r\n\r\n    return model\r\n\r\n\r\n# make a one-step forecast\r\ndef forecast_lstm(model, X):\r\n    X = X.reshape(len(X), 1)\r\n    yhat = model.predict(X)\r\n    return yhat[0, 0]\r\n\r\n# Load CSV file, indicate that the first column represents labels\r\ndata = read_csv('nowcastScaled.csv', header=0, parse_dates=[0], index_col=0, squeeze=True, date_parser=parser)\r\n\r\n\r\n# transform data to be stationary\r\nraw_values = data.values\r\ndiff_values = difference(raw_values, 1)\r\n\r\n# transform data to be supervised learning\r\nsupervised = timeseries_to_supervised(diff_values, 1)\r\nsupervised_values = supervised.values\r\n\r\n# split data into train and test-sets\r\ntrain, test = supervised_values[0:10000], supervised_values[10000:11000]\r\n\r\n# transform the scale of the data\r\nscaler, train_scaled, test_scaled = scale(train, test)\r\n\r\n# fit the model\r\nlstm_model = fit_lstm(train_scaled, 16, 15, 1)\r\nlstm_model.save('ModelTrainTfLearn')\r\n\r\n# forecast the entire training dataset to build up state for forecasting\r\ntrain_reshaped = train_scaled[:, 0].reshape(len(train_scaled), 1)\r\npredictiont = lstm_model.predict(train_reshaped)\r\nprint(\"Prediction: %s\" % str(predictiont[0][:3]))  # only show first 3 probas\r\n\r\n# walk-forward validation on the test data\r\npredictions = list()\r\nerror_scores = list()\r\nfor i in range(len(test_scaled)):\r\n    # make one-step forecast\r\n    X, y = test_scaled[i, 0:-1], test_scaled[i, -1]\r\n    yhat = forecast_lstm(lstm_model, X)\r\n    # X, y = test_scaled[i, 0:-1], test_scaled[i, -1]\r\n    # invert scaling\r\n    yhat = invert_scale(scaler, X, yhat)\r\n    # # invert differencing\r\n    yhat = inverse_difference(raw_values, yhat, len(test_scaled) + 1 - i)\r\n    # store forecast\r\n    predictions.append(yhat)\r\nrmse = sqrt(mean_squared_error(raw_values[10000:11000], predictions))\r\nprint('%d) Test RMSE: %.3f' % (1, rmse))\r\nerror_scores.append(rmse)\r\nprint (predictions)\r\nprint (raw_values[10000:11000])\r\n```\r\nWhat I'm trying to do is a time series prediction, is tflearn good for that or is it just my way to do it that is wrong?\r\n\r\nThank your for your attention and help.\r\n\r\n(Linked is the file I'm using)\r\n[nowcastScaled.zip](https://github.com/tflearn/tflearn/files/1141334/nowcastScaled.zip)\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/832", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/832/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/832/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/832/events", "html_url": "https://github.com/tflearn/tflearn/issues/832", "id": 241970833, "node_id": "MDU6SXNzdWUyNDE5NzA4MzM=", "number": 832, "title": "High accuracy but bad prediction with AlexNet", "user": {"login": "TrinhNC", "id": 19979949, "node_id": "MDQ6VXNlcjE5OTc5OTQ5", "avatar_url": "https://avatars2.githubusercontent.com/u/19979949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TrinhNC", "html_url": "https://github.com/TrinhNC", "followers_url": "https://api.github.com/users/TrinhNC/followers", "following_url": "https://api.github.com/users/TrinhNC/following{/other_user}", "gists_url": "https://api.github.com/users/TrinhNC/gists{/gist_id}", "starred_url": "https://api.github.com/users/TrinhNC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TrinhNC/subscriptions", "organizations_url": "https://api.github.com/users/TrinhNC/orgs", "repos_url": "https://api.github.com/users/TrinhNC/repos", "events_url": "https://api.github.com/users/TrinhNC/events{/privacy}", "received_events_url": "https://api.github.com/users/TrinhNC/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-07-11T08:44:04Z", "updated_at": "2018-10-24T02:47:14Z", "closed_at": "2017-08-11T14:30:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\nHi everyone,\r\nI have trained the AlexNet with the dataset of 17 different flowers. The accuracy is quite high is you can see in the picture :\r\n![image](https://user-images.githubusercontent.com/19979949/28059714-636171b4-6625-11e7-89e8-ac332fe9e1ef.png)\r\n\r\nHowever when I created another file to test the result, the predictions were very bad even when I tested with the images in the dataset itself. One note is that because of OOM (out of memory) error, I did decrease the size of last 2 fully connected layers to 2048, but I don't see any problem with this. Does anyone know the reason why?\r\n\r\nHere is the code of the test file. I just print out the number corresponding to the folder of the flowers but it does not match most of the time, like 80% fail.\r\n[testAlex.py.zip](https://github.com/tflearn/tflearn/files/1138254/testAlex.py.zip)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/826", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/826/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/826/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/826/events", "html_url": "https://github.com/tflearn/tflearn/issues/826", "id": 241187764, "node_id": "MDU6SXNzdWUyNDExODc3NjQ=", "number": 826, "title": "Broadcast shapes problem and accuracy at 0.", "user": {"login": "Erickira3", "id": 19682779, "node_id": "MDQ6VXNlcjE5NjgyNzc5", "avatar_url": "https://avatars3.githubusercontent.com/u/19682779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Erickira3", "html_url": "https://github.com/Erickira3", "followers_url": "https://api.github.com/users/Erickira3/followers", "following_url": "https://api.github.com/users/Erickira3/following{/other_user}", "gists_url": "https://api.github.com/users/Erickira3/gists{/gist_id}", "starred_url": "https://api.github.com/users/Erickira3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Erickira3/subscriptions", "organizations_url": "https://api.github.com/users/Erickira3/orgs", "repos_url": "https://api.github.com/users/Erickira3/repos", "events_url": "https://api.github.com/users/Erickira3/events{/privacy}", "received_events_url": "https://api.github.com/users/Erickira3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-07T08:02:21Z", "updated_at": "2017-07-12T01:09:40Z", "closed_at": "2017-07-12T01:09:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I had a problem and a question, following this [tutorial ](http://machinelearningmastery.com/time-series-forecasting-long-short-term-memory-network-python/)I did a neural network but I soon modified it to use TFlearn. \r\nThis is a part of my dataset to [train on](http://www.mediafire.com/file/wo36nt1e7vo6mqy/nowcastScaled.csv)\r\nIt's composed of 2 column, first the date and the congestion in col 2. My objective is to predict congestion.\r\n\r\nI went to this code:\r\n```\r\nfrom __future__ import print_function\r\nimport numpy\r\nimport numpy as np\r\nimport tflearn\r\nfrom pandas import DataFrame\r\nfrom pandas import Series\r\nfrom pandas import concat\r\nfrom pandas import read_csv\r\nfrom sklearn.preprocessing import MinMaxScaler\r\n\r\n# Load CSV file, indicate that the first column represents labels\r\ndata = read_csv('nowcastScaled.csv', header=0, parse_dates=[0], index_col=0, squeeze=True)\r\n\r\n\r\n# Preprocessing function\r\ndef preprocess(data):\r\n    return np.array(data, dtype=np.int32)\r\n\r\n\r\n# frame a sequence as a supervised learning problem\r\ndef timeseries_to_supervised(data, lag=1):\r\n    df = DataFrame(data)\r\n    columns = [df.shift(i) for i in range(1, lag + 1)]\r\n    columns.append(df)\r\n    df = concat(columns, axis=1)\r\n    df.fillna(0, inplace=True)\r\n    return df\r\n\r\n\r\ndef difference(dataset, interval=1):\r\n    diff = list()\r\n    for i in range(interval, len(dataset)):\r\n        value = dataset[i] - dataset[i - interval]\r\n        diff.append(value)\r\n    return Series(diff)\r\n\r\n\r\n# invert differenced value\r\ndef inverse_difference(history, yhat, interval=1):\r\n    return yhat + history[-interval]\r\n\r\n\r\n# scale train and test data to [-1, 1]\r\ndef scale(train, test):\r\n    # fit scaler\r\n    scaler = MinMaxScaler(feature_range=(-1, 1))\r\n    scaler = scaler.fit(train)\r\n    # transform train\r\n    train = train.reshape(train.shape[0], train.shape[1])\r\n    train_scaled = scaler.transform(train)\r\n    # transform test\r\n    test = test.reshape(test.shape[0], test.shape[1])\r\n    test_scaled = scaler.transform(test)\r\n    return scaler, train_scaled, test_scaled\r\n\r\n\r\n# inverse scaling for a forecasted value\r\ndef invert_scale(scaler, X, value):\r\n    new_row = [x for x in X] + [value]\r\n    array = numpy.array(new_row)\r\n    array = array.reshape(1, len(array))\r\n    inverted = scaler.inverse_transform(array)\r\n    return inverted[0, -1]\r\n\r\n\r\ndef fit_lstm(train, batch_size, nb_epoch, neurons):\r\n    X, y = train[0:-1], train[:, -1]\r\n    # Build neural network\r\n    net = tflearn.input_data(shape=[None, 1, 1])\r\n    net = tflearn.fully_connected(net, 32)\r\n    net = tflearn.fully_connected(net, 32)\r\n    net = tflearn.fully_connected(net, 1, activation='linear')\r\n    net = tflearn.regression(net, optimizer='adam', learning_rate=0.001,\r\n                             loss='mean_square')\r\n    # Define model\r\n    model = tflearn.DNN(net)\r\n\r\n    model.fit(X, y, n_epoch=2, batch_size=batch_size, shuffle=False, show_metric=True, validation_set=0.1)\r\n    return model\r\n\r\n\r\n# make a one-step forecast\r\ndef forecast_lstm(model, X):\r\n    yhat = model.predict(X)\r\n    return yhat[0, 0]\r\n\r\n\r\n# transform data to be stationary\r\nraw_values = data.values\r\ndiff_values = difference(raw_values, 1)\r\n\r\n# transform data to be supervised learning\r\nsupervised = timeseries_to_supervised(diff_values, 1)\r\nsupervised_values = supervised.values\r\n\r\n# split data into train and test-sets\r\ntrain, test = supervised_values[0:5000], supervised_values[5000:5500]\r\n\r\n# transform the scale of the data\r\nscaler, train_scaled, test_scaled = scale(train, test)\r\ntrain_sca = train_scaled[:, 0].reshape(len(train_scaled), 1, 1)\r\ntest_scaled = test_scaled[:, 0].reshape(len(test_scaled), 1, 1)\r\n\r\n# fit the model\r\nlstm_model = fit_lstm(train_sca, 16, 1500, 1)\r\nlstm_model.save('ModelTrainTfLearn')\r\n\r\n# forecast the entire training dataset to build up state for forecasting\r\ntrain_reshaped = train_scaled[:, 0].reshape(len(train_scaled), 1, 1)\r\nlstm_model.predict(train_reshaped)\r\n\r\n# walk-forward validation on the test data\r\npredictions = list()\r\nfor i in range(len(test_scaled)):\r\n    # make one-step forecast\r\n    X, y = test_scaled[i:-1], test_scaled[i, -1]\r\n    yhat = forecast_lstm(lstm_model, X)\r\n    # X, y = test_scaled[i, 0:-1], test_scaled[i, -1]\r\n    # invert scaling\r\n    yhat = invert_scale(scaler, X, yhat)\r\n    # # invert differencing\r\n    yhat = inverse_difference(raw_values, yhat, len(test_scaled) + 1 - i)\r\n    # store forecast\r\n    predictions.append(yhat)\r\n```\r\nBut now I have 2 problem:\r\n\r\n> Traceback (most recent call last):\r\n>   File \"/home/eric/NeuralNetworks/titanic.py\", line 120, in <module>\r\n>     yhat = invert_scale(scaler, X, yhat)\r\n>   File \"/home/eric/NeuralNetworks/titanic.py\", line 62, in invert_scale\r\n>     inverted = scaler.inverse_transform(array)\r\n>   File \"/usr/local/lib/python2.7/dist-packages/sklearn/preprocessing/data.py\", line 376, in inverse_transform\r\n>     X -= self.min_\r\n> ValueError: operands could not be broadcast together with shapes (1,500) (2,) (1,500)\r\n\r\nDo you know how to fix it?\r\n\r\nMy 2nd question was that while training the loss, binary_acc, val_loss and val_acc are always at 0. Is that normal?\r\n\r\nI'm sure I messed at many part but I can't see where (I'm still learning about machine learning).\r\nThanks for any help you would be able to provide.\r\n\r\n(Edit: I use only 2 epoch just because I'm trying to debug the error, on real condition I would use more)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/824", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/824/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/824/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/824/events", "html_url": "https://github.com/tflearn/tflearn/issues/824", "id": 240392658, "node_id": "MDU6SXNzdWUyNDAzOTI2NTg=", "number": 824, "title": "How to clone DNN model object", "user": {"login": "BBarbosa", "id": 7063937, "node_id": "MDQ6VXNlcjcwNjM5Mzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7063937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BBarbosa", "html_url": "https://github.com/BBarbosa", "followers_url": "https://api.github.com/users/BBarbosa/followers", "following_url": "https://api.github.com/users/BBarbosa/following{/other_user}", "gists_url": "https://api.github.com/users/BBarbosa/gists{/gist_id}", "starred_url": "https://api.github.com/users/BBarbosa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BBarbosa/subscriptions", "organizations_url": "https://api.github.com/users/BBarbosa/orgs", "repos_url": "https://api.github.com/users/BBarbosa/repos", "events_url": "https://api.github.com/users/BBarbosa/events{/privacy}", "received_events_url": "https://api.github.com/users/BBarbosa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-04T11:26:04Z", "updated_at": "2017-07-31T13:51:55Z", "closed_at": "2017-07-31T13:51:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi everyone!\r\nIs there any way of cloning a TFLearn's DNN model object? I'm trying to save the best status of it without using callbacks or saving it into a file but Python's copy functions (shallow copy and deep copy) don't seem to solve the problem. Any ideias? \r\nWith the best regards \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/819", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/819/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/819/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/819/events", "html_url": "https://github.com/tflearn/tflearn/issues/819", "id": 239469778, "node_id": "MDU6SXNzdWUyMzk0Njk3Nzg=", "number": 819, "title": "Unable to read RGB images in Tflearn", "user": {"login": "nimish1512", "id": 9910431, "node_id": "MDQ6VXNlcjk5MTA0MzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9910431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nimish1512", "html_url": "https://github.com/nimish1512", "followers_url": "https://api.github.com/users/nimish1512/followers", "following_url": "https://api.github.com/users/nimish1512/following{/other_user}", "gists_url": "https://api.github.com/users/nimish1512/gists{/gist_id}", "starred_url": "https://api.github.com/users/nimish1512/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nimish1512/subscriptions", "organizations_url": "https://api.github.com/users/nimish1512/orgs", "repos_url": "https://api.github.com/users/nimish1512/repos", "events_url": "https://api.github.com/users/nimish1512/events{/privacy}", "received_events_url": "https://api.github.com/users/nimish1512/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-06-29T12:57:21Z", "updated_at": "2017-06-29T15:17:11Z", "closed_at": "2017-06-29T15:17:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to train VGG model over CK+ dataset in Tflearn. However, using the image_preloader method, I am unable to read RGB images with each channel as a dimension of the tensor.Here is my code\r\nThis is the input layer for the network\r\n`self.network = input_data(shape=[None, 224, 224, 3])`\r\nThis is the image_preloader call:\r\n`self.train_images, self.train_labels = image_preloader(\"Dataset/sorted_set/\", image_shape=(224,224), mode=\"folder\", categorical_labels=True, normalize=False, filter_channel=False)`\r\n\r\nThe error I am getting is: \r\n`ValueError: Cannot feed value of shape (1, 224, 224) for Tensor \"InputData/X:0', which has shape \"(?, 224, 224, 3)\"`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/818", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/818/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/818/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/818/events", "html_url": "https://github.com/tflearn/tflearn/issues/818", "id": 239352376, "node_id": "MDU6SXNzdWUyMzkzNTIzNzY=", "number": 818, "title": "Bidirectional LTSM example throws shape error", "user": {"login": "colinskow", "id": 5303269, "node_id": "MDQ6VXNlcjUzMDMyNjk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5303269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colinskow", "html_url": "https://github.com/colinskow", "followers_url": "https://api.github.com/users/colinskow/followers", "following_url": "https://api.github.com/users/colinskow/following{/other_user}", "gists_url": "https://api.github.com/users/colinskow/gists{/gist_id}", "starred_url": "https://api.github.com/users/colinskow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colinskow/subscriptions", "organizations_url": "https://api.github.com/users/colinskow/orgs", "repos_url": "https://api.github.com/users/colinskow/repos", "events_url": "https://api.github.com/users/colinskow/events{/privacy}", "received_events_url": "https://api.github.com/users/colinskow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2017-06-29T02:55:39Z", "updated_at": "2020-04-05T02:17:00Z", "closed_at": "2017-07-10T12:39:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Running the following file throws an error:\r\nhttps://github.com/tflearn/tflearn/blob/master/examples/nlp/bidirectional_lstm.py\r\n\r\n`ValueError: Shape (128, ?) must have rank at least 3`\r\n\r\nSetup:\r\n- MacOS Sierra (10.12)\r\n- Python 2.7\r\n- Tensorflow v1.2.0\r\n- TFLearn v0.3.2\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"bidirectional_lstm.py\", line 47, in <module>\r\n    net = bidirectional_rnn(net, BasicLSTMCell(128), BasicLSTMCell(128))\r\n  File \"/Users/colin/tensorflow/lib/python2.7/site-packages/tflearn/layers/recurrent.py\", line 374, in bidirectional_rnn\r\n    dtype=tf.float32)\r\n  File \"/Users/colin/tensorflow/lib/python2.7/site-packages/tensorflow/python/ops/rnn.py\", line 375, in bidirectional_dynamic_rnn\r\n    time_major=time_major, scope=fw_scope)\r\n  File \"/Users/colin/tensorflow/lib/python2.7/site-packages/tensorflow/python/ops/rnn.py\", line 574, in dynamic_rnn\r\n    dtype=dtype)\r\n  File \"/Users/colin/tensorflow/lib/python2.7/site-packages/tensorflow/python/ops/rnn.py\", line 637, in _dynamic_rnn_loop\r\n    for input_ in flat_input)\r\n  File \"/Users/colin/tensorflow/lib/python2.7/site-packages/tensorflow/python/ops/rnn.py\", line 637, in <genexpr>\r\n    for input_ in flat_input)\r\n  File \"/Users/colin/tensorflow/lib/python2.7/site-packages/tensorflow/python/framework/tensor_shape.py\", line 649, in with_rank_at_least\r\n    raise ValueError(\"Shape %s must have rank at least %d\" % (self, rank))\r\nValueError: Shape (128, ?) must have rank at least 3\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/803", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/803/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/803/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/803/events", "html_url": "https://github.com/tflearn/tflearn/issues/803", "id": 237457663, "node_id": "MDU6SXNzdWUyMzc0NTc2NjM=", "number": 803, "title": "Error in tflearn.DNN()", "user": {"login": "Wermarter", "id": 16450814, "node_id": "MDQ6VXNlcjE2NDUwODE0", "avatar_url": "https://avatars3.githubusercontent.com/u/16450814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Wermarter", "html_url": "https://github.com/Wermarter", "followers_url": "https://api.github.com/users/Wermarter/followers", "following_url": "https://api.github.com/users/Wermarter/following{/other_user}", "gists_url": "https://api.github.com/users/Wermarter/gists{/gist_id}", "starred_url": "https://api.github.com/users/Wermarter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Wermarter/subscriptions", "organizations_url": "https://api.github.com/users/Wermarter/orgs", "repos_url": "https://api.github.com/users/Wermarter/repos", "events_url": "https://api.github.com/users/Wermarter/events{/privacy}", "received_events_url": "https://api.github.com/users/Wermarter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-06-21T08:42:52Z", "updated_at": "2017-09-08T11:31:30Z", "closed_at": "2017-06-22T11:31:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "[https://gist.github.com/Wermarter/9e0e29ee80adaa0f7af17b72d8e58a67](url)\r\nI'm trying to code my own version of VAE based on your example [https://github.com/tflearn/tflearn/blob/master/examples/images/variational_autoencoder.py](url)\r\nBut my terminal said:\r\n\r\n> Traceback (most recent call last):\r\n  File \"/home/wermarter/Desktop/ChienVAE.py\", line 113, in <module>\r\n    myVAE = VAE()\r\n  File \"/home/wermarter/Desktop/ChienVAE.py\", line 28, in __init__\r\n    self._build_graph()\r\n  File \"/home/wermarter/Desktop/ChienVAE.py\", line 71, in _build_graph\r\n    self.training_model = tflearn.DNN(training_net) # <========== Error\r\n  File \"/home/wermarter/anaconda3/lib/python3.5/site-packages/tflearn/models/dnn.py\", line 64, in __init__\r\n    best_val_accuracy=best_val_accuracy)\r\n  File \"/home/wermarter/anaconda3/lib/python3.5/site-packages/tflearn/helpers/trainer.py\", line 131, in __init__\r\n    clip_gradients)\r\n  File \"/home/wermarter/anaconda3/lib/python3.5/site-packages/tflearn/helpers/trainer.py\", line 651, in initialize_training_ops\r\n    ema_num_updates=self.training_steps)\r\n  File \"/home/wermarter/anaconda3/lib/python3.5/site-packages/tflearn/summaries.py\", line 239, in add_loss_summaries\r\n    loss_averages_op = loss_averages.apply([loss] + other_losses)\r\n  File \"/home/wermarter/anaconda3/lib/python3.5/site-packages/tensorflow/python/training/moving_averages.py\", line 375, in apply\r\n    colocate_with_primary=(var.op.type in [\"Variable\", \"VariableV2\"]))\r\n  File \"/home/wermarter/anaconda3/lib/python3.5/site-packages/tensorflow/python/training/slot_creator.py\", line 169, in create_zeros_slot\r\n    else array_ops.shape(primary.initialized_value()))\r\nAttributeError: 'Tensor' object has no attribute 'initialized_value'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/799", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/799/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/799/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/799/events", "html_url": "https://github.com/tflearn/tflearn/issues/799", "id": 236692136, "node_id": "MDU6SXNzdWUyMzY2OTIxMzY=", "number": 799, "title": " Looking for an example on how to use ConvLSTM2D layer in tensorflow Ask Question", "user": {"login": "ebadawy", "id": 4296272, "node_id": "MDQ6VXNlcjQyOTYyNzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4296272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebadawy", "html_url": "https://github.com/ebadawy", "followers_url": "https://api.github.com/users/ebadawy/followers", "following_url": "https://api.github.com/users/ebadawy/following{/other_user}", "gists_url": "https://api.github.com/users/ebadawy/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebadawy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebadawy/subscriptions", "organizations_url": "https://api.github.com/users/ebadawy/orgs", "repos_url": "https://api.github.com/users/ebadawy/repos", "events_url": "https://api.github.com/users/ebadawy/events{/privacy}", "received_events_url": "https://api.github.com/users/ebadawy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-18T00:33:10Z", "updated_at": "2018-07-26T10:03:41Z", "closed_at": "2017-07-04T15:00:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to implement a convolution LSTM model and ConvLSTM2D layer seems to be what I'm looking for, but couldn't find any example on how to use it.\r\n\r\nThis is the documentation in tensorflow website: https://www.tensorflow.org/versions/master/api_docs/python/tf/contrib/keras/layers/ConvLSTM2D", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/794", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/794/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/794/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/794/events", "html_url": "https://github.com/tflearn/tflearn/issues/794", "id": 235855956, "node_id": "MDU6SXNzdWUyMzU4NTU5NTY=", "number": 794, "title": "Saving LSTM cell internal structure", "user": {"login": "yhalk", "id": 13349982, "node_id": "MDQ6VXNlcjEzMzQ5OTgy", "avatar_url": "https://avatars0.githubusercontent.com/u/13349982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yhalk", "html_url": "https://github.com/yhalk", "followers_url": "https://api.github.com/users/yhalk/followers", "following_url": "https://api.github.com/users/yhalk/following{/other_user}", "gists_url": "https://api.github.com/users/yhalk/gists{/gist_id}", "starred_url": "https://api.github.com/users/yhalk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yhalk/subscriptions", "organizations_url": "https://api.github.com/users/yhalk/orgs", "repos_url": "https://api.github.com/users/yhalk/repos", "events_url": "https://api.github.com/users/yhalk/events{/privacy}", "received_events_url": "https://api.github.com/users/yhalk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-14T12:01:34Z", "updated_at": "2017-06-19T08:39:06Z", "closed_at": "2017-06-19T08:39:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\nis it possible to save the gate values, cell state and hidden state over the course of the training?\r\nI have tried adding a custom layer which  will save them, however it fails to do so, usually with errors like \r\n\r\n_You must feed a value for placeholder tensor 'InputData/X' with dtype float_\r\n \r\nThank you in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/780", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/780/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/780/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/780/events", "html_url": "https://github.com/tflearn/tflearn/issues/780", "id": 233098187, "node_id": "MDU6SXNzdWUyMzMwOTgxODc=", "number": 780, "title": "How to perform multi-regression with AlexNet?", "user": {"login": "disdaining", "id": 24705738, "node_id": "MDQ6VXNlcjI0NzA1NzM4", "avatar_url": "https://avatars1.githubusercontent.com/u/24705738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/disdaining", "html_url": "https://github.com/disdaining", "followers_url": "https://api.github.com/users/disdaining/followers", "following_url": "https://api.github.com/users/disdaining/following{/other_user}", "gists_url": "https://api.github.com/users/disdaining/gists{/gist_id}", "starred_url": "https://api.github.com/users/disdaining/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/disdaining/subscriptions", "organizations_url": "https://api.github.com/users/disdaining/orgs", "repos_url": "https://api.github.com/users/disdaining/repos", "events_url": "https://api.github.com/users/disdaining/events{/privacy}", "received_events_url": "https://api.github.com/users/disdaining/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-02T07:23:57Z", "updated_at": "2017-06-08T02:12:45Z", "closed_at": "2017-06-07T14:25:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Any example on how to predict floating numbers from image features?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/771", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/771/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/771/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/771/events", "html_url": "https://github.com/tflearn/tflearn/issues/771", "id": 231210709, "node_id": "MDU6SXNzdWUyMzEyMTA3MDk=", "number": 771, "title": "Is it possible to set alpha of a leaky relu?", "user": {"login": "kaluzaklein", "id": 6021137, "node_id": "MDQ6VXNlcjYwMjExMzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/6021137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaluzaklein", "html_url": "https://github.com/kaluzaklein", "followers_url": "https://api.github.com/users/kaluzaklein/followers", "following_url": "https://api.github.com/users/kaluzaklein/following{/other_user}", "gists_url": "https://api.github.com/users/kaluzaklein/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaluzaklein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaluzaklein/subscriptions", "organizations_url": "https://api.github.com/users/kaluzaklein/orgs", "repos_url": "https://api.github.com/users/kaluzaklein/repos", "events_url": "https://api.github.com/users/kaluzaklein/events{/privacy}", "received_events_url": "https://api.github.com/users/kaluzaklein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-25T00:49:39Z", "updated_at": "2017-05-25T20:55:46Z", "closed_at": "2017-05-25T20:55:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to set alpha of a leaky relu? In the simple case with default alpha, making a fully_connected layer is like this:\r\n\r\n`tflearn.fully_connected(inpt, h1, activation='leaky_relu', name=\"e1\")`\r\n\r\nIt looks like I can pass a function to the activation keyword but I am not sure if it is possible to specify alpha of the activation function. Do I have to do a python trick to pass a partial function? The full function is this one:\r\n\r\n`def leaky_relu(x, alpha=0.1, name=\"LeakyReLU\"):`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/766", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/766/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/766/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/766/events", "html_url": "https://github.com/tflearn/tflearn/issues/766", "id": 230591168, "node_id": "MDU6SXNzdWUyMzA1OTExNjg=", "number": 766, "title": "import tflearn error: AttributeError: module 'pandas' has no attribute 'computation'", "user": {"login": "ebonat", "id": 5694881, "node_id": "MDQ6VXNlcjU2OTQ4ODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5694881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebonat", "html_url": "https://github.com/ebonat", "followers_url": "https://api.github.com/users/ebonat/followers", "following_url": "https://api.github.com/users/ebonat/following{/other_user}", "gists_url": "https://api.github.com/users/ebonat/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebonat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebonat/subscriptions", "organizations_url": "https://api.github.com/users/ebonat/orgs", "repos_url": "https://api.github.com/users/ebonat/repos", "events_url": "https://api.github.com/users/ebonat/events{/privacy}", "received_events_url": "https://api.github.com/users/ebonat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2017-05-23T05:28:50Z", "updated_at": "2019-05-04T11:19:26Z", "closed_at": "2017-05-26T15:01:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "After installing tflearn in windows 10. \r\n\r\nFor the line of code: \r\n\r\n`import tflearn`\r\n\r\nI got  the error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Ernest\\git\\test-code\\test-code\\src\\tflearn_quick_start\\main.py\", line 5, in <module>\r\n    import tflearn\r\n  File \"C:\\Users\\Ernest\\AppData\\Local\\Continuum\\lib\\site-packages\\tflearn\\__init__.py\", line 4, in <module>\r\n    from . import config\r\n  File \"C:\\Users\\Ernest\\AppData\\Local\\Continuum\\lib\\site-packages\\tflearn\\config.py\", line 5, in <module>\r\n    from .variables import variable\r\n  File \"C:\\Users\\Ernest\\AppData\\Local\\Continuum\\lib\\site-packages\\tflearn\\variables.py\", line 7, in <module>\r\n    from tensorflow.contrib.framework.python.ops import add_arg_scope as contrib_add_arg_scope\r\n  File \"C:\\Users\\Ernest\\AppData\\Local\\Continuum\\lib\\site-packages\\tensorflow\\contrib\\__init__.py\", line 30, in <module>\r\n    from tensorflow.contrib import factorization\r\n  File \"C:\\Users\\Ernest\\AppData\\Local\\Continuum\\lib\\site-packages\\tensorflow\\contrib\\factorization\\__init__.py\", line 24, in <module>\r\n    from tensorflow.contrib.factorization.python.ops.gmm import *\r\n  File \"C:\\Users\\Ernest\\AppData\\Local\\Continuum\\lib\\site-packages\\tensorflow\\contrib\\factorization\\python\\ops\\gmm.py\", line 27, in <module>\r\n    from tensorflow.contrib.learn.python.learn.estimators import estimator\r\n  File \"C:\\Users\\Ernest\\AppData\\Local\\Continuum\\lib\\site-packages\\tensorflow\\contrib\\learn\\__init__.py\", line 87, in <module>\r\n    from tensorflow.contrib.learn.python.learn import *\r\n  File \"C:\\Users\\Ernest\\AppData\\Local\\Continuum\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\__init__.py\", line 23, in <module>\r\n    from tensorflow.contrib.learn.python.learn import *\r\n  File \"C:\\Users\\Ernest\\AppData\\Local\\Continuum\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\__init__.py\", line 25, in <module>\r\n    from tensorflow.contrib.learn.python.learn import estimators\r\n  File \"C:\\Users\\Ernest\\AppData\\Local\\Continuum\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\__init__.py\", line 297, in <module>\r\n    from tensorflow.contrib.learn.python.learn.estimators.dnn import DNNClassifier\r\n  File \"C:\\Users\\Ernest\\AppData\\Local\\Continuum\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\dnn.py\", line 29, in <module>\r\n    from tensorflow.contrib.learn.python.learn.estimators import dnn_linear_combined\r\n  File \"C:\\Users\\Ernest\\AppData\\Local\\Continuum\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\dnn_linear_combined.py\", line 31, in <module>\r\n    from tensorflow.contrib.learn.python.learn.estimators import estimator\r\n  File \"C:\\Users\\Ernest\\AppData\\Local\\Continuum\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\estimator.py\", line 49, in <module>\r\n    from tensorflow.contrib.learn.python.learn.learn_io import data_feeder\r\n  File \"C:\\Users\\Ernest\\AppData\\Local\\Continuum\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\learn_io\\__init__.py\", line 21, in <module>\r\n    from tensorflow.contrib.learn.python.learn.learn_io.dask_io import extract_dask_data\r\n  File \"C:\\Users\\Ernest\\AppData\\Local\\Continuum\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\learn_io\\dask_io.py\", line 26, in <module>\r\n    import dask.dataframe as dd\r\n  File \"C:\\Users\\Ernest\\AppData\\Local\\Continuum\\lib\\site-packages\\dask\\dataframe\\__init__.py\", line 3, in <module>\r\n    from .core import (DataFrame, Series, Index, _Frame, map_partitions,\r\n  File \"C:\\Users\\Ernest\\AppData\\Local\\Continuum\\lib\\site-packages\\dask\\dataframe\\core.py\", line 36, in <module>\r\n    pd.computation.expressions.set_use_numexpr(False)\r\n**AttributeError: module 'pandas' has no attribute 'computation'**\r\n```\r\nI use the following versions:\r\n\r\n```\r\nTensorFlow: 1.1.0-rc2\r\npandas: 0.20.1\r\n```\r\n\r\nAny help?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/761", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/761/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/761/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/761/events", "html_url": "https://github.com/tflearn/tflearn/issues/761", "id": 229225510, "node_id": "MDU6SXNzdWUyMjkyMjU1MTA=", "number": 761, "title": "tf.device is not working on tflearn.DNN model", "user": {"login": "jsikyoon", "id": 22428579, "node_id": "MDQ6VXNlcjIyNDI4NTc5", "avatar_url": "https://avatars1.githubusercontent.com/u/22428579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsikyoon", "html_url": "https://github.com/jsikyoon", "followers_url": "https://api.github.com/users/jsikyoon/followers", "following_url": "https://api.github.com/users/jsikyoon/following{/other_user}", "gists_url": "https://api.github.com/users/jsikyoon/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsikyoon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsikyoon/subscriptions", "organizations_url": "https://api.github.com/users/jsikyoon/orgs", "repos_url": "https://api.github.com/users/jsikyoon/repos", "events_url": "https://api.github.com/users/jsikyoon/events{/privacy}", "received_events_url": "https://api.github.com/users/jsikyoon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-17T03:08:52Z", "updated_at": "2017-10-18T00:04:04Z", "closed_at": "2017-10-18T00:04:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI have used tflearn to quick prototyping, and I found I set device as cpu for parallel running, and the models were using gpu memory.\r\n\r\nI captured part of my code in here.\r\n\r\n  with tf.device('/cpu:0'):\r\n    # Network building\r\n    net = tflearn.input_data([None, FLAGS.input_length,len(FLAGS.select_list.split(\",\"))])\r\n    net = tflearn.lstm(net, len(FLAGS.select_list.split(\",\"))*FLAGS.lstm_num);\r\n    net = tflearn.fully_connected(net, len(FLAGS.select_list.split(\",\"))*FLAGS.output_length);\r\n    net = tflearn.regression(net, optimizer='sgd', learning_rate=0.1,metric='R2',\r\n                         loss='mean_square');\r\n    # Training\r\n    model = tflearn.DNN(net, tensorboard_verbose=0);\r\n\r\n\r\nThanks.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/753", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/753/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/753/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/753/events", "html_url": "https://github.com/tflearn/tflearn/issues/753", "id": 228325017, "node_id": "MDU6SXNzdWUyMjgzMjUwMTc=", "number": 753, "title": "Model accuracy on a new session", "user": {"login": "BBarbosa", "id": 7063937, "node_id": "MDQ6VXNlcjcwNjM5Mzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7063937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BBarbosa", "html_url": "https://github.com/BBarbosa", "followers_url": "https://api.github.com/users/BBarbosa/followers", "following_url": "https://api.github.com/users/BBarbosa/following{/other_user}", "gists_url": "https://api.github.com/users/BBarbosa/gists{/gist_id}", "starred_url": "https://api.github.com/users/BBarbosa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BBarbosa/subscriptions", "organizations_url": "https://api.github.com/users/BBarbosa/orgs", "repos_url": "https://api.github.com/users/BBarbosa/repos", "events_url": "https://api.github.com/users/BBarbosa/events{/privacy}", "received_events_url": "https://api.github.com/users/BBarbosa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-12T15:20:54Z", "updated_at": "2017-05-19T08:54:34Z", "closed_at": "2017-05-19T08:54:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi everyone!\r\nI'm using _Tensorflow 1.0.1_ and _TFlearn 0.3_ on _Windows10_.\r\n\r\nI came across with an issue about the model's accuracy. I have a script that trains and evaluates the network  repeatedly until it reaches a stop criteria. Then, it saves the trained model on a file so i can load it later.\r\n\r\nIf i load the trained model right after finishing the training (on the same session as the training) i get an accuracy (command prompt on the left). However, if i load it in other script (i think it creates a new session right?) the accuracy is totally different (command prompt on the right). It should be equal because the test set is exactly the same on the two situations.\r\n\r\nAny ideias how can i solve this issue? Or what is it all about?\r\n\r\n![log](https://cloud.githubusercontent.com/assets/7063937/26004406/a8ff8200-372d-11e7-846c-ff7b91045605.png)\r\n  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/751", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/751/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/751/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/751/events", "html_url": "https://github.com/tflearn/tflearn/issues/751", "id": 228299125, "node_id": "MDU6SXNzdWUyMjgyOTkxMjU=", "number": 751, "title": "MemoryError when running convnet_cifar10.py", "user": {"login": "octy40", "id": 11152426, "node_id": "MDQ6VXNlcjExMTUyNDI2", "avatar_url": "https://avatars3.githubusercontent.com/u/11152426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/octy40", "html_url": "https://github.com/octy40", "followers_url": "https://api.github.com/users/octy40/followers", "following_url": "https://api.github.com/users/octy40/following{/other_user}", "gists_url": "https://api.github.com/users/octy40/gists{/gist_id}", "starred_url": "https://api.github.com/users/octy40/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/octy40/subscriptions", "organizations_url": "https://api.github.com/users/octy40/orgs", "repos_url": "https://api.github.com/users/octy40/repos", "events_url": "https://api.github.com/users/octy40/events{/privacy}", "received_events_url": "https://api.github.com/users/octy40/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-12T13:53:50Z", "updated_at": "2017-05-17T12:39:39Z", "closed_at": "2017-05-17T12:39:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm getting a MemoryError when running the convnet_cifar10.py built-in example. It seems like the error is generated by tflearn.data_utils.shuffle(). Is anyone else experiencing this issue when running this example?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/744", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/744/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/744/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/744/events", "html_url": "https://github.com/tflearn/tflearn/issues/744", "id": 227341086, "node_id": "MDU6SXNzdWUyMjczNDEwODY=", "number": 744, "title": "How to view tflearn version?", "user": {"login": "willduan", "id": 14313839, "node_id": "MDQ6VXNlcjE0MzEzODM5", "avatar_url": "https://avatars2.githubusercontent.com/u/14313839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willduan", "html_url": "https://github.com/willduan", "followers_url": "https://api.github.com/users/willduan/followers", "following_url": "https://api.github.com/users/willduan/following{/other_user}", "gists_url": "https://api.github.com/users/willduan/gists{/gist_id}", "starred_url": "https://api.github.com/users/willduan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willduan/subscriptions", "organizations_url": "https://api.github.com/users/willduan/orgs", "repos_url": "https://api.github.com/users/willduan/repos", "events_url": "https://api.github.com/users/willduan/events{/privacy}", "received_events_url": "https://api.github.com/users/willduan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-09T11:56:54Z", "updated_at": "2017-05-19T04:13:43Z", "closed_at": "2017-05-19T04:13:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "when I use tensorflow, i can use this method to view tensorflow's version.\r\n```\r\n>>>import tensorflow as tf\r\n>>>tf.__version__\r\n```\r\n but I cannot see the version of tflearn using the same method.\r\n```\r\nimport tflearn\r\ntflearn.__version__\r\n#or I tried\r\ntflearn.version\r\n```\r\nSo, how can I see the version of tflearn? thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/740", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/740/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/740/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/740/events", "html_url": "https://github.com/tflearn/tflearn/issues/740", "id": 226144644, "node_id": "MDU6SXNzdWUyMjYxNDQ2NDQ=", "number": 740, "title": "Nan in summary histogram?", "user": {"login": "Noahyt", "id": 23128135, "node_id": "MDQ6VXNlcjIzMTI4MTM1", "avatar_url": "https://avatars1.githubusercontent.com/u/23128135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Noahyt", "html_url": "https://github.com/Noahyt", "followers_url": "https://api.github.com/users/Noahyt/followers", "following_url": "https://api.github.com/users/Noahyt/following{/other_user}", "gists_url": "https://api.github.com/users/Noahyt/gists{/gist_id}", "starred_url": "https://api.github.com/users/Noahyt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Noahyt/subscriptions", "organizations_url": "https://api.github.com/users/Noahyt/orgs", "repos_url": "https://api.github.com/users/Noahyt/repos", "events_url": "https://api.github.com/users/Noahyt/events{/privacy}", "received_events_url": "https://api.github.com/users/Noahyt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-05-03T23:42:05Z", "updated_at": "2018-03-03T19:57:38Z", "closed_at": "2017-05-05T21:54:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to train cnn. \r\n\r\nI saw that some others had this issue in TensorFlow and solved it by changing the /epsilon parameter of the Adam trainer, but this did not fix my error. \r\n\r\n```\r\nCaused by op u'Conv2D/W/Gradients', defined at:\r\n  File \"./TFLEARN_CONV.py\", line 82, in <module>\r\n    model = tflearn.DNN(network, tensorboard_dir='output/', tensorboard_verbose=3, checkpoint_path='output')\r\n  File \"/home/toyonaga/.local/lib/python2.7/site-packages/tflearn/models/dnn.py\", line 64, in __init__\r\n    best_val_accuracy=best_val_accuracy)\r\n  File \"/home/toyonaga/.local/lib/python2.7/site-packages/tflearn/helpers/trainer.py\", line 131, in __init__\r\n    clip_gradients)\r\n  File \"/home/toyonaga/.local/lib/python2.7/site-packages/tflearn/helpers/trainer.py\", line 671, in initialize_training_ops\r\n    self.create_summaries(tensorboard_verbose)\r\n  File \"/home/toyonaga/.local/lib/python2.7/site-packages/tflearn/helpers/trainer.py\", line 865, in create_summaries\r\n    summarize_gradients(self.grad, summ_collection)\r\n  File \"/home/toyonaga/.local/lib/python2.7/site-packages/tflearn/helpers/summarizer.py\", line 75, in summarize_gradients\r\n    summaries.add_gradients_summary(grads, \"\", \"\", summary_collection)\r\n  File \"/home/toyonaga/.local/lib/python2.7/site-packages/tflearn/summaries.py\", line 132, in add_gradients_summary\r\n    collection_key))\r\n  File \"/home/toyonaga/.local/lib/python2.7/site-packages/tflearn/summaries.py\", line 44, in get_summary\r\n    summ = tf.summary.histogram(tag, value)\r\n  File \"/share/sw/free/tensorflow.1/1.1.0/lib/python2.7/site-packages/tensorflow/python/summary/summary.py\", line 209, in histogram\r\n    tag=scope.rstrip('/'), values=values, name=scope)\r\n  File \"/share/sw/free/tensorflow.1/1.1.0/lib/python2.7/site-packages/tensorflow/python/ops/gen_logging_ops.py\", line 139, in _histogram_summary\r\n    name=name)\r\n  File \"/share/sw/free/tensorflow.1/1.1.0/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 768, in apply_op\r\n    op_def=op_def)\r\n  File \"/share/sw/free/tensorflow.1/1.1.0/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2336, in create_op\r\n    original_op=self._default_original_op, op_def=op_def)\r\n  File \"/share/sw/free/tensorflow.1/1.1.0/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1228, in __init__\r\n    self._traceback = _extract_stack()\r\n\r\nInvalidArgumentError (see above for traceback): Nan in summary histogram for: Conv2D/W/Gradients\r\n\t [[Node: Conv2D/W/Gradients = HistogramSummary[T=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](Conv2D/W/Gradients/tag, Adam/clip_by_global_norm/Adam/clip_by_global_norm/_0/_105)]]\r\n\r\nException in thread Thread-22 (most likely raised during interpreter shutdown):\r\nTraceback (most recent call last):\r\n  File \"/share/sw/free/anaconda/anaconda2/lib/python2.7/threading.py\", line 801, in __bootstrap_inner\r\n  File \"/share/sw/free/anaconda/anaconda2/lib/python2.7/threading.py\", line 754, in run\r\n  File \"/home/toyonaga/.local/lib/python2.7/site-packages/tflearn/data_flow.py\", line 187, in fill_feed_dict_queue\r\n  File \"/home/toyonaga/.local/lib/python2.7/site-packages/tflearn/data_flow.py\", line 222, in retrieve_data\r\n  File \"/home/toyonaga/.local/lib/python2.7/site-packages/tflearn/utils.py\", line 185, in slice_array\r\n  File \"h5py/_objects.pyx\", line 54, in h5py._objects.with_phil.wrapper (/tmp/pip-nCYoKW-build/h5py/_objects.c:2840)\r\n  File \"h5py/_objects.pyx\", line 55, in h5py._objects.with_phil.wrapper (/tmp/pip-nCYoKW-build/h5py/_objects.c:2798)\r\n  File \"/home/toyonaga/.local/lib/python2.7/site-packages/h5py/_hl/dataset.py\", line 410, in __getitem__\r\n<type 'exceptions.TypeError'>: 'NoneType' object is not callable\r\nsrun: error: gpu-17-35: task 0: Exited with exit code 1\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/738", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/738/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/738/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/738/events", "html_url": "https://github.com/tflearn/tflearn/issues/738", "id": 225689971, "node_id": "MDU6SXNzdWUyMjU2ODk5NzE=", "number": 738, "title": "DNN model.load() and model.save() Error", "user": {"login": "nimish1512", "id": 9910431, "node_id": "MDQ6VXNlcjk5MTA0MzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9910431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nimish1512", "html_url": "https://github.com/nimish1512", "followers_url": "https://api.github.com/users/nimish1512/followers", "following_url": "https://api.github.com/users/nimish1512/following{/other_user}", "gists_url": "https://api.github.com/users/nimish1512/gists{/gist_id}", "starred_url": "https://api.github.com/users/nimish1512/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nimish1512/subscriptions", "organizations_url": "https://api.github.com/users/nimish1512/orgs", "repos_url": "https://api.github.com/users/nimish1512/repos", "events_url": "https://api.github.com/users/nimish1512/events{/privacy}", "received_events_url": "https://api.github.com/users/nimish1512/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-05-02T13:10:01Z", "updated_at": "2017-05-04T04:12:24Z", "closed_at": "2017-05-04T04:12:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am training a cnn using` model.fit()` and saving it using `model.save(\"tflearn.model\")`\r\nHowever, this creates 4 files:\r\n1) tflearn.model.data-00000-of-00001\r\n2) tflearn.model.meta\r\n3) tflearn.model.index\r\n4) checkpoint\r\n\r\nWhile loading the model, which file should I use?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/737", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/737/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/737/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/737/events", "html_url": "https://github.com/tflearn/tflearn/issues/737", "id": 225530661, "node_id": "MDU6SXNzdWUyMjU1MzA2NjE=", "number": 737, "title": "Custom preprocessing not available?", "user": {"login": "Noahyt", "id": 23128135, "node_id": "MDQ6VXNlcjIzMTI4MTM1", "avatar_url": "https://avatars1.githubusercontent.com/u/23128135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Noahyt", "html_url": "https://github.com/Noahyt", "followers_url": "https://api.github.com/users/Noahyt/followers", "following_url": "https://api.github.com/users/Noahyt/following{/other_user}", "gists_url": "https://api.github.com/users/Noahyt/gists{/gist_id}", "starred_url": "https://api.github.com/users/Noahyt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Noahyt/subscriptions", "organizations_url": "https://api.github.com/users/Noahyt/orgs", "repos_url": "https://api.github.com/users/Noahyt/repos", "events_url": "https://api.github.com/users/Noahyt/events{/privacy}", "received_events_url": "https://api.github.com/users/Noahyt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-01T21:21:38Z", "updated_at": "2017-05-03T22:46:55Z", "closed_at": "2017-05-03T22:46:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to write a custom preprocessing function (image resizing).   I am running tflern v.03 and Tensorflow 1.0.1\r\n\r\nMy code:\r\n\r\n```\r\ndef bin_img_prep(X):\r\n    X = bin_ndarray(X,new_shape=(X.shape[0],50,50,1))\r\n    return X\r\n\r\nReal-time image preprocessing\r\nimg_prep = tflearn.ImagePreprocessing()\r\nimg_prep.add_custom_preprocessing(bin_img_prep)\r\n```\r\n\r\nError:\r\n`AttributeError: 'ImagePreprocessing' object has no attribute 'add_custom_preprocessing'`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/730", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/730/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/730/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/730/events", "html_url": "https://github.com/tflearn/tflearn/issues/730", "id": 225036849, "node_id": "MDU6SXNzdWUyMjUwMzY4NDk=", "number": 730, "title": "Exception in thread ", "user": {"login": "Dartlen", "id": 4067298, "node_id": "MDQ6VXNlcjQwNjcyOTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/4067298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dartlen", "html_url": "https://github.com/Dartlen", "followers_url": "https://api.github.com/users/Dartlen/followers", "following_url": "https://api.github.com/users/Dartlen/following{/other_user}", "gists_url": "https://api.github.com/users/Dartlen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dartlen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dartlen/subscriptions", "organizations_url": "https://api.github.com/users/Dartlen/orgs", "repos_url": "https://api.github.com/users/Dartlen/repos", "events_url": "https://api.github.com/users/Dartlen/events{/privacy}", "received_events_url": "https://api.github.com/users/Dartlen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-04-28T10:07:55Z", "updated_at": "2017-04-28T19:28:49Z", "closed_at": "2017-04-28T19:28:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/728", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/728/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/728/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/728/events", "html_url": "https://github.com/tflearn/tflearn/issues/728", "id": 224710989, "node_id": "MDU6SXNzdWUyMjQ3MTA5ODk=", "number": 728, "title": "Generate a unicode sequence on Python  2.7", "user": {"login": "yarongon", "id": 3857911, "node_id": "MDQ6VXNlcjM4NTc5MTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/3857911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarongon", "html_url": "https://github.com/yarongon", "followers_url": "https://api.github.com/users/yarongon/followers", "following_url": "https://api.github.com/users/yarongon/following{/other_user}", "gists_url": "https://api.github.com/users/yarongon/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarongon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarongon/subscriptions", "organizations_url": "https://api.github.com/users/yarongon/orgs", "repos_url": "https://api.github.com/users/yarongon/repos", "events_url": "https://api.github.com/users/yarongon/events{/privacy}", "received_events_url": "https://api.github.com/users/yarongon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-27T08:34:24Z", "updated_at": "2017-04-27T22:38:58Z", "closed_at": "2017-04-27T22:38:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use tensorflow (1.0.1) and tflearn (0.3) with Python 2.7\r\nThis is a code snippet from the function `generate`, in  `generator.py` (lines 220 - 228):\r\n```python\r\n\tif type(sequence) == str:\r\n\t    generated += next_char\r\n\t    sequence = sequence[1:] + next_char\r\n\t    whole_sequence += next_char\r\n\telse:\r\n\t    generated.append(next_char)\r\n\t    sequence = sequence[1:]\r\n\t    sequence.append(next_char)\r\n\t    whole_sequence.append(next_char)\r\n```\r\nWhen `sequence` is `unicode`, the condition goes to the `else` part, and since `unicode` does not a method `append`, I get the following exception:\r\n`AttributeError: 'unicode' object has no attribute 'append'`\r\nOf course this does not happen in Python 3. To fix it, I suggest to simply add a condition to check if the sequence is of type `unicode`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/725", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/725/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/725/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/725/events", "html_url": "https://github.com/tflearn/tflearn/issues/725", "id": 223660902, "node_id": "MDU6SXNzdWUyMjM2NjA5MDI=", "number": 725, "title": "[Errno 2] No such file or directory: '17flowers\\\\17flowers.pkl'", "user": {"login": "Coderx7", "id": 5382892, "node_id": "MDQ6VXNlcjUzODI4OTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5382892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Coderx7", "html_url": "https://github.com/Coderx7", "followers_url": "https://api.github.com/users/Coderx7/followers", "following_url": "https://api.github.com/users/Coderx7/following{/other_user}", "gists_url": "https://api.github.com/users/Coderx7/gists{/gist_id}", "starred_url": "https://api.github.com/users/Coderx7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Coderx7/subscriptions", "organizations_url": "https://api.github.com/users/Coderx7/orgs", "repos_url": "https://api.github.com/users/Coderx7/repos", "events_url": "https://api.github.com/users/Coderx7/events{/privacy}", "received_events_url": "https://api.github.com/users/Coderx7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-23T19:25:33Z", "updated_at": "2017-11-25T13:28:14Z", "closed_at": "2017-04-23T20:58:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\nI tried to run [this example](https://github.com/tflearn/tflearn/blob/master/examples/images/alexnet.py) on windows, but I faced with the following errorrs: \r\n```\r\nStarting to parse images...\r\n\r\n---------------------------------------------------------------------------\r\nFileNotFoundError                         Traceback (most recent call last)\r\nC:\\Users\\Master\\Anaconda3\\envs\\anaconda35\\lib\\site-packages\\tflearn\\data_utils.py in build_image_dataset_from_dir(directory, dataset_file, resize, convert_gray, filetypes, shuffle_data, categorical_Y)\r\n    594     try:\r\n--> 595         X, Y = pickle.load(open(dataset_file, 'rb'))\r\n    596     except Exception:\r\n\r\nFileNotFoundError: [Errno 2] No such file or directory: '17flowers\\\\17flowers.pkl'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nAttributeError                            Traceback (most recent call last)\r\nC:\\Users\\Master\\Anaconda3\\envs\\anaconda35\\lib\\site-packages\\tflearn\\data_utils.py in directory_to_samples(directory, flags, filter_channel)\r\n    730     try: # Python 2\r\n--> 731         classes = sorted(os.walk(directory).next()[1])\r\n    732     except Exception: # Python 3\r\n\r\nAttributeError: 'generator' object has no attribute 'next'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nStopIteration                             Traceback (most recent call last)\r\n<ipython-input-23-db5d7800ffa0> in <module>()\r\n      1 import tflearn.datasets.oxflower17 as oxflower17\r\n----> 2 X, Y = oxflower17.load_data(one_hot=True, resize_pics=(227, 227))\r\n\r\nC:\\Users\\Master\\Anaconda3\\envs\\anaconda35\\lib\\site-packages\\tflearn\\datasets\\oxflower17.py in load_data(dirname, resize_pics, shuffle, one_hot)\r\n     32                                         convert_gray=False,\r\n     33                                         shuffle_data=shuffle,\r\n---> 34                                         categorical_Y=one_hot)\r\n     35 \r\n     36     return X, Y\r\n\r\nC:\\Users\\Master\\Anaconda3\\envs\\anaconda35\\lib\\site-packages\\tflearn\\data_utils.py in build_image_dataset_from_dir(directory, dataset_file, resize, convert_gray, filetypes, shuffle_data, categorical_Y)\r\n    595         X, Y = pickle.load(open(dataset_file, 'rb'))\r\n    596     except Exception:\r\n--> 597         X, Y = image_dirs_to_samples(directory, resize, convert_gray, filetypes)\r\n    598         if categorical_Y:\r\n    599             Y = to_categorical(Y, np.max(Y) + 1) # First class is '0'\r\n\r\nC:\\Users\\Master\\Anaconda3\\envs\\anaconda35\\lib\\site-packages\\tflearn\\data_utils.py in image_dirs_to_samples(directory, resize, convert_gray, filetypes)\r\n    574     if filetypes:\r\n    575         if filetypes not in [list, tuple]: filetypes = list(filetypes)\r\n--> 576     samples, targets = directory_to_samples(directory, flags=filetypes)\r\n    577     for i, s in enumerate(samples):\r\n    578         samples[i] = load_image(s)\r\n\r\nC:\\Users\\Master\\Anaconda3\\envs\\anaconda35\\lib\\site-packages\\tflearn\\data_utils.py in directory_to_samples(directory, flags, filter_channel)\r\n    731         classes = sorted(os.walk(directory).next()[1])\r\n    732     except Exception: # Python 3\r\n--> 733         classes = sorted(os.walk(directory).__next__()[1])\r\n    734     for c in classes:\r\n    735         c_dir = os.path.join(directory, c)\r\n\r\nStopIteration: \r\n\r\n```\r\nI installed tflearn using pip in windows 10  (", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/719", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/719/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/719/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/719/events", "html_url": "https://github.com/tflearn/tflearn/issues/719", "id": 222351937, "node_id": "MDU6SXNzdWUyMjIzNTE5Mzc=", "number": 719, "title": "How to use RNN by gru", "user": {"login": "shiratsu", "id": 918490, "node_id": "MDQ6VXNlcjkxODQ5MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/918490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shiratsu", "html_url": "https://github.com/shiratsu", "followers_url": "https://api.github.com/users/shiratsu/followers", "following_url": "https://api.github.com/users/shiratsu/following{/other_user}", "gists_url": "https://api.github.com/users/shiratsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/shiratsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shiratsu/subscriptions", "organizations_url": "https://api.github.com/users/shiratsu/orgs", "repos_url": "https://api.github.com/users/shiratsu/repos", "events_url": "https://api.github.com/users/shiratsu/events{/privacy}", "received_events_url": "https://api.github.com/users/shiratsu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-18T09:18:08Z", "updated_at": "2017-04-26T06:12:17Z", "closed_at": "2017-04-18T21:59:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi.\r\nI try to use RNN by tflearn.\r\n\r\nI can use tflearn.ltsm.\r\nHowever,if i tried to use tflearn.gru,some error would happen.\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py\", line 491, in apply_op\r\n    preferred_dtype=default_dtype)\r\n  File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 716, in internal_convert_to_tensor\r\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n  File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 589, in _TensorTensorConversionFunction\r\n    % (dtype.name, t.dtype.name, str(t)))\r\nValueError: Tensor conversion requested dtype int32 for Tensor with dtype float32: 'Tensor(\"GRU/GRU/GRUCell/Gates/add:0\", shape=(?, 12), dtype=float32)'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"gru_tflearn_sample.py\", line 62, in <module>\r\n    net = tflearn.gru(net, n_units=6)\r\n  File \"/usr/local/lib/python3.6/site-packages/tflearn/layers/recurrent.py\", line 294, in gru\r\n    scope=scope, name=name)\r\n  File \"/usr/local/lib/python3.6/site-packages/tflearn/layers/recurrent.py\", line 67, in _rnn_template\r\n    sequence_length=sequence_length)\r\n  File \"/usr/local/lib/python3.6/site-packages/tensorflow/contrib/rnn/python/ops/core_rnn.py\", line 197, in static_rnn\r\n    (output, state) = call_cell()\r\n  File \"/usr/local/lib/python3.6/site-packages/tensorflow/contrib/rnn/python/ops/core_rnn.py\", line 184, in <lambda>\r\n    call_cell = lambda: cell(input_, state)\r\n  File \"/usr/local/lib/python3.6/site-packages/tflearn/layers/recurrent.py\", line 601, in __call__\r\n    self.trainable, self.restore, self.reuse))\r\n  File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/ops/array_ops.py\", line 1216, in split\r\n    split_dim=axis, num_split=num_or_size_splits, value=value, name=name)\r\n  File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 3426, in _split\r\n    num_split=num_split, name=name)\r\n  File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py\", line 509, in apply_op\r\n    (prefix, dtypes.as_dtype(input_arg.type).name))\r\nTypeError: Input 'split_dim' of 'Split' Op has type float32 that does not match expected type of int32.\r\n```\r\n\r\nMy code is here.\r\n```\r\n# coding: UTF-8\r\n\r\nimport numpy as np\r\nimport pandas as pd\r\nimport tflearn\r\nimport matplotlib.pyplot as plt\r\nimport random\r\nimport sys # \u30e2\u30b8\u30e5\u30fc\u30eb\u5c5e\u6027 argv \u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\r\n\r\nrandom.seed(0)\r\nnp.random.seed(0)\r\n\r\nargvs = sys.argv  # \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3092\u683c\u7d0d\u3057\u305f\u30ea\u30b9\u30c8\u306e\u53d6\u5f97\r\n\r\ndataframe = pd.read_csv(argvs[1],\r\n        usecols=[1],\r\n        engine='python',\r\n        skipfooter=3)\r\ndataset = dataframe.values\r\ndataset = dataset.astype('float32')\r\n\r\nprint(\"\u6b63\u898f\u5316\u524d\")\r\nprint(dataset)\r\n\r\ndataset -= np.min(np.abs(dataset))\r\ndataset /= np.max(np.abs(dataset))\r\nprint(\"\u6b63\u898f\u5316\u5f8c\")\r\nprint(dataset)\r\n\r\ndef create_dataset(dataset, steps_of_history, steps_in_future):\r\n    X, Y = [], []\r\n    for i in range(0, len(dataset)-steps_of_history, steps_in_future):\r\n        X.append(dataset[i:i+steps_of_history])\r\n        Y.append(dataset[i + steps_of_history])\r\n    X = np.reshape(np.array(X), [-1, steps_of_history, 1])\r\n    Y = np.reshape(np.array(Y), [-1, 1])\r\n    return X, Y\r\n\r\ndef split_data(x, y, test_size=0.1):\r\n    pos = round(len(x) * (1 - test_size))\r\n    trainX, trainY = x[:pos], y[:pos]\r\n    testX, testY   = x[pos:], y[pos:]\r\n    return trainX, trainY, testX, testY\r\n\r\nsteps_of_history = 3\r\nsteps_in_future = 1\r\n\r\nX, Y = create_dataset(dataset, steps_of_history, steps_in_future)\r\n\r\ntrainX, trainY, testX, testY = split_data(X, Y, 0.4)\r\n\r\n# \u5b9f\u969b\u306b\u8a13\u7df4\u3057\u3066\u307f\u308b\r\nnet = tflearn.input_data(shape=[None, steps_of_history, 1])\r\nnet = tflearn.gru(net, n_units=6)\r\nnet = tflearn.fully_connected(net, 1, activation='linear')\r\nnet = tflearn.regression(net, optimizer='adam', learning_rate=0.001,\r\n        loss='mean_square')\r\n\r\nmodel = tflearn.DNN(net, tensorboard_verbose=0)\r\nmodel.fit(trainX, trainY, validation_set=0.1, batch_size=1, n_epoch=150)\r\n\r\n\r\n# \u7d50\u679c\u306e\u53ef\u8996\u5316\r\ntrain_predict = model.predict(trainX)\r\ntest_predict = model.predict(testX)\r\n\r\ntrain_predict_plot = np.empty_like(dataset)\r\ntrain_predict_plot[:, :] = np.nan\r\ntrain_predict_plot[steps_of_history:len(train_predict)+steps_of_history, :] = \\\r\n        train_predict\r\n\r\ntest_predict_plot = np.empty_like(dataset)\r\ntest_predict_plot[:, :] = np.nan\r\ntest_predict_plot[len(train_predict)+steps_of_history:len(dataset), :] = \\\r\n        test_predict\r\n\r\nplt.figure(figsize=(8, 8))\r\nplt.title('History={} Future={}'.format(steps_of_history, steps_in_future))\r\nplt.plot(dataset)\r\nplt.plot(train_predict_plot)\r\nplt.plot(test_predict_plot)\r\nplt.savefig('test.png')\r\n\r\n```\r\n\r\nWhat is this problem?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/718", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/718/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/718/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/718/events", "html_url": "https://github.com/tflearn/tflearn/issues/718", "id": 222277746, "node_id": "MDU6SXNzdWUyMjIyNzc3NDY=", "number": 718, "title": "TypeError: only integer scalar arrays can be converted to a scalar index", "user": {"login": "alye", "id": 11714174, "node_id": "MDQ6VXNlcjExNzE0MTc0", "avatar_url": "https://avatars3.githubusercontent.com/u/11714174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alye", "html_url": "https://github.com/alye", "followers_url": "https://api.github.com/users/alye/followers", "following_url": "https://api.github.com/users/alye/following{/other_user}", "gists_url": "https://api.github.com/users/alye/gists{/gist_id}", "starred_url": "https://api.github.com/users/alye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alye/subscriptions", "organizations_url": "https://api.github.com/users/alye/orgs", "repos_url": "https://api.github.com/users/alye/repos", "events_url": "https://api.github.com/users/alye/events{/privacy}", "received_events_url": "https://api.github.com/users/alye/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-18T01:45:13Z", "updated_at": "2017-11-17T12:58:34Z", "closed_at": "2017-04-18T03:15:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to build a binary classifier using a neural network. I'm getting the following error (tflearn : 0.3): \r\n\r\n```\r\nException in thread Thread-3:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/threading.py\", line 801, in __bootstrap_inner\r\n    self.run()\r\n  File \"/usr/lib/python2.7/threading.py\", line 754, in run\r\n    self.__target(*self.__args, **self.__kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tflearn/data_flow.py\", line 187, in fill_feed_dict_queue\r\n    data = self.retrieve_data(batch_ids)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tflearn/data_flow.py\", line 222, in retrieve_data\r\n    utils.slice_array(self.feed_dict[key], batch_ids)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tflearn/utils.py\", line 187, in slice_array\r\n    return X[start]\r\nTypeError: only integer scalar arrays can be converted to a scalar index\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/716", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/716/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/716/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/716/events", "html_url": "https://github.com/tflearn/tflearn/issues/716", "id": 222035312, "node_id": "MDU6SXNzdWUyMjIwMzUzMTI=", "number": 716, "title": "tflearn.utils.autoformat_stride_3d", "user": {"login": "rgioai", "id": 16374493, "node_id": "MDQ6VXNlcjE2Mzc0NDkz", "avatar_url": "https://avatars3.githubusercontent.com/u/16374493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rgioai", "html_url": "https://github.com/rgioai", "followers_url": "https://api.github.com/users/rgioai/followers", "following_url": "https://api.github.com/users/rgioai/following{/other_user}", "gists_url": "https://api.github.com/users/rgioai/gists{/gist_id}", "starred_url": "https://api.github.com/users/rgioai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rgioai/subscriptions", "organizations_url": "https://api.github.com/users/rgioai/orgs", "repos_url": "https://api.github.com/users/rgioai/repos", "events_url": "https://api.github.com/users/rgioai/events{/privacy}", "received_events_url": "https://api.github.com/users/rgioai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-16T21:45:35Z", "updated_at": "2017-04-19T21:33:12Z", "closed_at": "2017-04-19T21:32:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "[Docs](http://tflearn.org/layers/conv/#avg-pooling-3d) say that tflearn.layers.conv.avg_pool_3d should default to stride=[1,1,1,1,1].\r\n\r\nDefault for stride in the code is None.  No checking or default is done before sending None to tflearn .utils.autoformat_stride_3d.  This function handles ints or tuples/lists of ints, but not None type.\r\n\r\nI think the following needs to be added before line 1267 in tflearn.layers.conv:\r\n~~~~ \r\nif strides is None:\r\n     strides = (1, 1, 1, 1, 1)\r\n~~~~\r\n\r\nIt fixed my error at least.  May be needed in other pooling functions... (I didn't check)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/713", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/713/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/713/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/713/events", "html_url": "https://github.com/tflearn/tflearn/issues/713", "id": 221805435, "node_id": "MDU6SXNzdWUyMjE4MDU0MzU=", "number": 713, "title": "How to get features from a specific layer if I use merge layer?", "user": {"login": "FoxerLee", "id": 18083483, "node_id": "MDQ6VXNlcjE4MDgzNDgz", "avatar_url": "https://avatars3.githubusercontent.com/u/18083483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FoxerLee", "html_url": "https://github.com/FoxerLee", "followers_url": "https://api.github.com/users/FoxerLee/followers", "following_url": "https://api.github.com/users/FoxerLee/following{/other_user}", "gists_url": "https://api.github.com/users/FoxerLee/gists{/gist_id}", "starred_url": "https://api.github.com/users/FoxerLee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FoxerLee/subscriptions", "organizations_url": "https://api.github.com/users/FoxerLee/orgs", "repos_url": "https://api.github.com/users/FoxerLee/repos", "events_url": "https://api.github.com/users/FoxerLee/events{/privacy}", "received_events_url": "https://api.github.com/users/FoxerLee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-04-14T13:03:22Z", "updated_at": "2017-04-19T02:33:21Z", "closed_at": "2017-04-19T02:33:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am new to TFLearn. I want to get features from a specific layer and my network use a merge layer. But I got an error:\r\n```\r\nAssign requires shapes of both tensors to match. lhs shape= [256] rhs shape= [10]\r\n```\r\nThis my code:\r\n```python\r\ndef single_net(test=False):\r\n    # Building Residual Network\r\n    net = tflearn.input_data(shape=[None, 28, 28, 1])\r\n    net = tflearn.conv_2d(net, 64, 3, activation='relu', bias=False)\r\n    # Residual blocks\r\n    net = tflearn.residual_bottleneck(net, 3, 16, 64)\r\n    net = tflearn.residual_bottleneck(net, 1, 32, 128, downsample=True)\r\n    net = tflearn.residual_bottleneck(net, 2, 32, 128)\r\n    net = tflearn.residual_bottleneck(net, 1, 64, 256, downsample=True)\r\n    net = tflearn.residual_bottleneck(net, 2, 64, 256)\r\n    net = tflearn.batch_normalization(net)\r\n    net = tflearn.activation(net, 'relu')\r\n    net = tflearn.global_avg_pool(net)\r\n\r\n    net = tflearn.fully_connected(net, 256, activation='tanh')\r\n    if test:\r\n         return net\r\n    \r\n    net = tflearn.fully_connected(net, 10, activation='softmax')\r\n    net = tflearn.regression(net, optimizer='momentum',\r\n                            loss='categorical_crossentropy',\r\n                            learning_rate=0.1)\r\n    return net\r\n\r\ndef fc_fc_net():\r\n    net1=single_net()\r\n    net2=single_net()\r\n    net=tflearn.merge([net1,net2], mode = 'concat')\r\n    return net\r\n\r\ndef fc_fc_net_1():\r\n    net1=single_net(True)\r\n    net2=single_net(True)\r\n    net=tflearn.merge([net1,net2], mode = 'concat')\r\n    return net\r\n```\r\nWhen I first train the network, I use fc_fc_net() function, and when I predict, I use fc_fc_net_1() function. But it has an error:\r\n```\r\nAssign requires shapes of both tensors to match. lhs shape= [256] rhs shape= [10]\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/711", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/711/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/711/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/711/events", "html_url": "https://github.com/tflearn/tflearn/issues/711", "id": 221500338, "node_id": "MDU6SXNzdWUyMjE1MDAzMzg=", "number": 711, "title": "How to get features from a specific layer", "user": {"login": "FoxerLee", "id": 18083483, "node_id": "MDQ6VXNlcjE4MDgzNDgz", "avatar_url": "https://avatars3.githubusercontent.com/u/18083483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FoxerLee", "html_url": "https://github.com/FoxerLee", "followers_url": "https://api.github.com/users/FoxerLee/followers", "following_url": "https://api.github.com/users/FoxerLee/following{/other_user}", "gists_url": "https://api.github.com/users/FoxerLee/gists{/gist_id}", "starred_url": "https://api.github.com/users/FoxerLee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FoxerLee/subscriptions", "organizations_url": "https://api.github.com/users/FoxerLee/orgs", "repos_url": "https://api.github.com/users/FoxerLee/repos", "events_url": "https://api.github.com/users/FoxerLee/events{/privacy}", "received_events_url": "https://api.github.com/users/FoxerLee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-13T08:59:22Z", "updated_at": "2017-04-14T13:06:24Z", "closed_at": "2017-04-14T13:05:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "This my code:\r\n\r\n```python\r\ndef single_net():\r\n    # Building Residual Network\r\n    net = tflearn.input_data(shape=[None, 28, 28, 1])\r\n    net = tflearn.conv_2d(net, 64, 3, activation='relu', bias=False)\r\n    # Residual blocks\r\n    net = tflearn.residual_bottleneck(net, 3, 16, 64)\r\n    net = tflearn.residual_bottleneck(net, 1, 32, 128, downsample=True)\r\n    net = tflearn.residual_bottleneck(net, 2, 32, 128)\r\n    net = tflearn.residual_bottleneck(net, 1, 64, 256, downsample=True)\r\n    net = tflearn.residual_bottleneck(net, 2, 64, 256)\r\n    net = tflearn.batch_normalization(net)\r\n    net = tflearn.activation(net, 'relu')\r\n    net = tflearn.global_avg_pool(net)\r\n    # Regression\r\n    net = tflearn.fully_connected(net, 256, activation='tanh')\r\n    \r\n    net = tflearn.fully_connected(net, 10, activation='softmax')\r\n    net = tflearn.regression(net, optimizer='momentum',\r\n                             loss='categorical_crossentropy',\r\n                             learning_rate=0.1)\r\n    return net\r\n```\r\nNow I want to get the out features from the first fully_connected layer. But I don`t know how to do it... Is there any way I can do it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/709", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/709/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/709/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/709/events", "html_url": "https://github.com/tflearn/tflearn/issues/709", "id": 221376499, "node_id": "MDU6SXNzdWUyMjEzNzY0OTk=", "number": 709, "title": "tf.concat reordered arguments in tensorflow1.0", "user": {"login": "Ruslanmlnkv", "id": 22793531, "node_id": "MDQ6VXNlcjIyNzkzNTMx", "avatar_url": "https://avatars2.githubusercontent.com/u/22793531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ruslanmlnkv", "html_url": "https://github.com/Ruslanmlnkv", "followers_url": "https://api.github.com/users/Ruslanmlnkv/followers", "following_url": "https://api.github.com/users/Ruslanmlnkv/following{/other_user}", "gists_url": "https://api.github.com/users/Ruslanmlnkv/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ruslanmlnkv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ruslanmlnkv/subscriptions", "organizations_url": "https://api.github.com/users/Ruslanmlnkv/orgs", "repos_url": "https://api.github.com/users/Ruslanmlnkv/repos", "events_url": "https://api.github.com/users/Ruslanmlnkv/events{/privacy}", "received_events_url": "https://api.github.com/users/Ruslanmlnkv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-12T20:10:36Z", "updated_at": "2017-04-13T21:34:24Z", "closed_at": "2017-04-13T21:34:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm trying to use time_distributed layer, but I have an error:\r\n```\r\n    tflearn/layers/core.py\r\n    645     except:\r\n    646       x = list(map(lambda t: tf.reshape(t, [-1, 1]+utils.get_incoming_shape(t)[1:]), x))\r\n--> 647     return tf.concat(1, x)\r\n\r\n```\r\nIt was because in tensorflow1.0 was changed concat function.\r\n\r\n> keyword argument concat_dim should be renamed to axis\r\n> arguments have been reordered to tf.concat(values, axis, name='concat').\r\n\r\nArguments reordered in function \"concat\" (tf.concat(x, axis=1)) will fix this bug.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/706", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/706/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/706/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/706/events", "html_url": "https://github.com/tflearn/tflearn/issues/706", "id": 221102252, "node_id": "MDU6SXNzdWUyMjExMDIyNTI=", "number": 706, "title": "Loading network trained on distributed cluster error", "user": {"login": "Noahyt", "id": 23128135, "node_id": "MDQ6VXNlcjIzMTI4MTM1", "avatar_url": "https://avatars1.githubusercontent.com/u/23128135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Noahyt", "html_url": "https://github.com/Noahyt", "followers_url": "https://api.github.com/users/Noahyt/followers", "following_url": "https://api.github.com/users/Noahyt/following{/other_user}", "gists_url": "https://api.github.com/users/Noahyt/gists{/gist_id}", "starred_url": "https://api.github.com/users/Noahyt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Noahyt/subscriptions", "organizations_url": "https://api.github.com/users/Noahyt/orgs", "repos_url": "https://api.github.com/users/Noahyt/repos", "events_url": "https://api.github.com/users/Noahyt/events{/privacy}", "received_events_url": "https://api.github.com/users/Noahyt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-11T22:45:43Z", "updated_at": "2017-05-01T21:27:26Z", "closed_at": "2017-05-01T21:27:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to train my network on a distributed cluster (slurm).  I then want to be able to load the trained network on \r\n\r\nI have tried model.save and model.load commands on my local machine and both work without a problem.  \r\n\r\nHowever when I try to load the files saved from the cluster computers, I get the following error\r\n\r\n```\r\n2017-04-11 15:36:51.658158: W tensorflow/core/framework/op_kernel.cc:1152] Not found: Key Conv2D/W/Adam not found in checkpoint\r\n2017-04-11 15:36:51.658157: W tensorflow/core/framework/op_kernel.cc:1152] Not found: Key Conv2D/W/Adam_1 not found in checkpoint\r\n2017-04-11 15:36:51.659732: W tensorflow/core/framework/op_kernel.cc:1152] Not found: Key Conv2D/b/Adam_1 not found in checkpoint\r\n2017-04-11 15:36:51.666930: W tensorflow/core/framework/op_kernel.cc:1152] Not found: Key Conv2D/b/Adam not found in checkpoint\r\n2017-04-11 15:36:51.666954: W tensorflow/core/framework/op_kernel.cc:1152] Not found: Key FullyConnected/W/Adam not found in checkpoint\r\n2017-04-11 15:36:51.668078: W tensorflow/core/framework/op_kernel.cc:1152] Not found: Key FullyConnected/W/Adam_1 not found in checkpoint\r\n2017-04-11 15:36:51.669157: W tensorflow/core/framework/op_kernel.cc:1152] Not found: Key FullyConnected/b/Adam not found in checkpoint\r\n2017-04-11 15:36:51.669297: W tensorflow/core/framework/op_kernel.cc:1152] Not found: Key FullyConnected/b/Adam_1 not found in checkpoint\r\n2017-04-11 15:36:51.670707: W tensorflow/core/framework/op_kernel.cc:1152] Not found: Key FullyConnected_1/W/Adam not found in checkpoint\r\n2017-04-11 15:36:51.671790: W tensorflow/core/framework/op_kernel.cc:1152] Not found: Key FullyConnected_1/W/Adam_1 not found in checkpoint\r\n2017-04-11 15:36:51.673744: W tensorflow/core/framework/op_kernel.cc:1152] Not found: Key FullyConnected_1/b/Adam not found in checkpoint\r\n2017-04-11 15:36:51.673948: W tensorflow/core/framework/op_kernel.cc:1152] Not found: Key FullyConnected_1/b/Adam_1 not found in checkpoint\r\n2017-04-11 15:36:51.675278: W tensorflow/core/framework/op_kernel.cc:1152] Not found: Key MeanSquare/Mean/moving_avg not found in checkpoint\r\nTraceback (most recent call last):\r\n  File \"NN_TEST.py\", line 25, in <module>\r\n    model.load(\"conv_test_final.tfl\")\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/tflearn/models/dnn.py\", line 278, in load\r\n    self.trainer.restore(model_file, weights_only, **optargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/tflearn/helpers/trainer.py\", line 449, in restore\r\n    self.restorer.restore(self.session, model_file)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/tensorflow/python/training/saver.py\", line 1457, in restore\r\n    {self.saver_def.filename_tensor_name: save_path})\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 778, in run\r\n    run_metadata_ptr)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 982, in _run\r\n    feed_dict_string, options, run_metadata)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1032, in _do_run\r\n    target_list, options, run_metadata)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1052, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.NotFoundError: Key Conv2D/W/Adam_1 not found in checkpoint\r\n\t [[Node: save_1/RestoreV2_5 = RestoreV2[dtypes=[DT_FLOAT], _device=\"/job:localhost/replica:0/task:0/cpu:0\"](_recv_save_1/Const_0, save_1/RestoreV2_5/tensor_names, save_1/RestoreV2_5/shape_and_slices)]]\r\n\r\nCaused by op u'save_1/RestoreV2_5', defined at:\r\n  File \"NN_TEST.py\", line 22, in <module>\r\n    model = tflearn.DNN(network, tensorboard_dir='output_conv/', tensorboard_verbose=3, checkpoint_path='output_conv/conv_test')\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/tflearn/models/dnn.py\", line 64, in __init__\r\n    best_val_accuracy=best_val_accuracy)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/tflearn/helpers/trainer.py\", line 145, in __init__\r\n    keep_checkpoint_every_n_hours=keep_checkpoint_every_n_hours)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/tensorflow/python/training/saver.py\", line 1056, in __init__\r\n    self.build()\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/tensorflow/python/training/saver.py\", line 1086, in build\r\n    restore_sequentially=self._restore_sequentially)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/tensorflow/python/training/saver.py\", line 691, in build\r\n    restore_sequentially, reshape)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/tensorflow/python/training/saver.py\", line 407, in _AddRestoreOps\r\n    tensors = self.restore_op(filename_tensor, saveable, preferred_shard)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/tensorflow/python/training/saver.py\", line 247, in restore_op\r\n    [spec.tensor.dtype])[0])\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/tensorflow/python/ops/gen_io_ops.py\", line 669, in restore_v2\r\n    dtypes=dtypes, name=name)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 768, in apply_op\r\n    op_def=op_def)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2336, in create_op\r\n    original_op=self._default_original_op, op_def=op_def)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1228, in __init__\r\n    self._traceback = _extract_stack()\r\n\r\nNotFoundError (see above for traceback): Key Conv2D/W/Adam_1 not found in checkpoint\r\n\t [[Node: save_1/RestoreV2_5 = RestoreV2[dtypes=[DT_FLOAT], _device=\"/job:localhost/replica:0/task:0/cpu:0\"](_recv_save_1/Const_0, save_1/RestoreV2_5/tensor_names, save_1/RestoreV2_5/shape_and_slices)]]\r\n\r\n\r\n```\r\n\r\nI noticed that when I ran model.save on my local machine it was something like:\r\n\r\n```\r\n\"model_checkpoint_path: \"/Users/Noah/ .... /conv_test_final.tfl\"\r\nall_model_checkpoint_paths: \"/Users/Noah/ ... /conv_test_final.tfl\"\r\n```\r\n\r\nwheras the checkpoint file from the cluster training is:\r\n\r\n```\r\nmodel_checkpoint_path: \"conv_test_final.tfl\"\r\nall_model_checkpoint_paths: \"conv_test_final.tfl\"\r\n```\r\n\r\nI tried swapping out the one checkpoint file for the other and the new error looks the same:\r\n\r\n`NotFoundError (see above for traceback): Key Conv2D/W/Adam not found in checkpoint\r\n\t [[Node: save_1/RestoreV2_4 = RestoreV2[dtypes=[DT_FLOAT], _device=\"/job:localhost/replica:0/task:0/cpu:0\"](_recv_save_1/Const_0, save_1/RestoreV2_4/tensor_names, save_1/RestoreV2_4/shape_and_slices)]]\r\n`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/704", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/704/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/704/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/704/events", "html_url": "https://github.com/tflearn/tflearn/issues/704", "id": 220417965, "node_id": "MDU6SXNzdWUyMjA0MTc5NjU=", "number": 704, "title": "Difference between get_weights and example_layer.W", "user": {"login": "palashd11", "id": 5008074, "node_id": "MDQ6VXNlcjUwMDgwNzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5008074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palashd11", "html_url": "https://github.com/palashd11", "followers_url": "https://api.github.com/users/palashd11/followers", "following_url": "https://api.github.com/users/palashd11/following{/other_user}", "gists_url": "https://api.github.com/users/palashd11/gists{/gist_id}", "starred_url": "https://api.github.com/users/palashd11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palashd11/subscriptions", "organizations_url": "https://api.github.com/users/palashd11/orgs", "repos_url": "https://api.github.com/users/palashd11/repos", "events_url": "https://api.github.com/users/palashd11/events{/privacy}", "received_events_url": "https://api.github.com/users/palashd11/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-08T18:26:54Z", "updated_at": "2017-04-10T21:38:17Z", "closed_at": "2017-04-10T21:38:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "What is the difference between retrieving weights using ```example_layer.W``` and using the ```model.get_weights``` method?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/701", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/701/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/701/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/701/events", "html_url": "https://github.com/tflearn/tflearn/issues/701", "id": 219942584, "node_id": "MDU6SXNzdWUyMTk5NDI1ODQ=", "number": 701, "title": "The graphs don't show on the tensorboard", "user": {"login": "resuly", "id": 3870826, "node_id": "MDQ6VXNlcjM4NzA4MjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/3870826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/resuly", "html_url": "https://github.com/resuly", "followers_url": "https://api.github.com/users/resuly/followers", "following_url": "https://api.github.com/users/resuly/following{/other_user}", "gists_url": "https://api.github.com/users/resuly/gists{/gist_id}", "starred_url": "https://api.github.com/users/resuly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/resuly/subscriptions", "organizations_url": "https://api.github.com/users/resuly/orgs", "repos_url": "https://api.github.com/users/resuly/repos", "events_url": "https://api.github.com/users/resuly/events{/privacy}", "received_events_url": "https://api.github.com/users/resuly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-04-06T15:43:35Z", "updated_at": "2019-09-17T23:33:36Z", "closed_at": "2017-04-11T04:25:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm a beginner of the TFlearn. I got a question from tensorboard.\r\n**On the tensorboard page, everything is missing expect EMBEDDINGS. I want to get the completed visualization.**\r\nHere is my code (mostly from example):\r\n```\r\nimport numpy as np\r\nimport tflearn\r\n\r\nfrom tflearn.datasets import titanic\r\ntitanic.download_dataset('titanic_dataset.csv')\r\n\r\nfrom tflearn.data_utils import load_csv\r\ndata, labels = load_csv('titanic_dataset.csv', target_column=0, columns_to_ignore=[2,7], categorical_labels=True, n_classes=2)\r\n\r\ndef handleSex(data):\r\n    for person in data:\r\n        person[1] = 1 if person[1] == 'male' else 0\r\n    return np.array(data, dtype=np.float32)\r\ndata = handleSex(data)\r\n\r\n# init\r\ntflearn.init_graph(num_cores=8, gpu_memory_fraction=0.5)\r\n\r\n# Build Neural Network\r\nnet = tflearn.input_data(shape=[None, 6])\r\nnet = tflearn.fully_connected(net, 32, activation='relu', name=\"Layer1\")\r\nnet = tflearn.fully_connected(net, 32, activation='relu', name=\"Layer2\")\r\n# net = tflearn.dropout(net, 0.8, name=\"Dropout\")\r\nnet = tflearn.fully_connected(net, 2, activation='softmax', name=\"Layer3\")\r\nnet = tflearn.regression(net, optimizer='adam', learning_rate=0.0005, loss='categorical_crossentropy')\r\n\r\nmodel = tflearn.DNN(net, tensorboard_verbose=3, tensorboard_dir=\"logs\",)\r\n\r\n# Training & Save weights\r\nmodel.fit(data, labels, n_epoch=8, batch_size=16, show_metric=True)\r\nmodel.save('titanic.model')\r\n```\r\nI set the tensorboard_verbose=3, but I can't get the result like [this](http://tflearn.org/getting_started/#visualization)\r\n\r\nWhat else should I set for graphs? Thank you.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/697", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/697/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/697/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/697/events", "html_url": "https://github.com/tflearn/tflearn/issues/697", "id": 219483687, "node_id": "MDU6SXNzdWUyMTk0ODM2ODc=", "number": 697, "title": "Invalid incoming layer", "user": {"login": "JayDeng2837", "id": 3706601, "node_id": "MDQ6VXNlcjM3MDY2MDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/3706601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JayDeng2837", "html_url": "https://github.com/JayDeng2837", "followers_url": "https://api.github.com/users/JayDeng2837/followers", "following_url": "https://api.github.com/users/JayDeng2837/following{/other_user}", "gists_url": "https://api.github.com/users/JayDeng2837/gists{/gist_id}", "starred_url": "https://api.github.com/users/JayDeng2837/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JayDeng2837/subscriptions", "organizations_url": "https://api.github.com/users/JayDeng2837/orgs", "repos_url": "https://api.github.com/users/JayDeng2837/repos", "events_url": "https://api.github.com/users/JayDeng2837/events{/privacy}", "received_events_url": "https://api.github.com/users/JayDeng2837/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-05T06:43:21Z", "updated_at": "2017-04-10T21:03:21Z", "closed_at": "2017-04-10T21:03:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "tried throwing a 4-D numpy array to a tflearn.conv_2d operator and got an 'Invalid incoming layer' error.\r\n\r\nI tracked down the error message to the code block below in tflearn.utils.\r\nthe function expects input in the form of [np.array, list, tuple] while my input is a 'np.ndarray'.\r\n\r\nHowever, in numpy np.array is just a function that generates an array object, and the type of any numpy array is actually 'numpy.ndarray'. Therefore, is this potentially a bug or am I missing something here?\r\n\r\n```python\r\ndef get_incoming_shape(incoming):\r\n    \"\"\" Returns the incoming data shape \"\"\"\r\n    if isinstance(incoming, tf.Tensor):\r\n        return incoming.get_shape().as_list()\r\n    elif type(incoming) in [np.array, list, tuple]:\r\n        return np.shape(incoming)\r\n    else:\r\n        raise Exception(\"Invalid incoming layer.\")\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/694", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/694/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/694/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/694/events", "html_url": "https://github.com/tflearn/tflearn/issues/694", "id": 218902198, "node_id": "MDU6SXNzdWUyMTg5MDIxOTg=", "number": 694, "title": "ImportError: cannot import name 'config'", "user": {"login": "c4n", "id": 4990317, "node_id": "MDQ6VXNlcjQ5OTAzMTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/4990317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c4n", "html_url": "https://github.com/c4n", "followers_url": "https://api.github.com/users/c4n/followers", "following_url": "https://api.github.com/users/c4n/following{/other_user}", "gists_url": "https://api.github.com/users/c4n/gists{/gist_id}", "starred_url": "https://api.github.com/users/c4n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c4n/subscriptions", "organizations_url": "https://api.github.com/users/c4n/orgs", "repos_url": "https://api.github.com/users/c4n/repos", "events_url": "https://api.github.com/users/c4n/events{/privacy}", "received_events_url": "https://api.github.com/users/c4n/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-03T11:19:01Z", "updated_at": "2017-04-04T07:16:50Z", "closed_at": "2017-04-04T07:16:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI have trouble importing tflearn. My tensorflow version is 1.0.1 \r\nThis is the error message:\r\n![screenshot from 2017-04-03 18 18 25](https://cloud.githubusercontent.com/assets/4990317/24606981/f1bfdb78-1899-11e7-9d4c-91b9e22aef61.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/690", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/690/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/690/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/690/events", "html_url": "https://github.com/tflearn/tflearn/issues/690", "id": 218573604, "node_id": "MDU6SXNzdWUyMTg1NzM2MDQ=", "number": 690, "title": "ValueError: Shapes X and X' not compatible", "user": {"login": "palashd11", "id": 5008074, "node_id": "MDQ6VXNlcjUwMDgwNzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5008074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palashd11", "html_url": "https://github.com/palashd11", "followers_url": "https://api.github.com/users/palashd11/followers", "following_url": "https://api.github.com/users/palashd11/following{/other_user}", "gists_url": "https://api.github.com/users/palashd11/gists{/gist_id}", "starred_url": "https://api.github.com/users/palashd11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palashd11/subscriptions", "organizations_url": "https://api.github.com/users/palashd11/orgs", "repos_url": "https://api.github.com/users/palashd11/repos", "events_url": "https://api.github.com/users/palashd11/events{/privacy}", "received_events_url": "https://api.github.com/users/palashd11/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-31T17:58:34Z", "updated_at": "2017-04-03T16:52:22Z", "closed_at": "2017-04-03T16:52:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "HI, I'm trying to run this model using tflearn, but it keeps throwing an error. I have shown the error message down below? What is the issue?\r\n\r\nThe model is upscaling images using conv_2d_transpose multiple times.\r\n\r\n\r\n- the input is a numpy array of images\r\n- the labels are also numpy arrays of images\r\n- all images are grayscale\r\n- input image size : (46,51)\r\n- label image size is 8 times the above : (368,408)\r\n- the dataset has 73 images\r\n- i have printed all the shapes in the output\r\n\r\nThanks\r\n\r\n```python\r\nimport numpy as np\r\nimport tensorflow as tf\r\nimport tflearn\r\n\r\n#epoch=10\r\n#batch_size=73\r\n\r\ndataset_lr_3D=np.load('dataset_hr_3d.npy')\r\nprint 'dataset_hr_3d.npy :', dataset_lr_3D.shape\r\n\r\ndataset_hr_3D=np.load('dataset_lr_3d.npy')\r\nprint 'dataset_lr_3d.npy:', dataset_hr_3D.shape\r\n\r\n\r\ninput_layer_2=tflearn.layers.core.input_data(shape=[None, 46, 51, 1])\r\nprint \"input_layer_2 :\" , input_layer_2.shape\r\nconv1=tflearn.layers.conv.conv_2d(input_layer_2,64,5,activation='prelu')\r\nprint \"conv1 :\" , conv1.shape\r\ndeconv2=tflearn.layers.conv.conv_2d_transpose(conv1,32,5,[92,102],activation='prelu')\r\nprint \"deconv2 :\" , deconv2.shape\r\ndeconv3=tflearn.layers.conv.conv_2d_transpose(deconv2,32,5,[184,204],activation='prelu')\r\nprint \"deconv3 :\" , deconv3.shape\r\ndeconv4=tflearn.layers.conv.conv_2d_transpose(deconv3,32,5,[368,408],activation='prelu')\r\nprint \"deconv4 :\" , deconv4.shape\r\nconv5=tflearn.layers.conv.conv_2d(deconv4,1,5,activation='prelu')\r\nprint \"conv5 :\" , conv5.shape\r\n\r\nnetwork=tflearn.regression(conv5, optimizer='SGD',loss='mean_square')\r\n\r\nmodel=tflearn.DNN(network)\r\n\r\nmodel.fit(dataset_lr_3D,dataset_hr_3D)\r\nmodel.save(\"model.tfl\")\r\nprint(\"Network trained and saved as model.tfl!\")\r\n```\r\nOUTPUT:\r\n```python\r\ndataset_hr_3d.npy : (73, 368, 408)\r\ndataset_lr_3d.npy: (73, 46, 51)\r\ninput_layer_2 : (?, 46, 51, 1)\r\nconv1 : (?, 46, 51, 64)\r\ndeconv2 : (?, 92, 102, 32)\r\ndeconv3 : (?, 184, 204, 32)\r\ndeconv4 : (?, 368, 408, 32)\r\nconv5 : (?, 368, 408, 1)\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-38-7665cc8991e1>\", line 1, in <module>\r\n    runfile('/home/iki/Desktop/code/ms-net.py', wdir='/home/iki/Desktop/code')\r\n\r\n  File \"/usr/lib/python2.7/dist-packages/spyderlib/widgets/externalshell/sitecustomize.py\", line 699, in runfile\r\n    execfile(filename, namespace)\r\n\r\n  File \"/usr/lib/python2.7/dist-packages/spyderlib/widgets/externalshell/sitecustomize.py\", line 81, in execfile\r\n    builtins.execfile(filename, *where)\r\n\r\n  File \"/home/iki/Desktop/code/ms-net.py\", line 37, in <module>\r\n    model=tflearn.DNN(network)\r\n\r\n  File \"/home/iki/.local/lib/python2.7/site-packages/tflearn/models/dnn.py\", line 64, in __init__\r\n    best_val_accuracy=best_val_accuracy)\r\n\r\n  File \"/home/iki/.local/lib/python2.7/site-packages/tflearn/helpers/trainer.py\", line 131, in __init__\r\n    clip_gradients)\r\n\r\n  File \"/home/iki/.local/lib/python2.7/site-packages/tflearn/helpers/trainer.py\", line 655, in initialize_training_ops\r\n    self.grad = tf.gradients(total_loss, self.train_vars)\r\n\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gradients_impl.py\", line 500, in gradients\r\n    in_grad.set_shape(t_in.get_shape())\r\n\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 425, in set_shape\r\n    self._shape = self._shape.merge_with(shape)\r\n\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/tensor_shape.py\", line 585, in merge_with\r\n    (self, other))\r\n\r\nValueError: Shapes (?, 368, 408, 32) and (?, 368, 204, 32) are not compatible\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/683", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/683/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/683/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/683/events", "html_url": "https://github.com/tflearn/tflearn/issues/683", "id": 217333901, "node_id": "MDU6SXNzdWUyMTczMzM5MDE=", "number": 683, "title": "[Memory Issue] tfLearn killing my net. ", "user": {"login": "gergf", "id": 14791980, "node_id": "MDQ6VXNlcjE0NzkxOTgw", "avatar_url": "https://avatars3.githubusercontent.com/u/14791980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gergf", "html_url": "https://github.com/gergf", "followers_url": "https://api.github.com/users/gergf/followers", "following_url": "https://api.github.com/users/gergf/following{/other_user}", "gists_url": "https://api.github.com/users/gergf/gists{/gist_id}", "starred_url": "https://api.github.com/users/gergf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gergf/subscriptions", "organizations_url": "https://api.github.com/users/gergf/orgs", "repos_url": "https://api.github.com/users/gergf/repos", "events_url": "https://api.github.com/users/gergf/events{/privacy}", "received_events_url": "https://api.github.com/users/gergf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-27T18:27:52Z", "updated_at": "2018-06-26T10:27:41Z", "closed_at": "2017-04-07T08:32:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all, thanks in advance for your time.\r\n\r\nI have built a \"small\" conv net to do semantic segmentation. The problem is that, when I run the net, my laptop gets frozen, and tfLearns ends killing the process. I guess that I am doing something wrong, but I can't figure out what...\r\n\r\nI've calculated the num of parameters and it's around 1500. I've also calculated the memory needed and I get around 200MB. I'm running the net in a laptop (4GB ram, 4GB swap, Intel(R) Core(TM) i3-4030U CPU @ 1.90GHz), so I should have no problems running this. \r\n\r\nTL;DR: My PC is using around 5GB (full RAM and 2GB in swap) when it's supposed to use only ~200MB... Any advice to debug my program?\r\n\r\nThis is the red that I'am running:\r\n\t\r\n\tprint(\"Loading the data...\")\r\n\tdataLoader = loader(corpusPath=\"/home/ger/Desktop/Seg/\")\r\n\tbatchSize=20\r\n\t# Load the images. This returns two nparrays (batchSize, 256,256)\r\n\tX, Y = dataLoader.getTrainBatch(batchSize=batchSize)\r\n\tX = np.reshape(X, (batchSize,256,256,1))\r\n\tY = np.reshape(Y, (batchSize,256,256,1))\r\n\t# print(X.shape)\r\n\r\n\t# Build the nn #\r\n\tprint(\"Building the model...\")\r\n\tnetwork = tflearn.input_data(shape=[None,256,256,1])\r\n\r\n\t# Encoder # \r\n\tnetwork = tflearn.conv_2d(network, nb_filter=64, filter_size=3, activation='relu', name='conv1', padding=\"SAME\")\r\n\tnetwork = tflearn.conv_2d(network, nb_filter=64, filter_size=3, activation='relu', name='conv2', padding=\"SAME\")\r\n\tnetwork = tflearn.max_pool_2d(network, 2)\r\n\r\n\t# Decoder # \r\n\tnetwork = tflearn.conv_2d_transpose(network, nb_filter=64, filter_size=3, strides=2, output_shape=[256,256], name='transConv1')\r\n\tnetwork = tflearn.conv_2d(network, nb_filter=64, filter_size=3, activation='relu', name='conv3', padding=\"SAME\")\r\n\tnetwork = tflearn.conv_2d(network, nb_filter=64, filter_size=3, activation='relu', name='conv4', padding=\"SAME\")\r\n\r\n\t# Merge maps #\r\n\tnetwork = tflearn.conv_2d(network, nb_filter=1, filter_size=1, activation='linear')\r\n\r\n\t# Loss and Optimizer #\r\n\tnetwork = tflearn.regression(network, optimizer='adam', loss='weak_cross_entropy_2d', name='target')\r\n\t\r\n\t# Train the model # \r\n\tprint(\"Training the model...\")\r\n\tmodel = tflearn.DNN(network, tensorboard_verbose=0,\r\n\t\t\t\t\t\tcheckpoint_path='/home/ger/Desktop/Seg/checkpoints/',\r\n\t\t\t\t\t\tbest_checkpoint_path='/home/ger/Desktop/Seg/checkpoints/')\r\n\tmodel.fit(X, Y, n_epoch=20,\r\n           \t  validation_set=0.1,\r\n           \t  snapshot_step=100, show_metric=True, run_id='seg_convnet')`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/681", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/681/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/681/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/681/events", "html_url": "https://github.com/tflearn/tflearn/issues/681", "id": 217000674, "node_id": "MDU6SXNzdWUyMTcwMDA2NzQ=", "number": 681, "title": "Example Error", "user": {"login": "pylang", "id": 10778668, "node_id": "MDQ6VXNlcjEwNzc4NjY4", "avatar_url": "https://avatars0.githubusercontent.com/u/10778668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pylang", "html_url": "https://github.com/pylang", "followers_url": "https://api.github.com/users/pylang/followers", "following_url": "https://api.github.com/users/pylang/following{/other_user}", "gists_url": "https://api.github.com/users/pylang/gists{/gist_id}", "starred_url": "https://api.github.com/users/pylang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pylang/subscriptions", "organizations_url": "https://api.github.com/users/pylang/orgs", "repos_url": "https://api.github.com/users/pylang/repos", "events_url": "https://api.github.com/users/pylang/events{/privacy}", "received_events_url": "https://api.github.com/users/pylang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-25T20:11:17Z", "updated_at": "2017-03-28T20:37:07Z", "closed_at": "2017-03-28T20:37:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I run the [linear regression example](https://github.com/tflearn/tflearn/blob/master/examples/basics/linear_regression.py#L4) twice in a Jupyter cell (Python 3), it raises an `IndexError`.\r\n\r\nI expected serial runs would produce the same output.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/676", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/676/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/676/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/676/events", "html_url": "https://github.com/tflearn/tflearn/issues/676", "id": 215410212, "node_id": "MDU6SXNzdWUyMTU0MTAyMTI=", "number": 676, "title": "How validation set is created ", "user": {"login": "BBarbosa", "id": 7063937, "node_id": "MDQ6VXNlcjcwNjM5Mzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7063937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BBarbosa", "html_url": "https://github.com/BBarbosa", "followers_url": "https://api.github.com/users/BBarbosa/followers", "following_url": "https://api.github.com/users/BBarbosa/following{/other_user}", "gists_url": "https://api.github.com/users/BBarbosa/gists{/gist_id}", "starred_url": "https://api.github.com/users/BBarbosa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BBarbosa/subscriptions", "organizations_url": "https://api.github.com/users/BBarbosa/orgs", "repos_url": "https://api.github.com/users/BBarbosa/repos", "events_url": "https://api.github.com/users/BBarbosa/events{/privacy}", "received_events_url": "https://api.github.com/users/BBarbosa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-20T12:49:28Z", "updated_at": "2017-03-20T15:38:02Z", "closed_at": "2017-03-20T15:37:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there!\r\nI'm trying to understand how the validation_set is created when it is defined as a _float_.\r\nOn helpers/trainer.py it has a comment saying\r\n![validation_set](https://cloud.githubusercontent.com/assets/7063937/24106999/86eaecca-0d81-11e7-9b97-e234af05c162.png)\r\nSo, my question is: Does it get N samples of each class for validation or does it shuffles all data gets a % of it?\r\n\r\n\r\nWith the best regards,\r\nBruno\r\n \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/674", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/674/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/674/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/674/events", "html_url": "https://github.com/tflearn/tflearn/issues/674", "id": 215290759, "node_id": "MDU6SXNzdWUyMTUyOTA3NTk=", "number": 674, "title": "error after attempting to import tflearn", "user": {"login": "Pyxidatol-C", "id": 13273623, "node_id": "MDQ6VXNlcjEzMjczNjIz", "avatar_url": "https://avatars0.githubusercontent.com/u/13273623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pyxidatol-C", "html_url": "https://github.com/Pyxidatol-C", "followers_url": "https://api.github.com/users/Pyxidatol-C/followers", "following_url": "https://api.github.com/users/Pyxidatol-C/following{/other_user}", "gists_url": "https://api.github.com/users/Pyxidatol-C/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pyxidatol-C/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pyxidatol-C/subscriptions", "organizations_url": "https://api.github.com/users/Pyxidatol-C/orgs", "repos_url": "https://api.github.com/users/Pyxidatol-C/repos", "events_url": "https://api.github.com/users/Pyxidatol-C/events{/privacy}", "received_events_url": "https://api.github.com/users/Pyxidatol-C/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-19T20:07:38Z", "updated_at": "2018-05-15T16:27:38Z", "closed_at": "2017-03-22T08:51:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get the following error after I try to import tflearn in python 3.6:\r\n\r\n```(/Users/yangjingjie/anaconda) yangjinjiedeair:MachineLearning yangjingjie$ python main.py \r\nTraceback (most recent call last):\r\n  File \"/Users/yangjingjie/anaconda/lib/python3.6/site-packages/tensorflow/python/__init__.py\", line 61, in <module>\r\n    from tensorflow.python import pywrap_tensorflow\r\n  File \"/Users/yangjingjie/anaconda/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 28, in <module>\r\n    _pywrap_tensorflow = swig_import_helper()\r\n  File \"/Users/yangjingjie/anaconda/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 24, in swig_import_helper\r\n    _mod = imp.load_module('_pywrap_tensorflow', fp, pathname, description)\r\n  File \"/Users/yangjingjie/anaconda/lib/python3.6/imp.py\", line 242, in load_module\r\n    return load_dynamic(name, filename, file)\r\n  File \"/Users/yangjingjie/anaconda/lib/python3.6/imp.py\", line 342, in load_dynamic\r\n    return _load(spec)\r\nImportError: dlopen(/Users/yangjingjie/anaconda/lib/python3.6/site-packages/tensorflow/python/_pywrap_tensorflow.so, 10): Library not loaded: @rpath/libcudart.8.0.dylib\r\n  Referenced from: /Users/yangjingjie/anaconda/lib/python3.6/site-packages/tensorflow/python/_pywrap_tensorflow.so\r\n  Reason: image not found\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"main.py\", line 4, in <module>\r\n    import tflearn\r\n  File \"/Users/yangjingjie/anaconda/lib/python3.6/site-packages/tflearn/__init__.py\", line 4, in <module>\r\n    from . import config\r\n  File \"/Users/yangjingjie/anaconda/lib/python3.6/site-packages/tflearn/config.py\", line 3, in <module>\r\n    import tensorflow as tf\r\n  File \"/Users/yangjingjie/anaconda/lib/python3.6/site-packages/tensorflow/__init__.py\", line 24, in <module>\r\n    from tensorflow.python import *\r\n  File \"/Users/yangjingjie/anaconda/lib/python3.6/site-packages/tensorflow/python/__init__.py\", line 72, in <module>\r\n    raise ImportError(msg)\r\nImportError: Traceback (most recent call last):\r\n  File \"/Users/yangjingjie/anaconda/lib/python3.6/site-packages/tensorflow/python/__init__.py\", line 61, in <module>\r\n    from tensorflow.python import pywrap_tensorflow\r\n  File \"/Users/yangjingjie/anaconda/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 28, in <module>\r\n    _pywrap_tensorflow = swig_import_helper()\r\n  File \"/Users/yangjingjie/anaconda/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 24, in swig_import_helper\r\n    _mod = imp.load_module('_pywrap_tensorflow', fp, pathname, description)\r\n  File \"/Users/yangjingjie/anaconda/lib/python3.6/imp.py\", line 242, in load_module\r\n    return load_dynamic(name, filename, file)\r\n  File \"/Users/yangjingjie/anaconda/lib/python3.6/imp.py\", line 342, in load_dynamic\r\n    return _load(spec)\r\nImportError: dlopen(/Users/yangjingjie/anaconda/lib/python3.6/site-packages/tensorflow/python/_pywrap_tensorflow.so, 10): Library not loaded: @rpath/libcudart.8.0.dylib\r\n  Referenced from: /Users/yangjingjie/anaconda/lib/python3.6/site-packages/tensorflow/python/_pywrap_tensorflow.so\r\n  Reason: image not found\r\n\r\n\r\nFailed to load the native TensorFlow runtime.\r\n\r\nSee https://github.com/tensorflow/tensorflow/blob/master/tensorflow/g3doc/get_started/os_setup.md#import_error\r\n\r\nfor some common reasons and solutions.  Include the entire stack trace\r\nabove this error message when asking for help.\r\n```\r\n\r\nIt is possible that I haven't set up other things correctly, but I am surprised to see the reason is actually `image not found`. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/664", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/664/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/664/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/664/events", "html_url": "https://github.com/tflearn/tflearn/issues/664", "id": 214224850, "node_id": "MDU6SXNzdWUyMTQyMjQ4NTA=", "number": 664, "title": "atrous_conv_2d failing if rate != 1", "user": {"login": "liob", "id": 377302, "node_id": "MDQ6VXNlcjM3NzMwMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/377302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liob", "html_url": "https://github.com/liob", "followers_url": "https://api.github.com/users/liob/followers", "following_url": "https://api.github.com/users/liob/following{/other_user}", "gists_url": "https://api.github.com/users/liob/gists{/gist_id}", "starred_url": "https://api.github.com/users/liob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liob/subscriptions", "organizations_url": "https://api.github.com/users/liob/orgs", "repos_url": "https://api.github.com/users/liob/repos", "events_url": "https://api.github.com/users/liob/events{/privacy}", "received_events_url": "https://api.github.com/users/liob/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-14T22:24:09Z", "updated_at": "2017-03-22T15:21:07Z", "closed_at": "2017-03-22T15:21:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nthere seems to be a bug in the atrous_conv_2d if the rate is not 1. The rate gets converted to a list with 4 entries by utils.autoformat_kernel_2d (https://github.com/tflearn/tflearn/blob/master/tflearn/layers/conv.py#L338).  This leads to a \"unsupported operand type\" error when the tensorflow codes tries to substract 1: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/nn_ops.py#L976\r\n\r\nThis error only occurs on rates != 1 because the tf code checks if the rate is one and finishes before reaching the critical snippet: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/nn_ops.py#L954", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/663", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/663/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/663/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/663/events", "html_url": "https://github.com/tflearn/tflearn/issues/663", "id": 214122268, "node_id": "MDU6SXNzdWUyMTQxMjIyNjg=", "number": 663, "title": "Getting the output of an embedding layer", "user": {"login": "beneyal", "id": 3891274, "node_id": "MDQ6VXNlcjM4OTEyNzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3891274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beneyal", "html_url": "https://github.com/beneyal", "followers_url": "https://api.github.com/users/beneyal/followers", "following_url": "https://api.github.com/users/beneyal/following{/other_user}", "gists_url": "https://api.github.com/users/beneyal/gists{/gist_id}", "starred_url": "https://api.github.com/users/beneyal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beneyal/subscriptions", "organizations_url": "https://api.github.com/users/beneyal/orgs", "repos_url": "https://api.github.com/users/beneyal/repos", "events_url": "https://api.github.com/users/beneyal/events{/privacy}", "received_events_url": "https://api.github.com/users/beneyal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-14T16:06:14Z", "updated_at": "2017-03-15T20:52:34Z", "closed_at": "2017-03-15T20:52:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to examine the output of an embedding layer like so:\r\n\r\n```python\r\ninput_layer = tflearn.input_data([None, 100])\r\nembedding_layer = tflearn.embedding(input_layer, input_dim=10000, output_dim=300, trainable=False)\r\nmodel = tflearn.DNN(embedding_layer)\r\nembedding_weights = tflearn.get_layer_variables_by_name('Embedding')[0]\r\nmodel.set_weights(embedding_weights, w2v_weights)\r\n```\r\n\r\n(The last two lines are for using pre-trained word2vec embeddings, as suggested in #35 )\r\n\r\nBut I'm getting the following error:\r\n\r\n```\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-5-68756dee885d> in <module>()\r\n      9 \r\n     10 # Training\r\n---> 11 model = tflearn.DNN(embedding_layer)\r\n     12 # embedding_weights = tflearn.get_layer_variables_by_name('Embedding')[0]\r\n     13 # model.set_weights(embedding_weights, w2v_weights)\r\n\r\nC:\\Users\\Ben\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tflearn\\models\\dnn.py in __init__(self, network, clip_gradients, tensorboard_verbose, tensorboard_dir, checkpoint_path, best_checkpoint_path, max_checkpoints, session, best_val_accuracy)\r\n     62                                max_checkpoints=max_checkpoints,\r\n     63                                session=session,\r\n---> 64                                best_val_accuracy=best_val_accuracy)\r\n     65         self.session = self.trainer.session\r\n     66 \r\n\r\nC:\\Users\\Ben\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tflearn\\helpers\\trainer.py in __init__(self, train_ops, graph, clip_gradients, tensorboard_dir, tensorboard_verbose, checkpoint_path, best_checkpoint_path, max_checkpoints, keep_checkpoint_every_n_hours, random_seed, session, best_val_accuracy)\r\n    150                 var_list=to_restore_trainvars,\r\n    151                 max_to_keep=max_checkpoints,\r\n--> 152                 keep_checkpoint_every_n_hours=keep_checkpoint_every_n_hours)\r\n    153 \r\n    154             self.to_restore = to_restore\r\n\r\nC:\\Users\\Ben\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\training\\saver.py in __init__(self, var_list, reshape, sharded, max_to_keep, keep_checkpoint_every_n_hours, name, restore_sequentially, saver_def, builder, defer_build, allow_empty, write_version, pad_step_number)\r\n   1049     self._pad_step_number = pad_step_number\r\n   1050     if not defer_build:\r\n-> 1051       self.build()\r\n   1052     if self.saver_def:\r\n   1053       self._check_saver_def()\r\n\r\nC:\\Users\\Ben\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\training\\saver.py in build(self)\r\n   1070           return\r\n   1071         else:\r\n-> 1072           raise ValueError(\"No variables to save\")\r\n   1073       self._is_empty = False\r\n   1074       self.saver_def = self._builder.build(\r\n\r\nValueError: No variables to save\r\n```\r\n\r\nAm I doing something wrong? Do I need to somehow send \"allow_empty=True\" to TF's Saver? I'm pretty lost...\r\n\r\nI'm using Windows 10 x64, TF 1.0 w/GPU, and TFLearn 0.3.\r\n\r\nThank you very much! :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/656", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/656/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/656/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/656/events", "html_url": "https://github.com/tflearn/tflearn/issues/656", "id": 213103050, "node_id": "MDU6SXNzdWUyMTMxMDMwNTA=", "number": 656, "title": "Issue with \"Pull: Refactor code example within the Titanic tutorial #612\"", "user": {"login": "EricPerbos", "id": 23437032, "node_id": "MDQ6VXNlcjIzNDM3MDMy", "avatar_url": "https://avatars2.githubusercontent.com/u/23437032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EricPerbos", "html_url": "https://github.com/EricPerbos", "followers_url": "https://api.github.com/users/EricPerbos/followers", "following_url": "https://api.github.com/users/EricPerbos/following{/other_user}", "gists_url": "https://api.github.com/users/EricPerbos/gists{/gist_id}", "starred_url": "https://api.github.com/users/EricPerbos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EricPerbos/subscriptions", "organizations_url": "https://api.github.com/users/EricPerbos/orgs", "repos_url": "https://api.github.com/users/EricPerbos/repos", "events_url": "https://api.github.com/users/EricPerbos/events{/privacy}", "received_events_url": "https://api.github.com/users/EricPerbos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-09T17:06:53Z", "updated_at": "2017-03-12T14:59:47Z", "closed_at": "2017-03-12T14:59:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Setup: Anaconda 3.5, TF 1.0 on Win10, TFLearn bleeding edge per today, running on GTX 1080 + CUDA.\r\n\r\nIssue with Pull https://github.com/tflearn/tflearn/pull/612: it breaks the code/tutorial for beginners so they can't replicate one of the predictions on Titanic's survival probability (Winslet > 0.92).\r\nhttps://github.com/tflearn/tflearn/blob/master/tutorials/intro/quickstart.md\r\n\r\n*********************************************************************\r\nWith the latest version (aka Refactored), the prediction for Winslet dropped/varied wildly from 0.20 to .65 approx, over dozens of runs, never exceeding 0.75 instead of 0.92 as per tutorial.\r\n\r\n**After I reverted to the code pre-Refactored, the prediction for Winslet returned to 0.92 immediately.**\r\n\r\nCurrent code (Refactored):\r\n```\r\n# Preprocessing function\r\ndef preprocess(passengers, columns_to_delete):\r\n    # Sort by descending id and delete columns\r\n    for column_to_delete in sorted(columns_to_delete, reverse=True):\r\n        [passenger.pop(column_to_delete) for passenger in passengers]\r\n    for i in range(len(passengers)):\r\n        # Converting 'sex' field to float (id is 1 after removing labels column)\r\n        passengers[i][1] = 1. if data[i][1] == 'female' else 0.\r\n    return np.array(passengers, dtype=np.float32)\r\n```\r\n\r\n\r\nOlder code (pre-Refactored):\r\n```\r\n# Preprocessing function\r\ndef preprocess(data, columns_to_ignore):\r\n    # Sort by descending id and delete columns\r\n    for id in sorted(columns_to_ignore, reverse=True):\r\n        [r.pop(id) for r in data]\r\n    for i in range(len(data)):\r\n      # Converting 'sex' field to float (id is 1 after removing labels column)\r\n      data[i][1] = 1. if data[i][1] == 'female' else 0.\r\n    return np.array(data, dtype=np.float32)\r\n```\r\n\r\nI think the problem lies in this line in Refactored:\r\n`passengers[i][1] = 1. if data[i][1] == 'female' else 0.`\r\nIt should be:\r\n`passengers[i][1] = 1. if passengers[i][1] == 'female' else 0.`\r\n\r\nCould someone test both versions to confirm ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/641", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/641/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/641/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/641/events", "html_url": "https://github.com/tflearn/tflearn/issues/641", "id": 210849836, "node_id": "MDU6SXNzdWUyMTA4NDk4MzY=", "number": 641, "title": "AttributeError: 'DNN' object has no attribute 'predict_lables'", "user": {"login": "jdvala", "id": 24193355, "node_id": "MDQ6VXNlcjI0MTkzMzU1", "avatar_url": "https://avatars1.githubusercontent.com/u/24193355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdvala", "html_url": "https://github.com/jdvala", "followers_url": "https://api.github.com/users/jdvala/followers", "following_url": "https://api.github.com/users/jdvala/following{/other_user}", "gists_url": "https://api.github.com/users/jdvala/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdvala/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdvala/subscriptions", "organizations_url": "https://api.github.com/users/jdvala/orgs", "repos_url": "https://api.github.com/users/jdvala/repos", "events_url": "https://api.github.com/users/jdvala/events{/privacy}", "received_events_url": "https://api.github.com/users/jdvala/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-28T17:08:13Z", "updated_at": "2017-02-28T17:15:51Z", "closed_at": "2017-02-28T17:15:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "`encode_decode = model.predict_lables(feed_dict={X:testX})\r\nprint(encode_decode)`\r\nWhile trying to run the above code I am encountring AttributeError: 'DNN' object has no attribute 'predict_lables' error!\r\nI checked and DNN supports predict_labels \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/640", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/640/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/640/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/640/events", "html_url": "https://github.com/tflearn/tflearn/issues/640", "id": 210830425, "node_id": "MDU6SXNzdWUyMTA4MzA0MjU=", "number": 640, "title": "a little error in the doc page", "user": {"login": "cooljacket", "id": 13379733, "node_id": "MDQ6VXNlcjEzMzc5NzMz", "avatar_url": "https://avatars3.githubusercontent.com/u/13379733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooljacket", "html_url": "https://github.com/cooljacket", "followers_url": "https://api.github.com/users/cooljacket/followers", "following_url": "https://api.github.com/users/cooljacket/following{/other_user}", "gists_url": "https://api.github.com/users/cooljacket/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooljacket/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooljacket/subscriptions", "organizations_url": "https://api.github.com/users/cooljacket/orgs", "repos_url": "https://api.github.com/users/cooljacket/repos", "events_url": "https://api.github.com/users/cooljacket/events{/privacy}", "received_events_url": "https://api.github.com/users/cooljacket/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-28T16:04:25Z", "updated_at": "2017-03-16T22:47:36Z", "closed_at": "2017-03-16T22:47:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "At doc page [get_started](http://tflearn.org/getting_started/), the first example of topic 'Layers':\r\n```\r\nwith tf.name_scope('conv1'):\r\n    W = tf.Variable(tf.random_normal([5, 5, 1, 32]), dtype=tf.float32, name='Weights')\r\n    b = tf.Variable(tf.random_normal([32]), dtype=tf.float32, name='biases')\r\n    x = tf.nn.conv2d(x, W, strides=[1, 1, 1, 1], padding='SAME')\r\n    x = tf.add_bias(W, b)\r\n    x = tf.nn.relu(x)\r\n```\r\n\r\nthe fivth line should be `x = tf.add_bias(x, b)`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/636", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/636/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/636/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/636/events", "html_url": "https://github.com/tflearn/tflearn/issues/636", "id": 210550636, "node_id": "MDU6SXNzdWUyMTA1NTA2MzY=", "number": 636, "title": "Can't load checkpoint files with tensorflow version 1.0.0. model.load()", "user": {"login": "emurina", "id": 20905209, "node_id": "MDQ6VXNlcjIwOTA1MjA5", "avatar_url": "https://avatars1.githubusercontent.com/u/20905209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emurina", "html_url": "https://github.com/emurina", "followers_url": "https://api.github.com/users/emurina/followers", "following_url": "https://api.github.com/users/emurina/following{/other_user}", "gists_url": "https://api.github.com/users/emurina/gists{/gist_id}", "starred_url": "https://api.github.com/users/emurina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emurina/subscriptions", "organizations_url": "https://api.github.com/users/emurina/orgs", "repos_url": "https://api.github.com/users/emurina/repos", "events_url": "https://api.github.com/users/emurina/events{/privacy}", "received_events_url": "https://api.github.com/users/emurina/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-27T17:23:05Z", "updated_at": "2017-03-14T21:36:15Z", "closed_at": "2017-02-28T01:47:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "model.load(model_file='/home/murl/faces_expressions/Checkpoints/-191.data-00000-of-00001') \r\ndoes not work with the tf version 1.0.0.\r\n\r\nI get the error: Data loss: not an sstable (bad magic number): perhaps your file is in a different file format and you need to use a different restore operator?\r\n\r\nAnyone got a solution for that?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/633", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/633/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/633/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/633/events", "html_url": "https://github.com/tflearn/tflearn/issues/633", "id": 210320214, "node_id": "MDU6SXNzdWUyMTAzMjAyMTQ=", "number": 633, "title": "'module' object has no attribute 'mul' when using tf = 1.0", "user": {"login": "liyu95", "id": 19503832, "node_id": "MDQ6VXNlcjE5NTAzODMy", "avatar_url": "https://avatars0.githubusercontent.com/u/19503832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liyu95", "html_url": "https://github.com/liyu95", "followers_url": "https://api.github.com/users/liyu95/followers", "following_url": "https://api.github.com/users/liyu95/following{/other_user}", "gists_url": "https://api.github.com/users/liyu95/gists{/gist_id}", "starred_url": "https://api.github.com/users/liyu95/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liyu95/subscriptions", "organizations_url": "https://api.github.com/users/liyu95/orgs", "repos_url": "https://api.github.com/users/liyu95/repos", "events_url": "https://api.github.com/users/liyu95/events{/privacy}", "received_events_url": "https://api.github.com/users/liyu95/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-26T14:00:41Z", "updated_at": "2017-02-27T05:42:40Z", "closed_at": "2017-02-27T05:42:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got the following AttributeError when using tflearn combined with tf = 1.0\r\n\r\n\r\n![image](https://cloud.githubusercontent.com/assets/19503832/23340304/f7e2e76e-fc44-11e6-905b-424acc76b680.png)\r\n\r\nMuch thanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/632", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/632/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/632/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/632/events", "html_url": "https://github.com/tflearn/tflearn/issues/632", "id": 210251919, "node_id": "MDU6SXNzdWUyMTAyNTE5MTk=", "number": 632, "title": "Load single layer weights?", "user": {"login": "wballard", "id": 1017760, "node_id": "MDQ6VXNlcjEwMTc3NjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1017760?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wballard", "html_url": "https://github.com/wballard", "followers_url": "https://api.github.com/users/wballard/followers", "following_url": "https://api.github.com/users/wballard/following{/other_user}", "gists_url": "https://api.github.com/users/wballard/gists{/gist_id}", "starred_url": "https://api.github.com/users/wballard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wballard/subscriptions", "organizations_url": "https://api.github.com/users/wballard/orgs", "repos_url": "https://api.github.com/users/wballard/repos", "events_url": "https://api.github.com/users/wballard/events{/privacy}", "received_events_url": "https://api.github.com/users/wballard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-25T18:22:49Z", "updated_at": "2017-04-23T12:50:40Z", "closed_at": "2017-03-14T15:48:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm looking to do some more varied transfer learning scenarios with unsupervised pre-training, and want to be able to load specific layers weights. Any suggestion on how to do this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/630", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/630/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/630/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/630/events", "html_url": "https://github.com/tflearn/tflearn/issues/630", "id": 210231103, "node_id": "MDU6SXNzdWUyMTAyMzExMDM=", "number": 630, "title": "what is tflearn equivalent of eval in tensorflow for evaluating labels?", "user": {"login": "jdvala", "id": 24193355, "node_id": "MDQ6VXNlcjI0MTkzMzU1", "avatar_url": "https://avatars1.githubusercontent.com/u/24193355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdvala", "html_url": "https://github.com/jdvala", "followers_url": "https://api.github.com/users/jdvala/followers", "following_url": "https://api.github.com/users/jdvala/following{/other_user}", "gists_url": "https://api.github.com/users/jdvala/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdvala/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdvala/subscriptions", "organizations_url": "https://api.github.com/users/jdvala/orgs", "repos_url": "https://api.github.com/users/jdvala/repos", "events_url": "https://api.github.com/users/jdvala/events{/privacy}", "received_events_url": "https://api.github.com/users/jdvala/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-25T12:13:33Z", "updated_at": "2017-03-04T17:14:26Z", "closed_at": "2017-03-04T17:14:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to predict labels, so tensorflow has eval() what is equivalent in tflean?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/626", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/626/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/626/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/626/events", "html_url": "https://github.com/tflearn/tflearn/issues/626", "id": 210022733, "node_id": "MDU6SXNzdWUyMTAwMjI3MzM=", "number": 626, "title": "Bug with GRU using 3d input", "user": {"login": "aryopg", "id": 17272091, "node_id": "MDQ6VXNlcjE3MjcyMDkx", "avatar_url": "https://avatars1.githubusercontent.com/u/17272091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aryopg", "html_url": "https://github.com/aryopg", "followers_url": "https://api.github.com/users/aryopg/followers", "following_url": "https://api.github.com/users/aryopg/following{/other_user}", "gists_url": "https://api.github.com/users/aryopg/gists{/gist_id}", "starred_url": "https://api.github.com/users/aryopg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aryopg/subscriptions", "organizations_url": "https://api.github.com/users/aryopg/orgs", "repos_url": "https://api.github.com/users/aryopg/repos", "events_url": "https://api.github.com/users/aryopg/events{/privacy}", "received_events_url": "https://api.github.com/users/aryopg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-24T11:16:44Z", "updated_at": "2017-02-27T10:06:56Z", "closed_at": "2017-02-25T12:03:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got this error when implementing GRU cell : \r\n\r\n`TypeError: Input 'split_dim' of 'Split' Op has type float32 that does not match expected type of int32.`\r\n\r\nbut when i use LSTM, it works like usual. Is there any idea what possibly happening with the code?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/624", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/624/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/624/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/624/events", "html_url": "https://github.com/tflearn/tflearn/issues/624", "id": 209756342, "node_id": "MDU6SXNzdWUyMDk3NTYzNDI=", "number": 624, "title": "Bug using batch_norm in combination with tf==1.0.0", "user": {"login": "ziky90", "id": 1810839, "node_id": "MDQ6VXNlcjE4MTA4Mzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1810839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ziky90", "html_url": "https://github.com/ziky90", "followers_url": "https://api.github.com/users/ziky90/followers", "following_url": "https://api.github.com/users/ziky90/following{/other_user}", "gists_url": "https://api.github.com/users/ziky90/gists{/gist_id}", "starred_url": "https://api.github.com/users/ziky90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ziky90/subscriptions", "organizations_url": "https://api.github.com/users/ziky90/orgs", "repos_url": "https://api.github.com/users/ziky90/repos", "events_url": "https://api.github.com/users/ziky90/events{/privacy}", "received_events_url": "https://api.github.com/users/ziky90/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-02-23T13:07:59Z", "updated_at": "2017-02-27T15:20:27Z", "closed_at": "2017-02-27T15:20:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am experiencing very strange `batch_norm` behaviour, probably caused by the commit https://github.com/tflearn/tflearn/commit/3cfc4f471a6184f9acd36b50b239329911de5ab2 by @WHAAAT \r\n\r\nExcept in the code is alway catching the following exception (which is very strange):\r\n```\r\nFile \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tflearn/layers/conv.py\", line 1147, in residual_block\r\n    resnet = tflearn.batch_normalization(resnet)\r\n  File \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tflearn/layers/normalization.py\", line 79, in batch_normalization\r\n    trainable=False, restore=restore)\r\n  File \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 177, in func_with_args\r\n    return func(*args, **current_args)\r\n  File \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tflearn/variables.py\", line 66, in variable\r\n    validate_shape=validate_shape)\r\n  File \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 988, in get_variable\r\n    custom_getter=custom_getter)\r\n  File \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 890, in get_variable\r\n    custom_getter=custom_getter)\r\n  File \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 348, in get_variable\r\n    validate_shape=validate_shape)\r\n  File \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 333, in _true_getter\r\n    caching_device=caching_device, validate_shape=validate_shape)\r\n  File \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 684, in _get_single_variable\r\n    validate_shape=validate_shape)\r\n  File \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tensorflow/python/ops/variables.py\", line 226, in __init__\r\n    expected_shape=expected_shape)\r\n  File \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tensorflow/python/ops/variables.py\", line 303, in _init_from_args\r\n    initial_value(), name=\"initial_value\", dtype=dtype)\r\n  File \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 673, in <lambda>\r\n    shape.as_list(), dtype=dtype, partition_info=partition_info)\r\nTypeError: __init__() got multiple values for keyword argument 'dtype'\r\n```\r\nand the code in except is always being run.\r\n\r\nThis thing is causing following problems for me:\r\n1. I am unable to load old tflearn models with following problem:\r\n```\r\n   .....\r\n    model.load(model_file)\r\n  File \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tflearn/models/dnn.py\", line 278, in load\r\n    self.trainer.restore(model_file, weights_only, **optargs)\r\n  File \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tflearn/helpers/trainer.py\", line 449, in restore\r\n    self.restorer.restore(self.session, model_file)\r\n  File \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tensorflow/python/training/saver.py\", line 1439, in restore\r\n    {self.saver_def.filename_tensor_name: save_path})\r\n  File \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 767, in run\r\n    run_metadata_ptr)\r\n  File \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 965, in _run\r\n    feed_dict_string, options, run_metadata)\r\n  File \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1015, in _do_run\r\n    target_list, options, run_metadata)\r\n  File \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1035, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.NotFoundError: Tensor name \"BatchNormalization/moving_mean_1\" not found in checkpoint files mymodel/model.ckpt-20\r\n\t [[Node: save_1/RestoreV2_2 = RestoreV2[dtypes=[DT_FLOAT], _device=\"/job:localhost/replica:0/task:0/cpu:0\"](_recv_save_1/Const_0, save_1/RestoreV2_2/tensor_names, save_1/RestoreV2_2/shape_and_slices)]]\r\n\r\nCaused by op u'save_1/RestoreV2_2', defined at:\r\n  ....\r\n  File \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tflearn/models/dnn.py\", line 64, in __init__\r\n    best_val_accuracy=best_val_accuracy)\r\n  File \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tflearn/helpers/trainer.py\", line 145, in __init__\r\n    keep_checkpoint_every_n_hours=keep_checkpoint_every_n_hours)\r\n  File \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tensorflow/python/training/saver.py\", line 1051, in __init__\r\n    self.build()\r\n  File \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tensorflow/python/training/saver.py\", line 1081, in build\r\n    restore_sequentially=self._restore_sequentially)\r\n  File \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tensorflow/python/training/saver.py\", line 675, in build\r\n    restore_sequentially, reshape)\r\n  File \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tensorflow/python/training/saver.py\", line 402, in _AddRestoreOps\r\n    tensors = self.restore_op(filename_tensor, saveable, preferred_shard)\r\n  File \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tensorflow/python/training/saver.py\", line 242, in restore_op\r\n    [spec.tensor.dtype])[0])\r\n  File \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tensorflow/python/ops/gen_io_ops.py\", line 668, in restore_v2\r\n    dtypes=dtypes, name=name)\r\n  File \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 763, in apply_op\r\n    op_def=op_def)\r\n  File \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2395, in create_op\r\n    original_op=self._default_original_op, op_def=op_def)\r\n  File \"/Users/janzikes/anaconda2/envs/research/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1264, in __init__\r\n    self._traceback = _extract_stack()\r\n\r\nNotFoundError (see above for traceback): Tensor name \"BatchNormalization/moving_mean_1\" not found in checkpoint files mymodel/model.ckpt-20\r\n\t [[Node: save_1/RestoreV2_2 = RestoreV2[dtypes=[DT_FLOAT], _device=\"/job:localhost/replica:0/task:0/cpu:0\"](_recv_save_1/Const_0, save_1/RestoreV2_2/tensor_names, save_1/RestoreV2_2/shape_and_slices)]]\r\n```\r\n2. Interesting thing happens when i change the code in tflearn from:\r\n```\r\n        try:\r\n             moving_mean = vs.variable('moving_mean', input_shape[-1:], initializer=tf.zeros_initializer,\r\n                                       trainable=False, restore=restore)\r\n         except:\r\n             moving_mean = vs.variable('moving_mean', input_shape[-1:], initializer=tf.zeros_initializer(),\r\n                                       trainable=False, restore=restore)\r\n```\r\nto the original state:\r\n```\r\nmoving_mean = vs.variable('moving_mean', input_shape[-1:], initializer=tf.zeros_initializer(),\r\n                                       trainable=False, restore=restore)\r\n```\r\nThis loads the old model for me, but unfortunately predicts different stuff (worse stuff) than it used to predict with `tensorflow==0.11` and older tflearn (pre 0.3.0 commit).\r\n\r\n3. During the training phase everything works well, except that it always ends up in the except block, the code in the try block always fails with the exception `TypeError: __init__() got multiple values for keyword argument 'dtype'`.\r\n\r\nMy python packages are following: `tflearn==0.3.0` and `tensorflow==1.0.0`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/623", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/623/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/623/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/623/events", "html_url": "https://github.com/tflearn/tflearn/issues/623", "id": 209646807, "node_id": "MDU6SXNzdWUyMDk2NDY4MDc=", "number": 623, "title": "Warning! ***HDF5 library version mismatched error***", "user": {"login": "chenggui53", "id": 5997374, "node_id": "MDQ6VXNlcjU5OTczNzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5997374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenggui53", "html_url": "https://github.com/chenggui53", "followers_url": "https://api.github.com/users/chenggui53/followers", "following_url": "https://api.github.com/users/chenggui53/following{/other_user}", "gists_url": "https://api.github.com/users/chenggui53/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenggui53/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenggui53/subscriptions", "organizations_url": "https://api.github.com/users/chenggui53/orgs", "repos_url": "https://api.github.com/users/chenggui53/repos", "events_url": "https://api.github.com/users/chenggui53/events{/privacy}", "received_events_url": "https://api.github.com/users/chenggui53/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-23T02:41:12Z", "updated_at": "2017-02-23T04:07:06Z", "closed_at": "2017-02-23T04:07:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "when i run the example lstm_generate_cityname.py on my pc (win10 + anaconda python3.5 + tensorflow1.0 ), it will show this .", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tflearn/tflearn/issues/621", "repository_url": "https://api.github.com/repos/tflearn/tflearn", "labels_url": "https://api.github.com/repos/tflearn/tflearn/issues/621/labels{/name}", "comments_url": "https://api.github.com/repos/tflearn/tflearn/issues/621/comments", "events_url": "https://api.github.com/repos/tflearn/tflearn/issues/621/events", "html_url": "https://github.com/tflearn/tflearn/issues/621", "id": 209550183, "node_id": "MDU6SXNzdWUyMDk1NTAxODM=", "number": 621, "title": "Activation scope error", "user": {"login": "novog", "id": 16354547, "node_id": "MDQ6VXNlcjE2MzU0NTQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/16354547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/novog", "html_url": "https://github.com/novog", "followers_url": "https://api.github.com/users/novog/followers", "following_url": "https://api.github.com/users/novog/following{/other_user}", "gists_url": "https://api.github.com/users/novog/gists{/gist_id}", "starred_url": "https://api.github.com/users/novog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/novog/subscriptions", "organizations_url": "https://api.github.com/users/novog/orgs", "repos_url": "https://api.github.com/users/novog/repos", "events_url": "https://api.github.com/users/novog/events{/privacy}", "received_events_url": "https://api.github.com/users/novog/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-22T19:08:42Z", "updated_at": "2017-02-22T20:03:01Z", "closed_at": "2017-02-22T20:03:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "With tflearn 0.3 with tensorflow 1.0, I am encountering an error when trying to use PReLU or leaky ReLU activations. Consider the following code with three possible last steps:\r\n\r\n    net1 = tflearn.input_data(shape=[None, 1000])\r\n    net2 = tflearn.fully_connected(net1, 1000)\r\n    #net3a = tflearn.relu(net2)\r\n    net3b = tflearn.prelu(net2)\r\n    #net3c = tflearn.leaky_relu(net2)\r\n\r\nAssigning to net3a using relu works as expected. However, when trying to apply prelu or leaky_relu, I get an error like the following:\r\n\r\n> Traceback (most recent call last):\r\n>   File \"<stdin>\", line 1, in <module>\r\n>   File \"C:\\python-3.5.2.amd64\\lib\\site-packages\\tflearn\\activations.py\", line 229, in prelu\r\n>     with tf.variable_scope(i_scope + name) as scope:\r\n> TypeError: unsupported operand type(s) for +: 'VariableScope' and 'str'\r\n\r\nactivations.py includes the following relevant code in the prelu definition, with the last line being the one on which the error occurs:\r\n\r\n    # If incoming Tensor has a scope, this op is defined inside it\r\n    i_scope = \"\"\r\n    if hasattr(x, 'scope'):\r\n        if x.scope: i_scope = x.scope\r\n    with tf.variable_scope(i_scope + name) as scope:\r\n\r\nIn the example code above, net2 does have a scope attribute, which is of type VariableScope. The last line attempts to concatenate this VariableScope object with the string name, which does not work. I also notice that the leaky_relu copy of this code uses name_scope, while prelu uses variable_scope. I'm new to TensorFlow, but I would think that the same logic should be used in both cases.\r\n\r\nI tried a few simple corrections, but then received a new error a few lines later that the variable alphas already exists. Could someone fix these activations or point out what I am doing wrong? Thanks!", "performed_via_github_app": null, "score": 1.0}]}