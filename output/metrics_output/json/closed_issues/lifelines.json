{"total_count": 552, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1116", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1116/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1116/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1116/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1116", "id": 683485708, "node_id": "MDU6SXNzdWU2ODM0ODU3MDg=", "number": 1116, "title": "Confusing docs on l1 l2 cph model", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650069015, "node_id": "MDU6TGFiZWw2NTAwNjkwMTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/docs", "name": "docs", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-21T11:11:13Z", "updated_at": "2020-08-21T13:36:06Z", "closed_at": "2020-08-21T13:36:06Z", "author_association": "OWNER", "active_lock_reason": null, "body": "https://gitter.im/python-lifelines/Lobby?at=5f3f3fe385c0f2132fe0d73f", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1111", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1111/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1111/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1111/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1111", "id": 677668651, "node_id": "MDU6SXNzdWU2Nzc2Njg2NTE=", "number": 1111, "title": "My First Use Case: Am I Doing This Right?", "user": {"login": "GrowthJeff", "id": 60627239, "node_id": "MDQ6VXNlcjYwNjI3MjM5", "avatar_url": "https://avatars2.githubusercontent.com/u/60627239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GrowthJeff", "html_url": "https://github.com/GrowthJeff", "followers_url": "https://api.github.com/users/GrowthJeff/followers", "following_url": "https://api.github.com/users/GrowthJeff/following{/other_user}", "gists_url": "https://api.github.com/users/GrowthJeff/gists{/gist_id}", "starred_url": "https://api.github.com/users/GrowthJeff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GrowthJeff/subscriptions", "organizations_url": "https://api.github.com/users/GrowthJeff/orgs", "repos_url": "https://api.github.com/users/GrowthJeff/repos", "events_url": "https://api.github.com/users/GrowthJeff/events{/privacy}", "received_events_url": "https://api.github.com/users/GrowthJeff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-12T12:50:45Z", "updated_at": "2020-08-12T12:55:13Z", "closed_at": "2020-08-12T12:55:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm coming over here from the lifetimes library! I am trying to understand the path of our users from their time of registration to time of first purchase. Not everyone makes a purchase. I believe I should be using the purchase event as the \"death\" in my survival analysis.  \r\n\r\nFirst, I have my list of users, their registration date, and first purchase date organized as so:\r\n| id | registration_date | first_purchase_date \r\n|----|-------------------|---------------------|\r\n| 1  | 2020-08-10 22:00  | 2020-08-10 23:00    |\r\n | 2   | 2020-08-10 21:00                  |  NaN\r\n\r\nThen, I use `datetimes_to_duration` to generate the T and E columns, and get this:\r\n| id | registration_date | first_purchase_date | T | E    |\r\n|----|-------------------|---------------------|---|------|\r\n| 1  | 2020-08-10 22:00  | 2020-08-10 23:00    | 1 | True |\r\n| 2   | 2020-08-10 21:00                  |  NaN                   | 2  |  False    |\r\n\r\nI then do a basic fit like so:\r\n```\r\nkmf = KaplanMeierFitter(label=\"users\")\r\nkmf.fit(users['T'], event_observed = users['E'])\r\nkmf.plot(fig)\r\n```\r\nI find that this plot does not go to 0% because some of my users never die! They're never going to purchase. This throws off a number of the built-in methods/functions. For instance, my median survival time is infinite. Am I approaching this problem the right way? \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1103", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1103/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1103/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1103/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1103", "id": 672867790, "node_id": "MDU6SXNzdWU2NzI4Njc3OTA=", "number": 1103, "title": "Model using CPHFitter and clusters cannot be reused after pickled", "user": {"login": "danncalle", "id": 48157815, "node_id": "MDQ6VXNlcjQ4MTU3ODE1", "avatar_url": "https://avatars0.githubusercontent.com/u/48157815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danncalle", "html_url": "https://github.com/danncalle", "followers_url": "https://api.github.com/users/danncalle/followers", "following_url": "https://api.github.com/users/danncalle/following{/other_user}", "gists_url": "https://api.github.com/users/danncalle/gists{/gist_id}", "starred_url": "https://api.github.com/users/danncalle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danncalle/subscriptions", "organizations_url": "https://api.github.com/users/danncalle/orgs", "repos_url": "https://api.github.com/users/danncalle/repos", "events_url": "https://api.github.com/users/danncalle/events{/privacy}", "received_events_url": "https://api.github.com/users/danncalle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-08-04T15:09:44Z", "updated_at": "2020-08-22T02:56:27Z", "closed_at": "2020-08-22T02:56:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi everyone,\r\n\r\nI'm having a problem with my model. Below i leave code snippets:\r\n\r\n```\r\ncph_cluster3.fit(df_cph_clusters3[cox_clusters3], 'DIAS_LIBRE', event_col = 'CENSURADO_LIBRES',\r\n              strata=[\"NUM_REINCIDENCIAS_ACUM\",\"gnic_strata\",\"En_Carcel\",\"ACTIVIDADES_ESTUDIO\",\"ACTIVIDADES_ENSE\u00d1ANZA\"],   cluster_col = \"cluster_2\",robust=True)\r\n```\r\n\r\nThe model is fitted fine and after fitting I can normally get and plot the survival curves. Notice that i indicated the parameter `cluster_col`.\r\n\r\nThen, I used joblib and pickle in different tries to dump the model (this was ok).\r\n\r\nAfter i loaded the model and tried to get the survival curves again for the same individuals, indicating the cluster had no effect. In fact, i could type any number in that field (it was supposed to be in the range 0-9) and it not only calculated the survival curve but kept it constant with respect to that value.\r\n\r\nAny suggestion is well received.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1102", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1102/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1102/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1102/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1102", "id": 672298680, "node_id": "MDU6SXNzdWU2NzIyOTg2ODA=", "number": 1102, "title": "AttributeError: 'CoxPHFitter' object has no attribute 'score'", "user": {"login": "seyuboglu", "id": 32822771, "node_id": "MDQ6VXNlcjMyODIyNzcx", "avatar_url": "https://avatars0.githubusercontent.com/u/32822771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seyuboglu", "html_url": "https://github.com/seyuboglu", "followers_url": "https://api.github.com/users/seyuboglu/followers", "following_url": "https://api.github.com/users/seyuboglu/following{/other_user}", "gists_url": "https://api.github.com/users/seyuboglu/gists{/gist_id}", "starred_url": "https://api.github.com/users/seyuboglu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seyuboglu/subscriptions", "organizations_url": "https://api.github.com/users/seyuboglu/orgs", "repos_url": "https://api.github.com/users/seyuboglu/repos", "events_url": "https://api.github.com/users/seyuboglu/events{/privacy}", "received_events_url": "https://api.github.com/users/seyuboglu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-03T19:39:23Z", "updated_at": "2020-08-03T20:27:47Z", "closed_at": "2020-08-03T20:16:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there!\r\n\r\nMy fit `CoxPHFitter` instances don't seem to have a `score` method. The documentation [here](https://lifelines.readthedocs.io/en/latest/fitters/regression/CoxPHFitter.html#lifelines.fitters.coxph_fitter.CoxPHFitter.score) suggests that they should. Perhaps I'm misunderstanding how to score a dataset with a `CoxPHFitter`?\r\n\r\nHere is a simple example from the [documentation](https://lifelines.readthedocs.io/en/latest/fitters/regression/CoxPHFitter.html#lifelines.fitters.coxph_fitter.SemiParametricPHFitter.score) that raises the `AttributeError` I'm running into: \r\n\r\n```python\r\nfrom lifelines import CoxPHFitter\r\nfrom lifelines.datasets import load_rossi\r\n\r\nrossi_train = load_rossi().loc[:400]\r\nrossi_test = load_rossi().loc[400:]\r\ncph = CoxPHFitter().fit(rossi_train, 'week', 'arrest')\r\n\r\ncph.score(rossi_train)\r\ncph.score(rossi_test)\r\n\r\n>>>\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-201-88ced0ed8d15> in <module>\r\n      4 rossi = load_rossi()\r\n      5 cph = CoxPHFitter().fit(rossi, 'week', 'arrest')\r\n----> 6 cph.score(rossi)\r\n\r\nAttributeError: 'CoxPHFitter' object has no attribute 'score'\r\n```\r\n\r\nThank you for the help!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1100", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1100/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1100/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1100/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1100", "id": 670221671, "node_id": "MDU6SXNzdWU2NzAyMjE2NzE=", "number": 1100, "title": "Right after upgrading to 0.25.0, CoxPHFitter complains about not finding \"patsy\"", "user": {"login": "greencrab", "id": 418340, "node_id": "MDQ6VXNlcjQxODM0MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/418340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/greencrab", "html_url": "https://github.com/greencrab", "followers_url": "https://api.github.com/users/greencrab/followers", "following_url": "https://api.github.com/users/greencrab/following{/other_user}", "gists_url": "https://api.github.com/users/greencrab/gists{/gist_id}", "starred_url": "https://api.github.com/users/greencrab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/greencrab/subscriptions", "organizations_url": "https://api.github.com/users/greencrab/orgs", "repos_url": "https://api.github.com/users/greencrab/repos", "events_url": "https://api.github.com/users/greencrab/events{/privacy}", "received_events_url": "https://api.github.com/users/greencrab/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 53920840, "node_id": "MDU6TGFiZWw1MzkyMDg0MA==", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/bug", "name": "bug", "color": "8651e8", "default": true, "description": ""}, {"id": 130572986, "node_id": "MDU6TGFiZWwxMzA1NzI5ODY=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/installation", "name": "installation", "color": "009800", "default": false, "description": null}, {"id": 926457395, "node_id": "MDU6TGFiZWw5MjY0NTczOTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/next%20minor%20release%20%F0%9F%A4%9E", "name": "next minor release \ud83e\udd1e", "color": "a3f7ad", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-31T20:51:34Z", "updated_at": "2020-08-01T16:26:04Z", "closed_at": "2020-08-01T16:26:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Seems like the latest version require the \"patsy\" library, but it's not in `reqs/base-requirements.txt`.  There's a \"statsmodel\" requirement in `reqs/dev-requirements.txt` that might get you patsy.  But it was not pull when I did `pip install -U lifelines`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1097", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1097/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1097/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1097/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1097", "id": 666851423, "node_id": "MDU6SXNzdWU2NjY4NTE0MjM=", "number": 1097, "title": "Error when setting labels=False in plotting.add_at_risk_counts().", "user": {"login": "lschoe", "id": 25797349, "node_id": "MDQ6VXNlcjI1Nzk3MzQ5", "avatar_url": "https://avatars0.githubusercontent.com/u/25797349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lschoe", "html_url": "https://github.com/lschoe", "followers_url": "https://api.github.com/users/lschoe/followers", "following_url": "https://api.github.com/users/lschoe/following{/other_user}", "gists_url": "https://api.github.com/users/lschoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/lschoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lschoe/subscriptions", "organizations_url": "https://api.github.com/users/lschoe/orgs", "repos_url": "https://api.github.com/users/lschoe/repos", "events_url": "https://api.github.com/users/lschoe/events{/privacy}", "received_events_url": "https://api.github.com/users/lschoe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 53920840, "node_id": "MDU6TGFiZWw1MzkyMDg0MA==", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/bug", "name": "bug", "color": "8651e8", "default": true, "description": ""}, {"id": 53920842, "node_id": "MDU6TGFiZWw1MzkyMDg0Mg==", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 926457395, "node_id": "MDU6TGFiZWw5MjY0NTczOTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/next%20minor%20release%20%F0%9F%A4%9E", "name": "next minor release \ud83e\udd1e", "color": "a3f7ad", "default": false, "description": ""}, {"id": 652446817, "node_id": "MDU6TGFiZWw2NTI0NDY4MTc=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/plotting", "name": "plotting", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-07-28T07:57:13Z", "updated_at": "2020-08-01T16:28:33Z", "closed_at": "2020-08-01T16:26:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "For lifelines 0.25.0.\r\nGetting an `AttributeError: 'NoneType' object has no attribute 'replace'` because all labels are set to None if `labels is False`:\r\n\r\n```\r\n    if labels is None:\r\n        labels = [f._label for f in fitters]\r\n    elif labels is False:\r\n        labels = [None] * len(fitters)\r\n\r\n    labels = [l.replace(\"_\", r\"\\_\") for l in labels]\r\n```\r\n\r\nAnd is it possible to disable the rows 'Censored' and/or 'Events' in the 'At risk' counts? To have that configurable, or is it already configurable?!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1096", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1096/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1096/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1096/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1096", "id": 663255833, "node_id": "MDU6SXNzdWU2NjMyNTU4MzM=", "number": 1096, "title": "RTD github workflow", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650069015, "node_id": "MDU6TGFiZWw2NTAwNjkwMTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/docs", "name": "docs", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-21T19:30:52Z", "updated_at": "2020-08-02T18:00:11Z", "closed_at": "2020-08-02T18:00:11Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Keep an eye on https://github.com/dfm/rtds-action/blob/main/.github/workflows/docs.yml", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1094", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1094/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1094/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1094/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1094", "id": 658996462, "node_id": "MDU6SXNzdWU2NTg5OTY0NjI=", "number": 1094, "title": "Need a small description about Inputs for concordance_index & its formulae", "user": {"login": "gonajeevan", "id": 54041004, "node_id": "MDQ6VXNlcjU0MDQxMDA0", "avatar_url": "https://avatars0.githubusercontent.com/u/54041004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gonajeevan", "html_url": "https://github.com/gonajeevan", "followers_url": "https://api.github.com/users/gonajeevan/followers", "following_url": "https://api.github.com/users/gonajeevan/following{/other_user}", "gists_url": "https://api.github.com/users/gonajeevan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gonajeevan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gonajeevan/subscriptions", "organizations_url": "https://api.github.com/users/gonajeevan/orgs", "repos_url": "https://api.github.com/users/gonajeevan/repos", "events_url": "https://api.github.com/users/gonajeevan/events{/privacy}", "received_events_url": "https://api.github.com/users/gonajeevan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650069015, "node_id": "MDU6TGFiZWw2NTAwNjkwMTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/docs", "name": "docs", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-17T08:09:48Z", "updated_at": "2020-07-27T17:11:47Z", "closed_at": "2020-07-27T17:11:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "As concordance_index can be used for evaluating other survival package related models too, so it will be good if there is some description about the the function like:-\r\n1. how it is being calculated-formulae\r\nex:- (permissible-pairs + 0.5*ties)/(possible-permissible-pairs) something like this\r\nref:-https://www.coursera.org/learn/ai-for-medical-prognosis/lecture/lwc3A/permissible-and-non-permissible-pairs \r\n\r\n2. About inputs of the function and info about possible alternate inputs\r\nex:- Alternate inputs:- if suppose we can get only risk scores and input we need is survival score so some info on if we can still use -ve of risk score and  get concordance index\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1093", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1093/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1093/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1093/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1093", "id": 656647680, "node_id": "MDU6SXNzdWU2NTY2NDc2ODA=", "number": 1093, "title": "rename `plot_covariate_groups`", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2159823542, "node_id": "MDU6TGFiZWwyMTU5ODIzNTQy", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/next%20major%20release%20%F0%9F%A4%9E", "name": "next major release \ud83e\udd1e", "color": "4f6d03", "default": false, "description": ""}, {"id": 652446817, "node_id": "MDU6TGFiZWw2NTI0NDY4MTc=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/plotting", "name": "plotting", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-14T14:16:04Z", "updated_at": "2020-07-27T17:11:47Z", "closed_at": "2020-07-27T17:11:47Z", "author_association": "OWNER", "active_lock_reason": null, "body": "`plot_covariate_groups` isn't a very good name for what this plot does. Let's align it with the new name for the partial-effects plots (both have similar goals)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1092", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1092/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1092/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1092/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1092", "id": 655903118, "node_id": "MDU6SXNzdWU2NTU5MDMxMTg=", "number": 1092, "title": "AttributeError: 'CoxPHFitter' object has no attribute 'predict_hazard'", "user": {"login": "jlim13", "id": 36393441, "node_id": "MDQ6VXNlcjM2MzkzNDQx", "avatar_url": "https://avatars1.githubusercontent.com/u/36393441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlim13", "html_url": "https://github.com/jlim13", "followers_url": "https://api.github.com/users/jlim13/followers", "following_url": "https://api.github.com/users/jlim13/following{/other_user}", "gists_url": "https://api.github.com/users/jlim13/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlim13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlim13/subscriptions", "organizations_url": "https://api.github.com/users/jlim13/orgs", "repos_url": "https://api.github.com/users/jlim13/repos", "events_url": "https://api.github.com/users/jlim13/events{/privacy}", "received_events_url": "https://api.github.com/users/jlim13/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-13T14:37:20Z", "updated_at": "2020-07-13T15:11:13Z", "closed_at": "2020-07-13T15:11:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I can't seem to call `fitter.predict_hazard()` \r\nI am using version 0.24.9", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1091", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1091/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1091/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1091/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1091", "id": 655309274, "node_id": "MDU6SXNzdWU2NTUzMDkyNzQ=", "number": 1091, "title": "Extending survival probability calibration for out-of-sample data ", "user": {"login": "SurajitTest", "id": 59294362, "node_id": "MDQ6VXNlcjU5Mjk0MzYy", "avatar_url": "https://avatars1.githubusercontent.com/u/59294362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SurajitTest", "html_url": "https://github.com/SurajitTest", "followers_url": "https://api.github.com/users/SurajitTest/followers", "following_url": "https://api.github.com/users/SurajitTest/following{/other_user}", "gists_url": "https://api.github.com/users/SurajitTest/gists{/gist_id}", "starred_url": "https://api.github.com/users/SurajitTest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SurajitTest/subscriptions", "organizations_url": "https://api.github.com/users/SurajitTest/orgs", "repos_url": "https://api.github.com/users/SurajitTest/repos", "events_url": "https://api.github.com/users/SurajitTest/events{/privacy}", "received_events_url": "https://api.github.com/users/SurajitTest/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-12T01:14:16Z", "updated_at": "2020-08-01T16:26:04Z", "closed_at": "2020-08-01T16:26:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am on version 0.24.16 and survival probability calibration does not extend for out-of-sample data.Hence, the request is provision of survival probability calibration for out-of-sample data", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1088", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1088/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1088/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1088/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1088", "id": 655226143, "node_id": "MDU6SXNzdWU2NTUyMjYxNDM=", "number": 1088, "title": "Change internal \"_intercept\" to \"Intercept\"", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1703850251, "node_id": "MDU6TGFiZWwxNzAzODUwMjUx", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/modelling", "name": "modelling", "color": "ae06cc", "default": false, "description": ""}, {"id": 2159823542, "node_id": "MDU6TGFiZWwyMTU5ODIzNTQy", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/next%20major%20release%20%F0%9F%A4%9E", "name": "next major release \ud83e\udd1e", "color": "4f6d03", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-11T15:15:09Z", "updated_at": "2020-07-27T17:11:47Z", "closed_at": "2020-07-27T17:11:47Z", "author_association": "OWNER", "active_lock_reason": null, "body": "This aligns with what Patsy does anyways", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1086", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1086/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1086/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1086/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1086", "id": 655139385, "node_id": "MDU6SXNzdWU2NTUxMzkzODU=", "number": 1086, "title": "AIC and Log-Likelihood for models developed with sklearn_adapter", "user": {"login": "SurajitTest", "id": 59294362, "node_id": "MDQ6VXNlcjU5Mjk0MzYy", "avatar_url": "https://avatars1.githubusercontent.com/u/59294362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SurajitTest", "html_url": "https://github.com/SurajitTest", "followers_url": "https://api.github.com/users/SurajitTest/followers", "following_url": "https://api.github.com/users/SurajitTest/following{/other_user}", "gists_url": "https://api.github.com/users/SurajitTest/gists{/gist_id}", "starred_url": "https://api.github.com/users/SurajitTest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SurajitTest/subscriptions", "organizations_url": "https://api.github.com/users/SurajitTest/orgs", "repos_url": "https://api.github.com/users/SurajitTest/repos", "events_url": "https://api.github.com/users/SurajitTest/events{/privacy}", "received_events_url": "https://api.github.com/users/SurajitTest/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-11T05:28:43Z", "updated_at": "2020-08-22T02:57:32Z", "closed_at": "2020-08-22T02:57:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "As of version 0.24.15, there is no provision for obtaining AIC and Log-Likelihood for models developed using sklearn_adapter. Hence, the request is provision of  AIC and Log-Likelihood for models developed using sklearn_adapter.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1080", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1080/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1080/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1080/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1080", "id": 654080811, "node_id": "MDU6SXNzdWU2NTQwODA4MTE=", "number": 1080, "title": "CoxPHFitter with splines should be able to accept strata", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1703850251, "node_id": "MDU6TGFiZWwxNzAzODUwMjUx", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/modelling", "name": "modelling", "color": "ae06cc", "default": false, "description": ""}, {"id": 2159823542, "node_id": "MDU6TGFiZWwyMTU5ODIzNTQy", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/next%20major%20release%20%F0%9F%A4%9E", "name": "next major release \ud83e\udd1e", "color": "4f6d03", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-09T13:55:34Z", "updated_at": "2020-08-09T14:45:40Z", "closed_at": "2020-08-09T14:45:40Z", "author_association": "OWNER", "active_lock_reason": null, "body": "For each strata, there is a unique baseline hazard. The `_cumulative_hazard` function can be expanded to incorporate logic to model `N` different baseline hazards (and have `N * n_baseline_knots` baseline hazard parameters). We will need logic to handle which observation/row should have which baseline (nested `where`s?)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1079", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1079/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1079/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1079/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1079", "id": 653677520, "node_id": "MDU6SXNzdWU2NTM2Nzc1MjA=", "number": 1079, "title": "median_survival_times should accept pd.Series", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 53920840, "node_id": "MDU6TGFiZWw1MzkyMDg0MA==", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/bug", "name": "bug", "color": "8651e8", "default": true, "description": ""}, {"id": 926457395, "node_id": "MDU6TGFiZWw5MjY0NTczOTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/next%20minor%20release%20%F0%9F%A4%9E", "name": "next minor release \ud83e\udd1e", "color": "a3f7ad", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-09T00:31:31Z", "updated_at": "2020-07-19T13:09:58Z", "closed_at": "2020-07-19T13:09:58Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Also check `qth_survival_time` and `qth_survival_times`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1077", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1077/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1077/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1077/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1077", "id": 652802512, "node_id": "MDU6SXNzdWU2NTI4MDI1MTI=", "number": 1077, "title": "For CoxPH - Parametric(baseline_estimation_method='spline'), with regards to method predict_median(), for censored subjects with survival probabilities greater than 0.5 , corresponding median lifetime value is INFINITY", "user": {"login": "SurajitTest", "id": 59294362, "node_id": "MDQ6VXNlcjU5Mjk0MzYy", "avatar_url": "https://avatars1.githubusercontent.com/u/59294362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SurajitTest", "html_url": "https://github.com/SurajitTest", "followers_url": "https://api.github.com/users/SurajitTest/followers", "following_url": "https://api.github.com/users/SurajitTest/following{/other_user}", "gists_url": "https://api.github.com/users/SurajitTest/gists{/gist_id}", "starred_url": "https://api.github.com/users/SurajitTest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SurajitTest/subscriptions", "organizations_url": "https://api.github.com/users/SurajitTest/orgs", "repos_url": "https://api.github.com/users/SurajitTest/repos", "events_url": "https://api.github.com/users/SurajitTest/events{/privacy}", "received_events_url": "https://api.github.com/users/SurajitTest/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-08T01:14:28Z", "updated_at": "2020-07-09T03:28:16Z", "closed_at": "2020-07-09T03:28:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Attached program : Cox_PH_Model_Parametric_GridSearchCV_sent_Cam_July_08_2020.txt helps to replicate the scenario. In this program i have highlighted obtaining survival probability and then median lifetime for censored subjects - both for train and test datasets.\r\n[Cox_PH_Model_Parametric_GridSearchCV_sent_Cam_July_08_2020.txt](https://github.com/CamDavidsonPilon/lifelines/files/4887837/Cox_PH_Model_Parametric_GridSearchCV_sent_Cam_July_08_2020.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1076", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1076/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1076/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1076/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1076", "id": 652768325, "node_id": "MDU6SXNzdWU2NTI3NjgzMjU=", "number": 1076, "title": "For CoxPH - Parametric(baseline_estimation_method='spline'), given below scenarios need to be fixed for censored observations", "user": {"login": "SurajitTest", "id": 59294362, "node_id": "MDQ6VXNlcjU5Mjk0MzYy", "avatar_url": "https://avatars1.githubusercontent.com/u/59294362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SurajitTest", "html_url": "https://github.com/SurajitTest", "followers_url": "https://api.github.com/users/SurajitTest/followers", "following_url": "https://api.github.com/users/SurajitTest/following{/other_user}", "gists_url": "https://api.github.com/users/SurajitTest/gists{/gist_id}", "starred_url": "https://api.github.com/users/SurajitTest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SurajitTest/subscriptions", "organizations_url": "https://api.github.com/users/SurajitTest/orgs", "repos_url": "https://api.github.com/users/SurajitTest/repos", "events_url": "https://api.github.com/users/SurajitTest/events{/privacy}", "received_events_url": "https://api.github.com/users/SurajitTest/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-08T00:18:37Z", "updated_at": "2020-07-08T00:23:48Z", "closed_at": "2020-07-08T00:23:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "1) Methods predict_cumulative_hazard() and predict_survival_function() when used with 'times' parameter do not show the effect of using 'times' parameter - means that the output of methods predict_cumulative_hazard() and predict_survival_function() have all time periods starting from min time period of training dataset to max time period of training dataset and the 'times' parameter does not have any effect on the output.\r\n\r\n2) With regards to method predict_median(), I did observe many censored subjects for whom all(corresponding to different time periods) of survival probabilities are greater than 0.5 , but still then the corresponding median lifetime value is INFINITY.\r\n\r\nAttaching python program (Cox_PH_Model_Parametric_GridSearchCV_sent_Cam_July_07_2020.txt) to replicate scenario.\r\n[Cox_PH_Model_Parametric_GridSearchCV_sent_Cam_July_07_2020.txt](https://github.com/CamDavidsonPilon/lifelines/files/4887689/Cox_PH_Model_Parametric_GridSearchCV_sent_Cam_July_07_2020.txt)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1074", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1074/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1074/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1074/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1074", "id": 650280862, "node_id": "MDU6SXNzdWU2NTAyODA4NjI=", "number": 1074, "title": "For CoxPH - Parametric(baseline_estimation_method='spline'), the given below scenarios mentioned in 'Red' need to be fixed for censored observations", "user": {"login": "SurajitTest", "id": 59294362, "node_id": "MDQ6VXNlcjU5Mjk0MzYy", "avatar_url": "https://avatars1.githubusercontent.com/u/59294362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SurajitTest", "html_url": "https://github.com/SurajitTest", "followers_url": "https://api.github.com/users/SurajitTest/followers", "following_url": "https://api.github.com/users/SurajitTest/following{/other_user}", "gists_url": "https://api.github.com/users/SurajitTest/gists{/gist_id}", "starred_url": "https://api.github.com/users/SurajitTest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SurajitTest/subscriptions", "organizations_url": "https://api.github.com/users/SurajitTest/orgs", "repos_url": "https://api.github.com/users/SurajitTest/repos", "events_url": "https://api.github.com/users/SurajitTest/events{/privacy}", "received_events_url": "https://api.github.com/users/SurajitTest/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-03T01:20:14Z", "updated_at": "2020-07-05T18:28:36Z", "closed_at": "2020-07-05T18:28:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "These scenarios are for censored observations. Attached file helps to replicate the scenario.\r\n[1.3.Cox_PH_Model_Parametric_GridSearchCV_sent_Cam.txt](https://github.com/CamDavidsonPilon/lifelines/files/4867270/1.3.Cox_PH_Model_Parametric_GridSearchCV_sent_Cam.txt)\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/59294362/86421965-14dec100-bd1f-11ea-9a1a-4dbe3c5117b0.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1071", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1071/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1071/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1071/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1071", "id": 647576805, "node_id": "MDU6SXNzdWU2NDc1NzY4MDU=", "number": 1071, "title": "Dataset reading", "user": {"login": "shiven304", "id": 65970804, "node_id": "MDQ6VXNlcjY1OTcwODA0", "avatar_url": "https://avatars2.githubusercontent.com/u/65970804?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shiven304", "html_url": "https://github.com/shiven304", "followers_url": "https://api.github.com/users/shiven304/followers", "following_url": "https://api.github.com/users/shiven304/following{/other_user}", "gists_url": "https://api.github.com/users/shiven304/gists{/gist_id}", "starred_url": "https://api.github.com/users/shiven304/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shiven304/subscriptions", "organizations_url": "https://api.github.com/users/shiven304/orgs", "repos_url": "https://api.github.com/users/shiven304/repos", "events_url": "https://api.github.com/users/shiven304/events{/privacy}", "received_events_url": "https://api.github.com/users/shiven304/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-29T18:25:54Z", "updated_at": "2020-07-01T16:58:40Z", "closed_at": "2020-07-01T16:58:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Cameron,\r\nSo I was trying to upload an excel file to perform a parametric hazard-based duration modelling, but the function Weibullaftfitter doesn't read anything except the event column btw the datframe i have created is reading the data from the xlsx file but that function is giving certain errors, maybe it is only reading the integer datatype but not the float. kindly help.\r\n####################\r\nThe error that i am getting is:\r\nKeyError                                  Traceback (most recent call last)\r\n~\\anaconda3\\lib\\site-packages\\pandas\\core\\indexes\\base.py in get_loc(self, key, method, tolerance)\r\n   2645             try:\r\n-> 2646                 return self._engine.get_loc(key)\r\n   2647             except KeyError:\r\n\r\npandas\\_libs\\index.pyx in pandas._libs.index.IndexEngine.get_loc()\r\n\r\npandas\\_libs\\index.pyx in pandas._libs.index.IndexEngine.get_loc()\r\n\r\npandas\\_libs\\hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()\r\n\r\npandas\\_libs\\hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()\r\n\r\nKeyError: 'time'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n#############\r\n\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1066", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1066/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1066/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1066/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1066", "id": 644921129, "node_id": "MDU6SXNzdWU2NDQ5MjExMjk=", "number": 1066, "title": "Cox PH Regression Baseline Hazard - Categorical Variables", "user": {"login": "EvanYathon", "id": 26232281, "node_id": "MDQ6VXNlcjI2MjMyMjgx", "avatar_url": "https://avatars1.githubusercontent.com/u/26232281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EvanYathon", "html_url": "https://github.com/EvanYathon", "followers_url": "https://api.github.com/users/EvanYathon/followers", "following_url": "https://api.github.com/users/EvanYathon/following{/other_user}", "gists_url": "https://api.github.com/users/EvanYathon/gists{/gist_id}", "starred_url": "https://api.github.com/users/EvanYathon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EvanYathon/subscriptions", "organizations_url": "https://api.github.com/users/EvanYathon/orgs", "repos_url": "https://api.github.com/users/EvanYathon/repos", "events_url": "https://api.github.com/users/EvanYathon/events{/privacy}", "received_events_url": "https://api.github.com/users/EvanYathon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-24T20:20:10Z", "updated_at": "2020-06-24T20:47:28Z", "closed_at": "2020-06-24T20:47:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI'm performing survival analysis on a data set, and getting some strange results.  I've created a reprex using the `gbsb` dataset from the lifelines datasets.\r\n\r\nI'm new to survival analysis, so it's quite possible that my interpretation is at fault.  The issue is when I am looking at the coefficients of categorical variables in tandem with plotting covariate groups.  Here is the reprex:\r\n\r\n```\r\n# stats\r\nfrom lifelines import *\r\nfrom patsy import ModelDesc, dmatrix\r\n\r\n# utility\r\nimport pandas as pd\r\nimport numpy as np\r\n\r\nfrom lifelines.datasets import load_gbsg2\r\ngbsb = load_gbsg2()\r\n\r\n# select a few columns, including one categorical\r\ngbsb_regr = gbsb[[\"tgrade\", \"time\", \"cens\", \"age\", \"tsize\", \"pnodes\", \"progrec\"]]\r\n\r\n# specify group III as the reference group\r\nformula = ModelDesc.from_formula(\"\"\"C(tgrade, Treatment('III')) + time + cens + age + tsize + pnodes + progrec\"\"\")\r\n\r\n# get the dataframe using the formula - no intercept for CoxPH\r\ngbsb_regr_encode = dmatrix(formula, data = gbsb_regr, return_type = \"dataframe\").drop(columns = [\"Intercept\"])\r\n\r\n# Cox model - no regularization as we are trying to estimate coefficients\r\ngbsb_cph = CoxPHFitter()\r\ngbsb_cph.fit(gbsb_regr_encode, duration_col = \"time\", event_col = \"cens\")\r\n\r\ngbsb_cph.print_summary()\r\n```\r\n\r\n`print_summary()` results:\r\n\r\n![image](https://user-images.githubusercontent.com/26232281/85622623-5aff9a80-b624-11ea-925a-8b848ccda486.png)\r\n\r\n```\r\ngbsb_cph.plot_covariate_groups([\"C(tgrade, Treatment('III'))[T.I]\", \"C(tgrade, Treatment('III'))[T.II]\"], np.eye(2))\r\n```\r\n![image](https://user-images.githubusercontent.com/26232281/85622655-6bb01080-b624-11ea-8348-190e17e98352.png)\r\n\r\nWhat I am confused about are the survival curves for the different encoded categorical variables.  The orange curve (level TII) has a higher hazard function (or lower survival) compared to baseline, which seems contrary to the coefficient estimate of `-0.18`.  From the coefficient estimate, I would expect a lowering of the hazard function.\r\n\r\nI've read the issue #543 that states in `lifelines` the baseline hazard function is equal to the mean of the covariates - what does that mean for the reference-treatment coding I applied using `patsy`?\r\n\r\nThanks for writing a great package - the docs are excellent.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1065", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1065/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1065/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1065/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1065", "id": 643915768, "node_id": "MDU6SXNzdWU2NDM5MTU3Njg=", "number": 1065, "title": "delete metrics.py", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2159823542, "node_id": "MDU6TGFiZWwyMTU5ODIzNTQy", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/next%20major%20release%20%F0%9F%A4%9E", "name": "next major release \ud83e\udd1e", "color": "4f6d03", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-23T15:00:09Z", "updated_at": "2020-07-27T17:11:47Z", "closed_at": "2020-07-27T17:11:47Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1064", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1064/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1064/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1064/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1064", "id": 643901023, "node_id": "MDU6SXNzdWU2NDM5MDEwMjM=", "number": 1064, "title": "print_summary not showing CI columns if alpha != 0.05", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 53920840, "node_id": "MDU6TGFiZWw1MzkyMDg0MA==", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/bug", "name": "bug", "color": "8651e8", "default": true, "description": ""}, {"id": 926457395, "node_id": "MDU6TGFiZWw5MjY0NTczOTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/next%20minor%20release%20%F0%9F%A4%9E", "name": "next minor release \ud83e\udd1e", "color": "a3f7ad", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-23T14:41:44Z", "updated_at": "2020-07-09T18:55:02Z", "closed_at": "2020-07-09T18:55:02Z", "author_association": "OWNER", "active_lock_reason": null, "body": "I think this has always been a bug...\r\n\r\n<img width=\"995\" alt=\"Screen Shot 2020-06-23 at 10 41 34 AM\" src=\"https://user-images.githubusercontent.com/884032/85417870-20233700-b53e-11ea-939f-1319a32e0801.png\">\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1063", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1063/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1063/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1063/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1063", "id": 643494076, "node_id": "MDU6SXNzdWU2NDM0OTQwNzY=", "number": 1063, "title": "Change CoxPH example in \"Prediction on censored subjects\"", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650069015, "node_id": "MDU6TGFiZWw2NTAwNjkwMTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/docs", "name": "docs", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-23T03:07:55Z", "updated_at": "2020-06-29T17:59:17Z", "closed_at": "2020-06-29T17:59:17Z", "author_association": "OWNER", "active_lock_reason": null, "body": "https://lifelines.readthedocs.io/en/latest/Survival%20Regression.html#prediction-on-censored-subjects\r\n\r\nThe survival probs using conditional_after are equal to 1.0 because the model does not extrapolate well.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1060", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1060/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1060/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1060/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1060", "id": 642396869, "node_id": "MDU6SXNzdWU2NDIzOTY4Njk=", "number": 1060, "title": "lifelines models should accept Patsy formulas", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 53920842, "node_id": "MDU6TGFiZWw1MzkyMDg0Mg==", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1703850251, "node_id": "MDU6TGFiZWwxNzAzODUwMjUx", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/modelling", "name": "modelling", "color": "ae06cc", "default": false, "description": ""}, {"id": 2159823542, "node_id": "MDU6TGFiZWwyMTU5ODIzNTQy", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/next%20major%20release%20%F0%9F%A4%9E", "name": "next major release \ud83e\udd1e", "color": "4f6d03", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-20T15:31:24Z", "updated_at": "2020-07-27T17:11:47Z", "closed_at": "2020-07-27T17:11:47Z", "author_association": "OWNER", "active_lock_reason": null, "body": "More and more ppl are asking about complicated transforms like bsplines on their covariates. ATM it's clunky to do this, and even more clunky to create partial-effects plots: https://gist.github.com/CamDavidsonPilon/d6c2f6acea390d81a5c33150222ac70e\r\n\r\n\r\n\r\n## API for formulas\r\n\r\n1. First first option is to overload the `fit_right_censoring` API, and lifelines' has internal logic to know what users are using formulas vs using traditional calls:\r\n\r\n```\r\ndef fit_right_censoring(formula_or_df, duration_col, event_col, data=None, ...):\r\n   if isinstance(formula_or_df, str):\r\n        assert data is not None, ...\r\n  else:\r\n      data = formula_or_df\r\n      ...\r\n```\r\n\r\nbut this probably would confused new users, and complicates the signature quite a bit. \r\n\r\n2. The second option is to introduce a new method, something like `fit_right_censoring_from_formula(formula, data)`. This expands the API quite a bit, and has lots of overlap with the `fit_right_censoring`. \r\n\r\n3. A third option is to treat the formula as a kwarg, and `duration_col` is now optional:\r\n```\r\nfit_right_censoring(df, formula=\"Surv(T, E) ~ x + y...\")\r\n```\r\nThis preserves the position of df at the start of the signature (+1), and doesn't expand the size of the API.  This implies pushing the duration_col, event_col to the formula, not unlike R's survival library:\r\n```\r\nmodel.fit_right_censoring(df, formula=\"Surv(T, E) ~ x + y ... \", kwargs)\r\n```\r\nI would have to create custom Patsy syntax, though. \r\n\r\n4. Another option is to keep `duration_col` and `event_col` as positional args, and introduce only a RHS formula kwarg:\r\n\r\n```\r\nmodel.fit_right_censoring(df, \"T\", \"E\", formula=\"x + y ... \", kwargs)\r\n```\r\n\r\nQ: what do I gain by introducing a `Surv(T, E)` syntax? I don't think a whole lot. \r\n\r\n\r\n## Other ideas\r\n\r\n - Using custom formula syntax, users could specify the _type_ of censoring. No, I don't like this because it puts a lot of logic into formulas. I prefer methods over strings. \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1059", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1059/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1059/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1059/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1059", "id": 641582566, "node_id": "MDU6SXNzdWU2NDE1ODI1NjY=", "number": 1059, "title": "add atuodocs on new CRC model", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650069015, "node_id": "MDU6TGFiZWw2NTAwNjkwMTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/docs", "name": "docs", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-18T22:19:09Z", "updated_at": "2020-06-20T21:59:43Z", "closed_at": "2020-06-20T21:59:43Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1058", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1058/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1058/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1058/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1058", "id": 641552689, "node_id": "MDU6SXNzdWU2NDE1NTI2ODk=", "number": 1058, "title": "Predicting the survival function for uncensored test data? ", "user": {"login": "jlim13", "id": 36393441, "node_id": "MDQ6VXNlcjM2MzkzNDQx", "avatar_url": "https://avatars1.githubusercontent.com/u/36393441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlim13", "html_url": "https://github.com/jlim13", "followers_url": "https://api.github.com/users/jlim13/followers", "following_url": "https://api.github.com/users/jlim13/following{/other_user}", "gists_url": "https://api.github.com/users/jlim13/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlim13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlim13/subscriptions", "organizations_url": "https://api.github.com/users/jlim13/orgs", "repos_url": "https://api.github.com/users/jlim13/repos", "events_url": "https://api.github.com/users/jlim13/events{/privacy}", "received_events_url": "https://api.github.com/users/jlim13/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650069015, "node_id": "MDU6TGFiZWw2NTAwNjkwMTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/docs", "name": "docs", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-18T21:13:09Z", "updated_at": "2020-06-20T21:59:43Z", "closed_at": "2020-06-20T21:59:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When we predict the survival function for a given data point (this data point is in my **test** set and is **uncensored**), do we use the `conditional_after` argument? To me, it doesn't make sense to because when I evaluate, I will take the median percentile as the predicted duration and measure that to the ground truth duration. The predicted duration shouldn't be dependent on the ground truth duration, correct? Or am I thinking about this wrong? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1057", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1057/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1057/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1057/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1057", "id": 641246603, "node_id": "MDU6SXNzdWU2NDEyNDY2MDM=", "number": 1057, "title": "Add labels to doc images", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650069015, "node_id": "MDU6TGFiZWw2NTAwNjkwMTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/docs", "name": "docs", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-18T14:19:47Z", "updated_at": "2020-06-20T21:59:43Z", "closed_at": "2020-06-20T21:59:43Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Ex: https://lifelines.readthedocs.io/en/latest/_images/survival_weibull.png\r\n\r\nnot clear what that is (HF vs CHF)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1054", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1054/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1054/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1054/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1054", "id": 640101832, "node_id": "MDU6SXNzdWU2NDAxMDE4MzI=", "number": 1054, "title": "Fix coxph docs", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650069015, "node_id": "MDU6TGFiZWw2NTAwNjkwMTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/docs", "name": "docs", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-17T02:59:23Z", "updated_at": "2020-06-29T17:59:17Z", "closed_at": "2020-06-29T17:59:17Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1048", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1048/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1048/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1048/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1048", "id": 637821410, "node_id": "MDU6SXNzdWU2Mzc4MjE0MTA=", "number": 1048, "title": "probability calibration", "user": {"login": "ioannis12", "id": 39949669, "node_id": "MDQ6VXNlcjM5OTQ5NjY5", "avatar_url": "https://avatars2.githubusercontent.com/u/39949669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ioannis12", "html_url": "https://github.com/ioannis12", "followers_url": "https://api.github.com/users/ioannis12/followers", "following_url": "https://api.github.com/users/ioannis12/following{/other_user}", "gists_url": "https://api.github.com/users/ioannis12/gists{/gist_id}", "starred_url": "https://api.github.com/users/ioannis12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ioannis12/subscriptions", "organizations_url": "https://api.github.com/users/ioannis12/orgs", "repos_url": "https://api.github.com/users/ioannis12/repos", "events_url": "https://api.github.com/users/ioannis12/events{/privacy}", "received_events_url": "https://api.github.com/users/ioannis12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-06-12T15:11:05Z", "updated_at": "2020-06-20T18:29:29Z", "closed_at": "2020-06-20T18:29:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello, \r\n\r\ncongrats for your work. I was wondering if there is any way to do probability calibration on predictions with lifelines. \r\nIn sklearn there is CalibratedClassifierCV, but I don't know if it can be used for lifelines models.\r\n\r\ngreetings", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1046", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1046/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1046/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1046/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1046", "id": 637075412, "node_id": "MDU6SXNzdWU2MzcwNzU0MTI=", "number": 1046, "title": "Has anyone here run into a scenario in which one has a high c-index but low absolute mean error? ", "user": {"login": "jlim13", "id": 36393441, "node_id": "MDQ6VXNlcjM2MzkzNDQx", "avatar_url": "https://avatars1.githubusercontent.com/u/36393441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlim13", "html_url": "https://github.com/jlim13", "followers_url": "https://api.github.com/users/jlim13/followers", "following_url": "https://api.github.com/users/jlim13/following{/other_user}", "gists_url": "https://api.github.com/users/jlim13/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlim13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlim13/subscriptions", "organizations_url": "https://api.github.com/users/jlim13/orgs", "repos_url": "https://api.github.com/users/jlim13/repos", "events_url": "https://api.github.com/users/jlim13/events{/privacy}", "received_events_url": "https://api.github.com/users/jlim13/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-06-11T14:44:47Z", "updated_at": "2020-06-16T13:46:25Z", "closed_at": "2020-06-16T13:46:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "absolute mean error is the average of the differences between the predicted time values and the actual observation time values.\r\n\r\nmy c-index is .85, but my absolute mean error is over 100. this means that my predictions are, on average, off by 100 days. any intuition as to how to proceed? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1045", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1045/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1045/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1045/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1045", "id": 636945096, "node_id": "MDU6SXNzdWU2MzY5NDUwOTY=", "number": 1045, "title": "Ability to skip _predict_median calculation for custom models", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 926457395, "node_id": "MDU6TGFiZWw5MjY0NTczOTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/next%20minor%20release%20%F0%9F%A4%9E", "name": "next minor release \ud83e\udd1e", "color": "a3f7ad", "default": false, "description": ""}, {"id": 650071077, "node_id": "MDU6TGFiZWw2NTAwNzEwNzc=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/performance", "name": "performance", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-11T11:40:22Z", "updated_at": "2020-06-17T02:27:53Z", "closed_at": "2020-06-17T02:27:53Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The `predict_median` function can be very slow for models without a known percentile calculation and lots of observations (because we need to predict the SF, and then determine the percentile). Internally, we compute this for later use in `concordance_index` (and it's debatable if this quantity is even useful, or if the median is the correct prediction to use). Give users the option to skip this `predict_median` calculation. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1040", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1040/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1040/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1040/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1040", "id": 629517845, "node_id": "MDU6SXNzdWU2Mjk1MTc4NDU=", "number": 1040, "title": "Dataframe of the survival function (cph.predict_survival_function())", "user": {"login": "jlim13", "id": 36393441, "node_id": "MDQ6VXNlcjM2MzkzNDQx", "avatar_url": "https://avatars1.githubusercontent.com/u/36393441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlim13", "html_url": "https://github.com/jlim13", "followers_url": "https://api.github.com/users/jlim13/followers", "following_url": "https://api.github.com/users/jlim13/following{/other_user}", "gists_url": "https://api.github.com/users/jlim13/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlim13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlim13/subscriptions", "organizations_url": "https://api.github.com/users/jlim13/orgs", "repos_url": "https://api.github.com/users/jlim13/repos", "events_url": "https://api.github.com/users/jlim13/events{/privacy}", "received_events_url": "https://api.github.com/users/jlim13/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-02T21:11:17Z", "updated_at": "2020-06-03T15:39:22Z", "closed_at": "2020-06-03T15:39:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\n\r\nThe output of this is an NxD dataframe. Each column appears to correspond to the row index of the data and the row is the probability of survival. So surivial_df[i, j] is the probability of the jth datapoint surviving after i units of time. Why do the row values skip values? For example, my first row value is 47.0 and the second jumps to 128.0. Why does it not start from 1 and increase by 1 unit of time? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1038", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1038/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1038/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1038/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1038", "id": 628509150, "node_id": "MDU6SXNzdWU2Mjg1MDkxNTA=", "number": 1038, "title": "How to increase max number of iterations", "user": {"login": "zxp567", "id": 26178407, "node_id": "MDQ6VXNlcjI2MTc4NDA3", "avatar_url": "https://avatars1.githubusercontent.com/u/26178407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zxp567", "html_url": "https://github.com/zxp567", "followers_url": "https://api.github.com/users/zxp567/followers", "following_url": "https://api.github.com/users/zxp567/following{/other_user}", "gists_url": "https://api.github.com/users/zxp567/gists{/gist_id}", "starred_url": "https://api.github.com/users/zxp567/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zxp567/subscriptions", "organizations_url": "https://api.github.com/users/zxp567/orgs", "repos_url": "https://api.github.com/users/zxp567/repos", "events_url": "https://api.github.com/users/zxp567/events{/privacy}", "received_events_url": "https://api.github.com/users/zxp567/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-01T15:06:30Z", "updated_at": "2020-06-01T18:51:31Z", "closed_at": "2020-06-01T18:51:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I recently upgraded the lifelines version. \r\nWhen using WeibullAFTFitter, I found it throws a \"convergence error\" and it seems the max number of iterations was reduced to 200, while in the past it could exceed that.\r\nIs there any way that we could increase the max number of iterations? Didn't find any option in the fitter to do so?\r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1036", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1036/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1036/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1036/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1036", "id": 627417689, "node_id": "MDU6SXNzdWU2Mjc0MTc2ODk=", "number": 1036, "title": "Prediction on right-censored data  - Possible typo in documentation?", "user": {"login": "jlim13", "id": 36393441, "node_id": "MDQ6VXNlcjM2MzkzNDQx", "avatar_url": "https://avatars1.githubusercontent.com/u/36393441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlim13", "html_url": "https://github.com/jlim13", "followers_url": "https://api.github.com/users/jlim13/followers", "following_url": "https://api.github.com/users/jlim13/following{/other_user}", "gists_url": "https://api.github.com/users/jlim13/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlim13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlim13/subscriptions", "organizations_url": "https://api.github.com/users/jlim13/orgs", "repos_url": "https://api.github.com/users/jlim13/repos", "events_url": "https://api.github.com/users/jlim13/events{/privacy}", "received_events_url": "https://api.github.com/users/jlim13/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650069015, "node_id": "MDU6TGFiZWw2NTAwNjkwMTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/docs", "name": "docs", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-29T17:16:51Z", "updated_at": "2020-06-05T13:55:25Z", "closed_at": "2020-06-05T13:55:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was reading the tutorials and ran into this section\r\nhttps://lifelines.readthedocs.io/en/latest/Survival%20Regression.html#id1\r\n\r\n\r\nYou start off this section by saying \"When predicting time remaining for uncensored individuals, you can use the conditional_after kwarg:\" Did you mean censored individuals? (Individuals whose arrest we have not observed in this study)\r\n\r\n```\r\ncensored_X = rossi.loc[~rossi['arrest'].astype(bool)] \r\ncensored_subjects_last_obs = censored_X['week']\r\naft.predict_cumulative_hazard(censored_X, ancillary_df=censored_X, conditional_after=censored_subjects_last_obs)\r\naft.predict_survival_function(censored_X, ancillary_df=censored_X, conditional_after=censored_subjects_last_obs)\r\naft.predict_median(censored_X, ancillary_df=censored_X, conditional_after=censored_subjects_last_obs)\r\naft.predict_percentile(X, p=0.9, ancillary_df=censored_X, conditional_after=censored_subjects_last_obs)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1035", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1035/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1035/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1035/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1035", "id": 626513583, "node_id": "MDU6SXNzdWU2MjY1MTM1ODM=", "number": 1035, "title": "Add instructions for unpickling sklearn models", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650069015, "node_id": "MDU6TGFiZWw2NTAwNjkwMTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/docs", "name": "docs", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-28T13:34:22Z", "updated_at": "2020-06-17T02:28:08Z", "closed_at": "2020-06-17T02:28:08Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1034", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1034/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1034/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1034/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1034", "id": 624583908, "node_id": "MDU6SXNzdWU2MjQ1ODM5MDg=", "number": 1034, "title": "KMF fit fails with tuples", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 53920840, "node_id": "MDU6TGFiZWw1MzkyMDg0MA==", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/bug", "name": "bug", "color": "8651e8", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-26T03:54:50Z", "updated_at": "2020-06-05T13:55:32Z", "closed_at": "2020-06-05T13:55:32Z", "author_association": "OWNER", "active_lock_reason": null, "body": "```\r\nkmf = KaplanMeierFitter().fit((1,2,3))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1033", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1033/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1033/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1033/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1033", "id": 624528194, "node_id": "MDU6SXNzdWU2MjQ1MjgxOTQ=", "number": 1033, "title": "Kaplan-Meier plot_loglogs difference from docs", "user": {"login": "sean-reed", "id": 19431229, "node_id": "MDQ6VXNlcjE5NDMxMjI5", "avatar_url": "https://avatars0.githubusercontent.com/u/19431229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sean-reed", "html_url": "https://github.com/sean-reed", "followers_url": "https://api.github.com/users/sean-reed/followers", "following_url": "https://api.github.com/users/sean-reed/following{/other_user}", "gists_url": "https://api.github.com/users/sean-reed/gists{/gist_id}", "starred_url": "https://api.github.com/users/sean-reed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sean-reed/subscriptions", "organizations_url": "https://api.github.com/users/sean-reed/orgs", "repos_url": "https://api.github.com/users/sean-reed/repos", "events_url": "https://api.github.com/users/sean-reed/events{/privacy}", "received_events_url": "https://api.github.com/users/sean-reed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-26T00:10:44Z", "updated_at": "2020-06-04T19:15:22Z", "closed_at": "2020-06-04T19:15:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The docstring says this function gives a plot of log(S(t)) against log(t) but it actually produces a plot of log(-log(S(t))) (correctly labelled on y-axis) against t (incorrectly labelled as log(t)) with a linear-scaled y-axis and log-scaled x-axis.\r\n\r\nI can submit a fix for this but, assuming the intention of this function is to produce a straight line plot for Weibull distributed survival times, there are various solutions: \r\n\r\n(a) Plot -log(S(t)) against t, with log-scaled x and y axes.\r\n(b) Plot -log(S(t)) against log(t), with linear-scaled x-axis and  log-scaled y-axis.\r\n(c) Plot log(-log(S(t)) against log(t), with linear-scaled x and y axes.\r\n\r\nMy suggestion is solution (b) as it's closest to the current function name and docstring.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1032", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1032/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1032/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1032/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1032", "id": 624523979, "node_id": "MDU6SXNzdWU2MjQ1MjM5Nzk=", "number": 1032, "title": "Prediction/Extrapolation for CoxPHFitter(baseline_estimation_method='spline') not working", "user": {"login": "SurajitTest", "id": 59294362, "node_id": "MDQ6VXNlcjU5Mjk0MzYy", "avatar_url": "https://avatars1.githubusercontent.com/u/59294362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SurajitTest", "html_url": "https://github.com/SurajitTest", "followers_url": "https://api.github.com/users/SurajitTest/followers", "following_url": "https://api.github.com/users/SurajitTest/following{/other_user}", "gists_url": "https://api.github.com/users/SurajitTest/gists{/gist_id}", "starred_url": "https://api.github.com/users/SurajitTest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SurajitTest/subscriptions", "organizations_url": "https://api.github.com/users/SurajitTest/orgs", "repos_url": "https://api.github.com/users/SurajitTest/repos", "events_url": "https://api.github.com/users/SurajitTest/events{/privacy}", "received_events_url": "https://api.github.com/users/SurajitTest/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 53920842, "node_id": "MDU6TGFiZWw1MzkyMDg0Mg==", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 926457395, "node_id": "MDU6TGFiZWw5MjY0NTczOTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/next%20minor%20release%20%F0%9F%A4%9E", "name": "next minor release \ud83e\udd1e", "color": "a3f7ad", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-25T23:50:56Z", "updated_at": "2020-06-17T02:27:53Z", "closed_at": "2020-06-17T02:27:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using  CoxPHFitter(baseline_estimation_method='spline') and for censored observations, I am experiencing the given below:\r\n\r\n1 : All survival probability values are equal to 1.\r\n2 : All Median Lifetime values are equal to inf.\r\n3 : All Expected Lifetime values are equal to 51.    \r\n4 : All Cumulative Hazard values are equal to is 0.\r\n\r\nThe dataset used for analysis is from the lifelines package : from lifelines.datasets import load_rossi", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1025", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1025/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1025/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1025/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1025", "id": 619161533, "node_id": "MDU6SXNzdWU2MTkxNjE1MzM=", "number": 1025, "title": "c-index for correlation between T (log(T) and variable", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 53920842, "node_id": "MDU6TGFiZWw1MzkyMDg0Mg==", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-15T18:30:37Z", "updated_at": "2020-05-15T20:31:52Z", "closed_at": "2020-05-15T20:31:51Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1023", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1023/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1023/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1023/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1023", "id": 618940655, "node_id": "MDU6SXNzdWU2MTg5NDA2NTU=", "number": 1023, "title": "extend `find_best_parametric_model` to allow for weights, etc. ", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 53920842, "node_id": "MDU6TGFiZWw1MzkyMDg0Mg==", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 926457395, "node_id": "MDU6TGFiZWw5MjY0NTczOTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/next%20minor%20release%20%F0%9F%A4%9E", "name": "next minor release \ud83e\udd1e", "color": "a3f7ad", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-15T12:44:23Z", "updated_at": "2020-05-16T18:32:56Z", "closed_at": "2020-05-16T18:32:56Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1022", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1022/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1022/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1022/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1022", "id": 618939903, "node_id": "MDU6SXNzdWU2MTg5Mzk5MDM=", "number": 1022, "title": "Extend `find_best_parametric_model` to left and interval censoring ", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 53920842, "node_id": "MDU6TGFiZWw1MzkyMDg0Mg==", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 926457395, "node_id": "MDU6TGFiZWw5MjY0NTczOTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/next%20minor%20release%20%F0%9F%A4%9E", "name": "next minor release \ud83e\udd1e", "color": "a3f7ad", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-15T12:43:07Z", "updated_at": "2020-05-16T18:32:56Z", "closed_at": "2020-05-16T18:32:56Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1021", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1021/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1021/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1021/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1021", "id": 618895016, "node_id": "MDU6SXNzdWU2MTg4OTUwMTY=", "number": 1021, "title": "Changing legend position or getting rid of it.", "user": {"login": "rLannes", "id": 15181745, "node_id": "MDQ6VXNlcjE1MTgxNzQ1", "avatar_url": "https://avatars1.githubusercontent.com/u/15181745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rLannes", "html_url": "https://github.com/rLannes", "followers_url": "https://api.github.com/users/rLannes/followers", "following_url": "https://api.github.com/users/rLannes/following{/other_user}", "gists_url": "https://api.github.com/users/rLannes/gists{/gist_id}", "starred_url": "https://api.github.com/users/rLannes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rLannes/subscriptions", "organizations_url": "https://api.github.com/users/rLannes/orgs", "repos_url": "https://api.github.com/users/rLannes/repos", "events_url": "https://api.github.com/users/rLannes/events{/privacy}", "received_events_url": "https://api.github.com/users/rLannes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-15T11:20:59Z", "updated_at": "2020-05-15T11:23:31Z", "closed_at": "2020-05-15T11:23:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nI would like to know if there is any way to either tweak the legend, position size etc... Or to simply remove it? \r\n\r\nBest regards, \r\nRomain", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1015", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1015/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1015/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1015/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1015", "id": 617819832, "node_id": "MDU6SXNzdWU2MTc4MTk4MzI=", "number": 1015, "title": "Sklearn GridSearchCV compatibility for CoxPHFitter", "user": {"login": "SurajitTest", "id": 59294362, "node_id": "MDQ6VXNlcjU5Mjk0MzYy", "avatar_url": "https://avatars1.githubusercontent.com/u/59294362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SurajitTest", "html_url": "https://github.com/SurajitTest", "followers_url": "https://api.github.com/users/SurajitTest/followers", "following_url": "https://api.github.com/users/SurajitTest/following{/other_user}", "gists_url": "https://api.github.com/users/SurajitTest/gists{/gist_id}", "starred_url": "https://api.github.com/users/SurajitTest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SurajitTest/subscriptions", "organizations_url": "https://api.github.com/users/SurajitTest/orgs", "repos_url": "https://api.github.com/users/SurajitTest/repos", "events_url": "https://api.github.com/users/SurajitTest/events{/privacy}", "received_events_url": "https://api.github.com/users/SurajitTest/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 53920840, "node_id": "MDU6TGFiZWw1MzkyMDg0MA==", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/bug", "name": "bug", "color": "8651e8", "default": true, "description": ""}, {"id": 2059296273, "node_id": "MDU6TGFiZWwyMDU5Mjk2Mjcz", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/scikit-learn", "name": "scikit-learn", "color": "f9d0c4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-13T23:33:00Z", "updated_at": "2020-05-16T13:43:20Z", "closed_at": "2020-05-16T13:43:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am running the given below code when I get error : TypeError: Cannot clone object '<class 'lifelines.utils.sklearn_adapter.SkLearnCoxPHFitter'>' (type <class 'type'>): it does not seem to be a scikit-learn estimator as it does not implement a 'get_params' methods.Can you please provide any suggestion as to why this is happening OR how can I avoid this error?.I am using lifelines 0.24.6 and sklearn 0.22.      \r\n```\r\nfrom lifelines import CoxPHFitter\r\nfrom lifelines.datasets import load_rossi\r\nfrom lifelines.utils.sklearn_adapter import sklearn_adapter\r\nimport numpy as np\r\nfrom sklearn.model_selection import GridSearchCV\r\nfrom sklearn  import model_selection\r\nfrom sklearn.model_selection import StratifiedKFold\r\nX = load_rossi().drop('week', axis=1)\r\nY = load_rossi().pop('week')\r\nX_train, X_test, y_train, y_test = model_selection.train_test_split(X, Y, test_size=0.30,random_state=42)\r\nCoxRegression = sklearn_adapter(CoxPHFitter, event_col='arrest')\r\nparams_grid = {\r\n               'alpha':[0.05,0.04,0.03,0.02,0.01],\r\n               'baseline_estimation_method':['breslow','spline'],\r\n               'penalizer': 10.0 ** np.arange(-2, 3),\r\n               'l1_ratio': [0, 1/3, 2/3]    \r\n               }\r\nskfolds = StratifiedKFold(n_splits=10,shuffle=True,random_state=42)\r\ngrid_search=GridSearchCV(CoxRegression, params_grid, n_jobs=-1,verbose=1,cv=skfolds)\r\ntrain_ds1=grid_search.fit(X_train, y_train)      \r\n```               ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1007", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1007/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1007/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1007/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1007", "id": 611540130, "node_id": "MDU6SXNzdWU2MTE1NDAxMzA=", "number": 1007, "title": "Gompertz Regression doesn't converge properly", "user": {"login": "fmardero", "id": 47703203, "node_id": "MDQ6VXNlcjQ3NzAzMjAz", "avatar_url": "https://avatars3.githubusercontent.com/u/47703203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmardero", "html_url": "https://github.com/fmardero", "followers_url": "https://api.github.com/users/fmardero/followers", "following_url": "https://api.github.com/users/fmardero/following{/other_user}", "gists_url": "https://api.github.com/users/fmardero/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmardero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmardero/subscriptions", "organizations_url": "https://api.github.com/users/fmardero/orgs", "repos_url": "https://api.github.com/users/fmardero/repos", "events_url": "https://api.github.com/users/fmardero/events{/privacy}", "received_events_url": "https://api.github.com/users/fmardero/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 875360912, "node_id": "MDU6TGFiZWw4NzUzNjA5MTI=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/convergence%20issue", "name": "convergence issue", "color": "d4c5f9", "default": false, "description": ""}, {"id": 1703850251, "node_id": "MDU6TGFiZWwxNzAzODUwMjUx", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/modelling", "name": "modelling", "color": "ae06cc", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-05-04T00:09:45Z", "updated_at": "2020-05-11T17:45:03Z", "closed_at": "2020-05-11T17:45:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nI'm tring to work with a custom `ParametricRegressionFitter` following the Gompertz low. I've tried with the waltons dataset, just to compare the results with what is reported [here](https://lifelines.readthedocs.io/en/latest/jupyter_notebooks/Piecewise%20Exponential%20Models%20and%20Creating%20Custom%20Models.html#Gompertz).  \r\n\r\n```\r\nfrom lifelines.fitters import ParametricRegressionFitter\r\nimport autograd.numpy as auto_np\r\n\r\nclass GompertzFitter(ParametricRegressionFitter):\r\n    # we tell the model what we want the names of the unknown parameters to be\r\n    _fitted_parameter_names = ['alpha_', 'beta_']\r\n\r\n    # this is the only function we need to define. It always takes two arguments:\r\n    #   params: an dictionary that unpacks the parameters you'll need in the order of _fitted_parameter_names\r\n    #   t: a vector of times that will be passed in.\r\n    #   Xs: a dictionary that maps unknown parameters to a numpy 2d array\r\n    def _cumulative_hazard(self, params, t, Xs):\r\n        alpha = auto_np.dot(Xs['alpha_'], params['alpha_'])\r\n        beta = auto_np.dot(Xs['beta_'], params['beta_'])\r\n        \r\n        return auto_np.expm1(beta * t) * alpha# / beta\r\n```\r\n\r\nThe model seems to converge but in reality it keeps all the parameters at zero, during the whole training phase. All the scores are also `NaN`.\r\n\r\n```\r\nfrom lifelines.datasets import load_waltons\r\nwaltons = load_waltons()\r\nwaltons.group = waltons.group.apply(lambda x: 0 if x == 'control' else 1)\r\nwaltons['intercept'] = 1.0\r\n#waltons\r\n\r\ngf = GompertzFitter(penalizer=1.0)\r\ncovariates = {\r\n    'alpha_': waltons.columns, #['intercept'],\r\n    'beta_': waltons.columns,\r\n}\r\n\r\ngf.fit(waltons,\r\n       'T',\r\n       event_col='E',\r\n       regressors=covariates,\r\n       timeline=range(int(waltons['T'].min()), int(waltons['T'].max())+1))\r\ngf.print_summary(2)\r\n\r\n'''\r\n                  coef  exp(coef)  se(coef)  coef lower 95%  coef upper 95%  \\\r\nalpha_ group       0.0        1.0       NaN             NaN             NaN   \r\n       intercept   0.0        1.0       NaN             NaN             NaN   \r\nbeta_  group       0.0        1.0       NaN             NaN             NaN   \r\n       intercept   0.0        1.0       NaN             NaN             NaN   \r\n\r\n                  exp(coef) lower 95%  exp(coef) upper 95%   z   p  -log2(p)  \r\nalpha_ group                      NaN                  NaN NaN NaN       NaN  \r\n       intercept                  NaN                  NaN NaN NaN       NaN  \r\nbeta_  group                      NaN                  NaN NaN NaN       NaN  \r\n       intercept                  NaN                  NaN NaN NaN       NaN \r\n'''\r\n```\r\n\r\nAm I missing something?\r\n\r\nThanks for help in advance,\r\nFabio", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1005", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1005/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1005/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1005/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1005", "id": 610899721, "node_id": "MDU6SXNzdWU2MTA4OTk3MjE=", "number": 1005, "title": "0.24.4 had an interval censoring bug - advised to upgrade to 0.24.5", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650069950, "node_id": "MDU6TGFiZWw2NTAwNjk5NTA=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/Rlang%20difference", "name": "Rlang difference", "color": "fbca04", "default": false, "description": null}, {"id": 53920840, "node_id": "MDU6TGFiZWw1MzkyMDg0MA==", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/bug", "name": "bug", "color": "8651e8", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-01T18:32:45Z", "updated_at": "2020-05-05T14:28:55Z", "closed_at": "2020-05-05T14:28:55Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Diff to fix the bug: https://github.com/CamDavidsonPilon/lifelines/pull/1004/files#r418674785\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1001", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1001/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1001/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1001/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1001", "id": 607686523, "node_id": "MDU6SXNzdWU2MDc2ODY1MjM=", "number": 1001, "title": "GammaFitter", "user": {"login": "fegarcia-bcam", "id": 60177592, "node_id": "MDQ6VXNlcjYwMTc3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/60177592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fegarcia-bcam", "html_url": "https://github.com/fegarcia-bcam", "followers_url": "https://api.github.com/users/fegarcia-bcam/followers", "following_url": "https://api.github.com/users/fegarcia-bcam/following{/other_user}", "gists_url": "https://api.github.com/users/fegarcia-bcam/gists{/gist_id}", "starred_url": "https://api.github.com/users/fegarcia-bcam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fegarcia-bcam/subscriptions", "organizations_url": "https://api.github.com/users/fegarcia-bcam/orgs", "repos_url": "https://api.github.com/users/fegarcia-bcam/repos", "events_url": "https://api.github.com/users/fegarcia-bcam/events{/privacy}", "received_events_url": "https://api.github.com/users/fegarcia-bcam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1703850251, "node_id": "MDU6TGFiZWwxNzAzODUwMjUx", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/modelling", "name": "modelling", "color": "ae06cc", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-27T16:32:08Z", "updated_at": "2020-04-27T20:30:07Z", "closed_at": "2020-04-27T19:40:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would be very grateful if you could implement a GammaFitter.\r\n\r\nFor now I am exploring the GeneralizedGammaFitter, which you say may have convergence instabilities. Perhaps, by simplifying it down, these issues are less severe?\r\n\r\nOr is there maybe a manner of enforcing `lambda` equals `sigma`? At first sight at the source code, I haven't found a simple one (for instance, an extra argument).\r\n\r\nThank you very much.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1000", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1000/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1000/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/1000/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/1000", "id": 605994407, "node_id": "MDU6SXNzdWU2MDU5OTQ0MDc=", "number": 1000, "title": "confidence intervals in KM survival analysis", "user": {"login": "Siji-chl", "id": 29812651, "node_id": "MDQ6VXNlcjI5ODEyNjUx", "avatar_url": "https://avatars1.githubusercontent.com/u/29812651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Siji-chl", "html_url": "https://github.com/Siji-chl", "followers_url": "https://api.github.com/users/Siji-chl/followers", "following_url": "https://api.github.com/users/Siji-chl/following{/other_user}", "gists_url": "https://api.github.com/users/Siji-chl/gists{/gist_id}", "starred_url": "https://api.github.com/users/Siji-chl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Siji-chl/subscriptions", "organizations_url": "https://api.github.com/users/Siji-chl/orgs", "repos_url": "https://api.github.com/users/Siji-chl/repos", "events_url": "https://api.github.com/users/Siji-chl/events{/privacy}", "received_events_url": "https://api.github.com/users/Siji-chl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650069015, "node_id": "MDU6TGFiZWw2NTAwNjkwMTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/docs", "name": "docs", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-24T02:37:24Z", "updated_at": "2020-04-25T11:55:39Z", "closed_at": "2020-04-25T11:55:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any way to calculate CI for the _S(t)_ given a specific _t_ in KM fitter\uff1f", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/995", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/995/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/995/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/995/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/995", "id": 603496017, "node_id": "MDU6SXNzdWU2MDM0OTYwMTc=", "number": 995, "title": "plot_lifetimes() / Multicenter Aids Cohort Study Example", "user": {"login": "jan-marchant", "id": 63292120, "node_id": "MDQ6VXNlcjYzMjkyMTIw", "avatar_url": "https://avatars1.githubusercontent.com/u/63292120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jan-marchant", "html_url": "https://github.com/jan-marchant", "followers_url": "https://api.github.com/users/jan-marchant/followers", "following_url": "https://api.github.com/users/jan-marchant/following{/other_user}", "gists_url": "https://api.github.com/users/jan-marchant/gists{/gist_id}", "starred_url": "https://api.github.com/users/jan-marchant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jan-marchant/subscriptions", "organizations_url": "https://api.github.com/users/jan-marchant/orgs", "repos_url": "https://api.github.com/users/jan-marchant/repos", "events_url": "https://api.github.com/users/jan-marchant/events{/privacy}", "received_events_url": "https://api.github.com/users/jan-marchant/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 53920840, "node_id": "MDU6TGFiZWw1MzkyMDg0MA==", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/bug", "name": "bug", "color": "8651e8", "default": true, "description": ""}, {"id": 926457395, "node_id": "MDU6TGFiZWw5MjY0NTczOTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/next%20minor%20release%20%F0%9F%A4%9E", "name": "next minor release \ud83e\udd1e", "color": "a3f7ad", "default": false, "description": ""}, {"id": 652446817, "node_id": "MDU6TGFiZWw2NTI0NDY4MTc=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/plotting", "name": "plotting", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-20T19:57:38Z", "updated_at": "2020-05-01T18:33:09Z", "closed_at": "2020-05-01T18:33:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there, thanks for this great resource. I think there's a small issue with the plot_lifetimes() example using Multicenter Aids Cohort Study data given here:\r\n\r\nhttps://lifelines.readthedocs.io/en/latest/Survival%20analysis%20with%20lifelines.html\r\n\r\nWith recent Pandas the example fails with a KeyError. This is because plot_lifetimes() can only properly handle dataframes with a sequential index starting at 0, and the example data starts at index 1. This doesn't error with Pandas < 1.0 which instead silently drops rows with mismatched indices (as described here: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#deprecate-loc-reindex-listlike')\r\n\r\nThe solution that works for me is to load the example data with:\r\n\r\ndf = load_multicenter_aids_cohort_study().reset_index(drop=True)\r\n\r\nbut I expect a better solution is to reset the index inside plot_lifetimes() so that whatever data is passed is handled properly.\r\n\r\nCheers,\r\nJan", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/993", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/993/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/993/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/993/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/993", "id": 600715892, "node_id": "MDU6SXNzdWU2MDA3MTU4OTI=", "number": 993, "title": "restricted cubic splines for survival analysis - CoxPHFitter", "user": {"login": "nyousefi2020", "id": 60478136, "node_id": "MDQ6VXNlcjYwNDc4MTM2", "avatar_url": "https://avatars0.githubusercontent.com/u/60478136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nyousefi2020", "html_url": "https://github.com/nyousefi2020", "followers_url": "https://api.github.com/users/nyousefi2020/followers", "following_url": "https://api.github.com/users/nyousefi2020/following{/other_user}", "gists_url": "https://api.github.com/users/nyousefi2020/gists{/gist_id}", "starred_url": "https://api.github.com/users/nyousefi2020/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nyousefi2020/subscriptions", "organizations_url": "https://api.github.com/users/nyousefi2020/orgs", "repos_url": "https://api.github.com/users/nyousefi2020/repos", "events_url": "https://api.github.com/users/nyousefi2020/events{/privacy}", "received_events_url": "https://api.github.com/users/nyousefi2020/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1703850251, "node_id": "MDU6TGFiZWwxNzAzODUwMjUx", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/modelling", "name": "modelling", "color": "ae06cc", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-16T03:13:45Z", "updated_at": "2020-05-14T01:28:08Z", "closed_at": "2020-05-14T00:25:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI have a survival analysis model in R and have been trying to replicate it in Python. I use CoxPHFitter for the analysis. I would like to use restricted cubic splines for two of the continuous variables in the model, but I suppose it is not possible in lifelines. I mean a function similar to rcs() in R package **rms** . \r\nCan you please help if there is a way of doing that in lifelines? Thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/991", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/991/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/991/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/991/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/991", "id": 600370493, "node_id": "MDU6SXNzdWU2MDAzNzA0OTM=", "number": 991, "title": "Wrong spacing when adding a risk table to a subplot", "user": {"login": "Godrebh", "id": 14179553, "node_id": "MDQ6VXNlcjE0MTc5NTUz", "avatar_url": "https://avatars1.githubusercontent.com/u/14179553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Godrebh", "html_url": "https://github.com/Godrebh", "followers_url": "https://api.github.com/users/Godrebh/followers", "following_url": "https://api.github.com/users/Godrebh/following{/other_user}", "gists_url": "https://api.github.com/users/Godrebh/gists{/gist_id}", "starred_url": "https://api.github.com/users/Godrebh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Godrebh/subscriptions", "organizations_url": "https://api.github.com/users/Godrebh/orgs", "repos_url": "https://api.github.com/users/Godrebh/repos", "events_url": "https://api.github.com/users/Godrebh/events{/privacy}", "received_events_url": "https://api.github.com/users/Godrebh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 926457395, "node_id": "MDU6TGFiZWw5MjY0NTczOTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/next%20minor%20release%20%F0%9F%A4%9E", "name": "next minor release \ud83e\udd1e", "color": "a3f7ad", "default": false, "description": ""}, {"id": 652446817, "node_id": "MDU6TGFiZWw2NTI0NDY4MTc=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/plotting", "name": "plotting", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-15T15:07:27Z", "updated_at": "2020-05-01T18:37:02Z", "closed_at": "2020-05-01T18:37:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "When plotting Kaplan Meier curves within subplots and adding the risk table, the spacing between plot and table is off and they may even overlap. This is because the y-position of the table is calculated by using the figure height, when acutally the subplot height would be necessary here.\r\n\r\nIn the function liflines.plotting.add_at_risk_counts() , I replaced the line:\r\n`ax2_ypos = -0.15 * 6.0 / fig.get_figheight() ` with\r\n```\r\nax_height = (ax.get_position().y1 - ax.get_position().y0) * fig.get_figheight() # axis height\r\nax2_ypos = -0.1 * 6.0 / ax_height\r\n```\r\nand this looks much better.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/988", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/988/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/988/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/988/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/988", "id": 598273701, "node_id": "MDU6SXNzdWU1OTgyNzM3MDE=", "number": 988, "title": "print_summary() export on console?", "user": {"login": "ioannis12", "id": 39949669, "node_id": "MDQ6VXNlcjM5OTQ5NjY5", "avatar_url": "https://avatars2.githubusercontent.com/u/39949669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ioannis12", "html_url": "https://github.com/ioannis12", "followers_url": "https://api.github.com/users/ioannis12/followers", "following_url": "https://api.github.com/users/ioannis12/following{/other_user}", "gists_url": "https://api.github.com/users/ioannis12/gists{/gist_id}", "starred_url": "https://api.github.com/users/ioannis12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ioannis12/subscriptions", "organizations_url": "https://api.github.com/users/ioannis12/orgs", "repos_url": "https://api.github.com/users/ioannis12/repos", "events_url": "https://api.github.com/users/ioannis12/events{/privacy}", "received_events_url": "https://api.github.com/users/ioannis12/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 53920840, "node_id": "MDU6TGFiZWw1MzkyMDg0MA==", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/bug", "name": "bug", "color": "8651e8", "default": true, "description": ""}, {"id": 926457395, "node_id": "MDU6TGFiZWw5MjY0NTczOTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/next%20minor%20release%20%F0%9F%A4%9E", "name": "next minor release \ud83e\udd1e", "color": "a3f7ad", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-11T14:10:41Z", "updated_at": "2020-08-22T02:54:05Z", "closed_at": "2020-08-22T02:53:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi, \r\n\r\nI first of all congrats for your work. I wonder though if there is any way to export the .print_summary() on the console. I use spyder and when I run it it says \"<IPython.core.display.HTML object>\".\r\n\r\ngreetings", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/987", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/987/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/987/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/987/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/987", "id": 591338485, "node_id": "MDU6SXNzdWU1OTEzMzg0ODU=", "number": 987, "title": "Dead links in the sidebar", "user": {"login": "NapsterInBlue", "id": 3505365, "node_id": "MDQ6VXNlcjM1MDUzNjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3505365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NapsterInBlue", "html_url": "https://github.com/NapsterInBlue", "followers_url": "https://api.github.com/users/NapsterInBlue/followers", "following_url": "https://api.github.com/users/NapsterInBlue/following{/other_user}", "gists_url": "https://api.github.com/users/NapsterInBlue/gists{/gist_id}", "starred_url": "https://api.github.com/users/NapsterInBlue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NapsterInBlue/subscriptions", "organizations_url": "https://api.github.com/users/NapsterInBlue/orgs", "repos_url": "https://api.github.com/users/NapsterInBlue/repos", "events_url": "https://api.github.com/users/NapsterInBlue/events{/privacy}", "received_events_url": "https://api.github.com/users/NapsterInBlue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-31T18:48:10Z", "updated_at": "2020-04-01T01:00:08Z", "closed_at": "2020-04-01T01:00:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there,\r\n\r\nNot sure if this a temporary bug in need of a refresh or something that needs rewriting, but the [documentation site](https://lifelines.readthedocs.io/en/latest/index.html) has several dead links in the navigation pane. e.g.:\r\n\r\n* [Time Lagged Conversion Rates](https://lifelines.readthedocs.io/en/latest/jupyter_notebooks/Modelling%20time-lagged%20conversion%20rates.html)\r\n* [Survival Regression](https://lifelines.readthedocs.io/en/latest/Survival%20Regression.html)\r\n* [Testing Proportional Hazard Assumptions](https://lifelines.readthedocs.io/en/latest/jupyter_notebooks/Proportional%20hazard%20assumption.html)\r\n\r\nThey also break when going to a prior section and hitting the \"Next ->\" prompt\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/986", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/986/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/986/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/986/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/986", "id": 590273896, "node_id": "MDU6SXNzdWU1OTAyNzM4OTY=", "number": 986, "title": "Reporting spline formulas for Cox PH fitted with splines as the baseline hazard estimation method", "user": {"login": "hansdeferrante", "id": 33229315, "node_id": "MDQ6VXNlcjMzMjI5MzE1", "avatar_url": "https://avatars1.githubusercontent.com/u/33229315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hansdeferrante", "html_url": "https://github.com/hansdeferrante", "followers_url": "https://api.github.com/users/hansdeferrante/followers", "following_url": "https://api.github.com/users/hansdeferrante/following{/other_user}", "gists_url": "https://api.github.com/users/hansdeferrante/gists{/gist_id}", "starred_url": "https://api.github.com/users/hansdeferrante/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hansdeferrante/subscriptions", "organizations_url": "https://api.github.com/users/hansdeferrante/orgs", "repos_url": "https://api.github.com/users/hansdeferrante/repos", "events_url": "https://api.github.com/users/hansdeferrante/events{/privacy}", "received_events_url": "https://api.github.com/users/hansdeferrante/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-30T13:04:51Z", "updated_at": "2020-03-30T14:52:37Z", "closed_at": "2020-03-30T14:52:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for the awesome package!\r\n\r\nWe're fitting Cox proportional hazards models and want to report the full model, including a formula for the cumulative baseline hazard. We thought using the recently implemented splines to estimate the cumulative baseline hazard would be ideal for this, but haven't been able to retrieve coefficients (whereas for the `SplineFitter` we can retrieve phi's using summary()). Is there an option to do so we are unaware of?\r\n\r\nThanks in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/982", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/982/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/982/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/982/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/982", "id": 585793667, "node_id": "MDU6SXNzdWU1ODU3OTM2Njc=", "number": 982, "title": "penality.factor", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 53920842, "node_id": "MDU6TGFiZWw1MzkyMDg0Mg==", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 926457395, "node_id": "MDU6TGFiZWw5MjY0NTczOTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/next%20minor%20release%20%F0%9F%A4%9E", "name": "next minor release \ud83e\udd1e", "color": "a3f7ad", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-22T19:29:04Z", "updated_at": "2020-05-16T18:32:56Z", "closed_at": "2020-05-16T18:32:56Z", "author_association": "OWNER", "active_lock_reason": null, "body": "https://web.stanford.edu/~hastie/glmnet/glmnet_alpha.html#lin\r\n\r\nThis enables cool things like: \r\n - grouped lasso\r\n - avoiding standardizing variables\r\n - penalizing confounders but not treatments", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/975", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/975/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/975/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/975/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/975", "id": 579379155, "node_id": "MDU6SXNzdWU1NzkzNzkxNTU=", "number": 975, "title": "Cox model with no covariates ", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 53920840, "node_id": "MDU6TGFiZWw1MzkyMDg0MA==", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/bug", "name": "bug", "color": "8651e8", "default": true, "description": ""}, {"id": 875360912, "node_id": "MDU6TGFiZWw4NzUzNjA5MTI=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/convergence%20issue", "name": "convergence issue", "color": "d4c5f9", "default": false, "description": ""}, {"id": 926457395, "node_id": "MDU6TGFiZWw5MjY0NTczOTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/next%20minor%20release%20%F0%9F%A4%9E", "name": "next minor release \ud83e\udd1e", "color": "a3f7ad", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-11T16:09:00Z", "updated_at": "2020-03-15T16:10:06Z", "closed_at": "2020-03-15T16:10:06Z", "author_association": "OWNER", "active_lock_reason": null, "body": "```\r\ndf = pd.DataFrame({\r\n    'T': [5, 3, 9, 8, 7, 4, 4, 3, 2, 5, 6, 7],\r\n    'E': [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0],\r\n})\r\n\r\ncph = CoxPHFitter()\r\ncph.fit(df, 'T', 'E')\r\ncph.print_summary()\r\ncph.predict_median(df)\r\n```\r\nfails", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/973", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/973/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/973/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/973/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/973", "id": 577805588, "node_id": "MDU6SXNzdWU1Nzc4MDU1ODg=", "number": 973, "title": "Piecewise exponential cure model with random forest probabilities", "user": {"login": "SpirosFot", "id": 58300516, "node_id": "MDQ6VXNlcjU4MzAwNTE2", "avatar_url": "https://avatars0.githubusercontent.com/u/58300516?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SpirosFot", "html_url": "https://github.com/SpirosFot", "followers_url": "https://api.github.com/users/SpirosFot/followers", "following_url": "https://api.github.com/users/SpirosFot/following{/other_user}", "gists_url": "https://api.github.com/users/SpirosFot/gists{/gist_id}", "starred_url": "https://api.github.com/users/SpirosFot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SpirosFot/subscriptions", "organizations_url": "https://api.github.com/users/SpirosFot/orgs", "repos_url": "https://api.github.com/users/SpirosFot/repos", "events_url": "https://api.github.com/users/SpirosFot/events{/privacy}", "received_events_url": "https://api.github.com/users/SpirosFot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-09T10:31:27Z", "updated_at": "2020-03-22T19:29:30Z", "closed_at": "2020-03-22T19:29:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Cameron,\r\n\r\nI would like your input in a problem I am facing.\r\nI am trying to create a cure model with cox-like survival functions where the baseline will be the cumulative hazard of a piecewise exponential model.  Normally, as you have indicated in a number of sections in lifelines, such a cure model will look like :\r\n\r\n```\r\nclass CureModel(ParametricRegressionFitter):\r\n    _scipy_fit_method = \"SLSQP\"\r\n    _scipy_fit_options = {\"ftol\": 1e-10, \"maxiter\": 200}\r\n\r\n    _fitted_parameter_names = [\"lambda_\", \"beta_\", \"rho_\"]\r\n\r\n    def _cumulative_hazard(self, params, T, Xs):\r\n        c = expit(np.dot(Xs[\"beta_\"], params[\"beta_\"]))\r\n\r\n        lambda_ = np.exp(np.dot(Xs[\"lambda_\"], params[\"lambda_\"]))\r\n        rho_ = np.exp(np.dot(Xs[\"rho_\"], params[\"rho_\"]))\r\n        sf = np.exp(-(T / lambda_) ** rho_)\r\n\r\n        return -np.log((1 - c) + c * sf)\r\n```\r\n\r\nI find myself having trouble in defining the cumulative hazard of a piecewise exponential model, given some breakpoints that I have already found as \"best\".\r\nWhat is more I want the incidence component of the cure model to be given by Random Forest probabilities and not by Logistic Regression ones. This means that I have a dataframe with Random Forest class probabilities for cure and uncure and want to use them as the incidence component, although no matter what I try I always run into problems when fitting the cure model.\r\nAny help will be appreciated!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/971", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/971/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/971/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/971/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/971", "id": 574032414, "node_id": "MDU6SXNzdWU1NzQwMzI0MTQ=", "number": 971, "title": "give \"README.md\" a refresh", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-02T14:58:50Z", "updated_at": "2020-03-06T00:24:25Z", "closed_at": "2020-03-06T00:24:25Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The current readme is a bit stale. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/970", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/970/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/970/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/970/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/970", "id": 573252100, "node_id": "MDU6SXNzdWU1NzMyNTIxMDA=", "number": 970, "title": "Predict risk scores of subjects in fitted model", "user": {"login": "jgrinaveckis", "id": 23581589, "node_id": "MDQ6VXNlcjIzNTgxNTg5", "avatar_url": "https://avatars3.githubusercontent.com/u/23581589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgrinaveckis", "html_url": "https://github.com/jgrinaveckis", "followers_url": "https://api.github.com/users/jgrinaveckis/followers", "following_url": "https://api.github.com/users/jgrinaveckis/following{/other_user}", "gists_url": "https://api.github.com/users/jgrinaveckis/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgrinaveckis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgrinaveckis/subscriptions", "organizations_url": "https://api.github.com/users/jgrinaveckis/orgs", "repos_url": "https://api.github.com/users/jgrinaveckis/repos", "events_url": "https://api.github.com/users/jgrinaveckis/events{/privacy}", "received_events_url": "https://api.github.com/users/jgrinaveckis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-29T08:34:42Z", "updated_at": "2020-03-22T19:29:27Z", "closed_at": "2020-03-22T19:29:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nIt's more a question than an issue - is it in plan to add a method which enable to predict risk scores for subjects in fitted model? (a la predict() in scikit-survival or predict_risk() in PySurvival)\r\n\r\nMany thanks for answer!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/969", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/969/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/969/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/969/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/969", "id": 573094009, "node_id": "MDU6SXNzdWU1NzMwOTQwMDk=", "number": 969, "title": "`log_x` in calls to `plot`", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1251700784, "node_id": "MDU6TGFiZWwxMjUxNzAwNzg0", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/Help%20wanted", "name": "Help wanted", "color": "ce1660", "default": false, "description": ""}, {"id": 926457395, "node_id": "MDU6TGFiZWw5MjY0NTczOTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/next%20minor%20release%20%F0%9F%A4%9E", "name": "next minor release \ud83e\udd1e", "color": "a3f7ad", "default": false, "description": ""}, {"id": 652446817, "node_id": "MDU6TGFiZWw2NTI0NDY4MTc=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/plotting", "name": "plotting", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-29T01:22:00Z", "updated_at": "2020-03-25T22:28:11Z", "closed_at": "2020-03-25T22:28:11Z", "author_association": "OWNER", "active_lock_reason": null, "body": "ex: \r\n<img width=\"330\" alt=\"Screen Shot 2020-02-28 at 8 21 42 PM\" src=\"https://user-images.githubusercontent.com/884032/75598194-f82c3700-5a67-11ea-979b-07de48d5a4e3.png\">\r\n\r\nSimilar to pandas plotting", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/967", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/967/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/967/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/967/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/967", "id": 572467956, "node_id": "MDU6SXNzdWU1NzI0Njc5NTY=", "number": 967, "title": "Ability to test multiple initial values. ", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-28T01:42:39Z", "updated_at": "2020-03-06T00:24:45Z", "closed_at": "2020-03-06T00:24:45Z", "author_association": "OWNER", "active_lock_reason": null, "body": "For problems like gamma convergence #917 and spline models #965, trying multiple initial values and returning the model with the smallest log-like. Ex: `_create_initial_point` can return a list of dicts, and there is a `for` loop atop the `minimize` that tries each one (not too different from lifetimes). The model with the lowest log-like is returned. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/966", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/966/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/966/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/966/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/966", "id": 571846786, "node_id": "MDU6SXNzdWU1NzE4NDY3ODY=", "number": 966, "title": "Using my own hazard score in the Cox model to draw survival probability curve", "user": {"login": "Lucius-lsr", "id": 46862479, "node_id": "MDQ6VXNlcjQ2ODYyNDc5", "avatar_url": "https://avatars1.githubusercontent.com/u/46862479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lucius-lsr", "html_url": "https://github.com/Lucius-lsr", "followers_url": "https://api.github.com/users/Lucius-lsr/followers", "following_url": "https://api.github.com/users/Lucius-lsr/following{/other_user}", "gists_url": "https://api.github.com/users/Lucius-lsr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lucius-lsr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lucius-lsr/subscriptions", "organizations_url": "https://api.github.com/users/Lucius-lsr/orgs", "repos_url": "https://api.github.com/users/Lucius-lsr/repos", "events_url": "https://api.github.com/users/Lucius-lsr/events{/privacy}", "received_events_url": "https://api.github.com/users/Lucius-lsr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-27T06:11:39Z", "updated_at": "2020-02-28T01:38:11Z", "closed_at": "2020-02-28T01:38:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have used my own Deep-Learning method to get the hazard score in the Cox model for each sample. And that is p(x) in h(t|x)=h(t)exp^(p(x)) . \r\n\r\nI wonder how to draw the corresponding survival probability curve for each sample x in this case. \r\n\r\nThanks a lot if you can help me.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/965", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/965/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/965/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/965/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/965", "id": 570450505, "node_id": "MDU6SXNzdWU1NzA0NTA1MDU=", "number": 965, "title": "CoxPHFitter with Splines gives increasing survival function", "user": {"login": "mathbrus", "id": 37703961, "node_id": "MDQ6VXNlcjM3NzAzOTYx", "avatar_url": "https://avatars3.githubusercontent.com/u/37703961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mathbrus", "html_url": "https://github.com/mathbrus", "followers_url": "https://api.github.com/users/mathbrus/followers", "following_url": "https://api.github.com/users/mathbrus/following{/other_user}", "gists_url": "https://api.github.com/users/mathbrus/gists{/gist_id}", "starred_url": "https://api.github.com/users/mathbrus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mathbrus/subscriptions", "organizations_url": "https://api.github.com/users/mathbrus/orgs", "repos_url": "https://api.github.com/users/mathbrus/repos", "events_url": "https://api.github.com/users/mathbrus/events{/privacy}", "received_events_url": "https://api.github.com/users/mathbrus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-25T10:02:47Z", "updated_at": "2020-03-06T00:24:25Z", "closed_at": "2020-03-06T00:24:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nWas just playing around a bit with the library. Really good work ! However, I stumbled upon a surprising result when trying to use a parametric model (cubic splines) for the baseline hazard function in the CoxPHFitter.\r\n\r\n<img width=\"573\" alt=\"Screenshot 2020-02-25 at 10 58 32\" src=\"https://user-images.githubusercontent.com/37703961/75236224-c6904300-57bd-11ea-8590-81d959097b53.png\">\r\n\r\nCode snippet : \r\n```\r\ncph_sp = CoxPHFitter(baseline_estimation_method='spline')\r\ncph_sp.fit(spline_data, duration_col='DURATION_COL')\r\nax = cph_sp.plot_covariate_groups('error_model', [0, 0.05, 0.10, 0.15, 0.20, 0.25], cmap='coolwarm', )\r\n```\r\n\r\nAny idea what might cause this behaviour ?\r\n\r\nBest, Mathieu", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/964", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/964/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/964/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/964/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/964", "id": 570390724, "node_id": "MDU6SXNzdWU1NzAzOTA3MjQ=", "number": 964, "title": "cph.fit(X_train, y_train) taking huge time to execute and also randomized optimisation ", "user": {"login": "pradipmoon", "id": 45105923, "node_id": "MDQ6VXNlcjQ1MTA1OTIz", "avatar_url": "https://avatars3.githubusercontent.com/u/45105923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pradipmoon", "html_url": "https://github.com/pradipmoon", "followers_url": "https://api.github.com/users/pradipmoon/followers", "following_url": "https://api.github.com/users/pradipmoon/following{/other_user}", "gists_url": "https://api.github.com/users/pradipmoon/gists{/gist_id}", "starred_url": "https://api.github.com/users/pradipmoon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pradipmoon/subscriptions", "organizations_url": "https://api.github.com/users/pradipmoon/orgs", "repos_url": "https://api.github.com/users/pradipmoon/repos", "events_url": "https://api.github.com/users/pradipmoon/events{/privacy}", "received_events_url": "https://api.github.com/users/pradipmoon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-25T08:19:59Z", "updated_at": "2020-02-28T19:23:36Z", "closed_at": "2020-02-28T17:04:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Cameron,\r\n\r\nI am using lifelines packages for my Genesclinical dataset and its taking huge time for executing the cph.fit(X_train, y_train) while training (it will take more than 7 days and sometimes its terminate) and randomized optimisation.\r\n\r\nAlso, let me know the penalizer parameter assumptions can we used the values of (penalizer=100.0, 200.0, 300,0, 400.0, 500.0, 600.0, 700.0, 800.0, 900.0, 1000.0) in randomized optimisation or their is some appropriate values to used.\r\n\r\nDownload the files from below link;\r\nhttps://drive.google.com/open?id=14eNqvSTvSbI3L7Aw9t2qKG-SY_B3TadU\r\n\r\nPlease suggest.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/962", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/962/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/962/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/962/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/962", "id": 569795305, "node_id": "MDU6SXNzdWU1Njk3OTUzMDU=", "number": 962, "title": "NelsonAalenFitter.plot_hazard no-longer working with lifelines 0.24.0", "user": {"login": "badge", "id": 1969339, "node_id": "MDQ6VXNlcjE5NjkzMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1969339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/badge", "html_url": "https://github.com/badge", "followers_url": "https://api.github.com/users/badge/followers", "following_url": "https://api.github.com/users/badge/following{/other_user}", "gists_url": "https://api.github.com/users/badge/gists{/gist_id}", "starred_url": "https://api.github.com/users/badge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/badge/subscriptions", "organizations_url": "https://api.github.com/users/badge/orgs", "repos_url": "https://api.github.com/users/badge/repos", "events_url": "https://api.github.com/users/badge/events{/privacy}", "received_events_url": "https://api.github.com/users/badge/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-24T11:26:28Z", "updated_at": "2020-02-24T13:03:14Z", "closed_at": "2020-02-24T13:03:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Minimal failing example:\r\n\r\n```python\r\nfrom lifelines import NelsonAalenFitter\r\nfrom lifelines.datasets import load_waltons\r\n\r\ndf = load_waltons()\r\nnaf = NelsonAalenFitter().fit(df[\"T\"], df[\"E\"])\r\nnaf.plot_hazard(bandwidth=1.0)\r\n```\r\n`bandwidth` has been added as a keyword argument to the method, but the test for its being `None` is against the  ``kwargs``:\r\n\r\n```python\r\ndef plot_hazard(self, bandwidth=None, **kwargs):\r\n        if kwargs.get(\"bandwidth\") is None:\r\n            raise ValueError(\r\n                \"Must specify a bandwidth parameter in the call to plot_hazard, e.g. `plot_hazard(bandwidth=1.0)`\"\r\n            )\r\n```\r\n\r\nAs a result, this will always fail.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/961", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/961/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/961/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/961/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/961", "id": 569537768, "node_id": "MDU6SXNzdWU1Njk1Mzc3Njg=", "number": 961, "title": "CoxTimeVaryingFitter(): Getting wrong estimates in ", "user": {"login": "lakshmiraut", "id": 47395707, "node_id": "MDQ6VXNlcjQ3Mzk1NzA3", "avatar_url": "https://avatars2.githubusercontent.com/u/47395707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lakshmiraut", "html_url": "https://github.com/lakshmiraut", "followers_url": "https://api.github.com/users/lakshmiraut/followers", "following_url": "https://api.github.com/users/lakshmiraut/following{/other_user}", "gists_url": "https://api.github.com/users/lakshmiraut/gists{/gist_id}", "starred_url": "https://api.github.com/users/lakshmiraut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lakshmiraut/subscriptions", "organizations_url": "https://api.github.com/users/lakshmiraut/orgs", "repos_url": "https://api.github.com/users/lakshmiraut/repos", "events_url": "https://api.github.com/users/lakshmiraut/events{/privacy}", "received_events_url": "https://api.github.com/users/lakshmiraut/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-23T18:34:04Z", "updated_at": "2020-05-16T18:31:47Z", "closed_at": "2020-05-16T18:31:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "My own java program and R both give same parameter estimate but lifelines CoxTimeVaryingFitter() give much different estimates.  Could it be due to normalization used in CoxTimeVaryingFitter() or something else?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/956", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/956/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/956/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/956/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/956", "id": 567164934, "node_id": "MDU6SXNzdWU1NjcxNjQ5MzQ=", "number": 956, "title": "SplineFitter documentation page rendering incorrectly", "user": {"login": "bluemoo", "id": 26662, "node_id": "MDQ6VXNlcjI2NjYy", "avatar_url": "https://avatars0.githubusercontent.com/u/26662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluemoo", "html_url": "https://github.com/bluemoo", "followers_url": "https://api.github.com/users/bluemoo/followers", "following_url": "https://api.github.com/users/bluemoo/following{/other_user}", "gists_url": "https://api.github.com/users/bluemoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluemoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluemoo/subscriptions", "organizations_url": "https://api.github.com/users/bluemoo/orgs", "repos_url": "https://api.github.com/users/bluemoo/repos", "events_url": "https://api.github.com/users/bluemoo/events{/privacy}", "received_events_url": "https://api.github.com/users/bluemoo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650069015, "node_id": "MDU6TGFiZWw2NTAwNjkwMTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/docs", "name": "docs", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-18T21:19:51Z", "updated_at": "2020-02-20T15:46:28Z", "closed_at": "2020-02-20T15:46:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The hazard function in the [SplineFitter documentation](https://lifelines.readthedocs.io/en/latest/lifelines.fitters.html#module-lifelines.fitters.spline_fitter) is rendering as follows:\r\n`\\[H(t) = \\exp{\\phi_0 + \\phi_1\\log{t} + \\sum_{j=2}^N \\phi_j v_j(\\log{t})\\]`\r\n\r\nIt does not appear to be rendering as a latex equation and should not have the various escape characters.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/955", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/955/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/955/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/955/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/955", "id": 567161394, "node_id": "MDU6SXNzdWU1NjcxNjEzOTQ=", "number": 955, "title": "The cumulative density parameter is misspelled in the documentation", "user": {"login": "bluemoo", "id": 26662, "node_id": "MDQ6VXNlcjI2NjYy", "avatar_url": "https://avatars0.githubusercontent.com/u/26662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluemoo", "html_url": "https://github.com/bluemoo", "followers_url": "https://api.github.com/users/bluemoo/followers", "following_url": "https://api.github.com/users/bluemoo/following{/other_user}", "gists_url": "https://api.github.com/users/bluemoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluemoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluemoo/subscriptions", "organizations_url": "https://api.github.com/users/bluemoo/orgs", "repos_url": "https://api.github.com/users/bluemoo/repos", "events_url": "https://api.github.com/users/bluemoo/events{/privacy}", "received_events_url": "https://api.github.com/users/bluemoo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650069015, "node_id": "MDU6TGFiZWw2NTAwNjkwMTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/docs", "name": "docs", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-18T21:12:55Z", "updated_at": "2020-02-20T15:46:28Z", "closed_at": "2020-02-20T15:46:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It's spelled as 'cumumlative_density_' (extra 'm') in the Attributes sections of various fitter docstrings.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/953", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/953/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/953/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/953/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/953", "id": 566277133, "node_id": "MDU6SXNzdWU1NjYyNzcxMzM=", "number": 953, "title": "Predictions returning dataframe vs series", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 926457395, "node_id": "MDU6TGFiZWw5MjY0NTczOTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/next%20minor%20release%20%F0%9F%A4%9E", "name": "next minor release \ud83e\udd1e", "color": "a3f7ad", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-17T12:47:48Z", "updated_at": "2020-02-20T15:55:51Z", "closed_at": "2020-02-20T15:55:51Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Why do methods like `predict_expectation` return a DataFrame when a Series is simpler (no redundant column, expected shape)?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/946", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/946/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/946/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/946/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/946", "id": 560976174, "node_id": "MDU6SXNzdWU1NjA5NzYxNzQ=", "number": 946, "title": "Implementation of Cox' time-varying phm, centered or not?", "user": {"login": "LordFinzenz", "id": 43883820, "node_id": "MDQ6VXNlcjQzODgzODIw", "avatar_url": "https://avatars1.githubusercontent.com/u/43883820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LordFinzenz", "html_url": "https://github.com/LordFinzenz", "followers_url": "https://api.github.com/users/LordFinzenz/followers", "following_url": "https://api.github.com/users/LordFinzenz/following{/other_user}", "gists_url": "https://api.github.com/users/LordFinzenz/gists{/gist_id}", "starred_url": "https://api.github.com/users/LordFinzenz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LordFinzenz/subscriptions", "organizations_url": "https://api.github.com/users/LordFinzenz/orgs", "repos_url": "https://api.github.com/users/LordFinzenz/repos", "events_url": "https://api.github.com/users/LordFinzenz/events{/privacy}", "received_events_url": "https://api.github.com/users/LordFinzenz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650069015, "node_id": "MDU6TGFiZWw2NTAwNjkwMTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/docs", "name": "docs", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-06T12:18:27Z", "updated_at": "2020-02-20T15:46:28Z", "closed_at": "2020-02-20T15:46:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://lifelines.readthedocs.io/en/latest/Time%20varying%20survival%20regression.html says that the model is using _x_i(t) - mean(x_i(t))_, whereas the API reference (https://lifelines.readthedocs.io/en/latest/lifelines.fitters.html#lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter) simply gives _x_i(t) * ..._ - which one is true?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/940", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/940/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/940/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/940/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/940", "id": 556630714, "node_id": "MDU6SXNzdWU1NTY2MzA3MTQ=", "number": 940, "title": "Cumulative plot with show_censors option", "user": {"login": "tsjshg", "id": 359305, "node_id": "MDQ6VXNlcjM1OTMwNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/359305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tsjshg", "html_url": "https://github.com/tsjshg", "followers_url": "https://api.github.com/users/tsjshg/followers", "following_url": "https://api.github.com/users/tsjshg/following{/other_user}", "gists_url": "https://api.github.com/users/tsjshg/gists{/gist_id}", "starred_url": "https://api.github.com/users/tsjshg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tsjshg/subscriptions", "organizations_url": "https://api.github.com/users/tsjshg/orgs", "repos_url": "https://api.github.com/users/tsjshg/repos", "events_url": "https://api.github.com/users/tsjshg/events{/privacy}", "received_events_url": "https://api.github.com/users/tsjshg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-29T04:37:41Z", "updated_at": "2020-01-31T01:53:42Z", "closed_at": "2020-01-31T01:53:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I use KaplanMeierFitter.plot_cumulative_density with show_censors=True, I got AttributeError: 'PlotEstimateConfig' object has no attribute 'predict_at_times'.\r\n\r\nI modified the end of plotting.py from \r\n```python\r\n        else:\r\n            self.estimate_ = estimate\r\n            self.confidence_interval_ = kwargs.pop(\"confidence_intervals\")\r\n```\r\nto\r\n```python\r\n        else:\r\n            self.estimate_ = estimate\r\n            self.confidence_interval_ = kwargs.pop(\"confidence_intervals\")\r\n            self.predict_at_times = cls.cumulative_density_at_times\r\n```\r\nI successfully got my cumulative plot. But I think the code should be changed more correct way.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/938", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/938/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/938/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/938/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/938", "id": 555867890, "node_id": "MDU6SXNzdWU1NTU4Njc4OTA=", "number": 938, "title": "competing risks", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-27T22:18:58Z", "updated_at": "2020-01-28T01:33:47Z", "closed_at": "2020-01-28T01:33:47Z", "author_association": "OWNER", "active_lock_reason": null, "body": "https://doi.org/10.1002/sim.8471", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/937", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/937/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/937/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/937/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/937", "id": 555688630, "node_id": "MDU6SXNzdWU1NTU2ODg2MzA=", "number": 937, "title": "Column labels disappear for predict_survival_function", "user": {"login": "david-bowman", "id": 11393946, "node_id": "MDQ6VXNlcjExMzkzOTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/11393946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/david-bowman", "html_url": "https://github.com/david-bowman", "followers_url": "https://api.github.com/users/david-bowman/followers", "following_url": "https://api.github.com/users/david-bowman/following{/other_user}", "gists_url": "https://api.github.com/users/david-bowman/gists{/gist_id}", "starred_url": "https://api.github.com/users/david-bowman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/david-bowman/subscriptions", "organizations_url": "https://api.github.com/users/david-bowman/orgs", "repos_url": "https://api.github.com/users/david-bowman/repos", "events_url": "https://api.github.com/users/david-bowman/events{/privacy}", "received_events_url": "https://api.github.com/users/david-bowman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 804108039, "node_id": "MDU6TGFiZWw4MDQxMDgwMzk=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/better%20error%20handling", "name": "better error handling", "color": "1a5d89", "default": false, "description": null}, {"id": 926457395, "node_id": "MDU6TGFiZWw5MjY0NTczOTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/next%20minor%20release%20%F0%9F%A4%9E", "name": "next minor release \ud83e\udd1e", "color": "a3f7ad", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-27T16:28:30Z", "updated_at": "2020-03-06T00:12:02Z", "closed_at": "2020-03-06T00:12:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm using your package for some survival analysis of customer accounts. When I try to fit predictions for all accounts I lose the account number (which is my index) tagging for each column. For instance:\r\n\r\ncphbaseline = CoxPHFitter()   ## Instantiate the class to create a cph object\r\ncphbaseline.fit(df, 'Days_Ahead', event_col='Loss', show_progress=True, step_size = 0.3)   ## Fit the data to train the model\r\n\r\nThis code retains the account numbers as the column names:\r\ncphbaseline.predict_survival_function(df.iloc[1:10]).head()\r\n\r\nWhereas this defaults to numbers 0-99 for the column names:\r\ncphbaseline.predict_survival_function(df.iloc[1:100]).head()\r\n\r\nI'm pretty sure this has changed recently, looks like there is some cut off for carrying the labels through? I'm a bit uncomfortable tagging the columns by assuming they are in the same order as the original data.\r\n\r\nThanks,\r\n\r\nDavid", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/935", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/935/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/935/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/935/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/935", "id": 554531273, "node_id": "MDU6SXNzdWU1NTQ1MzEyNzM=", "number": 935, "title": "different penalizer interpretation in Cox vs Parametric models", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 926457395, "node_id": "MDU6TGFiZWw5MjY0NTczOTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/next%20minor%20release%20%F0%9F%A4%9E", "name": "next minor release \ud83e\udd1e", "color": "a3f7ad", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-24T03:53:58Z", "updated_at": "2020-02-20T15:46:27Z", "closed_at": "2020-02-20T15:46:27Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The function we maximize for a parametric model is:\r\n```\r\nll\u207a(t, e, mu) = 1/N * ll(t, e, mu) + \u019b||mu||\r\n```\r\nThis means that \u019b will scale with the number of samples. \r\n\r\nHowever, in the cox model, we use \r\n```\r\nll\u207a(t, e, mu) = ll(t, e, mu) + \u019b||mu||\r\n```\r\n\r\nand \u019b does not scale. \r\n\r\nIn practice, this means that when varying the penalizer in a Cox model, it's effect depends on the number of samples being trained on. This probably has strange interactions with cross-validation. \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/933", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/933/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/933/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/933/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/933", "id": 553231649, "node_id": "MDU6SXNzdWU1NTMyMzE2NDk=", "number": 933, "title": "Inconsistent ValueError raised using KaplanMeierFitter.fit with input of different number of elements", "user": {"login": "CielAl", "id": 10933828, "node_id": "MDQ6VXNlcjEwOTMzODI4", "avatar_url": "https://avatars2.githubusercontent.com/u/10933828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CielAl", "html_url": "https://github.com/CielAl", "followers_url": "https://api.github.com/users/CielAl/followers", "following_url": "https://api.github.com/users/CielAl/following{/other_user}", "gists_url": "https://api.github.com/users/CielAl/gists{/gist_id}", "starred_url": "https://api.github.com/users/CielAl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CielAl/subscriptions", "organizations_url": "https://api.github.com/users/CielAl/orgs", "repos_url": "https://api.github.com/users/CielAl/repos", "events_url": "https://api.github.com/users/CielAl/events{/privacy}", "received_events_url": "https://api.github.com/users/CielAl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-22T00:20:00Z", "updated_at": "2020-02-19T13:45:32Z", "closed_at": "2020-02-19T13:45:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "It appears that while using \r\n\r\n> kmf.fit(T, event_observed=E) # kmf as a KaplanMeierFitter instance\r\n\r\nThe dtype of each element in E and T(no matter whether it is a np.ndarray or pd.Series) is guarded by\r\nline:979 in lifelines\\utils\\__init__.py (pass_for_numeric_dtypes_or_raise_array(x)), such that a value error will be raised if the dtype is object.\r\n\r\n> raise ValueError(\"Values must be numeric: no strings, datetimes, objects, etc.\")\r\n\r\nHowever, this clause only works if T and E have only one element. This creates inconsistency when the input data is not explicitly cast, the exception is only raised when the selection of a certain group from the input data yields series/array of a single element, e.g. T1 = T[some_condition], T2 = T[~some_condition].\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/931", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/931/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/931/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/931/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/931", "id": 553159672, "node_id": "MDU6SXNzdWU1NTMxNTk2NzI=", "number": 931, "title": "Parametric regression models may have been misreporting results pre-24.0", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650069950, "node_id": "MDU6TGFiZWw2NTAwNjk5NTA=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/Rlang%20difference", "name": "Rlang difference", "color": "fbca04", "default": false, "description": null}, {"id": 53920840, "node_id": "MDU6TGFiZWw1MzkyMDg0MA==", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/bug", "name": "bug", "color": "8651e8", "default": true, "description": ""}, {"id": 926457395, "node_id": "MDU6TGFiZWw5MjY0NTczOTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/next%20minor%20release%20%F0%9F%A4%9E", "name": "next minor release \ud83e\udd1e", "color": "a3f7ad", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-21T21:58:27Z", "updated_at": "2020-08-22T02:55:37Z", "closed_at": "2020-01-28T13:52:06Z", "author_association": "OWNER", "active_lock_reason": null, "body": "TLDR: if you have been using a __custom__ parametric regression model, or `GeneralizedGammaRegressionFitter`, you should update your code ASAP. Users of parametric AFT models are fine. \r\n\r\n----\r\nIt was discovered today that the parameters estimated in a parametric regression model could be not associated to the correct label (i.e. variable name). In practice, when a user hit `print_summary`, they would be displayed with the  correct estimates but with the wrong label beside it. This problem would also extend to any prediction or plotting methods. \r\n\r\nThe root problem was a reordering of a dictionary in the autograd `flatten` function. Ex:\r\n```\r\nfrom autograd.misc import flatten\r\nd = {'b': 1., 'a': 2., 'c': 0.}\r\narray, unflatten = flatten(d)\r\nprint(array)\r\n# ordered like a, b, c\r\n```\r\n\r\nlifelines _should_ have performed an `unflatten` on the result to recover the original ordering, but it didn't. \r\n\r\nIt was first discovered in the documentation's example of the three parameter Cure model (of which there are no tests, since it was an example). Thankfully, almost all lifelines _implemented_ parametric regression fitters have tests against other survival libraries, and they are fine. However, `GeneralizedGammaRegressionFitter` does not have tests against other libraries, and could be reporting incorrect values. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/930", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/930/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/930/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/930/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/930", "id": 552826974, "node_id": "MDU6SXNzdWU1NTI4MjY5NzQ=", "number": 930, "title": "Generic ParametricUnivariate mixture cure model ", "user": {"login": "bluemoo", "id": 26662, "node_id": "MDQ6VXNlcjI2NjYy", "avatar_url": "https://avatars0.githubusercontent.com/u/26662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluemoo", "html_url": "https://github.com/bluemoo", "followers_url": "https://api.github.com/users/bluemoo/followers", "following_url": "https://api.github.com/users/bluemoo/following{/other_user}", "gists_url": "https://api.github.com/users/bluemoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluemoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluemoo/subscriptions", "organizations_url": "https://api.github.com/users/bluemoo/orgs", "repos_url": "https://api.github.com/users/bluemoo/repos", "events_url": "https://api.github.com/users/bluemoo/events{/privacy}", "received_events_url": "https://api.github.com/users/bluemoo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 53920842, "node_id": "MDU6TGFiZWw1MzkyMDg0Mg==", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1703850251, "node_id": "MDU6TGFiZWwxNzAzODUwMjUx", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/modelling", "name": "modelling", "color": "ae06cc", "default": false, "description": ""}, {"id": 926457395, "node_id": "MDU6TGFiZWw5MjY0NTczOTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/next%20minor%20release%20%F0%9F%A4%9E", "name": "next minor release \ud83e\udd1e", "color": "a3f7ad", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-01-21T11:48:01Z", "updated_at": "2020-02-19T05:34:50Z", "closed_at": "2020-02-19T05:34:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Would it be of interest to have a ParametricUnivariateFitter that adds a 'cure' component to a specified non-cure model? This could operate in a manner similar to the flexsurvreg R package - wrapping the functions of some baseline fitter. I suggest it because I've found such a thing useful in my own work, when selecting which underlying model to use.\r\n\r\nHere is a quickly put together example of what I mean. If there is interest, I'd be willing to get into a better shape, with guidance. \r\n\r\n```\r\nclass  MixtureCureModel(ParametricUnivariateFitter):\r\n        def __init__(self, base_fitter, *args, **kwargs):\r\n            self._base_fitter = base_fitter\r\n            self._fitted_parameter_names = [\"theta__\"] + base_fitter._fitted_parameter_names\r\n            self._bounds = [(0.0, 1.0)] + base_fitter._bounds\r\n            super().__init__(*args, **kwargs)\r\n\r\n        def _cumulative_hazard(self, params, times):\r\n            theta__, lambda_, k_ = params\r\n            sf = self._base_fitter._survival_function(params[1:], times)\r\n            return -np.log(theta__ + (1 - theta__)*sf)\r\n\r\n\r\n        def _create_initial_point(self, Ts, E, *args):\r\n            self._base_fitter._censoring_type = self._censoring_type\r\n            base_point = self._base_fitter._create_initial_point(Ts, E, *args)\r\n            return np.array([.5] + list(base_point))\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/929", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/929/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/929/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/929/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/929", "id": 552753860, "node_id": "MDU6SXNzdWU1NTI3NTM4NjA=", "number": 929, "title": "ci_legend=False not working", "user": {"login": "Esculab", "id": 60133399, "node_id": "MDQ6VXNlcjYwMTMzMzk5", "avatar_url": "https://avatars0.githubusercontent.com/u/60133399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Esculab", "html_url": "https://github.com/Esculab", "followers_url": "https://api.github.com/users/Esculab/followers", "following_url": "https://api.github.com/users/Esculab/following{/other_user}", "gists_url": "https://api.github.com/users/Esculab/gists{/gist_id}", "starred_url": "https://api.github.com/users/Esculab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Esculab/subscriptions", "organizations_url": "https://api.github.com/users/Esculab/orgs", "repos_url": "https://api.github.com/users/Esculab/repos", "events_url": "https://api.github.com/users/Esculab/events{/privacy}", "received_events_url": "https://api.github.com/users/Esculab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-21T09:40:17Z", "updated_at": "2020-01-21T20:14:22Z", "closed_at": "2020-01-21T20:14:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n \r\nI have noticed the ci_legend flag does not work, as the legend keeps including \"_lower_95\" and \"_upper_95\" labels.\r\n \r\nThere was already a similar issue that has been solved (#267) .\r\n\r\nI am using the version 23.7 of lifelines.\r\n\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/928", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/928/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/928/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/928/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/928", "id": 552752281, "node_id": "MDU6SXNzdWU1NTI3NTIyODE=", "number": 928, "title": "ci_legend=False not working", "user": {"login": "Esculab", "id": 60133399, "node_id": "MDQ6VXNlcjYwMTMzMzk5", "avatar_url": "https://avatars0.githubusercontent.com/u/60133399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Esculab", "html_url": "https://github.com/Esculab", "followers_url": "https://api.github.com/users/Esculab/followers", "following_url": "https://api.github.com/users/Esculab/following{/other_user}", "gists_url": "https://api.github.com/users/Esculab/gists{/gist_id}", "starred_url": "https://api.github.com/users/Esculab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Esculab/subscriptions", "organizations_url": "https://api.github.com/users/Esculab/orgs", "repos_url": "https://api.github.com/users/Esculab/repos", "events_url": "https://api.github.com/users/Esculab/events{/privacy}", "received_events_url": "https://api.github.com/users/Esculab/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1251700784, "node_id": "MDU6TGFiZWwxMjUxNzAwNzg0", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/Help%20wanted", "name": "Help wanted", "color": "ce1660", "default": false, "description": ""}, {"id": 926457395, "node_id": "MDU6TGFiZWw5MjY0NTczOTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/next%20minor%20release%20%F0%9F%A4%9E", "name": "next minor release \ud83e\udd1e", "color": "a3f7ad", "default": false, "description": ""}, {"id": 652446817, "node_id": "MDU6TGFiZWw2NTI0NDY4MTc=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/plotting", "name": "plotting", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-21T09:39:40Z", "updated_at": "2020-02-20T15:46:28Z", "closed_at": "2020-02-20T15:46:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n \r\nI have noticed the ci_legend flag does not work, as the legend keeps including \"_lower_95\" and \"_upper_95\" labels.\r\n \r\nThere was already a similar issue that has been solved (#267) .\r\n\r\nI am using the version 23.7 of lifelines.\r\n\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/925", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/925/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/925/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/925/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/925", "id": 549391946, "node_id": "MDU6SXNzdWU1NDkzOTE5NDY=", "number": 925, "title": "Syntax Error: lifelines/__init__.py", "user": {"login": "Kunalgroy", "id": 8849830, "node_id": "MDQ6VXNlcjg4NDk4MzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/8849830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kunalgroy", "html_url": "https://github.com/Kunalgroy", "followers_url": "https://api.github.com/users/Kunalgroy/followers", "following_url": "https://api.github.com/users/Kunalgroy/following{/other_user}", "gists_url": "https://api.github.com/users/Kunalgroy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kunalgroy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kunalgroy/subscriptions", "organizations_url": "https://api.github.com/users/Kunalgroy/orgs", "repos_url": "https://api.github.com/users/Kunalgroy/repos", "events_url": "https://api.github.com/users/Kunalgroy/events{/privacy}", "received_events_url": "https://api.github.com/users/Kunalgroy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-14T07:47:19Z", "updated_at": "2020-01-15T03:19:35Z", "closed_at": "2020-01-14T22:40:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "python version: 3.5.7\r\nlifelines version: 0.23.6\r\n\r\n\r\n`\r\n>>> import lifelines\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.5/site-packages/lifelines/__init__.py\", line 28\r\n    __all__: List[str] = [\r\n                ^\r\nSyntaxError: invalid syntax\r\n\r\n`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/922", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/922/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/922/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/922/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/922", "id": 548179173, "node_id": "MDU6SXNzdWU1NDgxNzkxNzM=", "number": 922, "title": "Pandas 1.0 release", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-10T16:41:02Z", "updated_at": "2020-02-20T15:46:27Z", "closed_at": "2020-02-20T15:46:27Z", "author_association": "OWNER", "active_lock_reason": null, "body": " - [x] does test suite pass? \r\n - [x] should I bump minimum pandas release?\r\n - [x] drop py35?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/920", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/920/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/920/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/920/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/920", "id": 546019016, "node_id": "MDU6SXNzdWU1NDYwMTkwMTY=", "number": 920, "title": "Method for parameter estimation and initialization", "user": {"login": "zisu-mis", "id": 52472002, "node_id": "MDQ6VXNlcjUyNDcyMDAy", "avatar_url": "https://avatars3.githubusercontent.com/u/52472002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zisu-mis", "html_url": "https://github.com/zisu-mis", "followers_url": "https://api.github.com/users/zisu-mis/followers", "following_url": "https://api.github.com/users/zisu-mis/following{/other_user}", "gists_url": "https://api.github.com/users/zisu-mis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zisu-mis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zisu-mis/subscriptions", "organizations_url": "https://api.github.com/users/zisu-mis/orgs", "repos_url": "https://api.github.com/users/zisu-mis/repos", "events_url": "https://api.github.com/users/zisu-mis/events{/privacy}", "received_events_url": "https://api.github.com/users/zisu-mis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-07T01:01:22Z", "updated_at": "2020-01-07T04:34:29Z", "closed_at": "2020-01-07T04:34:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, first of all, I wish to thank you for your contribution. The package is really awesome!\r\n\r\nHowever, I do have some questions regarding how ```lifelines``` estimates and initializes parameters. I assume that it first calculates the likelihood, and then applies autograd for optimization as it is required to import autograd at the beginning.  I am not fully aware of how the autograd exactly works like which optimization method or what learning rate it is using.\r\n\r\nAnother issue is about how ```lifelines``` initializes model parameters. These days I am customizing parametric baseline hazards to model survival data. However, these parametric specifications require parameters to be positive (e.g., Weibull function) and if the parameters are initialized as zeros, then the log-likelihood would be ill-posed. It is doable if we use some transformation on parameters, such as exponential function. However, the optimization quickly fails as some coefficients grow exponentially.  I am wondering if there is a certain way to impose the range of parameters and also initialize it to be some small positive value.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/918", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/918/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/918/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/918/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/918", "id": 545484458, "node_id": "MDU6SXNzdWU1NDU0ODQ0NTg=", "number": 918, "title": "Did you compare your code performance vs pure machine learning approach", "user": {"login": "Sandy4321", "id": 11426119, "node_id": "MDQ6VXNlcjExNDI2MTE5", "avatar_url": "https://avatars0.githubusercontent.com/u/11426119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sandy4321", "html_url": "https://github.com/Sandy4321", "followers_url": "https://api.github.com/users/Sandy4321/followers", "following_url": "https://api.github.com/users/Sandy4321/following{/other_user}", "gists_url": "https://api.github.com/users/Sandy4321/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sandy4321/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sandy4321/subscriptions", "organizations_url": "https://api.github.com/users/Sandy4321/orgs", "repos_url": "https://api.github.com/users/Sandy4321/repos", "events_url": "https://api.github.com/users/Sandy4321/events{/privacy}", "received_events_url": "https://api.github.com/users/Sandy4321/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-05T23:50:54Z", "updated_at": "2020-01-23T21:48:54Z", "closed_at": "2020-01-23T20:00:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Did you compare your code performance vs pure machine learning approach", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/917", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/917/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/917/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/917/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/917", "id": 545452151, "node_id": "MDU6SXNzdWU1NDU0NTIxNTE=", "number": 917, "title": "GeneralizedGammaFitter is having big convergence problems", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 875360912, "node_id": "MDU6TGFiZWw4NzUzNjA5MTI=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/convergence%20issue", "name": "convergence issue", "color": "d4c5f9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-05T18:45:11Z", "updated_at": "2020-02-20T15:46:28Z", "closed_at": "2020-02-20T15:46:28Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Recently tests started failing locally. I think I need to bite the bullet and try a reparameterization. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/915", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/915/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/915/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/915/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/915", "id": 544605857, "node_id": "MDU6SXNzdWU1NDQ2MDU4NTc=", "number": 915, "title": "Spline models", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 53920842, "node_id": "MDU6TGFiZWw1MzkyMDg0Mg==", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1703850251, "node_id": "MDU6TGFiZWwxNzAzODUwMjUx", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/modelling", "name": "modelling", "color": "ae06cc", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-02T14:42:00Z", "updated_at": "2020-02-20T15:46:28Z", "closed_at": "2020-02-20T15:46:28Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Following the paper by Royston and Parmar `Flexible parametric proportional-hazards and proportional-odds\r\nmodels for censored survival data, with application to prognostic modelling and estimation of treatment effects`, the simplest spline model was implemented in the `examples/` folder. \r\n\r\n- [x] decide if I want to incorporate this logic into existing models (ex: `CoxPHFitter` gets a `parametric_baseline` option?), or keep separate `CoxPHSplineFitter`)\r\n- [ ] Implement a Spline Proportional Odds model? Note that these models are _not_ AFT models. \r\n- [x] Add documentation about using spline models to fix proportional hazard problems. \r\n- [x] implement univariate spline model ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/913", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/913/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/913/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/913/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/913", "id": 542668430, "node_id": "MDU6SXNzdWU1NDI2Njg0MzA=", "number": 913, "title": "Why the use of year**2 in US Presidential Example", "user": {"login": "ahlusar1989", "id": 7760225, "node_id": "MDQ6VXNlcjc3NjAyMjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7760225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahlusar1989", "html_url": "https://github.com/ahlusar1989", "followers_url": "https://api.github.com/users/ahlusar1989/followers", "following_url": "https://api.github.com/users/ahlusar1989/following{/other_user}", "gists_url": "https://api.github.com/users/ahlusar1989/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahlusar1989/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahlusar1989/subscriptions", "organizations_url": "https://api.github.com/users/ahlusar1989/orgs", "repos_url": "https://api.github.com/users/ahlusar1989/repos", "events_url": "https://api.github.com/users/ahlusar1989/events{/privacy}", "received_events_url": "https://api.github.com/users/ahlusar1989/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-26T20:55:38Z", "updated_at": "2020-01-08T22:13:00Z", "closed_at": "2020-01-08T22:13:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Good Afternoon,\r\n\r\nI was reviewing some of the results of the various parametric and non-parametric results and was puzzling about the use of the the year and year**2 covariates. \r\n\r\nAt this point, I have exhausted my understanding of the hazard function and time-varying regression and was wondering if I could punt this over to you for an explanation \ud83d\ude04. I was going to post this on cross-validated but felt like this medium would be more appropriate given the specificity of the question.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/911", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/911/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/911/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/911/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/911", "id": 541450809, "node_id": "MDU6SXNzdWU1NDE0NTA4MDk=", "number": 911, "title": "Regarding Deprecation of left_censorship_cdf_plot", "user": {"login": "ahlusar1989", "id": 7760225, "node_id": "MDQ6VXNlcjc3NjAyMjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7760225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahlusar1989", "html_url": "https://github.com/ahlusar1989", "followers_url": "https://api.github.com/users/ahlusar1989/followers", "following_url": "https://api.github.com/users/ahlusar1989/following{/other_user}", "gists_url": "https://api.github.com/users/ahlusar1989/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahlusar1989/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahlusar1989/subscriptions", "organizations_url": "https://api.github.com/users/ahlusar1989/orgs", "repos_url": "https://api.github.com/users/ahlusar1989/repos", "events_url": "https://api.github.com/users/ahlusar1989/events{/privacy}", "received_events_url": "https://api.github.com/users/ahlusar1989/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650069015, "node_id": "MDU6TGFiZWw2NTAwNjkwMTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/docs", "name": "docs", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-22T13:27:15Z", "updated_at": "2020-01-05T22:13:02Z", "closed_at": "2020-01-05T22:13:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Good Morning,\r\n\r\nI welcome feedback on on how to create a similar plot as provided [here](https://github.com/CamDavidsonPilon/lifelines/blob/master/examples/left_censoring_experiments.py).\r\n\r\nSincerely,\r\nSaran", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/910", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/910/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/910/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/910/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/910", "id": 541330562, "node_id": "MDU6SXNzdWU1NDEzMzA1NjI=", "number": 910, "title": "Regarding Long Format", "user": {"login": "ahlusar1989", "id": 7760225, "node_id": "MDQ6VXNlcjc3NjAyMjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7760225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahlusar1989", "html_url": "https://github.com/ahlusar1989", "followers_url": "https://api.github.com/users/ahlusar1989/followers", "following_url": "https://api.github.com/users/ahlusar1989/following{/other_user}", "gists_url": "https://api.github.com/users/ahlusar1989/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahlusar1989/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahlusar1989/subscriptions", "organizations_url": "https://api.github.com/users/ahlusar1989/orgs", "repos_url": "https://api.github.com/users/ahlusar1989/repos", "events_url": "https://api.github.com/users/ahlusar1989/events{/privacy}", "received_events_url": "https://api.github.com/users/ahlusar1989/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-21T14:07:24Z", "updated_at": "2019-12-23T19:26:27Z", "closed_at": "2019-12-23T19:26:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Good Morning,\r\n\r\nRegarding this [line](https://github.com/CamDavidsonPilon/lifelines/blob/master/lifelines/utils/__init__.py#L1486):\r\n\r\n- I am curious as to why this value is chosen?\r\n\r\nSincerely,\r\nSaran", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/908", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/908/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/908/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/908/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/908", "id": 540609520, "node_id": "MDU6SXNzdWU1NDA2MDk1MjA=", "number": 908, "title": "lognormal AFT fitter comment", "user": {"login": "zxp567", "id": 26178407, "node_id": "MDQ6VXNlcjI2MTc4NDA3", "avatar_url": "https://avatars1.githubusercontent.com/u/26178407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zxp567", "html_url": "https://github.com/zxp567", "followers_url": "https://api.github.com/users/zxp567/followers", "following_url": "https://api.github.com/users/zxp567/following{/other_user}", "gists_url": "https://api.github.com/users/zxp567/gists{/gist_id}", "starred_url": "https://api.github.com/users/zxp567/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zxp567/subscriptions", "organizations_url": "https://api.github.com/users/zxp567/orgs", "repos_url": "https://api.github.com/users/zxp567/repos", "events_url": "https://api.github.com/users/zxp567/events{/privacy}", "received_events_url": "https://api.github.com/users/zxp567/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650069015, "node_id": "MDU6TGFiZWw2NTAwNjkwMTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/docs", "name": "docs", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-19T22:23:30Z", "updated_at": "2020-01-07T14:16:21Z", "closed_at": "2020-01-07T14:16:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the LogNormalAFTFitter code, the comment is as follows:\r\n\"This class implements a Log-Normal AFT model. The model has parameterized\r\n    form, with :math:`\\mu(x) = \\exp\\left(a_0 + a_1x_1 + ... + a_n x_n \\right)`,\r\n    and optionally, :math:`\\sigma(y) = \\exp\\left(b_0 + b_1 y_1 + ... + b_m y_m \\right)`,\r\n    The cumulative hazard rate is\r\n    .. math:: H(t; x, y) = -\\log\\left(1 - \\Phi\\left(\\frac{\\log(T) - \\mu(x)}{\\sigma(y)}\\right)\\right)\r\n \"\r\nI think there should be no \"\\exp\" in the \"\\mu(x)\"'s formula, right? The code seems to be correct though.\r\n\r\nThanks.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/907", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/907/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/907/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/907/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/907", "id": 539898775, "node_id": "MDU6SXNzdWU1Mzk4OTg3NzU=", "number": 907, "title": "TimeVaryingCoxModel", "user": {"login": "ganzheng85", "id": 38122020, "node_id": "MDQ6VXNlcjM4MTIyMDIw", "avatar_url": "https://avatars3.githubusercontent.com/u/38122020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ganzheng85", "html_url": "https://github.com/ganzheng85", "followers_url": "https://api.github.com/users/ganzheng85/followers", "following_url": "https://api.github.com/users/ganzheng85/following{/other_user}", "gists_url": "https://api.github.com/users/ganzheng85/gists{/gist_id}", "starred_url": "https://api.github.com/users/ganzheng85/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ganzheng85/subscriptions", "organizations_url": "https://api.github.com/users/ganzheng85/orgs", "repos_url": "https://api.github.com/users/ganzheng85/repos", "events_url": "https://api.github.com/users/ganzheng85/events{/privacy}", "received_events_url": "https://api.github.com/users/ganzheng85/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-18T20:11:30Z", "updated_at": "2019-12-18T20:26:40Z", "closed_at": "2019-12-18T20:14:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can it provide Concordance Rate for the fitting result?\r\n\r\nThanks. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/904", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/904/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/904/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/904/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/904", "id": 538473638, "node_id": "MDU6SXNzdWU1Mzg0NzM2Mzg=", "number": 904, "title": "document new `ci_no_lines`", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650069015, "node_id": "MDU6TGFiZWw2NTAwNjkwMTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/docs", "name": "docs", "color": "b60205", "default": false, "description": null}, {"id": 652446817, "node_id": "MDU6TGFiZWw2NTI0NDY4MTc=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/plotting", "name": "plotting", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-16T15:13:32Z", "updated_at": "2020-01-07T14:16:32Z", "closed_at": "2020-01-07T14:16:32Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/903", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/903/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/903/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/903/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/903", "id": 538290348, "node_id": "MDU6SXNzdWU1MzgyOTAzNDg=", "number": 903, "title": "Error predict_survival_function(): unexpected keyword argument 'conditional_after'", "user": {"login": "ivandenende", "id": 38068005, "node_id": "MDQ6VXNlcjM4MDY4MDA1", "avatar_url": "https://avatars2.githubusercontent.com/u/38068005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivandenende", "html_url": "https://github.com/ivandenende", "followers_url": "https://api.github.com/users/ivandenende/followers", "following_url": "https://api.github.com/users/ivandenende/following{/other_user}", "gists_url": "https://api.github.com/users/ivandenende/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivandenende/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivandenende/subscriptions", "organizations_url": "https://api.github.com/users/ivandenende/orgs", "repos_url": "https://api.github.com/users/ivandenende/repos", "events_url": "https://api.github.com/users/ivandenende/events{/privacy}", "received_events_url": "https://api.github.com/users/ivandenende/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-12-16T09:32:25Z", "updated_at": "2019-12-19T13:50:38Z", "closed_at": "2019-12-19T13:50:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to run the following code:\r\nconditioned_sf = cph.predict_survival_function(censored_subjects, times=None, conditional_after=censored_subjects['Duration'])\r\n\r\nBut this results in an error:\r\nTypeError: predict_survival_function() got an unexpected keyword argument 'conditional_after'\r\n\r\nDoes anyone know how to solve this error? In the documentation the same keywords are used: https://lifelines.readthedocs.io/en/latest/Survival%20Regression.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/902", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/902/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/902/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/902/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/902", "id": 538039116, "node_id": "MDU6SXNzdWU1MzgwMzkxMTY=", "number": 902, "title": "Why is the median survival time infinite", "user": {"login": "woshigemi", "id": 49752900, "node_id": "MDQ6VXNlcjQ5NzUyOTAw", "avatar_url": "https://avatars2.githubusercontent.com/u/49752900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/woshigemi", "html_url": "https://github.com/woshigemi", "followers_url": "https://api.github.com/users/woshigemi/followers", "following_url": "https://api.github.com/users/woshigemi/following{/other_user}", "gists_url": "https://api.github.com/users/woshigemi/gists{/gist_id}", "starred_url": "https://api.github.com/users/woshigemi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/woshigemi/subscriptions", "organizations_url": "https://api.github.com/users/woshigemi/orgs", "repos_url": "https://api.github.com/users/woshigemi/repos", "events_url": "https://api.github.com/users/woshigemi/events{/privacy}", "received_events_url": "https://api.github.com/users/woshigemi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-15T11:41:03Z", "updated_at": "2019-12-16T01:30:17Z", "closed_at": "2019-12-16T01:30:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "![6800+\u6545\u969c\u53ca\u5168\u90e8\u6570\u636e1](https://user-images.githubusercontent.com/49752900/70862108-cb8d7680-1f72-11ea-8c8f-23a48b671fe4.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/900", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/900/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/900/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/900/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/900", "id": 538007729, "node_id": "MDU6SXNzdWU1MzgwMDc3Mjk=", "number": 900, "title": "Source installation doesn't work due to `reqs`", "user": {"login": "AbdealiJK", "id": 2200743, "node_id": "MDQ6VXNlcjIyMDA3NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/2200743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AbdealiJK", "html_url": "https://github.com/AbdealiJK", "followers_url": "https://api.github.com/users/AbdealiJK/followers", "following_url": "https://api.github.com/users/AbdealiJK/following{/other_user}", "gists_url": "https://api.github.com/users/AbdealiJK/gists{/gist_id}", "starred_url": "https://api.github.com/users/AbdealiJK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AbdealiJK/subscriptions", "organizations_url": "https://api.github.com/users/AbdealiJK/orgs", "repos_url": "https://api.github.com/users/AbdealiJK/repos", "events_url": "https://api.github.com/users/AbdealiJK/events{/privacy}", "received_events_url": "https://api.github.com/users/AbdealiJK/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 130572986, "node_id": "MDU6TGFiZWwxMzA1NzI5ODY=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/installation", "name": "installation", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-15T05:52:31Z", "updated_at": "2019-12-15T16:44:06Z", "closed_at": "2019-12-15T15:11:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When doing a source installation from pip:\r\n`pip install --no-binary :all: lifelines`\r\nit fails with:\r\n```\r\n  Downloading https://files.pythonhosted.org/packages/cd/7e/5787389141567ef38b94f1d06922d010644e32b55e471a13f80b3e1d2b2c/lifelines-0.23.3.tar.gz (321kB)\r\n  Saved ./pypi/downloads/lifelines-0.23.3.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/private/var/folders/g8/blwgm8mx7dng2pflkt7rwy0m0000gn/T/pip-download-kntrfzgd/lifelines/setup.py\", line 8, in <module>\r\n        with open(\"reqs/base-requirements.txt\") as f:\r\n    FileNotFoundError: [Errno 2] No such file or directory: 'reqs/base-requirements.txt'\r\n```\r\nThe `reqs` folder isnt present in lifelines", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/891", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/891/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/891/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/891/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/891", "id": 532785258, "node_id": "MDU6SXNzdWU1MzI3ODUyNTg=", "number": 891, "title": "CoxPHFitter alpha parameter ", "user": {"login": "ahlusar1989", "id": 7760225, "node_id": "MDQ6VXNlcjc3NjAyMjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7760225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahlusar1989", "html_url": "https://github.com/ahlusar1989", "followers_url": "https://api.github.com/users/ahlusar1989/followers", "following_url": "https://api.github.com/users/ahlusar1989/following{/other_user}", "gists_url": "https://api.github.com/users/ahlusar1989/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahlusar1989/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahlusar1989/subscriptions", "organizations_url": "https://api.github.com/users/ahlusar1989/orgs", "repos_url": "https://api.github.com/users/ahlusar1989/repos", "events_url": "https://api.github.com/users/ahlusar1989/events{/privacy}", "received_events_url": "https://api.github.com/users/ahlusar1989/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-04T16:11:02Z", "updated_at": "2019-12-04T17:11:19Z", "closed_at": "2019-12-04T17:11:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Good Morning,\r\n\r\nI am attempting to run the lifelines's examples and followed the steps for installing the development repository. I received the following and wanted to ensure that this [line](https://github.com/CamDavidsonPilon/lifelines/blob/master/lifelines/fitters/coxph_fitter.py#L148) indeed was the error. \r\n\r\nThank you, in advance, for your time.\r\n\r\n<img width=\"1083\" alt=\"Screen Shot 2019-12-04 at 11 08 35 AM\" src=\"https://user-images.githubusercontent.com/7760225/70159162-773aea80-1686-11ea-950e-7707bbe9b550.png\">\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/885", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/885/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/885/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/885/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/885", "id": 531753365, "node_id": "MDU6SXNzdWU1MzE3NTMzNjU=", "number": 885, "title": "AFT lognormal fit", "user": {"login": "sivakumar05", "id": 8119483, "node_id": "MDQ6VXNlcjgxMTk0ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/8119483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sivakumar05", "html_url": "https://github.com/sivakumar05", "followers_url": "https://api.github.com/users/sivakumar05/followers", "following_url": "https://api.github.com/users/sivakumar05/following{/other_user}", "gists_url": "https://api.github.com/users/sivakumar05/gists{/gist_id}", "starred_url": "https://api.github.com/users/sivakumar05/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sivakumar05/subscriptions", "organizations_url": "https://api.github.com/users/sivakumar05/orgs", "repos_url": "https://api.github.com/users/sivakumar05/repos", "events_url": "https://api.github.com/users/sivakumar05/events{/privacy}", "received_events_url": "https://api.github.com/users/sivakumar05/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-03T06:23:21Z", "updated_at": "2019-12-03T06:25:54Z", "closed_at": "2019-12-03T06:25:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi David,\r\n\r\nWant to fit AFT model with logNormal distribution but no clear guidelines available for passing arguments.So, far I'm able to pass event & tenure. Please suggest how to pass regressors in LogNormalFitter().fit()\r\n\r\nThanks & Regards,\r\nSiva", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/884", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/884/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/884/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/884/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/884", "id": 530060589, "node_id": "MDU6SXNzdWU1MzAwNjA1ODk=", "number": 884, "title": "Remove inverted axis example from docs", "user": {"login": "ian-whitestone", "id": 11096727, "node_id": "MDQ6VXNlcjExMDk2NzI3", "avatar_url": "https://avatars2.githubusercontent.com/u/11096727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ian-whitestone", "html_url": "https://github.com/ian-whitestone", "followers_url": "https://api.github.com/users/ian-whitestone/followers", "following_url": "https://api.github.com/users/ian-whitestone/following{/other_user}", "gists_url": "https://api.github.com/users/ian-whitestone/gists{/gist_id}", "starred_url": "https://api.github.com/users/ian-whitestone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ian-whitestone/subscriptions", "organizations_url": "https://api.github.com/users/ian-whitestone/orgs", "repos_url": "https://api.github.com/users/ian-whitestone/repos", "events_url": "https://api.github.com/users/ian-whitestone/events{/privacy}", "received_events_url": "https://api.github.com/users/ian-whitestone/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650069015, "node_id": "MDU6TGFiZWw2NTAwNjkwMTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/docs", "name": "docs", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-28T19:53:52Z", "updated_at": "2019-12-04T17:22:46Z", "closed_at": "2019-12-04T17:22:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "The current docs [here](https://lifelines.readthedocs.io/en/latest/Examples.html#invert-axis) include example code for plotting an inverted axis with kmf.\r\n\r\nAs per [changelog](https://github.com/CamDavidsonPilon/lifelines/blob/8f64de9d16425b232532977de43519bfbfdbb34a/CHANGELOG.md#0210---2019-04-12) this functionality was removed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/882", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/882/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/882/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/882/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/882", "id": 529937947, "node_id": "MDU6SXNzdWU1Mjk5Mzc5NDc=", "number": 882, "title": "mixture cure model in lifelines", "user": {"login": "SpirosFot", "id": 58300516, "node_id": "MDQ6VXNlcjU4MzAwNTE2", "avatar_url": "https://avatars0.githubusercontent.com/u/58300516?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SpirosFot", "html_url": "https://github.com/SpirosFot", "followers_url": "https://api.github.com/users/SpirosFot/followers", "following_url": "https://api.github.com/users/SpirosFot/following{/other_user}", "gists_url": "https://api.github.com/users/SpirosFot/gists{/gist_id}", "starred_url": "https://api.github.com/users/SpirosFot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SpirosFot/subscriptions", "organizations_url": "https://api.github.com/users/SpirosFot/orgs", "repos_url": "https://api.github.com/users/SpirosFot/repos", "events_url": "https://api.github.com/users/SpirosFot/events{/privacy}", "received_events_url": "https://api.github.com/users/SpirosFot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1703850251, "node_id": "MDU6TGFiZWwxNzAzODUwMjUx", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/modelling", "name": "modelling", "color": "ae06cc", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-28T14:16:26Z", "updated_at": "2020-01-07T14:17:08Z", "closed_at": "2020-01-07T14:17:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nI am interested in implementing a mixture cure model with multiple events as the one implemented in Dirick. et al (2015).\r\nIn their paper they create a mixture cure model for predicting default,prepayment and maturity (cure) of a loan. In that model,  the unconditional survival function is given by\r\n\r\n![image](https://user-images.githubusercontent.com/58300516/69812919-6ce5a000-11f1-11ea-9285-157465bc4238.png)\r\n\r\nwhile the conditional survival function modelling all cases that are suspectible to default is given by a CoxPH model of the type :\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/58300516/69812998-9b637b00-11f1-11ea-825c-d7f115ec431a.png)\r\n\r\n\r\nI am wondering if something like this can be implemented through lifelines \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/880", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/880/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/880/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/880/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/880", "id": 529646662, "node_id": "MDU6SXNzdWU1Mjk2NDY2NjI=", "number": 880, "title": "Shape mismatch when using conditional_after with strata in CoxPHFitter", "user": {"login": "VJarasse", "id": 23340374, "node_id": "MDQ6VXNlcjIzMzQwMzc0", "avatar_url": "https://avatars0.githubusercontent.com/u/23340374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VJarasse", "html_url": "https://github.com/VJarasse", "followers_url": "https://api.github.com/users/VJarasse/followers", "following_url": "https://api.github.com/users/VJarasse/following{/other_user}", "gists_url": "https://api.github.com/users/VJarasse/gists{/gist_id}", "starred_url": "https://api.github.com/users/VJarasse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VJarasse/subscriptions", "organizations_url": "https://api.github.com/users/VJarasse/orgs", "repos_url": "https://api.github.com/users/VJarasse/repos", "events_url": "https://api.github.com/users/VJarasse/events{/privacy}", "received_events_url": "https://api.github.com/users/VJarasse/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 53920840, "node_id": "MDU6TGFiZWw1MzkyMDg0MA==", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/bug", "name": "bug", "color": "8651e8", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-28T01:34:05Z", "updated_at": "2019-12-07T17:43:24Z", "closed_at": "2019-12-07T17:39:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to use `conditional_after` parameter in CoxPHFitter prediction, I face a broadcast issue because the shapes of `np.tile(times_, (n_, 1))` and `conditional_after` don't match:\r\n`times_to_evaluate_at = np.tile(times_, (n_, 1)) + conditional_after\r\nValueError: operands could not be broadcast together with shapes (25141,182) (77251,1)`\r\n\r\nI am using stratas which make my `X_stratified` have `n_` all different from the size of X (`n`). My understanding from the `conditional_after` parameter is that I should give an iterator of size `n`. However, we never slice this iterator to make it match the samples from `X_stratified`, thus yielding the error.\r\n\r\nIs that a bug or am I missing something? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/879", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/879/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/879/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/879/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/879", "id": 529469278, "node_id": "MDU6SXNzdWU1Mjk0NjkyNzg=", "number": 879, "title": "Multiple regression where independent and dependent variables are left censored", "user": {"login": "RyanConway91", "id": 25184697, "node_id": "MDQ6VXNlcjI1MTg0Njk3", "avatar_url": "https://avatars3.githubusercontent.com/u/25184697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RyanConway91", "html_url": "https://github.com/RyanConway91", "followers_url": "https://api.github.com/users/RyanConway91/followers", "following_url": "https://api.github.com/users/RyanConway91/following{/other_user}", "gists_url": "https://api.github.com/users/RyanConway91/gists{/gist_id}", "starred_url": "https://api.github.com/users/RyanConway91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RyanConway91/subscriptions", "organizations_url": "https://api.github.com/users/RyanConway91/orgs", "repos_url": "https://api.github.com/users/RyanConway91/repos", "events_url": "https://api.github.com/users/RyanConway91/events{/privacy}", "received_events_url": "https://api.github.com/users/RyanConway91/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1703850251, "node_id": "MDU6TGFiZWwxNzAzODUwMjUx", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/modelling", "name": "modelling", "color": "ae06cc", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-27T16:56:30Z", "updated_at": "2020-01-23T20:00:44Z", "closed_at": "2020-01-23T20:00:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am interested in developing a predictive regression model to use measured concentrations of a suite of compounds to predict the concentrations (or occurrence) of another compound of interest. Both dependent and independent variables are left-censored (contain non-detects). Can this be done in lifelines? If so, what should I be looking at?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/876", "repository_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines", "labels_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/876/labels{/name}", "comments_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/876/comments", "events_url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/issues/876/events", "html_url": "https://github.com/CamDavidsonPilon/lifelines/issues/876", "id": 528243615, "node_id": "MDU6SXNzdWU1MjgyNDM2MTU=", "number": 876, "title": "to_html printing lost the footer information", "user": {"login": "CamDavidsonPilon", "id": 884032, "node_id": "MDQ6VXNlcjg4NDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamDavidsonPilon", "html_url": "https://github.com/CamDavidsonPilon", "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers", "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}", "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions", "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs", "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos", "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}", "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 53920840, "node_id": "MDU6TGFiZWw1MzkyMDg0MA==", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/bug", "name": "bug", "color": "8651e8", "default": true, "description": ""}, {"id": 926457395, "node_id": "MDU6TGFiZWw5MjY0NTczOTU=", "url": "https://api.github.com/repos/CamDavidsonPilon/lifelines/labels/next%20minor%20release%20%F0%9F%A4%9E", "name": "next minor release \ud83e\udd1e", "color": "a3f7ad", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-25T17:53:36Z", "updated_at": "2019-11-28T03:29:49Z", "closed_at": "2019-11-28T03:29:49Z", "author_association": "OWNER", "active_lock_reason": null, "body": "<img width=\"819\" alt=\"Screen Shot 2019-11-25 at 12 52 30 PM\" src=\"https://user-images.githubusercontent.com/884032/69565245-8e8d2000-0f82-11ea-8e22-714bc265497f.png\">\r\n", "performed_via_github_app": null, "score": 1.0}]}