{"total_count": 49, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/jazzband/geojson/issues/150", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/150/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/150/events", "html_url": "https://github.com/jazzband/geojson/issues/150", "id": 675009999, "node_id": "MDU6SXNzdWU2NzUwMDk5OTk=", "number": 150, "title": "encoding parameter to json.loads has been deprecated and removed in Python 3.9", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-07T13:17:35Z", "updated_at": "2020-08-10T04:36:15Z", "closed_at": "2020-08-10T04:36:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "encoding parameter has been deprecated and removed in Python 3.9. `geojson.loads` internally uses `json.loads`. This will cause test failure.\r\n\r\nhttps://github.com/jazzband/geojson/blob/3cef47cf977320aace537bf4b154f5c61ef9afb2/tests/test_features.py#L85\r\n\r\nRef :  https://github.com/python/cpython/pull/18075\r\n\r\n**Sample fa**\r\n\r\n```\r\npytest -v tests/test_features.py\r\n=============================== test session starts ===============================\r\nplatform linux -- Python 3.10.0a0, pytest-6.0.1, py-1.9.0, pluggy-0.13.1 -- /root/pydev-venv/bin/python\r\ncachedir: .pytest_cache\r\nrootdir: /root/checked_repos/geojson\r\ncollected 4 items                                                                 \r\n\r\ntests/test_features.py::FeaturesTest::test_feature_class FAILED             [ 25%]\r\ntests/test_features.py::FeaturesTest::test_geo_interface PASSED             [ 50%]\r\ntests/test_features.py::FeaturesTest::test_protocol PASSED                  [ 75%]\r\ntests/test_features.py::FeaturesTest::test_unicode_properties PASSED        [100%]\r\n\r\n==================================== FAILURES =====================================\r\n_________________________ FeaturesTest.test_feature_class _________________________\r\n\r\nself = <tests.test_features.FeaturesTest testMethod=test_feature_class>\r\n\r\n    def test_feature_class(self):\r\n        \"\"\"\r\n        Test the Feature class\r\n        \"\"\"\r\n    \r\n        from geojson.examples import SimpleWebFeature\r\n        feature = SimpleWebFeature(\r\n            id='1',\r\n            geometry={'type': 'Point', 'coordinates': [53.0, -4.0]},\r\n            title='Feature 1', summary='The first feature',\r\n            link='http://example.org/features/1'\r\n        )\r\n    \r\n        # It satisfies the feature protocol\r\n        self.assertEqual(feature.id, '1')\r\n        self.assertEqual(feature.properties['title'], 'Feature 1')\r\n        self.assertEqual(feature.properties['summary'], 'The first feature')\r\n        self.assertEqual(feature.properties['link'],\r\n                         'http://example.org/features/1')\r\n        self.assertEqual(geojson.dumps(feature.geometry, sort_keys=True),\r\n                         '{\"coordinates\": [53.0, -4.0], \"type\": \"Point\"}')\r\n    \r\n        # Encoding\r\n        json = ('{\"geometry\": {\"coordinates\": [53.0, -4.0],'\r\n                ' \"type\": \"Point\"},'\r\n                ' \"id\": \"1\",'\r\n                ' \"properties\":'\r\n                ' {\"link\": \"http://example.org/features/1\",'\r\n                ' \"summary\": \"The first feature\",'\r\n                ' \"title\": \"Feature 1\"},'\r\n                ' \"type\": \"Feature\"}')\r\n        self.assertEqual(geojson.dumps(feature, sort_keys=True), json)\r\n    \r\n        # Decoding\r\n        factory = geojson.examples.create_simple_web_feature\r\n        json = ('{\"geometry\": {\"type\": \"Point\",'\r\n                ' \"coordinates\": [53.0, -4.0]},'\r\n                ' \"id\": \"1\",'\r\n                ' \"properties\": {\"summary\": \"The first feature\",'\r\n                ' \"link\": \"http://example.org/features/1\",'\r\n                ' \"title\": \"Feature 1\"}}')\r\n>       feature = geojson.loads(json, object_hook=factory, encoding=\"utf-8\")\r\n\r\ntests/test_features.py:85: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\ngeojson/codec.py:51: in loads\r\n    return json.loads(s,\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\ns = '{\"geometry\": {\"type\": \"Point\", \"coordinates\": [53.0, -4.0]}, \"id\": \"1\", \"properties\": {\"summary\": \"The first feature\", \"link\": \"http://example.org/features/1\", \"title\": \"Feature 1\"}}'\r\ncls = <class 'json.decoder.JSONDecoder'>\r\nobject_hook = <function create_simple_web_feature at 0x7f711ac7dd30>\r\nparse_float = None, parse_int = None\r\nparse_constant = <function _enforce_strict_numbers at 0x7f711acff1f0>\r\nobject_pairs_hook = None\r\nkw = {'encoding': 'utf-8', 'object_hook': <function create_simple_web_feature at 0x7f711ac7dd30>, 'parse_constant': <function _enforce_strict_numbers at 0x7f711acff1f0>}\r\n\r\n    def loads(s, *, cls=None, object_hook=None, parse_float=None,\r\n            parse_int=None, parse_constant=None, object_pairs_hook=None, **kw):\r\n        \"\"\"Deserialize ``s`` (a ``str``, ``bytes`` or ``bytearray`` instance\r\n        containing a JSON document) to a Python object.\r\n    \r\n        ``object_hook`` is an optional function that will be called with the\r\n        result of any object literal decode (a ``dict``). The return value of\r\n        ``object_hook`` will be used instead of the ``dict``. This feature\r\n        can be used to implement custom decoders (e.g. JSON-RPC class hinting).\r\n    \r\n        ``object_pairs_hook`` is an optional function that will be called with the\r\n        result of any object literal decoded with an ordered list of pairs.  The\r\n        return value of ``object_pairs_hook`` will be used instead of the ``dict``.\r\n        This feature can be used to implement custom decoders.  If ``object_hook``\r\n        is also defined, the ``object_pairs_hook`` takes priority.\r\n    \r\n        ``parse_float``, if specified, will be called with the string\r\n        of every JSON float to be decoded. By default this is equivalent to\r\n        float(num_str). This can be used to use another datatype or parser\r\n        for JSON floats (e.g. decimal.Decimal).\r\n    \r\n        ``parse_int``, if specified, will be called with the string\r\n        of every JSON int to be decoded. By default this is equivalent to\r\n        int(num_str). This can be used to use another datatype or parser\r\n        for JSON integers (e.g. float).\r\n    \r\n        ``parse_constant``, if specified, will be called with one of the\r\n        following strings: -Infinity, Infinity, NaN.\r\n        This can be used to raise an exception if invalid JSON numbers\r\n        are encountered.\r\n    \r\n        To use a custom ``JSONDecoder`` subclass, specify it with the ``cls``\r\n        kwarg; otherwise ``JSONDecoder`` is used.\r\n        \"\"\"\r\n        if isinstance(s, str):\r\n            if s.startswith('\\ufeff'):\r\n                raise JSONDecodeError(\"Unexpected UTF-8 BOM (decode using utf-8-sig)\",\r\n                                      s, 0)\r\n        else:\r\n            if not isinstance(s, (bytes, bytearray)):\r\n                raise TypeError(f'the JSON object must be str, bytes or bytearray, '\r\n                                f'not {s.__class__.__name__}')\r\n            s = s.decode(detect_encoding(s), 'surrogatepass')\r\n    \r\n        if (cls is None and object_hook is None and\r\n                parse_int is None and parse_float is None and\r\n                parse_constant is None and object_pairs_hook is None and not kw):\r\n            return _default_decoder.decode(s)\r\n        if cls is None:\r\n            cls = JSONDecoder\r\n        if object_hook is not None:\r\n            kw['object_hook'] = object_hook\r\n        if object_pairs_hook is not None:\r\n            kw['object_pairs_hook'] = object_pairs_hook\r\n        if parse_float is not None:\r\n            kw['parse_float'] = parse_float\r\n        if parse_int is not None:\r\n            kw['parse_int'] = parse_int\r\n        if parse_constant is not None:\r\n            kw['parse_constant'] = parse_constant\r\n>       return cls(**kw).decode(s)\r\nE       TypeError: JSONDecoder.__init__() got an unexpected keyword argument 'encoding'\r\n\r\n/root/cpython/Lib/json/__init__.py:359: TypeError\r\n============================= short test summary info =============================\r\nFAILED tests/test_features.py::FeaturesTest::test_feature_class - TypeError: JSO...\r\n=========================== 1 failed, 3 passed in 0.09s ===========================\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/145", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/145/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/145/events", "html_url": "https://github.com/jazzband/geojson/issues/145", "id": 653621101, "node_id": "MDU6SXNzdWU2NTM2MjExMDE=", "number": 145, "title": "`utils.coords()` can not process GeometryCollection", "user": {"login": "nnseva", "id": 496812, "node_id": "MDQ6VXNlcjQ5NjgxMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/496812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnseva", "html_url": "https://github.com/nnseva", "followers_url": "https://api.github.com/users/nnseva/followers", "following_url": "https://api.github.com/users/nnseva/following{/other_user}", "gists_url": "https://api.github.com/users/nnseva/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnseva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnseva/subscriptions", "organizations_url": "https://api.github.com/users/nnseva/orgs", "repos_url": "https://api.github.com/users/nnseva/repos", "events_url": "https://api.github.com/users/nnseva/events{/privacy}", "received_events_url": "https://api.github.com/users/nnseva/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-08T21:54:55Z", "updated_at": "2020-07-15T12:26:16Z", "closed_at": "2020-07-15T12:26:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\nIn [33]: js                                                                                                                                                                                                                                  \r\nOut[33]: \r\n{'type': 'GeometryCollection',\r\n 'geometries': [{'type': 'Point', 'coordinates': [44.015737, 56.302492]},\r\n  {'type': 'Point', 'coordinates': [44.015436, 56.301063]}]}\r\n\r\nIn [34]: gjs = geojson.GeoJSON(js)                                                                                                                                                                                                           \r\n\r\nIn [35]: gjs.is_valid                                                                                                                                                                                                                        \r\nOut[35]: True\r\n\r\nIn [36]: list(geojson.utils.coords(gjs))                                                                                                                                                                                                     \r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-36-e1dc929b9d78> in <module>\r\n----> 1 list(geojson.utils.coords(gjs))\r\n\r\n~/swat/py3.6/lib/python3.6/site-packages/geojson/utils.py in coords(obj)\r\n     29                 yield tuple(coordinates)\r\n     30                 break\r\n---> 31             for f in coords(e):\r\n     32                 yield f\r\n     33 \r\n\r\n~/swat/py3.6/lib/python3.6/site-packages/geojson/utils.py in coords(obj)\r\n     24             coordinates = obj['geometry']['coordinates']\r\n     25         else:\r\n---> 26             coordinates = obj.get('coordinates', obj)\r\n     27         for e in coordinates:\r\n     28             if isinstance(e, (float, int)):\r\n\r\nAttributeError: 'str' object has no attribute 'get'\r\n\r\nIn [37]: f = {'type': 'Feature', 'geometry': js}                                                                                                                                                                                             \r\n\r\nIn [38]: gf = geojson.GeoJSON(f)                                                                                                                                                                                                             \r\n\r\nIn [39]: gf.is_valid                                                                                                                                                                                                                         \r\nOut[39]: True\r\n\r\nIn [40]: list(geojson.coords(gf))                                                                                                                                                                                                            \r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-40-4ccd2d76bcbd> in <module>\r\n----> 1 list(geojson.coords(gf))\r\n\r\n~/swat/py3.6/lib/python3.6/site-packages/geojson/utils.py in coords(obj)\r\n     22             coordinates = obj\r\n     23         elif 'geometry' in obj:\r\n---> 24             coordinates = obj['geometry']['coordinates']\r\n     25         else:\r\n     26             coordinates = obj.get('coordinates', obj)\r\n\r\nKeyError: 'coordinates'\r\n\r\nIn [41]: fc = {'type': 'FeatureCollection', 'features': [f]}                                                                                                                                                                                 \r\n\r\nIn [42]: gfc = geojson.GeoJSON(fc)                                                                                                                                                                                                           \r\n\r\nIn [43]: gfc.is_valid                                                                                                                                                                                                                        \r\nOut[43]: True\r\n\r\nIn [44]: list(geojson.utils.coords(gfc))                                                                                                                                                                                                     \r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-44-90cdb61036d4> in <module>\r\n----> 1 list(geojson.utils.coords(gfc))\r\n\r\n~/swat/py3.6/lib/python3.6/site-packages/geojson/utils.py in coords(obj)\r\n     16             # For Python 2 compatibility\r\n     17             # See https://www.reddit.com/r/learnpython/comments/4rc15s/yield_from_and_python_27/ # noqa: E501\r\n---> 18             for c in coords(f):\r\n     19                 yield c\r\n     20     else:\r\n\r\n~/swat/py3.6/lib/python3.6/site-packages/geojson/utils.py in coords(obj)\r\n     22             coordinates = obj\r\n     23         elif 'geometry' in obj:\r\n---> 24             coordinates = obj['geometry']['coordinates']\r\n     25         else:\r\n     26             coordinates = obj.get('coordinates', obj)\r\n\r\nKeyError: 'coordinates'\r\n\r\nIn [45]: geojson.__version__                                                                                                                                                                                                                 \r\nOut[45]: '2.5.0'\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/143", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/143/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/143/events", "html_url": "https://github.com/jazzband/geojson/issues/143", "id": 607267610, "node_id": "MDU6SXNzdWU2MDcyNjc2MTA=", "number": 143, "title": "Points are not being validated correctly", "user": {"login": "Rumpelstinsk", "id": 22290536, "node_id": "MDQ6VXNlcjIyMjkwNTM2", "avatar_url": "https://avatars1.githubusercontent.com/u/22290536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rumpelstinsk", "html_url": "https://github.com/Rumpelstinsk", "followers_url": "https://api.github.com/users/Rumpelstinsk/followers", "following_url": "https://api.github.com/users/Rumpelstinsk/following{/other_user}", "gists_url": "https://api.github.com/users/Rumpelstinsk/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rumpelstinsk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rumpelstinsk/subscriptions", "organizations_url": "https://api.github.com/users/Rumpelstinsk/orgs", "repos_url": "https://api.github.com/users/Rumpelstinsk/repos", "events_url": "https://api.github.com/users/Rumpelstinsk/events{/privacy}", "received_events_url": "https://api.github.com/users/Rumpelstinsk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-27T06:15:45Z", "updated_at": "2020-05-11T05:36:19Z", "closed_at": "2020-05-11T05:36:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Check the code snippet. When you initialize a point using coordinates for a line, it says is a valid point:\r\n\r\n```\r\nimport geojson\r\n\r\nlineCoords=[[1,2],[3,4]]\r\npointCoords=[5,6]\r\n\r\nprint (\"Line(lineCoords): \", geojson.LineString(lineCoords).is_valid)\r\nprint (\"Line(pointCoors): \", geojson.LineString(pointCoords).is_valid)\r\nprint (\"Point(pointCoords): \", geojson.Point(pointCoords).is_valid)\r\nprint (\"Point(lineCoords): \", geojson.Point(lineCoords).is_valid)\r\n```\r\n\r\nWhich produces the next exit:\r\n\r\n> Line(lineCoords):  True\r\n> Line(pointCoors):  False\r\n> Point(pointCoords):  True\r\n> Point(lineCoords):  True\r\n\r\nInitializing a Point using coordinates for a  line should returns an invalid point.\r\nAccording to Apendix A.1 of [RFC 7946](https://tools.ietf.org/rfc/rfc7946.txt)\r\n\r\n> Point coordinates are in x, y order (easting, northing for projected\r\n   coordinates, longitude, and latitude for geographic coordinates)\r\n\r\nSo, only an array of two numbers shold be considered as valid.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/140", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/140/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/140/events", "html_url": "https://github.com/jazzband/geojson/issues/140", "id": 540883478, "node_id": "MDU6SXNzdWU1NDA4ODM0Nzg=", "number": 140, "title": "[Feature request] Convert overpass-API json to geojson", "user": {"login": "lucianopaz", "id": 5230109, "node_id": "MDQ6VXNlcjUyMzAxMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5230109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucianopaz", "html_url": "https://github.com/lucianopaz", "followers_url": "https://api.github.com/users/lucianopaz/followers", "following_url": "https://api.github.com/users/lucianopaz/following{/other_user}", "gists_url": "https://api.github.com/users/lucianopaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucianopaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucianopaz/subscriptions", "organizations_url": "https://api.github.com/users/lucianopaz/orgs", "repos_url": "https://api.github.com/users/lucianopaz/repos", "events_url": "https://api.github.com/users/lucianopaz/events{/privacy}", "received_events_url": "https://api.github.com/users/lucianopaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-12-20T09:21:09Z", "updated_at": "2020-02-10T07:21:03Z", "closed_at": "2020-02-10T07:21:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all, thanks for this great project!\r\n\r\nI'm trying to query data from open street maps using their [overpass API](https://wiki.openstreetmap.org/wiki/Overpass_API). It's easy to get results as a json using their overpass-ql language, but I would really love to convert those into valid geojson.\r\n\r\nFor example:\r\n\r\n```python\r\nimport json\r\nimport requests\r\n\r\n\r\noverpass_url = \"https://lz4.overpass-api.de/api/interpreter\"\r\nheaders = {\"content-type\": \"application/x-www-form-urlencoded\"}\r\nquery = \"\"\"\r\n[out:json][timeout:25];\r\nnode[\"addr:city\"=\"Washington\"][\"addr:street\"=\"Pennsylvania Avenue Northwest\"][\"addr:housenumber\"=1600]->.whitehouse;\r\n(\r\n  node(around.whitehouse:500)[\"amenity\"=\"pub\"];\r\n  way(around.whitehouse:500)[\"amenity\"=\"pub\"];\r\n  relation(around.whitehouse:500)[\"amenity\"=\"pub\"];\r\n);\r\nout body;\r\n>;\r\nout skel qt;\r\n\"\"\"\r\n\r\nr = requests.post(overpass_url, data=query, headers=headers)\r\nprint(json.loads(r.content))\r\n```\r\n\r\nThis prints out:\r\n> {'version': 0.6,\r\n 'generator': 'Overpass API 0.7.55.7 8b86ff77',\r\n 'osm3s': {'timestamp_osm_base': '2019-12-20T09:15:02Z',\r\n  'copyright': 'The data included in this document is from www.openstreetmap.org. The data is made available under ODbL.'},\r\n 'elements': [{'type': 'node',\r\n   'id': 734267231,\r\n   'lat': 38.89646,\r\n   'lon': -77.032238,\r\n   'tags': {'amenity': 'pub', 'name': 'Round Robin Bar'}},\r\n  {'type': 'node',\r\n   'id': 739150358,\r\n   'lat': 38.8996053,\r\n   'lon': -77.033411,\r\n   'tags': {'addr:housenumber': '727',\r\n    'addr:street': '15th Street Northwest',\r\n    'amenity': 'pub',\r\n    'dataset': 'ABRA locations',\r\n    'name': 'Recess Bar',\r\n    'source': 'dcgis'}},\r\n  {'type': 'node',\r\n   'id': 739528064,\r\n   'lat': 38.9008791,\r\n   'lon': -77.0402319,\r\n   'tags': {'addr:housenumber': '1716',\r\n    'addr:street': 'I Street Northwest',\r\n    'amenity': 'pub',\r\n    'dataset': 'ABRA locations',\r\n    'name': 'Eye Bar',\r\n    'source': 'dcgis'}},\r\n  {'type': 'node',\r\n   'id': 739528139,\r\n   'lat': 38.9009945,\r\n   'lon': -77.0401739,\r\n   'tags': {'addr:housenumber': '1716',\r\n    'addr:street': 'I Street Northwest',\r\n    'amenity': 'pub',\r\n    'dataset': 'ABRA locations',\r\n    'name': 'The Bottom Line',\r\n    'source': 'dcgis'}}]}\r\n\r\nIf this is out of your project's scope, feel free to close this issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/132", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/132/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/132/events", "html_url": "https://github.com/jazzband/geojson/issues/132", "id": 469460093, "node_id": "MDU6SXNzdWU0Njk0NjAwOTM=", "number": 132, "title": "cancelled", "user": {"login": "rayrrr", "id": 7869818, "node_id": "MDQ6VXNlcjc4Njk4MTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7869818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rayrrr", "html_url": "https://github.com/rayrrr", "followers_url": "https://api.github.com/users/rayrrr/followers", "following_url": "https://api.github.com/users/rayrrr/following{/other_user}", "gists_url": "https://api.github.com/users/rayrrr/gists{/gist_id}", "starred_url": "https://api.github.com/users/rayrrr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rayrrr/subscriptions", "organizations_url": "https://api.github.com/users/rayrrr/orgs", "repos_url": "https://api.github.com/users/rayrrr/repos", "events_url": "https://api.github.com/users/rayrrr/events{/privacy}", "received_events_url": "https://api.github.com/users/rayrrr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-17T21:41:02Z", "updated_at": "2019-07-18T03:08:29Z", "closed_at": "2019-07-18T03:08:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Cancelled", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/129", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/129/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/129/events", "html_url": "https://github.com/jazzband/geojson/issues/129", "id": 464503916, "node_id": "MDU6SXNzdWU0NjQ1MDM5MTY=", "number": 129, "title": "Willing to become the Official lifter of this package.", "user": {"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-07-05T07:32:20Z", "updated_at": "2019-07-05T08:53:08Z", "closed_at": "2019-07-05T08:50:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I currently get some payment to maintain some open source packages. I would to also maintain this project dedicatedly so that I can claim some more from the sponsors. need non-objection from other maintainers.\r\n\r\ncc: @jezdez\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/118", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/118/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/118/events", "html_url": "https://github.com/jazzband/geojson/issues/118", "id": 402186722, "node_id": "MDU6SXNzdWU0MDIxODY3MjI=", "number": 118, "title": "DeprecationWarning from collections.MutableMapping on module import", "user": {"login": "adsultana", "id": 23050332, "node_id": "MDQ6VXNlcjIzMDUwMzMy", "avatar_url": "https://avatars2.githubusercontent.com/u/23050332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adsultana", "html_url": "https://github.com/adsultana", "followers_url": "https://api.github.com/users/adsultana/followers", "following_url": "https://api.github.com/users/adsultana/following{/other_user}", "gists_url": "https://api.github.com/users/adsultana/gists{/gist_id}", "starred_url": "https://api.github.com/users/adsultana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adsultana/subscriptions", "organizations_url": "https://api.github.com/users/adsultana/orgs", "repos_url": "https://api.github.com/users/adsultana/repos", "events_url": "https://api.github.com/users/adsultana/events{/privacy}", "received_events_url": "https://api.github.com/users/adsultana/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-23T11:07:54Z", "updated_at": "2019-03-13T17:36:52Z", "closed_at": "2019-03-13T17:36:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As of Python 3.3, [MutableMapping](https://docs.python.org/3/library/collections.abc.html#collections.abc.MutableMapping) has moved from the `collections` module to `collections.abc`. This now raises a `DeprecationWarning` in Python 3.7, and will stop working altogether in Python 3.8+\r\n\r\n```\r\n$ python -Wall\r\nPython 3.7.2 (default, Dec 29 2018, 07:19:27)\r\n[GCC 6.3.0 20170516] on linux\r\n>>> import geojson\r\n/tmp/.tox/test/lib/python3.7/site-packages/geojson/mapping.py:1: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n  from collections import MutableMapping\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/116", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/116/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/116/events", "html_url": "https://github.com/jazzband/geojson/issues/116", "id": 369807396, "node_id": "MDU6SXNzdWUzNjk4MDczOTY=", "number": 116, "title": "geojson.utils.coords(FeatureCollection)", "user": {"login": "TomGoBravo", "id": 1130635, "node_id": "MDQ6VXNlcjExMzA2MzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1130635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TomGoBravo", "html_url": "https://github.com/TomGoBravo", "followers_url": "https://api.github.com/users/TomGoBravo/followers", "following_url": "https://api.github.com/users/TomGoBravo/following{/other_user}", "gists_url": "https://api.github.com/users/TomGoBravo/gists{/gist_id}", "starred_url": "https://api.github.com/users/TomGoBravo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TomGoBravo/subscriptions", "organizations_url": "https://api.github.com/users/TomGoBravo/orgs", "repos_url": "https://api.github.com/users/TomGoBravo/repos", "events_url": "https://api.github.com/users/TomGoBravo/events{/privacy}", "received_events_url": "https://api.github.com/users/TomGoBravo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-13T14:30:48Z", "updated_at": "2018-10-18T03:26:30Z", "closed_at": "2018-10-18T03:26:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently it raises \r\nAttributeError: 'str' object has no attribute 'get'\r\nat\r\nFile \"/home/thecap/.local/lib/python3.5/site-packages/geojson/utils.py\", line 19, in coords\r\ncoordinates = obj.get('coordinates', obj)\r\n\r\nThis is similar to issue 110. I can imagine implementing coords and some of the map_* functions using a common function but it'd be more complex and slower so maybe not worth the effort.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/115", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/115/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/115/events", "html_url": "https://github.com/jazzband/geojson/issues/115", "id": 349222801, "node_id": "MDU6SXNzdWUzNDkyMjI4MDE=", "number": 115, "title": "Documentation should mention compatibility with core json functions", "user": {"login": "biomiker", "id": 17579292, "node_id": "MDQ6VXNlcjE3NTc5Mjky", "avatar_url": "https://avatars3.githubusercontent.com/u/17579292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/biomiker", "html_url": "https://github.com/biomiker", "followers_url": "https://api.github.com/users/biomiker/followers", "following_url": "https://api.github.com/users/biomiker/following{/other_user}", "gists_url": "https://api.github.com/users/biomiker/gists{/gist_id}", "starred_url": "https://api.github.com/users/biomiker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/biomiker/subscriptions", "organizations_url": "https://api.github.com/users/biomiker/orgs", "repos_url": "https://api.github.com/users/biomiker/repos", "events_url": "https://api.github.com/users/biomiker/events{/privacy}", "received_events_url": "https://api.github.com/users/biomiker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-09T17:35:46Z", "updated_at": "2018-08-25T15:44:25Z", "closed_at": "2018-08-25T15:44:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I recommend adding something like the following to the section \"GeoJSON encoding/decoding\", it's a powerful option that many users may not know about.\r\n\r\n> Note that each of these functions is a wrapper around the core json function with the same name, and will pass through any additional arguments.  This allows you to control the json formatting or parsing behavior with the underlying core json function.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/113", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/113/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/113/events", "html_url": "https://github.com/jazzband/geojson/issues/113", "id": 326195265, "node_id": "MDU6SXNzdWUzMjYxOTUyNjU=", "number": 113, "title": "Incorrect Expected Type for Classes with Coordinate Lists", "user": {"login": "ahokinson", "id": 1762048, "node_id": "MDQ6VXNlcjE3NjIwNDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1762048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahokinson", "html_url": "https://github.com/ahokinson", "followers_url": "https://api.github.com/users/ahokinson/followers", "following_url": "https://api.github.com/users/ahokinson/following{/other_user}", "gists_url": "https://api.github.com/users/ahokinson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahokinson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahokinson/subscriptions", "organizations_url": "https://api.github.com/users/ahokinson/orgs", "repos_url": "https://api.github.com/users/ahokinson/repos", "events_url": "https://api.github.com/users/ahokinson/events{/privacy}", "received_events_url": "https://api.github.com/users/ahokinson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-24T16:18:46Z", "updated_at": "2018-05-25T02:33:49Z", "closed_at": "2018-05-25T02:33:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I believe the type hinting is incorrect for classes where coordinates are defined by multiple points.\r\n\r\nThe [documentation](http://python-geojson.readthedocs.io/en/latest/#linestring) indicates that the following code should work.\r\n```\r\ndef geojson_serialize(self):\r\n    return Feature(geometry=LineString(coordinates=[(self.city.longitude, self.city.latitude),\r\n                                                    (self.host.city.longitude, self.host.city.latitude)]),\r\n                   properties={\"attack_type\": self.attack_type.name,\r\n...\r\n```\r\n\r\nWhen run, it does seem to work as intended. However, it produces a weak warning:\r\n`Expected type 'tuple', got 'List[Tuple[Any,Any]]' instead`.\r\n\r\nBecause `LineString` inherits from `MultiPoint` which inherits from `Geometry`, it uses the following constructor.\r\n\r\n```\r\n    def __init__(self, coordinates=None, crs=None, validate=False, **extra):\r\n        \"\"\"\r\n        Initialises a Geometry object.\r\n\r\n        :param coordinates: Coordinates of the Geometry object.\r\n        :type coordinates: tuple\r\n        :param crs: CRS\r\n        :type crs: CRS object\r\n        \"\"\"\r\n```\r\n\r\nwhich is incorrect for any `MultiPoint` coordinates.\r\n\r\nWould the use of [`typing.Union`](https://docs.python.org/3/library/typing.html#typing.Union) be an appropriate fix here?\r\n\r\nI'm willing to submit a PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/111", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/111/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/111/events", "html_url": "https://github.com/jazzband/geojson/issues/111", "id": 316966944, "node_id": "MDU6SXNzdWUzMTY5NjY5NDQ=", "number": 111, "title": "using a valid geojson dictionary in a contructor", "user": {"login": "dharasty", "id": 952428, "node_id": "MDQ6VXNlcjk1MjQyOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/952428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dharasty", "html_url": "https://github.com/dharasty", "followers_url": "https://api.github.com/users/dharasty/followers", "following_url": "https://api.github.com/users/dharasty/following{/other_user}", "gists_url": "https://api.github.com/users/dharasty/gists{/gist_id}", "starred_url": "https://api.github.com/users/dharasty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dharasty/subscriptions", "organizations_url": "https://api.github.com/users/dharasty/orgs", "repos_url": "https://api.github.com/users/dharasty/repos", "events_url": "https://api.github.com/users/dharasty/events{/privacy}", "received_events_url": "https://api.github.com/users/dharasty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-23T20:16:42Z", "updated_at": "2018-04-23T20:28:40Z", "closed_at": "2018-04-23T20:28:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are cases where I have a dictionary that was decoded from valid JSON, and the JSON happened to be a GeoJSON object.  It would be convenient to have a \"load()\" function that turns those in to instances of the `geojson` classes.\r\n\r\nIn other words, \r\nIf I have this:\r\n```\r\n     # from some other source\r\n    valid_geojson_decode = dict(type=\"Polygon\", coordinates=....}\r\n```\r\nNow I have to do this:\r\n```\r\n     geojson.loads(json.dumps(valid_geojson_decode ))\r\n```\r\nWould like to do this:\r\n```\r\n     geojson.from_dict(valid_geojson_decode )\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/108", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/108/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/108/events", "html_url": "https://github.com/jazzband/geojson/issues/108", "id": 277803606, "node_id": "MDU6SXNzdWUyNzc4MDM2MDY=", "number": 108, "title": "map_coords for tuples", "user": {"login": "JanLikar", "id": 4228250, "node_id": "MDQ6VXNlcjQyMjgyNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/4228250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JanLikar", "html_url": "https://github.com/JanLikar", "followers_url": "https://api.github.com/users/JanLikar/followers", "following_url": "https://api.github.com/users/JanLikar/following{/other_user}", "gists_url": "https://api.github.com/users/JanLikar/gists{/gist_id}", "starred_url": "https://api.github.com/users/JanLikar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JanLikar/subscriptions", "organizations_url": "https://api.github.com/users/JanLikar/orgs", "repos_url": "https://api.github.com/users/JanLikar/repos", "events_url": "https://api.github.com/users/JanLikar/events{/privacy}", "received_events_url": "https://api.github.com/users/JanLikar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-29T15:46:48Z", "updated_at": "2018-05-22T01:25:05Z", "closed_at": "2018-05-22T01:25:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I think it would be very useful to have a function that would work similar to the `geojson.utils.map_coords`, but would call the mapping function with tuples of coordinates.\r\n\r\nThis would, for instance, enable writing simple converters between projections.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/101", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/101/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/101/events", "html_url": "https://github.com/jazzband/geojson/issues/101", "id": 252047860, "node_id": "MDU6SXNzdWUyNTIwNDc4NjA=", "number": 101, "title": "GeometryCollections do not implement `is_valid`", "user": {"login": "hrfuller", "id": 4916212, "node_id": "MDQ6VXNlcjQ5MTYyMTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4916212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hrfuller", "html_url": "https://github.com/hrfuller", "followers_url": "https://api.github.com/users/hrfuller/followers", "following_url": "https://api.github.com/users/hrfuller/following{/other_user}", "gists_url": "https://api.github.com/users/hrfuller/gists{/gist_id}", "starred_url": "https://api.github.com/users/hrfuller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hrfuller/subscriptions", "organizations_url": "https://api.github.com/users/hrfuller/orgs", "repos_url": "https://api.github.com/users/hrfuller/repos", "events_url": "https://api.github.com/users/hrfuller/events{/privacy}", "received_events_url": "https://api.github.com/users/hrfuller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-22T18:27:02Z", "updated_at": "2017-08-30T00:24:14Z", "closed_at": "2017-08-30T00:24:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Would you be interested in a PR to fix this? I would implement it such that a GeometryCollection is valid IFF all its sub geometries are valid.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/100", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/100/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/100/events", "html_url": "https://github.com/jazzband/geojson/issues/100", "id": 251451337, "node_id": "MDU6SXNzdWUyNTE0NTEzMzc=", "number": 100, "title": "Source distribution", "user": {"login": "ocefpaf", "id": 950575, "node_id": "MDQ6VXNlcjk1MDU3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/950575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ocefpaf", "html_url": "https://github.com/ocefpaf", "followers_url": "https://api.github.com/users/ocefpaf/followers", "following_url": "https://api.github.com/users/ocefpaf/following{/other_user}", "gists_url": "https://api.github.com/users/ocefpaf/gists{/gist_id}", "starred_url": "https://api.github.com/users/ocefpaf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ocefpaf/subscriptions", "organizations_url": "https://api.github.com/users/ocefpaf/orgs", "repos_url": "https://api.github.com/users/ocefpaf/repos", "events_url": "https://api.github.com/users/ocefpaf/events{/privacy}", "received_events_url": "https://api.github.com/users/ocefpaf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-19T21:43:54Z", "updated_at": "2017-08-19T21:48:44Z", "closed_at": "2017-08-19T21:48:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to get a source distribution for version 2.0.0 in either PyPI or GitHub. As of now there is only wheels on PyPI.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/99", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/99/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/99/events", "html_url": "https://github.com/jazzband/geojson/issues/99", "id": 247072734, "node_id": "MDU6SXNzdWUyNDcwNzI3MzQ=", "number": 99, "title": "FeatureCollection validation: FeatureObjects in \"features\" should contain members", "user": {"login": "schaemar", "id": 1151556, "node_id": "MDQ6VXNlcjExNTE1NTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1151556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schaemar", "html_url": "https://github.com/schaemar", "followers_url": "https://api.github.com/users/schaemar/followers", "following_url": "https://api.github.com/users/schaemar/following{/other_user}", "gists_url": "https://api.github.com/users/schaemar/gists{/gist_id}", "starred_url": "https://api.github.com/users/schaemar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schaemar/subscriptions", "organizations_url": "https://api.github.com/users/schaemar/orgs", "repos_url": "https://api.github.com/users/schaemar/repos", "events_url": "https://api.github.com/users/schaemar/events{/privacy}", "received_events_url": "https://api.github.com/users/schaemar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-01T13:40:05Z", "updated_at": "2019-06-04T06:52:08Z", "closed_at": "2019-06-04T06:52:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "d = {\r\n\t\"type\" : \"FeatureCollection\",\r\n\t\"features\" : [{}]\r\n}\r\ngeojson.is_valid(d)\r\n\r\nIt's returning \"yes\" but I would expect:\r\n(source:http://geojsonlint.com/)\r\nLine 3: GeoJSON features must have a type=feature member\r\nLine 3: \"properties\" member required\r\nLine 3: \"geometry\" member required", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/97", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/97/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/97/events", "html_url": "https://github.com/jazzband/geojson/issues/97", "id": 225292143, "node_id": "MDU6SXNzdWUyMjUyOTIxNDM=", "number": 97, "title": "Update library to conform to new geojson spec", "user": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-29T23:24:58Z", "updated_at": "2019-04-24T02:16:16Z", "closed_at": "2019-04-24T02:16:16Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "https://tools.ietf.org/html/rfc7946\r\n\r\npreviously, the geojson spec had a 'crs' object type, now it doesn't we should remove it from this project.\r\n\r\nmore info here http://www.macwright.org/2016/11/07/the-geojson-ietf-standard.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/94", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/94/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/94/events", "html_url": "https://github.com/jazzband/geojson/issues/94", "id": 224220183, "node_id": "MDU6SXNzdWUyMjQyMjAxODM=", "number": 94, "title": "Support for Python 3.6", "user": {"login": "udos", "id": 141107, "node_id": "MDQ6VXNlcjE0MTEwNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/141107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/udos", "html_url": "https://github.com/udos", "followers_url": "https://api.github.com/users/udos/followers", "following_url": "https://api.github.com/users/udos/following{/other_user}", "gists_url": "https://api.github.com/users/udos/gists{/gist_id}", "starred_url": "https://api.github.com/users/udos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/udos/subscriptions", "organizations_url": "https://api.github.com/users/udos/orgs", "repos_url": "https://api.github.com/users/udos/repos", "events_url": "https://api.github.com/users/udos/events{/privacy}", "received_events_url": "https://api.github.com/users/udos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-25T17:51:22Z", "updated_at": "2017-04-27T02:26:07Z", "closed_at": "2017-04-27T02:26:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "python 3.6 is out and the lib should support it", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/89", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/89/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/89/events", "html_url": "https://github.com/jazzband/geojson/issues/89", "id": 206443324, "node_id": "MDU6SXNzdWUyMDY0NDMzMjQ=", "number": 89, "title": "setuptools is listed as runtime dependency", "user": {"login": "jochen-ott-by", "id": 22681073, "node_id": "MDQ6VXNlcjIyNjgxMDcz", "avatar_url": "https://avatars3.githubusercontent.com/u/22681073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jochen-ott-by", "html_url": "https://github.com/jochen-ott-by", "followers_url": "https://api.github.com/users/jochen-ott-by/followers", "following_url": "https://api.github.com/users/jochen-ott-by/following{/other_user}", "gists_url": "https://api.github.com/users/jochen-ott-by/gists{/gist_id}", "starred_url": "https://api.github.com/users/jochen-ott-by/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jochen-ott-by/subscriptions", "organizations_url": "https://api.github.com/users/jochen-ott-by/orgs", "repos_url": "https://api.github.com/users/jochen-ott-by/repos", "events_url": "https://api.github.com/users/jochen-ott-by/events{/privacy}", "received_events_url": "https://api.github.com/users/jochen-ott-by/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-09T09:04:54Z", "updated_at": "2017-02-11T16:12:35Z", "closed_at": "2017-02-11T16:12:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `install_requires` argument in `setup.py` lists `setuptools` as dependency. However, only *runtime* dependencies should be included there.\r\n\r\nHowever, having `setuptools` as dependency can be a problem, because installing this package then also installs `setuptools` and the packages `setuptools` depends on, although they are not required. This situation (installing more packages than required) increases the chance of version conflicts.\r\n\r\nI therefore suggest to remove this dependency altogether.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/88", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/88/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/88/events", "html_url": "https://github.com/jazzband/geojson/issues/88", "id": 205049913, "node_id": "MDU6SXNzdWUyMDUwNDk5MTM=", "number": 88, "title": "Computing Bounding Boxes", "user": {"login": "lucagiovagnoli", "id": 4341034, "node_id": "MDQ6VXNlcjQzNDEwMzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4341034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucagiovagnoli", "html_url": "https://github.com/lucagiovagnoli", "followers_url": "https://api.github.com/users/lucagiovagnoli/followers", "following_url": "https://api.github.com/users/lucagiovagnoli/following{/other_user}", "gists_url": "https://api.github.com/users/lucagiovagnoli/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucagiovagnoli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucagiovagnoli/subscriptions", "organizations_url": "https://api.github.com/users/lucagiovagnoli/orgs", "repos_url": "https://api.github.com/users/lucagiovagnoli/repos", "events_url": "https://api.github.com/users/lucagiovagnoli/events{/privacy}", "received_events_url": "https://api.github.com/users/lucagiovagnoli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-03T01:39:53Z", "updated_at": "2017-02-03T18:26:07Z", "closed_at": "2017-02-03T01:41:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to compute bounding boxes for Geometries and/or Features? \r\nIf not, would you consider merging a potential PR adding this functionality? (in utils or even as object property, we can discuss that).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/86", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/86/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/86/events", "html_url": "https://github.com/jazzband/geojson/issues/86", "id": 193036264, "node_id": "MDU6SXNzdWUxOTMwMzYyNjQ=", "number": 86, "title": "Included JSON encoder can't handle Decimal", "user": {"login": "crccheck", "id": 189908, "node_id": "MDQ6VXNlcjE4OTkwOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/189908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crccheck", "html_url": "https://github.com/crccheck", "followers_url": "https://api.github.com/users/crccheck/followers", "following_url": "https://api.github.com/users/crccheck/following{/other_user}", "gists_url": "https://api.github.com/users/crccheck/gists{/gist_id}", "starred_url": "https://api.github.com/users/crccheck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crccheck/subscriptions", "organizations_url": "https://api.github.com/users/crccheck/orgs", "repos_url": "https://api.github.com/users/crccheck/repos", "events_url": "https://api.github.com/users/crccheck/events{/privacy}", "received_events_url": "https://api.github.com/users/crccheck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-12-02T05:16:08Z", "updated_at": "2016-12-03T02:30:34Z", "closed_at": "2016-12-03T02:30:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Example\r\n\r\n```\r\nfrom geojson import Point\r\nprint(Point((Decimal('0'), Decimal('0'))))\r\nTypeError: Decimal('0') is not JSON serializable\r\n```\r\n\r\nExpected behavior:\r\n```\r\nfrom geojson import Point\r\nprint(Point((Decimal('0'), Decimal('0'))))\r\n{\"coordinates\": [\"0\", \"0\"], \"type\": \"Point\"}\r\n```\r\n\r\n#### Workaround\r\n```\r\njson.dumps(Point((Decimal('0'), Decimal('0'))), cls=AnotherJSONEncoder)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/85", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/85/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/85/events", "html_url": "https://github.com/jazzband/geojson/issues/85", "id": 177582728, "node_id": "MDU6SXNzdWUxNzc1ODI3Mjg=", "number": 85, "title": "Refer to RFC 7946 in documentation", "user": {"login": "xorbug", "id": 7740391, "node_id": "MDQ6VXNlcjc3NDAzOTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7740391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xorbug", "html_url": "https://github.com/xorbug", "followers_url": "https://api.github.com/users/xorbug/followers", "following_url": "https://api.github.com/users/xorbug/following{/other_user}", "gists_url": "https://api.github.com/users/xorbug/gists{/gist_id}", "starred_url": "https://api.github.com/users/xorbug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xorbug/subscriptions", "organizations_url": "https://api.github.com/users/xorbug/orgs", "repos_url": "https://api.github.com/users/xorbug/repos", "events_url": "https://api.github.com/users/xorbug/events{/privacy}", "received_events_url": "https://api.github.com/users/xorbug/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-17T14:59:01Z", "updated_at": "2017-04-29T23:23:22Z", "closed_at": "2017-04-29T23:23:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "python-geojson library documentation, here on github and on pypi [0], still refers to the original spec [1], which has been obsoleted by RFC 7946 [2].\nThank you.\n\n[0] https://pypi.python.org/pypi/geojson/\n[1] http://geojson.org/geojson-spec.html\n[2] https://tools.ietf.org/html/rfc7946\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/84", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/84/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/84/events", "html_url": "https://github.com/jazzband/geojson/issues/84", "id": 176902519, "node_id": "MDU6SXNzdWUxNzY5MDI1MTk=", "number": 84, "title": "Add option to allow specifying floating point precision on geojson.dump/geojson.dumps", "user": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1450189756, "node_id": "MDU6TGFiZWwxNDUwMTg5NzU2", "url": "https://api.github.com/repos/jazzband/geojson/labels/enhancement", "name": "enhancement", "color": "bfdadc", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-09-14T13:07:52Z", "updated_at": "2019-07-18T02:42:50Z", "closed_at": "2019-07-18T02:42:50Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Just received an email with this request:\n\n> I would like to suggest that you provide a means to specify the \n> precision of floats that the module outputs, perhaps a format string as \n> an argument to dump()/dumps().\n> \n> A typical coordinate coming from geojson looks like: [-74.4995503571598, \n> 39.42247551734061]. That's 14 decimal places in the fraction, far, far \n> more than I'll ever need considering that 8 places gives 1.1mm \n> precision. I would like to reduce the file size by limiting the \n> precision to a sensible value.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/83", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/83/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/83/events", "html_url": "https://github.com/jazzband/geojson/issues/83", "id": 176371160, "node_id": "MDU6SXNzdWUxNzYzNzExNjA=", "number": 83, "title": "Unicode escape", "user": {"login": "abruski", "id": 3044646, "node_id": "MDQ6VXNlcjMwNDQ2NDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3044646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abruski", "html_url": "https://github.com/abruski", "followers_url": "https://api.github.com/users/abruski/followers", "following_url": "https://api.github.com/users/abruski/following{/other_user}", "gists_url": "https://api.github.com/users/abruski/gists{/gist_id}", "starred_url": "https://api.github.com/users/abruski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abruski/subscriptions", "organizations_url": "https://api.github.com/users/abruski/orgs", "repos_url": "https://api.github.com/users/abruski/repos", "events_url": "https://api.github.com/users/abruski/events{/privacy}", "received_events_url": "https://api.github.com/users/abruski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-12T13:09:08Z", "updated_at": "2016-09-12T18:28:40Z", "closed_at": "2016-09-12T18:28:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there equivalent to ensure_ascii=False in this module? It converts utf-8 text to escape sequence.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/80", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/80/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/80/events", "html_url": "https://github.com/jazzband/geojson/issues/80", "id": 166118883, "node_id": "MDU6SXNzdWUxNjYxMTg4ODM=", "number": 80, "title": "Add __getitem__ and __setitem__ to provide direct access to coordinates", "user": {"login": "lafrech", "id": 1767010, "node_id": "MDQ6VXNlcjE3NjcwMTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1767010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lafrech", "html_url": "https://github.com/lafrech", "followers_url": "https://api.github.com/users/lafrech/followers", "following_url": "https://api.github.com/users/lafrech/following{/other_user}", "gists_url": "https://api.github.com/users/lafrech/gists{/gist_id}", "starred_url": "https://api.github.com/users/lafrech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lafrech/subscriptions", "organizations_url": "https://api.github.com/users/lafrech/orgs", "repos_url": "https://api.github.com/users/lafrech/repos", "events_url": "https://api.github.com/users/lafrech/events{/privacy}", "received_events_url": "https://api.github.com/users/lafrech/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-07-18T15:17:45Z", "updated_at": "2016-07-18T15:49:25Z", "closed_at": "2016-07-18T15:30:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Assuming\n\n``` python\n    p = geojson.Point((-115.81, 37.24))\n```\n\nIf would be convenient to be able to write\n\n``` python\n    print(p[0])\n```\n\nrather than \n\n``` python\n    print(p['coordinates'][0])\n```\n\nIs this something you would consider?\n\nI can send a PR.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/79", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/79/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/79/events", "html_url": "https://github.com/jazzband/geojson/issues/79", "id": 165881700, "node_id": "MDU6SXNzdWUxNjU4ODE3MDA=", "number": 79, "title": "Point with 3 coordinates or more does not pass validation while valid as per the GeoJSON specs", "user": {"login": "lafrech", "id": 1767010, "node_id": "MDQ6VXNlcjE3NjcwMTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1767010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lafrech", "html_url": "https://github.com/lafrech", "followers_url": "https://api.github.com/users/lafrech/followers", "following_url": "https://api.github.com/users/lafrech/following{/other_user}", "gists_url": "https://api.github.com/users/lafrech/gists{/gist_id}", "starred_url": "https://api.github.com/users/lafrech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lafrech/subscriptions", "organizations_url": "https://api.github.com/users/lafrech/orgs", "repos_url": "https://api.github.com/users/lafrech/repos", "events_url": "https://api.github.com/users/lafrech/events{/privacy}", "received_events_url": "https://api.github.com/users/lafrech/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 66253032, "node_id": "MDU6TGFiZWw2NjI1MzAzMg==", "url": "https://api.github.com/repos/jazzband/geojson/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-07-15T21:31:58Z", "updated_at": "2017-04-25T01:19:43Z", "closed_at": "2017-04-25T01:19:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Please excuse me if I'm mistaken, but as I was reading the GeoJSON specs, I came accross a paragraph mentioning positions with [more than two elements](http://geojson.org/geojson-spec.html#positions):\n\n> A position is represented by an array of numbers. There must be at least two elements, and may be more. The order of elements must follow x, y, z order (easting, northing, altitude for coordinates in a projected coordinate reference system, or longitude, latitude, altitude for coordinates in a geographic coordinate reference system). Any number of additional elements are allowed -- interpretation and meaning of additional elements is beyond the scope of this specification.\n\nIn python-geojson's validator, this is explicitly forbidden:\n\n[code](https://github.com/frewsxcv/python-geojson/blob/master/geojson/validation.py#L28):\n\n``` python\n    if isinstance(obj, geojson.Point):\n        if len(obj['coordinates']) != 2:\n            return output('the \"coordinates\" member must be a single position')\n```\n\n[tests](https://github.com/frewsxcv/python-geojson/blob/master/tests/test_validation.py#L28):\n\n``` python\n    def test_invalid_point(self):\n        point = geojson.Point((10, 20, 30))\n        self.assertEqual(is_valid(point)['valid'], NO)\n```\n\nIf my understanding is correct, the validator should allow any number of elements greater than of equal to two.\n\nThe same change was made in MongoDB:\n- https://jira.mongodb.org/browse/SERVER-9220\n- https://github.com/mongodb/mongo/commit/bd489b1c2c76a7ee84105db758839c4d47ffcbcb\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/77", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/77/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/77/events", "html_url": "https://github.com/jazzband/geojson/issues/77", "id": 153630049, "node_id": "MDU6SXNzdWUxNTM2MzAwNDk=", "number": 77, "title": "Utility method to calculate area from geometry", "user": {"login": "nchammas", "id": 1039369, "node_id": "MDQ6VXNlcjEwMzkzNjk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1039369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nchammas", "html_url": "https://github.com/nchammas", "followers_url": "https://api.github.com/users/nchammas/followers", "following_url": "https://api.github.com/users/nchammas/following{/other_user}", "gists_url": "https://api.github.com/users/nchammas/gists{/gist_id}", "starred_url": "https://api.github.com/users/nchammas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nchammas/subscriptions", "organizations_url": "https://api.github.com/users/nchammas/orgs", "repos_url": "https://api.github.com/users/nchammas/repos", "events_url": "https://api.github.com/users/nchammas/events{/privacy}", "received_events_url": "https://api.github.com/users/nchammas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-08T02:10:58Z", "updated_at": "2016-05-08T16:28:16Z", "closed_at": "2016-05-08T16:12:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be appropriate to add a utility method to this library that calculates the area of GeoJSON polygons and multipolygons?\n\nI can port it from [this Mapbox Javascript library](https://github.com/mapbox/geojson-area).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/75", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/75/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/75/events", "html_url": "https://github.com/jazzband/geojson/issues/75", "id": 150567158, "node_id": "MDU6SXNzdWUxNTA1NjcxNTg=", "number": 75, "title": "geojson.map_coords.__doc___ confusing", "user": {"login": "disarticulate", "id": 17464125, "node_id": "MDQ6VXNlcjE3NDY0MTI1", "avatar_url": "https://avatars1.githubusercontent.com/u/17464125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/disarticulate", "html_url": "https://github.com/disarticulate", "followers_url": "https://api.github.com/users/disarticulate/followers", "following_url": "https://api.github.com/users/disarticulate/following{/other_user}", "gists_url": "https://api.github.com/users/disarticulate/gists{/gist_id}", "starred_url": "https://api.github.com/users/disarticulate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/disarticulate/subscriptions", "organizations_url": "https://api.github.com/users/disarticulate/orgs", "repos_url": "https://api.github.com/users/disarticulate/repos", "events_url": "https://api.github.com/users/disarticulate/events{/privacy}", "received_events_url": "https://api.github.com/users/disarticulate/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-04-23T15:36:35Z", "updated_at": "2016-04-24T16:26:49Z", "closed_at": "2016-04-24T16:22:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm doing this test case:\n`print(geojson.map_coords.__doc__)`\n\n> ```\n> Returns the coordinates from a Geometry after applying the provided\n> function to the tuples.\n> :param func: Function to apply to tuples\n> :type func: function\n> :param obj: A geometry or feature to extract the coordinates from.\n> :type obj: Point, LineString, MultiPoint, MultiLineString, Polygon,\n> MultiPolygon\n> :return: The result of applying the function to each coordinate array.\n> :rtype: list\n> :raises ValueError: if the provided object is not a Geometry.\n> ```\n\n```\n     for item in geoj:\n         print(item)\n         #geoj_proj = geojson.utils.map_coords(lambda x: conversions.LFtoLongLat(x), item)\n         geoj_proj = geojson.utils.map_coords(lambda x: print(x), item)\n         break\n```\n\n> {\"coordinates\": [[4493.178634548326, 3454.400914449211], [4483.730689118465, 3449.566045195004], [4500, 3452.474407915964]], \"type\": \"LineString\"}\n> 4493.178634548326\n> 3454.400914449211\n> 4483.730689118465\n> 3449.566045195004\n> 4500\n> 3452.474407915964\n\nI expected print(x) to bu a tuple? As the doc says 'after applying the provided function to the tuples. Am I missing something? My conversions.LFtoLongLat expect a tuple, as I'm doing an affine transformation.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/73", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/73/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/73/events", "html_url": "https://github.com/jazzband/geojson/issues/73", "id": 129524933, "node_id": "MDU6SXNzdWUxMjk1MjQ5MzM=", "number": 73, "title": "Add a __version__ attribute.", "user": {"login": "ChrisBarker-NOAA", "id": 916576, "node_id": "MDQ6VXNlcjkxNjU3Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/916576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisBarker-NOAA", "html_url": "https://github.com/ChrisBarker-NOAA", "followers_url": "https://api.github.com/users/ChrisBarker-NOAA/followers", "following_url": "https://api.github.com/users/ChrisBarker-NOAA/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisBarker-NOAA/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisBarker-NOAA/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisBarker-NOAA/subscriptions", "organizations_url": "https://api.github.com/users/ChrisBarker-NOAA/orgs", "repos_url": "https://api.github.com/users/ChrisBarker-NOAA/repos", "events_url": "https://api.github.com/users/ChrisBarker-NOAA/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisBarker-NOAA/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-28T17:50:34Z", "updated_at": "2016-01-28T20:33:11Z", "closed_at": "2016-01-28T20:30:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "It's really nice if packages maintain a **version** attribute -- not strictly required, but a pretty common convention these days.\n\nYou might want to use versioneer to keep everyting in sync:\n\nhttps://github.com/warner/python-versioneer\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/71", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/71/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/71/events", "html_url": "https://github.com/jazzband/geojson/issues/71", "id": 119327967, "node_id": "MDU6SXNzdWUxMTkzMjc5Njc=", "number": 71, "title": "Circular reference on module import", "user": {"login": "tiktaalik-dev", "id": 5922428, "node_id": "MDQ6VXNlcjU5MjI0Mjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5922428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiktaalik-dev", "html_url": "https://github.com/tiktaalik-dev", "followers_url": "https://api.github.com/users/tiktaalik-dev/followers", "following_url": "https://api.github.com/users/tiktaalik-dev/following{/other_user}", "gists_url": "https://api.github.com/users/tiktaalik-dev/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiktaalik-dev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiktaalik-dev/subscriptions", "organizations_url": "https://api.github.com/users/tiktaalik-dev/orgs", "repos_url": "https://api.github.com/users/tiktaalik-dev/repos", "events_url": "https://api.github.com/users/tiktaalik-dev/events{/privacy}", "received_events_url": "https://api.github.com/users/tiktaalik-dev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "rayrrr", "id": 7869818, "node_id": "MDQ6VXNlcjc4Njk4MTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7869818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rayrrr", "html_url": "https://github.com/rayrrr", "followers_url": "https://api.github.com/users/rayrrr/followers", "following_url": "https://api.github.com/users/rayrrr/following{/other_user}", "gists_url": "https://api.github.com/users/rayrrr/gists{/gist_id}", "starred_url": "https://api.github.com/users/rayrrr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rayrrr/subscriptions", "organizations_url": "https://api.github.com/users/rayrrr/orgs", "repos_url": "https://api.github.com/users/rayrrr/repos", "events_url": "https://api.github.com/users/rayrrr/events{/privacy}", "received_events_url": "https://api.github.com/users/rayrrr/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rayrrr", "id": 7869818, "node_id": "MDQ6VXNlcjc4Njk4MTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7869818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rayrrr", "html_url": "https://github.com/rayrrr", "followers_url": "https://api.github.com/users/rayrrr/followers", "following_url": "https://api.github.com/users/rayrrr/following{/other_user}", "gists_url": "https://api.github.com/users/rayrrr/gists{/gist_id}", "starred_url": "https://api.github.com/users/rayrrr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rayrrr/subscriptions", "organizations_url": "https://api.github.com/users/rayrrr/orgs", "repos_url": "https://api.github.com/users/rayrrr/repos", "events_url": "https://api.github.com/users/rayrrr/events{/privacy}", "received_events_url": "https://api.github.com/users/rayrrr/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2015-11-29T01:03:10Z", "updated_at": "2019-07-25T18:09:40Z", "closed_at": "2019-07-25T18:09:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello there,\n\nI'm experiencing an endless sequence of Import Errors because there's several circular references between base.py, codec.py, factory.py and mapping.py.\n\nI'm at the end of my tether trying to make them work as they are so I reckon I'll just merge those files into one.\n\nI'd recommend for you to rearrange the classes in a way that prevent this from happening.\n\nAnyway, thanks for making available this library! :-)\n\nCheers,\nRodrigo Gambra\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/61", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/61/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/61/events", "html_url": "https://github.com/jazzband/geojson/issues/61", "id": 93553651, "node_id": "MDU6SXNzdWU5MzU1MzY1MQ==", "number": 61, "title": "tests: include data.geojson into the PyPI distfile", "user": {"login": "petrrr", "id": 3065632, "node_id": "MDQ6VXNlcjMwNjU2MzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3065632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrrr", "html_url": "https://github.com/petrrr", "followers_url": "https://api.github.com/users/petrrr/followers", "following_url": "https://api.github.com/users/petrrr/following{/other_user}", "gists_url": "https://api.github.com/users/petrrr/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrrr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrrr/subscriptions", "organizations_url": "https://api.github.com/users/petrrr/orgs", "repos_url": "https://api.github.com/users/petrrr/repos", "events_url": "https://api.github.com/users/petrrr/events{/privacy}", "received_events_url": "https://api.github.com/users/petrrr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-07T15:09:34Z", "updated_at": "2015-07-13T13:59:24Z", "closed_at": "2015-07-13T13:54:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I realise that `data.geojson` seems not to be part of the PyPI distfile. This results in one test to fail, so I'd propose to include this file as well. I guess the fix is quick and just about modifying the `MANIFEST.in`. I also would propose to bug fix release after fixing this. \n\n```\nsudo nosetests .\n..................E........................\n======================================================================\nERROR: test_unicode_properties (tests.test_features.FeaturesTest)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/opt/local/var/macports/build/_Users_petr_sandbox_SVN-repos_macports_dports_python_py-geojson/py27-geojson/work/geojson-1.2.1/tests/test_features.py\", line 37, in test_unicode_properties\n    with open(\"tests/data.geojson\") as file_:\nIOError: [Errno 2] No such file or directory: 'tests/data.geojson'\n\n----------------------------------------------------------------------\nRan 43 tests in 0.035s\n\nFAILED (errors=1)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/59", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/59/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/59/events", "html_url": "https://github.com/jazzband/geojson/issues/59", "id": 91442162, "node_id": "MDU6SXNzdWU5MTQ0MjE2Mg==", "number": 59, "title": "Generate random geojson", "user": {"login": "rowanwins", "id": 6735870, "node_id": "MDQ6VXNlcjY3MzU4NzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/6735870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rowanwins", "html_url": "https://github.com/rowanwins", "followers_url": "https://api.github.com/users/rowanwins/followers", "following_url": "https://api.github.com/users/rowanwins/following{/other_user}", "gists_url": "https://api.github.com/users/rowanwins/gists{/gist_id}", "starred_url": "https://api.github.com/users/rowanwins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rowanwins/subscriptions", "organizations_url": "https://api.github.com/users/rowanwins/orgs", "repos_url": "https://api.github.com/users/rowanwins/repos", "events_url": "https://api.github.com/users/rowanwins/events{/privacy}", "received_events_url": "https://api.github.com/users/rowanwins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-06-27T10:09:03Z", "updated_at": "2015-08-11T13:24:03Z", "closed_at": "2015-08-11T13:24:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey everyone,\n\nThanks for a great python library. Just wondering if you'd be interested in extending it to support generating random features?  eg create me a linestring. \n\n```\n>>> from geojson import LineString\n\n>>> Random_LineString() \n{\"coordinates\": [[8.91..., 44.407...], [8.92..., 44.407...]], \"type\": \"LineString\"}\n```\n\nI'd be happy to attempt to make a start even though I dont entriely know what Im getting myself in for!\n\nCheers,\nRowan\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/55", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/55/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/55/events", "html_url": "https://github.com/jazzband/geojson/issues/55", "id": 88177406, "node_id": "MDU6SXNzdWU4ODE3NzQwNg==", "number": 55, "title": "Allow constructing objects like Feature(feature)", "user": {"login": "hyperknot", "id": 494223, "node_id": "MDQ6VXNlcjQ5NDIyMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/494223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hyperknot", "html_url": "https://github.com/hyperknot", "followers_url": "https://api.github.com/users/hyperknot/followers", "following_url": "https://api.github.com/users/hyperknot/following{/other_user}", "gists_url": "https://api.github.com/users/hyperknot/gists{/gist_id}", "starred_url": "https://api.github.com/users/hyperknot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hyperknot/subscriptions", "organizations_url": "https://api.github.com/users/hyperknot/orgs", "repos_url": "https://api.github.com/users/hyperknot/repos", "events_url": "https://api.github.com/users/hyperknot/events{/privacy}", "received_events_url": "https://api.github.com/users/hyperknot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-14T12:28:58Z", "updated_at": "2017-09-17T14:46:14Z", "closed_at": "2017-09-17T14:46:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In Python most object support creating a new object from an old one, (AFAIK by doing a copy operation), by constructing it in the form of:\n\n```\na = dict(...)\nb = dict(a)\n```\n\nIn geojson it is not supported. If I try to do:\n\n```\nf = Feature(...)\nf2 = Feature(f)\n```\n\nIt creates a broken object like:\n\n```\n{\"geometry\": null, \"id\": {\"geometry\": null, \"properties\": {}, \"type\": \"Feature\"}, \"properties\": {}, \"type\": \"Feature\"}\n```\n\nThis would be especially important as geojson is inheriting from `dict`, so ideally it should behave in a similar way.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/50", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/50/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/50/events", "html_url": "https://github.com/jazzband/geojson/issues/50", "id": 50298040, "node_id": "MDU6SXNzdWU1MDI5ODA0MA==", "number": 50, "title": "consider PEP 257 compliance", "user": {"login": "groteworld", "id": 1421810, "node_id": "MDQ6VXNlcjE0MjE4MTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1421810?v=4", "gravatar_id": "", "url": "https://api.github.com/users/groteworld", "html_url": "https://github.com/groteworld", "followers_url": "https://api.github.com/users/groteworld/followers", "following_url": "https://api.github.com/users/groteworld/following{/other_user}", "gists_url": "https://api.github.com/users/groteworld/gists{/gist_id}", "starred_url": "https://api.github.com/users/groteworld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/groteworld/subscriptions", "organizations_url": "https://api.github.com/users/groteworld/orgs", "repos_url": "https://api.github.com/users/groteworld/repos", "events_url": "https://api.github.com/users/groteworld/events{/privacy}", "received_events_url": "https://api.github.com/users/groteworld/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-11-27T14:42:02Z", "updated_at": "2015-01-16T01:58:04Z", "closed_at": "2015-01-16T01:58:04Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Some people don't like it (or don't care) and some do, so I wanted your opinion on being [PEP 257](https://www.python.org/dev/peps/pep-0257/) complaint before taking the time to write all the doc strings.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/49", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/49/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/49/events", "html_url": "https://github.com/jazzband/geojson/issues/49", "id": 49616096, "node_id": "MDU6SXNzdWU0OTYxNjA5Ng==", "number": 49, "title": "Numpy scalars don't work in feature properties", "user": {"login": "phobson", "id": 1163939, "node_id": "MDQ6VXNlcjExNjM5Mzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1163939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phobson", "html_url": "https://github.com/phobson", "followers_url": "https://api.github.com/users/phobson/followers", "following_url": "https://api.github.com/users/phobson/following{/other_user}", "gists_url": "https://api.github.com/users/phobson/gists{/gist_id}", "starred_url": "https://api.github.com/users/phobson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phobson/subscriptions", "organizations_url": "https://api.github.com/users/phobson/orgs", "repos_url": "https://api.github.com/users/phobson/repos", "events_url": "https://api.github.com/users/phobson/events{/privacy}", "received_events_url": "https://api.github.com/users/phobson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-11-20T20:48:03Z", "updated_at": "2014-11-21T01:50:14Z", "closed_at": "2014-11-21T01:47:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed that the `json` library in Python 3.3 (and likely other versions) isn't playing nice with \nnumpy scalars. Given the GIS ecosystem's affinity for numpy, I'm curious if:\n1. if this has come up before and \n2. it's something we could shield users from (via some form of sanitizer)\n\nConsider the following:\n\n``` python\nimport numpy\nimport geojson\n\npnt = geojson.Point(coordinates=(15.7, 12.2))\nprops_np = {'area': numpy.float64(20.5), 'sections': numpy.int64(100), 'name': 'Test Area'}\nprops_std = {'area': 20.5, 'sections': 100, 'name': 'Test Area'}\n\nfeat_np = geojson.Feature(id=0, geometry=pnt, properties=props_np)\nfeat_std = geojson.Feature(id=0, geometry=pnt, properties=props_std)\n\nprint(feat_std) # works fine\nprint(feat_np) \n{\"geometry\": {\"coordinates\": [15.7, 12.2], \"type\": \"Point\"}, \"id\": 0, \"properties\": {\"area\": 20.5, \"name\": \"Test Area\", \"sections\": 100}, \"type\": \"Feature\"}\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-15-beb75a42ffbc> in <module>()\n     17 \n     18 print(feat_std)\n---> 19 print(feat_np)\n------------------------\n... [yada yada]\nC:\\Miniconda3\\envs\\pnr\\lib\\json\\encoder.py in encode(self, o)\n    190         # exceptions aren't as detailed.  The list call should be roughly\n    191         # equivalent to the PySequence_Fast that ''.join() would do.\n--> 192         chunks = self.iterencode(o, _one_shot=True)\n    193         if not isinstance(chunks, (list, tuple)):\n    194             chunks = list(chunks)\n\nC:\\Miniconda3\\envs\\pnr\\lib\\json\\encoder.py in iterencode(self, o, _one_shot)\n    248                 self.key_separator, self.item_separator, self.sort_keys,\n    249                 self.skipkeys, _one_shot)\n--> 250         return _iterencode(o, 0)\n    251 \n    252 def _make_iterencode(markers, _default, _encoder, _indent, _floatstr,\n\nC:\\Miniconda3\\envs\\pnr\\lib\\json\\encoder.py in default(self, o)\n    171 \n    172         \"\"\"\n--> 173         raise TypeError(repr(o) + \" is not JSON serializable\")\n    174 \n    175     def encode(self, o):\n\nTypeError: 100 is not JSON serializable\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/44", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/44/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/44/events", "html_url": "https://github.com/jazzband/geojson/issues/44", "id": 44925601, "node_id": "MDU6SXNzdWU0NDkyNTYwMQ==", "number": 44, "title": "Add PEP8 (or flake8) to .travis.yml", "user": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-10-05T19:15:23Z", "updated_at": "2014-10-06T23:04:24Z", "closed_at": "2014-10-06T23:04:24Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/41", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/41/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/41/events", "html_url": "https://github.com/jazzband/geojson/issues/41", "id": 44389897, "node_id": "MDU6SXNzdWU0NDM4OTg5Nw==", "number": 41, "title": "Stop allowing property access via __getitem__/__setitem__", "user": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-09-30T04:11:26Z", "updated_at": "2017-09-16T21:04:57Z", "closed_at": "2017-09-16T21:04:57Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Backwards incompatible change\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/38", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/38/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/38/events", "html_url": "https://github.com/jazzband/geojson/issues/38", "id": 44105123, "node_id": "MDU6SXNzdWU0NDEwNTEyMw==", "number": 38, "title": "geojson.load() chokes on non-ascii property keys", "user": {"login": "mharnold", "id": 796372, "node_id": "MDQ6VXNlcjc5NjM3Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/796372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mharnold", "html_url": "https://github.com/mharnold", "followers_url": "https://api.github.com/users/mharnold/followers", "following_url": "https://api.github.com/users/mharnold/following{/other_user}", "gists_url": "https://api.github.com/users/mharnold/gists{/gist_id}", "starred_url": "https://api.github.com/users/mharnold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mharnold/subscriptions", "organizations_url": "https://api.github.com/users/mharnold/orgs", "repos_url": "https://api.github.com/users/mharnold/repos", "events_url": "https://api.github.com/users/mharnold/events{/privacy}", "received_events_url": "https://api.github.com/users/mharnold/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-09-26T20:53:14Z", "updated_at": "2014-09-30T14:17:12Z", "closed_at": "2014-09-29T04:59:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following input data causes geojson.load() to fail with:\n\n```\n  File \"/usr/local/lib/python2.7/site-packages/geojson/base.py\", line 47, in <genexpr>\n    d = dict((str(k), mapping[k]) for k in mapping)\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\xe4' in position 9: ordinal not in range(128)\n```\n\ndata.geojson:\n\n``` json\n{\n  \"features\": [\n    {\n      \"geometry\": {\n        \"coordinates\": [\n          [\n            700251.2679938598, \n            6154023.085332587\n          ], \n      [\n            700516.3475396622, \n            6155237.880750462\n          ]\n        ], \n        \"type\": \"LineString\"\n      }, \n      \"id\": 3498, \n      \"properties\": {\n        \"osm$highway\": \"motorway\", \n        \"osm$stamv\\u00e4g\": \"yes\", \n        \"osm$way_id\": 2036271 \n      }, \n      \"type\": \"Feature\"\n    }\n  ],\n\"type\": \"FeatureCollection\"\n}\n```\n\nbug.py:\n\n``` python\nimport geojson\nfname = 'data.geojson'\nf = open(fname,'r')\ngeo = geojson.load(f)\n```\n\nThe following fix works for me:\nIn site-packages/geojson/base.py, in the to_instance method of GeoJson replace:\n\n``` python\n       d = dict((str(k), mapping[k]) for k in mapping)\n```\n\nwith:\n\n``` python\n       #d = dict((str(k), mapping[k]) for k in mapping)\n        d = {}\n        for k in mapping:\n            try:\n                str_key = str(k)\n            except (UnicodeEncodeError):\n                str_key = unicode(k)\n            d[str_key] = mapping[k]\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/29", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/29/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/29/events", "html_url": "https://github.com/jazzband/geojson/issues/29", "id": 30258314, "node_id": "MDU6SXNzdWUzMDI1ODMxNA==", "number": 29, "title": "geojson.Poylgon is not producing 100% correct output", "user": {"login": "tleeuwenburg", "id": 60954, "node_id": "MDQ6VXNlcjYwOTU0", "avatar_url": "https://avatars0.githubusercontent.com/u/60954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tleeuwenburg", "html_url": "https://github.com/tleeuwenburg", "followers_url": "https://api.github.com/users/tleeuwenburg/followers", "following_url": "https://api.github.com/users/tleeuwenburg/following{/other_user}", "gists_url": "https://api.github.com/users/tleeuwenburg/gists{/gist_id}", "starred_url": "https://api.github.com/users/tleeuwenburg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tleeuwenburg/subscriptions", "organizations_url": "https://api.github.com/users/tleeuwenburg/orgs", "repos_url": "https://api.github.com/users/tleeuwenburg/repos", "events_url": "https://api.github.com/users/tleeuwenburg/events{/privacy}", "received_events_url": "https://api.github.com/users/tleeuwenburg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-03-26T22:27:52Z", "updated_at": "2014-03-26T23:10:19Z", "closed_at": "2014-03-26T23:10:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a list of (lon, lat) values, which I'm loading in via\n\nfoo = geojson.Polygon(points)\n\nWhen I use geojson.dumps, I get something like:\n\n{\"type\": \"Polygon\", \"coordinates\": [[152.59136962890625, -28.313671112060547], [152.63580322265625, -28.355209350585938], [152.82142639160156, -28.509435653686523], [153.00906372070312, -28.665510177612305], [153.18821716308594, -28.82417106628418], [152.59136962890625, -28.313671112060547]]}\n\nI have removed a bunch of intermediate points from this snippet.\n\nI then used http://geojsonlint.com/ to validate the output. I got \n\n\"Failed to validate field 'coordinates' list schema: Length of value [152.59136962890625, -28.313671112060547] for list item must be greater than or equal to 4\"\n\nThe issue appears to be some missing square brackets. If I put the coordinate list inside another list, i.e. open with [[[ and close with ]]], then it seems to work fine. \n\nIt seems like this might be an error with geojson rather than something I'm doing wrong. I then tried calling geojson with the same trick, wrapping my list of points inside another list. This seemed to work pretty well. So I've got a workaround, but it seems like maybe geojson should or could notice the issue and report the exception.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/28", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/28/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/28/events", "html_url": "https://github.com/jazzband/geojson/issues/28", "id": 30085234, "node_id": "MDU6SXNzdWUzMDA4NTIzNA==", "number": 28, "title": "Fix VersionConflict errors present in Travis CI", "user": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 66253032, "node_id": "MDU6TGFiZWw2NjI1MzAzMg==", "url": "https://api.github.com/repos/jazzband/geojson/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-03-24T23:31:07Z", "updated_at": "2014-04-20T04:41:04Z", "closed_at": "2014-04-20T04:41:04Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "More information in #27 \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/26", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/26/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/26/events", "html_url": "https://github.com/jazzband/geojson/issues/26", "id": 29493220, "node_id": "MDU6SXNzdWUyOTQ5MzIyMA==", "number": 26, "title": "Too strict nose dependency", "user": {"login": "dezhin", "id": 237320, "node_id": "MDQ6VXNlcjIzNzMyMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/237320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dezhin", "html_url": "https://github.com/dezhin", "followers_url": "https://api.github.com/users/dezhin/followers", "following_url": "https://api.github.com/users/dezhin/following{/other_user}", "gists_url": "https://api.github.com/users/dezhin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dezhin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dezhin/subscriptions", "organizations_url": "https://api.github.com/users/dezhin/orgs", "repos_url": "https://api.github.com/users/dezhin/repos", "events_url": "https://api.github.com/users/dezhin/events{/privacy}", "received_events_url": "https://api.github.com/users/dezhin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-03-15T14:06:29Z", "updated_at": "2014-03-16T14:28:29Z", "closed_at": "2014-03-16T14:28:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dependency `setup_requires=['nose==1.3.0', ]` in setup.py leads to the fact that the package can not be installed in case environment has newer version of nose.\n\nFor example: package `foo` have `install_requires=['nose', 'geojson']`. You can't install this package using `pip install foo`, because pip firstly installs `nose==1.3.1` from pypi and after that can't install `geojson` within version conflict.\n\nTo resolve this issue I suggest:\n1. Remove `setup_requires=['nose==1.3.0', ]` at all, because `nose` required only for running tests. Tests can be started using `python setup.py nosetests`.\n2. In tests_require change `nose==1.3.0` to `nose>=1.3` and `coverage==3.6` to `coverage>=3.6`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/25", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/25/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/25/events", "html_url": "https://github.com/jazzband/geojson/issues/25", "id": 28471335, "node_id": "MDU6SXNzdWUyODQ3MTMzNQ==", "number": 25, "title": "Document CRS constructors", "user": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-02-28T01:26:17Z", "updated_at": "2019-04-23T13:55:18Z", "closed_at": "2019-04-23T13:55:11Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/24", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/24/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/24/events", "html_url": "https://github.com/jazzband/geojson/issues/24", "id": 28470253, "node_id": "MDU6SXNzdWUyODQ3MDI1Mw==", "number": 24, "title": "CRS on a FeatureCollection is not read or written", "user": {"login": "micolous", "id": 246847, "node_id": "MDQ6VXNlcjI0Njg0Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/246847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micolous", "html_url": "https://github.com/micolous", "followers_url": "https://api.github.com/users/micolous/followers", "following_url": "https://api.github.com/users/micolous/following{/other_user}", "gists_url": "https://api.github.com/users/micolous/gists{/gist_id}", "starred_url": "https://api.github.com/users/micolous/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micolous/subscriptions", "organizations_url": "https://api.github.com/users/micolous/orgs", "repos_url": "https://api.github.com/users/micolous/repos", "events_url": "https://api.github.com/users/micolous/events{/privacy}", "received_events_url": "https://api.github.com/users/micolous/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-02-28T01:00:26Z", "updated_at": "2014-02-28T01:29:08Z", "closed_at": "2014-02-28T01:29:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is existing code inside `python-geojson` in order to handle a CRS attached to an individual point.\n\nThere is no way to access or write the CRS for an entire `FeatureCollection`.  This information is presently dropped when read, and it is not possible to write this back to a file.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/21", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/21/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/21/events", "html_url": "https://github.com/jazzband/geojson/issues/21", "id": 24663845, "node_id": "MDU6SXNzdWUyNDY2Mzg0NQ==", "number": 21, "title": "Error when importing native Python JSON", "user": {"login": "joakimfors", "id": 1665340, "node_id": "MDQ6VXNlcjE2NjUzNDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1665340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joakimfors", "html_url": "https://github.com/joakimfors", "followers_url": "https://api.github.com/users/joakimfors/followers", "following_url": "https://api.github.com/users/joakimfors/following{/other_user}", "gists_url": "https://api.github.com/users/joakimfors/gists{/gist_id}", "starred_url": "https://api.github.com/users/joakimfors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joakimfors/subscriptions", "organizations_url": "https://api.github.com/users/joakimfors/orgs", "repos_url": "https://api.github.com/users/joakimfors/repos", "events_url": "https://api.github.com/users/joakimfors/events{/privacy}", "received_events_url": "https://api.github.com/users/joakimfors/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-12-21T11:40:00Z", "updated_at": "2013-12-21T15:42:32Z", "closed_at": "2013-12-21T15:42:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get the following error when using an app that depens on GeoJSON:\n\n```\n\u2026\nFile '/srv/sites/tasks.openstreetmap.se/env/local/lib/python2.7/site-packages/papyrus-0.7-py2.7.egg/papyrus/renderers.py', line 73 in _render\n  ret = geojson.dumps(value, cls=Encoder, use_decimal=True)\nFile '/srv/sites/tasks.openstreetmap.se/env/local/lib/python2.7/site-packages/geojson/codec.py', line 30 in dumps\n  cls=cls, allow_nan=allow_nan, **kwargs)\nFile '/usr/lib/python2.7/json/__init__.py', line 238 in dumps\n  **kw).encode(obj)\nTypeError: __init__() got an unexpected keyword argument 'use_decimal'\n```\n\nChanging \"import json\" to \"import simplejson as json\" on the first line in geojson/codec.py fixes the problem. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/15", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/15/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/15/events", "html_url": "https://github.com/jazzband/geojson/issues/15", "id": 19026374, "node_id": "MDU6SXNzdWUxOTAyNjM3NA==", "number": 15, "title": "Convert directory full of doc tests to normal unit tests", "user": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-09-05T07:12:56Z", "updated_at": "2014-04-20T04:41:16Z", "closed_at": "2014-04-20T04:41:16Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/14", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/14/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/14/events", "html_url": "https://github.com/jazzband/geojson/issues/14", "id": 19024778, "node_id": "MDU6SXNzdWUxOTAyNDc3OA==", "number": 14, "title": "Create decent documentation", "user": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-09-05T06:11:12Z", "updated_at": "2013-11-16T21:30:00Z", "closed_at": "2013-11-16T21:30:00Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/6", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/6/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/6/events", "html_url": "https://github.com/jazzband/geojson/issues/6", "id": 16561799, "node_id": "MDU6SXNzdWUxNjU2MTc5OQ==", "number": 6, "title": "Improve the documentation", "user": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2013-07-10T05:54:38Z", "updated_at": "2013-08-07T23:05:59Z", "closed_at": "2013-07-29T19:18:34Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Right now the documentation is relatively unorganized and not entirely informative. Possible suggestions for improvement include conversion to markdown (for use on GitHub) or rst (for use on readthedocs). Additionally, a complete page documenting the API would greatly benefit new users. As per [this comment](https://github.com/sgillies/geojson/pull/5#issuecomment-20446501) I'd be willing to take this task\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/4", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/4/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/4/events", "html_url": "https://github.com/jazzband/geojson/issues/4", "id": 11833574, "node_id": "MDU6SXNzdWUxMTgzMzU3NA==", "number": 4, "title": "Please update PyPi", "user": {"login": "sfllaw", "id": 155692, "node_id": "MDQ6VXNlcjE1NTY5Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/155692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfllaw", "html_url": "https://github.com/sfllaw", "followers_url": "https://api.github.com/users/sfllaw/followers", "following_url": "https://api.github.com/users/sfllaw/following{/other_user}", "gists_url": "https://api.github.com/users/sfllaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfllaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfllaw/subscriptions", "organizations_url": "https://api.github.com/users/sfllaw/orgs", "repos_url": "https://api.github.com/users/sfllaw/repos", "events_url": "https://api.github.com/users/sfllaw/events{/privacy}", "received_events_url": "https://api.github.com/users/sfllaw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "sgillies", "id": 33697, "node_id": "MDQ6VXNlcjMzNjk3", "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sgillies", "id": 33697, "node_id": "MDQ6VXNlcjMzNjk3", "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/jazzband/geojson/milestones/1", "html_url": "https://github.com/jazzband/geojson/milestone/1", "labels_url": "https://api.github.com/repos/jazzband/geojson/milestones/1/labels", "id": 285893, "node_id": "MDk6TWlsZXN0b25lMjg1ODkz", "number": 1, "title": "1.1", "description": null, "creator": {"login": "sgillies", "id": 33697, "node_id": "MDQ6VXNlcjMzNjk3", "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "closed", "created_at": "2013-03-11T17:18:07Z", "updated_at": "2013-11-17T07:20:25Z", "due_on": null, "closed_at": "2013-11-17T06:16:44Z"}, "comments": 2, "created_at": "2013-03-09T02:48:33Z", "updated_at": "2013-11-17T07:20:25Z", "closed_at": "2013-11-17T07:20:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please release a new version of geojson. The one on PyPi is missing a lot of the improvements you have on your tree.\n\nThanks a lot!\n-- Simon\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/2", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/2/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/2/events", "html_url": "https://github.com/jazzband/geojson/issues/2", "id": 4838250, "node_id": "MDU6SXNzdWU0ODM4MjUw", "number": 2, "title": "Don't see data formated acording to GeoJson spec", "user": {"login": "santiagobasulto", "id": 872296, "node_id": "MDQ6VXNlcjg3MjI5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/872296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/santiagobasulto", "html_url": "https://github.com/santiagobasulto", "followers_url": "https://api.github.com/users/santiagobasulto/followers", "following_url": "https://api.github.com/users/santiagobasulto/following{/other_user}", "gists_url": "https://api.github.com/users/santiagobasulto/gists{/gist_id}", "starred_url": "https://api.github.com/users/santiagobasulto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/santiagobasulto/subscriptions", "organizations_url": "https://api.github.com/users/santiagobasulto/orgs", "repos_url": "https://api.github.com/users/santiagobasulto/repos", "events_url": "https://api.github.com/users/santiagobasulto/events{/privacy}", "received_events_url": "https://api.github.com/users/santiagobasulto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-05-31T14:48:55Z", "updated_at": "2013-11-19T04:17:37Z", "closed_at": "2013-11-19T04:17:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello guys,\n\ndon't know if this is ok, but I was taking a look at GeoJson spec (http://geojson.org/geojson-spec.html) and it defines the data in a different format that what's returned by geojson.dumps()\n\nAre you planning to make it compliant?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/geojson/issues/1", "repository_url": "https://api.github.com/repos/jazzband/geojson", "labels_url": "https://api.github.com/repos/jazzband/geojson/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/geojson/issues/1/comments", "events_url": "https://api.github.com/repos/jazzband/geojson/issues/1/events", "html_url": "https://github.com/jazzband/geojson/issues/1", "id": 4151478, "node_id": "MDU6SXNzdWU0MTUxNDc4", "number": 1, "title": "loads may fail when features include properties named \"type\"", "user": {"login": "elemoine", "id": 76594, "node_id": "MDQ6VXNlcjc2NTk0", "avatar_url": "https://avatars3.githubusercontent.com/u/76594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elemoine", "html_url": "https://github.com/elemoine", "followers_url": "https://api.github.com/users/elemoine/followers", "following_url": "https://api.github.com/users/elemoine/following{/other_user}", "gists_url": "https://api.github.com/users/elemoine/gists{/gist_id}", "starred_url": "https://api.github.com/users/elemoine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elemoine/subscriptions", "organizations_url": "https://api.github.com/users/elemoine/orgs", "repos_url": "https://api.github.com/users/elemoine/repos", "events_url": "https://api.github.com/users/elemoine/events{/privacy}", "received_events_url": "https://api.github.com/users/elemoine/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 66253032, "node_id": "MDU6TGFiZWw2NjI1MzAzMg==", "url": "https://api.github.com/repos/jazzband/geojson/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2012-04-17T11:55:57Z", "updated_at": "2014-10-05T19:24:26Z", "closed_at": "2014-10-05T19:15:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "`loads(json, object_hook=GeoJSON.to_instance)` fails if json includes features with properties named \"type\" that reference `null`, strings with non-ascii characters, `\"Feature\"` or `\"FeatureCollection\"`. See the examples below.\n\nWith `\"type\":null`:\n\n```\n>>> from geojson import loads\n>>> from geojson import GeoJSON\n>>> loads('{\"type\": \"Feature\", \"geometry\": null, \"id\": 1, \"properties\": {\"type\": null}}', object_hook=GeoJSON.to_instance)\nTraceback (most recent call last):\n File \"<stdin>\", line 1, in <module>\n File \"/home/elemoine/.virtualenvs/papyrus/lib/python2.6/site-packages/geojson-1.0.1-py2.6.egg/geojson/codec.py\",\nline 46, in loads\n   return simplejson.loads(s, cls=cls, object_hook=object_hook, **kwargs)\n File \"/home/elemoine/.virtualenvs/papyrus/lib/python2.6/site-packages/simplejson-2.1.6-py2.6-linux-i686.egg/simplejson/__init__.py\",\nline 402, in loads\n   return cls(encoding=encoding, **kw).decode(s)\n File \"/home/elemoine/.virtualenvs/papyrus/lib/python2.6/site-packages/simplejson-2.1.6-py2.6-linux-i686.egg/simplejson/decoder.py\",\nline 402, in decode\n   obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n File \"/home/elemoine/.virtualenvs/papyrus/lib/python2.6/site-packages/simplejson-2.1.6-py2.6-linux-i686.egg/simplejson/decoder.py\",\nline 418, in raw_decode\n   obj, end = self.scan_once(s, idx)\n File \"/home/elemoine/.virtualenvs/papyrus/lib/python2.6/site-packages/geojson-1.0.1-py2.6.egg/geojson/base.py\",\nline 55, in to_instance\n   geojson_factory = getattr(geojson.factory, type_)\nTypeError: getattr(): attribute name must be string\n```\n\nWith non-ascii chars:\n\n```\n>>> from geojson import loads\n>>> from geojson import GeoJSON\n>>> loads('{\"type\": \"Feature\", \"geometry\": null, \"id\": 1, \"properties\": {\"type\": \"\u00e9\"}}', object_hook=GeoJSON.to_instance)\nTraceback (most recent call last):\n File \"<stdin>\", line 1, in <module>\n File \"/home/elemoine/.virtualenvs/papyrus/lib/python2.6/site-packages/geojson-1.0.1-py2.6.egg/geojson/codec.py\",\nline 46, in loads\n   return simplejson.loads(s, cls=cls, object_hook=object_hook, **kwargs)\n File \"/home/elemoine/.virtualenvs/papyrus/lib/python2.6/site-packages/simplejson-2.1.6-py2.6-linux-i686.egg/simplejson/__init__.py\",\nline 402, in loads\n   return cls(encoding=encoding, **kw).decode(s)\n File \"/home/elemoine/.virtualenvs/papyrus/lib/python2.6/site-packages/simplejson-2.1.6-py2.6-linux-i686.egg/simplejson/decoder.py\",\nline 402, in decode\n   obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n File \"/home/elemoine/.virtualenvs/papyrus/lib/python2.6/site-packages/simplejson-2.1.6-py2.6-linux-i686.egg/simplejson/decoder.py\",\nline 418, in raw_decode\n   obj, end = self.scan_once(s, idx)\n File \"/home/elemoine/.virtualenvs/papyrus/lib/python2.6/site-packages/geojson-1.0.1-py2.6.egg/geojson/base.py\",\nline 55, in to_instance\n   geojson_factory = getattr(geojson.factory, type_)\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\xe9' in\nposition 0: ordinal not in range(128)\n```\n\nWith `\"type\":\"Feature\"`:\n\n```\n>>> from geojson import loads\n>>> from geojson import GeoJSON\n>>> loads('{\"type\": \"Feature\", \"geometry\": null, \"id\": 1, \"properties\": {\"type\": \"Feature\"}}', object_hook=GeoJSON.to_instance)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/elemoine/.virtualenvs/papyrus/lib/python2.6/site-packages/geojson-1.0.1-py2.6.egg/geojson/base.py\", line 16, in __repr__\n    for (key, value) in self\n  File \"/home/elemoine/.virtualenvs/papyrus/lib/python2.6/site-packages/geojson-1.0.1-py2.6.egg/geojson/base.py\", line 15, in <genexpr>\n    params = \", \".join(\"%s=%s\" % (key, value) \n  File \"/home/elemoine/.virtualenvs/papyrus/lib/python2.6/site-packages/geojson-1.0.1-py2.6.egg/geojson/base.py\", line 29, in iter_geo_interface\n    key, value = iter_geo_interface(value)\nValueError: too many values to unpack\n```\n", "performed_via_github_app": null, "score": 1.0}]}