{"total_count": 31, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/kieferk/dfply/issues/92", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/92/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/92/events", "html_url": "https://github.com/kieferk/dfply/issues/92", "id": 505867718, "node_id": "MDU6SXNzdWU1MDU4Njc3MTg=", "number": 92, "title": "how to use case_when function", "user": {"login": "xiaogaogmy", "id": 17662383, "node_id": "MDQ6VXNlcjE3NjYyMzgz", "avatar_url": "https://avatars0.githubusercontent.com/u/17662383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiaogaogmy", "html_url": "https://github.com/xiaogaogmy", "followers_url": "https://api.github.com/users/xiaogaogmy/followers", "following_url": "https://api.github.com/users/xiaogaogmy/following{/other_user}", "gists_url": "https://api.github.com/users/xiaogaogmy/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiaogaogmy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiaogaogmy/subscriptions", "organizations_url": "https://api.github.com/users/xiaogaogmy/orgs", "repos_url": "https://api.github.com/users/xiaogaogmy/repos", "events_url": "https://api.github.com/users/xiaogaogmy/events{/privacy}", "received_events_url": "https://api.github.com/users/xiaogaogmy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-11T13:54:42Z", "updated_at": "2019-10-13T15:36:04Z", "closed_at": "2019-10-13T15:36:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "hey, how to use case_when function like R", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/89", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/89/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/89/events", "html_url": "https://github.com/kieferk/dfply/issues/89", "id": 474332412, "node_id": "MDU6SXNzdWU0NzQzMzI0MTI=", "number": 89, "title": "When using `spread`, Type error occurs on not callable 'Client' object", "user": {"login": "ddoannpd", "id": 51757289, "node_id": "MDQ6VXNlcjUxNzU3Mjg5", "avatar_url": "https://avatars2.githubusercontent.com/u/51757289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddoannpd", "html_url": "https://github.com/ddoannpd", "followers_url": "https://api.github.com/users/ddoannpd/followers", "following_url": "https://api.github.com/users/ddoannpd/following{/other_user}", "gists_url": "https://api.github.com/users/ddoannpd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddoannpd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddoannpd/subscriptions", "organizations_url": "https://api.github.com/users/ddoannpd/orgs", "repos_url": "https://api.github.com/users/ddoannpd/repos", "events_url": "https://api.github.com/users/ddoannpd/events{/privacy}", "received_events_url": "https://api.github.com/users/ddoannpd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-30T01:57:32Z", "updated_at": "2019-07-31T21:14:06Z", "closed_at": "2019-07-31T21:14:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "With version 0.3.3 and Python 3.6 (within a Jupyter notebook),\r\nI have tried applying `spread` to different DataFrames but they all trigger the same Type Error on a 'Client' object.\r\n\r\n```\r\n<ipython-input-9-7f9021e4a456> in <module>()\r\n----> 1 elongated >> spread(X.variable, X.value)\r\nTypeError: 'Client' object is not callable\r\n```\r\n\r\nThe simplest example from your own documentation for `spread` also triggers this error.\r\nFor example:\r\n\r\n```\r\nelongated = diamonds >> gather('variable', 'value', add_id=True)\r\nwidened = elongated >> spread(X.variable, X.value)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/84", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/84/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/84/events", "html_url": "https://github.com/kieferk/dfply/issues/84", "id": 413223859, "node_id": "MDU6SXNzdWU0MTMyMjM4NTk=", "number": 84, "title": "mutate to substring doesn't work", "user": {"login": "dbuzolin-nfl", "id": 44671327, "node_id": "MDQ6VXNlcjQ0NjcxMzI3", "avatar_url": "https://avatars3.githubusercontent.com/u/44671327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbuzolin-nfl", "html_url": "https://github.com/dbuzolin-nfl", "followers_url": "https://api.github.com/users/dbuzolin-nfl/followers", "following_url": "https://api.github.com/users/dbuzolin-nfl/following{/other_user}", "gists_url": "https://api.github.com/users/dbuzolin-nfl/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbuzolin-nfl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbuzolin-nfl/subscriptions", "organizations_url": "https://api.github.com/users/dbuzolin-nfl/orgs", "repos_url": "https://api.github.com/users/dbuzolin-nfl/repos", "events_url": "https://api.github.com/users/dbuzolin-nfl/events{/privacy}", "received_events_url": "https://api.github.com/users/dbuzolin-nfl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-22T03:15:33Z", "updated_at": "2019-02-22T03:27:13Z", "closed_at": "2019-02-22T03:27:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to extract a date portion from datetime via mutating into a substring and resulting dataframe still prints whole datetime field:\r\n`\r\ndf >>= mask(X[\"Item Type\"] != 'Application') >> mutate(transaction_date = X[\"Transaction Time\"][0:10])\r\n`\r\nResulting df.transaction_date prints full string, ex: 2019-02-10 19:21:45 PST", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/76", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/76/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/76/events", "html_url": "https://github.com/kieferk/dfply/issues/76", "id": 387189392, "node_id": "MDU6SXNzdWUzODcxODkzOTI=", "number": 76, "title": "feature request: add window operation of fillna", "user": {"login": "ucohen", "id": 8166310, "node_id": "MDQ6VXNlcjgxNjYzMTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/8166310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ucohen", "html_url": "https://github.com/ucohen", "followers_url": "https://api.github.com/users/ucohen/followers", "following_url": "https://api.github.com/users/ucohen/following{/other_user}", "gists_url": "https://api.github.com/users/ucohen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ucohen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ucohen/subscriptions", "organizations_url": "https://api.github.com/users/ucohen/orgs", "repos_url": "https://api.github.com/users/ucohen/repos", "events_url": "https://api.github.com/users/ucohen/events{/privacy}", "received_events_url": "https://api.github.com/users/ucohen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-04T09:20:32Z", "updated_at": "2018-12-04T11:26:30Z", "closed_at": "2018-12-04T11:26:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "should work as:\r\ndf >>= mutate(nonans=fillna(X.col_with_nans, value_to_replace))\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/75", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/75/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/75/events", "html_url": "https://github.com/kieferk/dfply/issues/75", "id": 385766522, "node_id": "MDU6SXNzdWUzODU3NjY1MjI=", "number": 75, "title": "Suggestings for improvements on the 'from dfply import *' front", "user": {"login": "TyberiusPrime", "id": 1257580, "node_id": "MDQ6VXNlcjEyNTc1ODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1257580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TyberiusPrime", "html_url": "https://github.com/TyberiusPrime", "followers_url": "https://api.github.com/users/TyberiusPrime/followers", "following_url": "https://api.github.com/users/TyberiusPrime/following{/other_user}", "gists_url": "https://api.github.com/users/TyberiusPrime/gists{/gist_id}", "starred_url": "https://api.github.com/users/TyberiusPrime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TyberiusPrime/subscriptions", "organizations_url": "https://api.github.com/users/TyberiusPrime/orgs", "repos_url": "https://api.github.com/users/TyberiusPrime/repos", "events_url": "https://api.github.com/users/TyberiusPrime/events{/privacy}", "received_events_url": "https://api.github.com/users/TyberiusPrime/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-11-29T14:38:21Z", "updated_at": "2019-05-20T11:43:33Z", "closed_at": "2019-05-20T11:43:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "There's an universal (and justified) dislike in the python community for * imports.\r\nNow I admit that dfply (great work btw) is a pain without it.\r\n\r\nBut, it currently has a bunch of things in the user-importable namespace\r\nthat we could possibly clean up.\r\n\r\nA quick accounting of the 129 exports from dfply by type:\r\n\r\n| type | count |\r\n| ---- | ----  | \r\n| <class 'dfply.base.Intention'> |     1 |\r\n| <class 'dict'> |     1 |\r\n| <class 'NoneType'> |     1 |\r\n| <class '_frozen_importlib_external.SourceFileL... |     1 |\r\n| <class 'list'> |     1 |\r\n| <class '_frozen_importlib.ModuleSpec'> |     1 |\r\n| <class 'pandas.core.frame.DataFrame'> |     1 |\r\n| <class 'type'> |     5 |\r\n| <class 'str'> |     6 |\r\n| <class 'module'> |    16 |\r\n| <class 'dfply.base.pipe'> |    40 |\r\n| <class 'function'> |    55 |\r\n\r\nwhere presumably only the dfply.base.pipe and a subset of the functions are 'verbs'.\r\n\r\nMy suggesting would be to introduce to additional namespaces  \r\n * dfply.verbs, - which would export what a typical 'user' might use\r\n * dfply.extend - which would export everything necessary to extend dfply - ie. decorators.\r\n\r\nand update the examples to use \r\nfrom ```dfply.verbs import *``` instead of ```from dfply import *```\r\n\r\nThis way we would \r\na) not break anyones code and \r\nb) have a clean, 'non polluting' module that users can import.\r\n\r\nWhat do you think?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/72", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/72/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/72/events", "html_url": "https://github.com/kieferk/dfply/issues/72", "id": 361536883, "node_id": "MDU6SXNzdWUzNjE1MzY4ODM=", "number": 72, "title": "stray print statement", "user": {"login": "jonvitale", "id": 2237580, "node_id": "MDQ6VXNlcjIyMzc1ODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/2237580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonvitale", "html_url": "https://github.com/jonvitale", "followers_url": "https://api.github.com/users/jonvitale/followers", "following_url": "https://api.github.com/users/jonvitale/following{/other_user}", "gists_url": "https://api.github.com/users/jonvitale/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonvitale/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonvitale/subscriptions", "organizations_url": "https://api.github.com/users/jonvitale/orgs", "repos_url": "https://api.github.com/users/jonvitale/repos", "events_url": "https://api.github.com/users/jonvitale/events{/privacy}", "received_events_url": "https://api.github.com/users/jonvitale/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-19T00:55:59Z", "updated_at": "2019-01-18T18:41:32Z", "closed_at": "2019-01-18T18:41:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, in the unite function you have a stray print\r\n\r\nprint(to_unite, sep, remove, na_action)\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/68", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/68/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/68/events", "html_url": "https://github.com/kieferk/dfply/issues/68", "id": 356673302, "node_id": "MDU6SXNzdWUzNTY2NzMzMDI=", "number": 68, "title": "More general joining", "user": {"login": "jankislinger", "id": 12546463, "node_id": "MDQ6VXNlcjEyNTQ2NDYz", "avatar_url": "https://avatars3.githubusercontent.com/u/12546463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jankislinger", "html_url": "https://github.com/jankislinger", "followers_url": "https://api.github.com/users/jankislinger/followers", "following_url": "https://api.github.com/users/jankislinger/following{/other_user}", "gists_url": "https://api.github.com/users/jankislinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/jankislinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jankislinger/subscriptions", "organizations_url": "https://api.github.com/users/jankislinger/orgs", "repos_url": "https://api.github.com/users/jankislinger/repos", "events_url": "https://api.github.com/users/jankislinger/events{/privacy}", "received_events_url": "https://api.github.com/users/jankislinger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-09-04T06:46:55Z", "updated_at": "2018-09-04T23:28:16Z", "closed_at": "2018-09-04T23:28:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have fixed a typo (`right_in` -> `right_on`) and reversed logic in one if statement in function that creates join parameters. See the changes here:\r\nhttps://github.com/kieferk/dfply/compare/master...jankislinger:fix-join-multiple-by\r\n\r\nNow it can be used to join tables on columns with different names:\r\n```\r\nimport pandas as pd\r\nfrom dfply import *\r\n\r\na = pd.DataFrame({\r\n    'x1': ['A', 'B', 'C'],\r\n    'x2': [1, 2, 3]\r\n})\r\nb = pd.DataFrame({\r\n    'x4': ['A', 'B', 'D'],\r\n    'x3': [True, False, True]\r\n})\r\n\r\na >> inner_join(b, by=('x1', 'x4'))\r\n```\r\n\r\nIt would be also convenient to be able to use multiple by statements. For example expression\r\n```\r\na >> inner_join(b, by=['x1', ('x2', 'x3')])\r\n```\r\ncould be used as\r\n```\r\na.merge(b, left_on=['x1', 'x2'], right_on=['x1', 'x3'])\r\n```\r\nIf you agree I would modify the code and create a PR.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/66", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/66/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/66/events", "html_url": "https://github.com/kieferk/dfply/issues/66", "id": 355043395, "node_id": "MDU6SXNzdWUzNTUwNDMzOTU=", "number": 66, "title": "Compatibility break on joins", "user": {"login": "CedricFR", "id": 20124295, "node_id": "MDQ6VXNlcjIwMTI0Mjk1", "avatar_url": "https://avatars0.githubusercontent.com/u/20124295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CedricFR", "html_url": "https://github.com/CedricFR", "followers_url": "https://api.github.com/users/CedricFR/followers", "following_url": "https://api.github.com/users/CedricFR/following{/other_user}", "gists_url": "https://api.github.com/users/CedricFR/gists{/gist_id}", "starred_url": "https://api.github.com/users/CedricFR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CedricFR/subscriptions", "organizations_url": "https://api.github.com/users/CedricFR/orgs", "repos_url": "https://api.github.com/users/CedricFR/repos", "events_url": "https://api.github.com/users/CedricFR/events{/privacy}", "received_events_url": "https://api.github.com/users/CedricFR/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-29T08:02:50Z", "updated_at": "2018-10-11T13:42:09Z", "closed_at": "2018-10-11T13:42:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nThe latest modifications to the `join` functions are breaking some usage code.\r\n\r\nThe incriminated changes are: https://github.com/kieferk/dfply/compare/bbe03e8aa84005af01491a891cb36fb2c5979659...17b3440dcd53cef98e35e63a0dfce074e27b2748\r\n\r\nThe problem is this case:\r\n\r\n`df >> left_join(df2, by=[\"column1\", \"column2\", \"column3\"])`\r\n\r\nIt used to mean \"merge based on those 3 columns\", but now it means \"merge based on column1 for left dataframe, and column2 on the right dataframe\", which is quite different!\r\n\r\nWhat's the rationale? Is it because we're now supposed to use tuples and not lists in those cases?\r\n\r\nEither way, if we decide this is the way forward, it should be a major version change because it breaks one of the major use cases of dfply. What do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/65", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/65/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/65/events", "html_url": "https://github.com/kieferk/dfply/issues/65", "id": 354776145, "node_id": "MDU6SXNzdWUzNTQ3NzYxNDU=", "number": 65, "title": "Can not resolve column names that are also functions in the environment", "user": {"login": "holgerbrandl", "id": 200952, "node_id": "MDQ6VXNlcjIwMDk1Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/200952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/holgerbrandl", "html_url": "https://github.com/holgerbrandl", "followers_url": "https://api.github.com/users/holgerbrandl/followers", "following_url": "https://api.github.com/users/holgerbrandl/following{/other_user}", "gists_url": "https://api.github.com/users/holgerbrandl/gists{/gist_id}", "starred_url": "https://api.github.com/users/holgerbrandl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/holgerbrandl/subscriptions", "organizations_url": "https://api.github.com/users/holgerbrandl/orgs", "repos_url": "https://api.github.com/users/holgerbrandl/repos", "events_url": "https://api.github.com/users/holgerbrandl/events{/privacy}", "received_events_url": "https://api.github.com/users/holgerbrandl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-08-28T15:09:18Z", "updated_at": "2018-09-05T06:42:24Z", "closed_at": "2018-09-05T06:42:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider the following example:\r\n```\r\ndiamonds >> mutate(rank=min_rank(X.carat)) >> filter_by(X.rank <10)\r\n```\r\nThis fails with \r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/brandl/anaconda3/envs/scikit_playground/lib/python3.6/site-packages/dfply/base.py\", line 142, in __rrshift__\r\n    result = self.function(other_copy)\r\n  File \"/Users/brandl/anaconda3/envs/scikit_playground/lib/python3.6/site-packages/dfply/base.py\", line 149, in <lambda>\r\n    return pipe(lambda x: self.function(x, *args, **kwargs))\r\n  File \"/Users/brandl/anaconda3/envs/scikit_playground/lib/python3.6/site-packages/dfply/base.py\", line 329, in __call__\r\n    return self.function(*args, **kwargs)\r\n  File \"/Users/brandl/anaconda3/envs/scikit_playground/lib/python3.6/site-packages/dfply/base.py\", line 282, in __call__\r\n    return self.function(df, *args, **kwargs)\r\n  File \"/Users/brandl/anaconda3/envs/scikit_playground/lib/python3.6/site-packages/dfply/subset.py\", line 62, in mask\r\n    if arg.dtype != bool:\r\nAttributeError: 'NotImplementedType' object has no attribute 'dtype'\r\n```\r\nbut seems legit to me.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/64", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/64/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/64/events", "html_url": "https://github.com/kieferk/dfply/issues/64", "id": 352647114, "node_id": "MDU6SXNzdWUzNTI2NDcxMTQ=", "number": 64, "title": "DFPLY not working.....at all", "user": {"login": "jaybundy", "id": 9137434, "node_id": "MDQ6VXNlcjkxMzc0MzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/9137434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaybundy", "html_url": "https://github.com/jaybundy", "followers_url": "https://api.github.com/users/jaybundy/followers", "following_url": "https://api.github.com/users/jaybundy/following{/other_user}", "gists_url": "https://api.github.com/users/jaybundy/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaybundy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaybundy/subscriptions", "organizations_url": "https://api.github.com/users/jaybundy/orgs", "repos_url": "https://api.github.com/users/jaybundy/repos", "events_url": "https://api.github.com/users/jaybundy/events{/privacy}", "received_events_url": "https://api.github.com/users/jaybundy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-08-21T17:56:03Z", "updated_at": "2019-03-24T15:13:08Z", "closed_at": "2018-08-31T14:29:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "This was never an issue. It should be deleted.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/62", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/62/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/62/events", "html_url": "https://github.com/kieferk/dfply/issues/62", "id": 351709353, "node_id": "MDU6SXNzdWUzNTE3MDkzNTM=", "number": 62, "title": "Pandas throwing FutureWarnings on group_by", "user": {"login": "andrewkho", "id": 5349063, "node_id": "MDQ6VXNlcjUzNDkwNjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/5349063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewkho", "html_url": "https://github.com/andrewkho", "followers_url": "https://api.github.com/users/andrewkho/followers", "following_url": "https://api.github.com/users/andrewkho/following{/other_user}", "gists_url": "https://api.github.com/users/andrewkho/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewkho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewkho/subscriptions", "organizations_url": "https://api.github.com/users/andrewkho/orgs", "repos_url": "https://api.github.com/users/andrewkho/repos", "events_url": "https://api.github.com/users/andrewkho/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewkho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-17T19:17:03Z", "updated_at": "2018-08-28T01:05:54Z", "closed_at": "2018-08-28T01:05:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Pandas is constantly throwing warnings like this and it makes the `group_by` unusable in my case, since it swamps all other console output.\r\n\r\n```\r\n.../python3.6/site-packages/dfply/base.py:307: FutureWarning: Interpreting tuple 'by' as a list of keys, rather than a single key. Use 'by=[...]' instead of 'by=(...)'. In the future, a tuple will always mean a single key.\r\n```\r\n\r\nWhen Pandas makes this change it will break the `group_by` so it's probably worth fixing now.\r\n\r\nI think the way around this is to wrap the RHS with a `list(args)` [here](https://github.com/kieferk/dfply/blob/f80460eea4453bb484bc19cbea52dbef2af5f725/dfply/group.py#L7).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/61", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/61/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/61/events", "html_url": "https://github.com/kieferk/dfply/issues/61", "id": 346227970, "node_id": "MDU6SXNzdWUzNDYyMjc5NzA=", "number": 61, "title": "joining on different columns does not work", "user": {"login": "Make42", "id": 4905185, "node_id": "MDQ6VXNlcjQ5MDUxODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4905185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Make42", "html_url": "https://github.com/Make42", "followers_url": "https://api.github.com/users/Make42/followers", "following_url": "https://api.github.com/users/Make42/following{/other_user}", "gists_url": "https://api.github.com/users/Make42/gists{/gist_id}", "starred_url": "https://api.github.com/users/Make42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Make42/subscriptions", "organizations_url": "https://api.github.com/users/Make42/orgs", "repos_url": "https://api.github.com/users/Make42/repos", "events_url": "https://api.github.com/users/Make42/events{/privacy}", "received_events_url": "https://api.github.com/users/Make42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-31T15:01:06Z", "updated_at": "2019-01-16T13:34:33Z", "closed_at": "2018-08-28T02:51:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think joining on different columns does not work. By that I mean\r\n\r\n```\r\na_df = pd.DataFrame.from_items([('one', [1,2,3]),('two',['a','b','c'])])\r\nb_df = pd.DataFrame.from_items([('three', [1,2,3]),('four',['d','e','f'])])\r\na_df >> inner_join(b_df,by=['one','three'])\r\n```\r\n\r\ngives the error\r\n\r\n```\r\n  File \"pandas/_libs/index.pyx\", line 117, in pandas._libs.index.IndexEngine.get_loc\r\n  File \"pandas/_libs/index.pyx\", line 139, in pandas._libs.index.IndexEngine.get_loc\r\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 1265, in pandas._libs.hashtable.PyObjectHashTable.get_item\r\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 1273, in pandas._libs.hashtable.PyObjectHashTable.get_item\r\nKeyError: 'one'\r\n```\r\n\r\nand\r\n\r\n`a_df >> inner_join(b_df,by=[['one'],['three']])`\r\n\r\ngives\r\n\r\n`IndexError: list index out of range`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/57", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/57/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/57/events", "html_url": "https://github.com/kieferk/dfply/issues/57", "id": 330760836, "node_id": "MDU6SXNzdWUzMzA3NjA4MzY=", "number": 57, "title": "Add `matches()` function?", "user": {"login": "crew102", "id": 11220793, "node_id": "MDQ6VXNlcjExMjIwNzkz", "avatar_url": "https://avatars2.githubusercontent.com/u/11220793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crew102", "html_url": "https://github.com/crew102", "followers_url": "https://api.github.com/users/crew102/followers", "following_url": "https://api.github.com/users/crew102/following{/other_user}", "gists_url": "https://api.github.com/users/crew102/gists{/gist_id}", "starred_url": "https://api.github.com/users/crew102/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crew102/subscriptions", "organizations_url": "https://api.github.com/users/crew102/orgs", "repos_url": "https://api.github.com/users/crew102/repos", "events_url": "https://api.github.com/users/crew102/events{/privacy}", "received_events_url": "https://api.github.com/users/crew102/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-08T18:34:05Z", "updated_at": "2018-07-10T01:34:19Z", "closed_at": "2018-07-10T01:34:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Greetings -\r\n\r\nI noticed that dfply is missing the dplyr equivalent of `matches()`, which allows the user to pass in a regular expression when selecting columns (as opposed to a literal string - i.e., the `contains()` function). I've found `matches()` to be very useful in the past and would like to know if you're amenable to it being added to dfply? If so, I'd be happy to put together a PR.\r\n\r\nChris", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/47", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/47/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/47/events", "html_url": "https://github.com/kieferk/dfply/issues/47", "id": 287085062, "node_id": "MDU6SXNzdWUyODcwODUwNjI=", "number": 47, "title": "Issue with 'arrange' when df has an index", "user": {"login": "omri374", "id": 3776619, "node_id": "MDQ6VXNlcjM3NzY2MTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3776619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omri374", "html_url": "https://github.com/omri374", "followers_url": "https://api.github.com/users/omri374/followers", "following_url": "https://api.github.com/users/omri374/following{/other_user}", "gists_url": "https://api.github.com/users/omri374/gists{/gist_id}", "starred_url": "https://api.github.com/users/omri374/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omri374/subscriptions", "organizations_url": "https://api.github.com/users/omri374/orgs", "repos_url": "https://api.github.com/users/omri374/repos", "events_url": "https://api.github.com/users/omri374/events{/privacy}", "received_events_url": "https://api.github.com/users/omri374/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-09T13:16:26Z", "updated_at": "2018-01-10T14:04:28Z", "closed_at": "2018-01-10T14:04:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nPlease take a look at the following example:\r\n\r\nfrom dfply import *\r\nutime = pd.DataFrame({\"u\":1,\"eventTime\":[\"01-01-1971 01:04:00\",\"01-01-1971 02:07:00\",\"01-01-1971 01:09:00\",\"01-01-1971 01:10:00\"]})\r\nprint(utime >> arrange(X.eventTime))\r\n\r\nutime = utime.set_index(\"u\")\r\nprint(utime >> d.arrange(X.eventTime))\r\n\r\n\r\nIn the first option, the result is as expected. When introducing an index, the result is incorrect and contains 4 times as many values as before.\r\n\r\nI'm not sure if it's  bug or an expected behavior, as I'm a newbie to pandas and to indices of data frames.\r\n\r\noutput for the code:\r\n            eventTime  u\r\n0  01-01-1971 01:04:00  1\r\n2  01-01-1971 01:09:00  1\r\n3  01-01-1971 01:10:00  1\r\n1  01-01-1971 02:07:00  1\r\n             eventTime\r\nu                     \r\n1  01-01-1971 01:04:00\r\n1  01-01-1971 02:07:00\r\n1  01-01-1971 01:09:00\r\n1  01-01-1971 01:10:00\r\n1  01-01-1971 01:04:00\r\n1  01-01-1971 02:07:00\r\n1  01-01-1971 01:09:00\r\n1  01-01-1971 01:10:00\r\n1  01-01-1971 01:04:00\r\n1  01-01-1971 02:07:00\r\n1  01-01-1971 01:09:00\r\n1  01-01-1971 01:10:00\r\n1  01-01-1971 01:04:00\r\n1  01-01-1971 02:07:00\r\n1  01-01-1971 01:09:00\r\n1  01-01-1971 01:10:00\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/46", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/46/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/46/events", "html_url": "https://github.com/kieferk/dfply/issues/46", "id": 282469218, "node_id": "MDU6SXNzdWUyODI0NjkyMTg=", "number": 46, "title": "Pandas warning: column creation via attribute name", "user": {"login": "janfreyberg", "id": 4092425, "node_id": "MDQ6VXNlcjQwOTI0MjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/4092425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janfreyberg", "html_url": "https://github.com/janfreyberg", "followers_url": "https://api.github.com/users/janfreyberg/followers", "following_url": "https://api.github.com/users/janfreyberg/following{/other_user}", "gists_url": "https://api.github.com/users/janfreyberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/janfreyberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janfreyberg/subscriptions", "organizations_url": "https://api.github.com/users/janfreyberg/orgs", "repos_url": "https://api.github.com/users/janfreyberg/repos", "events_url": "https://api.github.com/users/janfreyberg/events{/privacy}", "received_events_url": "https://api.github.com/users/janfreyberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-15T15:52:38Z", "updated_at": "2017-12-16T17:53:52Z", "closed_at": "2017-12-16T17:53:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When doing groupby / summarise actions, the following warning occurs:\r\n\r\n```\r\n/opt/anaconda/envs/Python3/lib/python3.6/site-packages/dfply/base.py:137: UserWarning: Pandas doesn't allow columns to be created via a new attribute name - see https://pandas.pydata.org/pandas-docs/stable/indexing.html#attribute-access\r\n  other_copy._grouped_by = getattr(other, '_grouped_by', None)\r\n```\r\n\r\nAn example:\r\n```\r\nfrom dfply import *\r\ndiamonds >> group_by('carat', 'cut') >> summarize(price=X.price.mean())\r\n```\r\n\r\nI don't know if this is fixable, but could be nice to get rid of the warning!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/36", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/36/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/36/events", "html_url": "https://github.com/kieferk/dfply/issues/36", "id": 260245858, "node_id": "MDU6SXNzdWUyNjAyNDU4NTg=", "number": 36, "title": "New grammar for data minpulation", "user": {"login": "Make42", "id": 4905185, "node_id": "MDQ6VXNlcjQ5MDUxODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4905185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Make42", "html_url": "https://github.com/Make42", "followers_url": "https://api.github.com/users/Make42/followers", "following_url": "https://api.github.com/users/Make42/following{/other_user}", "gists_url": "https://api.github.com/users/Make42/gists{/gist_id}", "starred_url": "https://api.github.com/users/Make42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Make42/subscriptions", "organizations_url": "https://api.github.com/users/Make42/orgs", "repos_url": "https://api.github.com/users/Make42/repos", "events_url": "https://api.github.com/users/Make42/events{/privacy}", "received_events_url": "https://api.github.com/users/Make42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-09-25T11:43:22Z", "updated_at": "2017-09-28T04:40:12Z", "closed_at": "2017-09-27T13:55:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is not an issue, but I am not sure how to contact someone from github and give some information. I just wanted to let you know that there is a new grammar for data manipulation: https://github.com/has2k1/plydata\r\n\r\nA related question I would have is, how dfply related to it - they seem rather, right?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/33", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/33/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/33/events", "html_url": "https://github.com/kieferk/dfply/issues/33", "id": 255006538, "node_id": "MDU6SXNzdWUyNTUwMDY1Mzg=", "number": 33, "title": "mask does not work in 0.2.4 properly", "user": {"login": "Make42", "id": 4905185, "node_id": "MDQ6VXNlcjQ5MDUxODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4905185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Make42", "html_url": "https://github.com/Make42", "followers_url": "https://api.github.com/users/Make42/followers", "following_url": "https://api.github.com/users/Make42/following{/other_user}", "gists_url": "https://api.github.com/users/Make42/gists{/gist_id}", "starred_url": "https://api.github.com/users/Make42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Make42/subscriptions", "organizations_url": "https://api.github.com/users/Make42/orgs", "repos_url": "https://api.github.com/users/Make42/repos", "events_url": "https://api.github.com/users/Make42/events{/privacy}", "received_events_url": "https://api.github.com/users/Make42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-04T10:55:33Z", "updated_at": "2017-09-26T07:55:28Z", "closed_at": "2017-09-26T07:55:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "The line\r\n\r\n    series = signals.loc[(signals.type == sig_type) & (signals.part_number == sig_partnr), 'value']\r\n\r\nis working for my code, the line\r\n\r\n    series = signals >> mask(X.type == sig_type, X.part_number == sig_partnr) >> select('value')\r\n\r\nresults in the error\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 1, in <module>\r\n  File \"[..]/dfply/base.py\", line 45, in __rrshift__\r\n    result = self.function(other_copy)\r\n  File \"[..]/dfply/base.py\", line 52, in <lambda>\r\n    return pipe(lambda x: self.function(x, *args, **kwargs))\r\n  File \"[..]/dfply/base.py\", line 112, in __call__\r\n    return self.function(*args, **kwargs)\r\n  File \"[..]/dfply/base.py\", line 179, in __call__\r\n    evaluation = self.call_action(args, kwargs)\r\n  File \"[..]/dfply/base.py\", line 253, in call_action\r\n    return symbolic.to_callable(symbolic_function)(args[0])\r\n  File \"[..]/pandas_ply/symbolic.py\", line 204, in <lambda>\r\n    return lambda *args, **kwargs: obj._eval(dict(enumerate(args), **kwargs))\r\n  File \"[..]/pandas_ply/symbolic.py\", line 142, in _eval\r\n    result = evaled_func(*evaled_args, **evaled_kwargs)\r\n  File \"[..]/dfply/subset.py\", line 55, in mask\r\n    mask = mask & arg\r\n  File \"[..]/pandas/core/ops.py\", line 915, in wrapper\r\n    self, other = _align_method_SERIES(self, other, align_asobject=True)\r\n  File \"[..]/pandas/core/ops.py\", line 629, in _align_method_SERIES\r\n    left, right = left.align(right, copy=False)\r\n  File \"[..]/pandas/core/series.py\", line 2411, in align\r\n    broadcast_axis=broadcast_axis)\r\n  File \"[..]/pandas/core/generic.py\", line 4937, in align\r\n    fill_axis=fill_axis)\r\n  File \"[..]/pandas/core/generic.py\", line 5006, in _align_series\r\n    return_indexers=True)\r\n  File \"[..]/pandas/core/indexes/range.py\", line 441, in join\r\n    sort)\r\n  File \"[..]/pandas/core/indexes/base.py\", line 3024, in join\r\n    return_indexers=return_indexers)\r\n  File \"[..]/pandas/core/indexes/datetimes.py\", line 1069, in join\r\n    return_indexers=return_indexers, sort=sort)\r\n  File \"[..]/pandas/core/indexes/base.py\", line 3033, in join\r\n    return this.join(other, how=how, return_indexers=return_indexers)\r\n  File \"[..]/pandas/core/indexes/base.py\", line 3046, in join\r\n    return_indexers=return_indexers)\r\n  File \"[..]/pandas/core/indexes/base.py\", line 3127, in _join_non_unique\r\n    sort=True)\r\n  File \"[..]/pandas/core/reshape/merge.py\", line 982, in _get_join_indexers\r\n    llab, rlab, shape = map(list, zip(* map(fkeys, left_keys, right_keys)))\r\n  File \"[..]/pandas/core/reshape/merge.py\", line 1412, in _factorize_keys\r\n    llab, rlab = _sort_labels(uniques, llab, rlab)\r\n  File \"[..]/pandas/core/reshape/merge.py\", line 1438, in _sort_labels\r\n    _, new_labels = algos.safe_sort(uniques, labels, na_sentinel=-1)\r\n  File \"[..]/pandas/core/algorithms.py\", line 483, in safe_sort\r\n    ordered = sort_mixed(values)\r\n  File \"[..]/pandas/core/algorithms.py\", line 476, in sort_mixed\r\n    nums = np.sort(values[~str_pos])\r\n  File \"[..]/numpy/core/fromnumeric.py\", line 822, in sort\r\n    a.sort(axis=axis, kind=kind, order=order)\r\n  File \"pandas/_libs/tslib.pyx\", line 1080, in pandas._libs.tslib._Timestamp.__richcmp__ (pandas/_libs/tslib.c:20281)\r\nTypeError: Cannot compare type 'Timestamp' with type 'int'\r\n```\r\n\r\nWhat is the reason? My dataframe looks like\r\n\r\n```\r\n                                                 part_number         type     value\r\ntimestamps                                                                         \r\n2017-08-01 00:00:32.651504  91cb9fa3859f4d44853f6200616db619        power1 -0.001651\r\n2017-08-01 00:00:32.652504  91cb9fa3859f4d44853f6200616db619        power2  0.005068\r\n2017-08-01 00:00:32.653504  91cb9fa3859f4d44853f6200616db619        power1 -0.004536\r\n2017-08-01 00:00:32.654504  91cb9fa3859f4d44853f6200616db619        power2 -0.000084\r\n2017-08-01 00:00:32.655504  5535c560ece9415f8f6ad996f1c23f6e        power1 -0.001114\r\n2017-08-01 00:00:32.656504  5535c560ece9415f8f6ad996f1c23f6e        power2 -0.005621\r\n2017-08-01 00:00:32.657504  5535c560ece9415f8f6ad996f1c23f6e        power1 -0.000638\r\n2017-08-01 00:00:32.658504  5535c560ece9415f8f6ad996f1c23f6e        power2 -0.006916\r\n2017-08-01 00:00:32.659504  5535c560ece9415f8f6ad996f1c23f6e        power1  0.001549\r\n```\r\nwhere the index is DatatimeIndex. I am using dfply version 0.2.4.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/28", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/28/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/28/events", "html_url": "https://github.com/kieferk/dfply/issues/28", "id": 228645671, "node_id": "MDU6SXNzdWUyMjg2NDU2NzE=", "number": 28, "title": "Mask with OR", "user": {"login": "Make42", "id": 4905185, "node_id": "MDQ6VXNlcjQ5MDUxODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4905185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Make42", "html_url": "https://github.com/Make42", "followers_url": "https://api.github.com/users/Make42/followers", "following_url": "https://api.github.com/users/Make42/following{/other_user}", "gists_url": "https://api.github.com/users/Make42/gists{/gist_id}", "starred_url": "https://api.github.com/users/Make42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Make42/subscriptions", "organizations_url": "https://api.github.com/users/Make42/orgs", "repos_url": "https://api.github.com/users/Make42/repos", "events_url": "https://api.github.com/users/Make42/events{/privacy}", "received_events_url": "https://api.github.com/users/Make42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-15T08:48:59Z", "updated_at": "2017-09-10T19:22:39Z", "closed_at": "2017-09-10T19:22:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using mask() it is possible to AND statements, but I don't see a  way of OR-ing statements. Could this please be added to the syntax somehow?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/27", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/27/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/27/events", "html_url": "https://github.com/kieferk/dfply/issues/27", "id": 222697413, "node_id": "MDU6SXNzdWUyMjI2OTc0MTM=", "number": 27, "title": "mutate does not work with pandas.to_datetime", "user": {"login": "Make42", "id": 4905185, "node_id": "MDQ6VXNlcjQ5MDUxODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4905185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Make42", "html_url": "https://github.com/Make42", "followers_url": "https://api.github.com/users/Make42/followers", "following_url": "https://api.github.com/users/Make42/following{/other_user}", "gists_url": "https://api.github.com/users/Make42/gists{/gist_id}", "starred_url": "https://api.github.com/users/Make42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Make42/subscriptions", "organizations_url": "https://api.github.com/users/Make42/orgs", "repos_url": "https://api.github.com/users/Make42/repos", "events_url": "https://api.github.com/users/Make42/events{/privacy}", "received_events_url": "https://api.github.com/users/Make42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-19T10:51:24Z", "updated_at": "2017-09-10T19:22:24Z", "closed_at": "2017-09-10T19:22:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a DataFrame for which\r\n`hub2['time'] = pd.to_datetime(hub2.timestamp)`\r\nworks, but when I write\r\n`hub2 >> mutate(time=pd.to_datetime(X.timestamp))`\r\nI get the error\r\n```\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 1, in <module>\r\n  File \"[...]/lib/python2.7/site-packages/pandas/util/decorators.py\", line 91, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"[...]/lib/python2.7/site-packages/pandas/tseries/tools.py\", line 419, in to_datetime\r\n    elif isinstance(arg, ABCSeries):\r\n  File \"[...]/lib/python2.7/site-packages/pandas/types/generic.py\", line 9, in _check\r\n    return getattr(inst, attr, '_typ') in comp\r\nTypeError: __nonzero__ should return bool or int, returned Call\r\n```\r\nWhy is that?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/24", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/24/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/24/events", "html_url": "https://github.com/kieferk/dfply/issues/24", "id": 212557867, "node_id": "MDU6SXNzdWUyMTI1NTc4Njc=", "number": 24, "title": "Strange behavior of Mask on grouped df", "user": {"login": "bleearmstrong", "id": 7926380, "node_id": "MDQ6VXNlcjc5MjYzODA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7926380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bleearmstrong", "html_url": "https://github.com/bleearmstrong", "followers_url": "https://api.github.com/users/bleearmstrong/followers", "following_url": "https://api.github.com/users/bleearmstrong/following{/other_user}", "gists_url": "https://api.github.com/users/bleearmstrong/gists{/gist_id}", "starred_url": "https://api.github.com/users/bleearmstrong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bleearmstrong/subscriptions", "organizations_url": "https://api.github.com/users/bleearmstrong/orgs", "repos_url": "https://api.github.com/users/bleearmstrong/repos", "events_url": "https://api.github.com/users/bleearmstrong/events{/privacy}", "received_events_url": "https://api.github.com/users/bleearmstrong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-07T21:03:02Z", "updated_at": "2017-09-10T19:22:00Z", "closed_at": "2017-09-10T19:22:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Mask doesn't seem to work correctly on grouped dataframes. Consider the three operations below.\r\n\r\n```\r\ndiamonds >> mask(X.cut == 'Ideal') >> groupby(X.color)  # works as expected\r\ndiamonds >> groupby(X.color) >> mask(X.cut == 'Ideal')  # doesn't work correctly (strange behavior)\r\ndiamonds >> mask(X.cut == 'Ideal')                                    # works as expected\r\n```\r\n\r\nIn the first example, the mask is applied before the grouping, so it behaves as expected.\r\nIn the second example, the grouping is applied before the mask. The returned dataframe includes cases where X.cut != 'Ideal', and returns about 2500 rows. I'm not sure what causes the returned rows to be returned.\r\nIn the third example, there is no grouping, and the data behaves as expected (returns the same result as the first example.\r\n\r\nThere are use cases where you might want to use grouping and mask together (for example, to return the min for each group, you might want to do something like\r\n\r\n```\r\ndiamonds >> groupby(X.color) >> mask(X.x == X.x.min())        (1)\r\ndiamonds >> mask(X.x == X.x.min())                                          (2)\r\n```\r\nFor (1), it returns a single row, where x is not a min for any group, but (2) behaves as expected.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/20", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/20/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/20/events", "html_url": "https://github.com/kieferk/dfply/issues/20", "id": 206836359, "node_id": "MDU6SXNzdWUyMDY4MzYzNTk=", "number": 20, "title": "ValueError: Item wrong length 114 instead of 60.", "user": {"login": "Make42", "id": 4905185, "node_id": "MDQ6VXNlcjQ5MDUxODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4905185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Make42", "html_url": "https://github.com/Make42", "followers_url": "https://api.github.com/users/Make42/followers", "following_url": "https://api.github.com/users/Make42/following{/other_user}", "gists_url": "https://api.github.com/users/Make42/gists{/gist_id}", "starred_url": "https://api.github.com/users/Make42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Make42/subscriptions", "organizations_url": "https://api.github.com/users/Make42/orgs", "repos_url": "https://api.github.com/users/Make42/repos", "events_url": "https://api.github.com/users/Make42/events{/privacy}", "received_events_url": "https://api.github.com/users/Make42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-10T16:10:52Z", "updated_at": "2017-02-10T16:17:42Z", "closed_at": "2017-02-10T16:17:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "With my simple code\r\n\r\n     resultstatsDF >> mask(X.method == 'MICE')\r\n\r\nI get the error\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Development/Anaconda-Python-Distribution/anaconda2/envs/myenv/lib/python3.5/code.py\", line 91, in runcode\r\n    exec(code, self.locals)\r\n  File \"<input>\", line 1, in <module>\r\n  File \"/Development/Anaconda-Python-Distribution/anaconda2/envs/myenv/lib/python3.5/site-packages/dfply/base.py\", line 45, in __rrshift__\r\n    result = self.function(other_copy)\r\n  File \"/Development/Anaconda-Python-Distribution/anaconda2/envs/myenv/lib/python3.5/site-packages/dfply/base.py\", line 52, in <lambda>\r\n    return pipe(lambda x: self.function(x, *args, **kwargs))\r\n  File \"/Development/Anaconda-Python-Distribution/anaconda2/envs/myenv/lib/python3.5/site-packages/dfply/base.py\", line 112, in __call__\r\n    return self.function(*args, **kwargs)\r\n  File \"/Development/Anaconda-Python-Distribution/anaconda2/envs/myenv/lib/python3.5/site-packages/dfply/base.py\", line 179, in __call__\r\n    evaluation = self.call_action(args, kwargs)\r\n  File \"/Development/Anaconda-Python-Distribution/anaconda2/envs/myenv/lib/python3.5/site-packages/dfply/base.py\", line 253, in call_action\r\n    return symbolic.to_callable(symbolic_function)(args[0])\r\n  File \"/Development/Anaconda-Python-Distribution/anaconda2/envs/myenv/lib/python3.5/site-packages/pandas_ply/symbolic.py\", line 204, in <lambda>\r\n    return lambda *args, **kwargs: obj._eval(dict(enumerate(args), **kwargs))\r\n  File \"/Development/Anaconda-Python-Distribution/anaconda2/envs/myenv/lib/python3.5/site-packages/pandas_ply/symbolic.py\", line 142, in _eval\r\n    result = evaled_func(*evaled_args, **evaled_kwargs)\r\n  File \"/Development/Anaconda-Python-Distribution/anaconda2/envs/myenv/lib/python3.5/site-packages/dfply/subset.py\", line 56, in mask\r\n    return df[mask.values]\r\n  File \"/Development/Anaconda-Python-Distribution/anaconda2/envs/myenv/lib/python3.5/site-packages/pandas/core/frame.py\", line 2053, in __getitem__\r\n    return self._getitem_array(key)\r\n  File \"/Development/Anaconda-Python-Distribution/anaconda2/envs/myenv/lib/python3.5/site-packages/pandas/core/frame.py\", line 2090, in _getitem_array\r\n    (len(key), len(self.index)))\r\nValueError: Item wrong length 114 instead of 60.\r\n```\r\n\r\nWhere my `resultstatsDF.shape` is `(60, 10)`. What am I to do?\r\n\r\nCould it be that it has something to do with my the following?\r\n\r\n```\r\nresultstatsDF.index\r\nInt64Index([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n            0, 0, 0, 1, 2, 3, 4, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5],\r\n           dtype='int64')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/19", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/19/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/19/events", "html_url": "https://github.com/kieferk/dfply/issues/19", "id": 206814736, "node_id": "MDU6SXNzdWUyMDY4MTQ3MzY=", "number": 19, "title": "How to install?", "user": {"login": "Make42", "id": 4905185, "node_id": "MDQ6VXNlcjQ5MDUxODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4905185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Make42", "html_url": "https://github.com/Make42", "followers_url": "https://api.github.com/users/Make42/followers", "following_url": "https://api.github.com/users/Make42/following{/other_user}", "gists_url": "https://api.github.com/users/Make42/gists{/gist_id}", "starred_url": "https://api.github.com/users/Make42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Make42/subscriptions", "organizations_url": "https://api.github.com/users/Make42/orgs", "repos_url": "https://api.github.com/users/Make42/repos", "events_url": "https://api.github.com/users/Make42/events{/privacy}", "received_events_url": "https://api.github.com/users/Make42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-10T14:49:13Z", "updated_at": "2020-03-06T21:11:51Z", "closed_at": "2017-02-10T16:02:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the readme is not instruction how to best install dfply. Could you add this, please? I especially would like to know how to install it into an Anaconda environment.\r\n\r\nI checked out the requirements and, except for `pandas_ply`, I got them installed. However, I am not sure what `pandas_ply` is supposed to be. Do you mean https://github.com/coursera/pandas-ply? If so: From their github-page I understand that pandas-ply is not stable yet. So why would dfply be considered stable if it is build on pandas-ply?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/18", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/18/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/18/events", "html_url": "https://github.com/kieferk/dfply/issues/18", "id": 201074316, "node_id": "MDU6SXNzdWUyMDEwNzQzMTY=", "number": 18, "title": "Doc for masking on Null", "user": {"login": "edlee123", "id": 16417837, "node_id": "MDQ6VXNlcjE2NDE3ODM3", "avatar_url": "https://avatars1.githubusercontent.com/u/16417837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edlee123", "html_url": "https://github.com/edlee123", "followers_url": "https://api.github.com/users/edlee123/followers", "following_url": "https://api.github.com/users/edlee123/following{/other_user}", "gists_url": "https://api.github.com/users/edlee123/gists{/gist_id}", "starred_url": "https://api.github.com/users/edlee123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edlee123/subscriptions", "organizations_url": "https://api.github.com/users/edlee123/orgs", "repos_url": "https://api.github.com/users/edlee123/repos", "events_url": "https://api.github.com/users/edlee123/events{/privacy}", "received_events_url": "https://api.github.com/users/edlee123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-16T17:07:47Z", "updated_at": "2017-09-10T19:25:17Z", "closed_at": "2017-09-10T19:25:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, in your README examples would be very useful to have how to mask on Null / None, and not null?   \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/17", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/17/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/17/events", "html_url": "https://github.com/kieferk/dfply/issues/17", "id": 196569811, "node_id": "MDU6SXNzdWUxOTY1Njk4MTE=", "number": 17, "title": "Allow distinct with no arguments", "user": {"login": "themrmax", "id": 8220288, "node_id": "MDQ6VXNlcjgyMjAyODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/8220288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/themrmax", "html_url": "https://github.com/themrmax", "followers_url": "https://api.github.com/users/themrmax/followers", "following_url": "https://api.github.com/users/themrmax/following{/other_user}", "gists_url": "https://api.github.com/users/themrmax/gists{/gist_id}", "starred_url": "https://api.github.com/users/themrmax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/themrmax/subscriptions", "organizations_url": "https://api.github.com/users/themrmax/orgs", "repos_url": "https://api.github.com/users/themrmax/repos", "events_url": "https://api.github.com/users/themrmax/events{/privacy}", "received_events_url": "https://api.github.com/users/themrmax/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-12-20T02:16:22Z", "updated_at": "2017-09-10T19:21:23Z", "closed_at": "2017-09-10T19:21:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to be able to apply `distinct` to the whole dataframe, so that `distinct()` is equivalent to `drop_duplicates()`.\r\n\r\nJust putting this as a placeholder for now so that I remember, I'm happy to take this on and submit a PR when I get time.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/16", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/16/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/16/events", "html_url": "https://github.com/kieferk/dfply/issues/16", "id": 194478609, "node_id": "MDU6SXNzdWUxOTQ0Nzg2MDk=", "number": 16, "title": "dfply.X shadowing sklearn predictor data variable", "user": {"login": "themrmax", "id": 8220288, "node_id": "MDQ6VXNlcjgyMjAyODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/8220288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/themrmax", "html_url": "https://github.com/themrmax", "followers_url": "https://api.github.com/users/themrmax/followers", "following_url": "https://api.github.com/users/themrmax/following{/other_user}", "gists_url": "https://api.github.com/users/themrmax/gists{/gist_id}", "starred_url": "https://api.github.com/users/themrmax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/themrmax/subscriptions", "organizations_url": "https://api.github.com/users/themrmax/orgs", "repos_url": "https://api.github.com/users/themrmax/repos", "events_url": "https://api.github.com/users/themrmax/events{/privacy}", "received_events_url": "https://api.github.com/users/themrmax/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-09T00:03:15Z", "updated_at": "2016-12-14T22:14:21Z", "closed_at": "2016-12-14T22:14:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, not sure if this is an issue for anyone else, but one of my favourite features of dfply is the `X` symbol, but it's annoying because of the scikit-learn convention to use `X` for the array of predictors ... would it make sense to change `X` to something else? maybe `D` or `DF`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/15", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/15/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/15/events", "html_url": "https://github.com/kieferk/dfply/issues/15", "id": 193304036, "node_id": "MDU6SXNzdWUxOTMzMDQwMzY=", "number": 15, "title": "Error when groupby", "user": {"login": "ThoDuyNguyen", "id": 9877561, "node_id": "MDQ6VXNlcjk4Nzc1NjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/9877561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThoDuyNguyen", "html_url": "https://github.com/ThoDuyNguyen", "followers_url": "https://api.github.com/users/ThoDuyNguyen/followers", "following_url": "https://api.github.com/users/ThoDuyNguyen/following{/other_user}", "gists_url": "https://api.github.com/users/ThoDuyNguyen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThoDuyNguyen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThoDuyNguyen/subscriptions", "organizations_url": "https://api.github.com/users/ThoDuyNguyen/orgs", "repos_url": "https://api.github.com/users/ThoDuyNguyen/repos", "events_url": "https://api.github.com/users/ThoDuyNguyen/events{/privacy}", "received_events_url": "https://api.github.com/users/ThoDuyNguyen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-12-03T17:56:49Z", "updated_at": "2017-09-10T19:26:37Z", "closed_at": "2017-09-10T19:26:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Below is my test data: \r\n```\r\nIn[43]: payment >> head(5)\r\nOut[43]: \r\n\r\n                     date      user_name game_id                channel  \\\r\n11165 2016-08-24 06:36:28  000000000000o  myfish     FB_IS_MA_AG2535_GP   \r\n0     2016-08-02 10:14:31       00000025  myfish            google-play   \r\n8     2016-08-02 13:18:19       00000027  myfish  Fanpage_Dailypost_APK   \r\n10921 2016-08-23 19:48:21       00000030  myfish                 in_app   \r\n11980 2016-08-25 11:25:29       00000030  myfish                 in_app   \r\n\r\n        money  \r\n11165  3000.0  \r\n0      1000.0  \r\n8      3000.0  \r\n10921  3000.0  \r\n11980  3000.0  \r\n```\r\n\r\nWhen I try to groupby: \r\n\r\n```\r\npayment >> head(5) >> groupby(X.user_name)\r\nIn[45]: payment >> head(5) >> groupby(X.user_name)\r\nTraceback (most recent call last):\r\n  File \"C:\\Program Files\\Anaconda2\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 2881, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-45-cf2fbef85582>\", line 1, in <module>\r\n    payment >> head(5) >> groupby(X.user_name)\r\n  File \"C:\\Program Files\\Anaconda2\\lib\\site-packages\\dfply\\base.py\", line 45, in __rrshift__\r\n    result = self.function(other_copy)\r\n  File \"C:\\Program Files\\Anaconda2\\lib\\site-packages\\dfply\\base.py\", line 52, in <lambda>\r\n    return pipe(lambda x: self.function(x, *args, **kwargs))\r\n  File \"C:\\Program Files\\Anaconda2\\lib\\site-packages\\dfply\\base.py\", line 179, in __call__\r\n    evaluation = self.call_action(args, kwargs)\r\n  File \"C:\\Program Files\\Anaconda2\\lib\\site-packages\\dfply\\base.py\", line 285, in call_action\r\n    return symbolic.to_callable(symbolic_function)(self.df)\r\n  File \"C:\\Program Files\\Anaconda2\\lib\\site-packages\\pandas_ply\\symbolic.py\", line 204, in <lambda>\r\n    return lambda *args, **kwargs: obj._eval(dict(enumerate(args), **kwargs))\r\n  File \"C:\\Program Files\\Anaconda2\\lib\\site-packages\\pandas_ply\\symbolic.py\", line 142, in _eval\r\n    result = evaled_func(*evaled_args, **evaled_kwargs)\r\n  File \"C:\\Program Files\\Anaconda2\\lib\\site-packages\\dfply\\base.py\", line 357, in wrapped\r\n    return f(*flat_args, **kwargs)\r\n  File \"C:\\Program Files\\Anaconda2\\lib\\site-packages\\dfply\\base.py\", line 456, in wrapped\r\n    for arg in args[1:]]\r\n  File \"C:\\Program Files\\Anaconda2\\lib\\site-packages\\dfply\\base.py\", line 437, in _col_ind_to_label\r\n    raise Exception(\"Label not of type str or int.\")\r\nException: Label not of type str or int.\r\n```\r\n\r\nMy data type: \r\n\r\n```\r\nIn[46]: payment.dtypes\r\nOut[46]: \r\n\r\ndate         datetime64[ns]\r\nuser_name            object\r\ngame_id              object\r\nchannel              object\r\nmoney               float64\r\ndtype: object\r\n\r\n```\r\n\r\nThe data was read from database using `sqlalchemy` and `user_name` is store as varchar. \r\n\r\nI rechecked with the `diamonds` data using the same command but it works for `diamond` and I could not figure out why.\r\n\r\nHow could I fix the problem?\r\n\r\nKind regards. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/14", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/14/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/14/events", "html_url": "https://github.com/kieferk/dfply/issues/14", "id": 191835420, "node_id": "MDU6SXNzdWUxOTE4MzU0MjA=", "number": 14, "title": "Upcoming v1.0.0", "user": {"login": "kieferk", "id": 18038936, "node_id": "MDQ6VXNlcjE4MDM4OTM2", "avatar_url": "https://avatars3.githubusercontent.com/u/18038936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kieferk", "html_url": "https://github.com/kieferk", "followers_url": "https://api.github.com/users/kieferk/followers", "following_url": "https://api.github.com/users/kieferk/following{/other_user}", "gists_url": "https://api.github.com/users/kieferk/gists{/gist_id}", "starred_url": "https://api.github.com/users/kieferk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kieferk/subscriptions", "organizations_url": "https://api.github.com/users/kieferk/orgs", "repos_url": "https://api.github.com/users/kieferk/repos", "events_url": "https://api.github.com/users/kieferk/events{/privacy}", "received_events_url": "https://api.github.com/users/kieferk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-11-27T00:57:20Z", "updated_at": "2018-09-06T11:24:47Z", "closed_at": "2018-09-06T03:38:35Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Hello users,\r\n\r\nI have been working on and off on an upcoming version which will be v1.0.0 due to its incompatibility with previous versions. You can actually view this nearly-complete version in the \"feature/collapsed-selection\" branch.\r\n\r\nOriginally I was just working on getting the selection helper functions working, but in order to do that a lot had to change with the base decorators. The selection helper functions now work (such as `contains(\"ca\")` for finding columns that contain that string as an argument to the select function. Previously, there were a variety of different decorators that would be stacked together to get different kinds of behavior. In the new conceptualization, the only decorator that will be used is the `@dfpipe` decorator and it will take keyword arguments that can change its behavior (it can also be used without keyword arguments in which case it will behave as the current `@dfpipe` decorator does now.\r\n\r\nIf you're interested in checking it out and have any questions/comments/concerns, please go ahead. I don't have a timetable for its release but considering it's nearing completion and currently passes all the written unit tests, I don't expect it will be much longer.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/13", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/13/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/13/events", "html_url": "https://github.com/kieferk/dfply/issues/13", "id": 190652483, "node_id": "MDU6SXNzdWUxOTA2NTI0ODM=", "number": 13, "title": "semi_join and anti_join fail when joining for more than one column", "user": {"login": "anmiko", "id": 6287328, "node_id": "MDQ6VXNlcjYyODczMjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/6287328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anmiko", "html_url": "https://github.com/anmiko", "followers_url": "https://api.github.com/users/anmiko/followers", "following_url": "https://api.github.com/users/anmiko/following{/other_user}", "gists_url": "https://api.github.com/users/anmiko/gists{/gist_id}", "starred_url": "https://api.github.com/users/anmiko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anmiko/subscriptions", "organizations_url": "https://api.github.com/users/anmiko/orgs", "repos_url": "https://api.github.com/users/anmiko/repos", "events_url": "https://api.github.com/users/anmiko/events{/privacy}", "received_events_url": "https://api.github.com/users/anmiko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-21T08:48:24Z", "updated_at": "2016-11-27T00:51:03Z", "closed_at": "2016-11-27T00:50:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "semi_join and anti_join fail when joining for more than one column\r\nYou can reproduce it with \r\n\r\n```python\r\ndf1 = pd.DataFrame({'x':[1,2,3,4,5], 'y':[10,20,40,50,100]})\r\ndf2 = pd.DataFrame({'x':[3,4], 'y':[40,51], 'z':[600,800]})\r\nanti_join(df2, by =['x','y'])\r\n#or anti_join(df2, by =[['x','y'],['x','y']])\r\n```\r\nleft_join works fine with the same construction\r\nthe error message is:\r\n\r\n```\r\n  df1 >> anti_join(df2, by =['x','y'])\r\n  File \"/Users/anmiko/anaconda/lib/python3.5/site-packages/dfply/base.py\", line 45, in __rrshift__\r\n    result = self.function(other_copy)\r\n  File \"/Users/anmiko/anaconda/lib/python3.5/site-packages/dfply/base.py\", line 52, in <lambda>\r\n    return pipe(lambda x: self.function(x, *args, **kwargs))\r\n  File \"/Users/anmiko/anaconda/lib/python3.5/site-packages/dfply/join.py\", line 246, in anti_join\r\n    other_reduced = other[right_on].drop_duplicates()\r\n  File \"/Users/anmiko/anaconda/lib/python3.5/site-packages/pandas/core/frame.py\", line 2053, in __getitem__\r\n    return self._getitem_array(key)\r\n  File \"/Users/anmiko/anaconda/lib/python3.5/site-packages/pandas/core/frame.py\", line 2097, in _getitem_array\r\n    indexer = self.ix._convert_to_indexer(key, axis=1)\r\n  File \"/Users/anmiko/anaconda/lib/python3.5/site-packages/pandas/core/indexing.py\", line 1217, in _convert_to_indexer\r\n    indexer = check = labels.get_indexer(objarr)\r\n  File \"/Users/anmiko/anaconda/lib/python3.5/site-packages/pandas/indexes/base.py\", line 2286, in get_indexer\r\n    indexer = self._engine.get_indexer(target._values)\r\n  File \"pandas/index.pyx\", line 300, in pandas.index.IndexEngine.get_indexer (pandas/index.c:6420)\r\n  File \"pandas/src/hashtable_class_helper.pxi\", line 793, in pandas.hashtable.PyObjectHashTable.lookup (pandas/hashtable.c:14637)\r\nTypeError: unhashable type: 'list'\r\n```\r\n\r\nIt looks like the problem is with *else* block  in the code below (it's from function semi_join)\r\n\r\n```python\r\n...\r\nif not right_on:\r\n        right_on = [col_name for col_name in df.columns.values.tolist() if col_name in other.columns.values.tolist()]\r\n        left_on = right_on\r\n    else:\r\n        right_on = [right_on]\r\n...\r\n```\r\nPandas expects list of columns names but this block makes it list of list \r\nWhen *else* part removed it starts to work\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/11", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/11/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/11/events", "html_url": "https://github.com/kieferk/dfply/issues/11", "id": 186098366, "node_id": "MDU6SXNzdWUxODYwOTgzNjY=", "number": 11, "title": "filter ", "user": {"login": "shoyer", "id": 1217238, "node_id": "MDQ6VXNlcjEyMTcyMzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shoyer", "html_url": "https://github.com/shoyer", "followers_url": "https://api.github.com/users/shoyer/followers", "following_url": "https://api.github.com/users/shoyer/following{/other_user}", "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions", "organizations_url": "https://api.github.com/users/shoyer/orgs", "repos_url": "https://api.github.com/users/shoyer/repos", "events_url": "https://api.github.com/users/shoyer/events{/privacy}", "received_events_url": "https://api.github.com/users/shoyer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-10-29T20:09:04Z", "updated_at": "2016-10-29T20:21:31Z", "closed_at": "2016-10-29T20:10:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "This function is pretty essential for data analysis, and selecting by value is also one of the least ergonomic operations in pandas, so this would provide real value.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/9", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/9/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/9/events", "html_url": "https://github.com/kieferk/dfply/issues/9", "id": 185483026, "node_id": "MDU6SXNzdWUxODU0ODMwMjY=", "number": 9, "title": "Suggestion: an operator similar to magrittr's %<>% ", "user": {"login": "bleearmstrong", "id": 7926380, "node_id": "MDQ6VXNlcjc5MjYzODA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7926380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bleearmstrong", "html_url": "https://github.com/bleearmstrong", "followers_url": "https://api.github.com/users/bleearmstrong/followers", "following_url": "https://api.github.com/users/bleearmstrong/following{/other_user}", "gists_url": "https://api.github.com/users/bleearmstrong/gists{/gist_id}", "starred_url": "https://api.github.com/users/bleearmstrong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bleearmstrong/subscriptions", "organizations_url": "https://api.github.com/users/bleearmstrong/orgs", "repos_url": "https://api.github.com/users/bleearmstrong/repos", "events_url": "https://api.github.com/users/bleearmstrong/events{/privacy}", "received_events_url": "https://api.github.com/users/bleearmstrong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-26T19:09:28Z", "updated_at": "2016-11-02T02:19:00Z", "closed_at": "2016-11-02T02:19:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "A common idiom in dplyr is something like\n\n```\ndf = df %>% (stuff)...\n```\n\nwhich can be simplified with\n\n```\ndf %<>% (stuff)\n```\n\nI've looked around to see there's a way to overload `<>`, and I'm not sure there is (I think this gets intrepreted as `__neq__`, but then that also applied to `!=`).\n\nAt any rate, I think this would be very useful (essentially just doing things inplace instead of with copies)\n\nIt might be worth noting that Hadley has purposely left this out of dplyr, because (I believe) he's sort of opposed to doing things inplace.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kieferk/dfply/issues/8", "repository_url": "https://api.github.com/repos/kieferk/dfply", "labels_url": "https://api.github.com/repos/kieferk/dfply/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/kieferk/dfply/issues/8/comments", "events_url": "https://api.github.com/repos/kieferk/dfply/issues/8/events", "html_url": "https://github.com/kieferk/dfply/issues/8", "id": 184505830, "node_id": "MDU6SXNzdWUxODQ1MDU4MzA=", "number": 8, "title": "Data missing after installation", "user": {"login": "elyase", "id": 1175888, "node_id": "MDQ6VXNlcjExNzU4ODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1175888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elyase", "html_url": "https://github.com/elyase", "followers_url": "https://api.github.com/users/elyase/followers", "following_url": "https://api.github.com/users/elyase/following{/other_user}", "gists_url": "https://api.github.com/users/elyase/gists{/gist_id}", "starred_url": "https://api.github.com/users/elyase/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elyase/subscriptions", "organizations_url": "https://api.github.com/users/elyase/orgs", "repos_url": "https://api.github.com/users/elyase/repos", "events_url": "https://api.github.com/users/elyase/events{/privacy}", "received_events_url": "https://api.github.com/users/elyase/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-10-21T14:54:38Z", "updated_at": "2016-10-21T23:04:02Z", "closed_at": "2016-10-21T23:04:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Steps to reproduce:\n\n```\n$ conda create -n volatile-test-dfply -y python=3 jupyter\n$ source activate volatile-test-dfply\n$ pip install https://github.com/kieferk/dfply/zipball/master\n$ jupyter console\n>>> from dfply import *\nIn [1]: from dfply import *\n---------------------------------------------------------------------------\nFileNotFoundError                         Traceback (most recent call last)\n<ipython-input-1-aa7758fd9eef> in <module>()\n----> 1 from dfply import *\n\n/Users/elyase/miniconda3/envs/volatile-test-dfply/lib/python3.5/site-packages/dfply/__init__.py in <module>()\n      9 from dfply.summarize import *\n     10 from dfply.transform import *\n---> 11 from dfply.data import *\n     12 from dfply.summary_functions import *\n     13 from dfply.window_functions import *\n\n/Users/elyase/miniconda3/envs/volatile-test-dfply/lib/python3.5/site-packages/dfply/data.py in <module>()\n      3\n      4 root = os.path.abspath(os.path.dirname(__file__))\n----> 5 diamonds = pd.read_csv(os.path.join(root,  '..', 'data', \"diamonds.csv\"))\n\n/Users/elyase/miniconda3/envs/volatile-test-dfply/lib/python3.5/site-packages/pandas/io/parsers.py in parser_f(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, escapechar, comment, encoding, dialect, tupleize_cols, error_bad_lines, warn_bad_lines, skipfooter, skip_footer, doublequote, delim_whitespace, as_recarray, compact_ints, use_unsigned, low_memory, buffer_lines, memory_map, float_precision)\n    643                     skip_blank_lines=skip_blank_lines)\n    644\n--> 645         return _read(filepath_or_buffer, kwds)\n    646\n    647     parser_f.__name__ = name\n\n/Users/elyase/miniconda3/envs/volatile-test-dfply/lib/python3.5/site-packages/pandas/io/parsers.py in _read(filepath_or_buffer, kwds)\n    386\n    387     # Create the parser.\n--> 388     parser = TextFileReader(filepath_or_buffer, **kwds)\n    389\n    390     if (nrows is not None) and (chunksize is not None):\n\n/Users/elyase/miniconda3/envs/volatile-test-dfply/lib/python3.5/site-packages/pandas/io/parsers.py in __init__(self, f, engine, **kwds)\n    727             self.options['has_index_names'] = kwds['has_index_names']\n    728\n--> 729         self._make_engine(self.engine)\n    730\n    731     def close(self):\n\n/Users/elyase/miniconda3/envs/volatile-test-dfply/lib/python3.5/site-packages/pandas/io/parsers.py in _make_engine(self, engine)\n    920     def _make_engine(self, engine='c'):\n    921         if engine == 'c':\n--> 922             self._engine = CParserWrapper(self.f, **self.options)\n    923         else:\n    924             if engine == 'python':\n\n/Users/elyase/miniconda3/envs/volatile-test-dfply/lib/python3.5/site-packages/pandas/io/parsers.py in __init__(self, src, **kwds)\n   1387         kwds['allow_leading_cols'] = self.index_col is not False\n   1388\n-> 1389         self._reader = _parser.TextReader(src, **kwds)\n   1390\n   1391         # XXX\n\npandas/parser.pyx in pandas.parser.TextReader.__cinit__ (pandas/parser.c:4019)()\n\npandas/parser.pyx in pandas.parser.TextReader._setup_parser_source (pandas/parser.c:7967)()\n\nFileNotFoundError: File b'/Users/elyase/miniconda3/envs/volatile-test-dfply/lib/python3.5/site-packages/dfply/../data/diamonds.csv' does not exist\n\nFileNotFoundError: File b'/Users/elyase/miniconda3/envs/volatile-test-dfply/lib/python3.5/site-packages/dfply/../data/diamonds.csv' does not exist\n```\n", "performed_via_github_app": null, "score": 1.0}]}