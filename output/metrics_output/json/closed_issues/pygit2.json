{"total_count": 367, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/libgit2/pygit2/issues/1026", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/1026/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/1026/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/1026/events", "html_url": "https://github.com/libgit2/pygit2/issues/1026", "id": 673396893, "node_id": "MDU6SXNzdWU2NzMzOTY4OTM=", "number": 1026, "title": "macOS wheels don't work on macOS 10.12", "user": {"login": "RazerM", "id": 1337586, "node_id": "MDQ6VXNlcjEzMzc1ODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1337586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RazerM", "html_url": "https://github.com/RazerM", "followers_url": "https://api.github.com/users/RazerM/followers", "following_url": "https://api.github.com/users/RazerM/following{/other_user}", "gists_url": "https://api.github.com/users/RazerM/gists{/gist_id}", "starred_url": "https://api.github.com/users/RazerM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RazerM/subscriptions", "organizations_url": "https://api.github.com/users/RazerM/orgs", "repos_url": "https://api.github.com/users/RazerM/repos", "events_url": "https://api.github.com/users/RazerM/events{/privacy}", "received_events_url": "https://api.github.com/users/RazerM/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-08-05T09:31:04Z", "updated_at": "2020-08-06T16:16:58Z", "closed_at": "2020-08-06T16:16:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The wheels report 10.9+ compatibility but don't work on 10.12. The same error happens for the 1.2.0 and 1.2.1 wheels:\r\n\r\n```\r\nPython 3.7.1 (default, Apr  7 2020, 18:00:22)\r\n[Clang 9.0.0 (clang-900.0.39.2)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import pygit2\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"...lib/python3.7/site-packages/pygit2/__init__.py\", line 30, in <module>\r\n    from ._pygit2 import *\r\nImportError: dlopen(...lib/python3.7/site-packages/pygit2/_pygit2.cpython-37m-darwin.so, 2): Symbol not found: ____chkstk_darwin\r\n  Referenced from: ...lib/python3.7/site-packages/pygit2/.dylibs/libgit2.1.0.0.dylib\r\n  Expected in: /usr/lib/libSystem.B.dylib\r\n in ...lib/python3.7/site-packages/pygit2/.dylibs/libgit2.1.0.0.dylib\r\n```\r\n\r\nI guess they use a symbol from a newer libSystem.\r\n\r\n(I know the workaround is to do `pip install --no-binary pygit2 pygit2`).\r\n\r\nIn case it's related, see https://github.com/pyca/cryptography/issues/5215 and https://github.com/pyca/infra/pull/275", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/1016", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/1016/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/1016/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/1016/events", "html_url": "https://github.com/libgit2/pygit2/issues/1016", "id": 648204412, "node_id": "MDU6SXNzdWU2NDgyMDQ0MTI=", "number": 1016, "title": "How do I apply a patch to a tree?", "user": {"login": "chilabot", "id": 1167569, "node_id": "MDQ6VXNlcjExNjc1Njk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1167569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chilabot", "html_url": "https://github.com/chilabot", "followers_url": "https://api.github.com/users/chilabot/followers", "following_url": "https://api.github.com/users/chilabot/following{/other_user}", "gists_url": "https://api.github.com/users/chilabot/gists{/gist_id}", "starred_url": "https://api.github.com/users/chilabot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chilabot/subscriptions", "organizations_url": "https://api.github.com/users/chilabot/orgs", "repos_url": "https://api.github.com/users/chilabot/repos", "events_url": "https://api.github.com/users/chilabot/events{/privacy}", "received_events_url": "https://api.github.com/users/chilabot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-30T14:04:31Z", "updated_at": "2020-07-01T19:40:55Z", "closed_at": "2020-07-01T19:40:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to apply a patch to a tree, and have the modified tree. 'pygit2.Repository.apply' applies to the working tree. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/1014", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/1014/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/1014/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/1014/events", "html_url": "https://github.com/libgit2/pygit2/issues/1014", "id": 639571503, "node_id": "MDU6SXNzdWU2Mzk1NzE1MDM=", "number": 1014, "title": "AWS Lambda Python3.8 env error: libpython2.7.so.1.0: cannot open shared object file: No such file or directory", "user": {"login": "L11KAS", "id": 55182136, "node_id": "MDQ6VXNlcjU1MTgyMTM2", "avatar_url": "https://avatars3.githubusercontent.com/u/55182136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/L11KAS", "html_url": "https://github.com/L11KAS", "followers_url": "https://api.github.com/users/L11KAS/followers", "following_url": "https://api.github.com/users/L11KAS/following{/other_user}", "gists_url": "https://api.github.com/users/L11KAS/gists{/gist_id}", "starred_url": "https://api.github.com/users/L11KAS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/L11KAS/subscriptions", "organizations_url": "https://api.github.com/users/L11KAS/orgs", "repos_url": "https://api.github.com/users/L11KAS/repos", "events_url": "https://api.github.com/users/L11KAS/events{/privacy}", "received_events_url": "https://api.github.com/users/L11KAS/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-16T10:58:14Z", "updated_at": "2020-07-16T16:44:46Z", "closed_at": "2020-07-16T16:44:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm currently developing an AWS Lambda (Python3.8) function to connect and pull source code from github enterprise. However, the function fails after deploying it with the following error:  \r\n\r\n`[ERROR] Runtime.ImportModuleError: Unable to import module 'github_pull_source': libpython2.7.so.1.0: cannot open shared object file: No such file or directory`\r\n\r\nAlso, if I downgrade AWS Lambda Python environment to 2.7 - everything works fine. My guess is that AWS had removed some packages from the latest AMI they use to run python3.8 VMs/Containers \r\n\r\nI raised the same issue with AWS too and still waiting for their response. Is there anything from your side that can be done? Anyone else encountered same issue and maybe found the way to fix it? Apologies if it's a duplicate but I searched this repo and could not find anything similar. \r\n\r\nThanks everyone in advance for your help and suggestions!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/1010", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/1010/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/1010/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/1010/events", "html_url": "https://github.com/libgit2/pygit2/issues/1010", "id": 623900343, "node_id": "MDU6SXNzdWU2MjM5MDAzNDM=", "number": 1010, "title": "Enhancement: Ability to add a submodule", "user": {"login": "leftink", "id": 4984003, "node_id": "MDQ6VXNlcjQ5ODQwMDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/4984003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leftink", "html_url": "https://github.com/leftink", "followers_url": "https://api.github.com/users/leftink/followers", "following_url": "https://api.github.com/users/leftink/following{/other_user}", "gists_url": "https://api.github.com/users/leftink/gists{/gist_id}", "starred_url": "https://api.github.com/users/leftink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leftink/subscriptions", "organizations_url": "https://api.github.com/users/leftink/orgs", "repos_url": "https://api.github.com/users/leftink/repos", "events_url": "https://api.github.com/users/leftink/events{/privacy}", "received_events_url": "https://api.github.com/users/leftink/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-24T16:42:26Z", "updated_at": "2020-05-28T15:15:33Z", "closed_at": "2020-05-28T15:15:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Implement the functionality of `git submodule add`.  It looks to be supported in libgit2 and just needs to be implemented in pygit2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/1007", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/1007/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/1007/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/1007/events", "html_url": "https://github.com/libgit2/pygit2/issues/1007", "id": 615456699, "node_id": "MDU6SXNzdWU2MTU0NTY2OTk=", "number": 1007, "title": "Can't install on Debian", "user": {"login": "AbstractUmbra", "id": 16031716, "node_id": "MDQ6VXNlcjE2MDMxNzE2", "avatar_url": "https://avatars0.githubusercontent.com/u/16031716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AbstractUmbra", "html_url": "https://github.com/AbstractUmbra", "followers_url": "https://api.github.com/users/AbstractUmbra/followers", "following_url": "https://api.github.com/users/AbstractUmbra/following{/other_user}", "gists_url": "https://api.github.com/users/AbstractUmbra/gists{/gist_id}", "starred_url": "https://api.github.com/users/AbstractUmbra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AbstractUmbra/subscriptions", "organizations_url": "https://api.github.com/users/AbstractUmbra/orgs", "repos_url": "https://api.github.com/users/AbstractUmbra/repos", "events_url": "https://api.github.com/users/AbstractUmbra/events{/privacy}", "received_events_url": "https://api.github.com/users/AbstractUmbra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 763120268, "node_id": "MDU6TGFiZWw3NjMxMjAyNjg=", "url": "https://api.github.com/repos/libgit2/pygit2/labels/support", "name": "support", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-10T19:13:52Z", "updated_at": "2020-05-16T08:05:14Z", "closed_at": "2020-05-16T08:05:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "User: root\r\nlibgit2: 1.0.0, installed from source\r\nldconfig output:-\r\n```shell\r\n# ldconfig -p  | grep libgit\r\n        libgit2.so.1.0 (libc6,x86-64) => /usr/lib/x86_64-linux-gnu/libgit2.so.1.0\r\n        libgit2.so (libc6,x86-64) => /usr/lib/x86_64-linux-gnu/libgit2.so\r\n```\r\n\r\nWhen installing pygit2 from pip (`python3.7 -m pip install -U pygit2`) it is failing to install with the attached error log.\r\n[pygit2error.txt](https://github.com/libgit2/pygit2/files/4606595/pygit2error.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/1005", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/1005/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/1005/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/1005/events", "html_url": "https://github.com/libgit2/pygit2/issues/1005", "id": 614081106, "node_id": "MDU6SXNzdWU2MTQwODExMDY=", "number": 1005, "title": "Is it possible to clone a google cloud source repository?", "user": {"login": "meekrosoft", "id": 145429, "node_id": "MDQ6VXNlcjE0NTQyOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/145429?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meekrosoft", "html_url": "https://github.com/meekrosoft", "followers_url": "https://api.github.com/users/meekrosoft/followers", "following_url": "https://api.github.com/users/meekrosoft/following{/other_user}", "gists_url": "https://api.github.com/users/meekrosoft/gists{/gist_id}", "starred_url": "https://api.github.com/users/meekrosoft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meekrosoft/subscriptions", "organizations_url": "https://api.github.com/users/meekrosoft/orgs", "repos_url": "https://api.github.com/users/meekrosoft/repos", "events_url": "https://api.github.com/users/meekrosoft/events{/privacy}", "received_events_url": "https://api.github.com/users/meekrosoft/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-07T13:59:49Z", "updated_at": "2020-05-08T13:21:28Z", "closed_at": "2020-05-08T13:21:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does pygit2 support ssh url strings in email format?\r\n\r\nWhen I try to clone a git repo from google cloud source repository I get this error:\r\n\r\n`ValueError: malformed URL 'ssh://mike@compliancedb.com@source.developers.google.com:2022/p/project-name-1234566/r/repo.git'`\r\n\r\nThe same code seems to with github format `ssh://git@github.com/<org>/<repo>.git`\r\n\r\nI'm sure there is a simple error in my approach, but I can't seem to find it.\r\n\r\nI have tried changing the Keypair user from `git` to `mike@compliancedb.com` and that didn't seem to help. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/1000", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/1000/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/1000/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/1000/events", "html_url": "https://github.com/libgit2/pygit2/issues/1000", "id": 600873040, "node_id": "MDU6SXNzdWU2MDA4NzMwNDA=", "number": 1000, "title": "Bundle libgit2 with pygit2 for all plattforms", "user": {"login": "omniproc", "id": 2482535, "node_id": "MDQ6VXNlcjI0ODI1MzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2482535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omniproc", "html_url": "https://github.com/omniproc", "followers_url": "https://api.github.com/users/omniproc/followers", "following_url": "https://api.github.com/users/omniproc/following{/other_user}", "gists_url": "https://api.github.com/users/omniproc/gists{/gist_id}", "starred_url": "https://api.github.com/users/omniproc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omniproc/subscriptions", "organizations_url": "https://api.github.com/users/omniproc/orgs", "repos_url": "https://api.github.com/users/omniproc/repos", "events_url": "https://api.github.com/users/omniproc/events{/privacy}", "received_events_url": "https://api.github.com/users/omniproc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-16T09:06:43Z", "updated_at": "2020-04-16T20:37:14Z", "closed_at": "2020-04-16T14:59:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently only Windows comes with a pre-built libgit2 binary bundled (and mac osx?). On Linux however pygit2 depends on libgit2. I'm not sure what's the design rational behind it but IMO that system dependency is prone to error.\r\n\r\nWould it make sense to bundle the libgit2 version that pygit2 was tested with for every platform? This way we'd have consistent install and execution behaviour across all plattforms.\r\nI don't see the benefit of using system libs besides saving some MB here and there, which shouldn't be a reason.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/999", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/999/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/999/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/999/events", "html_url": "https://github.com/libgit2/pygit2/issues/999", "id": 597905512, "node_id": "MDU6SXNzdWU1OTc5MDU1MTI=", "number": 999, "title": "Installation of pygit2 is failing", "user": {"login": "johnsamuelwrites", "id": 8275121, "node_id": "MDQ6VXNlcjgyNzUxMjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/8275121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnsamuelwrites", "html_url": "https://github.com/johnsamuelwrites", "followers_url": "https://api.github.com/users/johnsamuelwrites/followers", "following_url": "https://api.github.com/users/johnsamuelwrites/following{/other_user}", "gists_url": "https://api.github.com/users/johnsamuelwrites/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnsamuelwrites/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnsamuelwrites/subscriptions", "organizations_url": "https://api.github.com/users/johnsamuelwrites/orgs", "repos_url": "https://api.github.com/users/johnsamuelwrites/repos", "events_url": "https://api.github.com/users/johnsamuelwrites/events{/privacy}", "received_events_url": "https://api.github.com/users/johnsamuelwrites/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1058444127, "node_id": "MDU6TGFiZWwxMDU4NDQ0MTI3", "url": "https://api.github.com/repos/libgit2/pygit2/labels/documentation", "name": "documentation", "color": "0000FF", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-04-10T14:05:01Z", "updated_at": "2020-04-16T14:48:50Z", "closed_at": "2020-04-16T14:44:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "On running \r\n\r\n`pip3 install  pygit2`\r\n\r\nI get the following error on Ubuntu 19.10\r\n\r\n```\r\nsrc/types.h:36:2: error: #error You need a compatible libgit2 version (1.0.x)\r\n       36 | #error You need a compatible libgit2 version (1.0.x)\r\n          |  ^~~~~\r\n    src/types.h:251:5: error: unknown type name \u2018git_mailmap\u2019\r\n      251 |     git_mailmap *mailmap;\r\n          |     ^~~~~~~~~~~\r\n    error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\r\n```\r\n\r\nA previous [issue](https://github.com/libgit2/pygit2/issues/512) suggested installing `libgit2-dev `and also `build-essential libffi-dev python-dev libgit2-dev`, but there is no change. Am I missing any particular installation.\r\n\r\nFollowing is the version of libgit installed.\r\n\r\n```\r\n$ ldconfig -p | grep libgit\r\n\tlibgit2.so.27 (libc6,x86-64) => /lib/x86_64-linux-gnu/libgit2.so.27\r\n\tlibgit2.so (libc6,x86-64) => /lib/x86_64-linux-gnu/libgit2.so\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/996", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/996/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/996/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/996/events", "html_url": "https://github.com/libgit2/pygit2/issues/996", "id": 593183262, "node_id": "MDU6SXNzdWU1OTMxODMyNjI=", "number": 996, "title": "RemoteCallbacks exceptions are ignored", "user": {"login": "omniproc", "id": 2482535, "node_id": "MDQ6VXNlcjI0ODI1MzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2482535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omniproc", "html_url": "https://github.com/omniproc", "followers_url": "https://api.github.com/users/omniproc/followers", "following_url": "https://api.github.com/users/omniproc/following{/other_user}", "gists_url": "https://api.github.com/users/omniproc/gists{/gist_id}", "starred_url": "https://api.github.com/users/omniproc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omniproc/subscriptions", "organizations_url": "https://api.github.com/users/omniproc/orgs", "repos_url": "https://api.github.com/users/omniproc/repos", "events_url": "https://api.github.com/users/omniproc/events{/privacy}", "received_events_url": "https://api.github.com/users/omniproc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-04-03T07:39:26Z", "updated_at": "2020-04-14T15:49:51Z", "closed_at": "2020-04-14T15:49:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently if one implements a custom `RemoteCallbacks.get_credentials()` and in the process of returning the credentials to the caller throws any Exception, that Exception is ignored and will be replaced by a generic `GitError` exception, limiting any custom exception handling.\r\n\r\nThe code that does this seems to be in the [remote.py](https://github.com/libgit2/pygit2/blob/master/pygit2/remote.py#L309). To be more precise [here](https://github.com/libgit2/pygit2/blob/be32579ebbe198c637215140454a9bceeeca0d4f/pygit2/remote.py#L309) in the RemoteCallbacks class.\r\n\r\n```Python\r\ntry:\r\n\tccred = get_credentials(credentials, url, username, allowed)\r\n\tcred_out[0] = ccred[0]\r\nexcept Passthrough:\r\n\treturn C.GIT_PASSTHROUGH\r\nexcept Exception as e:\r\n\tself._stored_exception = e\r\n\treturn C.GIT_EUSER\r\n```\r\n\r\nIt stores the error into `_stored_exception` but simply returns `-7` to the caller. \r\nThe calling function then usually will pass that error code to the generic `check_error()` function of the `errors.py` module. However, the actual Exception stored in `_stored_exception` is never processed there. Instead, it simply raises a `GitError` with the message `err -7 (no message provided)`.\r\n\r\nIt's unclear how a custom RemoteCallbacks is supposed to perform exception handling when the desired handling is to \"bubble the error upwards the stack\" where it would be handled and it's unclear why the exception is stored but never re-raised or atleast it's message used to inform the caller about the actual error.\r\n\r\n\r\nE.g. if someone implements RemoteCallbacks like this:\r\n\r\n```Python\r\nclass MyCallbacks(RemoteCallbacks):\r\n    def credentials(self, url, username_from_url, allowed_types):\r\n        raise Exception(\"handle me higher up in the stack!\")\r\n```\r\n\r\nand calls it like this:\r\n\r\n```Python\r\ntry:\r\n    pygit2.clone_repository(\"ssh://github.com/libgit2/pygit2\", \"pygit2.git\", callbacks=MyCallbacks())\r\nexcept GitError ex:\r\n    print(ex)\r\nexcept Exception as ex:\r\n    print(f\"custom exception handled here: {ex}\")\r\n```\r\n\r\nOne would expect the output to be:\r\n> custom exception handled here: handle me higher up in the stack!\r\n\r\n\r\nWhile we actually get:\r\n\r\n> err -7 (no message provided)\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/991", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/991/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/991/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/991/events", "html_url": "https://github.com/libgit2/pygit2/issues/991", "id": 585445483, "node_id": "MDU6SXNzdWU1ODU0NDU0ODM=", "number": 991, "title": "Drop Python 3.5 support", "user": {"login": "jdavid", "id": 596769, "node_id": "MDQ6VXNlcjU5Njc2OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-21T07:06:23Z", "updated_at": "2020-03-21T18:06:11Z", "closed_at": "2020-03-21T18:06:11Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Related to PR #988  and PR #990 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/989", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/989/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/989/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/989/events", "html_url": "https://github.com/libgit2/pygit2/issues/989", "id": 583744209, "node_id": "MDU6SXNzdWU1ODM3NDQyMDk=", "number": 989, "title": "Tests use user/system git config", "user": {"login": "rcoup", "id": 59874, "node_id": "MDQ6VXNlcjU5ODc0", "avatar_url": "https://avatars1.githubusercontent.com/u/59874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rcoup", "html_url": "https://github.com/rcoup", "followers_url": "https://api.github.com/users/rcoup/followers", "following_url": "https://api.github.com/users/rcoup/following{/other_user}", "gists_url": "https://api.github.com/users/rcoup/gists{/gist_id}", "starred_url": "https://api.github.com/users/rcoup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rcoup/subscriptions", "organizations_url": "https://api.github.com/users/rcoup/orgs", "repos_url": "https://api.github.com/users/rcoup/repos", "events_url": "https://api.github.com/users/rcoup/events{/privacy}", "received_events_url": "https://api.github.com/users/rcoup/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1058443223, "node_id": "MDU6TGFiZWwxMDU4NDQzMjIz", "url": "https://api.github.com/repos/libgit2/pygit2/labels/libgit2", "name": "libgit2", "color": "FF8C00", "default": false, "description": ""}, {"id": 1081296590, "node_id": "MDU6TGFiZWwxMDgxMjk2NTkw", "url": "https://api.github.com/repos/libgit2/pygit2/labels/tests", "name": "tests", "color": "3fead6", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-18T13:52:39Z", "updated_at": "2020-03-24T11:56:59Z", "closed_at": "2020-03-24T11:56:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "eg:\r\n1. run `git config --global diff.noprefix true`\r\n2. `pytest -v test/test_diff.py`\r\n3. some tests fail\r\n\r\n_Presumably_ this is a symptom of the entire test run picking up the user/system git configuration, which seems bad from a reproducibility perspective? I couldn't see anything in the docs to tweak whether pygit2 picks up environment settings.\r\n\r\nSetting `GIT_CONFIG=/dev/null` and `GIT_CONFIG_NOSYSTEM=1` would sort it for cgit, but I don't think libgit2 picks up settings in the same way?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/986", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/986/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/986/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/986/events", "html_url": "https://github.com/libgit2/pygit2/issues/986", "id": 578580370, "node_id": "MDU6SXNzdWU1Nzg1ODAzNzA=", "number": 986, "title": "pygit2 1.1.1 missing build requirements in pyproject.toml", "user": {"login": "dcecile", "id": 311866, "node_id": "MDQ6VXNlcjMxMTg2Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/311866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcecile", "html_url": "https://github.com/dcecile", "followers_url": "https://api.github.com/users/dcecile/followers", "following_url": "https://api.github.com/users/dcecile/following{/other_user}", "gists_url": "https://api.github.com/users/dcecile/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcecile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcecile/subscriptions", "organizations_url": "https://api.github.com/users/dcecile/orgs", "repos_url": "https://api.github.com/users/dcecile/repos", "events_url": "https://api.github.com/users/dcecile/events{/privacy}", "received_events_url": "https://api.github.com/users/dcecile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-10T13:30:41Z", "updated_at": "2020-03-11T08:36:25Z", "closed_at": "2020-03-11T08:36:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Here's the warning I get from `pip` before pygit2 1.1.1 starts trying to build from source:\r\n\r\n```\r\n  WARNING: Missing build requirements in pyproject.toml for pygit2 from https://files.pythonhosted.org/packages/1d/c4/e0ba65178512a724a86b39565d7f9286c16d7f8e45e2f665973065c4a495/pygit2-1.1.1.tar.gz#sha256=9255d507d5d87bf22dfd57997a78908010331fc21f9a83eca121a53f657beb3c.\r\n  WARNING: The project does not specify a build backend, and pip cannot fall back to setuptools without 'wheel'.\r\n```\r\n\r\nI don't get this warning when installing pygit 1.0.3.\r\n\r\nI'm not sure what's needed to fix this warning, but I'm guessing it's related to either [PEP 517](https://www.python.org/dev/peps/pep-0517/) or [PEP 518](https://www.python.org/dev/peps/pep-0518/), and the new pyproject.toml file from ab92bfb2cd215317c3a6711e72110c749424bc95.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/985", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/985/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/985/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/985/events", "html_url": "https://github.com/libgit2/pygit2/issues/985", "id": 577095370, "node_id": "MDU6SXNzdWU1NzcwOTUzNzA=", "number": 985, "title": "\"Assertion failed\" when iterating over nested tree objects", "user": {"login": "lorencarvalho", "id": 1018108, "node_id": "MDQ6VXNlcjEwMTgxMDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1018108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lorencarvalho", "html_url": "https://github.com/lorencarvalho", "followers_url": "https://api.github.com/users/lorencarvalho/followers", "following_url": "https://api.github.com/users/lorencarvalho/following{/other_user}", "gists_url": "https://api.github.com/users/lorencarvalho/gists{/gist_id}", "starred_url": "https://api.github.com/users/lorencarvalho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lorencarvalho/subscriptions", "organizations_url": "https://api.github.com/users/lorencarvalho/orgs", "repos_url": "https://api.github.com/users/lorencarvalho/repos", "events_url": "https://api.github.com/users/lorencarvalho/events{/privacy}", "received_events_url": "https://api.github.com/users/lorencarvalho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-06T18:14:14Z", "updated_at": "2020-03-06T18:18:11Z", "closed_at": "2020-03-06T18:18:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nI'm not sure what exactly is causing this, but I was attempting to iterate over _all_ of the files in a given commit using the tree objects and I am hitting a seg fault:\r\n\r\n```\r\n>>> def iter_tree(tree):\r\n...     for e in tree:\r\n...         if isinstance(e, Blob):\r\n...             yield e.name\r\n...         elif isinstance(e, Tree):\r\n...             yield from iter_tree(e)\r\n...\r\n\r\n>>> c\r\n<_pygit2.Commit at 0x107e910c0>\r\n\r\n>>> iter_tree(c.tree)\r\n<generator object iter_tree at 0x109193050>\r\n\r\n>>> list(iter_tree(c.tree))\r\nAssertion failed: (tree), function git_tree_entry_byindex, file libgit2/src/tree.c, line 317.\r\nAbort trap: 6\r\n```\r\n\r\nNot sure what could be causing this, thanks for looking!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/983", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/983/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/983/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/983/events", "html_url": "https://github.com/libgit2/pygit2/issues/983", "id": 573615441, "node_id": "MDU6SXNzdWU1NzM2MTU0NDE=", "number": 983, "title": "Can't install on RaspberryPi: \"Need a compatible libgit2 version\"", "user": {"login": "AbstractUmbra", "id": 16031716, "node_id": "MDQ6VXNlcjE2MDMxNzE2", "avatar_url": "https://avatars0.githubusercontent.com/u/16031716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AbstractUmbra", "html_url": "https://github.com/AbstractUmbra", "followers_url": "https://api.github.com/users/AbstractUmbra/followers", "following_url": "https://api.github.com/users/AbstractUmbra/following{/other_user}", "gists_url": "https://api.github.com/users/AbstractUmbra/gists{/gist_id}", "starred_url": "https://api.github.com/users/AbstractUmbra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AbstractUmbra/subscriptions", "organizations_url": "https://api.github.com/users/AbstractUmbra/orgs", "repos_url": "https://api.github.com/users/AbstractUmbra/repos", "events_url": "https://api.github.com/users/AbstractUmbra/events{/privacy}", "received_events_url": "https://api.github.com/users/AbstractUmbra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-01T21:06:44Z", "updated_at": "2020-03-02T02:05:23Z", "closed_at": "2020-03-02T02:05:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI have installed libgit2 as per install instructions on their GitHub docs.\r\nI have added `v.0.99.0` to the `ldconfig` on the RasPi and confirmed it as such:\r\n\r\n```shell\r\n$ sudo ldconfig -p | grep libgit\r\n        libgit2.so.0.99 (libc6,hard-float) => /usr/lib/libgit2.so.0.99\r\n        libgit2.so (libc6,hard-float) => /usr/lib/libgit2.so\r\n\r\n$ cd /usr/lib\r\n$ ls | grep libgit2.so\r\nlrwxrwxrwx  1 root root   44 Mar  1 20:56 libgit2.so -> /usr/local/lib/libgit2/lib/libgit2.so.0.99.0\r\nlrwxrwxrwx  1 root root   13 Mar  1 21:00 libgit2.so.0.99 -> libgit2.so.99\r\nlrwxrwxrwx  1 root root   44 Mar  1 21:00 libgit2.so.99 -> /usr/local/lib/libgit2/lib/libgit2.so.0.99.0\r\n```\r\n\r\nAny ideas on how I can correct this:\r\n\r\nActual error for pygit2 install is here:\r\n\r\n```\r\nIn file included from src/blob.h:34:0,\r\n                     from src/blob.c:30:\r\n    src/types.h:36:2: error: #error You need a compatible libgit2 version (0.99.x or 1.0.x)\r\n     #error You need a compatible libgit2 version (0.99.x or 1.0.x)\r\n      ^~~~~\r\n    src/types.h:104:23: error: unknown type name \u2018git_worktree\u2019\r\n     SIMPLE_TYPE(Worktree, git_worktree, worktree)\r\n                           ^\r\n    src/types.h:82:13: note: in definition of macro \u2018SIMPLE_TYPE\u2019\r\n                 _ptr_type *_ptr_name;\\\r\n                 ^~~~~~~~~\r\n    src/types.h:237:5: error: unknown type name \u2018git_mailmap\u2019\r\n         git_mailmap *mailmap;\r\n         ^~~~~~~~~~~\r\n    error: command 'gcc' failed with exit status 1\r\n    ----------------------------------------\r\nERROR: Command errored out with exit status 1: /usr/local/bin/python3.7 -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-jfvx6uor/pygit2/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-jfvx6uor/pygit2/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record /tmp/pip-record-5ltt148t/install-record.txt --single-version-externally-managed --user --prefix= --compile --install-headers /home/pi/.local/include/python3.7m/pygit2 Check the logs for full command output.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/980", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/980/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/980/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/980/events", "html_url": "https://github.com/libgit2/pygit2/issues/980", "id": 571268261, "node_id": "MDU6SXNzdWU1NzEyNjgyNjE=", "number": 980, "title": "Segmentation fault when iterating tree", "user": {"login": "liangjingyang", "id": 2056705, "node_id": "MDQ6VXNlcjIwNTY3MDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2056705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liangjingyang", "html_url": "https://github.com/liangjingyang", "followers_url": "https://api.github.com/users/liangjingyang/followers", "following_url": "https://api.github.com/users/liangjingyang/following{/other_user}", "gists_url": "https://api.github.com/users/liangjingyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/liangjingyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liangjingyang/subscriptions", "organizations_url": "https://api.github.com/users/liangjingyang/orgs", "repos_url": "https://api.github.com/users/liangjingyang/repos", "events_url": "https://api.github.com/users/liangjingyang/events{/privacy}", "received_events_url": "https://api.github.com/users/liangjingyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-26T11:31:12Z", "updated_at": "2020-03-03T08:39:12Z", "closed_at": "2020-03-03T08:39:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I want to iterate all files on a specific commit, what should I do?\r\n\r\nI tried the code below but got segmentation fault error.\r\n\r\nlibgit2: 0.99\r\npygit2: pip install -U git+https://github.com/libgit2/pygit2.git@master (commit: eb4984e)\r\n\r\n```python\r\nfrom pygit2 import Repository\r\n\r\ndef test_iter_trees():\r\n    # directory structure on commit 1883433\r\n    # .\r\n    # \u251c\u2500\u2500 README.md\r\n    # \u2514\u2500\u2500 a\r\n    #     \u251c\u2500\u2500 b\r\n    #     \u2502\u00a0\u00a0 \u2514\u2500\u2500 f1.txt\r\n    #     \u251c\u2500\u2500 c\r\n    #     \u2502\u00a0\u00a0 \u2514\u2500\u2500 f2.txt\r\n    #     \u2514\u2500\u2500 f3.txt\r\n    repo = Repository('/tmp/test')\r\n    commit = repo.get('1883433')\r\n    for obj in commit.tree:  # good\r\n        print(obj.id, obj.type_str, obj.name)\r\n    a = commit.tree / 'a'\r\n    print(a.name, type(a))  # a, pygit2.Tree\r\n    f3 = commit.tree / 'a' / 'f3.txt'\r\n    print(f3.name)  # f3.txt\r\n    f1 = commit.tree / 'a' / 'b' / 'f1.txt'\r\n    print(f1.name)  # f1.txt\r\n    for obj in commit.tree / 'a':  # Segmentation fault when iterating sub directory a ( or b, c)\r\n        print(obj.id, obj.type_str, obj.name)\r\n```\r\n\r\n```\r\n# output\r\n427329f69cf675c9908f73d2f3de9d848cdbd935 tree a\r\na <class '_pygit2.Tree'>\r\nf3.txt\r\nf1.txt\r\nFatal Python error: Segmentation fault\r\n\r\nCurrent thread 0x000000011d957dc0 (most recent call first):\r\n  File \"/Users/jingyang/data/persper/meta-analytics/script/test_git_wrapper.py\", line 299 in test_iter_trees\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/_pytest/python.py\", line 167 in pytest_pyfunc_call\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/pluggy/callers.py\", line 187 in _multicall\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/pluggy/manager.py\", line 87 in <lambda>\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/pluggy/manager.py\", line 93 in _hookexec\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/pluggy/hooks.py\", line 286 in __call__\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/_pytest/python.py\", line 1445 in runtest\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/_pytest/runner.py\", line 134 in pytest_runtest_call\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/pluggy/callers.py\", line 187 in _multicall\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/pluggy/manager.py\", line 87 in <lambda>\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/pluggy/manager.py\", line 93 in _hookexec\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/pluggy/hooks.py\", line 286 in __call__\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/_pytest/runner.py\", line 210 in <lambda>\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/_pytest/runner.py\", line 237 in from_call\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/_pytest/runner.py\", line 210 in call_runtest_hook\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/_pytest/runner.py\", line 185 in call_and_report\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/_pytest/runner.py\", line 99 in runtestprotocol\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/_pytest/runner.py\", line 84 in pytest_runtest_protocol\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/pluggy/callers.py\", line 187 in _multicall\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/pluggy/manager.py\", line 87 in <lambda>\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/pluggy/manager.py\", line 93 in _hookexec\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/pluggy/hooks.py\", line 286 in __call__\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/_pytest/main.py\", line 271 in pytest_runtestloop\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/pluggy/callers.py\", line 187 in _multicall\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/pluggy/manager.py\", line 87 in <lambda>\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/pluggy/manager.py\", line 93 in _hookexec\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/pluggy/hooks.py\", line 286 in __call__\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/_pytest/main.py\", line 247 in _main\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/_pytest/main.py\", line 197 in wrap_session\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/_pytest/main.py\", line 240 in pytest_cmdline_main\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/pluggy/callers.py\", line 187 in _multicall\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/pluggy/manager.py\", line 87 in <lambda>\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/pluggy/manager.py\", line 93 in _hookexec\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/pluggy/hooks.py\", line 286 in __call__\r\n  File \"/Users/jingyang/.pyenv/versions/3.7.6/envs/ma/lib/python3.7/site-packages/_pytest/config/__init__.py\", line 93 in main\r\n  File \"/Users/jingyang/.pyenv/versions/ma/bin/pytest\", line 10 in <module>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/979", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/979/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/979/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/979/events", "html_url": "https://github.com/libgit2/pygit2/issues/979", "id": 568749615, "node_id": "MDU6SXNzdWU1Njg3NDk2MTU=", "number": 979, "title": "Build using last libgit2 0.99.0 fails", "user": {"login": "tuxmaster5000", "id": 837503, "node_id": "MDQ6VXNlcjgzNzUwMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/837503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tuxmaster5000", "html_url": "https://github.com/tuxmaster5000", "followers_url": "https://api.github.com/users/tuxmaster5000/followers", "following_url": "https://api.github.com/users/tuxmaster5000/following{/other_user}", "gists_url": "https://api.github.com/users/tuxmaster5000/gists{/gist_id}", "starred_url": "https://api.github.com/users/tuxmaster5000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tuxmaster5000/subscriptions", "organizations_url": "https://api.github.com/users/tuxmaster5000/orgs", "repos_url": "https://api.github.com/users/tuxmaster5000/repos", "events_url": "https://api.github.com/users/tuxmaster5000/events{/privacy}", "received_events_url": "https://api.github.com/users/tuxmaster5000/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-21T05:46:10Z", "updated_at": "2020-02-21T08:23:19Z", "closed_at": "2020-02-21T08:23:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/975", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/975/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/975/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/975/events", "html_url": "https://github.com/libgit2/pygit2/issues/975", "id": 566917014, "node_id": "MDU6SXNzdWU1NjY5MTcwMTQ=", "number": 975, "title": "How to read large blob chunk by chunk?", "user": {"login": "cqzlxl", "id": 2704658, "node_id": "MDQ6VXNlcjI3MDQ2NTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/2704658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cqzlxl", "html_url": "https://github.com/cqzlxl", "followers_url": "https://api.github.com/users/cqzlxl/followers", "following_url": "https://api.github.com/users/cqzlxl/following{/other_user}", "gists_url": "https://api.github.com/users/cqzlxl/gists{/gist_id}", "starred_url": "https://api.github.com/users/cqzlxl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cqzlxl/subscriptions", "organizations_url": "https://api.github.com/users/cqzlxl/orgs", "repos_url": "https://api.github.com/users/cqzlxl/repos", "events_url": "https://api.github.com/users/cqzlxl/events{/privacy}", "received_events_url": "https://api.github.com/users/cqzlxl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-18T14:08:05Z", "updated_at": "2020-03-04T13:58:44Z", "closed_at": "2020-03-04T13:58:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have some large items may be in Gib size, Blob.data read all bytes into memory\uff1f\r\nCan I read these contents chunk by chunk?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/974", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/974/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/974/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/974/events", "html_url": "https://github.com/libgit2/pygit2/issues/974", "id": 566890963, "node_id": "MDU6SXNzdWU1NjY4OTA5NjM=", "number": 974, "title": "Segmentation fault", "user": {"login": "liborw", "id": 132918, "node_id": "MDQ6VXNlcjEzMjkxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/132918?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liborw", "html_url": "https://github.com/liborw", "followers_url": "https://api.github.com/users/liborw/followers", "following_url": "https://api.github.com/users/liborw/following{/other_user}", "gists_url": "https://api.github.com/users/liborw/gists{/gist_id}", "starred_url": "https://api.github.com/users/liborw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liborw/subscriptions", "organizations_url": "https://api.github.com/users/liborw/orgs", "repos_url": "https://api.github.com/users/liborw/repos", "events_url": "https://api.github.com/users/liborw/events{/privacy}", "received_events_url": "https://api.github.com/users/liborw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-18T13:25:06Z", "updated_at": "2020-03-07T10:47:35Z", "closed_at": "2020-03-07T10:47:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have Segmentation fault while trying to clone a repository...\r\n\r\n`test_pygit2.py`:\r\n```python\r\nimport pygit2\r\nimport tempfile\r\n\r\ndef test_segfault():\r\n    with tempfile.TemporaryDirectory() as tmpdir:\r\n        pygit2.clone_repository('https://github.com/libgit2/pygit2.git', tmpdir)\r\n\r\nif __name__ == '__main__':\r\n    test_segfault()\r\n```\r\n\r\n```sh\r\n> python -X faulthandler -m pytest test_pygit2.py\r\nplatform linux -- Python 3.8.1, pytest-5.3.5, py-1.8.1, pluggy-0.13.1\r\nrootdir: /home/...\r\nplugins: cov-2.8.1, rerunfailures-8.0\r\ncollected 1 item\r\n\r\ntest_pygit2.py [1]    1944767 segmentation fault (core dumped)  python -X faulthandler -m pytest test_pygit2.py\r\n```\r\n\r\nSystem: ArchLinux\r\n\r\n```sh\r\n> pacman -Q | grep git2\r\nlibgit2 1:0.28.4-1\r\npython-pygit2 1.0.3-1\r\n```\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/970", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/970/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/970/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/970/events", "html_url": "https://github.com/libgit2/pygit2/issues/970", "id": 559312419, "node_id": "MDU6SXNzdWU1NTkzMTI0MTk=", "number": 970, "title": "Access violation accessing repo config entries", "user": {"login": "GardenTools", "id": 2664939, "node_id": "MDQ6VXNlcjI2NjQ5Mzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/2664939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GardenTools", "html_url": "https://github.com/GardenTools", "followers_url": "https://api.github.com/users/GardenTools/followers", "following_url": "https://api.github.com/users/GardenTools/following{/other_user}", "gists_url": "https://api.github.com/users/GardenTools/gists{/gist_id}", "starred_url": "https://api.github.com/users/GardenTools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GardenTools/subscriptions", "organizations_url": "https://api.github.com/users/GardenTools/orgs", "repos_url": "https://api.github.com/users/GardenTools/repos", "events_url": "https://api.github.com/users/GardenTools/events{/privacy}", "received_events_url": "https://api.github.com/users/GardenTools/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-03T20:22:35Z", "updated_at": "2020-02-08T11:47:35Z", "closed_at": "2020-02-08T11:47:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to access a list of the repo config, python terminates abruptly with the message\r\n\r\n> Process finished with exit code -1073741819 (0xC0000005)\r\n\r\nExample code that causes the issue:\r\n\r\n```\r\nimport pygit2\r\nrepo = pygit2.Repository(path_to_git_repo)\r\nitems = list(repo.config)\r\nfor item in items:\r\n    print(item.name, item.value)\r\n```\r\nby comparison the following is fine:\r\n```\r\nimport pygit2\r\nrepo = pygit2.Repository(path_to_git_repo)\r\nitems = repo.config\r\nfor item in items:\r\n    print(item.name, item.value)\r\n```\r\nand prints out the names and values of the configuration entries would be expected.\r\n\r\nIt isn't necessary to iterate over the list to cause the problem, the following will result in the same issue\r\n```\r\nitems = list(repo.config)\r\nprint(items[0].name, items[0].value)\r\n```\r\n\r\npygit2 version: 1.0.2 \r\npython version: 3.7.4 (64-bit)\r\nOS version: Windows 10\r\n\r\n---\r\n\r\nDoing a little digging https://libgit2.org/libgit2/#HEAD/group/config/git_config_next\r\nstates \"The pointers returned by this function are valid until the iterator is freed.\" The ConfigEntry object contains the pointer returned by git_config_next, so it seems these get freed when the iteration is complete, and the ConfigEntry elements of the list are left pointing to invalid memory.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/968", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/968/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/968/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/968/events", "html_url": "https://github.com/libgit2/pygit2/issues/968", "id": 544680971, "node_id": "MDU6SXNzdWU1NDQ2ODA5NzE=", "number": 968, "title": "pygit2 1.0 was released ahead of required libgit2 release", "user": {"login": "ddevault", "id": 1310872, "node_id": "MDQ6VXNlcjEzMTA4NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddevault", "html_url": "https://github.com/ddevault", "followers_url": "https://api.github.com/users/ddevault/followers", "following_url": "https://api.github.com/users/ddevault/following{/other_user}", "gists_url": "https://api.github.com/users/ddevault/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddevault/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddevault/subscriptions", "organizations_url": "https://api.github.com/users/ddevault/orgs", "repos_url": "https://api.github.com/users/ddevault/repos", "events_url": "https://api.github.com/users/ddevault/events{/privacy}", "received_events_url": "https://api.github.com/users/ddevault/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-02T17:56:42Z", "updated_at": "2020-01-04T14:31:17Z", "closed_at": "2020-01-04T14:31:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The latest libgit2 (0.28.4) does not include the changes from libgit2/libgit2#5005, which prevents pygit2 from building on the latest libgit2 version. Not sure what the appropriate change is, either rolling back #948 or asking libgit2 to prepare a new release.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/967", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/967/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/967/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/967/events", "html_url": "https://github.com/libgit2/pygit2/issues/967", "id": 544679226, "node_id": "MDU6SXNzdWU1NDQ2NzkyMjY=", "number": 967, "title": "Regression: enumerating pygit2.Tree with submodules raises KeyError", "user": {"login": "ddevault", "id": 1310872, "node_id": "MDQ6VXNlcjEzMTA4NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddevault", "html_url": "https://github.com/ddevault", "followers_url": "https://api.github.com/users/ddevault/followers", "following_url": "https://api.github.com/users/ddevault/following{/other_user}", "gists_url": "https://api.github.com/users/ddevault/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddevault/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddevault/subscriptions", "organizations_url": "https://api.github.com/users/ddevault/orgs", "repos_url": "https://api.github.com/users/ddevault/repos", "events_url": "https://api.github.com/users/ddevault/events{/privacy}", "received_events_url": "https://api.github.com/users/ddevault/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 763120422, "node_id": "MDU6TGFiZWw3NjMxMjA0MjI=", "url": "https://api.github.com/repos/libgit2/pygit2/labels/bug", "name": "bug", "color": "d93f0b", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-02T17:51:18Z", "updated_at": "2020-01-11T09:08:07Z", "closed_at": "2020-01-05T11:12:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n$ git clone https://git.sr.ht/~sircmpwn/drewdevault.com\r\n$ cd drewdevault.com\r\n$ python3\r\n>>> from pygit2 import Repository\r\n>>> repo = Repository(\".\")\r\n>>> c = repo.get(repo.head.target)\r\n>>> list(c.tree)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nKeyError: 'object not found - no match for id (a677dcf495c1973ba11a74d65676a003224d44c4)'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/964", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/964/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/964/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/964/events", "html_url": "https://github.com/libgit2/pygit2/issues/964", "id": 535425476, "node_id": "MDU6SXNzdWU1MzU0MjU0NzY=", "number": 964, "title": "Documentation poor, cannot use module", "user": {"login": "SwitchedToGitlab", "id": 43013734, "node_id": "MDQ6VXNlcjQzMDEzNzM0", "avatar_url": "https://avatars2.githubusercontent.com/u/43013734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SwitchedToGitlab", "html_url": "https://github.com/SwitchedToGitlab", "followers_url": "https://api.github.com/users/SwitchedToGitlab/followers", "following_url": "https://api.github.com/users/SwitchedToGitlab/following{/other_user}", "gists_url": "https://api.github.com/users/SwitchedToGitlab/gists{/gist_id}", "starred_url": "https://api.github.com/users/SwitchedToGitlab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SwitchedToGitlab/subscriptions", "organizations_url": "https://api.github.com/users/SwitchedToGitlab/orgs", "repos_url": "https://api.github.com/users/SwitchedToGitlab/repos", "events_url": "https://api.github.com/users/SwitchedToGitlab/events{/privacy}", "received_events_url": "https://api.github.com/users/SwitchedToGitlab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-12-10T00:54:19Z", "updated_at": "2019-12-10T05:03:20Z", "closed_at": "2019-12-10T05:03:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are too many mistakes and omissions in the docs to make this module usable, and too many for me to go through and add issues for one by one. I've been playing with this module for several days now and I still cannot reliably discover a repo and make a commit. \r\n\r\nI get that just sounds like a rant, but I'm actually not sure what to even suggest here. Considering that I have yet to use this module for anything useful whatsoever, I suggest that you start with some docs that actually explain how to use this thing in the real world. I personally think that, after reading most of the docs, that the module is overly complicated and difficult to use. Most of the docs make almost no sense to me, and I've been using both GIT and Python for years now. \r\n\r\nSome examples of what I mean:\r\n\r\n**Example 1:**\r\n```>>> author = Signature('Alice Author', 'alice@authors.tld')\r\n>>> committer = Signature('Cecil Committer', 'cecil@committers.tld')\r\n>>> tree = repo.TreeBuilder().write()\r\n>>> repo.create_commit(\r\n... 'refs/heads/master', # the name of the reference to update\r\n... author, committer, 'one line commit message\\n\\ndetailed commit message',\r\n... tree, # binary string representing the tree object ID\r\n... [] # list of binary strings representing parents of the new commit\r\n... )\r\n'#\\xe4<u\\xfe\\xd6\\x17\\xa0\\xe6\\xa2\\x8b\\xb6\\xdc35$\\xcf-\\x8b~'\r\n```\r\n\r\nDoes not work. I get the error: \r\n\r\n```\r\n>>> import pygit2\r\n>>> author = Signature(\"Bob Committer\",\"bob@example.com\")\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nNameError: name 'Signature' is not defined\r\n```\r\nHowever you never actually document how to define a signature. Furthermore, why the complicated data type for something as simple as an author field? Why not just a string?\r\n\r\nAlso, what is '#\\xe4<u\\xfe\\xd6\\x17\\xa0\\xe6\\xa2\\x8b\\xb6\\xdc35$\\xcf-\\x8b~'? I'm guessing that the OID, which again is overly complicated to work with.\r\n\r\n**Example 2:**\r\nTrying to create a new repo I get the error: \r\n\r\n```ValueError: remote 'origin' already exists``` even though I am already handling `git.AlreadyExists` in a try/catch statement. How in the world is that even possible? Why is it throwing a different error type now??\r\n\r\n**Example 3:**\r\n\r\nFrom [the Repository docs](https://www.pygit2.org/repository.html):\r\n\r\n```pygit2.init_repository(path, bare=False, flags=16, mode=0, workdir_path=None, description=None, template_path=None, initial_head=None, origin_url=None)```\r\n\r\nYet there is no '16' defined in the docs immediately below, which are: \r\nThe flags may be a combination of:\r\n\r\n    GIT_REPOSITORY_INIT_BARE (overriden by the bare parameter)\r\n    GIT_REPOSITORY_INIT_NO_REINIT\r\n    GIT_REPOSITORY_INIT_NO_DOTGIT_DIR\r\n    GIT_REPOSITORY_INIT_MKDIR\r\n    GIT_REPOSITORY_INIT_MKPATH (set by default)\r\n    GIT_REPOSITORY_INIT_EXTERNAL_TEMPLATE\r\n\r\nYet when I attmept to use a flag, I get this: \r\n```>>> pygit2.init_repository('.', bare=False, flags=GIT_REPOSITORY_INIT_NO_REINIT, mode=0, workdir_path=None, description=None, template_path=None, initial_head=None, origin_url=None)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nNameError: name 'GIT_REPOSITORY_INIT_NO_REINIT' is not defined\r\n```\r\n\r\nThese are just a few examples. This module is functionally useless unless you spend the time reverse engineering this code. \r\n\r\nNot sure what I'm trying to accomplish with this, as I'm pretty sure it will be ignored/summarily closed, but at least I can vent for this thing wasting my time and warn others looking for a quick and simple answer to interacting with a GIT repo in Python that this is probably not the module that you're looking for. \r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/963", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/963/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/963/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/963/events", "html_url": "https://github.com/libgit2/pygit2/issues/963", "id": 534976713, "node_id": "MDU6SXNzdWU1MzQ5NzY3MTM=", "number": 963, "title": "\"duplicate symbol for architecture x86_64\" when compiling 1.0.0 wheel on Mac OS X 10.14+", "user": {"login": "jemcclin", "id": 6109545, "node_id": "MDQ6VXNlcjYxMDk1NDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/6109545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jemcclin", "html_url": "https://github.com/jemcclin", "followers_url": "https://api.github.com/users/jemcclin/followers", "following_url": "https://api.github.com/users/jemcclin/following{/other_user}", "gists_url": "https://api.github.com/users/jemcclin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jemcclin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jemcclin/subscriptions", "organizations_url": "https://api.github.com/users/jemcclin/orgs", "repos_url": "https://api.github.com/users/jemcclin/repos", "events_url": "https://api.github.com/users/jemcclin/events{/privacy}", "received_events_url": "https://api.github.com/users/jemcclin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-09T14:42:26Z", "updated_at": "2019-12-14T14:04:09Z", "closed_at": "2019-12-14T08:43:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Installing pygit2 version 1.0.0 fails on building the wheel with the following error on Mac OS X 10.14 Mojave with Python 3.7:\r\n```    duplicate symbol '_OdbBackendType' in:\r\n        build/temp.macosx-10.14-x86_64-3.7/src/odb.o\r\n        build/temp.macosx-10.14-x86_64-3.7/src/odb_backend.o\r\n    ld: 1 duplicate symbol for architecture x86_64\r\n    clang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n    error: command 'clang' failed with exit status 1\r\n```\r\nThe build fails with a near-identical error on Catalina as well--just different OS X version numbers in the path.\r\n\r\nThis error occurs when installing through `pip3 install pygit2==1.0.0` or through `python3 setup.py install` run from a fresh copy of `master` cloned from the git repo. \r\n\r\n`pip3 install pygit2==0.28.2` still compiles, installs, and works as expected. `libgit2 0.28.3` is installed (from Homebrew) on all of the machines I've been able to test with.\r\n\r\nThe full output of the setup.py run from Mac OS X 10.15 Catalina running Python 3.7:\r\n```$ python3 setup.py install            \r\nwarning: no previously-included files found matching 'setup.pyc'\r\nwarning: no previously-included files matching 'yacctab.*' found under directory 'tests'\r\nwarning: no previously-included files matching 'lextab.*' found under directory 'tests'\r\nwarning: no previously-included files matching 'yacctab.*' found under directory 'examples'\r\nwarning: no previously-included files matching 'lextab.*' found under directory 'examples'\r\nzip_safe flag not set; analyzing archive contents...\r\npycparser.ply.__pycache__.lex.cpython-37: module references __file__\r\npycparser.ply.__pycache__.lex.cpython-37: module MAY be using inspect.getsourcefile\r\npycparser.ply.__pycache__.yacc.cpython-37: module references __file__\r\npycparser.ply.__pycache__.yacc.cpython-37: module MAY be using inspect.getsourcefile\r\npycparser.ply.__pycache__.yacc.cpython-37: module MAY be using inspect.stack\r\npycparser.ply.__pycache__.ygen.cpython-37: module references __file__\r\n\r\nInstalled /Users/jemcclin/pygit2/.eggs/pycparser-2.19-py3.7.egg\r\nrunning install\r\nrunning bdist_egg\r\nrunning egg_info\r\ncreating pygit2.egg-info\r\nwriting pygit2.egg-info/PKG-INFO\r\nwriting dependency_links to pygit2.egg-info/dependency_links.txt\r\nwriting requirements to pygit2.egg-info/requires.txt\r\nwriting top-level names to pygit2.egg-info/top_level.txt\r\nwriting manifest file 'pygit2.egg-info/SOURCES.txt'\r\nreading manifest file 'pygit2.egg-info/SOURCES.txt'\r\nwriting manifest file 'pygit2.egg-info/SOURCES.txt'\r\ninstalling library code to build/bdist.macosx-10.15-x86_64/egg\r\nrunning install_lib\r\nrunning build_py\r\ncreating build\r\ncreating build/lib.macosx-10.15-x86_64-3.7\r\ncreating build/lib.macosx-10.15-x86_64-3.7/pygit2\r\ncopying pygit2/config.py -> build/lib.macosx-10.15-x86_64-3.7/pygit2\r\ncopying pygit2/index.py -> build/lib.macosx-10.15-x86_64-3.7/pygit2\r\ncopying pygit2/credentials.py -> build/lib.macosx-10.15-x86_64-3.7/pygit2\r\ncopying pygit2/remote.py -> build/lib.macosx-10.15-x86_64-3.7/pygit2\r\ncopying pygit2/__init__.py -> build/lib.macosx-10.15-x86_64-3.7/pygit2\r\ncopying pygit2/_build.py -> build/lib.macosx-10.15-x86_64-3.7/pygit2\r\ncopying pygit2/refspec.py -> build/lib.macosx-10.15-x86_64-3.7/pygit2\r\ncopying pygit2/submodule.py -> build/lib.macosx-10.15-x86_64-3.7/pygit2\r\ncopying pygit2/utils.py -> build/lib.macosx-10.15-x86_64-3.7/pygit2\r\ncopying pygit2/blame.py -> build/lib.macosx-10.15-x86_64-3.7/pygit2\r\ncopying pygit2/settings.py -> build/lib.macosx-10.15-x86_64-3.7/pygit2\r\ncopying pygit2/errors.py -> build/lib.macosx-10.15-x86_64-3.7/pygit2\r\ncopying pygit2/_run.py -> build/lib.macosx-10.15-x86_64-3.7/pygit2\r\ncopying pygit2/repository.py -> build/lib.macosx-10.15-x86_64-3.7/pygit2\r\ncopying pygit2/ffi.py -> build/lib.macosx-10.15-x86_64-3.7/pygit2\r\ncreating build/lib.macosx-10.15-x86_64-3.7/pygit2/decl\r\ncopying pygit2/decl/oid.h -> build/lib.macosx-10.15-x86_64-3.7/pygit2/decl\r\ncopying pygit2/decl/index.h -> build/lib.macosx-10.15-x86_64-3.7/pygit2/decl\r\ncopying pygit2/decl/attr.h -> build/lib.macosx-10.15-x86_64-3.7/pygit2/decl\r\ncopying pygit2/decl/blame.h -> build/lib.macosx-10.15-x86_64-3.7/pygit2/decl\r\ncopying pygit2/decl/pack.h -> build/lib.macosx-10.15-x86_64-3.7/pygit2/decl\r\ncopying pygit2/decl/revert.h -> build/lib.macosx-10.15-x86_64-3.7/pygit2/decl\r\ncopying pygit2/decl/net.h -> build/lib.macosx-10.15-x86_64-3.7/pygit2/decl\r\ncopying pygit2/decl/config.h -> build/lib.macosx-10.15-x86_64-3.7/pygit2/decl\r\ncopying pygit2/decl/types.h -> build/lib.macosx-10.15-x86_64-3.7/pygit2/decl\r\ncopying pygit2/decl/repository.h -> build/lib.macosx-10.15-x86_64-3.7/pygit2/decl\r\ncopying pygit2/decl/clone.h -> build/lib.macosx-10.15-x86_64-3.7/pygit2/decl\r\ncopying pygit2/decl/submodule.h -> build/lib.macosx-10.15-x86_64-3.7/pygit2/decl\r\ncopying pygit2/decl/errors.h -> build/lib.macosx-10.15-x86_64-3.7/pygit2/decl\r\ncopying pygit2/decl/merge.h -> build/lib.macosx-10.15-x86_64-3.7/pygit2/decl\r\ncopying pygit2/decl/graph.h -> build/lib.macosx-10.15-x86_64-3.7/pygit2/decl\r\ncopying pygit2/decl/describe.h -> build/lib.macosx-10.15-x86_64-3.7/pygit2/decl\r\ncopying pygit2/decl/stash.h -> build/lib.macosx-10.15-x86_64-3.7/pygit2/decl\r\ncopying pygit2/decl/remote.h -> build/lib.macosx-10.15-x86_64-3.7/pygit2/decl\r\ncopying pygit2/decl/strarray.h -> build/lib.macosx-10.15-x86_64-3.7/pygit2/decl\r\ncopying pygit2/decl/buffer.h -> build/lib.macosx-10.15-x86_64-3.7/pygit2/decl\r\ncopying pygit2/decl/diff.h -> build/lib.macosx-10.15-x86_64-3.7/pygit2/decl\r\ncopying pygit2/decl/common.h -> build/lib.macosx-10.15-x86_64-3.7/pygit2/decl\r\ncopying pygit2/decl/proxy.h -> build/lib.macosx-10.15-x86_64-3.7/pygit2/decl\r\ncopying pygit2/decl/refspec.h -> build/lib.macosx-10.15-x86_64-3.7/pygit2/decl\r\ncopying pygit2/decl/transport.h -> build/lib.macosx-10.15-x86_64-3.7/pygit2/decl\r\ncopying pygit2/decl/checkout.h -> build/lib.macosx-10.15-x86_64-3.7/pygit2/decl\r\nrunning build_ext\r\ngenerating cffi module 'build/temp.macosx-10.15-x86_64-3.7/pygit2._libgit2.c'\r\ncreating build/temp.macosx-10.15-x86_64-3.7\r\nbuilding '_pygit2' extension\r\ncreating build/temp.macosx-10.15-x86_64-3.7/src\r\nclang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/usr/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/Tk.framework/Versions/8.5/Headers -I/usr/local/include -I/usr/local/include -I/usr/local/opt/openssl@1.1/include -I/usr/local/opt/sqlite/include -I/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/include/python3.7m -c src/blob.c -o build/temp.macosx-10.15-x86_64-3.7/src/blob.o\r\nclang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/usr/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/Tk.framework/Versions/8.5/Headers -I/usr/local/include -I/usr/local/include -I/usr/local/opt/openssl@1.1/include -I/usr/local/opt/sqlite/include -I/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/include/python3.7m -c src/branch.c -o build/temp.macosx-10.15-x86_64-3.7/src/branch.o\r\nclang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/usr/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/Tk.framework/Versions/8.5/Headers -I/usr/local/include -I/usr/local/include -I/usr/local/opt/openssl@1.1/include -I/usr/local/opt/sqlite/include -I/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/include/python3.7m -c src/commit.c -o build/temp.macosx-10.15-x86_64-3.7/src/commit.o\r\nclang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/usr/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/Tk.framework/Versions/8.5/Headers -I/usr/local/include -I/usr/local/include -I/usr/local/opt/openssl@1.1/include -I/usr/local/opt/sqlite/include -I/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/include/python3.7m -c src/diff.c -o build/temp.macosx-10.15-x86_64-3.7/src/diff.o\r\nclang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/usr/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/Tk.framework/Versions/8.5/Headers -I/usr/local/include -I/usr/local/include -I/usr/local/opt/openssl@1.1/include -I/usr/local/opt/sqlite/include -I/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/include/python3.7m -c src/error.c -o build/temp.macosx-10.15-x86_64-3.7/src/error.o\r\nclang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/usr/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/Tk.framework/Versions/8.5/Headers -I/usr/local/include -I/usr/local/include -I/usr/local/opt/openssl@1.1/include -I/usr/local/opt/sqlite/include -I/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/include/python3.7m -c src/mailmap.c -o build/temp.macosx-10.15-x86_64-3.7/src/mailmap.o\r\nclang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/usr/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/Tk.framework/Versions/8.5/Headers -I/usr/local/include -I/usr/local/include -I/usr/local/opt/openssl@1.1/include -I/usr/local/opt/sqlite/include -I/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/include/python3.7m -c src/note.c -o build/temp.macosx-10.15-x86_64-3.7/src/note.o\r\nclang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/usr/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/Tk.framework/Versions/8.5/Headers -I/usr/local/include -I/usr/local/include -I/usr/local/opt/openssl@1.1/include -I/usr/local/opt/sqlite/include -I/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/include/python3.7m -c src/object.c -o build/temp.macosx-10.15-x86_64-3.7/src/object.o\r\nclang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/usr/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/Tk.framework/Versions/8.5/Headers -I/usr/local/include -I/usr/local/include -I/usr/local/opt/openssl@1.1/include -I/usr/local/opt/sqlite/include -I/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/include/python3.7m -c src/odb.c -o build/temp.macosx-10.15-x86_64-3.7/src/odb.o\r\nclang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/usr/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/Tk.framework/Versions/8.5/Headers -I/usr/local/include -I/usr/local/include -I/usr/local/opt/openssl@1.1/include -I/usr/local/opt/sqlite/include -I/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/include/python3.7m -c src/odb_backend.c -o build/temp.macosx-10.15-x86_64-3.7/src/odb_backend.o\r\nclang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/usr/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/Tk.framework/Versions/8.5/Headers -I/usr/local/include -I/usr/local/include -I/usr/local/opt/openssl@1.1/include -I/usr/local/opt/sqlite/include -I/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/include/python3.7m -c src/oid.c -o build/temp.macosx-10.15-x86_64-3.7/src/oid.o\r\nclang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/usr/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/Tk.framework/Versions/8.5/Headers -I/usr/local/include -I/usr/local/include -I/usr/local/opt/openssl@1.1/include -I/usr/local/opt/sqlite/include -I/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/include/python3.7m -c src/options.c -o build/temp.macosx-10.15-x86_64-3.7/src/options.o\r\nclang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/usr/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/Tk.framework/Versions/8.5/Headers -I/usr/local/include -I/usr/local/include -I/usr/local/opt/openssl@1.1/include -I/usr/local/opt/sqlite/include -I/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/include/python3.7m -c src/patch.c -o build/temp.macosx-10.15-x86_64-3.7/src/patch.o\r\nclang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/usr/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/Tk.framework/Versions/8.5/Headers -I/usr/local/include -I/usr/local/include -I/usr/local/opt/openssl@1.1/include -I/usr/local/opt/sqlite/include -I/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/include/python3.7m -c src/pygit2.c -o build/temp.macosx-10.15-x86_64-3.7/src/pygit2.o\r\nclang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/usr/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/Tk.framework/Versions/8.5/Headers -I/usr/local/include -I/usr/local/include -I/usr/local/opt/openssl@1.1/include -I/usr/local/opt/sqlite/include -I/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/include/python3.7m -c src/reference.c -o build/temp.macosx-10.15-x86_64-3.7/src/reference.o\r\nclang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/usr/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/Tk.framework/Versions/8.5/Headers -I/usr/local/include -I/usr/local/include -I/usr/local/opt/openssl@1.1/include -I/usr/local/opt/sqlite/include -I/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/include/python3.7m -c src/repository.c -o build/temp.macosx-10.15-x86_64-3.7/src/repository.o\r\nclang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/usr/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/Tk.framework/Versions/8.5/Headers -I/usr/local/include -I/usr/local/include -I/usr/local/opt/openssl@1.1/include -I/usr/local/opt/sqlite/include -I/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/include/python3.7m -c src/signature.c -o build/temp.macosx-10.15-x86_64-3.7/src/signature.o\r\nclang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/usr/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/Tk.framework/Versions/8.5/Headers -I/usr/local/include -I/usr/local/include -I/usr/local/opt/openssl@1.1/include -I/usr/local/opt/sqlite/include -I/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/include/python3.7m -c src/tag.c -o build/temp.macosx-10.15-x86_64-3.7/src/tag.o\r\nclang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/usr/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/Tk.framework/Versions/8.5/Headers -I/usr/local/include -I/usr/local/include -I/usr/local/opt/openssl@1.1/include -I/usr/local/opt/sqlite/include -I/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/include/python3.7m -c src/tree.c -o build/temp.macosx-10.15-x86_64-3.7/src/tree.o\r\nclang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/usr/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/Tk.framework/Versions/8.5/Headers -I/usr/local/include -I/usr/local/include -I/usr/local/opt/openssl@1.1/include -I/usr/local/opt/sqlite/include -I/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/include/python3.7m -c src/treebuilder.c -o build/temp.macosx-10.15-x86_64-3.7/src/treebuilder.o\r\nclang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/usr/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/Tk.framework/Versions/8.5/Headers -I/usr/local/include -I/usr/local/include -I/usr/local/opt/openssl@1.1/include -I/usr/local/opt/sqlite/include -I/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/include/python3.7m -c src/utils.c -o build/temp.macosx-10.15-x86_64-3.7/src/utils.o\r\nclang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/usr/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/Tk.framework/Versions/8.5/Headers -I/usr/local/include -I/usr/local/include -I/usr/local/opt/openssl@1.1/include -I/usr/local/opt/sqlite/include -I/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/include/python3.7m -c src/walker.c -o build/temp.macosx-10.15-x86_64-3.7/src/walker.o\r\nclang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/usr/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/Tk.framework/Versions/8.5/Headers -I/usr/local/include -I/usr/local/include -I/usr/local/opt/openssl@1.1/include -I/usr/local/opt/sqlite/include -I/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/include/python3.7m -c src/worktree.c -o build/temp.macosx-10.15-x86_64-3.7/src/worktree.o\r\nclang -bundle -undefined dynamic_lookup -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk build/temp.macosx-10.15-x86_64-3.7/src/blob.o build/temp.macosx-10.15-x86_64-3.7/src/branch.o build/temp.macosx-10.15-x86_64-3.7/src/commit.o build/temp.macosx-10.15-x86_64-3.7/src/diff.o build/temp.macosx-10.15-x86_64-3.7/src/error.o build/temp.macosx-10.15-x86_64-3.7/src/mailmap.o build/temp.macosx-10.15-x86_64-3.7/src/note.o build/temp.macosx-10.15-x86_64-3.7/src/object.o build/temp.macosx-10.15-x86_64-3.7/src/odb.o build/temp.macosx-10.15-x86_64-3.7/src/odb_backend.o build/temp.macosx-10.15-x86_64-3.7/src/oid.o build/temp.macosx-10.15-x86_64-3.7/src/options.o build/temp.macosx-10.15-x86_64-3.7/src/patch.o build/temp.macosx-10.15-x86_64-3.7/src/pygit2.o build/temp.macosx-10.15-x86_64-3.7/src/reference.o build/temp.macosx-10.15-x86_64-3.7/src/repository.o build/temp.macosx-10.15-x86_64-3.7/src/signature.o build/temp.macosx-10.15-x86_64-3.7/src/tag.o build/temp.macosx-10.15-x86_64-3.7/src/tree.o build/temp.macosx-10.15-x86_64-3.7/src/treebuilder.o build/temp.macosx-10.15-x86_64-3.7/src/utils.o build/temp.macosx-10.15-x86_64-3.7/src/walker.o build/temp.macosx-10.15-x86_64-3.7/src/worktree.o -L/usr/local/lib -L/usr/local/lib -L/usr/local/opt/openssl@1.1/lib -L/usr/local/opt/sqlite/lib -lgit2 -o build/lib.macosx-10.15-x86_64-3.7/_pygit2.cpython-37m-darwin.so\r\nduplicate symbol '_OdbBackendType' in:\r\n    build/temp.macosx-10.15-x86_64-3.7/src/odb.o\r\n    build/temp.macosx-10.15-x86_64-3.7/src/odb_backend.o\r\nld: 1 duplicate symbol for architecture x86_64\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\nerror: command 'clang' failed with exit status 1\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/957", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/957/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/957/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/957/events", "html_url": "https://github.com/libgit2/pygit2/issues/957", "id": 527528516, "node_id": "MDU6SXNzdWU1Mjc1Mjg1MTY=", "number": 957, "title": "Gitconfig isn't looked for in proper places", "user": {"login": "aDogCalledSpot", "id": 22723953, "node_id": "MDQ6VXNlcjIyNzIzOTUz", "avatar_url": "https://avatars2.githubusercontent.com/u/22723953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDogCalledSpot", "html_url": "https://github.com/aDogCalledSpot", "followers_url": "https://api.github.com/users/aDogCalledSpot/followers", "following_url": "https://api.github.com/users/aDogCalledSpot/following{/other_user}", "gists_url": "https://api.github.com/users/aDogCalledSpot/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDogCalledSpot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDogCalledSpot/subscriptions", "organizations_url": "https://api.github.com/users/aDogCalledSpot/orgs", "repos_url": "https://api.github.com/users/aDogCalledSpot/repos", "events_url": "https://api.github.com/users/aDogCalledSpot/events{/privacy}", "received_events_url": "https://api.github.com/users/aDogCalledSpot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-23T08:28:11Z", "updated_at": "2019-11-23T08:30:59Z", "closed_at": "2019-11-23T08:29:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "The library doesn't appear to support git configs which aren't ~/.gitconfig.\r\n\r\n`man git config` states it will search for a config file in the following locations in order:\r\n\r\n```\r\n       $(prefix)/etc/gitconfig\r\n           System-wide configuration file.\r\n\r\n       $XDG_CONFIG_HOME/git/config\r\n           Second user-specific configuration file. If $XDG_CONFIG_HOME is not set or empty, $HOME/.config/git/config\r\n           will be used. Any single-valued variable set in this file will be overwritten by whatever is in ~/.gitconfig.\r\n           It is a good idea not to create this file if you sometimes use older versions of Git, as support for this file\r\n           was added fairly recently.\r\n\r\n       ~/.gitconfig\r\n           User-specific configuration file. Also called \"global\" configuration file.\r\n\r\n       $GIT_DIR/config\r\n           Repository specific configuration file.\r\n\r\n       $GIT_DIR/config.worktree\r\n           This is optional and is only searched when extensions.worktreeConfig is present in $GIT_DIR/config.\r\n```\r\n\r\nSo, for example, the XDG directory should be checked, but it currently isn't.\r\n\r\n### Reproduction steps\r\nCreate a git config at `\"$XDG_CONFIG_HOME/git/config\"` (use `~/.config/git/config` if `XDG_CONFIG_HOME` is not set) and try to fetch it.\r\n\r\n### Expected behavior\r\nThe global git config is returned\r\n\r\n### Actual behavior\r\nThe config is not found\r\n\r\nUsing pygit2 version 0.28.2\r\n\r\n\r\n### Operating system(s) tested\r\nManjaro Linux", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/955", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/955/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/955/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/955/events", "html_url": "https://github.com/libgit2/pygit2/issues/955", "id": 525717352, "node_id": "MDU6SXNzdWU1MjU3MTczNTI=", "number": 955, "title": "Accept pathlib paths", "user": {"login": "mattiasb", "id": 1341313, "node_id": "MDQ6VXNlcjEzNDEzMTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1341313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattiasb", "html_url": "https://github.com/mattiasb", "followers_url": "https://api.github.com/users/mattiasb/followers", "following_url": "https://api.github.com/users/mattiasb/following{/other_user}", "gists_url": "https://api.github.com/users/mattiasb/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattiasb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattiasb/subscriptions", "organizations_url": "https://api.github.com/users/mattiasb/orgs", "repos_url": "https://api.github.com/users/mattiasb/repos", "events_url": "https://api.github.com/users/mattiasb/events{/privacy}", "received_events_url": "https://api.github.com/users/mattiasb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 763120602, "node_id": "MDU6TGFiZWw3NjMxMjA2MDI=", "url": "https://api.github.com/repos/libgit2/pygit2/labels/feature", "name": "feature", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-20T10:36:41Z", "updated_at": "2020-03-24T13:06:20Z", "closed_at": "2020-03-24T13:06:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice if pygit2 supported [pathlib paths](https://docs.python.org/3/library/pathlib.html) in addition to just strings.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/951", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/951/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/951/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/951/events", "html_url": "https://github.com/libgit2/pygit2/issues/951", "id": 522656981, "node_id": "MDU6SXNzdWU1MjI2NTY5ODE=", "number": 951, "title": "Static symbol moduleinit clashes with pyrsistent and evdev", "user": {"login": "jayvdb", "id": 15092, "node_id": "MDQ6VXNlcjE1MDky", "avatar_url": "https://avatars1.githubusercontent.com/u/15092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayvdb", "html_url": "https://github.com/jayvdb", "followers_url": "https://api.github.com/users/jayvdb/followers", "following_url": "https://api.github.com/users/jayvdb/following{/other_user}", "gists_url": "https://api.github.com/users/jayvdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayvdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayvdb/subscriptions", "organizations_url": "https://api.github.com/users/jayvdb/orgs", "repos_url": "https://api.github.com/users/jayvdb/repos", "events_url": "https://api.github.com/users/jayvdb/events{/privacy}", "received_events_url": "https://api.github.com/users/jayvdb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-14T06:38:27Z", "updated_at": "2020-03-07T11:56:34Z", "closed_at": "2020-03-07T11:56:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please see https://github.com/tobgu/pyrsistent/issues/182", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/949", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/949/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/949/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/949/events", "html_url": "https://github.com/libgit2/pygit2/issues/949", "id": 509579034, "node_id": "MDU6SXNzdWU1MDk1NzkwMzQ=", "number": 949, "title": "object not found and KeyError when scanning commits", "user": {"login": "yindaheng98", "id": 37261065, "node_id": "MDQ6VXNlcjM3MjYxMDY1", "avatar_url": "https://avatars3.githubusercontent.com/u/37261065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yindaheng98", "html_url": "https://github.com/yindaheng98", "followers_url": "https://api.github.com/users/yindaheng98/followers", "following_url": "https://api.github.com/users/yindaheng98/following{/other_user}", "gists_url": "https://api.github.com/users/yindaheng98/gists{/gist_id}", "starred_url": "https://api.github.com/users/yindaheng98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yindaheng98/subscriptions", "organizations_url": "https://api.github.com/users/yindaheng98/orgs", "repos_url": "https://api.github.com/users/yindaheng98/repos", "events_url": "https://api.github.com/users/yindaheng98/events{/privacy}", "received_events_url": "https://api.github.com/users/yindaheng98/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 763120268, "node_id": "MDU6TGFiZWw3NjMxMjAyNjg=", "url": "https://api.github.com/repos/libgit2/pygit2/labels/support", "name": "support", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-20T11:05:20Z", "updated_at": "2020-03-07T10:34:45Z", "closed_at": "2020-03-07T10:34:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there, I'm using a python 3.7.2 and pygit2 in TravisCI for building and deploying my github pages. The python script is used to scan all the commit and find the latest commit time for every file. But now I got an error in TravisCI when building, just like this: \r\n```python\r\nTraceback (most recent call last):\r\n  File \"travisPorcess.py\", line 1, in <module>\r\n    from meta import meta_data, path\r\n  File \"/home/travis/build/yindaheng98/My-docs/meta.py\", line 5, in <module>\r\n    from getDate import data\r\n  File \"/home/travis/build/yindaheng98/My-docs/getDate.py\", line 71, in <module>\r\n    for commit in commits:\r\nKeyError: 'object not found - no match for id (c170b110850200770e9c0d1b35b2616dfe18614d)'\r\n```\r\nAnd this error was throw from:\r\n```python\r\nrepo = pygit2.Repository('./')\r\ncommits=repo.walk(repo.head.target,GIT_SORT_TOPOLOGICAL|GIT_SORT_REVERSE)\r\n\r\nlast_tree=None\r\nfor commit in commits:#<<<<<<<<-throw from here\r\n    date=time.gmtime(commit.commit_time)\r\n    date=time.strftime('%Y-%m-%d %H:%M:%S',date)\r\n    print(\"scanning commit %s at %s\"%(commit.message,date))\r\n\r\n    tree=commit.tree\r\n    if last_tree is None:\r\n        last_tree=tree\r\n        continue\r\n\r\n    diff=tree.diff_to_tree(last_tree)\r\n    updateData(date,diff)\r\n    last_tree=tree\r\n```\r\nThis error is **only appear in TravisCI**, it can done its work properly in my Notebook.\r\n\r\nIs this error caused by bugs? Or just my improper usage?\r\n\r\nPS: The complete python scripts is [here](https://github.com/yindaheng98/My-docs/tree/dae3fae37f32bef45a37759d02f023fe6eec6af2/getDate.py)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/943", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/943/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/943/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/943/events", "html_url": "https://github.com/libgit2/pygit2/issues/943", "id": 495075746, "node_id": "MDU6SXNzdWU0OTUwNzU3NDY=", "number": 943, "title": "Memory leak while walking and diffing", "user": {"login": "marco-c", "id": 1616846, "node_id": "MDQ6VXNlcjE2MTY4NDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1616846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marco-c", "html_url": "https://github.com/marco-c", "followers_url": "https://api.github.com/users/marco-c/followers", "following_url": "https://api.github.com/users/marco-c/following{/other_user}", "gists_url": "https://api.github.com/users/marco-c/gists{/gist_id}", "starred_url": "https://api.github.com/users/marco-c/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marco-c/subscriptions", "organizations_url": "https://api.github.com/users/marco-c/orgs", "repos_url": "https://api.github.com/users/marco-c/repos", "events_url": "https://api.github.com/users/marco-c/events{/privacy}", "received_events_url": "https://api.github.com/users/marco-c/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2019-09-18T08:40:29Z", "updated_at": "2020-01-31T12:01:58Z", "closed_at": "2020-01-27T12:03:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "There seems to be a memory leak while iterating through commits and performing diff.\r\nThere is a sample test case in https://github.com/ishepard/pydriller/issues/54#issuecomment-532577398.\r\n\r\nThis might be related to (or a duplicate of) #625.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/941", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/941/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/941/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/941/events", "html_url": "https://github.com/libgit2/pygit2/issues/941", "id": 493728391, "node_id": "MDU6SXNzdWU0OTM3MjgzOTE=", "number": 941, "title": "Drop support for Pyhon 2.7 & 3.4", "user": {"login": "jdavid", "id": 596769, "node_id": "MDQ6VXNlcjU5Njc2OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-15T11:52:10Z", "updated_at": "2019-10-09T10:31:47Z", "closed_at": "2019-10-09T10:31:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://python3statement.org/\r\n\r\nMy idea would be to drop support for Python 2.7 (when?) and then release 1.0.0 (related to issue #890)\r\n\r\n- [x] Drop Python 2.7 support\r\n- [x] Drop Python 3.4 support", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/936", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/936/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/936/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/936/events", "html_url": "https://github.com/libgit2/pygit2/issues/936", "id": 488862696, "node_id": "MDU6SXNzdWU0ODg4NjI2OTY=", "number": 936, "title": "Expose git_remote_ls()", "user": {"login": "jtobiska", "id": 3953762, "node_id": "MDQ6VXNlcjM5NTM3NjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3953762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtobiska", "html_url": "https://github.com/jtobiska", "followers_url": "https://api.github.com/users/jtobiska/followers", "following_url": "https://api.github.com/users/jtobiska/following{/other_user}", "gists_url": "https://api.github.com/users/jtobiska/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtobiska/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtobiska/subscriptions", "organizations_url": "https://api.github.com/users/jtobiska/orgs", "repos_url": "https://api.github.com/users/jtobiska/repos", "events_url": "https://api.github.com/users/jtobiska/events{/privacy}", "received_events_url": "https://api.github.com/users/jtobiska/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-03T23:03:54Z", "updated_at": "2019-09-22T08:09:11Z", "closed_at": "2019-09-22T08:09:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a situation where I need to be able to tell where tags exist (locally only, remotely only, or both) and what they are pointing to in order to make decisions about what action to take.  Currently there is no way that I know of to do this in pygit2, but libgit2's git_remote_ls() function would do just the trick.  Can that function be exposed in pygit2? \r\n\r\nI just found the following pull request, which coincidentally was just closed without merging ~2 hours ago:\r\n \r\nhttps://github.com/libgit2/pygit2/pull/934\r\n\r\nAny chance of this making its way into the library?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/924", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/924/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/924/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/924/events", "html_url": "https://github.com/libgit2/pygit2/issues/924", "id": 464973583, "node_id": "MDU6SXNzdWU0NjQ5NzM1ODM=", "number": 924, "title": "Tree navigation: return objects", "user": {"login": "jdavid", "id": 596769, "node_id": "MDQ6VXNlcjU5Njc2OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-07-07T17:16:41Z", "updated_at": "2019-10-06T18:20:18Z", "closed_at": "2019-10-06T18:20:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "@rcoup \r\n\r\nFollow up from https://github.com/libgit2/pygit2/pull/903#issuecomment-505772130\r\n\r\nTo avoid the reference from `TreeEntry` to the repository, the `/` operator could return an object instead of a `TreeEntry`.\r\n\r\nThen this example from PR #903 \r\n\r\n    feature_info = commit.tree / 'meta' / 'features' / 'info.json'\r\n    info = json.loads(feature_info.obj.data)\r\n\r\nWould become:\r\n\r\n    feature_info = commit.tree / 'meta' / 'features' / 'info.json'\r\n    info = json.loads(feature_info.data)\r\n\r\nIt's slightly shorter and in my opinion more intuitive. Just tried with GitPython and apparently it behaves this way.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/922", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/922/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/922/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/922/events", "html_url": "https://github.com/libgit2/pygit2/issues/922", "id": 461464518, "node_id": "MDU6SXNzdWU0NjE0NjQ1MTg=", "number": 922, "title": "Resolving \"refish\"", "user": {"login": "rcoup", "id": 59874, "node_id": "MDQ6VXNlcjU5ODc0", "avatar_url": "https://avatars1.githubusercontent.com/u/59874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rcoup", "html_url": "https://github.com/rcoup", "followers_url": "https://api.github.com/users/rcoup/followers", "following_url": "https://api.github.com/users/rcoup/following{/other_user}", "gists_url": "https://api.github.com/users/rcoup/gists{/gist_id}", "starred_url": "https://api.github.com/users/rcoup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rcoup/subscriptions", "organizations_url": "https://api.github.com/users/rcoup/orgs", "repos_url": "https://api.github.com/users/rcoup/repos", "events_url": "https://api.github.com/users/rcoup/events{/privacy}", "received_events_url": "https://api.github.com/users/rcoup/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-06-27T11:04:20Z", "updated_at": "2019-07-03T08:49:46Z", "closed_at": "2019-07-03T08:46:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Trying to do a pygit2 equivalent of `git checkout`'s refish resolving, and found [libgit2's `checkout` example](https://libgit2.org/libgit2/ex/HEAD/checkout.html):\r\n\r\n  1. It [initially calls](https://libgit2.org/libgit2/ex/HEAD/checkout.html#section-14) [`resolve_refish()`](https://github.com/libgit2/libgit2/blob/master/examples/common.c#L272-L294) which calls [`git_reference_dwim()`](https://github.com/libgit2/libgit2/blob/master/src/refs.c#L290) which does a whole set of ref lookups (refs, heads, tags, branches, remotes, etc). That isn't available in pygit2 AFAICS. Returns an annotated commit, which seems to be a commit + the ref it was resolved from?\r\n\r\n  2. then [gets the actual commit](https://libgit2.org/libgit2/ex/HEAD/checkout.html#section-7), which is straightforward enough\r\n\r\n  3. then does the checkout\r\n\r\n  4. and finally [updates HEAD](https://libgit2.org/libgit2/ex/HEAD/checkout.html#section-9) using the annotated commit ref to decide whether the head is detached or not. This seems to be covered (a bit unintuitively) in pygit2 by passing a string vs oid to `repo.set_head()`\r\n\r\nSo... \r\n\r\nQ1: I wonder whether we should be preferring/helping get annotated commits when we're looking up references so the user can get back to their ref easily. We could be more aggressive about this than libgit2? eg: make AnnotatedCommit a subclass of Commit, and automatically use the underlying git_commit for APIs that need it.\r\n\r\nQ2: Would adding support for `git_reference_dwim()` be a good idea? That returns _references_, so at least you could maintain a (reference, commit) pair in Python and do \r\n\r\nQ3: Would adding a `Repository.resolve_refish()` method (similarly to `revparse_single()`) be useful? I _think_ `revparse_single()` resolves all \"commitish\" properly? \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/918", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/918/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/918/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/918/events", "html_url": "https://github.com/libgit2/pygit2/issues/918", "id": 456362645, "node_id": "MDU6SXNzdWU0NTYzNjI2NDU=", "number": 918, "title": "Unable to install on development Python versions", "user": {"login": "dullbananas", "id": 47706471, "node_id": "MDQ6VXNlcjQ3NzA2NDcx", "avatar_url": "https://avatars1.githubusercontent.com/u/47706471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dullbananas", "html_url": "https://github.com/dullbananas", "followers_url": "https://api.github.com/users/dullbananas/followers", "following_url": "https://api.github.com/users/dullbananas/following{/other_user}", "gists_url": "https://api.github.com/users/dullbananas/gists{/gist_id}", "starred_url": "https://api.github.com/users/dullbananas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dullbananas/subscriptions", "organizations_url": "https://api.github.com/users/dullbananas/orgs", "repos_url": "https://api.github.com/users/dullbananas/repos", "events_url": "https://api.github.com/users/dullbananas/events{/privacy}", "received_events_url": "https://api.github.com/users/dullbananas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-14T17:44:27Z", "updated_at": "2019-12-10T15:03:27Z", "closed_at": "2019-10-09T10:20:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Installation on stable versions of Python like 3.7 work fine, but it doesn't install on Python 3.8. This is the output that I get when trying to install on Python 3.8-dev on Travis CI:\r\n```\r\nERROR: Complete output from command /home/travis/virtualenv/python3.8-dev/bin/python -u -c 'import setuptools, tokenize;__file__='\"'\"'/tmp/pip-install-ey7szdl6/pygit2/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' bdist_wheel -d /tmp/pip-wheel-bcrkw1uc --python-tag cp38:\r\n  ERROR: running bdist_wheel\r\n  running build\r\n  running build_py\r\n  creating build\r\n  creating build/lib.linux-x86_64-3.8\r\n  creating build/lib.linux-x86_64-3.8/pygit2\r\n  copying pygit2/refspec.py -> build/lib.linux-x86_64-3.8/pygit2\r\n  copying pygit2/ffi.py -> build/lib.linux-x86_64-3.8/pygit2\r\n  copying pygit2/_run.py -> build/lib.linux-x86_64-3.8/pygit2\r\n  copying pygit2/_build.py -> build/lib.linux-x86_64-3.8/pygit2\r\n  copying pygit2/credentials.py -> build/lib.linux-x86_64-3.8/pygit2\r\n  copying pygit2/repository.py -> build/lib.linux-x86_64-3.8/pygit2\r\n  copying pygit2/remote.py -> build/lib.linux-x86_64-3.8/pygit2\r\n  copying pygit2/submodule.py -> build/lib.linux-x86_64-3.8/pygit2\r\n  copying pygit2/py3.py -> build/lib.linux-x86_64-3.8/pygit2\r\n  copying pygit2/utils.py -> build/lib.linux-x86_64-3.8/pygit2\r\n  copying pygit2/config.py -> build/lib.linux-x86_64-3.8/pygit2\r\n  copying pygit2/index.py -> build/lib.linux-x86_64-3.8/pygit2\r\n  copying pygit2/__init__.py -> build/lib.linux-x86_64-3.8/pygit2\r\n  copying pygit2/settings.py -> build/lib.linux-x86_64-3.8/pygit2\r\n  copying pygit2/errors.py -> build/lib.linux-x86_64-3.8/pygit2\r\n  copying pygit2/blame.py -> build/lib.linux-x86_64-3.8/pygit2\r\n  copying pygit2/py2.py -> build/lib.linux-x86_64-3.8/pygit2\r\n  creating build/lib.linux-x86_64-3.8/pygit2/decl\r\n  copying pygit2/decl/pack.h -> build/lib.linux-x86_64-3.8/pygit2/decl\r\n  copying pygit2/decl/remote.h -> build/lib.linux-x86_64-3.8/pygit2/decl\r\n  copying pygit2/decl/revert.h -> build/lib.linux-x86_64-3.8/pygit2/decl\r\n  copying pygit2/decl/config.h -> build/lib.linux-x86_64-3.8/pygit2/decl\r\n  copying pygit2/decl/types.h -> build/lib.linux-x86_64-3.8/pygit2/decl\r\n  copying pygit2/decl/index.h -> build/lib.linux-x86_64-3.8/pygit2/decl\r\n  copying pygit2/decl/errors.h -> build/lib.linux-x86_64-3.8/pygit2/decl\r\n  copying pygit2/decl/common.h -> build/lib.linux-x86_64-3.8/pygit2/decl\r\n  copying pygit2/decl/merge.h -> build/lib.linux-x86_64-3.8/pygit2/decl\r\n  copying pygit2/decl/clone.h -> build/lib.linux-x86_64-3.8/pygit2/decl\r\n  copying pygit2/decl/refspec.h -> build/lib.linux-x86_64-3.8/pygit2/decl\r\n  copying pygit2/decl/transport.h -> build/lib.linux-x86_64-3.8/pygit2/decl\r\n  copying pygit2/decl/repository.h -> build/lib.linux-x86_64-3.8/pygit2/decl\r\n  copying pygit2/decl/net.h -> build/lib.linux-x86_64-3.8/pygit2/decl\r\n  copying pygit2/decl/stash.h -> build/lib.linux-x86_64-3.8/pygit2/decl\r\n  copying pygit2/decl/graph.h -> build/lib.linux-x86_64-3.8/pygit2/decl\r\n  copying pygit2/decl/proxy.h -> build/lib.linux-x86_64-3.8/pygit2/decl\r\n  copying pygit2/decl/oid.h -> build/lib.linux-x86_64-3.8/pygit2/decl\r\n  copying pygit2/decl/strarray.h -> build/lib.linux-x86_64-3.8/pygit2/decl\r\n  copying pygit2/decl/attr.h -> build/lib.linux-x86_64-3.8/pygit2/decl\r\n  copying pygit2/decl/diff.h -> build/lib.linux-x86_64-3.8/pygit2/decl\r\n  copying pygit2/decl/describe.h -> build/lib.linux-x86_64-3.8/pygit2/decl\r\n  copying pygit2/decl/submodule.h -> build/lib.linux-x86_64-3.8/pygit2/decl\r\n  copying pygit2/decl/blame.h -> build/lib.linux-x86_64-3.8/pygit2/decl\r\n  copying pygit2/decl/buffer.h -> build/lib.linux-x86_64-3.8/pygit2/decl\r\n  copying pygit2/decl/checkout.h -> build/lib.linux-x86_64-3.8/pygit2/decl\r\n  running build_ext\r\n  generating cffi module 'build/temp.linux-x86_64-3.8/pygit2._libgit2.c'\r\n  creating build/temp.linux-x86_64-3.8\r\n  building '_pygit2' extension\r\n  creating build/temp.linux-x86_64-3.8/src\r\n  gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -g -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -fPIC -I/usr/local/include -I/opt/python/3.8-dev/include/python3.8 -c src/blob.c -o build/temp.linux-x86_64-3.8/src/blob.o\r\n  In file included from src/blob.c:30:0:\r\n  src/blob.h:33:18: fatal error: git2.h: No such file or directory\r\n  compilation terminated.\r\n  error: command 'gcc' failed with exit status 1\r\n  ----------------------------------------\r\n  ERROR: Failed building wheel for pygit2\r\n  Running setup.py clean for pygit2\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/916", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/916/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/916/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/916/events", "html_url": "https://github.com/libgit2/pygit2/issues/916", "id": 455432942, "node_id": "MDU6SXNzdWU0NTU0MzI5NDI=", "number": 916, "title": "Config.__del__() can raise exception", "user": {"login": "MarcelWaldvogel", "id": 3014737, "node_id": "MDQ6VXNlcjMwMTQ3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/3014737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarcelWaldvogel", "html_url": "https://github.com/MarcelWaldvogel", "followers_url": "https://api.github.com/users/MarcelWaldvogel/followers", "following_url": "https://api.github.com/users/MarcelWaldvogel/following{/other_user}", "gists_url": "https://api.github.com/users/MarcelWaldvogel/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarcelWaldvogel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarcelWaldvogel/subscriptions", "organizations_url": "https://api.github.com/users/MarcelWaldvogel/orgs", "repos_url": "https://api.github.com/users/MarcelWaldvogel/repos", "events_url": "https://api.github.com/users/MarcelWaldvogel/events{/privacy}", "received_events_url": "https://api.github.com/users/MarcelWaldvogel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-12T21:28:55Z", "updated_at": "2019-06-13T17:34:46Z", "closed_at": "2019-06-13T17:34:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Trying to work around #915, I started writing code that would try to call `Config.get_*_config()` to check whether they are out there.\r\n\r\nHowever, if `Config.__init__()` raises an exception (e.g., because the `.gitconfig` file is not readable or is a directory), then on program termination (or garbage collection), a seemingly spurious exception is raised:\r\n\r\n```\r\nException ignored in: <function Config.__del__ at 0x7fe011d96730>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3/dist-packages/pygit2/config.py\", line 99, in __del__\r\n    C.git_config_free(self._config)\r\nAttributeError: 'Config' object has no attribute '_config'\r\n```\r\n\r\nThis happens also if the exception is caught, i.e., when the exception from `__init__()` is not seen by the user.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/914", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/914/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/914/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/914/events", "html_url": "https://github.com/libgit2/pygit2/issues/914", "id": 451218516, "node_id": "MDU6SXNzdWU0NTEyMTg1MTY=", "number": 914, "title": "FFI error when recompiling libgit2 ", "user": {"login": "eiselekd", "id": 1267820, "node_id": "MDQ6VXNlcjEyNjc4MjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1267820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eiselekd", "html_url": "https://github.com/eiselekd", "followers_url": "https://api.github.com/users/eiselekd/followers", "following_url": "https://api.github.com/users/eiselekd/following{/other_user}", "gists_url": "https://api.github.com/users/eiselekd/gists{/gist_id}", "starred_url": "https://api.github.com/users/eiselekd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eiselekd/subscriptions", "organizations_url": "https://api.github.com/users/eiselekd/orgs", "repos_url": "https://api.github.com/users/eiselekd/repos", "events_url": "https://api.github.com/users/eiselekd/events{/privacy}", "received_events_url": "https://api.github.com/users/eiselekd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-02T18:11:02Z", "updated_at": "2019-06-02T18:51:23Z", "closed_at": "2019-06-02T18:51:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have recompiled and installed libgit2 v0.28 , I then also installed pygit2 via \r\n```python3 setup.py install --user``` . However I get some FFI error when starting \r\nclone_repository():\r\n\r\n```\r\n>>> from pygit2 import clone_repository\r\n>>> repo_url = 'git://github.com/libgit2/pygit2.git'\r\n>>> repo_path = '/tmp/test3'\r\n>>> repo = clone_repository(repo_url, repo_path)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/d/.local/lib/python3.7/site-packages/pygit2-0.28.2-py3.7-linux-x86_64.egg/pygit2/__init__.py\", line 222, in clone_repository\r\n    opts = ffi.new('git_clone_options *')\r\nffi.error: struct git_remote_callbacks: wrong total size (cdef says 104, but C compiler says 112). fix it or use \"...;\" in the cdef for struct git_remote_callbacks to make it flexible\r\n```\r\nThe error happens in:\r\n\r\n```pygit2/__init__.py``` : clone_repository\r\n```\r\n    ...                                                                                                                                                           \r\n    opts = ffi.new('git_clone_options *')                                                                                                                      \r\n    crepo = ffi.new('git_repository **')                                                                                                                       \r\n    ...                                                          \r\n```                                                                                                 \r\nThere seem to be some struct size mismatch. It seems that the size of a structure has changed, however I dont understand what is actually checked. Does the cdef line mean that FFI is parsing git2.h and calculates a different struct size? \r\n\r\nI saw there is a ```pygit2/decl``` with c headers. Maybe this folder need to be updated?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/910", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/910/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/910/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/910/events", "html_url": "https://github.com/libgit2/pygit2/issues/910", "id": 447584289, "node_id": "MDU6SXNzdWU0NDc1ODQyODk=", "number": 910, "title": "ValueError when referencing from packed-refs", "user": {"login": "aslakrin", "id": 901730, "node_id": "MDQ6VXNlcjkwMTczMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/901730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aslakrin", "html_url": "https://github.com/aslakrin", "followers_url": "https://api.github.com/users/aslakrin/followers", "following_url": "https://api.github.com/users/aslakrin/following{/other_user}", "gists_url": "https://api.github.com/users/aslakrin/gists{/gist_id}", "starred_url": "https://api.github.com/users/aslakrin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aslakrin/subscriptions", "organizations_url": "https://api.github.com/users/aslakrin/orgs", "repos_url": "https://api.github.com/users/aslakrin/repos", "events_url": "https://api.github.com/users/aslakrin/events{/privacy}", "received_events_url": "https://api.github.com/users/aslakrin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 763120422, "node_id": "MDU6TGFiZWw3NjMxMjA0MjI=", "url": "https://api.github.com/repos/libgit2/pygit2/labels/bug", "name": "bug", "color": "d93f0b", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-23T10:49:56Z", "updated_at": "2019-05-25T10:02:42Z", "closed_at": "2019-05-25T10:02:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using pygit2-0.28.1, I have an issue when using for example `repo.branches.with_commit()` and one of the branches is in the packed-refs file.\r\n\r\nReproduce with `tests/submodulerepo.tar`:\r\n\r\n```python\r\nsubrepo = pygit2.Repository(r\"path\\pygit2\\test\\data\\submodulerepo\")\r\n# SHA1 for refs/remotes/origin/master from submodulerepo/.git/packed-refs\r\nbranches = subrepo.branches.with_commit('215fc695515c4093e2beffb21225ce6e1b3d55bc')\r\nlist(branches.remote) # This raises ValueError\r\n```\r\nYou'll get:\r\n\r\n```Traceback (most recent call last):\r\n  File \"<input>\", line 1, in <module>\r\n  File \"path\\lib\\site-packages\\pygit2\\repository.py\", line 1181, in __iter__\r\n    if self._commit is None or self.get(branch_name) is not None:\r\n  File \"path\\lib\\site-packages\\pygit2\\repository.py\", line 1175, in get\r\n    return self[key]\r\n  File \"path\\lib\\site-packages\\pygit2\\repository.py\", line 1168, in __getitem__\r\n    if branch is None or not self._valid(branch):\r\n  File \"path\\lib\\site-packages\\pygit2\\repository.py\", line 1197, in _valid\r\n    self._repository.descendant_of(branch.target, self._commit))\r\nValueError: refs/remotes/origin/master\r\n```\r\n\r\nI'm not 100% sure that it's related to packed-ref, but I tried reproducing when the ref actually exists as a file and didn't get the same issue.\r\n\r\nIn my ignorance I came up with a workaround,\r\n\r\n```python\r\n# pygit2/repository.py :: L1190\r\n    def _valid(self, branch):\r\n        try:\r\n            target = self._repository.expand_id(branch.target)\r\n        except ValueError:\r\n            target = self._repository.expand_id(self._repository.lookup_reference(branch.target).target)\r\n\r\n        return (self._commit is None or target == self._commit or  # target was branch.target\r\n                self._repository.descendant_of(target, self._commit))  # target was branch.target\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/907", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/907/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/907/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/907/events", "html_url": "https://github.com/libgit2/pygit2/issues/907", "id": 443440503, "node_id": "MDU6SXNzdWU0NDM0NDA1MDM=", "number": 907, "title": "Diff when commit has multiple parents?", "user": {"login": "ronnyli", "id": 6841011, "node_id": "MDQ6VXNlcjY4NDEwMTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6841011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronnyli", "html_url": "https://github.com/ronnyli", "followers_url": "https://api.github.com/users/ronnyli/followers", "following_url": "https://api.github.com/users/ronnyli/following{/other_user}", "gists_url": "https://api.github.com/users/ronnyli/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronnyli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronnyli/subscriptions", "organizations_url": "https://api.github.com/users/ronnyli/orgs", "repos_url": "https://api.github.com/users/ronnyli/repos", "events_url": "https://api.github.com/users/ronnyli/events{/privacy}", "received_events_url": "https://api.github.com/users/ronnyli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-13T14:45:55Z", "updated_at": "2019-05-17T17:13:33Z", "closed_at": "2019-05-17T17:13:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I hope this isn't a dumb question:\r\n\r\nHow would I call `repo.diff` if a commit has multiple parents? I found this [StackOverflow answer](https://stackoverflow.com/a/25519606/10928982) that says a commit with 2 parents is a 3-way merge. Does that mean I should call `repo.diff` twice?\r\n\r\nThanks for your help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/905", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/905/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/905/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/905/events", "html_url": "https://github.com/libgit2/pygit2/issues/905", "id": 441207461, "node_id": "MDU6SXNzdWU0NDEyMDc0NjE=", "number": 905, "title": "How to clone only one branch?", "user": {"login": "GreatBahram", "id": 14103831, "node_id": "MDQ6VXNlcjE0MTAzODMx", "avatar_url": "https://avatars1.githubusercontent.com/u/14103831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GreatBahram", "html_url": "https://github.com/GreatBahram", "followers_url": "https://api.github.com/users/GreatBahram/followers", "following_url": "https://api.github.com/users/GreatBahram/following{/other_user}", "gists_url": "https://api.github.com/users/GreatBahram/gists{/gist_id}", "starred_url": "https://api.github.com/users/GreatBahram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GreatBahram/subscriptions", "organizations_url": "https://api.github.com/users/GreatBahram/orgs", "repos_url": "https://api.github.com/users/GreatBahram/repos", "events_url": "https://api.github.com/users/GreatBahram/events{/privacy}", "received_events_url": "https://api.github.com/users/GreatBahram/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-07T12:33:44Z", "updated_at": "2019-05-11T13:02:57Z", "closed_at": "2019-05-11T13:02:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nHow should I **clone** **only one single branch** just like `git clone --single-branch --branch branch_name`?\r\n\r\nIs this possible to **clone** only a **specific number of commits**? I mean a **shallow clone** instead of all commits like the way `git clone --depth 1 acts`.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/904", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/904/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/904/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/904/events", "html_url": "https://github.com/libgit2/pygit2/issues/904", "id": 440406165, "node_id": "MDU6SXNzdWU0NDA0MDYxNjU=", "number": 904, "title": "Why I should specify path for clone_repository?", "user": {"login": "GreatBahram", "id": 14103831, "node_id": "MDQ6VXNlcjE0MTAzODMx", "avatar_url": "https://avatars1.githubusercontent.com/u/14103831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GreatBahram", "html_url": "https://github.com/GreatBahram", "followers_url": "https://api.github.com/users/GreatBahram/followers", "following_url": "https://api.github.com/users/GreatBahram/following{/other_user}", "gists_url": "https://api.github.com/users/GreatBahram/gists{/gist_id}", "starred_url": "https://api.github.com/users/GreatBahram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GreatBahram/subscriptions", "organizations_url": "https://api.github.com/users/GreatBahram/orgs", "repos_url": "https://api.github.com/users/GreatBahram/repos", "events_url": "https://api.github.com/users/GreatBahram/events{/privacy}", "received_events_url": "https://api.github.com/users/GreatBahram/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-05T06:15:43Z", "updated_at": "2019-05-06T17:06:02Z", "closed_at": "2019-05-06T17:06:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nFirst of all, thanks for your great effort on pygit2,\r\n\r\nI was wonder why don't you create the directory based on the URL like the way `git-clone` acts? The path is a mandatory attribute in clone_repository function, but maybe it shouldn't be.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/902", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/902/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/902/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/902/events", "html_url": "https://github.com/libgit2/pygit2/issues/902", "id": 435412037, "node_id": "MDU6SXNzdWU0MzU0MTIwMzc=", "number": 902, "title": "Move CI for Windows to Travis", "user": {"login": "jdavid", "id": 596769, "node_id": "MDQ6VXNlcjU5Njc2OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1081296590, "node_id": "MDU6TGFiZWwxMDgxMjk2NTkw", "url": "https://api.github.com/repos/libgit2/pygit2/labels/tests", "name": "tests", "color": "3fead6", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-20T15:41:59Z", "updated_at": "2020-03-07T10:14:00Z", "closed_at": "2020-03-07T10:14:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Now that Travis supports Windows, CI would simpler to maintain if we used only Travis:\r\n\r\n- [ ] Run the Windows tests in Travis\r\n- [ ] Generate the Windows artefacts in Travis (at this point we can drop AppVeyor)\r\n- [ ] Include libssh2 in the Windows wheels\r\n- [ ] Automatically upload to Pypi\r\n\r\nTests in AppVeyor are broken since commit 492bc5a8, instead of fixing them move to Travis.\r\n\r\nDo not use tox in CI, use tox only to run the tests locally for a number of Python versions. Currently local use of tox is broken, since we started using tox in AppVeyor.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/901", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/901/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/901/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/901/events", "html_url": "https://github.com/libgit2/pygit2/issues/901", "id": 435026343, "node_id": "MDU6SXNzdWU0MzUwMjYzNDM=", "number": 901, "title": "ref.log() crashes on the reflog created by Repository.references.create()", "user": {"login": "cjerdonek", "id": 355822, "node_id": "MDQ6VXNlcjM1NTgyMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/355822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjerdonek", "html_url": "https://github.com/cjerdonek", "followers_url": "https://api.github.com/users/cjerdonek/followers", "following_url": "https://api.github.com/users/cjerdonek/following{/other_user}", "gists_url": "https://api.github.com/users/cjerdonek/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjerdonek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjerdonek/subscriptions", "organizations_url": "https://api.github.com/users/cjerdonek/orgs", "repos_url": "https://api.github.com/users/cjerdonek/repos", "events_url": "https://api.github.com/users/cjerdonek/events{/privacy}", "received_events_url": "https://api.github.com/users/cjerdonek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-19T02:24:54Z", "updated_at": "2019-05-13T18:09:31Z", "closed_at": "2019-05-13T17:59:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If you create a new reference using [Repository.references.create()](https://www.pygit2.org/references.html#pygit2.repository.References.create), then an invalid (corrupt) reflog file gets created (e.g. can't be read by `ref.log()`).\r\n\r\nThis looks to be because e.g. [`Repository_create_reference_direct`](https://github.com/libgit2/pygit2/blob/c43db4402fc2cd5064c19f359685538ad8aa4f9e/src/repository.c#L1492) passes `NULL` to `git_reference_create()` as the [`log_message` argument](https://libgit2.org/libgit2/#HEAD/group/reference/git_reference_create): https://github.com/libgit2/pygit2/blob/c43db4402fc2cd5064c19f359685538ad8aa4f9e/src/repository.c#L1492\r\n\r\nAnd similarly for `Repository_create_reference_symbolic`: https://github.com/libgit2/pygit2/blob/c43db4402fc2cd5064c19f359685538ad8aa4f9e/src/repository.c#L1527-L1528\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/900", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/900/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/900/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/900/events", "html_url": "https://github.com/libgit2/pygit2/issues/900", "id": 434798400, "node_id": "MDU6SXNzdWU0MzQ3OTg0MDA=", "number": 900, "title": "Ship OS-specific wheels for macOS", "user": {"login": "webknjaz", "id": 578543, "node_id": "MDQ6VXNlcjU3ODU0Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/578543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/webknjaz", "html_url": "https://github.com/webknjaz", "followers_url": "https://api.github.com/users/webknjaz/followers", "following_url": "https://api.github.com/users/webknjaz/following{/other_user}", "gists_url": "https://api.github.com/users/webknjaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/webknjaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/webknjaz/subscriptions", "organizations_url": "https://api.github.com/users/webknjaz/orgs", "repos_url": "https://api.github.com/users/webknjaz/repos", "events_url": "https://api.github.com/users/webknjaz/events{/privacy}", "received_events_url": "https://api.github.com/users/webknjaz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1377043146, "node_id": "MDU6TGFiZWwxMzc3MDQzMTQ2", "url": "https://api.github.com/repos/libgit2/pygit2/labels/packaging", "name": "packaging", "color": "4c50bf", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-04-18T14:25:23Z", "updated_at": "2020-04-10T06:42:14Z", "closed_at": "2020-04-10T06:42:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I think at some point I'll complete this task myself unless someone else is going to pick it up.\r\n\r\nMotivation: I don't use OS X but I may use pygit2 is some user-facing code and I don't want users to struggle with compiling things correctly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/899", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/899/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/899/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/899/events", "html_url": "https://github.com/libgit2/pygit2/issues/899", "id": 432822354, "node_id": "MDU6SXNzdWU0MzI4MjIzNTQ=", "number": 899, "title": "cffi use extern \"Python\" instead of callbacks", "user": {"login": "jdavid", "id": 596769, "node_id": "MDQ6VXNlcjU5Njc2OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-13T08:13:54Z", "updated_at": "2020-04-10T09:06:58Z", "closed_at": "2020-04-10T09:06:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Since cffi 1.4 the preferred way is to use `@ffi.def_extern()` instead of `@ffi.callback(..)`\r\n\r\nSee https://cffi.readthedocs.io/en/latest/using.html#extern-python\r\n\r\nSolving this issue will raise the requirement to cffi 1.4 or above.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/896", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/896/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/896/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/896/events", "html_url": "https://github.com/libgit2/pygit2/issues/896", "id": 427871454, "node_id": "MDU6SXNzdWU0Mjc4NzE0NTQ=", "number": 896, "title": "Cannot install pygit2", "user": {"login": "KeerthiT30", "id": 45610624, "node_id": "MDQ6VXNlcjQ1NjEwNjI0", "avatar_url": "https://avatars0.githubusercontent.com/u/45610624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KeerthiT30", "html_url": "https://github.com/KeerthiT30", "followers_url": "https://api.github.com/users/KeerthiT30/followers", "following_url": "https://api.github.com/users/KeerthiT30/following{/other_user}", "gists_url": "https://api.github.com/users/KeerthiT30/gists{/gist_id}", "starred_url": "https://api.github.com/users/KeerthiT30/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KeerthiT30/subscriptions", "organizations_url": "https://api.github.com/users/KeerthiT30/orgs", "repos_url": "https://api.github.com/users/KeerthiT30/repos", "events_url": "https://api.github.com/users/KeerthiT30/events{/privacy}", "received_events_url": "https://api.github.com/users/KeerthiT30/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-01T19:24:32Z", "updated_at": "2019-04-20T15:47:32Z", "closed_at": "2019-04-20T15:47:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "[ec2-user@ip-172-31-26-20 libgit2-0.25.0]$ python -c 'import pygit2'\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\nImportError: No module named pygit2\r\n[ec2-user@ip-172-31-26-20 libgit2-0.25.0]$ sudo ldconfig\r\n[ec2-user@ip-172-31-26-20 libgit2-0.25.0]$ python -c 'import pygit2'\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\nImportError: No module named pygit2\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/890", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/890/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/890/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/890/events", "html_url": "https://github.com/libgit2/pygit2/issues/890", "id": 421967118, "node_id": "MDU6SXNzdWU0MjE5NjcxMTg=", "number": 890, "title": "Version numbering scheme", "user": {"login": "jdavid", "id": 596769, "node_id": "MDQ6VXNlcjU5Njc2OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/libgit2/pygit2/milestones/4", "html_url": "https://github.com/libgit2/pygit2/milestone/4", "labels_url": "https://api.github.com/repos/libgit2/pygit2/milestones/4/labels", "id": 4155193, "node_id": "MDk6TWlsZXN0b25lNDE1NTE5Mw==", "number": 4, "title": "0.29.0", "description": "", "creator": {"login": "jdavid", "id": 596769, "node_id": "MDQ6VXNlcjU5Njc2OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "closed", "created_at": "2019-03-19T18:46:25Z", "updated_at": "2019-12-06T13:19:18Z", "due_on": null, "closed_at": "2019-12-06T13:19:18Z"}, "comments": 4, "created_at": "2019-03-17T20:11:55Z", "updated_at": "2019-12-06T13:18:52Z", "closed_at": "2019-12-06T13:18:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This is a proposal.\r\n\r\nRight now our version number is split in 2 parts. For instance in `0.28.0` the first part is `0.28`, which identifies which major version of libgit2 it's compatible with. The last number, `.0` we increment freely, regardless of the nature of the changes involved.\r\n\r\nThe proposal is to add another number, to tell apart releases with backwards incompatible changes. So next major release would be `0.29.0.0`:\r\n\r\n- `0.29` matches libgit2 major version number\r\n- `.0` will increment whenever there're backwards incompatible changes\r\n- `.0` will increment whenever there're other changes, including new features", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/881", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/881/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/881/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/881/events", "html_url": "https://github.com/libgit2/pygit2/issues/881", "id": 414513743, "node_id": "MDU6SXNzdWU0MTQ1MTM3NDM=", "number": 881, "title": "GitError: failed to stat '/opt/webapp/projects/project-2-project-anonymous/.git'", "user": {"login": "inf3cti0n95", "id": 13603045, "node_id": "MDQ6VXNlcjEzNjAzMDQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/13603045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inf3cti0n95", "html_url": "https://github.com/inf3cti0n95", "followers_url": "https://api.github.com/users/inf3cti0n95/followers", "following_url": "https://api.github.com/users/inf3cti0n95/following{/other_user}", "gists_url": "https://api.github.com/users/inf3cti0n95/gists{/gist_id}", "starred_url": "https://api.github.com/users/inf3cti0n95/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inf3cti0n95/subscriptions", "organizations_url": "https://api.github.com/users/inf3cti0n95/orgs", "repos_url": "https://api.github.com/users/inf3cti0n95/repos", "events_url": "https://api.github.com/users/inf3cti0n95/events{/privacy}", "received_events_url": "https://api.github.com/users/inf3cti0n95/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-26T09:33:51Z", "updated_at": "2019-03-09T09:24:33Z", "closed_at": "2019-03-09T09:24:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Enviroment -\r\nDocker - Alpine with minconda3\r\n\r\nIt show error GitError: failed to stat '/opt/webapp/projects/project-2-project-anonymous/.git'\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/opt/conda/envs/venv/lib/python3.7/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/opt/conda/envs/venv/lib/python3.7/site-packages/django/core/handlers/base.py\", line 126, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/opt/conda/envs/venv/lib/python3.7/site-packages/django/core/handlers/base.py\", line 124, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/opt/conda/envs/venv/lib/python3.7/site-packages/django/contrib/admin/options.py\", line 604, in wrapper\r\n    return self.admin_site.admin_view(view)(*args, **kwargs)\r\n  File \"/opt/conda/envs/venv/lib/python3.7/site-packages/django/utils/decorators.py\", line 142, in _wrapped_view\r\n    response = view_func(request, *args, **kwargs)\r\n  File \"/opt/conda/envs/venv/lib/python3.7/site-packages/django/views/decorators/cache.py\", line 44, in _wrapped_view_func\r\n    response = view_func(request, *args, **kwargs)\r\n  File \"/opt/conda/envs/venv/lib/python3.7/site-packages/django/contrib/admin/sites.py\", line 223, in inner\r\n    return view(request, *args, **kwargs)\r\n  File \"/opt/conda/envs/venv/lib/python3.7/site-packages/django/contrib/admin/options.py\", line 1637, in add_view\r\n    return self.changeform_view(request, None, form_url, extra_context)\r\n  File \"/opt/conda/envs/venv/lib/python3.7/site-packages/django/utils/decorators.py\", line 45, in _wrapper\r\n    return bound_method(*args, **kwargs)\r\n  File \"/opt/conda/envs/venv/lib/python3.7/site-packages/django/utils/decorators.py\", line 142, in _wrapped_view\r\n    response = view_func(request, *args, **kwargs)\r\n  File \"/opt/conda/envs/venv/lib/python3.7/site-packages/django/contrib/admin/options.py\", line 1525, in changeform_view\r\n    return self._changeform_view(request, object_id, form_url, extra_context)\r\n  File \"/opt/conda/envs/venv/lib/python3.7/site-packages/django/contrib/admin/options.py\", line 1564, in _changeform_view\r\n    self.save_model(request, new_object, form, not add)\r\n  File \"/opt/conda/envs/venv/lib/python3.7/site-packages/django/contrib/admin/options.py\", line 1091, in save_model\r\n    obj.save()\r\n  File \"/opt/conda/envs/venv/lib/python3.7/site-packages/django/db/models/base.py\", line 718, in save\r\n    force_update=force_update, update_fields=update_fields)\r\n  File \"/opt/conda/envs/venv/lib/python3.7/site-packages/django/db/models/base.py\", line 758, in save_base\r\n    update_fields=update_fields, raw=raw, using=using,\r\n  File \"/opt/conda/envs/venv/lib/python3.7/site-packages/django/dispatch/dispatcher.py\", line 175, in send\r\n    for receiver in self._live_receivers(sender)\r\n  File \"/opt/conda/envs/venv/lib/python3.7/site-packages/django/dispatch/dispatcher.py\", line 175, in <listcomp>\r\n    for receiver in self._live_receivers(sender)\r\n  File \"/opt/webapp/licensing_service/project/models.py\", line 70, in post_save_handler\r\n    instance.source.clone_repository(repository_url=instance.source_url)\r\n  File \"/opt/webapp/licensing_service/project/fields.py\", line 37, in clone_repository\r\n    pygit2.clone_repository(repository_url, self.source_directory, bare=False)\r\n  File \"/opt/conda/envs/venv/lib/python3.7/site-packages/pygit2/__init__.py\", line 265, in clone_repository\r\n    check_error(err)\r\n  File \"/opt/conda/envs/venv/lib/python3.7/site-packages/pygit2/errors.py\", line 64, in check_error\r\n    raise GitError(message)\r\n_pygit2.GitError: failed to stat '/opt/webapp/projects/project-2-project-anonymous/.git': \r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/880", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/880/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/880/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/880/events", "html_url": "https://github.com/libgit2/pygit2/issues/880", "id": 414328911, "node_id": "MDU6SXNzdWU0MTQzMjg5MTE=", "number": 880, "title": "SSH Auth Fails with Passphrase protected Keypair", "user": {"login": "Church-", "id": 5179585, "node_id": "MDQ6VXNlcjUxNzk1ODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/5179585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Church-", "html_url": "https://github.com/Church-", "followers_url": "https://api.github.com/users/Church-/followers", "following_url": "https://api.github.com/users/Church-/following{/other_user}", "gists_url": "https://api.github.com/users/Church-/gists{/gist_id}", "starred_url": "https://api.github.com/users/Church-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Church-/subscriptions", "organizations_url": "https://api.github.com/users/Church-/orgs", "repos_url": "https://api.github.com/users/Church-/repos", "events_url": "https://api.github.com/users/Church-/events{/privacy}", "received_events_url": "https://api.github.com/users/Church-/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-25T22:03:56Z", "updated_at": "2020-04-02T07:28:09Z", "closed_at": "2020-04-02T07:28:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "So currently on Ubuntu 18.04 using:\r\nPython Version 2.7.15rc1\r\nPygit2 Version 0.26.2-2\r\nLibgit2 Version 0.26.0+dfsg.1-1.1ubuntu0.2\r\nlibssh2 Version 1.8.0-1\r\n\r\nIt's failing to auth over ssh with a keypair protected by a keyphrase, tried the keypair with a plain git clone and that succeeded as well as trying a non keyphrase protected keypair with pygit2. I get this error back:\r\n\r\n``` GitError: Failed to authenticate SSH session: Callback returned error\r\n [ERROR   ] Error occurred fetching gitfs remote 'ssh://git@hack.in.backtrace.io/source/salt.git': Failed to authenticate SSH session: Callback returned error\r\n Traceback (most recent call last):\r\n   File \"/usr/lib/python2.7/dist-packages/salt/utils/gitfs.py\", line 1703, in _fetch\r\n     fetch_results = origin.fetch(**fetch_kwargs)\r\n   File \"/usr/lib/python2.7/dist-packages/pygit2/remote.py\", line 405, in fetch\r\n     check_error(err)\r\n   File \"/usr/lib/python2.7/dist-packages/pygit2/errors.py\", line 64, in check_error\r\n     raise GitError(message)\r\nGitError: Failed to authenticate SSH session: Callback returned error\r\n```\r\n\r\nExample failing code is here: \r\n```\r\nimport pygit2\r\n\r\nclass MyRemoteCallbacks(pygit2.RemoteCallbacks):\r\n\r\n    def credentials(self, url, username_from_url, allowed_types):\r\n        if allowed_types & pygit2.credentials.GIT_CREDTYPE_USERNAME:\r\n            return pygit2.Username(\"git\")\r\n        elif allowed_types & pygit2.credentials.GIT_CREDTYPE_SSH_KEY:\r\n            return pygit2.Keypair(\"git\", \"/etc/salt/salt_git_key.pub\", \"/etc/salt/salt_git_key\", \"testkeyTESTKEY\")\r\n        else:\r\n            return None\r\n\r\ndef main():\r\n    print(\"Cloning Salt over ssh\")\r\n    pygit2.clone_repository(\"ssh://git@hack.in.backtrace.io/source/salt.git\", \"pygit2.git\",callbacks=MyRemoteCallbacks())\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/878", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/878/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/878/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/878/events", "html_url": "https://github.com/libgit2/pygit2/issues/878", "id": 413806150, "node_id": "MDU6SXNzdWU0MTM4MDYxNTA=", "number": 878, "title": "libgit 0.28 compatible release", "user": {"login": "0-wiz-0", "id": 2221844, "node_id": "MDQ6VXNlcjIyMjE4NDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2221844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0-wiz-0", "html_url": "https://github.com/0-wiz-0", "followers_url": "https://api.github.com/users/0-wiz-0/followers", "following_url": "https://api.github.com/users/0-wiz-0/following{/other_user}", "gists_url": "https://api.github.com/users/0-wiz-0/gists{/gist_id}", "starred_url": "https://api.github.com/users/0-wiz-0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0-wiz-0/subscriptions", "organizations_url": "https://api.github.com/users/0-wiz-0/orgs", "repos_url": "https://api.github.com/users/0-wiz-0/repos", "events_url": "https://api.github.com/users/0-wiz-0/events{/privacy}", "received_events_url": "https://api.github.com/users/0-wiz-0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2019-02-24T10:23:32Z", "updated_at": "2019-03-19T17:47:04Z", "closed_at": "2019-03-19T17:47:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please release a version of pygit2 that's compatible with the current latest release of libgit, 0.28.1.\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/877", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/877/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/877/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/877/events", "html_url": "https://github.com/libgit2/pygit2/issues/877", "id": 412794710, "node_id": "MDU6SXNzdWU0MTI3OTQ3MTA=", "number": 877, "title": "Add binding for git_diff_patchid", "user": {"login": "sffc", "id": 1145762, "node_id": "MDQ6VXNlcjExNDU3NjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1145762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sffc", "html_url": "https://github.com/sffc", "followers_url": "https://api.github.com/users/sffc/followers", "following_url": "https://api.github.com/users/sffc/following{/other_user}", "gists_url": "https://api.github.com/users/sffc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sffc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sffc/subscriptions", "organizations_url": "https://api.github.com/users/sffc/orgs", "repos_url": "https://api.github.com/users/sffc/repos", "events_url": "https://api.github.com/users/sffc/events{/privacy}", "received_events_url": "https://api.github.com/users/sffc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 763120602, "node_id": "MDU6TGFiZWw3NjMxMjA2MDI=", "url": "https://api.github.com/repos/libgit2/pygit2/labels/feature", "name": "feature", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-21T08:03:22Z", "updated_at": "2019-12-22T09:22:49Z", "closed_at": "2019-12-22T09:22:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "This function was added to libgit2 recently (v0.27.0), but I can't find a Python binding for it in pygit2.  I would like to be able to use it.\r\n\r\nhttps://libgit2.org/libgit2/#HEAD/group/diff/git_diff_patchid\r\n\r\nWe would like this feature to use in ICU tooling: [ICU-20444](https://unicode-org.atlassian.net/browse/ICU-20444)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/876", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/876/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/876/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/876/events", "html_url": "https://github.com/libgit2/pygit2/issues/876", "id": 412410312, "node_id": "MDU6SXNzdWU0MTI0MTAzMTI=", "number": 876, "title": "Allow setting GIT_OPT_SET_SSL_CERT_LOCATIONS option in libgit2", "user": {"login": "webknjaz", "id": 578543, "node_id": "MDQ6VXNlcjU3ODU0Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/578543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/webknjaz", "html_url": "https://github.com/webknjaz", "followers_url": "https://api.github.com/users/webknjaz/followers", "following_url": "https://api.github.com/users/webknjaz/following{/other_user}", "gists_url": "https://api.github.com/users/webknjaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/webknjaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/webknjaz/subscriptions", "organizations_url": "https://api.github.com/users/webknjaz/orgs", "repos_url": "https://api.github.com/users/webknjaz/repos", "events_url": "https://api.github.com/users/webknjaz/events{/privacy}", "received_events_url": "https://api.github.com/users/webknjaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/libgit2/pygit2/milestones/2", "html_url": "https://github.com/libgit2/pygit2/milestone/2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/milestones/2/labels", "id": 4081462, "node_id": "MDk6TWlsZXN0b25lNDA4MTQ2Mg==", "number": 2, "title": "0.28.0", "description": "", "creator": {"login": "jdavid", "id": 596769, "node_id": "MDQ6VXNlcjU5Njc2OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "closed", "created_at": "2019-02-23T22:00:58Z", "updated_at": "2019-03-19T18:30:17Z", "due_on": null, "closed_at": "2019-03-19T18:30:17Z"}, "comments": 8, "created_at": "2019-02-20T12:53:23Z", "updated_at": "2019-03-07T16:30:42Z", "closed_at": "2019-03-07T16:30:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Apparently, there's `GIT_OPT_SET_SSL_CERT_LOCATIONS` (ref: https://libgit2.org/libgit2/#HEAD/group/libgit2/git_libgit2_opts) option available in `libgit2` (src: https://github.com/libgit2/libgit2/blob/12c6e1f/src/settings.c#L180-L186).\r\n\r\nOpenSSL we have compiled under `manylinux1` image has the following completely non-default address for `OPENSSLDIR` config value:\r\n```console\r\n[root@7a356be85129 ~]# /opt/pyca/cryptography/openssl/bin/openssl version -d\r\nOPENSSLDIR: \"/opt/pyca/cryptography/openssl\"\r\n```\r\nBut even if we wanted to set something more generic we simply wouldn't be able to agree on what such generic value would be. Every OS has it's own \"ideal\" location in their minds: http://gagravarr.org/writing/openssl-certs/others.shtml\r\n\r\nThat's why it's important to expose this option so that it could be specified by users who could also have some non-default places for certificates for hardening reasons, for example.\r\n\r\nGoing forward, Python itself has `ssl` module which might have a better idea of where the current installation stores its certificates. This is the location default of my Gentoo Linux based laptop, for example:\r\n```python\r\n\u279c ipython\r\nPython 3.7.1 (default, Jan 28 2019, 08:25:13) \r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 7.1.1 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: import ssl                                                                                                                                                                             \r\n\r\nIn [2]: ssl.get_default_verify_paths()                                                                                                                                                         \r\nOut[2]: DefaultVerifyPaths(cafile=None, capath='/etc/ssl/certs', openssl_cafile_env='SSL_CERT_FILE', openssl_cafile='/etc/ssl/cert.pem', openssl_capath_env='SSL_CERT_DIR', openssl_capath='/etc/ssl/certs')\r\n```\r\n\r\nSo in order to provide better consistency with the runtime, I suggest to not only expose this option but also set the location to match Python's defaults, during initialization.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/871", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/871/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/871/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/871/events", "html_url": "https://github.com/libgit2/pygit2/issues/871", "id": 409842463, "node_id": "MDU6SXNzdWU0MDk4NDI0NjM=", "number": 871, "title": "Add link to docs from \"URL\" field in the repo", "user": {"login": "webknjaz", "id": 578543, "node_id": "MDQ6VXNlcjU3ODU0Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/578543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/webknjaz", "html_url": "https://github.com/webknjaz", "followers_url": "https://api.github.com/users/webknjaz/followers", "following_url": "https://api.github.com/users/webknjaz/following{/other_user}", "gists_url": "https://api.github.com/users/webknjaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/webknjaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/webknjaz/subscriptions", "organizations_url": "https://api.github.com/users/webknjaz/orgs", "repos_url": "https://api.github.com/users/webknjaz/repos", "events_url": "https://api.github.com/users/webknjaz/events{/privacy}", "received_events_url": "https://api.github.com/users/webknjaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-13T14:51:27Z", "updated_at": "2019-02-22T19:23:11Z", "closed_at": "2019-02-22T19:23:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be listed next to `Python bindings for libgit2` at the top of https://github.com/libgit2/pygit2 page. Just click `Edit` button next to it and put https://www.pygit2.org there.\r\n\r\nThis would improve the UX of repo page a lot.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/868", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/868/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/868/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/868/events", "html_url": "https://github.com/libgit2/pygit2/issues/868", "id": 403834927, "node_id": "MDU6SXNzdWU0MDM4MzQ5Mjc=", "number": 868, "title": "TypeError: don't know how to make test from: <CompiledFFI object at 0x7f43c00693e8>", "user": {"login": "ignatenkobrain", "id": 2866862, "node_id": "MDQ6VXNlcjI4NjY4NjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2866862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ignatenkobrain", "html_url": "https://github.com/ignatenkobrain", "followers_url": "https://api.github.com/users/ignatenkobrain/followers", "following_url": "https://api.github.com/users/ignatenkobrain/following{/other_user}", "gists_url": "https://api.github.com/users/ignatenkobrain/gists{/gist_id}", "starred_url": "https://api.github.com/users/ignatenkobrain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ignatenkobrain/subscriptions", "organizations_url": "https://api.github.com/users/ignatenkobrain/orgs", "repos_url": "https://api.github.com/users/ignatenkobrain/repos", "events_url": "https://api.github.com/users/ignatenkobrain/events{/privacy}", "received_events_url": "https://api.github.com/users/ignatenkobrain/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 763120268, "node_id": "MDU6TGFiZWw3NjMxMjAyNjg=", "url": "https://api.github.com/repos/libgit2/pygit2/labels/support", "name": "support", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-28T14:16:36Z", "updated_at": "2019-02-12T13:36:14Z", "closed_at": "2019-02-12T08:46:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n+ /usr/bin/python3 setup.py test\r\nrunning test\r\nrunning egg_info\r\nwriting pygit2.egg-info/PKG-INFO\r\nwriting dependency_links to pygit2.egg-info/dependency_links.txt\r\nwriting requirements to pygit2.egg-info/requires.txt\r\nwriting top-level names to pygit2.egg-info/top_level.txt\r\nreading manifest file 'pygit2.egg-info/SOURCES.txt'\r\nwriting manifest file 'pygit2.egg-info/SOURCES.txt'\r\nrunning build_ext\r\ngenerating cffi module 'build/temp.linux-x86_64-3.6/pygit2._libgit2.c'\r\nalready up-to-date\r\ncopying build/lib.linux-x86_64-3.6/_pygit2.cpython-36m-x86_64-linux-gnu.so -> \r\ncopying build/lib.linux-x86_64-3.6/pygit2/_libgit2.abi3.so -> pygit2\r\nBUILDSTDERR: Traceback (most recent call last):\r\nBUILDSTDERR:   File \"setup.py\", line 160, in <module>\r\nBUILDSTDERR:     **extra_args)\r\nBUILDSTDERR:   File \"/usr/lib/python3.6/site-packages/setuptools/__init__.py\", line 129, in setup\r\nBUILDSTDERR:     return distutils.core.setup(**attrs)\r\nBUILDSTDERR:   File \"/usr/lib64/python3.6/distutils/core.py\", line 148, in setup\r\nBUILDSTDERR:     dist.run_commands()\r\nBUILDSTDERR:   File \"/usr/lib64/python3.6/distutils/dist.py\", line 955, in run_commands\r\nBUILDSTDERR:     self.run_command(cmd)\r\nBUILDSTDERR:   File \"/usr/lib64/python3.6/distutils/dist.py\", line 974, in run_command\r\nBUILDSTDERR:     cmd_obj.run()\r\nBUILDSTDERR:   File \"/usr/lib/python3.6/site-packages/setuptools/command/test.py\", line 226, in run\r\nBUILDSTDERR:     self.run_tests()\r\nBUILDSTDERR:   File \"/usr/lib/python3.6/site-packages/setuptools/command/test.py\", line 248, in run_tests\r\nBUILDSTDERR:     exit=False,\r\nBUILDSTDERR:   File \"/usr/lib64/python3.6/unittest/main.py\", line 94, in __init__\r\nBUILDSTDERR:     self.parseArgs(argv)\r\nBUILDSTDERR:   File \"/usr/lib64/python3.6/unittest/main.py\", line 118, in parseArgs\r\nBUILDSTDERR:     self._do_discovery(argv[2:])\r\nBUILDSTDERR:   File \"/usr/lib64/python3.6/unittest/main.py\", line 229, in _do_discovery\r\nBUILDSTDERR:     self.test = loader.discover(self.start, self.pattern, self.top)\r\nBUILDSTDERR:   File \"/usr/lib64/python3.6/unittest/loader.py\", line 341, in discover\r\nBUILDSTDERR:     tests = list(self._find_tests(start_dir, pattern))\r\nBUILDSTDERR:   File \"/usr/lib64/python3.6/unittest/loader.py\", line 398, in _find_tests\r\nBUILDSTDERR:     full_path, pattern, namespace)\r\nBUILDSTDERR:   File \"/usr/lib64/python3.6/unittest/loader.py\", line 475, in _find_test_path\r\nBUILDSTDERR:     tests = self.loadTestsFromModule(package, pattern=pattern)\r\nBUILDSTDERR:   File \"/usr/lib/python3.6/site-packages/setuptools/command/test.py\", line 52, in loadTestsFromModule\r\nBUILDSTDERR:     tests.append(self.loadTestsFromName(submodule))\r\nBUILDSTDERR:   File \"/usr/lib64/python3.6/unittest/loader.py\", line 213, in loadTestsFromName\r\nBUILDSTDERR:     raise TypeError(\"don't know how to make test from: %s\" % obj)\r\nBUILDSTDERR: TypeError: don't know how to make test from: <CompiledFFI object at 0x7f43c00693e8>\r\nRPM build errors:\r\nBUILDSTDERR: error: Bad exit status from /var/tmp/rpm-tmp.DMl5y5 (%check)\r\nBUILDSTDERR:     Bad exit status from /var/tmp/rpm-tmp.DMl5y5 (%check)\r\n```\r\n\r\nThis happens with latest released pygit2 when I'm trying to package it for Fedora.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/866", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/866/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/866/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/866/events", "html_url": "https://github.com/libgit2/pygit2/issues/866", "id": 403252903, "node_id": "MDU6SXNzdWU0MDMyNTI5MDM=", "number": 866, "title": "How to use custom backends?", "user": {"login": "jnrbsn", "id": 207088, "node_id": "MDQ6VXNlcjIwNzA4OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/207088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jnrbsn", "html_url": "https://github.com/jnrbsn", "followers_url": "https://api.github.com/users/jnrbsn/followers", "following_url": "https://api.github.com/users/jnrbsn/following{/other_user}", "gists_url": "https://api.github.com/users/jnrbsn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jnrbsn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jnrbsn/subscriptions", "organizations_url": "https://api.github.com/users/jnrbsn/orgs", "repos_url": "https://api.github.com/users/jnrbsn/repos", "events_url": "https://api.github.com/users/jnrbsn/events{/privacy}", "received_events_url": "https://api.github.com/users/jnrbsn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1058444127, "node_id": "MDU6TGFiZWwxMDU4NDQ0MTI3", "url": "https://api.github.com/repos/libgit2/pygit2/labels/documentation", "name": "documentation", "color": "0000FF", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-01-25T17:29:02Z", "updated_at": "2020-04-04T14:00:30Z", "closed_at": "2020-04-04T14:00:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "So I see that pygit2 has \"some support for custom backends, but undocumented\", according to [this page](https://www.pygit2.org/backends.html), which mainly just links to [this pull request](https://github.com/libgit2/pygit2/pull/690/files). Looking at that pull request, I'm guessing this is how it was intended to work...\r\n\r\nPython code excerpt:\r\n\r\n```python\r\nfrom pygit2.repository import BaseRepository\r\nfrom _my_c_ext import init_my_repo_backend\r\n\r\nclass MyRepository(BaseRepository):\r\n    def __init__(self, arg1, arg2, arg3):\r\n        backend = init_my_repo_backend(arg1, arg2, arg3)\r\n        super(MyRepository, self).__init__(backend)\r\n```\r\n\r\nPython C extension excerpt:\r\n\r\n```c\r\nPyObject *init_my_repo_backend(PyObject *self, PyObject *args)\r\n{\r\n    git_repository *repo;\r\n\r\n    /* do stuff to initialize/open the repo ... */\r\n\r\n    return PyCapsule_New(repo, \"backend\", NULL);\r\n}\r\n```\r\n\r\nIs this the _intended_ way this is to be used? It works for me, but I just want to make sure I'm doing it in the intended/supported way and not using stuff that's meant to be \"private\".\r\n\r\nIf this looks good, I might contribute some documentation if I have time.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/864", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/864/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/864/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/864/events", "html_url": "https://github.com/libgit2/pygit2/issues/864", "id": 400390367, "node_id": "MDU6SXNzdWU0MDAzOTAzNjc=", "number": 864, "title": "Tree __get__ is inconsistent with __contains__", "user": {"login": "imbuedHope", "id": 5403817, "node_id": "MDQ6VXNlcjU0MDM4MTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5403817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imbuedHope", "html_url": "https://github.com/imbuedHope", "followers_url": "https://api.github.com/users/imbuedHope/followers", "following_url": "https://api.github.com/users/imbuedHope/following{/other_user}", "gists_url": "https://api.github.com/users/imbuedHope/gists{/gist_id}", "starred_url": "https://api.github.com/users/imbuedHope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imbuedHope/subscriptions", "organizations_url": "https://api.github.com/users/imbuedHope/orgs", "repos_url": "https://api.github.com/users/imbuedHope/repos", "events_url": "https://api.github.com/users/imbuedHope/events{/privacy}", "received_events_url": "https://api.github.com/users/imbuedHope/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-17T17:44:52Z", "updated_at": "2019-01-22T15:32:36Z", "closed_at": "2019-01-22T15:32:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since #316 `Tree.__contains__()` checks subdirectories but this is at odds with `Tree.__get__()` since it does not return objects for qeries that return `True` for `Tree.__contains__()`.\r\n\r\nThis is inconsistent. `Tree.__get__()` should also return objects from subdirectories if `Tree.__contains__()` returns `True`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/863", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/863/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/863/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/863/events", "html_url": "https://github.com/libgit2/pygit2/issues/863", "id": 399403349, "node_id": "MDU6SXNzdWUzOTk0MDMzNDk=", "number": 863, "title": "pyGit2 0.27.3 broken on windows", "user": {"login": "Zangdaarr", "id": 11862997, "node_id": "MDQ6VXNlcjExODYyOTk3", "avatar_url": "https://avatars3.githubusercontent.com/u/11862997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zangdaarr", "html_url": "https://github.com/Zangdaarr", "followers_url": "https://api.github.com/users/Zangdaarr/followers", "following_url": "https://api.github.com/users/Zangdaarr/following{/other_user}", "gists_url": "https://api.github.com/users/Zangdaarr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zangdaarr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zangdaarr/subscriptions", "organizations_url": "https://api.github.com/users/Zangdaarr/orgs", "repos_url": "https://api.github.com/users/Zangdaarr/repos", "events_url": "https://api.github.com/users/Zangdaarr/events{/privacy}", "received_events_url": "https://api.github.com/users/Zangdaarr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-15T15:41:31Z", "updated_at": "2019-01-19T09:35:48Z", "closed_at": "2019-01-19T09:35:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have been using pygit2 0.27.2 to help manage our git repositories for a while. \r\nToday someone upgrade to pygit1 0.27.3 and we started to have error messages:\r\n\r\nFirst is : Microsoft Visual C++ 9.0 is required. This is new, we installed it.\r\nSecond is: 'git2.h' is missing. This seems to be related to libgit2\r\n\r\nThe thing is no one in my company is going to build libgit2 in order to have pygit2 working. Especially when version 0.27.2 was working perfectly fine. We are sticking with this version for the moment, but could this please be fixed ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/860", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/860/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/860/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/860/events", "html_url": "https://github.com/libgit2/pygit2/issues/860", "id": 396987767, "node_id": "MDU6SXNzdWUzOTY5ODc3Njc=", "number": 860, "title": "reference object equality", "user": {"login": "imbuedHope", "id": 5403817, "node_id": "MDQ6VXNlcjU0MDM4MTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5403817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imbuedHope", "html_url": "https://github.com/imbuedHope", "followers_url": "https://api.github.com/users/imbuedHope/followers", "following_url": "https://api.github.com/users/imbuedHope/following{/other_user}", "gists_url": "https://api.github.com/users/imbuedHope/gists{/gist_id}", "starred_url": "https://api.github.com/users/imbuedHope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imbuedHope/subscriptions", "organizations_url": "https://api.github.com/users/imbuedHope/orgs", "repos_url": "https://api.github.com/users/imbuedHope/repos", "events_url": "https://api.github.com/users/imbuedHope/events{/privacy}", "received_events_url": "https://api.github.com/users/imbuedHope/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 763120602, "node_id": "MDU6TGFiZWw3NjMxMjA2MDI=", "url": "https://api.github.com/repos/libgit2/pygit2/labels/feature", "name": "feature", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-08T16:36:20Z", "updated_at": "2019-01-19T09:19:31Z", "closed_at": "2019-01-19T09:19:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Similar to #852 \r\n\r\nReferences don't seem to have any sense of equality so the following happens\r\n```python\r\n>>> import pygit2\r\n>>> repo = pygit2.Repository('.')\r\n>>> repo.references['refs/heads/master'] == repo.references['refs/heads/master']\r\nFalse\r\n```\r\n\r\nThis breaks container operations with `Reference` objects.\r\n\r\nUnlike objects, references are not necessarily immutable since they can be force pushed to point to a different target.\r\n\r\nImplementing `__eq__` to be based on `Reference.name` makes the most sense, I think. `__hash__` support does not make sense since references are mutable.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/858", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/858/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/858/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/858/events", "html_url": "https://github.com/libgit2/pygit2/issues/858", "id": 395701772, "node_id": "MDU6SXNzdWUzOTU3MDE3NzI=", "number": 858, "title": "Add support for paths in checkout arguments", "user": {"login": "rbistolfi", "id": 159912, "node_id": "MDQ6VXNlcjE1OTkxMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/159912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbistolfi", "html_url": "https://github.com/rbistolfi", "followers_url": "https://api.github.com/users/rbistolfi/followers", "following_url": "https://api.github.com/users/rbistolfi/following{/other_user}", "gists_url": "https://api.github.com/users/rbistolfi/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbistolfi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbistolfi/subscriptions", "organizations_url": "https://api.github.com/users/rbistolfi/orgs", "repos_url": "https://api.github.com/users/rbistolfi/repos", "events_url": "https://api.github.com/users/rbistolfi/events{/privacy}", "received_events_url": "https://api.github.com/users/rbistolfi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2019-01-03T19:47:23Z", "updated_at": "2019-01-07T20:16:37Z", "closed_at": "2019-01-07T20:16:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi there, would be possible to add support for paths to `repository.checkout` and friends? \r\nhttps://libgit2.org/docs/guides/101-samples/#checkout_paths\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/857", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/857/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/857/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/857/events", "html_url": "https://github.com/libgit2/pygit2/issues/857", "id": 395382270, "node_id": "MDU6SXNzdWUzOTUzODIyNzA=", "number": 857, "title": "v0.27.3 Windows wheels do not include binaries", "user": {"login": "SpaceManiac", "id": 222630, "node_id": "MDQ6VXNlcjIyMjYzMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/222630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SpaceManiac", "html_url": "https://github.com/SpaceManiac", "followers_url": "https://api.github.com/users/SpaceManiac/followers", "following_url": "https://api.github.com/users/SpaceManiac/following{/other_user}", "gists_url": "https://api.github.com/users/SpaceManiac/gists{/gist_id}", "starred_url": "https://api.github.com/users/SpaceManiac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SpaceManiac/subscriptions", "organizations_url": "https://api.github.com/users/SpaceManiac/orgs", "repos_url": "https://api.github.com/users/SpaceManiac/repos", "events_url": "https://api.github.com/users/SpaceManiac/events{/privacy}", "received_events_url": "https://api.github.com/users/SpaceManiac/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 763120422, "node_id": "MDU6TGFiZWw3NjMxMjA0MjI=", "url": "https://api.github.com/repos/libgit2/pygit2/labels/bug", "name": "bug", "color": "d93f0b", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-02T21:13:45Z", "updated_at": "2019-01-20T08:47:25Z", "closed_at": "2019-01-20T08:47:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Introduced in v0.27.3. v0.27.2 is fine. The missing file is `pygit2/_libgit2.cp37-win_amd64.pyd` in the wheel. Without it, the library cannot be used without a working MSVC 14 (and presumably libgit2 headers, haven't thoroughly tested) installed. Python 3.6 wheels and 32-bit wheels are also affected.\r\n\r\n#826 seems suspect, but I don't know enough about wheel creation to be sure.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/852", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/852/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/852/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/852/events", "html_url": "https://github.com/libgit2/pygit2/issues/852", "id": 393906780, "node_id": "MDU6SXNzdWUzOTM5MDY3ODA=", "number": 852, "title": "git object equality", "user": {"login": "imbuedHope", "id": 5403817, "node_id": "MDQ6VXNlcjU0MDM4MTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5403817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imbuedHope", "html_url": "https://github.com/imbuedHope", "followers_url": "https://api.github.com/users/imbuedHope/followers", "following_url": "https://api.github.com/users/imbuedHope/following{/other_user}", "gists_url": "https://api.github.com/users/imbuedHope/gists{/gist_id}", "starred_url": "https://api.github.com/users/imbuedHope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imbuedHope/subscriptions", "organizations_url": "https://api.github.com/users/imbuedHope/orgs", "repos_url": "https://api.github.com/users/imbuedHope/repos", "events_url": "https://api.github.com/users/imbuedHope/events{/privacy}", "received_events_url": "https://api.github.com/users/imbuedHope/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 763120422, "node_id": "MDU6TGFiZWw3NjMxMjA0MjI=", "url": "https://api.github.com/repos/libgit2/pygit2/labels/bug", "name": "bug", "color": "d93f0b", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-24T16:23:23Z", "updated_at": "2018-12-28T16:21:50Z", "closed_at": "2018-12-28T16:21:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I found that object equality does not work with `pygit2.Commit` objects.\r\n\r\nDigging deeper it looks like there is no implementation of `__eq__` (going all the way back to `object`) so it falls back to `__hash__`, and `pygit2.Commit.__hash__` is just falls back to `object.__hash__`.\r\n\r\nWhich causes this to happen.\r\n\r\n```python\r\npython3.6.7\r\n>>> import pygit2\r\n>>> repo = pygit2.Repository('.')\r\n>>> repo.head.get_object() == repo.head.get_object()\r\nFalse\r\n```\r\n\r\nThis behavior is confusing and work arounds are quite messy.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/849", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/849/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/849/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/849/events", "html_url": "https://github.com/libgit2/pygit2/issues/849", "id": 393108196, "node_id": "MDU6SXNzdWUzOTMxMDgxOTY=", "number": 849, "title": "Upgrade from 0.27.2 to 0.27.3 causes 2x slowdown", "user": {"login": "jaymecd", "id": 824109, "node_id": "MDQ6VXNlcjgyNDEwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/824109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaymecd", "html_url": "https://github.com/jaymecd", "followers_url": "https://api.github.com/users/jaymecd/followers", "following_url": "https://api.github.com/users/jaymecd/following{/other_user}", "gists_url": "https://api.github.com/users/jaymecd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaymecd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaymecd/subscriptions", "organizations_url": "https://api.github.com/users/jaymecd/orgs", "repos_url": "https://api.github.com/users/jaymecd/repos", "events_url": "https://api.github.com/users/jaymecd/events{/privacy}", "received_events_url": "https://api.github.com/users/jaymecd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-20T16:00:37Z", "updated_at": "2018-12-22T19:00:48Z", "closed_at": "2018-12-22T19:00:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After installing `0.27.2` version, there was binary `pygit2/_libgit2.abi3.so` file created.\r\n\r\nTimer showed:\r\n```\r\n$ time python main.py\r\n\r\nreal\t0m0.352s\r\nuser\t0m0.180s\r\nsys     0m0.050s\r\n```\r\n\r\nAfter upgrade to `0.27.3` version, that binary file is absent and `pygit2` uses `cffi` as fallback.\r\n\r\nTimer shows:\r\n```\r\n$ time python main.py\r\n\r\nreal\t0m0.788s\r\nuser\t0m0.470s\r\nsys\t    0m0.050s\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/847", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/847/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/847/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/847/events", "html_url": "https://github.com/libgit2/pygit2/issues/847", "id": 391510114, "node_id": "MDU6SXNzdWUzOTE1MTAxMTQ=", "number": 847, "title": "Depend on pygit2 that corresponds to the installed libgit2", "user": {"login": "white-gecko", "id": 1018168, "node_id": "MDQ6VXNlcjEwMTgxNjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1018168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/white-gecko", "html_url": "https://github.com/white-gecko", "followers_url": "https://api.github.com/users/white-gecko/followers", "following_url": "https://api.github.com/users/white-gecko/following{/other_user}", "gists_url": "https://api.github.com/users/white-gecko/gists{/gist_id}", "starred_url": "https://api.github.com/users/white-gecko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/white-gecko/subscriptions", "organizations_url": "https://api.github.com/users/white-gecko/orgs", "repos_url": "https://api.github.com/users/white-gecko/repos", "events_url": "https://api.github.com/users/white-gecko/events{/privacy}", "received_events_url": "https://api.github.com/users/white-gecko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 763120268, "node_id": "MDU6TGFiZWw3NjMxMjAyNjg=", "url": "https://api.github.com/repos/libgit2/pygit2/labels/support", "name": "support", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-12-16T22:07:17Z", "updated_at": "2019-03-19T17:51:45Z", "closed_at": "2019-03-19T17:50:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Sorry this is not a bug report, but a request for help.\r\n\r\nI have a project that depends on `pygit2`. In my requirements.txt I've specified the dependency as `pygit2==0.27.2` because I have libgit2 in version 0.27.x on my system. On other systems different versions of libgit2 might be installed. How can I specify the dependency to match the locally installed version? (https://www.pygit2.org/install.html#version-numbers)\r\n\r\nIs this even possible with pip or is this a task to be done with distutils and a setup.py?\r\n\r\nHow do other users of the pygit2 do it? Could this maybe be added to the README/Wiki?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/846", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/846/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/846/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/846/events", "html_url": "https://github.com/libgit2/pygit2/issues/846", "id": 391361175, "node_id": "MDU6SXNzdWUzOTEzNjExNzU=", "number": 846, "title": "pycparser 2.18 and 2.19 are broken", "user": {"login": "jdavid", "id": 596769, "node_id": "MDQ6VXNlcjU5Njc2OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-15T09:28:21Z", "updated_at": "2019-04-06T11:15:38Z", "closed_at": "2019-04-06T11:15:38Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\r\n$ pytest\r\n============================================================================================================ test session starts =============================================================================================================\r\nplatform linux -- Python 3.6.5, pytest-4.0.2, py-1.7.0, pluggy-0.8.0\r\nrootdir: /home/jdavid/sandboxes/pygit2, inifile:\r\ncollected 0 items / 28 errors                                                                                                                                                                                                                \r\n\r\n=================================================================================================================== ERRORS ===================================================================================================================\r\nvenv36/lib/python3.6/site-packages/cffi-1.11.5-py3.6-linux-x86_64.egg/cffi/api.py:174: in _typeof\r\n    result = self._parsed_types[cdecl]\r\nE   KeyError: 'int (*git_transport_certificate_check_cb)(git_cert *cert, int valid, const char *host, void *payload)'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\nvenv36/lib/python3.6/site-packages/cffi-1.11.5-py3.6-linux-x86_64.egg/cffi/cparser.py:276: in _parse\r\n    ast = _get_parser().parse(fullcsource)\r\nvenv36/lib/python3.6/site-packages/pycparser-2.18-py3.6.egg/pycparser/c_parser.py:152: in parse\r\n    debug=debuglevel)\r\nvenv36/lib/python3.6/site-packages/pycparser-2.18-py3.6.egg/pycparser/ply/yacc.py:331: in parse\r\n    return self.parseopt_notrack(input, lexer, debug, tracking, tokenfunc)\r\nvenv36/lib/python3.6/site-packages/pycparser-2.18-py3.6.egg/pycparser/ply/yacc.py:1199: in parseopt_notrack\r\n    tok = call_errorfunc(self.errorfunc, errtoken, self)\r\nvenv36/lib/python3.6/site-packages/pycparser-2.18-py3.6.egg/pycparser/ply/yacc.py:193: in call_errorfunc\r\n    r = errorfunc(token)\r\nvenv36/lib/python3.6/site-packages/pycparser-2.18-py3.6.egg/pycparser/c_parser.py:1761: in p_error\r\n    column=self.clex.find_tok_column(p)))\r\nvenv36/lib/python3.6/site-packages/pycparser-2.18-py3.6.egg/pycparser/plyparser.py:66: in _parse_error\r\n    raise ParseError(\"%s: %s\" % (coord, msg))\r\nE   pycparser.plyparser.ParseError: <cdef source string>:2:7: before: git_transport_certificate_check_cb\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/845", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/845/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/845/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/845/events", "html_url": "https://github.com/libgit2/pygit2/issues/845", "id": 390251220, "node_id": "MDU6SXNzdWUzOTAyNTEyMjA=", "number": 845, "title": "make libgit version access similar to how python handles it", "user": {"login": "imbuedHope", "id": 5403817, "node_id": "MDQ6VXNlcjU0MDM4MTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5403817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imbuedHope", "html_url": "https://github.com/imbuedHope", "followers_url": "https://api.github.com/users/imbuedHope/followers", "following_url": "https://api.github.com/users/imbuedHope/following{/other_user}", "gists_url": "https://api.github.com/users/imbuedHope/gists{/gist_id}", "starred_url": "https://api.github.com/users/imbuedHope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imbuedHope/subscriptions", "organizations_url": "https://api.github.com/users/imbuedHope/orgs", "repos_url": "https://api.github.com/users/imbuedHope/repos", "events_url": "https://api.github.com/users/imbuedHope/events{/privacy}", "received_events_url": "https://api.github.com/users/imbuedHope/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 763120602, "node_id": "MDU6TGFiZWw3NjMxMjA2MDI=", "url": "https://api.github.com/repos/libgit2/pygit2/labels/feature", "name": "feature", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-12T14:30:42Z", "updated_at": "2018-12-24T14:54:06Z", "closed_at": "2018-12-24T14:54:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When checking the version of python you can do something like\r\n```\r\nimport sys\r\nif sys.version < (3,5):\r\n    raise ImportError('Upgrade to python 3.5 or newer')\r\n```\r\n\r\nThe equivalent for `pygit2` seems to be something like\r\n```\r\nimport pygit2\r\nif (pygit2.LIBGIT2_VER_MAJOR, pygit2.LIBGIT2_VER_MINOR, pygit2.LIBGIT2_VER_REVISION) < (0, 26):\r\n    raise ImportError('Upgrade libgit2 to version 0.26 or nerwer (and pygit2 to match)')\r\n```\r\nor something like\r\n```\r\nimport pygit2\r\nif tuple(int(n) for n in pygit2.LIBGIT2_VERSION.split('.')) < (0,26):\r\n    raise ImportError('Upgrade libgit2 to version 0.26 or nerwer (and pygit2 to match)')\r\n```\r\n\r\nIt would be nice to have a variable that is a tuple builtin to pygit2 going forward. Support for something like this maybe?\r\n```\r\nimport pygit2\r\nif pygit2.LIBGIT2_VERSION_TUPLE < (0,26):\r\n    raise ImportError('Upgrade libgit2 to version 0.26 or nerwer (and pygit2 to match)')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/841", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/841/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/841/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/841/events", "html_url": "https://github.com/libgit2/pygit2/issues/841", "id": 387413364, "node_id": "MDU6SXNzdWUzODc0MTMzNjQ=", "number": 841, "title": "Add git_apply", "user": {"login": "jorgecarleitao", "id": 2772607, "node_id": "MDQ6VXNlcjI3NzI2MDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2772607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jorgecarleitao", "html_url": "https://github.com/jorgecarleitao", "followers_url": "https://api.github.com/users/jorgecarleitao/followers", "following_url": "https://api.github.com/users/jorgecarleitao/following{/other_user}", "gists_url": "https://api.github.com/users/jorgecarleitao/gists{/gist_id}", "starred_url": "https://api.github.com/users/jorgecarleitao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jorgecarleitao/subscriptions", "organizations_url": "https://api.github.com/users/jorgecarleitao/orgs", "repos_url": "https://api.github.com/users/jorgecarleitao/repos", "events_url": "https://api.github.com/users/jorgecarleitao/events{/privacy}", "received_events_url": "https://api.github.com/users/jorgecarleitao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 763120602, "node_id": "MDU6TGFiZWw3NjMxMjA2MDI=", "url": "https://api.github.com/repos/libgit2/pygit2/labels/feature", "name": "feature", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-12-04T18:07:01Z", "updated_at": "2019-02-24T08:54:10Z", "closed_at": "2019-02-24T08:54:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`apply` has been merged to `libgit2` in [this PR](https://github.com/libgit2/libgit2/pull/4705).\r\nThis issue is about exposing it to pygit2.\r\n\r\nOne way is to support `repository.apply(diff)`, e.g.\r\n\r\n```\r\nwith open(path, 'r') as f:\r\n    patch = f.read()\r\n\r\nrepo.apply(pygit2.Diff.parse_diff(patch))\r\n```\r\n\r\nI already have a patch for this (src/repository.*) and I am in the process of adding unit tests to it.\r\n\r\nIs this something worth and that I should continue to put efford on?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/839", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/839/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/839/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/839/events", "html_url": "https://github.com/libgit2/pygit2/issues/839", "id": 381139686, "node_id": "MDU6SXNzdWUzODExMzk2ODY=", "number": 839, "title": "Regression in 0.27.1: Commit.message no longer handles unspecified encodings correctly", "user": {"login": "cjwatson", "id": 2429141, "node_id": "MDQ6VXNlcjI0MjkxNDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2429141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjwatson", "html_url": "https://github.com/cjwatson", "followers_url": "https://api.github.com/users/cjwatson/followers", "following_url": "https://api.github.com/users/cjwatson/following{/other_user}", "gists_url": "https://api.github.com/users/cjwatson/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjwatson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjwatson/subscriptions", "organizations_url": "https://api.github.com/users/cjwatson/orgs", "repos_url": "https://api.github.com/users/cjwatson/repos", "events_url": "https://api.github.com/users/cjwatson/events{/privacy}", "received_events_url": "https://api.github.com/users/cjwatson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-15T12:28:21Z", "updated_at": "2018-11-16T13:26:14Z", "closed_at": "2018-11-16T13:26:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When upgrading an application built on top of pygit2 from 0.24.2 to 0.27.2, our test suite caught a regression in the handling of commit messages with unspecified encoding, which I tracked down to commit bbf4b79d86dd41847165d961bf6fb2ac3c9e0b2d.  You can see the problem with the very commit to git itself that's referenced in comments in `to_unicode_n`:\r\n\r\n```\r\n$ python\r\nPython 2.7.6 (default, Nov 13 2018, 12:45:42)\r\n[GCC 4.8.4] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import pygit2\r\n>>> repo = pygit2.Repository('.')\r\n>>> repo['c31820c2']\r\n<_pygit2.Commit object at 0x7fa699661230>\r\n>>> repo['c31820c2'].message\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nUnicodeDecodeError: 'utf8' codec can't decode byte 0xf8 in position 126: invalid start byte\r\n```\r\n\r\nWould it perhaps make sense for `Commit_message__get__` to call `to_unicode(message, encoding, NULL)` rather than `to_unicode(message, encoding, \"strict\")`, so that it continues to benefit from the fallback to `\"replace\"` even after this change?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/836", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/836/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/836/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/836/events", "html_url": "https://github.com/libgit2/pygit2/issues/836", "id": 376016667, "node_id": "MDU6SXNzdWUzNzYwMTY2Njc=", "number": 836, "title": "unable to clone using SSH with RSA key pair", "user": {"login": "ExpandingMan", "id": 11379353, "node_id": "MDQ6VXNlcjExMzc5MzUz", "avatar_url": "https://avatars0.githubusercontent.com/u/11379353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ExpandingMan", "html_url": "https://github.com/ExpandingMan", "followers_url": "https://api.github.com/users/ExpandingMan/followers", "following_url": "https://api.github.com/users/ExpandingMan/following{/other_user}", "gists_url": "https://api.github.com/users/ExpandingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ExpandingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ExpandingMan/subscriptions", "organizations_url": "https://api.github.com/users/ExpandingMan/orgs", "repos_url": "https://api.github.com/users/ExpandingMan/repos", "events_url": "https://api.github.com/users/ExpandingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/ExpandingMan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-10-31T15:20:12Z", "updated_at": "2020-05-02T18:32:12Z", "closed_at": "2020-05-02T18:32:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I was having a problem in the Julia libgit2 wrapper wherein I couldn't clone repos using the SSH protocol with a key pair.  So, I installed `pygit2` to see if I'd have the same problem and, lo and behold, it doesn't seem to be working.\r\n\r\nI'm trying to clone with this script:\r\n```python\r\nkeypair = pygit2.Keypair(\"git\", \"id_emgitlab.pub\", \"id_emgitlab\", \"\")\r\ncallbacks = pygit2.RemoteCallbacks(credentials=keypair)\r\npygit2.clone_repository(repo_url, \"testrepo\", callbacks=callbacks)\r\n```\r\n(`repo_url` is indeed the SSH link, not sure if it's still called a url).\r\n\r\nIt hangs for a really long time and then returns the following stack trace:\r\n```python\r\nGitError                                  Traceback (most recent call last)\r\n~/testpull.py in <module>()\r\n      7 callbacks = pygit2.RemoteCallbacks(credentials=keypair)\r\n      8 \r\n----> 9 pygit2.clone_repository(repo_url, \"testrepo\", callbacks=callbacks)\r\n\r\n/usr/lib/python3.7/site-packages/pygit2/__init__.py in clone_repository(url, path, bare, repository, remote, checkout_branch, callbacks)\r\n    261         raise d['exception']\r\n    262 \r\n--> 263     check_error(err)\r\n    264 \r\n    265     return Repository._from_c(crepo[0], owned=True)\r\n\r\n/usr/lib/python3.7/site-packages/pygit2/errors.py in check_error(err, io)\r\n     62 \r\n     63     # Generic Git error\r\n---> 64     raise GitError(message)\r\n     65 \r\n     66 # Indicate that we want libgit2 to pretend a function was not set\r\n\r\nGitError: Failed to authenticate SSH session: Unable to send userauth-publickey request\r\n```\r\n\r\nI've tried many different configurations of file permissions on the keys (though most of them not for the Python pull).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/831", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/831/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/831/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/831/events", "html_url": "https://github.com/libgit2/pygit2/issues/831", "id": 372232782, "node_id": "MDU6SXNzdWUzNzIyMzI3ODI=", "number": 831, "title": "Update to Kubuntu 18.10 causes segfault on import", "user": {"login": "danyill", "id": 674783, "node_id": "MDQ6VXNlcjY3NDc4Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/674783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danyill", "html_url": "https://github.com/danyill", "followers_url": "https://api.github.com/users/danyill/followers", "following_url": "https://api.github.com/users/danyill/following{/other_user}", "gists_url": "https://api.github.com/users/danyill/gists{/gist_id}", "starred_url": "https://api.github.com/users/danyill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danyill/subscriptions", "organizations_url": "https://api.github.com/users/danyill/orgs", "repos_url": "https://api.github.com/users/danyill/repos", "events_url": "https://api.github.com/users/danyill/events{/privacy}", "received_events_url": "https://api.github.com/users/danyill/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-20T17:13:12Z", "updated_at": "2018-10-20T17:45:32Z", "closed_at": "2018-10-20T17:45:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get a segfault after updating from Kubuntu 18.04 to Kubuntu 18.10 when importing pygit2:\r\n\r\n```\r\n$ python3 -c 'import pygit2'\r\nSegmentation fault (core dumped)\r\n$ uname -a\r\nLinux mulhollandd-XPS-13-9360 4.18.8-041808-generic #201809150431 SMP Sat Sep 15 08:33:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\r\n$ lsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID: Ubuntu\r\nDescription:    Ubuntu 18.10\r\nRelease:        18.10\r\nCodename:       cosmic\r\n$ python3 -V\r\nPython 3.6.7rc1\r\n$ python3\r\nPython 3.6.7rc1 (default, Sep 27 2018, 09:51:25) \r\n[GCC 8.2.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import pygit2\r\nSegmentation fault (core dumped)\r\n```\r\n\r\nThe code which led me to this gave a more verbose error:\r\n\r\n```\r\npython3: Relink `/lib/x86_64-linux-gnu/libudev.so.1' with `/lib/x86_64-linux-gnu/librt.so.1' for IFUNC symbol `clock_gettime'\r\nSegmentation fault (core dumped)\r\n```\r\n\r\nHappy to provide further information.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/828", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/828/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/828/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/828/events", "html_url": "https://github.com/libgit2/pygit2/issues/828", "id": 371318031, "node_id": "MDU6SXNzdWUzNzEzMTgwMzE=", "number": 828, "title": "Hard to distinguish errors from reference_create", "user": {"login": "robinst", "id": 16778, "node_id": "MDQ6VXNlcjE2Nzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/16778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robinst", "html_url": "https://github.com/robinst", "followers_url": "https://api.github.com/users/robinst/followers", "following_url": "https://api.github.com/users/robinst/following{/other_user}", "gists_url": "https://api.github.com/users/robinst/gists{/gist_id}", "starred_url": "https://api.github.com/users/robinst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robinst/subscriptions", "organizations_url": "https://api.github.com/users/robinst/orgs", "repos_url": "https://api.github.com/users/robinst/repos", "events_url": "https://api.github.com/users/robinst/events{/privacy}", "received_events_url": "https://api.github.com/users/robinst/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-18T00:40:29Z", "updated_at": "2018-10-20T09:23:52Z", "closed_at": "2018-10-20T09:20:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When creating a branch, there are multiple error cases that are interesting:\r\n\r\n* Branch already exists\r\n* Branch name was invalid\r\n\r\nCurrently, `reference_create` maps both of these errors to `ValueError`. The message is different, but distinguishing based on the message is fragile.\r\n\r\nWhat do you think about introducing two new exceptions types (subclasses of `ValueError` for backward compatibility) that allow callers to distinguish the errors?\r\n\r\nI'm happy to raise a PR if that sounds good!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/824", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/824/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/824/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/824/events", "html_url": "https://github.com/libgit2/pygit2/issues/824", "id": 367437942, "node_id": "MDU6SXNzdWUzNjc0Mzc5NDI=", "number": 824, "title": "pytest", "user": {"login": "jdavid", "id": 596769, "node_id": "MDQ6VXNlcjU5Njc2OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1081296590, "node_id": "MDU6TGFiZWwxMDgxMjk2NTkw", "url": "https://api.github.com/repos/libgit2/pygit2/labels/tests", "name": "tests", "color": "3fead6", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-06T08:48:42Z", "updated_at": "2020-04-28T08:06:58Z", "closed_at": "2020-04-28T08:06:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I started moving the test suite to pytest:\r\n\r\n- [x] Use pytest\r\n- [x] Fix appveyor tests\r\n- [x] Use `assert`\r\n- [x] Use pytest fixtures\r\n- [x] Flat, use functions, not classes\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/823", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/823/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/823/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/823/events", "html_url": "https://github.com/libgit2/pygit2/issues/823", "id": 366336300, "node_id": "MDU6SXNzdWUzNjYzMzYzMDA=", "number": 823, "title": "How is diffState working?", "user": {"login": "muuvmuuv", "id": 11534760, "node_id": "MDQ6VXNlcjExNTM0NzYw", "avatar_url": "https://avatars3.githubusercontent.com/u/11534760?v=4", "gravatar_id": "", "url": "https://api.github.com/users/muuvmuuv", "html_url": "https://github.com/muuvmuuv", "followers_url": "https://api.github.com/users/muuvmuuv/followers", "following_url": "https://api.github.com/users/muuvmuuv/following{/other_user}", "gists_url": "https://api.github.com/users/muuvmuuv/gists{/gist_id}", "starred_url": "https://api.github.com/users/muuvmuuv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/muuvmuuv/subscriptions", "organizations_url": "https://api.github.com/users/muuvmuuv/orgs", "repos_url": "https://api.github.com/users/muuvmuuv/repos", "events_url": "https://api.github.com/users/muuvmuuv/events{/privacy}", "received_events_url": "https://api.github.com/users/muuvmuuv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 763120268, "node_id": "MDU6TGFiZWw3NjMxMjAyNjg=", "url": "https://api.github.com/repos/libgit2/pygit2/labels/support", "name": "support", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-03T13:21:57Z", "updated_at": "2018-10-13T12:06:51Z", "closed_at": "2018-10-13T12:06:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to port this git command `git diff --stat --name-only --cached origin/master` into python with your library. But I can not get it working.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/822", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/822/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/822/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/822/events", "html_url": "https://github.com/libgit2/pygit2/issues/822", "id": 365887202, "node_id": "MDU6SXNzdWUzNjU4ODcyMDI=", "number": 822, "title": "repo.descendant_of() always returns True on invalid SHA's", "user": {"login": "cjerdonek", "id": 355822, "node_id": "MDQ6VXNlcjM1NTgyMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/355822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjerdonek", "html_url": "https://github.com/cjerdonek", "followers_url": "https://api.github.com/users/cjerdonek/followers", "following_url": "https://api.github.com/users/cjerdonek/following{/other_user}", "gists_url": "https://api.github.com/users/cjerdonek/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjerdonek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjerdonek/subscriptions", "organizations_url": "https://api.github.com/users/cjerdonek/orgs", "repos_url": "https://api.github.com/users/cjerdonek/repos", "events_url": "https://api.github.com/users/cjerdonek/events{/privacy}", "received_events_url": "https://api.github.com/users/cjerdonek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 763120422, "node_id": "MDU6TGFiZWw3NjMxMjA0MjI=", "url": "https://api.github.com/repos/libgit2/pygit2/labels/bug", "name": "bug", "color": "d93f0b", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-02T13:03:07Z", "updated_at": "2018-12-05T08:26:56Z", "closed_at": "2018-12-05T08:26:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm getting that if you pass a 40-character string SHA to `repo.descendant_of()` that doesn't correspond to a commit (for either argument), then the function always returns `True`. I haven't verified, but it looks like it could be because of this line:\r\n\r\nhttps://github.com/libgit2/pygit2/blob/976450a7ca594c25cc3bf10b5fb40070fcfb8265/src/repository.c#L593\r\n\r\nThe `PyBool_FromLong()` converts an error code to `True`. Instead, an error code should result in an exception IMO.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/820", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/820/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/820/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/820/events", "html_url": "https://github.com/libgit2/pygit2/issues/820", "id": 362633532, "node_id": "MDU6SXNzdWUzNjI2MzM1MzI=", "number": 820, "title": "Is Object.read_raw reversible?", "user": {"login": "ddevault", "id": 1310872, "node_id": "MDQ6VXNlcjEzMTA4NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddevault", "html_url": "https://github.com/ddevault", "followers_url": "https://api.github.com/users/ddevault/followers", "following_url": "https://api.github.com/users/ddevault/following{/other_user}", "gists_url": "https://api.github.com/users/ddevault/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddevault/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddevault/subscriptions", "organizations_url": "https://api.github.com/users/ddevault/orgs", "repos_url": "https://api.github.com/users/ddevault/repos", "events_url": "https://api.github.com/users/ddevault/events{/privacy}", "received_events_url": "https://api.github.com/users/ddevault/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 763120268, "node_id": "MDU6TGFiZWw3NjMxMjAyNjg=", "url": "https://api.github.com/repos/libgit2/pygit2/labels/support", "name": "support", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-09-21T14:11:19Z", "updated_at": "2018-10-07T12:48:21Z", "closed_at": "2018-10-07T12:48:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Can I get an Object back from its raw representation?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/819", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/819/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/819/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/819/events", "html_url": "https://github.com/libgit2/pygit2/issues/819", "id": 360735459, "node_id": "MDU6SXNzdWUzNjA3MzU0NTk=", "number": 819, "title": "Why is pycparser restricted to <2.18?", "user": {"login": "mgorny", "id": 110765, "node_id": "MDQ6VXNlcjExMDc2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/110765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgorny", "html_url": "https://github.com/mgorny", "followers_url": "https://api.github.com/users/mgorny/followers", "following_url": "https://api.github.com/users/mgorny/following{/other_user}", "gists_url": "https://api.github.com/users/mgorny/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgorny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgorny/subscriptions", "organizations_url": "https://api.github.com/users/mgorny/orgs", "repos_url": "https://api.github.com/users/mgorny/repos", "events_url": "https://api.github.com/users/mgorny/events{/privacy}", "received_events_url": "https://api.github.com/users/mgorny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-17T06:21:53Z", "updated_at": "2018-09-17T18:25:51Z", "closed_at": "2018-09-17T18:21:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "dfa536a3d03a698cc01d9de0e9cf68de7a3b273d restricts pycparser to versions older than 2.18. However, it does so without a word of explanation, and I don't see anything standing out of travis failure either. We don't really want to force our users to suddenly downgrade pycparser without a very good reason, and it seems that the tests pass for us with pycparser-2.18.\r\n\r\nCould you explain to me what am I missing?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/818", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/818/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/818/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/818/events", "html_url": "https://github.com/libgit2/pygit2/issues/818", "id": 360620054, "node_id": "MDU6SXNzdWUzNjA2MjAwNTQ=", "number": 818, "title": "clone_repository returns repository that does not have \"branches\" attribute", "user": {"login": "JunsuLime", "id": 17852124, "node_id": "MDQ6VXNlcjE3ODUyMTI0", "avatar_url": "https://avatars1.githubusercontent.com/u/17852124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JunsuLime", "html_url": "https://github.com/JunsuLime", "followers_url": "https://api.github.com/users/JunsuLime/followers", "following_url": "https://api.github.com/users/JunsuLime/following{/other_user}", "gists_url": "https://api.github.com/users/JunsuLime/gists{/gist_id}", "starred_url": "https://api.github.com/users/JunsuLime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JunsuLime/subscriptions", "organizations_url": "https://api.github.com/users/JunsuLime/orgs", "repos_url": "https://api.github.com/users/JunsuLime/repos", "events_url": "https://api.github.com/users/JunsuLime/events{/privacy}", "received_events_url": "https://api.github.com/users/JunsuLime/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-16T09:08:10Z", "updated_at": "2018-09-16T09:52:13Z", "closed_at": "2018-09-16T09:52:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nif __name__ == '__main__':\r\n    url = '[repository_url]'\r\n    path = '../EasyGitTester2'\r\n    \r\n    repository = pygit2.clone_repository(url, path)   \r\n    repository.branches\r\n```\r\nAnd this code raises exception.\r\n`AttributeError: 'Repository' object has no attribute 'branches'`\r\n\r\nBut,\r\n\r\n```python\r\nrepository = pygit2.Repository(path)\r\nrepository.branches\r\n```\r\n\r\ndoes not raise AttributeError exception.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/815", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/815/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/815/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/815/events", "html_url": "https://github.com/libgit2/pygit2/issues/815", "id": 357358469, "node_id": "MDU6SXNzdWUzNTczNTg0Njk=", "number": 815, "title": "utility to test if a commit is a descendent of one or more commits", "user": {"login": "chadrik", "id": 63251, "node_id": "MDQ6VXNlcjYzMjUx", "avatar_url": "https://avatars1.githubusercontent.com/u/63251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chadrik", "html_url": "https://github.com/chadrik", "followers_url": "https://api.github.com/users/chadrik/followers", "following_url": "https://api.github.com/users/chadrik/following{/other_user}", "gists_url": "https://api.github.com/users/chadrik/gists{/gist_id}", "starred_url": "https://api.github.com/users/chadrik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chadrik/subscriptions", "organizations_url": "https://api.github.com/users/chadrik/orgs", "repos_url": "https://api.github.com/users/chadrik/repos", "events_url": "https://api.github.com/users/chadrik/events{/privacy}", "received_events_url": "https://api.github.com/users/chadrik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 763120602, "node_id": "MDU6TGFiZWw3NjMxMjA2MDI=", "url": "https://api.github.com/repos/libgit2/pygit2/labels/feature", "name": "feature", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-05T18:52:43Z", "updated_at": "2018-09-16T16:06:38Z", "closed_at": "2018-09-16T16:06:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\nI'm looking to recreate the behavior of `git branch --contains <commit>` using `pygit2`.   The core of the routine in git is implemented [here](https://github.com/git/git/blob/c05048d43925ab8edcb36663752c2b4541911231/commit.c#L1114) and [here](https://github.com/git/git/blob/c05048d43925ab8edcb36663752c2b4541911231/commit.c#L1132) in `is_descendent_of` and `merge_bases_many`.   I've looked through the `pygit2` source for the building blocks of something similar but couldn't find anything.  \r\n\r\nA few questions:\r\n- is there something similar to this in `pygit2` that I missed?\r\n- if no: is this considered too \"high level\" for this project?\r\n- if no: would you be interested in a pull request for this feature should I find the time to do it?\r\n- if yes: do you think this would be better implemented in C or python?\r\n\r\nthanks!\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/814", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/814/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/814/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/814/events", "html_url": "https://github.com/libgit2/pygit2/issues/814", "id": 355904569, "node_id": "MDU6SXNzdWUzNTU5MDQ1Njk=", "number": 814, "title": "pass reference to add_worktree ", "user": {"login": "Richard-Mathie", "id": 10221178, "node_id": "MDQ6VXNlcjEwMjIxMTc4", "avatar_url": "https://avatars3.githubusercontent.com/u/10221178?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Richard-Mathie", "html_url": "https://github.com/Richard-Mathie", "followers_url": "https://api.github.com/users/Richard-Mathie/followers", "following_url": "https://api.github.com/users/Richard-Mathie/following{/other_user}", "gists_url": "https://api.github.com/users/Richard-Mathie/gists{/gist_id}", "starred_url": "https://api.github.com/users/Richard-Mathie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Richard-Mathie/subscriptions", "organizations_url": "https://api.github.com/users/Richard-Mathie/orgs", "repos_url": "https://api.github.com/users/Richard-Mathie/repos", "events_url": "https://api.github.com/users/Richard-Mathie/events{/privacy}", "received_events_url": "https://api.github.com/users/Richard-Mathie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 763120602, "node_id": "MDU6TGFiZWw3NjMxMjA2MDI=", "url": "https://api.github.com/repos/libgit2/pygit2/labels/feature", "name": "feature", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-08-31T09:22:14Z", "updated_at": "2019-03-19T07:32:42Z", "closed_at": "2019-03-19T07:32:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "`repo.add_worktree` only has arguments of name and path so it is currently not possible to create a work tree on a specific reference (existing branches, tags ect) and it just creates a new branch `name`\r\n\r\n```python\r\nrepo.listall_branches()\r\n>>  ['master',\r\n     'develop',\r\n     'foo']\r\n\r\nworktree_dir = tempfile.mkdtemp()\r\nos.rmdir(worktree_dir)\r\nworktree_name = 'foo'\r\nworktree = repo.add_worktree(worktree_name, worktree_dir)\r\n>>  Traceback (most recent call last):\r\n\r\n      File \"<ipython-input-134-cb34d9dc7f6a>\", line 4, in <module>\r\n        worktree = repo.add_worktree(worktree_name, worktree_dir)\r\n\r\n    ValueError: failed to write reference 'refs/heads/foo': a reference with that name already exists.\r\n```\r\n\r\nmy current workaround is to move the reference after the fact but this will still create the unwanted branch, and may leave files in the directory.\r\n```python\r\nbranch = repo.branches[name]\r\nbranch.set_target(repo.branches[the_branch_i_wanted].target)\r\n# or\r\nbranch.set_target(repo.references[some reference].target)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/813", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/813/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/813/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/813/events", "html_url": "https://github.com/libgit2/pygit2/issues/813", "id": 355707853, "node_id": "MDU6SXNzdWUzNTU3MDc4NTM=", "number": 813, "title": "Inconsistent index updating", "user": {"login": "dmi1", "id": 17010428, "node_id": "MDQ6VXNlcjE3MDEwNDI4", "avatar_url": "https://avatars2.githubusercontent.com/u/17010428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmi1", "html_url": "https://github.com/dmi1", "followers_url": "https://api.github.com/users/dmi1/followers", "following_url": "https://api.github.com/users/dmi1/following{/other_user}", "gists_url": "https://api.github.com/users/dmi1/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmi1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmi1/subscriptions", "organizations_url": "https://api.github.com/users/dmi1/orgs", "repos_url": "https://api.github.com/users/dmi1/repos", "events_url": "https://api.github.com/users/dmi1/events{/privacy}", "received_events_url": "https://api.github.com/users/dmi1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 763120268, "node_id": "MDU6TGFiZWw3NjMxMjAyNjg=", "url": "https://api.github.com/repos/libgit2/pygit2/labels/support", "name": "support", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-30T18:44:00Z", "updated_at": "2018-09-06T18:29:19Z", "closed_at": "2018-09-06T18:29:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've found the following very anti-intuitive behavior.\r\n\r\nIf you create a git repository, and create (but don't git add) a file and then run the following script:\r\n\r\n```\r\nimport pygit2\r\n\r\nr1 = pygit2.Repository(\".\")\r\nr2 = pygit2.Repository(\".\")\r\n\r\n#\"other\" in r1.index\r\n\r\nr2.index.add(\"file\")\r\nr2.index.write()\r\n\r\nprint(\"file\" in r1.index)\r\n```\r\n\r\nyou get the (to me) surprising result that it prints out `True`.  That is, even though the file was added to r2.index, and r1.index has not been updated, r1.index knows about the file.\r\n\r\nWhat is stranger is that if you uncomment the line `\"other\" in r1.index`, which I would not expect to have any side effects, the script now prints out `False`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/810", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/810/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/810/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/810/events", "html_url": "https://github.com/libgit2/pygit2/issues/810", "id": 347216561, "node_id": "MDU6SXNzdWUzNDcyMTY1NjE=", "number": 810, "title": "Git Pull - Is this the best way?", "user": {"login": "solvingj", "id": 8557737, "node_id": "MDQ6VXNlcjg1NTc3Mzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8557737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solvingj", "html_url": "https://github.com/solvingj", "followers_url": "https://api.github.com/users/solvingj/followers", "following_url": "https://api.github.com/users/solvingj/following{/other_user}", "gists_url": "https://api.github.com/users/solvingj/gists{/gist_id}", "starred_url": "https://api.github.com/users/solvingj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solvingj/subscriptions", "organizations_url": "https://api.github.com/users/solvingj/orgs", "repos_url": "https://api.github.com/users/solvingj/repos", "events_url": "https://api.github.com/users/solvingj/events{/privacy}", "received_events_url": "https://api.github.com/users/solvingj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-03T00:15:12Z", "updated_at": "2018-08-14T14:26:17Z", "closed_at": "2018-08-07T22:31:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I found this snippit online. Is it the best method we have for doing the equivalent of `git pull` at the GIT CLI?\r\n\r\nhttps://github.com/MichaelBoselowitz/pygit2-examples/blob/master/examples.py#L54\r\n```\r\ndef pull(repo, remote_name='origin', branch='master'):\r\n    for remote in repo.remotes:\r\n        if remote.name == remote_name:\r\n            remote.fetch()\r\n            remote_master_id = repo.lookup_reference('refs/remotes/origin/%s' % (branch)).target\r\n            merge_result, _ = repo.merge_analysis(remote_master_id)\r\n            # Up to date, do nothing\r\n            if merge_result & pygit2.GIT_MERGE_ANALYSIS_UP_TO_DATE:\r\n                return\r\n            # We can just fastforward\r\n            elif merge_result & pygit2.GIT_MERGE_ANALYSIS_FASTFORWARD:\r\n                repo.checkout_tree(repo.get(remote_master_id))\r\n                try:\r\n                    master_ref = repo.lookup_reference('refs/heads/%s' % (branch))\r\n                    master_ref.set_target(remote_master_id)\r\n                except KeyError:\r\n                    repo.create_branch(branch, repo.get(remote_master_id))\r\n                repo.head.set_target(remote_master_id)\r\n            elif merge_result & pygit2.GIT_MERGE_ANALYSIS_NORMAL:\r\n                repo.merge(remote_master_id)\r\n\r\n                if repo.index.conflicts is not None:\r\n                    for conflict in repo.index.conflicts:\r\n                        print 'Conflicts found in:', conflict[0].path\r\n                    raise AssertionError('Conflicts, ahhhhh!!')\r\n\r\n                user = repo.default_signature\r\n                tree = repo.index.write_tree()\r\n                commit = repo.create_commit('HEAD',\r\n                                            user,\r\n                                            user,\r\n                                            'Merge!',\r\n                                            tree,\r\n                                            [repo.head.target, remote_master_id])\r\n                # We need to do this or git CLI will think we are still merging.\r\n                repo.state_cleanup()\r\n            else:\r\n                raise AssertionError('Unknown merge analysis result')\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/809", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/809/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/809/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/809/events", "html_url": "https://github.com/libgit2/pygit2/issues/809", "id": 346314783, "node_id": "MDU6SXNzdWUzNDYzMTQ3ODM=", "number": 809, "title": "The official way to get pygit2 for python 3.7 on windows", "user": {"login": "Predelnik", "id": 2133957, "node_id": "MDQ6VXNlcjIxMzM5NTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/2133957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Predelnik", "html_url": "https://github.com/Predelnik", "followers_url": "https://api.github.com/users/Predelnik/followers", "following_url": "https://api.github.com/users/Predelnik/following{/other_user}", "gists_url": "https://api.github.com/users/Predelnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/Predelnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Predelnik/subscriptions", "organizations_url": "https://api.github.com/users/Predelnik/orgs", "repos_url": "https://api.github.com/users/Predelnik/repos", "events_url": "https://api.github.com/users/Predelnik/events{/privacy}", "received_events_url": "https://api.github.com/users/Predelnik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 763120602, "node_id": "MDU6TGFiZWw3NjMxMjA2MDI=", "url": "https://api.github.com/repos/libgit2/pygit2/labels/feature", "name": "feature", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-31T18:52:57Z", "updated_at": "2018-09-16T12:39:24Z", "closed_at": "2018-09-16T12:39:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Wheels here contain only versions up to 3.6:\r\nhttps://pypi.org/project/pygit2\r\n\r\npip install pygit2 results in the:\r\n>    c:\\users\\prede\\appdata\\local\\temp\\pip-install-6zhgzkh3\\pygit2\\src\\blob.h(33): fatal error C1083: Cannot open include file: 'git2.h': No such file or directory\r\n    error: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2017\\\\Community\\\\VC\\\\Tools\\\\MSVC\\\\14.14.26428\\\\bin\\\\HostX86\\\\x64\\\\cl.exe' failed with exit status 2\r\n\r\nI don't mind supplying libgit2 myself but it's unobvious how to do it.\r\n\r\nIs python 3.7 unsupported?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/803", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/803/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/803/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/803/events", "html_url": "https://github.com/libgit2/pygit2/issues/803", "id": 333480157, "node_id": "MDU6SXNzdWUzMzM0ODAxNTc=", "number": 803, "title": "Stop using the internal git_worktree struct", "user": {"login": "mystor", "id": 1261662, "node_id": "MDQ6VXNlcjEyNjE2NjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1261662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mystor", "html_url": "https://github.com/mystor", "followers_url": "https://api.github.com/users/mystor/followers", "following_url": "https://api.github.com/users/mystor/following{/other_user}", "gists_url": "https://api.github.com/users/mystor/gists{/gist_id}", "starred_url": "https://api.github.com/users/mystor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mystor/subscriptions", "organizations_url": "https://api.github.com/users/mystor/orgs", "repos_url": "https://api.github.com/users/mystor/repos", "events_url": "https://api.github.com/users/mystor/events{/privacy}", "received_events_url": "https://api.github.com/users/mystor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 763120422, "node_id": "MDU6TGFiZWw3NjMxMjA0MjI=", "url": "https://api.github.com/repos/libgit2/pygit2/labels/bug", "name": "bug", "color": "d93f0b", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/libgit2/pygit2/milestones/2", "html_url": "https://github.com/libgit2/pygit2/milestone/2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/milestones/2/labels", "id": 4081462, "node_id": "MDk6TWlsZXN0b25lNDA4MTQ2Mg==", "number": 2, "title": "0.28.0", "description": "", "creator": {"login": "jdavid", "id": 596769, "node_id": "MDQ6VXNlcjU5Njc2OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "closed", "created_at": "2019-02-23T22:00:58Z", "updated_at": "2019-03-19T18:30:17Z", "due_on": null, "closed_at": "2019-03-19T18:30:17Z"}, "comments": 5, "created_at": "2018-06-19T00:33:49Z", "updated_at": "2019-03-02T18:06:54Z", "closed_at": "2019-03-02T18:05:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently the worktree implementation in pygit2 directly re-declares and uses the internal `git_worktree` struct. \r\n\r\nhttps://github.com/libgit2/pygit2/blob/8d6940f49fbb764b3737531dd8fdf667f5faf1b2/src/worktree.h#L36-L43\r\n\r\nIt would be nice if we could avoid using this unexposed libgit2 data structure for stability reasons. \r\n\r\nFor example, building pygit2 against the libgit2 master branch succeeds, however causes silent & dangerous incorrect behaviour due to the definition of `git_worktree` in pygit2 no longer matching `git_worktree` in libgit2 (a new field, `worktree_path`, was added to `git_worktree`).\r\n\r\nhttps://github.com/libgit2/libgit2/blob/e212011b9872c52f6205d3a30b10f753c3108918/src/worktree.h#L15-L35\r\n\r\nUnfortunately, the fields which are currently exposed as the `name`, `path`, and `git_path` properties on Worktree objects are not public at all in the libgit2 API. My current thoughts about how to handle this are the following:\r\n1. Change the `name` property to return `git_worktree_name(self->worktree)` \r\n   > no change in behaviour\r\n2. Change the `path` property to return `git_worktree_path(self->worktree)`\r\n   > *breaking change* - `git_worktree_path` returns the 'worktree_path' rather than the current `gitlink_path`. `worktree_path` is currently ~`$(basename $gitlink_path)` - this usually results in a `.git` segment being removed from the end of the path.\r\n3. Remove the `git_path` property, as it is not exposed in any way from libgit2.\r\n   > *breaking change* - property removal\r\n\r\nThis would make it fall more in line with the libgit2-exposed methods, which seems desirable. Alternatively, the required APIs could be added to libgit2 to maintain behaviour between releases.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/800", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/800/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/800/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/800/events", "html_url": "https://github.com/libgit2/pygit2/issues/800", "id": 330743251, "node_id": "MDU6SXNzdWUzMzA3NDMyNTE=", "number": 800, "title": "KeypairFromMemory not working (_pygit2.GitError: err -7 (no message provided))", "user": {"login": "mew1033", "id": 4435733, "node_id": "MDQ6VXNlcjQ0MzU3MzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4435733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mew1033", "html_url": "https://github.com/mew1033", "followers_url": "https://api.github.com/users/mew1033/followers", "following_url": "https://api.github.com/users/mew1033/following{/other_user}", "gists_url": "https://api.github.com/users/mew1033/gists{/gist_id}", "starred_url": "https://api.github.com/users/mew1033/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mew1033/subscriptions", "organizations_url": "https://api.github.com/users/mew1033/orgs", "repos_url": "https://api.github.com/users/mew1033/repos", "events_url": "https://api.github.com/users/mew1033/events{/privacy}", "received_events_url": "https://api.github.com/users/mew1033/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 763120422, "node_id": "MDU6TGFiZWw3NjMxMjA0MjI=", "url": "https://api.github.com/repos/libgit2/pygit2/labels/bug", "name": "bug", "color": "d93f0b", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-08T17:34:02Z", "updated_at": "2020-05-02T11:26:59Z", "closed_at": "2020-05-02T11:26:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm follwing the git clone via ssh example here: http://www.pygit2.org/recipes/git-clone-ssh.html (Just the second half). It's working fine when my keys are stored in files, but when I try to use the public key stored in memory option, it fails. Here's what I've done:\r\n\r\n    >>>\r\n    >>> git_host = 'githost.com'\r\n    >>> org = 'myorg'\r\n    >>> repo = 'testgitpull'\r\n    >>>\r\n    >>> keypair = pygit2.Keypair(\"git\", 'TESTGIT.pub', 'TESTGIT', \"icanhazgit\")\r\n    >>> callbacks = pygit2.RemoteCallbacks(credentials=keypair)\r\n    >>> r = pygit2.clone_repository(\"ssh://git@%s/%s/%s\" % (git_host, org, repo), \"testgitpull\", callbacks=callbacks)\r\n    >>>\r\n    >>> print r\r\n    pygit2.Repository('/home/mew1033/testgit/testgitpull/.git/')\r\n    >>>\r\n    >>>\r\n    \r\n    \r\n    (I deleted the folder here so that it could clone again)\r\n    \r\n    \r\n    >>>\r\n    >>> with open('TESTGIT.pub', 'r') as f:\r\n    ...     pub = f.read()\r\n    ...\r\n    >>> with open('TESTGIT', 'r') as f:\r\n    ...     priv = f.read()\r\n    ...\r\n    >>>\r\n    >>>\r\n    >>> keypair = pygit2.KeypairFromMemory(\"git\", pub, priv, \"icanhazgit\")\r\n    >>> callbacks = pygit2.RemoteCallbacks(credentials=keypair)\r\n    >>> r = pygit2.clone_repository(\"ssh://git@%s/%s/%s\" % (git_host, org, repo), \"testgitpull\", callbacks=callbacks)\r\n    Traceback (most recent call last):\r\n      File \"<stdin>\", line 1, in <module>\r\n      File \"/usr/lib64/python2.7/site-packages/pygit2/__init__.py\", line 263, in clone_repository\r\n        check_error(err)\r\n      File \"/usr/lib64/python2.7/site-packages/pygit2/errors.py\", line 64, in check_error\r\n        raise GitError(message)\r\n    _pygit2.GitError: err -7 (no message provided)\r\n    >>>\r\n    >>>\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/799", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/799/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/799/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/799/events", "html_url": "https://github.com/libgit2/pygit2/issues/799", "id": 330293098, "node_id": "MDU6SXNzdWUzMzAyOTMwOTg=", "number": 799, "title": "git_object_short_id ?", "user": {"login": "jeremy-im", "id": 22079704, "node_id": "MDQ6VXNlcjIyMDc5NzA0", "avatar_url": "https://avatars2.githubusercontent.com/u/22079704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremy-im", "html_url": "https://github.com/jeremy-im", "followers_url": "https://api.github.com/users/jeremy-im/followers", "following_url": "https://api.github.com/users/jeremy-im/following{/other_user}", "gists_url": "https://api.github.com/users/jeremy-im/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremy-im/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremy-im/subscriptions", "organizations_url": "https://api.github.com/users/jeremy-im/orgs", "repos_url": "https://api.github.com/users/jeremy-im/repos", "events_url": "https://api.github.com/users/jeremy-im/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremy-im/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 763120602, "node_id": "MDU6TGFiZWw3NjMxMjA2MDI=", "url": "https://api.github.com/repos/libgit2/pygit2/labels/feature", "name": "feature", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-07T14:17:12Z", "updated_at": "2018-09-16T11:08:38Z", "closed_at": "2018-09-16T11:08:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "So I've written an app that does (I think) something cool, and I want to display these fabulous results to the user in a way that is familiar to them. But they are not used to seeing the full-length hex oids. I want to give them the abbreviated ones they are used to. I could (and actually did) write my own `abbrev` function, but it is impossible to pick a value that works for every repo out there. I looked a little bit at the code and it seems it would be easy to add `Object_short_id{__doc__,__get__}` that calls the function mentioned in the title of this issue - but I lack the experience to be confident enough to write up a pull request... Hopefully someone out there can take a few minutes to flesh out this idea? Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/798", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/798/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/798/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/798/events", "html_url": "https://github.com/libgit2/pygit2/issues/798", "id": 329326201, "node_id": "MDU6SXNzdWUzMjkzMjYyMDE=", "number": 798, "title": "r", "user": {"login": "Leila-karimi", "id": 20510368, "node_id": "MDQ6VXNlcjIwNTEwMzY4", "avatar_url": "https://avatars1.githubusercontent.com/u/20510368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Leila-karimi", "html_url": "https://github.com/Leila-karimi", "followers_url": "https://api.github.com/users/Leila-karimi/followers", "following_url": "https://api.github.com/users/Leila-karimi/following{/other_user}", "gists_url": "https://api.github.com/users/Leila-karimi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Leila-karimi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Leila-karimi/subscriptions", "organizations_url": "https://api.github.com/users/Leila-karimi/orgs", "repos_url": "https://api.github.com/users/Leila-karimi/repos", "events_url": "https://api.github.com/users/Leila-karimi/events{/privacy}", "received_events_url": "https://api.github.com/users/Leila-karimi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-05T07:04:21Z", "updated_at": "2018-06-05T07:53:34Z", "closed_at": "2018-06-05T07:53:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/797", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/797/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/797/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/797/events", "html_url": "https://github.com/libgit2/pygit2/issues/797", "id": 326669951, "node_id": "MDU6SXNzdWUzMjY2Njk5NTE=", "number": 797, "title": "DiffLine.{new,old}_lineno is incorrect", "user": {"login": "brandonio21", "id": 2231972, "node_id": "MDQ6VXNlcjIyMzE5NzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1058443223, "node_id": "MDU6TGFiZWwxMDU4NDQzMjIz", "url": "https://api.github.com/repos/libgit2/pygit2/labels/libgit2", "name": "libgit2", "color": "FF8C00", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-05-25T21:32:04Z", "updated_at": "2018-10-28T11:00:56Z", "closed_at": "2018-10-28T11:00:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have found unexpected behavior while working to apply parsed diffs. The behavior for DiffLine.old_lineno and DiffLine.new_lineno is described as:\r\n\r\nold_lineno\r\n    Line number in old file or -1 for added line\r\nnew_lineno\r\n    Line number in new file or -1 for deleted line\r\n\r\nConsider the following repro:\r\n\r\n```py\r\ndef test_diff_parse_lineno(self):                 \r\n    patch_str = textwrap.dedent(\"\"\"\\              \r\n    diff --git a/a b/a                            \r\n    index 7f129fd..af431f2 100644                 \r\n    --- a/a                                       \r\n    +++ b/a                                       \r\n    @@ -1 +1 @@                                   \r\n    -a contents 2                                 \r\n    +a contents                                   \r\n    \"\"\")                                          \r\n                                                  \r\n    diff = pygit2.Diff.parse_diff(patch_str)      \r\n    patches = [patch for patch in diff]           \r\n    self.assertEqual(1, len(patches))             \r\n                                                  \r\n    hunks = patches[0].hunks                      \r\n    self.assertEqual(1, len(hunks))               \r\n                                                  \r\n    lines = hunks[0].lines                        \r\n    self.assertEqual(2, len(lines))               \r\n                                                  \r\n    self.assertNotEqual(0, lines[0].new_lineno)  # Fails                                                     \r\n```\r\n\r\nIn my testing, I found that these two old_lineno and new_lineno always happen to be 0. This is obviously incorrect.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/796", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/796/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/796/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/796/events", "html_url": "https://github.com/libgit2/pygit2/issues/796", "id": 324041937, "node_id": "MDU6SXNzdWUzMjQwNDE5Mzc=", "number": 796, "title": "Patch test does not work on BigEndian systems", "user": {"login": "scarabeusiv", "id": 1055830, "node_id": "MDQ6VXNlcjEwNTU4MzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1055830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scarabeusiv", "html_url": "https://github.com/scarabeusiv", "followers_url": "https://api.github.com/users/scarabeusiv/followers", "following_url": "https://api.github.com/users/scarabeusiv/following{/other_user}", "gists_url": "https://api.github.com/users/scarabeusiv/gists{/gist_id}", "starred_url": "https://api.github.com/users/scarabeusiv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scarabeusiv/subscriptions", "organizations_url": "https://api.github.com/users/scarabeusiv/orgs", "repos_url": "https://api.github.com/users/scarabeusiv/repos", "events_url": "https://api.github.com/users/scarabeusiv/events{/privacy}", "received_events_url": "https://api.github.com/users/scarabeusiv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-17T14:13:23Z", "updated_at": "2018-05-20T15:56:55Z", "closed_at": "2018-05-20T15:56:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "```[   75s] FAIL: test_no_context_lines (test.test_patch.PatchTest)\r\n[   75s] ----------------------------------------------------------------------\r\n[   75s] Traceback (most recent call last):\r\n[   75s]   File \"/home/abuild/rpmbuild/BUILD/pygit2-0.27.0/test/test_patch.py\", line 192, in test_no_context_lines\r\n[   75s]     self.assertEqual(context_count, 0)\r\n[   75s] AssertionError: 1 != 0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/795", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/795/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/795/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/795/events", "html_url": "https://github.com/libgit2/pygit2/issues/795", "id": 324041523, "node_id": "MDU6SXNzdWUzMjQwNDE1MjM=", "number": 795, "title": "Tests fail on i586 architecture with pygit2-0.27.0", "user": {"login": "scarabeusiv", "id": 1055830, "node_id": "MDQ6VXNlcjEwNTU4MzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1055830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scarabeusiv", "html_url": "https://github.com/scarabeusiv", "followers_url": "https://api.github.com/users/scarabeusiv/followers", "following_url": "https://api.github.com/users/scarabeusiv/following{/other_user}", "gists_url": "https://api.github.com/users/scarabeusiv/gists{/gist_id}", "starred_url": "https://api.github.com/users/scarabeusiv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scarabeusiv/subscriptions", "organizations_url": "https://api.github.com/users/scarabeusiv/orgs", "repos_url": "https://api.github.com/users/scarabeusiv/repos", "events_url": "https://api.github.com/users/scarabeusiv/events{/privacy}", "received_events_url": "https://api.github.com/users/scarabeusiv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-17T14:12:29Z", "updated_at": "2018-05-21T08:39:28Z", "closed_at": "2018-05-20T15:54:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "```[   99s] Traceback (most recent call last):\r\n[   99s]   File \"/home/abuild/rpmbuild/BUILD/pygit2-0.27.0/test/test_blame.py\", line 67, in test_blame_index\r\n[   99s]     self.assertEqualSignature(HUNKS[i][2], hunk.final_committer)\r\n[   99s]   File \"/home/abuild/rpmbuild/BUILD/pygit2-0.27.0/build/lib.linux-i686-2.7/pygit2/blame.py\", line 73, in final_committer\r\n[   99s]     return wrap_signature(self._hunk.final_signature)\r\n[   99s]   File \"/home/abuild/rpmbuild/BUILD/pygit2-0.27.0/build/lib.linux-i686-2.7/pygit2/blame.py\", line 43, in wrap_signature\r\n[   99s]     csig.when.time, csig.when.offset, 'utf-8')\r\n[   99s] error: struct git_time: wrong total size (cdef says 12, but C compiler says 16). fix it or use \"...;\" in the cdef for struct git_time to make it flexible```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/793", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/793/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/793/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/793/events", "html_url": "https://github.com/libgit2/pygit2/issues/793", "id": 320562686, "node_id": "MDU6SXNzdWUzMjA1NjI2ODY=", "number": 793, "title": "Ship wheels for Linux", "user": {"login": "techtonik", "id": 515889, "node_id": "MDQ6VXNlcjUxNTg4OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/515889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/techtonik", "html_url": "https://github.com/techtonik", "followers_url": "https://api.github.com/users/techtonik/followers", "following_url": "https://api.github.com/users/techtonik/following{/other_user}", "gists_url": "https://api.github.com/users/techtonik/gists{/gist_id}", "starred_url": "https://api.github.com/users/techtonik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/techtonik/subscriptions", "organizations_url": "https://api.github.com/users/techtonik/orgs", "repos_url": "https://api.github.com/users/techtonik/repos", "events_url": "https://api.github.com/users/techtonik/events{/privacy}", "received_events_url": "https://api.github.com/users/techtonik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 763120602, "node_id": "MDU6TGFiZWw3NjMxMjA2MDI=", "url": "https://api.github.com/repos/libgit2/pygit2/labels/feature", "name": "feature", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2018-05-06T04:50:43Z", "updated_at": "2019-02-18T13:44:21Z", "closed_at": "2019-02-16T10:28:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is a follow up to #563.\r\n\r\nI am trying to pack `gitless` as a snap, and absence of Linux wheel makes the process really painful. It could help if https://github.com/pypa/manylinux wheels were already available.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/789", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/789/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/789/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/789/events", "html_url": "https://github.com/libgit2/pygit2/issues/789", "id": 315559551, "node_id": "MDU6SXNzdWUzMTU1NTk1NTE=", "number": 789, "title": "clone_repository GitError unclear", "user": {"login": "arcsector", "id": 26469747, "node_id": "MDQ6VXNlcjI2NDY5NzQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/26469747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arcsector", "html_url": "https://github.com/arcsector", "followers_url": "https://api.github.com/users/arcsector/followers", "following_url": "https://api.github.com/users/arcsector/following{/other_user}", "gists_url": "https://api.github.com/users/arcsector/gists{/gist_id}", "starred_url": "https://api.github.com/users/arcsector/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arcsector/subscriptions", "organizations_url": "https://api.github.com/users/arcsector/orgs", "repos_url": "https://api.github.com/users/arcsector/repos", "events_url": "https://api.github.com/users/arcsector/events{/privacy}", "received_events_url": "https://api.github.com/users/arcsector/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 763120268, "node_id": "MDU6TGFiZWw3NjMxMjAyNjg=", "url": "https://api.github.com/repos/libgit2/pygit2/labels/support", "name": "support", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2018-04-18T16:46:56Z", "updated_at": "2020-02-15T10:12:53Z", "closed_at": "2020-02-15T01:29:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello all,\r\n\r\nThis will be my last and hopefully final issue. I'm attmpting to clone over ssh, which i can do using `git clone` with the ssh url, but my code is throwing `_pygit2.GitError: unsupported URL protocol`. I am attempting to do this on a Github Enterprise server. Is this an error with the server or an error with my code. Code I've tried:\r\n```python\r\nclass MyRemoteCallbacks(pygit2.RemoteCallbacks):\r\n        def credentials(self, url, username_from_url, allowed_types):\r\n                if allowed_types & pygit2.credentials.GIT_CREDTYPE_USERNAME:\r\n                        return pg.Username(\"$user\")\r\n                elif allowed_types & pygit2.credentials.GIT_CREDTYPE_SSH_KEY:\r\n                        return pygit2.Keypair(\"$user\", \"id_rsa.pub\", \"id_rsa\", \"$pass\")\r\n                else:\r\n                        return None\r\nprint(\"Cloning pygit2 over ssh with username variable\")\r\npygit2.clone_repository('ssh://github.company.com/$user/$repo', '$repo.git', callbacks=MyRemoteCallbacks())\r\n```\r\nI also tried:\r\n```python\r\nprint(\"Cloning pygit2 over ssh with username in url\")\r\nkeypair = pygit2.Keypair(\"$user\", \"id_rsa.pub\", \"id_rsa\", \"$pass\")\r\nMyRemoteCallbacks = pygit2.RemoteCallbacks(credentials=keypair)\r\npygit2.clone_repository('ssh://git@github.company.com:$user/$repo', '$repo.git', callbacks=MyRemoteCallbacks)\r\n```\r\nBoth of these throw the same error. Note: my SSH key has a passphrase associated with it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/788", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/788/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/788/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/788/events", "html_url": "https://github.com/libgit2/pygit2/issues/788", "id": 314848715, "node_id": "MDU6SXNzdWUzMTQ4NDg3MTU=", "number": 788, "title": "pip._vendor.requests.exceptions.SSLError: certificate verify failed", "user": {"login": "arcsector", "id": 26469747, "node_id": "MDQ6VXNlcjI2NDY5NzQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/26469747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arcsector", "html_url": "https://github.com/arcsector", "followers_url": "https://api.github.com/users/arcsector/followers", "following_url": "https://api.github.com/users/arcsector/following{/other_user}", "gists_url": "https://api.github.com/users/arcsector/gists{/gist_id}", "starred_url": "https://api.github.com/users/arcsector/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arcsector/subscriptions", "organizations_url": "https://api.github.com/users/arcsector/orgs", "repos_url": "https://api.github.com/users/arcsector/repos", "events_url": "https://api.github.com/users/arcsector/events{/privacy}", "received_events_url": "https://api.github.com/users/arcsector/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-16T23:07:38Z", "updated_at": "2018-04-17T22:46:15Z", "closed_at": "2018-04-17T22:46:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello all,\r\n\r\nLet me just say this tool is the most promising one I've seen yet. My current issue is with python 3.6.3:\r\n\r\nI've successfully built libgit2, but whenever I try to install pygit2 via pip3, I get this error:\r\n```shell\r\npip._vendor.requests.exceptions.SSLError: HTTPSConnectionPool(host='files.pythonhosted.org', port=443):\r\n Max retries exceeded with url:\r\n /packages/3b/0d/c11844421c7c3b9cb84c5503185bbb5ba780144fd64f5adde572bcdcdd8a/pygit2-0.27.0.tar.gz \r\n(Caused by SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:777)'),))\r\n```\r\n\r\n**NOTE: you may close this if you desire, as I was able to work this out by using `sudo apt install python3-pygit2`**\r\n\r\nHowever, this may be something worth looking into as it will affect all flavors of Linux, and not all of them use apt. \r\n\r\nI would also like to note that if you do try to clone the repo and do an install that way, it fails because of the `cffi` package.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/787", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/787/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/787/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/787/events", "html_url": "https://github.com/libgit2/pygit2/issues/787", "id": 311316045, "node_id": "MDU6SXNzdWUzMTEzMTYwNDU=", "number": 787, "title": "Segmentation fault in fetch", "user": {"login": "RazerM", "id": 1337586, "node_id": "MDQ6VXNlcjEzMzc1ODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1337586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RazerM", "html_url": "https://github.com/RazerM", "followers_url": "https://api.github.com/users/RazerM/followers", "following_url": "https://api.github.com/users/RazerM/following{/other_user}", "gists_url": "https://api.github.com/users/RazerM/gists{/gist_id}", "starred_url": "https://api.github.com/users/RazerM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RazerM/subscriptions", "organizations_url": "https://api.github.com/users/RazerM/orgs", "repos_url": "https://api.github.com/users/RazerM/repos", "events_url": "https://api.github.com/users/RazerM/events{/privacy}", "received_events_url": "https://api.github.com/users/RazerM/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-04T17:09:49Z", "updated_at": "2018-04-06T11:55:36Z", "closed_at": "2018-04-06T11:55:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "pygit2 v0.27, Python 3.5.4\r\n\r\n```\r\nFatal Python error: Segmentation fault\r\n\r\nCurrent thread 0x00007feef8a5c700 (most recent call first):\r\n  File \".../venv/lib/python3.5/site-packages/pygit2/remote.py\", line 402 in fetch\r\n```\r\n\r\nI never saw this with 0.26.3. The remote is a local path, I will try to investigate more tomorrow.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/785", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/785/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/785/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/785/events", "html_url": "https://github.com/libgit2/pygit2/issues/785", "id": 308995630, "node_id": "MDU6SXNzdWUzMDg5OTU2MzA=", "number": 785, "title": "Does 0.26.4 work with libgit2-0.27.0", "user": {"login": "HJarausch", "id": 3754462, "node_id": "MDQ6VXNlcjM3NTQ0NjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3754462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HJarausch", "html_url": "https://github.com/HJarausch", "followers_url": "https://api.github.com/users/HJarausch/followers", "following_url": "https://api.github.com/users/HJarausch/following{/other_user}", "gists_url": "https://api.github.com/users/HJarausch/gists{/gist_id}", "starred_url": "https://api.github.com/users/HJarausch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HJarausch/subscriptions", "organizations_url": "https://api.github.com/users/HJarausch/orgs", "repos_url": "https://api.github.com/users/HJarausch/repos", "events_url": "https://api.github.com/users/HJarausch/events{/privacy}", "received_events_url": "https://api.github.com/users/HJarausch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-27T14:32:22Z", "updated_at": "2018-03-30T19:57:50Z", "closed_at": "2018-03-30T19:57:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\ndoes anyone know if the recent 0.26.4 version can be used with libgit2-0.27.0 or are there any\r\npatched to to do so?\r\nThanks,\r\nHelmut", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/784", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/784/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/784/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/784/events", "html_url": "https://github.com/libgit2/pygit2/issues/784", "id": 308956808, "node_id": "MDU6SXNzdWUzMDg5NTY4MDg=", "number": 784, "title": "redefinition of typedef \u2018git_worktree\u2019 error on 0.26.4", "user": {"login": "RazerM", "id": 1337586, "node_id": "MDQ6VXNlcjEzMzc1ODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1337586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RazerM", "html_url": "https://github.com/RazerM", "followers_url": "https://api.github.com/users/RazerM/followers", "following_url": "https://api.github.com/users/RazerM/following{/other_user}", "gists_url": "https://api.github.com/users/RazerM/gists{/gist_id}", "starred_url": "https://api.github.com/users/RazerM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RazerM/subscriptions", "organizations_url": "https://api.github.com/users/RazerM/orgs", "repos_url": "https://api.github.com/users/RazerM/repos", "events_url": "https://api.github.com/users/RazerM/events{/privacy}", "received_events_url": "https://api.github.com/users/RazerM/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-27T12:55:30Z", "updated_at": "2018-03-28T09:12:03Z", "closed_at": "2018-03-28T09:12:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is an error on gcc 4.3. In the past, libgit2 has fixed a similar issue (libgit2/libgit2/pull/355)\r\n\r\nRelevant log:\r\n```\r\ngcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -I/home/ouruser/local/include -fPIC -I/usr/local/include -I/home/ouruser/check-git/venv_check_git/include -I/home/ouruser/local/include/python3.5m -c src/repository.c -o build/temp.linux-x86_64-3.5/src/repository.o\r\n    In file included from src/repository.c:41:\r\n    src/worktree.h:43: error: redefinition of typedef \u2018git_worktree\u2019\r\n    /home/ouruser/local/include/git2/types.h:108: error: previous declaration of \u2018git_worktree\u2019 was here\r\n    error: command 'gcc' failed with exit status 1\r\n```\r\n\r\nIt's unfortunate that the minimum compiler version changed between 0.26.3 and 0.26.4. Is this a bug?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/781", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/781/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/781/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/781/events", "html_url": "https://github.com/libgit2/pygit2/issues/781", "id": 306883087, "node_id": "MDU6SXNzdWUzMDY4ODMwODc=", "number": 781, "title": "Missing TYPECHANGE constants", "user": {"login": "RazerM", "id": 1337586, "node_id": "MDQ6VXNlcjEzMzc1ODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1337586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RazerM", "html_url": "https://github.com/RazerM", "followers_url": "https://api.github.com/users/RazerM/followers", "following_url": "https://api.github.com/users/RazerM/following{/other_user}", "gists_url": "https://api.github.com/users/RazerM/gists{/gist_id}", "starred_url": "https://api.github.com/users/RazerM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RazerM/subscriptions", "organizations_url": "https://api.github.com/users/RazerM/orgs", "repos_url": "https://api.github.com/users/RazerM/repos", "events_url": "https://api.github.com/users/RazerM/events{/privacy}", "received_events_url": "https://api.github.com/users/RazerM/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-20T14:13:19Z", "updated_at": "2018-03-23T09:36:16Z", "closed_at": "2018-03-23T09:36:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using `repo.status()` I got a value of 16, which is the first of these missing constants:\r\n\r\n- `GIT_STATUS_INDEX_TYPECHANGE`\r\n- `GIT_STATUS_WT_TYPECHANGE`\r\n\r\nThe following are also missing, but I only see them in the libgit2 source \u2014 for all I know they don't apply to pygit2.\r\n\r\n- `GIT_STATUS_WT_RENAMED`\r\n- `GIT_STATUS_WT_UNREADABLE`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/780", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/780/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/780/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/780/events", "html_url": "https://github.com/libgit2/pygit2/issues/780", "id": 306531977, "node_id": "MDU6SXNzdWUzMDY1MzE5Nzc=", "number": 780, "title": "pygit2 verification step error", "user": {"login": "kubilay-eren", "id": 25499464, "node_id": "MDQ6VXNlcjI1NDk5NDY0", "avatar_url": "https://avatars1.githubusercontent.com/u/25499464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kubilay-eren", "html_url": "https://github.com/kubilay-eren", "followers_url": "https://api.github.com/users/kubilay-eren/followers", "following_url": "https://api.github.com/users/kubilay-eren/following{/other_user}", "gists_url": "https://api.github.com/users/kubilay-eren/gists{/gist_id}", "starred_url": "https://api.github.com/users/kubilay-eren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kubilay-eren/subscriptions", "organizations_url": "https://api.github.com/users/kubilay-eren/orgs", "repos_url": "https://api.github.com/users/kubilay-eren/repos", "events_url": "https://api.github.com/users/kubilay-eren/events{/privacy}", "received_events_url": "https://api.github.com/users/kubilay-eren/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 763120268, "node_id": "MDU6TGFiZWw3NjMxMjAyNjg=", "url": "https://api.github.com/repos/libgit2/pygit2/labels/support", "name": "support", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-03-19T16:18:15Z", "updated_at": "2019-03-19T18:41:16Z", "closed_at": "2019-03-19T18:41:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "\" kubilay@kubilay-Inspiron-5521:~$ python -c 'import pygit2'\r\nTraceback (most recent call last):\r\n  File `\"<string>\",` line 1, in `<module>`\r\nImportError: No module named pygit2 \"\r\n\r\nHow can I fix the above error?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/777", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/777/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/777/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/777/events", "html_url": "https://github.com/libgit2/pygit2/issues/777", "id": 305956263, "node_id": "MDU6SXNzdWUzMDU5NTYyNjM=", "number": 777, "title": "Feature request: worktree support", "user": {"login": "terminalmage", "id": 328598, "node_id": "MDQ6VXNlcjMyODU5OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/328598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terminalmage", "html_url": "https://github.com/terminalmage", "followers_url": "https://api.github.com/users/terminalmage/followers", "following_url": "https://api.github.com/users/terminalmage/following{/other_user}", "gists_url": "https://api.github.com/users/terminalmage/gists{/gist_id}", "starred_url": "https://api.github.com/users/terminalmage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terminalmage/subscriptions", "organizations_url": "https://api.github.com/users/terminalmage/orgs", "repos_url": "https://api.github.com/users/terminalmage/repos", "events_url": "https://api.github.com/users/terminalmage/events{/privacy}", "received_events_url": "https://api.github.com/users/terminalmage/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-03-16T14:47:46Z", "updated_at": "2018-03-18T19:25:57Z", "closed_at": "2018-03-18T19:25:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Support for interacting with worktrees was added in [libgit2 0.26.0](https://github.com/libgit2/libgit2/releases/tag/v0.26.0). This would be an excellent feature. I'm not sure whether it would be useful to have a separate class for worktrees, or simply to add functions to `pygit2.Repository` for creating and pruning worktrees, and then just use `pygit2.Repository` to work with the files, etc. within them.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/775", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/775/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/775/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/775/events", "html_url": "https://github.com/libgit2/pygit2/issues/775", "id": 303910417, "node_id": "MDU6SXNzdWUzMDM5MTA0MTc=", "number": 775, "title": "Repository repr causes segfault", "user": {"login": "RazerM", "id": 1337586, "node_id": "MDQ6VXNlcjEzMzc1ODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1337586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RazerM", "html_url": "https://github.com/RazerM", "followers_url": "https://api.github.com/users/RazerM/followers", "following_url": "https://api.github.com/users/RazerM/following{/other_user}", "gists_url": "https://api.github.com/users/RazerM/gists{/gist_id}", "starred_url": "https://api.github.com/users/RazerM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RazerM/subscriptions", "organizations_url": "https://api.github.com/users/RazerM/orgs", "repos_url": "https://api.github.com/users/RazerM/repos", "events_url": "https://api.github.com/users/RazerM/events{/privacy}", "received_events_url": "https://api.github.com/users/RazerM/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-09T17:01:40Z", "updated_at": "2018-03-10T16:05:55Z", "closed_at": "2018-03-10T16:05:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I initially thought this was a pytest bug: pytest-dev/pytest/issues/3293\r\n\r\nMinimal example:\r\n\r\n```python\r\nfrom pygit2 import Repository\r\n\r\nclass MyRepository(Repository):\r\n    def __init__(self, *args, **kwargs):\r\n        self.path # causes segfault\r\n        super().__init__(*args, **kwargs)\r\n        \r\nMyRepository('.')\r\n```\r\n\r\n`self->repo` isn't initialized when the getter is called:\r\n\r\nhttps://github.com/libgit2/pygit2/blob/2d4c1f5427a67723d86ca00b2761f1f22364a8b2/src/repository.c#L519-L523\r\n\r\nThis will also show up if you try to step through `Repository.__init__` in the PyCharm debugger when it calls `repr` on `self`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/765", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/765/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/765/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/765/events", "html_url": "https://github.com/libgit2/pygit2/issues/765", "id": 288615758, "node_id": "MDU6SXNzdWUyODg2MTU3NTg=", "number": 765, "title": "big endian: FAIL: test_no_context_lines (test.test_patch.PatchTest)", "user": {"login": "onovy", "id": 1649603, "node_id": "MDQ6VXNlcjE2NDk2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1649603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/onovy", "html_url": "https://github.com/onovy", "followers_url": "https://api.github.com/users/onovy/followers", "following_url": "https://api.github.com/users/onovy/following{/other_user}", "gists_url": "https://api.github.com/users/onovy/gists{/gist_id}", "starred_url": "https://api.github.com/users/onovy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/onovy/subscriptions", "organizations_url": "https://api.github.com/users/onovy/orgs", "repos_url": "https://api.github.com/users/onovy/repos", "events_url": "https://api.github.com/users/onovy/events{/privacy}", "received_events_url": "https://api.github.com/users/onovy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 763120422, "node_id": "MDU6TGFiZWw3NjMxMjA0MjI=", "url": "https://api.github.com/repos/libgit2/pygit2/labels/bug", "name": "bug", "color": "d93f0b", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-15T14:39:47Z", "updated_at": "2019-12-13T21:10:28Z", "closed_at": "2019-12-13T21:10:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\ntest.test_patch.PatchTest.test_no_context_lines fails on archs mips, s390x, hppa, powerpc or ppc64. I think all of them are \"big endian\". This bug is new in 0.26.3, because before this version test_no_context_lines test didn't exists.\r\n\r\n```\r\nFAIL: test_no_context_lines (test.test_patch.PatchTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/<<PKGBUILDDIR>>/test/test_patch.py\", line 196, in test_no_context_lines\r\n    self.assertEqual(context_count, 0)\r\nAssertionError: 1 != 0\r\n```\r\n\r\nSee: https://buildd.debian.org/status/package.php?p=python-pygit2\r\n\r\nThanks for fixing.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/764", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/764/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/764/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/764/events", "html_url": "https://github.com/libgit2/pygit2/issues/764", "id": 288579376, "node_id": "MDU6SXNzdWUyODg1NzkzNzY=", "number": 764, "title": "tree.diff_to_tree results in many unnecessary sys calls", "user": {"login": "Nukesor", "id": 3322822, "node_id": "MDQ6VXNlcjMzMjI4MjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3322822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nukesor", "html_url": "https://github.com/Nukesor", "followers_url": "https://api.github.com/users/Nukesor/followers", "following_url": "https://api.github.com/users/Nukesor/following{/other_user}", "gists_url": "https://api.github.com/users/Nukesor/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nukesor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nukesor/subscriptions", "organizations_url": "https://api.github.com/users/Nukesor/orgs", "repos_url": "https://api.github.com/users/Nukesor/repos", "events_url": "https://api.github.com/users/Nukesor/events{/privacy}", "received_events_url": "https://api.github.com/users/Nukesor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-01-15T12:32:34Z", "updated_at": "2020-03-03T10:33:09Z", "closed_at": "2018-02-07T11:54:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nI'm currently working on a git scanner with a very high throughput for my bachelor thesis.\r\nAs the scanner runs with 8 threads, I'm observing severe slowdowns on my server.\r\nAfter running the command with `strace` i noticed that there are a whole lot of unnecessary syscalls issued on each diff. It looks like  for each file in the diff, there is one `stat` for the actual file, two `access` for `/etc/gitattributes` and two `stat` for `/info/attributes`. \r\n\r\nThis results in a lot of syscalls and slows things down significantly as the program seems to wait for those calls most of the time. The repositories are located inside `/tmp` and cleaned after each scan. There are no signs of RAM shortage as there are about 8GB+ unused space in the `/tmp` fs.\r\n\r\nThe repositories are cloned `bare`. The actual function call is:\r\n```\r\ndiff = commit.tree.diff_to_tree(commit.parents[0].tree)\r\nself.commit_stats[commit.hex] = {\r\n    'additions': diff.stats.insertions,\r\n    'deletions': diff.stats.deletions,\r\n}\r\n```\r\n\r\nI'm not sure if this is the right place or if this is rather a libgit2 issue.\r\nAnyway I'm happy for any help as I'm not that familiar with the pythin-C binding mechanics.\r\n\r\nRelevant strace output example:\r\n```\r\n[pid 32220] stat(\"src/main.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/main.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/states/Level.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/states/Level.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/main.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/main.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/states/Level.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/states/Level.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/757", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/757/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/757/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/757/events", "html_url": "https://github.com/libgit2/pygit2/issues/757", "id": 279611079, "node_id": "MDU6SXNzdWUyNzk2MTEwNzk=", "number": 757, "title": "patch.c : self.patch is checked after it is used", "user": {"login": "brandonio21", "id": 2231972, "node_id": "MDQ6VXNlcjIyMzE5NzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-06T03:11:50Z", "updated_at": "2017-12-09T11:22:02Z", "closed_at": "2017-12-09T11:22:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In https://github.com/libgit2/pygit2/blob/a96da22cbf456fe2181e196877845b590cede606/src/patch.c#L190-L193 , self->patch is checked to exist after it is used, potentially causing errors.\r\n\r\nThis should be fixed (a simple lineswap)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/755", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/755/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/755/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/755/events", "html_url": "https://github.com/libgit2/pygit2/issues/755", "id": 278867324, "node_id": "MDU6SXNzdWUyNzg4NjczMjQ=", "number": 755, "title": "brew on OS X installs libgit2 0.26.x, pygit2 wants 0.24.x", "user": {"login": "audiodude", "id": 57832, "node_id": "MDQ6VXNlcjU3ODMy", "avatar_url": "https://avatars1.githubusercontent.com/u/57832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/audiodude", "html_url": "https://github.com/audiodude", "followers_url": "https://api.github.com/users/audiodude/followers", "following_url": "https://api.github.com/users/audiodude/following{/other_user}", "gists_url": "https://api.github.com/users/audiodude/gists{/gist_id}", "starred_url": "https://api.github.com/users/audiodude/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/audiodude/subscriptions", "organizations_url": "https://api.github.com/users/audiodude/orgs", "repos_url": "https://api.github.com/users/audiodude/repos", "events_url": "https://api.github.com/users/audiodude/events{/privacy}", "received_events_url": "https://api.github.com/users/audiodude/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-04T04:27:10Z", "updated_at": "2017-12-04T12:37:42Z", "closed_at": "2017-12-04T12:37:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "DIdn't see any mention of this elsewhere so opening an issue.\r\n\r\nI tried:\r\n\r\n```\r\nbrew install libgit2\r\n```\r\n\r\nand got:\r\n\r\n```\r\n==> Pouring libgit2-0.26.0.el_capitan.bottle.tar.gz\r\n\ud83c\udf7a  /usr/local/Cellar/libgit2/0.26.0: 106 files, 1.8MB\r\n```\r\n\r\nBut now my pygit2 won't install with:\r\n\r\n```\r\nsrc/types.h:36:2: error: You need a compatible libgit2 version (v0.24.x)\r\n#error You need a compatible libgit2 version (v0.24.x)\r\n ^\r\n1 error generated.\r\n```", "performed_via_github_app": null, "score": 1.0}]}