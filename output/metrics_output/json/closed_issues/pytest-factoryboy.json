{"total_count": 24, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/89", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/89/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/89/events", "html_url": "https://github.com/pytest-dev/pytest-factoryboy/issues/89", "id": 580551271, "node_id": "MDU6SXNzdWU1ODA1NTEyNzE=", "number": 89, "title": "pytest 5.4.0 compatibility", "user": {"login": "Xelia", "id": 3330700, "node_id": "MDQ6VXNlcjMzMzA3MDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3330700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xelia", "html_url": "https://github.com/Xelia", "followers_url": "https://api.github.com/users/Xelia/followers", "following_url": "https://api.github.com/users/Xelia/following{/other_user}", "gists_url": "https://api.github.com/users/Xelia/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xelia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xelia/subscriptions", "organizations_url": "https://api.github.com/users/Xelia/orgs", "repos_url": "https://api.github.com/users/Xelia/repos", "events_url": "https://api.github.com/users/Xelia/events{/privacy}", "received_events_url": "https://api.github.com/users/Xelia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-13T11:49:06Z", "updated_at": "2020-03-13T14:51:46Z", "closed_at": "2020-03-13T14:51:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Tests failing\r\n\r\n```\r\n============================================================================================================ ERRORS =============================================================================================================\r\n________________________________________________________________________________________ ERROR collecting tests/test_factory_fixtures.py ________________________________________________________________________________________\r\nIn function \"test_parametrized\":\r\nParameter \"edition__year\" should be declared explicitly via indirect or in function itself\r\n__________________________________________________________________________________________ ERROR collecting tests/test_lazy_fixture.py __________________________________________________________________________________________\r\nIn function \"test_lazy_attribute\":\r\nParameter \"user__password\" should be declared explicitly via indirect or in function itself\r\n______________________________________________________________________________________ ERROR collecting tests/test_postgen_dependencies.py ______________________________________________________________________________________\r\nIn function \"test_depends_on\":\r\nParameter \"foo__expected\" should be declared explicitly via indirect or in function itself\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/79", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/79/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/79/events", "html_url": "https://github.com/pytest-dev/pytest-factoryboy/issues/79", "id": 462592242, "node_id": "MDU6SXNzdWU0NjI1OTIyNDI=", "number": 79, "title": "CI is failing since pytest-cov is not pegged and requires pytest > 3.6", "user": {"login": "asfaltboy", "id": 321520, "node_id": "MDQ6VXNlcjMyMTUyMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/321520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asfaltboy", "html_url": "https://github.com/asfaltboy", "followers_url": "https://api.github.com/users/asfaltboy/followers", "following_url": "https://api.github.com/users/asfaltboy/following{/other_user}", "gists_url": "https://api.github.com/users/asfaltboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/asfaltboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asfaltboy/subscriptions", "organizations_url": "https://api.github.com/users/asfaltboy/orgs", "repos_url": "https://api.github.com/users/asfaltboy/repos", "events_url": "https://api.github.com/users/asfaltboy/events{/privacy}", "received_events_url": "https://api.github.com/users/asfaltboy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-01T08:51:58Z", "updated_at": "2019-07-03T11:50:11Z", "closed_at": "2019-07-03T11:50:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As seen in travis fails here:\r\nhttps://travis-ci.org/pytest-dev/pytest-factoryboy/jobs/552058354\r\n\r\nSupport drop of pytest < 3.6 is mentioned in pytest-cov release notes here: https://github.com/pytest-dev/pytest-cov/blob/master/CHANGELOG.rst#260-2018-09-03\r\n\r\nWe can either peg pytest-cov in our https://github.com/pytest-dev/pytest-factoryboy/blob/fca00b664bbc8ba238ab500612080cd11a94dcb8/requirements-testing.txt#L3 to e.g `pytest-cov<2.6` ; or, we can drop support for pytest < 3.6 as well, in our travis/tox configurations.\r\n\r\nSince last release was a while ago, I lean towards the latter, with a 2.1 release noting this breaking change.\r\n\r\nWhat say you @pytest-dev ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/77", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/77/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/77/events", "html_url": "https://github.com/pytest-dev/pytest-factoryboy/issues/77", "id": 462265400, "node_id": "MDU6SXNzdWU0NjIyNjU0MDA=", "number": 77, "title": "AttributeError: 'PytestPluginManager' object has no attribute 'addhooks'", "user": {"login": "ohing504", "id": 10616590, "node_id": "MDQ6VXNlcjEwNjE2NTkw", "avatar_url": "https://avatars3.githubusercontent.com/u/10616590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ohing504", "html_url": "https://github.com/ohing504", "followers_url": "https://api.github.com/users/ohing504/followers", "following_url": "https://api.github.com/users/ohing504/following{/other_user}", "gists_url": "https://api.github.com/users/ohing504/gists{/gist_id}", "starred_url": "https://api.github.com/users/ohing504/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ohing504/subscriptions", "organizations_url": "https://api.github.com/users/ohing504/orgs", "repos_url": "https://api.github.com/users/ohing504/repos", "events_url": "https://api.github.com/users/ohing504/events{/privacy}", "received_events_url": "https://api.github.com/users/ohing504/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-06-29T04:50:43Z", "updated_at": "2019-07-03T11:51:01Z", "closed_at": "2019-07-03T11:51:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "'addhooks' attribute of PytestPluginManager is removed at [pytest 5.0.0](https://github.com/pytest-dev/pytest/commit/7513d87b153b67f6c1c6a8f491876bc0c7eb2e62).\r\n\r\nBecause of this, `add_hookspecs = getattr(pluginmanager, 'add_hookspecs',  pluginmanager.addhooks)` does not work (#16). It occur following error.\r\n\r\n```text\r\nTraceback (most recent call last):\r\n  File \"/Users/ohing/.virtualenvs/django-drf-project-template-Kk8KycnX/bin/pytest\", line 10, in <module>\r\n    sys.exit(main())\r\n  File \"/Users/ohing/.virtualenvs/django-drf-project-template-Kk8KycnX/lib/python3.7/site-packages/_pytest/config/__init__.py\", line 55, in main\r\n    config = _prepareconfig(args, plugins)\r\n  File \"/Users/ohing/.virtualenvs/django-drf-project-template-Kk8KycnX/lib/python3.7/site-packages/_pytest/config/__init__.py\", line 200, in _prepareconfig\r\n    pluginmanager=pluginmanager, args=args\r\n  File \"/Users/ohing/.virtualenvs/django-drf-project-template-Kk8KycnX/lib/python3.7/site-packages/pluggy/hooks.py\", line 289, in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n  File \"/Users/ohing/.virtualenvs/django-drf-project-template-Kk8KycnX/lib/python3.7/site-packages/pluggy/manager.py\", line 87, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \"/Users/ohing/.virtualenvs/django-drf-project-template-Kk8KycnX/lib/python3.7/site-packages/pluggy/manager.py\", line 81, in <lambda>\r\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n  File \"/Users/ohing/.virtualenvs/django-drf-project-template-Kk8KycnX/lib/python3.7/site-packages/pluggy/callers.py\", line 203, in _multicall\r\n    gen.send(outcome)\r\n  File \"/Users/ohing/.virtualenvs/django-drf-project-template-Kk8KycnX/lib/python3.7/site-packages/_pytest/helpconfig.py\", line 89, in pytest_cmdline_parse\r\n    config = outcome.get_result()\r\n  File \"/Users/ohing/.virtualenvs/django-drf-project-template-Kk8KycnX/lib/python3.7/site-packages/pluggy/callers.py\", line 80, in get_result\r\n    raise ex[1].with_traceback(ex[2])\r\n  File \"/Users/ohing/.virtualenvs/django-drf-project-template-Kk8KycnX/lib/python3.7/site-packages/pluggy/callers.py\", line 187, in _multicall\r\n    res = hook_impl.function(*args)\r\n  File \"/Users/ohing/.virtualenvs/django-drf-project-template-Kk8KycnX/lib/python3.7/site-packages/_pytest/config/__init__.py\", line 661, in pytest_cmdline_parse\r\n    self.parse(args)\r\n  File \"/Users/ohing/.virtualenvs/django-drf-project-template-Kk8KycnX/lib/python3.7/site-packages/_pytest/config/__init__.py\", line 869, in parse\r\n    self._preparse(args, addopts=addopts)\r\n  File \"/Users/ohing/.virtualenvs/django-drf-project-template-Kk8KycnX/lib/python3.7/site-packages/_pytest/config/__init__.py\", line 815, in _preparse\r\n    self.pluginmanager.load_setuptools_entrypoints(\"pytest11\")\r\n  File \"/Users/ohing/.virtualenvs/django-drf-project-template-Kk8KycnX/lib/python3.7/site-packages/pluggy/manager.py\", line 293, in load_setuptools_entrypoints\r\n    self.register(plugin, name=ep.name)\r\n  File \"/Users/ohing/.virtualenvs/django-drf-project-template-Kk8KycnX/lib/python3.7/site-packages/_pytest/config/__init__.py\", line 302, in register\r\n    ret = super().register(plugin, name)\r\n  File \"/Users/ohing/.virtualenvs/django-drf-project-template-Kk8KycnX/lib/python3.7/site-packages/pluggy/manager.py\", line 121, in register\r\n    hook._maybe_apply_history(hookimpl)\r\n  File \"/Users/ohing/.virtualenvs/django-drf-project-template-Kk8KycnX/lib/python3.7/site-packages/pluggy/hooks.py\", line 336, in _maybe_apply_history\r\n    res = self._hookexec(self, [method], kwargs)\r\n  File \"/Users/ohing/.virtualenvs/django-drf-project-template-Kk8KycnX/lib/python3.7/site-packages/pluggy/manager.py\", line 87, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \"/Users/ohing/.virtualenvs/django-drf-project-template-Kk8KycnX/lib/python3.7/site-packages/pluggy/manager.py\", line 81, in <lambda>\r\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n  File \"/Users/ohing/.virtualenvs/django-drf-project-template-Kk8KycnX/lib/python3.7/site-packages/pluggy/callers.py\", line 208, in _multicall\r\n    return outcome.get_result()\r\n  File \"/Users/ohing/.virtualenvs/django-drf-project-template-Kk8KycnX/lib/python3.7/site-packages/pluggy/callers.py\", line 80, in get_result\r\n    raise ex[1].with_traceback(ex[2])\r\n  File \"/Users/ohing/.virtualenvs/django-drf-project-template-Kk8KycnX/lib/python3.7/site-packages/pluggy/callers.py\", line 187, in _multicall\r\n    res = hook_impl.function(*args)\r\n  File \"/Users/ohing/.virtualenvs/django-drf-project-template-Kk8KycnX/lib/python3.7/site-packages/pytest_factoryboy/plugin.py\", line 117, in pytest_addhooks\r\n    add_hookspecs = getattr(pluginmanager, 'add_hookspecs',  pluginmanager.addhooks)\r\nAttributeError: 'PytestPluginManager' object has no attribute 'addhooks'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/71", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/71/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/71/events", "html_url": "https://github.com/pytest-dev/pytest-factoryboy/issues/71", "id": 378348122, "node_id": "MDU6SXNzdWUzNzgzNDgxMjI=", "number": 71, "title": "Release new version on pypi", "user": {"login": "Timvde", "id": 2463710, "node_id": "MDQ6VXNlcjI0NjM3MTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2463710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Timvde", "html_url": "https://github.com/Timvde", "followers_url": "https://api.github.com/users/Timvde/followers", "following_url": "https://api.github.com/users/Timvde/following{/other_user}", "gists_url": "https://api.github.com/users/Timvde/gists{/gist_id}", "starred_url": "https://api.github.com/users/Timvde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Timvde/subscriptions", "organizations_url": "https://api.github.com/users/Timvde/orgs", "repos_url": "https://api.github.com/users/Timvde/repos", "events_url": "https://api.github.com/users/Timvde/events{/privacy}", "received_events_url": "https://api.github.com/users/Timvde/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "youtux", "id": 778703, "node_id": "MDQ6VXNlcjc3ODcwMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/778703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/youtux", "html_url": "https://github.com/youtux", "followers_url": "https://api.github.com/users/youtux/followers", "following_url": "https://api.github.com/users/youtux/following{/other_user}", "gists_url": "https://api.github.com/users/youtux/gists{/gist_id}", "starred_url": "https://api.github.com/users/youtux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/youtux/subscriptions", "organizations_url": "https://api.github.com/users/youtux/orgs", "repos_url": "https://api.github.com/users/youtux/repos", "events_url": "https://api.github.com/users/youtux/events{/privacy}", "received_events_url": "https://api.github.com/users/youtux/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "youtux", "id": 778703, "node_id": "MDQ6VXNlcjc3ODcwMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/778703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/youtux", "html_url": "https://github.com/youtux", "followers_url": "https://api.github.com/users/youtux/followers", "following_url": "https://api.github.com/users/youtux/following{/other_user}", "gists_url": "https://api.github.com/users/youtux/gists{/gist_id}", "starred_url": "https://api.github.com/users/youtux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/youtux/subscriptions", "organizations_url": "https://api.github.com/users/youtux/orgs", "repos_url": "https://api.github.com/users/youtux/repos", "events_url": "https://api.github.com/users/youtux/events{/privacy}", "received_events_url": "https://api.github.com/users/youtux/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-11-07T15:50:22Z", "updated_at": "2018-11-07T17:00:24Z", "closed_at": "2018-11-07T17:00:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using pytest-factoryboy with the newest pytest currently generates a lot of deprecation warnings. This is fixed in #62, but hasn't been released on pypi yet. Could you please create a new release?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/68", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/68/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/68/events", "html_url": "https://github.com/pytest-dev/pytest-factoryboy/issues/68", "id": 358017778, "node_id": "MDU6SXNzdWUzNTgwMTc3Nzg=", "number": 68, "title": "DeprecationWarning: use of getfuncargvalue is deprecated, use getfixturevalue", "user": {"login": "villlem", "id": 5243281, "node_id": "MDQ6VXNlcjUyNDMyODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5243281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villlem", "html_url": "https://github.com/villlem", "followers_url": "https://api.github.com/users/villlem/followers", "following_url": "https://api.github.com/users/villlem/following{/other_user}", "gists_url": "https://api.github.com/users/villlem/gists{/gist_id}", "starred_url": "https://api.github.com/users/villlem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villlem/subscriptions", "organizations_url": "https://api.github.com/users/villlem/orgs", "repos_url": "https://api.github.com/users/villlem/repos", "events_url": "https://api.github.com/users/villlem/events{/privacy}", "received_events_url": "https://api.github.com/users/villlem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-07T10:47:38Z", "updated_at": "2019-01-03T05:03:51Z", "closed_at": "2018-09-17T15:36:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "With pytest 3.8 using pytest-factoryboy starts producing\r\n\r\n```\r\n/.../python3.6/site-packages/pytest_factoryboy/plugin.py:107: DeprecationWarning: getfuncargvalue is deprecated, use getfixturevalue\r\n  factoryboy_request = request.getfuncargvalue(\"factoryboy_request\")\r\n```\r\nHere (https://docs.pytest.org/en/latest/warnings.html#deprecationwarning-and-pendingdeprecationwarning) is chagne in pytest that make this issue visible again, but its till there.\r\n\r\nThis is similar/same issue as #41 . Even after rewrite latest pytest-factoryboy still uses `getfuncargvalue` in `pytest_factoryboy/plugin.py` lines 73 and 107.\r\n\r\nIf this is not intentional can prepare PR to fix this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/60", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/60/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/60/events", "html_url": "https://github.com/pytest-dev/pytest-factoryboy/issues/60", "id": 300002684, "node_id": "MDU6SXNzdWUzMDAwMDI2ODQ=", "number": 60, "title": "Multi-Table Inheritance", "user": {"login": "stevelacey", "id": 289531, "node_id": "MDQ6VXNlcjI4OTUzMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/289531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stevelacey", "html_url": "https://github.com/stevelacey", "followers_url": "https://api.github.com/users/stevelacey/followers", "following_url": "https://api.github.com/users/stevelacey/following{/other_user}", "gists_url": "https://api.github.com/users/stevelacey/gists{/gist_id}", "starred_url": "https://api.github.com/users/stevelacey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stevelacey/subscriptions", "organizations_url": "https://api.github.com/users/stevelacey/orgs", "repos_url": "https://api.github.com/users/stevelacey/repos", "events_url": "https://api.github.com/users/stevelacey/events{/privacy}", "received_events_url": "https://api.github.com/users/stevelacey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-25T06:26:26Z", "updated_at": "2018-02-27T05:29:08Z", "closed_at": "2018-02-27T05:29:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Multi-Table Inheritance is presenting some challenges with pytest-factoryboy\r\n\r\nWe currently have one-to-one's for some models so a lot of our tests are based on this concept:\r\n\r\n```py\r\ndef test_assets(db, asset, photo):\r\n    assert asset == photo.asset\r\n```\r\n\r\nBut now we're switching to MTI where the `Photo` model is a subtype of `Asset` and thus our `PhotoFactory` inherits from `AssetFactory`\r\n\r\nThis means the `asset` and `photo` fixtures generate independent asset records \u2013 `photo.asset` is still an `Asset` but that is now a \"parent record\" and is not assignable afaik\r\n\r\n@olegpidsadnyi It would be good if the above test could still pass, but I am not sure how to achieve this, I've tried throwing more `LazyFixture('asset')` in but that doesn't seem to help \u2013 any guidance?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/58", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/58/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/58/events", "html_url": "https://github.com/pytest-dev/pytest-factoryboy/issues/58", "id": 293913588, "node_id": "MDU6SXNzdWUyOTM5MTM1ODg=", "number": 58, "title": "Usage of django.ImageField leads to fixture 'dict' not found", "user": {"login": "sliverc", "id": 1047194, "node_id": "MDQ6VXNlcjEwNDcxOTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1047194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sliverc", "html_url": "https://github.com/sliverc", "followers_url": "https://api.github.com/users/sliverc/followers", "following_url": "https://api.github.com/users/sliverc/following{/other_user}", "gists_url": "https://api.github.com/users/sliverc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sliverc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sliverc/subscriptions", "organizations_url": "https://api.github.com/users/sliverc/orgs", "repos_url": "https://api.github.com/users/sliverc/repos", "events_url": "https://api.github.com/users/sliverc/events{/privacy}", "received_events_url": "https://api.github.com/users/sliverc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2018-02-02T14:53:13Z", "updated_at": "2019-09-19T09:10:18Z", "closed_at": "2018-05-29T08:27:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using a factory with a django.Image field leads to error `fixture 'dict' not found`.\r\n\r\nSample:\r\n```python\r\nfrom factory.django import DjangoModelFactory, ImageField\r\nfrom pytest_factoryboy import register\r\n\r\nfrom . import models\r\n\r\nclass AttachmentFactory(DjangoModelFactory):\r\n    path = ImageField(width=1024, height=768)\r\n\r\n    class Meta:\r\n        model = models.Attachment\r\n\r\nregister(AttachmentFactory)\r\n\r\n# this test will lead to `fixture 'dict' not found` error\r\ndef test_attachment(attachment):\r\n  # some tests\r\n```\r\n\r\nThis happens with following dependencies:\r\n```\r\nfactory-boy==2.10.0\r\npytest-factoryboy==2.0.1\r\n```\r\n\r\nThis worked without any problems with these dependencies:\r\n```\r\nfactory-boy==2.8.1\r\npytest-factoryboy==1.3.2\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/47", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/47/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/47/events", "html_url": "https://github.com/pytest-dev/pytest-factoryboy/issues/47", "id": 244388436, "node_id": "MDU6SXNzdWUyNDQzODg0MzY=", "number": 47, "title": "Errors with factory_boy master: 'FactoryOptions' object has no attribute 'postgen_declarations'", "user": {"login": "blueyed", "id": 9766, "node_id": "MDQ6VXNlcjk3NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blueyed", "html_url": "https://github.com/blueyed", "followers_url": "https://api.github.com/users/blueyed/followers", "following_url": "https://api.github.com/users/blueyed/following{/other_user}", "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions", "organizations_url": "https://api.github.com/users/blueyed/orgs", "repos_url": "https://api.github.com/users/blueyed/repos", "events_url": "https://api.github.com/users/blueyed/events{/privacy}", "received_events_url": "https://api.github.com/users/blueyed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-07-20T14:43:50Z", "updated_at": "2018-02-02T13:57:52Z", "closed_at": "2018-02-02T13:57:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There are errors with `factory_boy` master:\r\n\r\n```\r\n================================================ ERRORS ================================================\r\n_______________________________ ERROR collecting tests/test_circular.py ________________________________\r\ntests/test_circular.py:50: in <module>\r\n    register(AuthorFactory)\r\n.tox/py36-pytest3/lib/python3.6/site-packages/pytest_factoryboy/fixture.py:60: in register\r\n    deps = get_deps(factory_class, model_name=model_name)\r\n.tox/py36-pytest3/lib/python3.6/site-packages/pytest_factoryboy/fixture.py:154: in get_deps\r\n    for attr, value in factory_class.declarations(factory_class._meta.postgen_declarations).items()\r\nE   AttributeError: 'FactoryOptions' object has no attribute 'postgen_declarations'\r\n___________________________ ERROR collecting tests/test_factory_fixtures.py ____________________________\r\ntests/test_factory_fixtures.py:56: in <module>\r\n    class AuthorFactory(factory.Factory):\r\n.tox/py36-pytest3/lib/python3.6/site-packages/pytest_factoryboy/fixture.py:60: in register\r\n    deps = get_deps(factory_class, model_name=model_name)\r\n.tox/py36-pytest3/lib/python3.6/site-packages/pytest_factoryboy/fixture.py:154: in get_deps\r\n    for attr, value in factory_class.declarations(factory_class._meta.postgen_declarations).items()\r\nE   AttributeError: 'FactoryOptions' object has no attribute 'postgen_declarations'\r\n_____________________________ ERROR collecting tests/test_lazy_fixture.py ______________________________\r\ntests/test_lazy_fixture.py:29: in <module>\r\n    register(UserFactory)\r\n.tox/py36-pytest3/lib/python3.6/site-packages/pytest_factoryboy/fixture.py:60: in register\r\n    deps = get_deps(factory_class, model_name=model_name)\r\n.tox/py36-pytest3/lib/python3.6/site-packages/pytest_factoryboy/fixture.py:154: in get_deps\r\n    for attr, value in factory_class.declarations(factory_class._meta.postgen_declarations).items()\r\nE   AttributeError: 'FactoryOptions' object has no attribute 'postgen_declarations'\r\n_________________________ ERROR collecting tests/test_postgen_dependencies.py __________________________\r\ntests/test_postgen_dependencies.py:23: in <module>\r\n    class FooFactory(factory.Factory):\r\n.tox/py36-pytest3/lib/python3.6/site-packages/pytest_factoryboy/fixture.py:60: in register\r\n    deps = get_deps(factory_class, model_name=model_name)\r\n.tox/py36-pytest3/lib/python3.6/site-packages/pytest_factoryboy/fixture.py:154: in get_deps\r\n    for attr, value in factory_class.declarations(factory_class._meta.postgen_declarations).items()\r\nE   AttributeError: 'FactoryOptions' object has no attribute 'postgen_declarations'\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 4 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n======================================= 4 error in 0.30 seconds ========================================\r\nERROR: InvocationError: '\u2026/Vcs/pytest-factoryboy/.tox/py36-pytest3/bin/py.test --junitxml=\u2026/Vcs/pytest-factoryboy/.tox/py36-pytest3/log/junit-py36-pytest3.xml pytest_factoryboy tests'\r\n_______________________________________________ summary ________________________________________________\r\nERROR:   py36-pytest3: commands failed\r\n```\r\n\r\nBisecting brings up the following commits (2 are skipped, since they cause a different error):\r\n\r\nhttps://github.com/FactoryBoy/factory_boy/commit/c079d87ddb8e0eeabc66762d7f8f5bb81a143ff0\r\nhttps://github.com/FactoryBoy/factory_boy/commit/e44766245e70fa102a7e1f85d3bd66c3646d271e\r\nhttps://github.com/FactoryBoy/factory_boy/commit/6f202077a5c8156fe96f8a028f883c14962f5b95\r\n\r\nLikely related to the refactoring mentioned in https://github.com/pytest-dev/pytest-factoryboy/issues/23#issuecomment-316717930.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/44", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/44/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/44/events", "html_url": "https://github.com/pytest-dev/pytest-factoryboy/issues/44", "id": 242995789, "node_id": "MDU6SXNzdWUyNDI5OTU3ODk=", "number": 44, "title": "What sorcery is this?", "user": {"login": "hellvix", "id": 16166414, "node_id": "MDQ6VXNlcjE2MTY2NDE0", "avatar_url": "https://avatars1.githubusercontent.com/u/16166414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hellvix", "html_url": "https://github.com/hellvix", "followers_url": "https://api.github.com/users/hellvix/followers", "following_url": "https://api.github.com/users/hellvix/following{/other_user}", "gists_url": "https://api.github.com/users/hellvix/gists{/gist_id}", "starred_url": "https://api.github.com/users/hellvix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hellvix/subscriptions", "organizations_url": "https://api.github.com/users/hellvix/orgs", "repos_url": "https://api.github.com/users/hellvix/repos", "events_url": "https://api.github.com/users/hellvix/events{/privacy}", "received_events_url": "https://api.github.com/users/hellvix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-14T13:22:21Z", "updated_at": "2017-07-24T09:25:55Z", "closed_at": "2017-07-24T09:25:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to make some tests and this is my first time using `pytest-factoryboy`. I would like to understand why my does my `print()` doesn't print the same for both objects. I thought they were from the same class (UserFactory).\r\n\r\n### conftest.py\r\n```\r\nfrom pytest_factoryboy import register\r\nfrom bin.tests.factories import UserFactory\r\n\r\nregister(UserFactory)\r\n```\r\n### factories.py\r\n```\r\nimport factory\r\nfrom pytest_factoryboy import register\r\nfrom faker import Factory as FakerFactory\r\nimport datetime\r\nimport pytest\r\nfrom bin import models\r\n\r\nfake = FakerFactory.create()\r\n\r\n\r\n@register\r\nclass UserFactory(factory.django.DjangoModelFactory):\r\n\r\n    class Meta:\r\n        model = models.User\r\n        django_get_or_create = ('username',)\r\n\r\n    username = factory.LazyAttribute(lambda n: fake.user_name())\r\n    email = factory.LazyAttribute(lambda n: fake.safe_email())\r\n    first_name = factory.LazyAttribute(lambda n: fake.first_name_female())\r\n    last_name = factory.LazyAttribute(lambda n: fake.last_name_female())\r\n\r\n    def __init__(self, *args, **kwargs):\r\n        super(UserFactory, self).__init__(*args, **kwargs)\r\n        self.set_password('1234')\r\n\r\n    @classmethod\r\n    def _create(cls, model_class, *args, **kwargs):\r\n        \"\"\"Override the default ``_create`` with our custom call.\"\"\"\r\n        manager = cls._get_manager(model_class)\r\n        # The default would use ``manager.create(*args, **kwargs)``\r\n        user = manager.create_user(*args, **kwargs)\r\n        user.is_active = True\r\n        user.save()\r\n        return user\r\n```\r\n### test_user.py\r\n```\r\nimport pytest\r\nfrom django.core.urlresolvers import reverse\r\nfrom django.conf import settings\r\n\r\n\r\nclass TestUser:\r\n    @pytest.mark.integration\r\n    def test_user_gets_locked_after_unsuccessful_attempts(self, db, user_factory, client):\r\n        client.get(reverse('logout'))\r\n\r\n        for _ in range(0, 10):\r\n            response = client.post(\r\n                reverse('login'),\r\n                {\r\n                    'username': user_factory.username,\r\n                    'password': 'some_wrong_password'\r\n                }\r\n            )\r\n\r\n        print(user_factory.username)\r\n        another_user = UserFactory()\r\n        print(another_user.username)\r\n\r\n        assert user_factory.profile.pwd_attempts > 9\r\n        assert not user_factory.is_active\r\n```\r\n\r\n### Ouput\r\n```\r\nbin/tests/test_user.py:27: AttributeError\r\n----------------------------- Captured stdout call -----------------------------\r\n<UserFactory for <class 'django.contrib.auth.models.User'>>\r\ntinamendoza\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/43", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/43/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/43/events", "html_url": "https://github.com/pytest-dev/pytest-factoryboy/issues/43", "id": 242979935, "node_id": "MDU6SXNzdWUyNDI5Nzk5MzU=", "number": 43, "title": "Fixture has model_facotry should be model_factory", "user": {"login": "thedrow", "id": 48936, "node_id": "MDQ6VXNlcjQ4OTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/48936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thedrow", "html_url": "https://github.com/thedrow", "followers_url": "https://api.github.com/users/thedrow/followers", "following_url": "https://api.github.com/users/thedrow/following{/other_user}", "gists_url": "https://api.github.com/users/thedrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/thedrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thedrow/subscriptions", "organizations_url": "https://api.github.com/users/thedrow/orgs", "repos_url": "https://api.github.com/users/thedrow/repos", "events_url": "https://api.github.com/users/thedrow/events{/privacy}", "received_events_url": "https://api.github.com/users/thedrow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-07-14T12:10:11Z", "updated_at": "2017-07-19T16:13:55Z", "closed_at": "2017-07-19T12:56:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "This really puzzled me. It's a typo and probably and easy fix.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/42", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/42/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/42/events", "html_url": "https://github.com/pytest-dev/pytest-factoryboy/issues/42", "id": 236048448, "node_id": "MDU6SXNzdWUyMzYwNDg0NDg=", "number": 42, "title": "Can't use SubFactory with dict as model", "user": {"login": "nguyening", "id": 1434389, "node_id": "MDQ6VXNlcjE0MzQzODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1434389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nguyening", "html_url": "https://github.com/nguyening", "followers_url": "https://api.github.com/users/nguyening/followers", "following_url": "https://api.github.com/users/nguyening/following{/other_user}", "gists_url": "https://api.github.com/users/nguyening/gists{/gist_id}", "starred_url": "https://api.github.com/users/nguyening/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nguyening/subscriptions", "organizations_url": "https://api.github.com/users/nguyening/orgs", "repos_url": "https://api.github.com/users/nguyening/repos", "events_url": "https://api.github.com/users/nguyening/events{/privacy}", "received_events_url": "https://api.github.com/users/nguyening/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-06-15T00:51:23Z", "updated_at": "2017-07-19T10:40:47Z", "closed_at": "2017-07-19T10:40:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if this is currently supported or not, but I'm not actually trying to work with objects. I'd like to use factoryboy to just generate dicts for test data:\r\n\r\n**test.py**:\r\n\r\n```python2.7\r\nimport factory\r\nimport pytest_factoryboy\r\n\r\n\r\nclass ChildFactory(factory.Factory):\r\n    class Meta:\r\n        model = dict\r\n\r\n    child_attr = 'default'\r\n\r\n\r\nclass ParentFactory(factory.Factory):\r\n    class Meta:\r\n        model = dict\r\n\r\n    child = factory.SubFactory(ChildFactory)\r\n\r\n\r\npytest_factoryboy.register(ParentFactory, 'parent')\r\n\r\n\r\ndef test_basic(parent):\r\n    assert parent.child.child_attr == 'default'\r\n```\r\n\r\n**Test output**:\r\n\r\n```\r\n$ pytest test.py\r\n========================================================================================================================================================================== test session starts ===========================================================================================================================================================================\r\nplatform linux2 -- Python 2.7.6, pytest-3.1.2, py-1.4.34, pluggy-0.4.0\r\nrootdir: /tmp, inifile:\r\nplugins: factoryboy-1.3.1\r\ncollected 1 items\r\n\r\ntest.py E\r\n\r\n================================================================================================================================================================================= ERRORS =================================================================================================================================================================================\r\n______________________________________________________________________________________________________________________________________________________________________ ERROR at setup of test_basic ______________________________________________________________________________________________________________________________________________________________________\r\nfile /tmp/test.py, line 22\r\n  def test_basic(parent):\r\nfile <string>, line 2: source code not available\r\nfile <string>, line 2: source code not available\r\nE       fixture 'dict__child_attr' not found\r\n>       available fixtures: cache, capfd, capsys, doctest_namespace, factoryboy_request, monkeypatch, parent, parent__child, parent_factory, pytestconfig, record_xml_property, recwarn, tmpdir, tmpdir_factory\r\n>       use 'pytest --fixtures [testpath]' for help on them.\r\n\r\n<string>:2\r\n======================================================================================================================================================================== 1 error in 0.02 seconds =========================================================================================================================================================================\r\n```\r\n\r\n**Output of `pip freeze`**:\r\n```\r\nfactory-boy==2.8.1\r\nFaker==0.7.17\r\ninflection==0.3.1\r\nipaddress==1.0.18\r\npy==1.4.34\r\npytest==3.1.2\r\npytest-factoryboy==1.3.1\r\npython-dateutil==2.6.0\r\nsix==1.10.0\r\n```\r\n\r\nIf this shouldn't be supported in the plugin, I'd be happy to use some other workaround that pokes through factoryboy/pytest_factoryboy internals.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/41", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/41/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/41/events", "html_url": "https://github.com/pytest-dev/pytest-factoryboy/issues/41", "id": 231965737, "node_id": "MDU6SXNzdWUyMzE5NjU3Mzc=", "number": 41, "title": "Function \"getfuncargvalue\" is deprecated.", "user": {"login": "YukSeungChan", "id": 2633103, "node_id": "MDQ6VXNlcjI2MzMxMDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/2633103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YukSeungChan", "html_url": "https://github.com/YukSeungChan", "followers_url": "https://api.github.com/users/YukSeungChan/followers", "following_url": "https://api.github.com/users/YukSeungChan/following{/other_user}", "gists_url": "https://api.github.com/users/YukSeungChan/gists{/gist_id}", "starred_url": "https://api.github.com/users/YukSeungChan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YukSeungChan/subscriptions", "organizations_url": "https://api.github.com/users/YukSeungChan/orgs", "repos_url": "https://api.github.com/users/YukSeungChan/repos", "events_url": "https://api.github.com/users/YukSeungChan/events{/privacy}", "received_events_url": "https://api.github.com/users/YukSeungChan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-29T09:02:15Z", "updated_at": "2018-02-02T13:57:03Z", "closed_at": "2018-02-02T13:57:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI use pytest == 3.1.0 and get this warning:\r\nDeprecationWarning: use of getfuncargvalue is deprecated, use getfixturevalue \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/38", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/38/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/38/events", "html_url": "https://github.com/pytest-dev/pytest-factoryboy/issues/38", "id": 210071565, "node_id": "MDU6SXNzdWUyMTAwNzE1NjU=", "number": 38, "title": "Handling of the LazyFixture in the LazyAttribute", "user": {"login": "olegpidsadnyi", "id": 2608181, "node_id": "MDQ6VXNlcjI2MDgxODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2608181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olegpidsadnyi", "html_url": "https://github.com/olegpidsadnyi", "followers_url": "https://api.github.com/users/olegpidsadnyi/followers", "following_url": "https://api.github.com/users/olegpidsadnyi/following{/other_user}", "gists_url": "https://api.github.com/users/olegpidsadnyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/olegpidsadnyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olegpidsadnyi/subscriptions", "organizations_url": "https://api.github.com/users/olegpidsadnyi/orgs", "repos_url": "https://api.github.com/users/olegpidsadnyi/repos", "events_url": "https://api.github.com/users/olegpidsadnyi/events{/privacy}", "received_events_url": "https://api.github.com/users/olegpidsadnyi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-24T15:06:44Z", "updated_at": "2018-02-13T13:10:04Z", "closed_at": "2018-02-13T13:10:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Due to unsorted dict that Factory.attributes returns the evaluation of the LazyFixture is not yet done for the LazyAttribute even it is declared above the latter.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/37", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/37/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/37/events", "html_url": "https://github.com/pytest-dev/pytest-factoryboy/issues/37", "id": 209799914, "node_id": "MDU6SXNzdWUyMDk3OTk5MTQ=", "number": 37, "title": "Allow passing fixtures that pytest-factory's fixtures should depend on", "user": {"login": "underyx", "id": 1060436, "node_id": "MDQ6VXNlcjEwNjA0MzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1060436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/underyx", "html_url": "https://github.com/underyx", "followers_url": "https://api.github.com/users/underyx/followers", "following_url": "https://api.github.com/users/underyx/following{/other_user}", "gists_url": "https://api.github.com/users/underyx/gists{/gist_id}", "starred_url": "https://api.github.com/users/underyx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/underyx/subscriptions", "organizations_url": "https://api.github.com/users/underyx/orgs", "repos_url": "https://api.github.com/users/underyx/repos", "events_url": "https://api.github.com/users/underyx/events{/privacy}", "received_events_url": "https://api.github.com/users/underyx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-02-23T15:48:02Z", "updated_at": "2018-02-13T13:08:06Z", "closed_at": "2018-02-13T13:08:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following fixtures:\r\n\r\n```python\r\n@pytest.yield_fixture(scope='session')\r\ndef db_url():\r\n    with testing.postgresql.Postgresql() as db:\r\n        yield db.url()\r\n\r\n\r\n@pytest.yield_fixture\r\ndef db(db_url):\r\n    \"\"\"Create a database session.\"\"\"\r\n    engine = sqlalchemy.create_engine(db_url)\r\n\r\n    models.metadata.create_all(engine)\r\n\r\n    factories.Session.configure(bind=engine)\r\n    session = factories.Session()  # creates the thread local session used by factories\r\n    yield session\r\n    session.rollback()\r\n    factories.Session.remove()  # disables the thread local session\r\n\r\n    models.metadata.drop_all(engine)\r\n\r\n\r\npytest_factoryboy.register(factories.BookFactory)\r\n```\r\n\r\nMy problem now is that trying to use the `book_factory` fixture on its own doesn't work; I need the `db` fixture to open a session the factory can use, first.\r\n\r\nI'd like to be able to specify something like\r\n\r\n```python\r\npytest_factoryboy.register(factories.BookFactory, depends_on=['db'])\r\n```\r\n\r\nwhich would have the same effect as the manual implementation of\r\n\r\n```python\r\ndef book_factory(db):\r\n    # \u2026\r\n```\r\n\r\nwould.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/34", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/34/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/34/events", "html_url": "https://github.com/pytest-dev/pytest-factoryboy/issues/34", "id": 186340248, "node_id": "MDU6SXNzdWUxODYzNDAyNDg=", "number": 34, "title": "What happened to the docs?", "user": {"login": "asfaltboy", "id": 321520, "node_id": "MDQ6VXNlcjMyMTUyMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/321520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asfaltboy", "html_url": "https://github.com/asfaltboy", "followers_url": "https://api.github.com/users/asfaltboy/followers", "following_url": "https://api.github.com/users/asfaltboy/following{/other_user}", "gists_url": "https://api.github.com/users/asfaltboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/asfaltboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asfaltboy/subscriptions", "organizations_url": "https://api.github.com/users/asfaltboy/orgs", "repos_url": "https://api.github.com/users/asfaltboy/repos", "events_url": "https://api.github.com/users/asfaltboy/events{/privacy}", "received_events_url": "https://api.github.com/users/asfaltboy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2016-10-31T17:06:12Z", "updated_at": "2016-11-01T06:20:40Z", "closed_at": "2016-10-31T22:05:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried to look at the source (for a PR) by clicking \"view source\" in [rtd.io][1], however has stumbled into a 404 here: https://github.com/pytest-dev/pytest-factoryboy/blob/master/index.rst.\r\n\r\nThe [rtd build job][2] also fails for apparently the same reason.\r\n\r\n[1]: http://pytest-factoryboy.readthedocs.io/en/latest/\r\n[2]: https://readthedocs.org/projects/pytest-factoryboy/builds/4527380/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/31", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/31/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/31/events", "html_url": "https://github.com/pytest-dev/pytest-factoryboy/issues/31", "id": 178210553, "node_id": "MDU6SXNzdWUxNzgyMTA1NTM=", "number": 31, "title": "scope of fixtures created by register()?", "user": {"login": "pouledodue", "id": 745437, "node_id": "MDQ6VXNlcjc0NTQzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/745437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pouledodue", "html_url": "https://github.com/pouledodue", "followers_url": "https://api.github.com/users/pouledodue/followers", "following_url": "https://api.github.com/users/pouledodue/following{/other_user}", "gists_url": "https://api.github.com/users/pouledodue/gists{/gist_id}", "starred_url": "https://api.github.com/users/pouledodue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pouledodue/subscriptions", "organizations_url": "https://api.github.com/users/pouledodue/orgs", "repos_url": "https://api.github.com/users/pouledodue/repos", "events_url": "https://api.github.com/users/pouledodue/events{/privacy}", "received_events_url": "https://api.github.com/users/pouledodue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-20T23:54:12Z", "updated_at": "2018-02-13T13:08:49Z", "closed_at": "2018-02-13T13:08:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "when I do\n\n```\nregister(AuthorFactory)\n```\n\nit creates fixture `author_factory`\n\nmy question is how can I specify a `scope='session'` to the fixture ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/29", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/29/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/29/events", "html_url": "https://github.com/pytest-dev/pytest-factoryboy/issues/29", "id": 173952175, "node_id": "MDU6SXNzdWUxNzM5NTIxNzU=", "number": 29, "title": "pytest-factoryboy do not work with pytest 3.0", "user": {"login": "prmtl", "id": 1519363, "node_id": "MDQ6VXNlcjE1MTkzNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1519363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prmtl", "html_url": "https://github.com/prmtl", "followers_url": "https://api.github.com/users/prmtl/followers", "following_url": "https://api.github.com/users/prmtl/following{/other_user}", "gists_url": "https://api.github.com/users/prmtl/gists{/gist_id}", "starred_url": "https://api.github.com/users/prmtl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prmtl/subscriptions", "organizations_url": "https://api.github.com/users/prmtl/orgs", "repos_url": "https://api.github.com/users/prmtl/repos", "events_url": "https://api.github.com/users/prmtl/events{/privacy}", "received_events_url": "https://api.github.com/users/prmtl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-08-30T07:51:46Z", "updated_at": "2016-11-16T11:17:14Z", "closed_at": "2016-11-16T11:17:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When trying to use `pytest-factoryboy` with newest pytest, exception occurs:\n\n```\n____________________________________________________________________ ERROR at setup of test_asdf ____________________________________________________________________\n\nrequest = <SubRequest 'xyz' for <Function 'test_asdf'>>, factory_name = 'xyz_factory'\n\n    def model_fixture(request, factory_name):\n        \"\"\"Model fixture implementation.\"\"\"\n        factoryboy_request = request.getfuncargvalue(\"factoryboy_request\")\n\n        # Try to evaluate as much post-generation dependencies as possible\n        factoryboy_request.evaluate(request)\n\n        factory_class = request.getfuncargvalue(factory_name)\n        prefix = \"\".join((request.fixturename, SEPARATOR))\n        data = {}\n        for argname in request._fixturedef.argnames:\n            if argname.startswith(prefix) and argname[len(prefix):] not in factory_class._meta.postgen_declarations:\n                data[argname[len(prefix):]] = request.getfuncargvalue(argname)\n\n        class Factory(factory_class):\n\n            @classmethod\n            def attributes(cls, create=False, extra=None):\n                return dict(\n                    (key, evaluate(request, value))\n                    for key, value in super(Factory, cls).attributes(create=create, extra=extra).items()\n                    if key in data\n                )\n\n        Factory._meta.postgen_declarations = {}\n        Factory._meta.exclude = [value for value in Factory._meta.exclude if value in data]\n\n        # Extract post-generation context\n        post_decls = []\n        if factory_class._meta.postgen_declarations:\n            for attr, decl in sorted(factory_class._meta.postgen_declarations.items()):\n                post_decls.append((attr, decl, decl.extract(attr, data)))\n\n        # Create model fixture instance\n        instance = Factory(**data)\n        request._fixturedef.cached_result = (instance, None, None)\n>       request._fixturedefs[request.fixturename] = request._fixturedef\nE       AttributeError: SubRequest instance has no attribute '_fixturedefs'\n\n<snip>/lib/python2.7/site-packages/pytest_factoryboy/fixture.py:200: AttributeError\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/28", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/28/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/28/events", "html_url": "https://github.com/pytest-dev/pytest-factoryboy/issues/28", "id": 173385203, "node_id": "MDU6SXNzdWUxNzMzODUyMDM=", "number": 28, "title": "parametrize + pytest-bdd + pytest-factoryboy problem?", "user": {"login": "pouledodue", "id": 745437, "node_id": "MDQ6VXNlcjc0NTQzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/745437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pouledodue", "html_url": "https://github.com/pouledodue", "followers_url": "https://api.github.com/users/pouledodue/followers", "following_url": "https://api.github.com/users/pouledodue/following{/other_user}", "gists_url": "https://api.github.com/users/pouledodue/gists{/gist_id}", "starred_url": "https://api.github.com/users/pouledodue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pouledodue/subscriptions", "organizations_url": "https://api.github.com/users/pouledodue/orgs", "repos_url": "https://api.github.com/users/pouledodue/repos", "events_url": "https://api.github.com/users/pouledodue/events{/privacy}", "received_events_url": "https://api.github.com/users/pouledodue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-26T07:14:34Z", "updated_at": "2016-08-26T20:49:16Z", "closed_at": "2016-08-26T20:49:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\nI try this and 'navigator' parameter is not overrided by the 'yoshi' fixture...\nIs this valid code?\n\n```\n@pytest.mark.parametrize('navigator', [LazyFixture(\"yoshi\")])\n@given('I am on the Registration Page')\ndef i_am_on_the_registration_page(navigator):\n    \"\"\"I am on the Registration Page.\"\"\"\n    navigator.load_index().login().load_registration()\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/27", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/27/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/27/events", "html_url": "https://github.com/pytest-dev/pytest-factoryboy/issues/27", "id": 167376780, "node_id": "MDU6SXNzdWUxNjczNzY3ODA=", "number": 27, "title": "flake8-3.0.0 breaks pytest-factoryboy", "user": {"login": "dedsm", "id": 263208, "node_id": "MDQ6VXNlcjI2MzIwOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/263208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dedsm", "html_url": "https://github.com/dedsm", "followers_url": "https://api.github.com/users/dedsm/followers", "following_url": "https://api.github.com/users/dedsm/following{/other_user}", "gists_url": "https://api.github.com/users/dedsm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dedsm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dedsm/subscriptions", "organizations_url": "https://api.github.com/users/dedsm/orgs", "repos_url": "https://api.github.com/users/dedsm/repos", "events_url": "https://api.github.com/users/dedsm/events{/privacy}", "received_events_url": "https://api.github.com/users/dedsm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-25T14:16:31Z", "updated_at": "2016-07-27T11:47:56Z", "closed_at": "2016-07-27T11:47:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "when having pytest-factoryboy _and_ flake8-3.0.0 packages installed in the environment, pytest-factoryboy will fail registering as a pytest plugin.\n\ncommon scenario when using pytest-flake8 for instance.\n\nI'll try to see the reason but maybe it's easy enough for someone with more knowledge in the project\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/20", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/20/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/20/events", "html_url": "https://github.com/pytest-dev/pytest-factoryboy/issues/20", "id": 142688958, "node_id": "MDU6SXNzdWUxNDI2ODg5NTg=", "number": 20, "title": "Register sub-classed factories as instance fixtures?", "user": {"login": "pydolan", "id": 467780, "node_id": "MDQ6VXNlcjQ2Nzc4MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/467780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pydolan", "html_url": "https://github.com/pydolan", "followers_url": "https://api.github.com/users/pydolan/followers", "following_url": "https://api.github.com/users/pydolan/following{/other_user}", "gists_url": "https://api.github.com/users/pydolan/gists{/gist_id}", "starred_url": "https://api.github.com/users/pydolan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pydolan/subscriptions", "organizations_url": "https://api.github.com/users/pydolan/orgs", "repos_url": "https://api.github.com/users/pydolan/repos", "events_url": "https://api.github.com/users/pydolan/events{/privacy}", "received_events_url": "https://api.github.com/users/pydolan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "olegpidsadnyi", "id": 2608181, "node_id": "MDQ6VXNlcjI2MDgxODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2608181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olegpidsadnyi", "html_url": "https://github.com/olegpidsadnyi", "followers_url": "https://api.github.com/users/olegpidsadnyi/followers", "following_url": "https://api.github.com/users/olegpidsadnyi/following{/other_user}", "gists_url": "https://api.github.com/users/olegpidsadnyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/olegpidsadnyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olegpidsadnyi/subscriptions", "organizations_url": "https://api.github.com/users/olegpidsadnyi/orgs", "repos_url": "https://api.github.com/users/olegpidsadnyi/repos", "events_url": "https://api.github.com/users/olegpidsadnyi/events{/privacy}", "received_events_url": "https://api.github.com/users/olegpidsadnyi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "olegpidsadnyi", "id": 2608181, "node_id": "MDQ6VXNlcjI2MDgxODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2608181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olegpidsadnyi", "html_url": "https://github.com/olegpidsadnyi", "followers_url": "https://api.github.com/users/olegpidsadnyi/followers", "following_url": "https://api.github.com/users/olegpidsadnyi/following{/other_user}", "gists_url": "https://api.github.com/users/olegpidsadnyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/olegpidsadnyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olegpidsadnyi/subscriptions", "organizations_url": "https://api.github.com/users/olegpidsadnyi/orgs", "repos_url": "https://api.github.com/users/olegpidsadnyi/repos", "events_url": "https://api.github.com/users/olegpidsadnyi/events{/privacy}", "received_events_url": "https://api.github.com/users/olegpidsadnyi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2016-03-22T15:39:15Z", "updated_at": "2016-04-17T01:12:46Z", "closed_at": "2016-04-17T01:12:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given the following factories:\n\n``` python\nclass BookFactory(factory.django.DjangoModelFactory):\n    title = factory.LazyAttribute(lambda x: faker.sentence(nb_words=4))\n    pub_date = factory.LazyAttribute(lambda x: faker.date())\n\n    class Meta:\n        model = Book\n\n    author = factory.SubFactory(AuthorFactory)\n\nclass RedBookFactory(BookFactory):\n    pass\n\nclass NovelFactory(BookFactory):\n    pass\n```\n\nI was a bit confused at first as to why `red_book` and `novel` fixtures were not being created, but after looking at the code, it looks like the factory's model drives these instance fixtures.\n\nAny interest in creating these fixtures?  If not, what's the reasoning? \n\nIf anything, maybe add this example to the documentation, showing that the factory fixtures register (`red_book_factory` and `novel_factory`) but not the instance fixtures (`red_book` and `novel`).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/18", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/18/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/18/events", "html_url": "https://github.com/pytest-dev/pytest-factoryboy/issues/18", "id": 128012637, "node_id": "MDU6SXNzdWUxMjgwMTI2Mzc=", "number": 18, "title": "Exception when using pytest-factoryboy with pytest-xdist", "user": {"login": "thedrow", "id": 48936, "node_id": "MDQ6VXNlcjQ4OTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/48936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thedrow", "html_url": "https://github.com/thedrow", "followers_url": "https://api.github.com/users/thedrow/followers", "following_url": "https://api.github.com/users/thedrow/following{/other_user}", "gists_url": "https://api.github.com/users/thedrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/thedrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thedrow/subscriptions", "organizations_url": "https://api.github.com/users/thedrow/orgs", "repos_url": "https://api.github.com/users/thedrow/repos", "events_url": "https://api.github.com/users/thedrow/events{/privacy}", "received_events_url": "https://api.github.com/users/thedrow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 196274800, "node_id": "MDU6TGFiZWwxOTYyNzQ4MDA=", "url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-21T20:29:25Z", "updated_at": "2017-02-24T15:04:54Z", "closed_at": "2017-02-24T15:04:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I run py.test -n auto and got this:\n\n```\n    @pytest.mark.tryfirst\n    def pytest_runtest_call(item):\n        \"\"\"Before the test item is called.\"\"\"\n        try:\n            request = item._request\n        except AttributeError:\n            # pytest-pep8 plugin passes Pep8Item here during tests.\n            return\n        factoryboy_request = request.getfuncargvalue(\"factoryboy_request\")\n        factoryboy_request.evaluate()\n        factoryboy_request.is_finalized = True\n>       request.config.hook.pytest_factoryboy_done(request=request)\nE       AttributeError: _HookRelay instance has no attribute 'pytest_factoryboy_done'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/16", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/16/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/16/events", "html_url": "https://github.com/pytest-dev/pytest-factoryboy/issues/16", "id": 126075718, "node_id": "MDU6SXNzdWUxMjYwNzU3MTg=", "number": 16, "title": "Causes pytest warning re deprecated pluginmanager.addhooks method", "user": {"login": "carljm", "id": 61586, "node_id": "MDQ6VXNlcjYxNTg2", "avatar_url": "https://avatars0.githubusercontent.com/u/61586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carljm", "html_url": "https://github.com/carljm", "followers_url": "https://api.github.com/users/carljm/followers", "following_url": "https://api.github.com/users/carljm/following{/other_user}", "gists_url": "https://api.github.com/users/carljm/gists{/gist_id}", "starred_url": "https://api.github.com/users/carljm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carljm/subscriptions", "organizations_url": "https://api.github.com/users/carljm/orgs", "repos_url": "https://api.github.com/users/carljm/repos", "events_url": "https://api.github.com/users/carljm/events{/privacy}", "received_events_url": "https://api.github.com/users/carljm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-12T01:21:38Z", "updated_at": "2016-02-04T10:19:52Z", "closed_at": "2016-02-04T10:19:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is with py.test 2.8.5.\n\nThe py.test warning is \"use pluginmanager.add_hookspecs instead of deprecated addhooks() method.\"\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/15", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/15/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/15/events", "html_url": "https://github.com/pytest-dev/pytest-factoryboy/issues/15", "id": 125784828, "node_id": "MDU6SXNzdWUxMjU3ODQ4Mjg=", "number": 15, "title": "Impossible to override create param for model fixture", "user": {"login": "Glueon", "id": 11168720, "node_id": "MDQ6VXNlcjExMTY4NzIw", "avatar_url": "https://avatars3.githubusercontent.com/u/11168720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Glueon", "html_url": "https://github.com/Glueon", "followers_url": "https://api.github.com/users/Glueon/followers", "following_url": "https://api.github.com/users/Glueon/following{/other_user}", "gists_url": "https://api.github.com/users/Glueon/gists{/gist_id}", "starred_url": "https://api.github.com/users/Glueon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Glueon/subscriptions", "organizations_url": "https://api.github.com/users/Glueon/orgs", "repos_url": "https://api.github.com/users/Glueon/repos", "events_url": "https://api.github.com/users/Glueon/events{/privacy}", "received_events_url": "https://api.github.com/users/Glueon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 196274797, "node_id": "MDU6TGFiZWwxOTYyNzQ3OTc=", "url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "olegpidsadnyi", "id": 2608181, "node_id": "MDQ6VXNlcjI2MDgxODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2608181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olegpidsadnyi", "html_url": "https://github.com/olegpidsadnyi", "followers_url": "https://api.github.com/users/olegpidsadnyi/followers", "following_url": "https://api.github.com/users/olegpidsadnyi/following{/other_user}", "gists_url": "https://api.github.com/users/olegpidsadnyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/olegpidsadnyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olegpidsadnyi/subscriptions", "organizations_url": "https://api.github.com/users/olegpidsadnyi/orgs", "repos_url": "https://api.github.com/users/olegpidsadnyi/repos", "events_url": "https://api.github.com/users/olegpidsadnyi/events{/privacy}", "received_events_url": "https://api.github.com/users/olegpidsadnyi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "olegpidsadnyi", "id": 2608181, "node_id": "MDQ6VXNlcjI2MDgxODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2608181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olegpidsadnyi", "html_url": "https://github.com/olegpidsadnyi", "followers_url": "https://api.github.com/users/olegpidsadnyi/followers", "following_url": "https://api.github.com/users/olegpidsadnyi/following{/other_user}", "gists_url": "https://api.github.com/users/olegpidsadnyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/olegpidsadnyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olegpidsadnyi/subscriptions", "organizations_url": "https://api.github.com/users/olegpidsadnyi/orgs", "repos_url": "https://api.github.com/users/olegpidsadnyi/repos", "events_url": "https://api.github.com/users/olegpidsadnyi/events{/privacy}", "received_events_url": "https://api.github.com/users/olegpidsadnyi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2016-01-09T22:15:23Z", "updated_at": "2016-04-20T06:53:01Z", "closed_at": "2016-04-20T06:53:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys. Thanks for the work you've done. I use this project quite often and there is a little problem.\n\nIt's possible to pass in `create=True` param to `register` function to override default behavior of a factory fixture.\n\nUnfortunately it does not affect a model fixture and it's impossible to override this behavior.  Quite often my tests need in-db model instance. Right now I need to do:\n\n```\ndef test_my_test(some_obj):\n     some_obj.save()\n     ...\n```\n\nThis is a little be annoying and to me eliminates the benefit of that fixture. Because I can achieve the same goal with:\n\n```\ndef test_my_tests(some_obj_factory):\n     some_obj = some_obj_factory() \n```\n\nIt would very convenient to be able not to call `save` each time before the test.\n\nIt is very strange why object is not saved in DB.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/12", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/12/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-factoryboy/issues/12/events", "html_url": "https://github.com/pytest-dev/pytest-factoryboy/issues/12", "id": 96556623, "node_id": "MDU6SXNzdWU5NjU1NjYyMw==", "number": 12, "title": "fixture 'author' not found", "user": {"login": "qari", "id": 1835807, "node_id": "MDQ6VXNlcjE4MzU4MDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1835807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qari", "html_url": "https://github.com/qari", "followers_url": "https://api.github.com/users/qari/followers", "following_url": "https://api.github.com/users/qari/following{/other_user}", "gists_url": "https://api.github.com/users/qari/gists{/gist_id}", "starred_url": "https://api.github.com/users/qari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qari/subscriptions", "organizations_url": "https://api.github.com/users/qari/orgs", "repos_url": "https://api.github.com/users/qari/repos", "events_url": "https://api.github.com/users/qari/events{/privacy}", "received_events_url": "https://api.github.com/users/qari/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-07-22T12:26:22Z", "updated_at": "2015-07-28T07:25:26Z", "closed_at": "2015-07-28T07:25:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\nimport factory\nfrom pytest_factoryboy import register\n\n@register\nclass AuthorFactory(factory.Factory):\n\n    class Meta:\n        model = Author\n\n    name = \"Charles Dickens\"\n\n\ndef test_model_fixture(author):\n    assert author.name == \"Charles Dickens\"\n```\n\nGet error '\"author\" is not found', only works with author_factory\n", "performed_via_github_app": null, "score": 1.0}]}