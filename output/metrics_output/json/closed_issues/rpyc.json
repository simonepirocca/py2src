{"total_count": 269, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/394", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/394/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/394/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/394/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/394", "id": 664081134, "node_id": "MDU6SXNzdWU2NjQwODExMzQ=", "number": 394, "title": "CSV Writer causes thread to hang until join is called", "user": {"login": "darronmcnutt", "id": 22875904, "node_id": "MDQ6VXNlcjIyODc1OTA0", "avatar_url": "https://avatars0.githubusercontent.com/u/22875904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darronmcnutt", "html_url": "https://github.com/darronmcnutt", "followers_url": "https://api.github.com/users/darronmcnutt/followers", "following_url": "https://api.github.com/users/darronmcnutt/following{/other_user}", "gists_url": "https://api.github.com/users/darronmcnutt/gists{/gist_id}", "starred_url": "https://api.github.com/users/darronmcnutt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darronmcnutt/subscriptions", "organizations_url": "https://api.github.com/users/darronmcnutt/orgs", "repos_url": "https://api.github.com/users/darronmcnutt/repos", "events_url": "https://api.github.com/users/darronmcnutt/events{/privacy}", "received_events_url": "https://api.github.com/users/darronmcnutt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-22T22:11:46Z", "updated_at": "2020-07-23T03:15:22Z", "closed_at": "2020-07-23T03:15:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "The monitorAppCPU method shown on the server side below hangs when calling self._csvWriter, which is a callback to the client. I have attempted both a \"normal\" and async callback as outlined in the documentation. When running a local version of this app there are no thread-related issues. I have seen two outcomes:\r\n\r\n1) The app hangs at self._csvWriter([datetime.now(), time_elapsed, self._processName, cpu_pct]) until the thread is joined\r\n2) The app begins all calls to self._csvWriter (placing them on a stack), but does not finish them until join is called\r\n\r\nExpected outcome:\r\ncalls to csvWriter run to completion when called, writing to the client-side disk in real time\r\n\r\n**Excerpt from client code:**\r\n\r\n\r\n```\r\ndef writeCSV(csv_writer, row):\r\n    csv_writer.writerow(row)\r\n\r\nwith open(f'{output_folder}\\\\{output_file_name}.csv', mode='a', newline='') as csv_file:\r\n    csv_writer = csv.writer(csv_file, delimiter=',', quotechar='\"', quoting=csv.QUOTE_MINIMAL)\r\n    csv_writer.writerow(['Timestamp', 'Time Elapsed', 'Process Name', '% CPU'])\r\n    write_csv = functools.partial(writeCSV, csv_writer)\r\n\r\n    pm = conn.root.ProcessMonitor('Teams.exe', write_csv, False)\r\n    pm.start()\r\n    time.sleep(30)\r\n    pm.stop()\r\n\r\n```\r\n**Excerpt from server code**\r\n\r\n        def exposed_start(self, duration: int = 0):\r\n            # Create new thread and clear stats\r\n            self._monitorThread = threading.Thread(target=self.monitorAppCPU, daemon=True)\r\n            self._CPUUsage = []\r\n            self._timeElapsed = []\r\n\r\n            self._outputFileName = f'ProcessMonitor{datetime.now().strftime(\"%Y%m%d-%H%M%S\")}'\r\n\r\n            self._monitorThread.start()\r\n\r\n            if duration > 0:\r\n                time.sleep(duration)\r\n                self.exposed_stop()\r\n\r\n        def monitorAppCPU(self):\r\n            start_time = datetime.now()\r\n            while not self._stopMonitorFlag.is_set():\r\n                proc_list = self.findProcsByName(self._processName)\r\n                cpu_pct = self.getCpuPct(proc_list)\r\n                time_elapsed = (datetime.now() - start_time).total_seconds()\r\n                self._CPUUsage.append(cpu_pct)\r\n                self._timeElapsed.append(time_elapsed)\r\n                # csv_writer.writerow([datetime.now(), time_elapsed, self._processName, cpu_pct])\r\n                print('before')\r\n                self._csvWriter([datetime.now(), time_elapsed, self._processName, cpu_pct])\r\n                print('after')\r\n                time.sleep(0.1)\r\n\r\n            del self._CPUUsage[0]\r\n            del self._timeElapsed[0]\r\n            print('OVERALL STATS')\r\n            print(f'MIN: {min(self._CPUUsage)}')\r\n            print(f'MAX: {max(self._CPUUsage)}')\r\n            print(f'AVG: {mean(self._CPUUsage)}')\r\n            print(self._timeElapsed[-1])", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/392", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/392/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/392/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/392/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/392", "id": 655368341, "node_id": "MDU6SXNzdWU2NTUzNjgzNDE=", "number": 392, "title": "Failed to assert in \"event\" (async callback)", "user": {"login": "Elyash", "id": 27344500, "node_id": "MDQ6VXNlcjI3MzQ0NTAw", "avatar_url": "https://avatars2.githubusercontent.com/u/27344500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Elyash", "html_url": "https://github.com/Elyash", "followers_url": "https://api.github.com/users/Elyash/followers", "following_url": "https://api.github.com/users/Elyash/following{/other_user}", "gists_url": "https://api.github.com/users/Elyash/gists{/gist_id}", "starred_url": "https://api.github.com/users/Elyash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Elyash/subscriptions", "organizations_url": "https://api.github.com/users/Elyash/orgs", "repos_url": "https://api.github.com/users/Elyash/repos", "events_url": "https://api.github.com/users/Elyash/events{/privacy}", "received_events_url": "https://api.github.com/users/Elyash/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-12T09:52:43Z", "updated_at": "2020-07-13T08:45:05Z", "closed_at": "2020-07-13T08:45:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to execute the example of `FileMonitorService` from [Part 5: Asynchrounous Operation and Events](https://rpyc.readthedocs.io/en/latest/tutorial/tut5.html), but I changed one thing:\r\nI replaced the original code of the callback `on_file_changed` to a callback that raises an exception.\r\nThe exception never raised.\r\n\r\nThe original `on_file_changed`:\r\n```python\r\ndef on_file_changed(oldstat, newstat):\r\n...     print \"file changed\"\r\n...     print \"    old stat: %s\" % (oldstat,)\r\n...     print \"    new stat: %s\" % (newstat,)\r\n```\r\nThe new `on_file_changed`:\r\n```python\r\ndef on_file_changed(oldstat, newstat):\r\n...     print 1\r\n...     assert 1 == 2\r\n...     print 2\r\n```\r\n\r\nExpected result:\r\n![image](https://user-images.githubusercontent.com/27344500/87243326-c677a380-c43d-11ea-8d19-70fbfff23ce3.png)\r\nResult:\r\n![image](https://user-images.githubusercontent.com/27344500/87243329-d42d2900-c43d-11ea-8b2d-3e58d2972496.png)\r\n\r\nEnvironment:\r\npython 2.7.17\r\nRPyC 4.1.5\r\nOS: Linux Ububtu.\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/386", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/386/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/386/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/386/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/386", "id": 616868941, "node_id": "MDU6SXNzdWU2MTY4Njg5NDE=", "number": 386, "title": "How do I expose all global variables like Classic Server?", "user": {"login": "MehdiSaffar", "id": 13124263, "node_id": "MDQ6VXNlcjEzMTI0MjYz", "avatar_url": "https://avatars0.githubusercontent.com/u/13124263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MehdiSaffar", "html_url": "https://github.com/MehdiSaffar", "followers_url": "https://api.github.com/users/MehdiSaffar/followers", "following_url": "https://api.github.com/users/MehdiSaffar/following{/other_user}", "gists_url": "https://api.github.com/users/MehdiSaffar/gists{/gist_id}", "starred_url": "https://api.github.com/users/MehdiSaffar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MehdiSaffar/subscriptions", "organizations_url": "https://api.github.com/users/MehdiSaffar/orgs", "repos_url": "https://api.github.com/users/MehdiSaffar/repos", "events_url": "https://api.github.com/users/MehdiSaffar/events{/privacy}", "received_events_url": "https://api.github.com/users/MehdiSaffar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-12T18:30:59Z", "updated_at": "2020-05-15T04:21:49Z", "closed_at": "2020-05-15T04:21:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi everyone,\r\n\r\nFirst of all, I would like to thank all the people that put effort into\r\ncontributing to this library. I am very glad to have found the closest solution\r\nto what I want to do.\r\n\r\nI would like to have a server that keeps (among other things) a MongoDB\r\nconnection alive. This server will be like a daemon. It will be used to grab\r\nthe current active connection by a CLI tool that gets invoked frequently.\r\n\r\nBy reading the docs and playing around with the examples, this is what I came up with:\r\n\r\n```python\r\nimport pymongo\r\nimport rpyc\r\nimport rpyc.utils.server\r\n\r\n# DB connection I want to keep alive and share\r\nmongo = pymongo.MongoClient(MONGODB_URI)\r\n\r\nclass MyService(rpyc.core.SlaveService):\r\n    def get_mongo(self):\r\n        return mongo\r\n\r\nserver = rpyc.utils.server.ThreadedServer(MyService, port=3000)\r\nserver.start()\r\n```\r\n\r\nI needed to expose `mongo` global variable somehow but I couldn't and that was\r\nthe only way. It does what I want becaus e I am able to do this in my client\r\neven if it the client reloads multiple times:\r\n\r\n```python\r\ns = rpyc.classic.connect('localhost', port=3000)\r\ndb = s.root.get_mongo()\r\n\r\nprint(db.my_database_name.my_collection.find_one({'email': 'xxx@gmail.com'}))\r\n```\r\n\r\nIs there a shorter way around this? Because otherwise I would have to add a method in `MyService` for every global variable I want to expose.\r\n\r\nIdeally I would like the client to be able to reach into server-side global variables like:\r\n\r\n```python\r\nserver.root.my_var_1.do_something()\r\nprint(server.root.my_string_2)\r\n...\r\n```\r\n\r\nIs this possible? Thank you\r\n\r\n\r\n##### Environment\r\n\r\n- rpyc version: rpyc 4.1.5\r\n- python version: Python 3.8.1\r\n- operating system: Ubuntu 19.10\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/382", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/382/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/382/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/382/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/382", "id": 592673586, "node_id": "MDU6SXNzdWU1OTI2NzM1ODY=", "number": 382, "title": "upload file - slow perfomance", "user": {"login": "SofianJabal", "id": 53168033, "node_id": "MDQ6VXNlcjUzMTY4MDMz", "avatar_url": "https://avatars2.githubusercontent.com/u/53168033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SofianJabal", "html_url": "https://github.com/SofianJabal", "followers_url": "https://api.github.com/users/SofianJabal/followers", "following_url": "https://api.github.com/users/SofianJabal/following{/other_user}", "gists_url": "https://api.github.com/users/SofianJabal/gists{/gist_id}", "starred_url": "https://api.github.com/users/SofianJabal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SofianJabal/subscriptions", "organizations_url": "https://api.github.com/users/SofianJabal/orgs", "repos_url": "https://api.github.com/users/SofianJabal/repos", "events_url": "https://api.github.com/users/SofianJabal/events{/privacy}", "received_events_url": "https://api.github.com/users/SofianJabal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1443670523, "node_id": "MDU6TGFiZWwxNDQzNjcwNTIz", "url": "https://api.github.com/repos/tomerfiliba/rpyc/labels/In%20Progress", "name": "In Progress", "color": "154360", "default": false, "description": "Status: The issue is diagnosed and being resolved"}], "state": "closed", "locked": false, "assignee": {"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-04-02T14:24:37Z", "updated_at": "2020-05-08T05:27:50Z", "closed_at": "2020-05-08T05:27:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I found that it is started to take a lot of time to copy ~200 MB file on rpyc module when I moved from 4.1.2 to 4.1.4\r\nit was taking less than 2 min, but now it takes ~20 min\r\nI'm using upload_file function\r\n\r\nAfter debugging the issue, I found the problematic commit\r\nIt is 020f9fd562111688959ffdb2e10013c56ded34b0 ...\r\n\r\nI suggest to revert it and return the old code, then think on a better way to handle it\r\n\r\nThanks,\r\nSofian.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/379", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/379/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/379/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/379/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/379", "id": 589336655, "node_id": "MDU6SXNzdWU1ODkzMzY2NTU=", "number": 379, "title": "classic: slow performance", "user": {"login": "rbrewer123", "id": 743058, "node_id": "MDQ6VXNlcjc0MzA1OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/743058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbrewer123", "html_url": "https://github.com/rbrewer123", "followers_url": "https://api.github.com/users/rbrewer123/followers", "following_url": "https://api.github.com/users/rbrewer123/following{/other_user}", "gists_url": "https://api.github.com/users/rbrewer123/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbrewer123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbrewer123/subscriptions", "organizations_url": "https://api.github.com/users/rbrewer123/orgs", "repos_url": "https://api.github.com/users/rbrewer123/repos", "events_url": "https://api.github.com/users/rbrewer123/events{/privacy}", "received_events_url": "https://api.github.com/users/rbrewer123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-27T18:52:11Z", "updated_at": "2020-04-25T05:54:00Z", "closed_at": "2020-04-25T05:53:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I really like the clarity and simplicity of code using classic rpyc.  My use case is for test orchestration.  However, the performance seems significantly slower than I expected.  \r\n\r\nHere is my example:\r\n\r\n```\r\nfrom __future__ import print_function\r\nimport rpyc\r\nimport time\r\n\r\nstart = time.time()\r\nconn = rpyc.classic.connect('192.168.56.101')\r\nprint('connect time: {}'.format(time.time() - start))\r\nwith conn.builtins.open('foobar.txt', 'wb') as fo:\r\n    fo.write('hello there\\n')\r\nprint('write file time {}'.format(time.time() - start))        \r\nrpyc.utils.classic.download(conn, 'foobar.txt', 'foobar.txt')\r\nprint('download time {}'.format(time.time() - start))\r\n```\r\nThis connects to `rpyc_classic.py` (in threaded mode) on a local VM (running on the same machine).\r\n\r\nThe output when I run it is as follows (note that the times are all relative to when the script started):\r\n```\r\nconnect time: 1.93378710747\r\nwrite file time 3.36589312553\r\ndownload time 7.69390010834\r\n```\r\nI'm not at all concerned about the time to connect.  The time to write a file, and especially to download the same file seems excessively long.  \r\n\r\nIs there something simple I'm doing wrong?  \r\n\r\nMy setup is:\r\nrpyc 4.1.3\r\nPython 2.7\r\nUbuntu 16.04 (client)\r\nWindows 7 (rpyc_classic.py server)\r\n\r\nWhen talking to another rpyc process running on the Ubuntu host, I see about a 2x speedup, but it still seems quite long.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/375", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/375/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/375/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/375/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/375", "id": 572338117, "node_id": "MDU6SXNzdWU1NzIzMzgxMTc=", "number": 375, "title": "teleport fails on python 3.8.0 *deleted, fixed on latest rpyc*", "user": {"login": "korenmic", "id": 7347385, "node_id": "MDQ6VXNlcjczNDczODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/7347385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/korenmic", "html_url": "https://github.com/korenmic", "followers_url": "https://api.github.com/users/korenmic/followers", "following_url": "https://api.github.com/users/korenmic/following{/other_user}", "gists_url": "https://api.github.com/users/korenmic/gists{/gist_id}", "starred_url": "https://api.github.com/users/korenmic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/korenmic/subscriptions", "organizations_url": "https://api.github.com/users/korenmic/orgs", "repos_url": "https://api.github.com/users/korenmic/repos", "events_url": "https://api.github.com/users/korenmic/events{/privacy}", "received_events_url": "https://api.github.com/users/korenmic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-27T20:25:23Z", "updated_at": "2020-02-27T21:30:19Z", "closed_at": "2020-02-27T21:30:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "*deleted*", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/372", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/372/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/372/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/372/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/372", "id": 557501691, "node_id": "MDU6SXNzdWU1NTc1MDE2OTE=", "number": 372, "title": "Question: What are best practicies to transfer files(upload/download) by using Custom Service  ", "user": {"login": "amorozenko-ua", "id": 59013864, "node_id": "MDQ6VXNlcjU5MDEzODY0", "avatar_url": "https://avatars3.githubusercontent.com/u/59013864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amorozenko-ua", "html_url": "https://github.com/amorozenko-ua", "followers_url": "https://api.github.com/users/amorozenko-ua/followers", "following_url": "https://api.github.com/users/amorozenko-ua/following{/other_user}", "gists_url": "https://api.github.com/users/amorozenko-ua/gists{/gist_id}", "starred_url": "https://api.github.com/users/amorozenko-ua/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amorozenko-ua/subscriptions", "organizations_url": "https://api.github.com/users/amorozenko-ua/orgs", "repos_url": "https://api.github.com/users/amorozenko-ua/repos", "events_url": "https://api.github.com/users/amorozenko-ua/events{/privacy}", "received_events_url": "https://api.github.com/users/amorozenko-ua/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-30T13:41:37Z", "updated_at": "2020-01-30T18:49:24Z", "closed_at": "2020-01-30T18:49:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\nFor Classic Service upload/download procedures can be used by rpyc.utils.classic calls.\r\nBut how I can do binary file transfers client <-> remote by running my Custom Service.\r\nWhat is the best approach for your point of view to do such things?\r\n\r\nUnfortunately current documentation has lack information about this thus need your support here.\r\n\r\nThanks in advance for your reply.   \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/370", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/370/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/370/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/370/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/370", "id": 555815952, "node_id": "MDU6SXNzdWU1NTU4MTU5NTI=", "number": 370, "title": "Function teleportation across Python versions", "user": {"login": "Jongy", "id": 8831572, "node_id": "MDQ6VXNlcjg4MzE1NzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8831572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jongy", "html_url": "https://github.com/Jongy", "followers_url": "https://api.github.com/users/Jongy/followers", "following_url": "https://api.github.com/users/Jongy/following{/other_user}", "gists_url": "https://api.github.com/users/Jongy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jongy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jongy/subscriptions", "organizations_url": "https://api.github.com/users/Jongy/orgs", "repos_url": "https://api.github.com/users/Jongy/repos", "events_url": "https://api.github.com/users/Jongy/events{/privacy}", "received_events_url": "https://api.github.com/users/Jongy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-01-27T20:32:37Z", "updated_at": "2020-01-30T05:18:31Z", "closed_at": "2020-01-30T05:11:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've tried to use `teleport_function` today (which is one of the most magical, amazing features I've encountered); the server runs on Python 3.8 and the client runs on Python 3.7.\r\n\r\nTeleportation fails due to the change in a5f146a36a02da0492db6e3d40c673ccd33a05b4.\r\n\r\nI was wondering if the lack of cross-support is intentional? It's an easy fix to be backward & forward compatible, I'd be happy to create a PR to support client 3.7 -> server 3.8 and vice versa. (Though, of course there might be bytecode differences. You get a nice `SystemError` in that case and it's sometimes solvable, so I still find it useful)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/369", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/369/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/369/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/369/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/369", "id": 555553797, "node_id": "MDU6SXNzdWU1NTU1NTM3OTc=", "number": 369, "title": "Hangs on Connection root", "user": {"login": "bantzi", "id": 59967587, "node_id": "MDQ6VXNlcjU5OTY3NTg3", "avatar_url": "https://avatars2.githubusercontent.com/u/59967587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bantzi", "html_url": "https://github.com/bantzi", "followers_url": "https://api.github.com/users/bantzi/followers", "following_url": "https://api.github.com/users/bantzi/following{/other_user}", "gists_url": "https://api.github.com/users/bantzi/gists{/gist_id}", "starred_url": "https://api.github.com/users/bantzi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bantzi/subscriptions", "organizations_url": "https://api.github.com/users/bantzi/orgs", "repos_url": "https://api.github.com/users/bantzi/repos", "events_url": "https://api.github.com/users/bantzi/events{/privacy}", "received_events_url": "https://api.github.com/users/bantzi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-27T12:52:02Z", "updated_at": "2020-01-29T07:03:32Z", "closed_at": "2020-01-29T07:03:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "after updating to version 4.1.3\r\ncurrently it appears to hang when calling Connection \"root\" property.\r\nit gets stuck within the wait() function (root >> sync_request >> value >> wait)\r\nit appears that result never arrives\r\nperhaps the _send function is not able to acquire the lock and send the message...\r\n\r\nbefore updating to the new version it worked on version 4.1.2, I have updated to the new version because it solved previous issue #365 (key error)\r\n\r\n\r\n##### sample code\r\n```python\r\n        self.conn = unix_connect(socket_str,\r\n                                 config={'allow_pickle': True,\r\n                                         'allow_all_attrs': True,\r\n                                         \"sync_request_timeout\": None})\r\n\r\n        self.conn_root = self.conn.root --> hangs\r\n```\r\n##### Environment\r\n\r\n- rpyc 4.1.3\r\n- python 2.7.10\r\n- operating MacOs\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/368", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/368/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/368/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/368/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/368", "id": 554814959, "node_id": "MDU6SXNzdWU1NTQ4MTQ5NTk=", "number": 368, "title": "Question: how to get original object from proxy ?", "user": {"login": "shazz", "id": 604708, "node_id": "MDQ6VXNlcjYwNDcwOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/604708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shazz", "html_url": "https://github.com/shazz", "followers_url": "https://api.github.com/users/shazz/followers", "following_url": "https://api.github.com/users/shazz/following{/other_user}", "gists_url": "https://api.github.com/users/shazz/gists{/gist_id}", "starred_url": "https://api.github.com/users/shazz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shazz/subscriptions", "organizations_url": "https://api.github.com/users/shazz/orgs", "repos_url": "https://api.github.com/users/shazz/repos", "events_url": "https://api.github.com/users/shazz/events{/privacy}", "received_events_url": "https://api.github.com/users/shazz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-24T15:54:22Z", "updated_at": "2020-01-29T07:45:10Z", "closed_at": "2020-01-29T07:45:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm writing some unit tests to check that my remote objects behave like local objects.\r\nand as all objects are proxified, common == or equals methods usually fail because the object types are different.\r\nex:\r\n````\r\n<class 'numpy.dtype'>\r\n<netref class 'rpyc.core.netref.numpy.dtype'>\r\n````\r\n\r\nfor example, comparing a local ndarray with a remote ndarray using `tolist()` or `(a==b).all()` will fail.\r\n\r\nPrinting them look ok:\r\n````\r\nlocal: [dtype('int64'), dtype('int64')]\r\nremote: [dtype('int64'), dtype('int64')]\r\n````\r\nBut comparing both returns False as the types differ.\r\n\r\nSo is it possible to get the real class from the netref class ?\r\n\r\n##### Environment\r\n\r\n- rpyc version 4.1.2\r\n- python version 3.7\r\n- operating system Ubuntu 18.04\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/366", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/366/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/366/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/366/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/366", "id": 552331168, "node_id": "MDU6SXNzdWU1NTIzMzExNjg=", "number": 366, "title": "Obsolete Code in _box() after switch to id_pack", "user": {"login": "kai-klein", "id": 19757414, "node_id": "MDQ6VXNlcjE5NzU3NDE0", "avatar_url": "https://avatars3.githubusercontent.com/u/19757414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kai-klein", "html_url": "https://github.com/kai-klein", "followers_url": "https://api.github.com/users/kai-klein/followers", "following_url": "https://api.github.com/users/kai-klein/following{/other_user}", "gists_url": "https://api.github.com/users/kai-klein/gists{/gist_id}", "starred_url": "https://api.github.com/users/kai-klein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kai-klein/subscriptions", "organizations_url": "https://api.github.com/users/kai-klein/orgs", "repos_url": "https://api.github.com/users/kai-klein/repos", "events_url": "https://api.github.com/users/kai-klein/events{/privacy}", "received_events_url": "https://api.github.com/users/kai-klein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-20T14:23:10Z", "updated_at": "2020-01-29T08:01:47Z", "closed_at": "2020-01-22T03:29:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, while trying to figure out some issues in my code I came across this, now, obsolete code as cls is not used after it:\r\n\r\n```python\r\n         else:\r\n            id_pack = get_id_pack(obj)\r\n            self._local_objects.add(id_pack, obj)\r\n            #### now obsolete ----\r\n            try:\r\n                cls = obj.__class__\r\n            except Exception:\r\n                # see issue #16\r\n                cls = type(obj)\r\n            if not isinstance(cls, type):\r\n                cls = type(obj)\r\n            #### ------------------\r\n            return consts.LABEL_REMOTE_REF, id_pack\r\n\r\n```\r\neasy win cpy cycles as this is one of the core methods, right?\r\nref to master as of today:  https://github.com/tomerfiliba/rpyc/blob/c94dccbef21ad8e16de8f2262a96f0fb226260ca/rpyc/core/protocol.py#L275\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/365", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/365/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/365/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/365/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/365", "id": 550868632, "node_id": "MDU6SXNzdWU1NTA4Njg2MzI=", "number": 365, "title": "KeyError on self._request_callbacks.pop(seq)", "user": {"login": "bantzi", "id": 59967587, "node_id": "MDQ6VXNlcjU5OTY3NTg3", "avatar_url": "https://avatars2.githubusercontent.com/u/59967587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bantzi", "html_url": "https://github.com/bantzi", "followers_url": "https://api.github.com/users/bantzi/followers", "following_url": "https://api.github.com/users/bantzi/following{/other_user}", "gists_url": "https://api.github.com/users/bantzi/gists{/gist_id}", "starred_url": "https://api.github.com/users/bantzi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bantzi/subscriptions", "organizations_url": "https://api.github.com/users/bantzi/orgs", "repos_url": "https://api.github.com/users/bantzi/repos", "events_url": "https://api.github.com/users/bantzi/events{/privacy}", "received_events_url": "https://api.github.com/users/bantzi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-01-16T15:09:14Z", "updated_at": "2020-01-23T06:20:53Z", "closed_at": "2020-01-19T03:05:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "after updating from version 3.2.3 to latest version 4.1.2\r\nI started experiencing an internal KeyError exception\r\n\r\nlooking at the rpyc protocol.py changes\r\n1) it appears that pop is no longer protected by checking whether seq exists in the _request_callbacks as it was in 3.2.3\r\n\r\n2) also it appears that now _async_request function is also doing pop in the except block when _send raises an exception (didn't do so in version 3.2.3)\r\nwhich can trigger this problem\r\n\r\n\r\nstack trace:\r\n```\r\n  File \"/Users/abc/Library/Python/2.7/lib/python/site-packages/rpyc/core/netref.py\", line 161, in __getattribute__\r\n    return syncreq(self, consts.HANDLE_GETATTR, name)\r\n  File \"/Users/abc/Library/Python/2.7/lib/python/site-packages/rpyc/core/netref.py\", line 76, in syncreq\r\n    return conn.sync_request(handler, proxy, *args)\r\n  File \"/Users/abc/Library/Python/2.7/lib/python/site-packages/rpyc/core/protocol.py\", line 464, in sync_request\r\n    return self.async_request(handler, *args, timeout=timeout).value\r\n  File \"/Users/abc/Library/Python/2.7/lib/python/site-packages/rpyc/core/async_.py\", line 100, in value\r\n    self.wait()\r\n  File \"/Users/abc/Library/Python/2.7/lib/python/site-packages/rpyc/core/async_.py\", line 47, in wait\r\n    self._conn.serve(self._ttl)\r\n  File \"/Users/abc/Library/Python/2.7/lib/python/site-packages/rpyc/core/protocol.py\", line 387, in serve\r\n    self._dispatch(data)\r\n  File \"/Users/abc/Library/Python/2.7/lib/python/site-packages/rpyc/core/protocol.py\", line 359, in _dispatch\r\n    self._request_callbacks.pop(seq)(True, obj)\r\nKeyError: 36\r\n\r\n```\r\n\r\n\r\n##### Environment\r\n\r\n- rpyc version = 4.1.2\r\n- python version = 2.7\r\n- operating system = Mac", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/363", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/363/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/363/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/363/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/363", "id": 545874972, "node_id": "MDU6SXNzdWU1NDU4NzQ5NzI=", "number": 363, "title": "Similar things to Python Multicall (xmlrpc)", "user": {"login": "csm10495", "id": 5749838, "node_id": "MDQ6VXNlcjU3NDk4Mzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5749838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csm10495", "html_url": "https://github.com/csm10495", "followers_url": "https://api.github.com/users/csm10495/followers", "following_url": "https://api.github.com/users/csm10495/following{/other_user}", "gists_url": "https://api.github.com/users/csm10495/gists{/gist_id}", "starred_url": "https://api.github.com/users/csm10495/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csm10495/subscriptions", "organizations_url": "https://api.github.com/users/csm10495/orgs", "repos_url": "https://api.github.com/users/csm10495/repos", "events_url": "https://api.github.com/users/csm10495/events{/privacy}", "received_events_url": "https://api.github.com/users/csm10495/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 79026, "node_id": "MDU6TGFiZWw3OTAyNg==", "url": "https://api.github.com/repos/tomerfiliba/rpyc/labels/Feature%20Request", "name": "Feature Request", "color": "d500ff", "default": false, "description": "Type"}], "state": "closed", "locked": false, "assignee": {"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-01-06T18:39:02Z", "updated_at": "2020-01-30T18:22:36Z", "closed_at": "2020-01-30T18:22:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there an equivalent to Python xmlrpc's Multicall (https://docs.python.org/3/library/xmlrpc.client.html#xmlrpc.client.MultiCall) ?\r\n\r\nIn particular is there a way that I can queue up some remote commands then 'send' them all to execute?\r\n\r\nOptimally I'd also like to reference the result of the intermediate commands in future commands.\r\n\r\nFor instance in pseudocode:\r\n\r\nsend the following:\r\n```\r\nA + B \r\n(Result of A + B) + C\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/362", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/362/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/362/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/362/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/362", "id": 537097364, "node_id": "MDU6SXNzdWU1MzcwOTczNjQ=", "number": 362, "title": "Way to teleport functions without using classic", "user": {"login": "csm10495", "id": 5749838, "node_id": "MDQ6VXNlcjU3NDk4Mzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5749838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csm10495", "html_url": "https://github.com/csm10495", "followers_url": "https://api.github.com/users/csm10495/followers", "following_url": "https://api.github.com/users/csm10495/following{/other_user}", "gists_url": "https://api.github.com/users/csm10495/gists{/gist_id}", "starred_url": "https://api.github.com/users/csm10495/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csm10495/subscriptions", "organizations_url": "https://api.github.com/users/csm10495/orgs", "repos_url": "https://api.github.com/users/csm10495/repos", "events_url": "https://api.github.com/users/csm10495/events{/privacy}", "received_events_url": "https://api.github.com/users/csm10495/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1513089802, "node_id": "MDU6TGFiZWwxNTEzMDg5ODAy", "url": "https://api.github.com/repos/tomerfiliba/rpyc/labels/Done", "name": "Done", "color": "14935c", "default": false, "description": "Status: The issue has been resolved"}], "state": "closed", "locked": false, "assignee": {"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-12-12T16:52:44Z", "updated_at": "2020-02-27T06:49:49Z", "closed_at": "2019-12-17T01:31:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to teleport functions (and have them completely run remote) without using classic mode? The ask is similar to the rpyc.utils.classic.teleport_function functionality, though not sure how to apply it without using classic. \r\n\r\nBasically I have a bunch of things I want to do remotely then get a single result as opposed to having rpyc send each call one-by-one. (to best reduce latency).\r\n\r\nThe gist is:\r\n\r\n```\r\ndef quickFunction(thing):\r\n    thing.x()\r\n    thing.y()\r\n    return thing.z()\r\n```\r\n\r\nI want to run the whole quickFunction over there but have it defined over here, if that makes sense.\r\n\r\n##### Environment\r\n\r\n- rpyc version 4.1.2\r\n- python version 2.7.13\r\n- operating system Windows\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/359", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/359/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/359/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/359/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/359", "id": 522253011, "node_id": "MDU6SXNzdWU1MjIyNTMwMTE=", "number": 359, "title": "[Help] How to have a host make and receive RpyC connections at the same time?", "user": {"login": "kckusal", "id": 26818010, "node_id": "MDQ6VXNlcjI2ODE4MDEw", "avatar_url": "https://avatars3.githubusercontent.com/u/26818010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kckusal", "html_url": "https://github.com/kckusal", "followers_url": "https://api.github.com/users/kckusal/followers", "following_url": "https://api.github.com/users/kckusal/following{/other_user}", "gists_url": "https://api.github.com/users/kckusal/gists{/gist_id}", "starred_url": "https://api.github.com/users/kckusal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kckusal/subscriptions", "organizations_url": "https://api.github.com/users/kckusal/orgs", "repos_url": "https://api.github.com/users/kckusal/repos", "events_url": "https://api.github.com/users/kckusal/events{/privacy}", "received_events_url": "https://api.github.com/users/kckusal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-13T14:19:23Z", "updated_at": "2019-11-14T13:45:12Z", "closed_at": "2019-11-14T13:45:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I only recently started using RPyC, so I am not sure what's causing this, so forgive me if this question is too naive.  Here's my situation.\r\n\r\nI have a NameServer, a client and an external server. Every 60 seconds, Nameserver tries to connect to the external server using RPyC to see if it responding or not (say check_aliveness() function). Now, when I try to connect to Nameserver from my client using RPyC, it refuses to connect with following stack trace:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"client.py\", line 449, in <module>\r\n    main()\r\n  File \"client.py\", line 436, in main\r\n    CONN = rpyc.connect(NAME_SERVER[\"IP\"], NAME_SERVER[\"PORT\"])\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/utils/factory.py\", line 98, in connect\r\n    s = SocketStream.connect(host, port, ipv6=ipv6, keepalive=keepalive)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/stream.py\", line 172, in connect\r\n    return cls(cls._connect(host, port, **kwargs))\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/stream.py\", line 124, in _connect\r\n    s = socket_backoff_connect(family, socktype, proto, sockaddr, timeout, attempts)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/lib/__i    sock.connect(addr)\r\nConnectionRefusedError: [Errno 111] Connection refused     \r\n\r\n```\r\n\r\nI am expecting the client to be able to connect to the NameServer normally using RPyC, even if the NameServer is connecting to another remote server using RPyC at the same time.\r\n\r\nNow, if I were to remove that check_aliveness() function I referenced above, i.e. not have NameServer make any connections to other servers, I see that the client is able to connect to the Nameserver normally.\r\n\r\nNow, it should be possible for the NameServer to act as a client (connecting to other servers), and act as server (accept connections from others) at the same time using RPyC, right? How do I achieve this?\r\n\r\nPython version: 3.7.3\r\nRPyC version: 4.1.2\r\n\r\nEnvironment: Debian OS\r\n\r\nI tried using different ports for each of the connections I created, but the result is same as above. Client is able to use RPyC to connect to NameServer only if the NameServer is not connecting (or not connected) to any other Server at the same time.\r\n\r\nI also thought it might work if the NameServer is to release any external connection made using RPyC immediately upon completion of desired task, but how do I manually release an RPyC connection?? I tried setting some values, but didn't seem to work.\r\n\r\nPerhaps I am not approaching this the right way, but like I said, I only started using RPyC a couple days ago. Any help is appreciated.)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/357", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/357/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/357/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/357/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/357", "id": 514447303, "node_id": "MDU6SXNzdWU1MTQ0NDczMDM=", "number": 357, "title": "Cannot access __eq__ method on remote object", "user": {"login": "fateflame", "id": 11874597, "node_id": "MDQ6VXNlcjExODc0NTk3", "avatar_url": "https://avatars3.githubusercontent.com/u/11874597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fateflame", "html_url": "https://github.com/fateflame", "followers_url": "https://api.github.com/users/fateflame/followers", "following_url": "https://api.github.com/users/fateflame/following{/other_user}", "gists_url": "https://api.github.com/users/fateflame/gists{/gist_id}", "starred_url": "https://api.github.com/users/fateflame/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fateflame/subscriptions", "organizations_url": "https://api.github.com/users/fateflame/orgs", "repos_url": "https://api.github.com/users/fateflame/repos", "events_url": "https://api.github.com/users/fateflame/events{/privacy}", "received_events_url": "https://api.github.com/users/fateflame/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1443670523, "node_id": "MDU6TGFiZWwxNDQzNjcwNTIz", "url": "https://api.github.com/repos/tomerfiliba/rpyc/labels/In%20Progress", "name": "In Progress", "color": "154360", "default": false, "description": "Status: The issue is diagnosed and being resolved"}], "state": "closed", "locked": false, "assignee": {"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-10-30T07:15:38Z", "updated_at": "2019-11-14T19:33:41Z", "closed_at": "2019-11-14T19:33:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I create an object on server, pass its reference to client and make comparison with `server_ret == some_value` on client, which gives me an `AttributeError: cannot access '__eq__'`.  \r\n\r\n**Important: `server_ret` is a self defined object passed by referece**\u3002Base types like `int` works fine.  I find this problem when I update my rpyc from 4.1.1 to 4.1.2 **on server**(where the object actually exists). While with rpyc 4.1.1, all works fine..\r\n\r\nHere is the main part of traceback info:\r\n```\r\n    if ret == const.ActionResult.LOGIN_REQUIRED.value:\r\n  File \"D:\\Program Files\\Python\\Python35\\lib\\site-packages\\rpyc\\core\\netref.py\", line 191, in __eq__\r\n    return syncreq(self, consts.HANDLE_CMP, other, '__eq__')\r\n  File \"D:\\Program Files\\Python\\Python35\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\r\n    return conn.sync_request(handler, proxy, *args)\r\n  File \"D:\\Program Files\\Python\\Python35\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 464, in sync_request\r\n    return self.async_request(handler, *args, timeout=timeout).value\r\n  File \"D:\\Program Files\\Python\\Python35\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\r\n    raise self._obj\r\nAttributeError: cannot access '__eq__'\r\n\r\n========= Remote Traceback (1) =========\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/dist-packages/rpyc/core/protocol.py\", line 323, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"/usr/local/lib/python3.7/dist-packages/rpyc/core/protocol.py\", line 577, in _handle_cmp\r\n    return self._access_attr(type(obj), op, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)(obj, other)\r\n  File \"/usr/local/lib/python3.7/dist-packages/rpyc/core/protocol.py\", line 528, in _access_attr\r\n    name = self._check_attr(obj, name, param)\r\n  File \"/usr/local/lib/python3.7/dist-packages/rpyc/core/protocol.py\", line 513, in _check_attr\r\n    raise AttributeError(\"cannot access %r\" % (name,))\r\nAttributeError: cannot access '__eq__'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/356", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/356/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/356/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/356/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/356", "id": 513214856, "node_id": "MDU6SXNzdWU1MTMyMTQ4NTY=", "number": 356, "title": "Timeout even if doing something", "user": {"login": "XonqNopp", "id": 4548357, "node_id": "MDQ6VXNlcjQ1NDgzNTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4548357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XonqNopp", "html_url": "https://github.com/XonqNopp", "followers_url": "https://api.github.com/users/XonqNopp/followers", "following_url": "https://api.github.com/users/XonqNopp/following{/other_user}", "gists_url": "https://api.github.com/users/XonqNopp/gists{/gist_id}", "starred_url": "https://api.github.com/users/XonqNopp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XonqNopp/subscriptions", "organizations_url": "https://api.github.com/users/XonqNopp/orgs", "repos_url": "https://api.github.com/users/XonqNopp/repos", "events_url": "https://api.github.com/users/XonqNopp/events{/privacy}", "received_events_url": "https://api.github.com/users/XonqNopp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-28T10:21:16Z", "updated_at": "2019-11-07T02:07:45Z", "closed_at": "2019-11-07T02:07:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a use case where we need to do a long operation on the remote server. It runs fine, and we even have the remote log showing on the local client what is happening. But suddenly it aborts because of the timeout, even though everything was working AND there was some traffic on the RPyC channel... I understand that if there was no communication AT ALL it should abort because of a predefined timeout, but here I had continuously log coming from the server...\r\n\r\n\r\n## Environment\r\n\r\n- rpyc version: 4.1.0\r\n- python version: 3.5\r\n- operating system:\r\n  - client: Debian 9 or Windows 10\r\n  - server: Debian-based buildroot (for MWE: Debian 9)\r\n\r\n\r\n## Minimal working example (MWE)\r\n\r\n### Server\r\n\r\n```python\r\nfrom rpyc.utils.server import ThreadedServer\r\nimport rpyc\r\nimport time\r\nimport logging\r\n\r\n\r\nlogging.basicConfig(level=logging.DEBUG)\r\n\r\n\r\nclass S(rpyc.SlaveService):\r\n    def exposed_f(self, timeout):\r\n        log = logging.getLogger('ping')\r\n        r = 2 * timeout\r\n        for i in range(r):\r\n            time.sleep(1)\r\n            log.warning('pong @ {}/{}'.format(i + 1, r))\r\n\r\n\r\nt = ThreadedServer(S, port=5001)\r\nt.start()\r\n```\r\n\r\n#### Stack trace\r\n\r\n```\r\nINFO:S/5001:server started on [0.0.0.0]:5001\r\nINFO:S/5001:accepted ('127.0.0.1', 42382) with fd 4\r\nINFO:S/5001:welcome ('127.0.0.1', 42382)\r\nWARNING:ping:pong @ 1/10\r\nWARNING:ping:pong @ 2/10\r\nWARNING:ping:pong @ 3/10\r\nWARNING:ping:pong @ 4/10\r\nWARNING:ping:pong @ 5/10\r\n\r\nDEBUG:S/5001:Exception caught\r\n\r\nTraceback (most recent call last):\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/protocol.py\", line 322, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/protocol.py\", line 577, in _handle_call\r\n    return obj(*args, **dict(kwargs))\r\n  File \"rpyc_server.py\", line 18, in exposed_f\r\n    log.warning('pong @ {}/{}'.format(i + 1, r))\r\n  File \"/usr/lib/python3.5/logging/__init__.py\", line 1292, in warning\r\n    self._log(WARNING, msg, args, **kwargs)\r\n  File \"/usr/lib/python3.5/logging/__init__.py\", line 1416, in _log\r\n    self.handle(record)\r\n  File \"/usr/lib/python3.5/logging/__init__.py\", line 1426, in handle\r\n    self.callHandlers(record)\r\n  File \"/usr/lib/python3.5/logging/__init__.py\", line 1485, in callHandlers\r\n    for hdlr in c.handlers:\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/netref.py\", line 161, in __getattribute__\r\n    return syncreq(self, consts.HANDLE_GETATTR, name)\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/netref.py\", line 76, in syncreq\r\n    return conn.sync_request(handler, proxy, *args)\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/protocol.py\", line 455, in sync_request\r\n    return self.async_request(handler, *args, timeout=timeout).value\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/async_.py\", line 100, in value\r\n    self.wait()\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/async_.py\", line 47, in wait\r\n    self._conn.serve(self._ttl)\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/protocol.py\", line 384, in serve\r\n    self._dispatch(data)\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/protocol.py\", line 350, in _dispatch\r\n    self._dispatch_request(seq, args)\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/protocol.py\", line 336, in _dispatch_request\r\n    self._send(consts.MSG_REPLY, seq, self._box(res))\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/protocol.py\", line 258, in _send\r\n    self._channel.send(data)\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/channel.py\", line 75, in send\r\n    self.stream.write(buf)\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/stream.py\", line 267, in write\r\n    count = self.sock.send(data[:self.MAX_IO_CHUNK])\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/stream.py\", line 94, in __getattr__\r\n    raise EOFError(\"stream has been closed\")\r\nEOFError: stream has been closed\r\n\r\n\r\nINFO:S/5001:goodbye ('127.0.0.1', 42382)\r\nERROR:S/5001:client connection terminated abruptly\r\n\r\n\r\nTraceback (most recent call last):\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/utils/server.py\", line 180, in _authenticate_and_serve_client\r\n    self._serve_client(sock2, credentials)\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/utils/server.py\", line 204, in _serve_client\r\n    self.logger.info(\"goodbye %s\", addrinfo)\r\n  File \"/usr/lib/python3.5/logging/__init__.py\", line 1280, in info\r\n    self._log(INFO, msg, args, **kwargs)\r\n  File \"/usr/lib/python3.5/logging/__init__.py\", line 1416, in _log\r\n    self.handle(record)\r\n  File \"/usr/lib/python3.5/logging/__init__.py\", line 1426, in handle\r\n    self.callHandlers(record)\r\n  File \"/usr/lib/python3.5/logging/__init__.py\", line 1485, in callHandlers\r\n    for hdlr in c.handlers:\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/netref.py\", line 161, in __getattribute__\r\n    return syncreq(self, consts.HANDLE_GETATTR, name)\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/netref.py\", line 76, in syncreq\r\n    return conn.sync_request(handler, proxy, *args)\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/protocol.py\", line 455, in sync_request\r\n    return self.async_request(handler, *args, timeout=timeout).value\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/protocol.py\", line 476, in async_request\r\n    self._async_request(handler, args, res)\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/protocol.py\", line 461, in _async_request\r\n    self._send(consts.MSG_REQUEST, seq, (handler, self._box(args)))\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/protocol.py\", line 258, in _send\r\n    self._channel.send(data)\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/channel.py\", line 75, in send\r\n    self.stream.write(buf)\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/stream.py\", line 267, in write\r\n    count = self.sock.send(data[:self.MAX_IO_CHUNK])\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/stream.py\", line 94, in __getattr__\r\n    raise EOFError(\"stream has been closed\")\r\nEOFError: stream has been closed\r\n\r\nException in thread Thread-1:\r\n\r\nTraceback (most recent call last):\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/utils/server.py\", line 180, in _authenticate_and_serve_client\r\n    self._serve_client(sock2, credentials)\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/utils/server.py\", line 204, in _serve_client\r\n    self.logger.info(\"goodbye %s\", addrinfo)\r\n  File \"/usr/lib/python3.5/logging/__init__.py\", line 1280, in info\r\n    self._log(INFO, msg, args, **kwargs)\r\n  File \"/usr/lib/python3.5/logging/__init__.py\", line 1416, in _log\r\n    self.handle(record)\r\n  File \"/usr/lib/python3.5/logging/__init__.py\", line 1426, in handle\r\n    self.callHandlers(record)\r\n  File \"/usr/lib/python3.5/logging/__init__.py\", line 1485, in callHandlers\r\n    for hdlr in c.handlers:\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/netref.py\", line 161, in __getattribute__\r\n    return syncreq(self, consts.HANDLE_GETATTR, name)\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/netref.py\", line 76, in syncreq\r\n    return conn.sync_request(handler, proxy, *args)\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/protocol.py\", line 455, in sync_request\r\n    return self.async_request(handler, *args, timeout=timeout).value\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/protocol.py\", line 476, in async_request\r\n    self._async_request(handler, args, res)\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/protocol.py\", line 461, in _async_request\r\n    self._send(consts.MSG_REQUEST, seq, (handler, self._box(args)))\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/protocol.py\", line 258, in _send\r\n    self._channel.send(data)\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/channel.py\", line 75, in send\r\n    self.stream.write(buf)\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/stream.py\", line 267, in write\r\n    count = self.sock.send(data[:self.MAX_IO_CHUNK])\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/stream.py\", line 94, in __getattr__\r\n    raise EOFError(\"stream has been closed\")\r\nEOFError: stream has been closed\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.5/threading.py\", line 914, in _bootstrap_inner\r\n    self.run()\r\n  File \"/usr/lib/python3.5/threading.py\", line 862, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/utils/server.py\", line 182, in _authenticate_and_serve_client\r\n    self.logger.exception(\"client connection terminated abruptly\")\r\n  File \"/usr/lib/python3.5/logging/__init__.py\", line 1315, in exception\r\n    self.error(msg, *args, exc_info=exc_info, **kwargs)\r\n  File \"/usr/lib/python3.5/logging/__init__.py\", line 1309, in error\r\n    self._log(ERROR, msg, args, **kwargs)\r\n  File \"/usr/lib/python3.5/logging/__init__.py\", line 1416, in _log\r\n    self.handle(record)\r\n  File \"/usr/lib/python3.5/logging/__init__.py\", line 1426, in handle\r\n    self.callHandlers(record)\r\n  File \"/usr/lib/python3.5/logging/__init__.py\", line 1485, in callHandlers\r\n    for hdlr in c.handlers:\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/netref.py\", line 161, in __getattribute__\r\n    return syncreq(self, consts.HANDLE_GETATTR, name)\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/netref.py\", line 76, in syncreq\r\n    return conn.sync_request(handler, proxy, *args)\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/protocol.py\", line 455, in sync_request\r\n    return self.async_request(handler, *args, timeout=timeout).value\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/protocol.py\", line 476, in async_request\r\n    self._async_request(handler, args, res)\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/protocol.py\", line 461, in _async_request\r\n    self._send(consts.MSG_REQUEST, seq, (handler, self._box(args)))\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/protocol.py\", line 258, in _send\r\n    self._channel.send(data)\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/channel.py\", line 75, in send\r\n    self.stream.write(buf)\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/stream.py\", line 267, in write\r\n    count = self.sock.send(data[:self.MAX_IO_CHUNK])\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/stream.py\", line 94, in __getattr__\r\n    raise EOFError(\"stream has been closed\")\r\nEOFError: stream has been closed\r\n```\r\n\r\n### Client\r\n\r\n```python\r\nimport sys\r\nimport logging\r\nfrom rpyc.utils.classic import connect\r\n\r\n\r\nh = logging.StreamHandler(sys.stdout)\r\nlogging.basicConfig(level=logging.DEBUG, handlers=[h])\r\n\r\ntimeout = 5\r\n\r\n\r\nlocalLog = logging.getLogger('local')\r\n\r\n\r\nc = connect('127.0.0.1', port=5001)\r\nc._config['sync_request_timeout'] = timeout\r\n\r\nremoteLog = c.modules.logging.getLogger()\r\nremoteLog.parent = localLog\r\n\r\nc.root.exposed_f(timeout)\r\n\r\nremoteLog.parent = None\r\n```\r\n\r\n#### Stack trace\r\n\r\n```\r\nWARNING:ping:pong @ 1/10\r\nWARNING:ping:pong @ 2/10\r\nWARNING:ping:pong @ 3/10\r\nWARNING:ping:pong @ 4/10\r\n\r\nTraceback (most recent call last):\r\n  File \"rpyc_client.py\", line 22, in <module>\r\n    c.root.exposed_f(timeout)\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/netref.py\", line 242, in __call__\r\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/netref.py\", line 76, in syncreq\r\n    return conn.sync_request(handler, proxy, *args)\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/protocol.py\", line 455, in sync_request\r\n    return self.async_request(handler, *args, timeout=timeout).value\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/async_.py\", line 100, in value\r\n    self.wait()\r\n  File \"_venv/default/lib/python3.5/site-packages/rpyc/core/async_.py\", line 49, in wait\r\n    raise AsyncResultTimeout(\"result expired\")\r\nTimeoutError: result expired\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/353", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/353/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/353/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/353/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/353", "id": 505275836, "node_id": "MDU6SXNzdWU1MDUyNzU4MzY=", "number": 353, "title": "rapid data streaming patch pull request", "user": {"login": "p5-vbnekit", "id": 13237223, "node_id": "MDQ6VXNlcjEzMjM3MjIz", "avatar_url": "https://avatars1.githubusercontent.com/u/13237223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/p5-vbnekit", "html_url": "https://github.com/p5-vbnekit", "followers_url": "https://api.github.com/users/p5-vbnekit/followers", "following_url": "https://api.github.com/users/p5-vbnekit/following{/other_user}", "gists_url": "https://api.github.com/users/p5-vbnekit/gists{/gist_id}", "starred_url": "https://api.github.com/users/p5-vbnekit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/p5-vbnekit/subscriptions", "organizations_url": "https://api.github.com/users/p5-vbnekit/orgs", "repos_url": "https://api.github.com/users/p5-vbnekit/repos", "events_url": "https://api.github.com/users/p5-vbnekit/events{/privacy}", "received_events_url": "https://api.github.com/users/p5-vbnekit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-10T13:34:26Z", "updated_at": "2019-10-14T22:35:11Z", "closed_at": "2019-10-14T22:35:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried to reduce the CPU usage and add a bit of zero-copy... That's what came out of it.\r\n\r\n# Pull request\r\nI tried to split these changes into [separate commits](https://github.com/tomerfiliba/rpyc/compare/master...p5-vbnekit:rapid_patch) so that it was easier to patch. But i'm not sure if these changes are portable. I could open a pull request, but I see that something is wrong with the Travis-CI. Therefore, I ask you to help me with testing, code-review, etc... We can merge it, i know. =)\r\n\r\n# Fork\r\n[rapid_pactch branch of my fork: https://github.com/p5-vbnekit/forks.rpyc/tree/rapid_patch](https://github.com/p5-vbnekit/forks.rpyc/tree/rapid_patch)\r\n\r\n# Test sources\r\n[raw.client.py.gz](https://github.com/tomerfiliba/rpyc/files/3712775/raw.client.py.gz)\r\n[raw.server.py.gz](https://github.com/tomerfiliba/rpyc/files/3712777/raw.server.py.gz)\r\n\r\n# Client test output\r\nSize in bytes, Rate in megabytes.\r\n```\r\nnormal mode testing\r\nduration = 3.536377213000378, rate = 289.56187033317207, size = 1073741824\r\nduration = 3.4768956789994263, rate = 294.51559509967365, size = 1073741824\r\nduration = 3.5834064559985563, rate = 285.7616105161174, size = 1073741824\r\nduration = 3.6162970469995344, rate = 283.1625794815776, size = 1073741824\r\nduration = 3.5070690360007575, rate = 291.9817059454597, size = 1073741824\r\nduration = 3.5336827020000783, rate = 289.78266764596947, size = 1073741824\r\nduration = 3.493078114999662, rate = 293.15118823218734, size = 1073741824\r\nduration = 3.5719206699995993, rate = 286.68049898211063, size = 1073741824\r\n====================\r\n\r\nno-compression mode testing\r\nduration = 0.771746880000137, rate = 1326.8599155202521, size = 1073741824\r\nduration = 0.815511136999703, rate = 1255.6542192266504, size = 1073741824\r\nduration = 0.8134170849989459, rate = 1258.886761643723, size = 1073741824\r\nduration = 0.8100284619995364, rate = 1264.1531107095668, size = 1073741824\r\nduration = 0.8220064540000749, rate = 1245.732311488526, size = 1073741824\r\nduration = 0.8575360779996117, rate = 1194.1188554873415, size = 1073741824\r\nduration = 0.925070882, rate = 1106.9422029435361, size = 1073741824\r\nduration = 0.7707344720001856, rate = 1328.6028291203165, size = 1073741824\r\n====================\r\n\r\nraw data mode testing\r\nduration = 0.20740943400051037, rate = 4937.0946164265615, size = 1073741824\r\nduration = 0.2318591910006944, rate = 4416.473617372939, size = 1073741824\r\nduration = 0.2333542310007033, rate = 4388.178417030346, size = 1073741824\r\nduration = 0.1913496449997183, rate = 5351.46015035203, size = 1073741824\r\nduration = 0.238166461000219, rate = 4299.51385975819, size = 1073741824\r\nduration = 0.23230152100040868, rate = 4408.064121104909, size = 1073741824\r\nduration = 0.1920135050004319, rate = 5332.958220817315, size = 1073741824\r\nduration = 0.2331290509991959, rate = 4392.416970819874, size = 1073741824\r\n```\r\n\r\n# `$ iperf -c localhost`\r\n```\r\n------------------------------------------------------------\r\nClient connecting to localhost, TCP port 5001\r\nTCP window size: 2.50 MByte (default)\r\n------------------------------------------------------------\r\n[  3] local 127.0.0.1 port 45062 connected with 127.0.0.1 port 5001\r\n[ ID] Interval       Transfer     Bandwidth\r\n[  3]  0.0-10.0 sec  61.0 GBytes  52.4 Gbits/sec\r\n```\r\n52400 / 8 = 6550 MegaBytes per second\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/347", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/347/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/347/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/347/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/347", "id": 492087830, "node_id": "MDU6SXNzdWU0OTIwODc4MzA=", "number": 347, "title": "cannot access 'items' on server", "user": {"login": "ralfkundel", "id": 16240312, "node_id": "MDQ6VXNlcjE2MjQwMzEy", "avatar_url": "https://avatars1.githubusercontent.com/u/16240312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ralfkundel", "html_url": "https://github.com/ralfkundel", "followers_url": "https://api.github.com/users/ralfkundel/followers", "following_url": "https://api.github.com/users/ralfkundel/following{/other_user}", "gists_url": "https://api.github.com/users/ralfkundel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ralfkundel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ralfkundel/subscriptions", "organizations_url": "https://api.github.com/users/ralfkundel/orgs", "repos_url": "https://api.github.com/users/ralfkundel/repos", "events_url": "https://api.github.com/users/ralfkundel/events{/privacy}", "received_events_url": "https://api.github.com/users/ralfkundel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1513089802, "node_id": "MDU6TGFiZWwxNTEzMDg5ODAy", "url": "https://api.github.com/repos/tomerfiliba/rpyc/labels/Done", "name": "Done", "color": "14935c", "default": false, "description": "Status: The issue has been resolved"}], "state": "closed", "locked": false, "assignee": {"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-09-11T08:21:31Z", "updated_at": "2019-09-23T20:30:12Z", "closed_at": "2019-09-23T19:07:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nthanks to #272 i was able to access a dict on the client side. however, I'm unable to transfer a dict from client to server and access items().\r\n\r\n**Server**:\r\n```\r\nclass TimeService(Service):\r\n    def exposed_get_a_dict(self, a):\r\n        print(a)\r\n        for k,v in a.items():\r\n            print(k)\r\n        return \"asdf\" \r\ns = ThreadedServer(TimeService, port=18871, protocol_config={'allow_public_attrs': True, 'sync_request_timeout': 10})\r\ns.start()\r\n```\r\n\r\n\r\n**Client**:\r\n```\r\nconn = rpyc.connect('localhost', 18871)\r\nfoo = conn.root.get_a_dict({'yeah':42})\r\n\r\n```\r\ncauses: AttributeError: cannot access 'items'\r\n\r\n\r\n\r\nIs there another protocol_config which is required for that?\r\n\r\n\r\nUsed version: ubuntu 19.04, python3, current RPyC version\r\n\r\nregards,\r\nRalf\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/346", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/346/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/346/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/346/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/346", "id": 483312542, "node_id": "MDU6SXNzdWU0ODMzMTI1NDI=", "number": 346, "title": "using rpyc over rpyc throws an exception", "user": {"login": "eyalgr", "id": 10583745, "node_id": "MDQ6VXNlcjEwNTgzNzQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/10583745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eyalgr", "html_url": "https://github.com/eyalgr", "followers_url": "https://api.github.com/users/eyalgr/followers", "following_url": "https://api.github.com/users/eyalgr/following{/other_user}", "gists_url": "https://api.github.com/users/eyalgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/eyalgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eyalgr/subscriptions", "organizations_url": "https://api.github.com/users/eyalgr/orgs", "repos_url": "https://api.github.com/users/eyalgr/repos", "events_url": "https://api.github.com/users/eyalgr/events{/privacy}", "received_events_url": "https://api.github.com/users/eyalgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1513089802, "node_id": "MDU6TGFiZWwxNTEzMDg5ODAy", "url": "https://api.github.com/repos/tomerfiliba/rpyc/labels/Done", "name": "Done", "color": "14935c", "default": false, "description": "Status: The issue has been resolved"}], "state": "closed", "locked": false, "assignee": {"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-08-21T09:40:33Z", "updated_at": "2019-10-02T20:39:46Z", "closed_at": "2019-10-02T18:45:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a use case where I have a frontend server in a public-facing network and a bunch \r\n of backend servers in an isolated network that's accessible from the frontend server.\r\n\r\nI considered using rpyc to handle this case. In order to simulate this I started two classic services on localhost:\r\n\r\n``` \r\n# Frontend server:\r\npython /usr/local/bin/rpyc_classic.py -p 8080\r\n```\r\n\r\n```\r\n# Backend server:\r\npython /usr/local/bin/rpyc_classic.py -p 8081\r\n```\r\n\r\nAnd attempted to use rpyc over rpyc:\r\n\r\n```\r\n>>> import rpyc\r\n>>> frontend = rpyc.connect('localhost', 8080)\r\n>>> frontend_rpyc = frontend.root.getmodule('rpyc')\r\n>>> backend = frontend_rpyc.connect('localhost', 8081)\r\n>>> backend.root.getmodule('os').listdir('.')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/netref.py\", line 161, in __getattribute__\r\n    return syncreq(self, consts.HANDLE_GETATTR, name)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/netref.py\", line 76, in syncreq\r\n    return conn.sync_request(handler, proxy, *args)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 458, in sync_request\r\n    return self.async_request(handler, *args, timeout=timeout).value\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/async_.py\", line 100, in value\r\n    self.wait()\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/async_.py\", line 47, in wait\r\n    self._conn.serve(self._ttl)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 387, in serve\r\n    self._dispatch(data)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 353, in _dispatch\r\n    self._dispatch_request(seq, args)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 337, in _dispatch_request\r\n    self._send(consts.MSG_REPLY, seq, self._box(res))\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 259, in _send\r\n    self._channel.send(data)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/channel.py\", line 75, in send\r\n    self.stream.write(buf)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/stream.py\", line 267, in write\r\n    count = self.sock.send(data[:self.MAX_IO_CHUNK])\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/stream.py\", line 94, in __getattr__\r\n    raise EOFError(\"stream has been closed\")\r\nEOFError: stream has been closed\r\n```\r\n\r\nI should note that connecting directly to the backend works as expected, but it doesn't solve this specific use case.\r\nI'm new to rpyc, so I'm not sure if it's even supposed to work this way.\r\n\r\nThis is the log from the frontend server:\r\n```\r\n> python /usr/local/bin/rpyc_classic.py -p 8080\r\nINFO:SLAVE/8080:server started on [127.0.0.1]:8080\r\nINFO:SLAVE/8080:accepted ('127.0.0.1', 62811) with fd 4\r\nINFO:SLAVE/8080:welcome ('127.0.0.1', 62811)\r\nINFO:SLAVE/8080:goodbye ('127.0.0.1', 62811)\r\nERROR:SLAVE/8080:client connection terminated abruptly\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/utils/server.py\", line 180, in _authenticate_and_serve_client\r\n    self._serve_client(sock2, credentials)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/utils/server.py\", line 202, in _serve_client\r\n    self._handle_connection(conn)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/utils/server.py\", line 208, in _handle_connection\r\n    conn.serve_all()\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 403, in serve_all\r\n    self.serve(None)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 387, in serve\r\n    self._dispatch(data)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 353, in _dispatch\r\n    self._dispatch_request(seq, args)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 337, in _dispatch_request\r\n    self._send(consts.MSG_REPLY, seq, self._box(res))\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 273, in _box\r\n    id_pack = get_id_pack(obj)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/lib/__init__.py\", line 159, in get_id_pack\r\n    name_pack = '{0}.{1}'.format(obj.__module__, obj.__name__)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/netref.py\", line 166, in __getattr__\r\n    return syncreq(self, consts.HANDLE_GETATTR, name)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/netref.py\", line 76, in syncreq\r\n    return conn.sync_request(handler, proxy, *args)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 458, in sync_request\r\n    return self.async_request(handler, *args, timeout=timeout).value\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/async_.py\", line 102, in value\r\n    raise self._obj\r\n_get_exception_class.<locals>.Derived: 'SlaveService' object has no attribute '__name__'\r\n\r\n========= Remote Traceback (1) =========\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 323, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 589, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 523, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'SlaveService' object has no attribute '__name__'\r\n\r\nException in thread Thread-1:\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/threading.py\", line 917, in _bootstrap_inner\r\n    self.run()\r\n  File \"/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/threading.py\", line 865, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/utils/server.py\", line 180, in _authenticate_and_serve_client\r\n    self._serve_client(sock2, credentials)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/utils/server.py\", line 202, in _serve_client\r\n    self._handle_connection(conn)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/utils/server.py\", line 208, in _handle_connection\r\n    conn.serve_all()\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 403, in serve_all\r\n    self.serve(None)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 387, in serve\r\n    self._dispatch(data)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 353, in _dispatch\r\n    self._dispatch_request(seq, args)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 337, in _dispatch_request\r\n    self._send(consts.MSG_REPLY, seq, self._box(res))\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 273, in _box\r\n    id_pack = get_id_pack(obj)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/lib/__init__.py\", line 159, in get_id_pack\r\n    name_pack = '{0}.{1}'.format(obj.__module__, obj.__name__)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/netref.py\", line 166, in __getattr__\r\n    return syncreq(self, consts.HANDLE_GETATTR, name)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/netref.py\", line 76, in syncreq\r\n    return conn.sync_request(handler, proxy, *args)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 458, in sync_request\r\n    return self.async_request(handler, *args, timeout=timeout).value\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/async_.py\", line 102, in value\r\n    raise self._obj\r\n_get_exception_class.<locals>.Derived: 'SlaveService' object has no attribute '__name__'\r\n\r\n========= Remote Traceback (1) =========\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 323, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 589, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 523, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'SlaveService' object has no attribute '__name__'\r\n```\r\n\r\nAnd this is the log from the backend server:\r\n```\r\n> python /usr/local/bin/rpyc_classic.py -p 8081\r\nINFO:SLAVE/8081:server started on [127.0.0.1]:8081\r\nINFO:SLAVE/8081:accepted ('127.0.0.1', 62812) with fd 4\r\nINFO:SLAVE/8081:welcome ('127.0.0.1', 62812)\r\nDEBUG:SLAVE/8081:Exception caught\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 323, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 589, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 523, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'SlaveService' object has no attribute '__name__'\r\nDEBUG:SLAVE/8081:Exception caught\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 323, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 589, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"/usr/local/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 523, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'SlaveService' object has no attribute '__name__'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/345", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/345/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/345/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/345/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/345", "id": 480432195, "node_id": "MDU6SXNzdWU0ODA0MzIxOTU=", "number": 345, "title": "Race condition on multi-threaded connections", "user": {"login": "conordavis", "id": 37160214, "node_id": "MDQ6VXNlcjM3MTYwMjE0", "avatar_url": "https://avatars3.githubusercontent.com/u/37160214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/conordavis", "html_url": "https://github.com/conordavis", "followers_url": "https://api.github.com/users/conordavis/followers", "following_url": "https://api.github.com/users/conordavis/following{/other_user}", "gists_url": "https://api.github.com/users/conordavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/conordavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/conordavis/subscriptions", "organizations_url": "https://api.github.com/users/conordavis/orgs", "repos_url": "https://api.github.com/users/conordavis/repos", "events_url": "https://api.github.com/users/conordavis/events{/privacy}", "received_events_url": "https://api.github.com/users/conordavis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1513089802, "node_id": "MDU6TGFiZWwxNTEzMDg5ODAy", "url": "https://api.github.com/repos/tomerfiliba/rpyc/labels/Done", "name": "Done", "color": "14935c", "default": false, "description": "Status: The issue has been resolved"}], "state": "closed", "locked": false, "assignee": {"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-08-14T00:50:12Z", "updated_at": "2019-10-02T20:39:58Z", "closed_at": "2019-10-02T20:22:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "When multiple threads are used on a single connection, there is a race condition where a thread waiting on a reply doesn't wake up promptly when another thread handles that reply. In other words, a thread blocked in `AsyncResult.wait` -> `Connection.serve` -> `Channel.poll` will not wake up immediately if a different thread handles the reply that calls `AsyncResult.__call__`.\r\n\r\nSuppose the server is running with 2 threads (`conn.serve_threaded(2)`): thread A and thread B. The server's service exposes a method taking a client-side callback as an argument. For simplicity, the client will have only one thread.\r\n```python\r\nclass SyncCallbackService(rpyc.Service):\r\n    def exposed_func(self, callback):\r\n        callback()\r\n        return None\r\n```\r\n\r\n1. Client calls `conn.root.func(lambda: None)`. Thread A handles this request.\r\n2. Thread A executes the callback synchronously, so it sends a request back to the client and is suspended until step 6. Notably, it is suspended before trying to acquire the recv lock.\r\n3. Thread B acquires the recv lock.\r\n4. Client sends the callback reply.\r\n5. Thread B receives the reply and releases the recv lock.\r\n6. Thread A acquires the recv lock and blocks in `Channel.poll`.\r\n7. Thread B dispatches the reply, calling `AsyncResult.__call__` which sets `self._is_ready = True`.\r\n9. Thread A eventually times out in `Channel.poll`. Thread A's `AsyncResult.wait` call then notices that `self._ready` is truthy, so it doesn't raise `AsyncResultTimeout`. Thread A sends `exposed_func`'s reply to the client.\r\n10. The initial client call from step 1 times out waiting for the reply from step 8.\r\n\r\nIn this scenario, the client's timeout error could be avoided by setting the client's timeout to a higher value than the server's timeout value, but there are still unnecessary delays in the various `AsyncResult.wait` calls.\r\n\r\n##### Environment\r\n\r\n- rpyc 4.1.0\r\n- python 2.7.10\r\n- MacOS 10.14\r\n\r\n\r\n##### Minimal example\r\n```python\r\nclass SyncCallbackService(rpyc.Service):\r\n    def exposed_func(self, callback):\r\n        callback()\r\n        return None\r\n\r\n\r\nclass Test_ServeThreaded(unittest.TestCase):\r\n    def setUp(self):\r\n        # This is a copy of connect_thread, except that it uses serve_threaded\r\n        # instead of serve_all. Use a relatively short timeout because we expect\r\n        # it to time out. To trigger a failure, we must ensure that the server\r\n        # config's timeout is at least as long as the client config's timeout.\r\n        listener = socket.socket()\r\n        listener.bind((\"localhost\", 0))\r\n        listener.listen(1)\r\n\r\n        def server(listener=listener):\r\n            with closing(listener):\r\n                client = listener.accept()[0]\r\n            conn = rpyc.connect_stream(rpyc.SocketStream(client),\r\n                                       service=SyncCallbackService,\r\n                                       config={\"sync_request_timeout\": 2})\r\n            try:\r\n                # Need at least 2 threads to reproduce problem.\r\n                conn.serve_threaded(2)\r\n            except KeyboardInterrupt:\r\n                interrupt_main()\r\n\r\n        rpyc.spawn(server)\r\n        host, port = listener.getsockname()\r\n        self.conn = rpyc.connect(host, port, config={\"sync_request_timeout\": 2})\r\n\r\n    def tearDown(self):\r\n        self.conn.close()\r\n\r\n    def test_sync_callback_with_serve_threaded(self):\r\n        \"\"\"Test for race conditions between server threads.\r\n\r\n        If this test raises TimeoutError, it probably indicates server thread A\r\n        was waiting on an async result that was handled by server thread B.\r\n        Thread A times out in its ``self._channel.poll`` call, but does not fail\r\n        due to :meth:`AsyncResult.wait` checking ``self._is_ready`` even after a\r\n        timeout. However, a client waiting on thread A to complete will timeout\r\n        and fail as long as the client timeout is less than or equal to the\r\n        server timeout.\r\n        \"\"\"\r\n        def callback():\r\n            return None\r\n\r\n        func = self.conn.root.func\r\n        for _ in range(100):\r\n            func(callback)\r\n```\r\n\r\nIf the test case passes, try increasing its loop count.\r\n\r\n##### Possible solutions\r\n\r\n1. Support a way for thread B to interrupt thread A's `Channel.poll` call. I can sort of see using pipes to interrupt `select` calls on Unix. Not sure about Windows. I think Paramiko uses this technique.\r\n2. Use a dedicated thread to handle all recvs. The recv thread only does recvs; it never calls `AsyncResult.wait`. Make `AsyncResult.wait` wait on a `threading.Event` object (`self._event.wait()`) and make `AsyncResult.__call__` set that event (`self._event.set()`).\r\n\r\n   Since unboxing replies involves synchronous requests, the dedicated recv thread should not perform unboxing. I guess the first thread that wakes up from `AsyncResult.wait` should be responsible for unboxing replies.\r\n\r\n   I worry about the performance impact of this option in the common case where only one thread is spawned (i.e. `serve_all` instead of `serve_threaded`).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/343", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/343/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/343/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/343/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/343", "id": 473393242, "node_id": "MDU6SXNzdWU0NzMzOTMyNDI=", "number": 343, "title": "OneShotServer not terminating after client connection closed since release 4.0.0", "user": {"login": "WilliamBruneau", "id": 9432181, "node_id": "MDQ6VXNlcjk0MzIxODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/9432181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WilliamBruneau", "html_url": "https://github.com/WilliamBruneau", "followers_url": "https://api.github.com/users/WilliamBruneau/followers", "following_url": "https://api.github.com/users/WilliamBruneau/following{/other_user}", "gists_url": "https://api.github.com/users/WilliamBruneau/gists{/gist_id}", "starred_url": "https://api.github.com/users/WilliamBruneau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WilliamBruneau/subscriptions", "organizations_url": "https://api.github.com/users/WilliamBruneau/orgs", "repos_url": "https://api.github.com/users/WilliamBruneau/repos", "events_url": "https://api.github.com/users/WilliamBruneau/events{/privacy}", "received_events_url": "https://api.github.com/users/WilliamBruneau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-26T14:41:26Z", "updated_at": "2019-07-27T06:53:23Z", "closed_at": "2019-07-27T06:53:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With this simple server/client:\r\n\r\nServer:\r\n\r\n```python\r\nfrom rpyc.utils.server import OneShotServer\r\nfrom rpyc.core import SlaveService\r\n\r\nserver = OneShotServer(SlaveService, hostname='localhost', port=4455)\r\nserver.start()\r\n```\r\n\r\nClient:\r\n\r\n```python\r\nimport rpyc\r\n\r\nconn = rpyc.classic.connect('localhost', 4455)\r\n```\r\n\r\nServer terminates after client execution when using rpyc release 3.4.4 (expected behavior according to documentation: \"A server that handles a single connection (blockingly), and terminates after that\").\r\nStarting from release 4.0.0, the server does not terminate after client execution.\r\n\r\nI am not sure if it is just a documentation issue or unwanted behavior.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/342", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/342/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/342/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/342/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/342", "id": 468734979, "node_id": "MDU6SXNzdWU0Njg3MzQ5Nzk=", "number": 342, "title": "root objects (services) hang when used with Flask", "user": {"login": "minusplusminus", "id": 1842262, "node_id": "MDQ6VXNlcjE4NDIyNjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1842262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minusplusminus", "html_url": "https://github.com/minusplusminus", "followers_url": "https://api.github.com/users/minusplusminus/followers", "following_url": "https://api.github.com/users/minusplusminus/following{/other_user}", "gists_url": "https://api.github.com/users/minusplusminus/gists{/gist_id}", "starred_url": "https://api.github.com/users/minusplusminus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minusplusminus/subscriptions", "organizations_url": "https://api.github.com/users/minusplusminus/orgs", "repos_url": "https://api.github.com/users/minusplusminus/repos", "events_url": "https://api.github.com/users/minusplusminus/events{/privacy}", "received_events_url": "https://api.github.com/users/minusplusminus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 98299265, "node_id": "MDU6TGFiZWw5ODI5OTI2NQ==", "url": "https://api.github.com/repos/tomerfiliba/rpyc/labels/Question", "name": "Question", "color": "fbca04", "default": false, "description": "Type"}], "state": "closed", "locked": false, "assignee": {"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-07-16T15:53:18Z", "updated_at": "2019-10-02T21:23:30Z", "closed_at": "2019-10-02T21:21:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi everyone,\r\n\r\nI have some issues regarding threading combined with flask. \r\nFlask demands that everything is done within the context of Flask. To do that I must use:\r\n\r\n[https://flask.palletsprojects.com/en/1.0.x/api/#flask.has_app_context](flask.has_app_context)\r\n\r\nIn my project I use \r\n[https://github.com/tomerfiliba/rpyc/tree/master/demos/chat](chatdemo)\r\nas inspiration for the system\r\n\r\n\r\n\r\nWhen I try to send using an exposed function, the application hangs for a short while and shows the above error. \r\n\r\nThe data goes like this:\r\n- client sends data from client to server\r\n- server processes it, and sends it to component that needs it\r\nthis goes always correct. \r\n- client receives is from server. client executes it with `flask.has_app_context`. App hangs with message `error result expired`\r\nThen I try to do it on a new thread, using `threading`. The other client receives the message, but the thread was somehow not closed. Gives following error:\r\n\r\n\r\n```\r\nException in thread Thread-5:\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/threading.py\", line 917, in _bootstrap_inner\r\n    self.run()\r\n  File \"/usr/local/lib/python3.7/threading.py\", line 865, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/tmp/pycharm_project_44/mobyWeb/utils.py\", line 161, in msg_async\r\n    get_controller_client().send(comp, msg)\r\n  File \"/tmp/pycharm_project_44/mobyWeb/utils.py\", line 150, in get_controller_client\r\n    callback_update=halclient_update_callback,\r\n  File \"/tmp/pycharm_project_44/mobylib/messaging/client.py\", line 59, in connect\r\n    self.requireState)\r\n  File \"venv/lib/python3.7/site-packages/rpyc/core/netref.py\", line 242, in __call__\r\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\r\n  File \"venv/lib/python3.7/site-packages/rpyc/core/netref.py\", line 76, in syncreq\r\n    return conn.sync_request(handler, proxy, *args)\r\n  File \"venv/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 455, in sync_request\r\n    return self.async_request(handler, *args, timeout=timeout).value\r\n  File \"venv/lib/python3.7/site-packages/rpyc/core/async_.py\", line 102, in value\r\n    raise self._obj\r\n_get_exception_class.<locals>.Derived: Set changed size during iteration\r\n\r\n========= Remote Traceback (1) =========\r\nTraceback (most recent call last):\r\n  File \"venv/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 322, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"venv/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 577, in _handle_call\r\n    return obj(*args, **dict(kwargs))\r\n  File \"controller/run.py\", line 113, in exposed_connect\r\n    callback_error)\r\n  File \"controller/ComponentToken.py\", line 21, in __init__\r\n    self.broadcast(\"* Hello %s *\" % (self.name,))\r\n  File \"controller/ComponentToken.py\", line 90, in broadcast\r\n    for tok in tokens:\r\nRuntimeError: Set changed size during iteration\r\n```\r\n\r\n\r\n##### Environment\r\n\r\n- rpyc 4.02\r\n- python 3.7\r\n- operating system Linux\r\n\r\n\r\n##### Minimal example\r\n\r\nServer:\r\n\r\n```python\r\n# from threading import RLock\r\nfrom threading import RLock\r\n\r\nbroadcast_lock = RLock()  # thread lock\r\ntokens = set()\r\n\r\n\r\nclass ComponentToken(object):\r\n    def __init__(self, HalToken, name, callback_send, callback_update, callback_state, callback_error):\r\n        super()\r\n        self.name = name\r\n        self.stale = False\r\n        self.rt = None\r\n        self.HalToken = HalToken\r\n\r\n        self.callback_send = callback_send\r\n        self.callback_update = callback_update\r\n        self.callback_state = callback_state\r\n        self.callback_error = callback_error\r\n\r\n        self.broadcast(\"* Hello %s *\" % (self.name,))\r\n        tokens.add(self)\r\n\r\n    def exposed_send(self, component, message):\r\n        if self.stale:\r\n            raise ValueError(\"Component token is stale\")\r\n\r\n        self.broadcast_component(component, message, 'send')\r\n\r\n    def exposed_update(self, component, message):\r\n        print('exposed update',component,message)\r\n        if self.stale:\r\n            raise ValueError(\"Component token is stale\")\r\n        self.broadcast_component(component, message, 'update')\r\n\r\n    def exposed_error(self, component, message):\r\n        if self.stale:\r\n            raise ValueError(\"Component token is stale\")\r\n        self.broadcast_component(component, message, 'error')\r\n\r\n    def exposed_state(self, message):\r\n        if self.stale:\r\n            raise ValueError(\"Component token is stale\")\r\n        self.broadcast(\"[%s] %s\" % (self.name, message))\r\n\r\n    def exposed_logout(self):\r\n        if self.stale:\r\n            return\r\n        self.stale = True\r\n        self.callback_send = None\r\n        tokens.discard(self)\r\n        self.broadcast(\"* Component disconnected %s *\" % (self.name,))\r\n\r\n    def broadcast_component(self, component, message, type):\r\n        global tokens\r\n\r\n        stale = set()\r\n\r\n        if component == 'hal':\r\n            if type == 'send':\r\n                self.HalToken.on_message(message, self)\r\n            if type == 'update':\r\n                self.HalToken.on_update(message, self)\r\n            if type == 'state':\r\n                self.HalToken.on_state(message, self)\r\n            if type == 'error':\r\n                self.HalToken.on_error(message, self)\r\n            return\r\n\r\n        # with broadcast_lock:\r\n        for tok in tokens:\r\n            try:\r\n                if tok.name == component:\r\n                    if type == 'send':\r\n                        tok.callback_send(message)\r\n                    if type == 'update':\r\n                        tok.callback_update(message)\r\n                    if type == 'state':\r\n                        tok.callback_state(message)\r\n                    if type == 'error':\r\n                        tok.callback_error(message)\r\n            except:\r\n                stale.add(tok)\r\n        tokens -= stale\r\n\r\n    def broadcast(self, message):\r\n        global tokens\r\n        stale = set()\r\n        # with broadcast_lock:\r\n        for tok in tokens:\r\n            try:\r\n                tok.callback_state(message)\r\n            except:\r\n                stale.add(tok)\r\n        tokens -= stale\r\n\r\nclass HalToken(object):\r\n    @staticmethod\r\n    def on_message(message, token):\r\n        global unixclient\r\n\r\n        if 'type' in message:\r\n            try:\r\n                if 'state' not in message:\r\n                    print(message)\r\n                if unixclient is not None:\r\n                    unixclient.sendData(message)\r\n\r\n            except IOError as e:\r\n                print('[driver] error socket', e)\r\n                token.broadcast_component('webserver', str(e), 'error')\r\n\r\n        else:\r\n            print('keys missing in message : ', message)\r\n\r\n    @staticmethod\r\n    def on_update(message, token):\r\n        print(message)\r\n\r\n    @staticmethod\r\n    def on_state(message, token):\r\n        print(message)\r\n\r\n    @staticmethod\r\n    def on_error(message, token):\r\n        print('on_state', message)\r\n\r\n\r\n#\r\n# Main service that shares exposed def with slave services\r\n#\r\nclass HALService(Service):\r\n    def on_connect(self, conn):\r\n        self.token = None\r\n\r\n    def on_disconnect(self, conn):\r\n        if self.token:\r\n            if self.token.rt is not None:\r\n                self.token.rt.stop()\r\n\r\n            self.token.exposed_logout()\r\n\r\n    def exposed_connect(self,\r\n                        component_name=str,\r\n                        callback_send=None,\r\n                        callback_update=None,\r\n                        callback_state=None,\r\n                        callback_error=None,\r\n                        requireState=None):\r\n\r\n        if self.token and not self.token.stale:\r\n            raise ValueError(\"already connected\")\r\n        if component_name in components:\r\n            print('connecting :' + component_name)\r\n            self.token = ComponentToken(HalToken,\r\n                                        component_name,\r\n                                        async_(callback_send),\r\n                                        async_(callback_update),\r\n                                        callback_state,\r\n                                        callback_error)\r\n\r\n            return self.token\r\n        else:\r\n            raise ValueError(\"wrong Component name \")\r\n\r\n\r\ndef socket_receive(json):\r\n    print(json)\r\n\r\n\r\nif __name__ == '__main__':\r\n    t = None\r\n    try:\r\n\r\n        print('running HAL')\r\n\r\n        t = ThreadedServer(HALService, port=19912)\r\n        t.start()\r\n\r\n    except KeyboardInterrupt:\r\n        print('Interrupted')\r\n    try:\r\n        t.close()\r\n       # unixclient.close()\r\n        sys.exit(0)\r\n    except SystemExit:\r\n        os._exit(0)\r\n\r\n```\r\n\r\nClient:\r\n\r\n```python\r\nimport json\r\nimport time\r\n\r\nimport rpyc\r\n\r\nrpyc.core.protocol.DEFAULT_CONFIG['allow_pickle'] = True\r\n\r\n\r\nclass HalConnectionError(Exception):\r\n    \"\"\"Some connection error while talking to HAL.\"\"\"\r\n    pass\r\n\r\n\r\nclass Client(object):\r\n    def __init__(self, requireState=None):\r\n        self.conn = None\r\n        self.user = None\r\n        self.requireState = requireState\r\n\r\n    def disconnect(self):\r\n        print('on_close')\r\n        self.bgsrv.stop()\r\n        if self.conn:\r\n            try:\r\n                self.user.logout()\r\n            except:\r\n                pass\r\n\r\n            time.sleep(2)\r\n            try:\r\n                self.bgsrv.stop()\r\n                self.conn.close()\r\n\r\n                time.sleep(2)\r\n                self.user = None\r\n                self.conn = None\r\n            except:\r\n                print('close')\r\n\r\n    def on_close(self, widget):\r\n        print('on_close')\r\n        self.bgsrv.stop()\r\n        self.disconnect()\r\n\r\n    def connect(self, clientName, callback_message, callback_update=None, callback_state=None, callback_error=None):\r\n\r\n        try:\r\n            self.conn = rpyc.connect('localhost', 19912, keepalive=True)\r\n        except ConnectionRefusedError as err:\r\n            raise HalConnectionError(err)\r\n\r\n        self.name = clientName\r\n        self.user = self.conn.root.connect(clientName,\r\n                                           self.on_message,\r\n                                           self.on_update,\r\n                                           self.on_state,\r\n                                           self.on_error,\r\n                                           self.requireState)\r\n\r\n        self.bgsrv = rpyc.BgServingThread(self.conn)\r\n        self.callback = callback_message\r\n        self.callback_update = callback_update\r\n\r\n    #\r\n    # called by the reactor whenever the connection has something to send\r\n    #\r\n    def bg_server(self, source=None, cond=None):\r\n\r\n        if self.conn:\r\n            self.conn.poll_all()\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    #\r\n    # sends the current message\r\n    #\r\n    def send(self, component, msg):\r\n        json_dict = {**{'client': self.name}, **msg}\r\n        self.user.send(component, json.dumps(json_dict))\r\n\r\n\r\n  #\r\n    # called by the server, with the text\r\n    #\r\n    def on_message(self, text):\r\n        if self.callback: self.callback(text)\r\n\r\n    def on_update(self, text):\r\n        if self.callback_update: self.callback_update(text)\r\n\r\n   def get_controller_client():\r\n    \"\"\"Return a client for the HAL server.\"\"\"\r\n    if 'hal_client' not in flask.g:\r\n        flask.g.hal_client = HalClient(requireState=False)\r\n        flask.g.hal_client.connect(\r\n            clientName='mobyWeb',\r\n            callback_message=halclient_message_callback,\r\n            callback_update=halclient_update_callback,\r\n        )\r\n\r\n    return flask.g.hal_client\r\n    def halclient_update_callback(msg):\r\n             app = web.flask_app\r\n             with app.app_context():\r\n                 # Hangs after this line\r\n                 get_controller_client().send('component', {'key': 'value'})\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/341", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/341/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/341/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/341/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/341", "id": 467845437, "node_id": "MDU6SXNzdWU0Njc4NDU0Mzc=", "number": 341, "title": "cannot run Windows gui application via rpyc ", "user": {"login": "iradization", "id": 29353915, "node_id": "MDQ6VXNlcjI5MzUzOTE1", "avatar_url": "https://avatars3.githubusercontent.com/u/29353915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iradization", "html_url": "https://github.com/iradization", "followers_url": "https://api.github.com/users/iradization/followers", "following_url": "https://api.github.com/users/iradization/following{/other_user}", "gists_url": "https://api.github.com/users/iradization/gists{/gist_id}", "starred_url": "https://api.github.com/users/iradization/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iradization/subscriptions", "organizations_url": "https://api.github.com/users/iradization/orgs", "repos_url": "https://api.github.com/users/iradization/repos", "events_url": "https://api.github.com/users/iradization/events{/privacy}", "received_events_url": "https://api.github.com/users/iradization/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-14T14:21:42Z", "updated_at": "2019-07-15T03:46:31Z", "closed_at": "2019-07-15T03:46:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm using rpyc under python2.7.15 and my goal is to run a simple gui-based application (say c:\\Windows\\System32\\notepad.exe)\r\n\r\non client side I do : \r\n\r\n```\r\nconn = rpyc.classic.connect(remote_ip)\r\nproc = conn.modules.subprocess.Popen(cmd, shell=True)\r\nproc.communicate()\r\n```\r\nand on server side I simply run the c:\\Python27\\Scripts\\rpyc_classic.py\r\n\r\n\r\nHowever, it seems like the application got started but without any visible UI window on the remote/server machine, which is the notepad editor in my case.\r\n\r\nI've also tried `conn.modules.os.system` which led to the same result ... \r\n\r\nPerhaps is there any way to config the rpyc client/server to support opening the gui window ?\r\n\r\nThanks ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/339", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/339/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/339/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/339/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/339", "id": 464910216, "node_id": "MDU6SXNzdWU0NjQ5MTAyMTY=", "number": 339, "title": "Typo in netref.class_factory?", "user": {"login": "pilcru", "id": 2668286, "node_id": "MDQ6VXNlcjI2NjgyODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2668286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pilcru", "html_url": "https://github.com/pilcru", "followers_url": "https://api.github.com/users/pilcru/followers", "following_url": "https://api.github.com/users/pilcru/following{/other_user}", "gists_url": "https://api.github.com/users/pilcru/gists{/gist_id}", "starred_url": "https://api.github.com/users/pilcru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pilcru/subscriptions", "organizations_url": "https://api.github.com/users/pilcru/orgs", "repos_url": "https://api.github.com/users/pilcru/repos", "events_url": "https://api.github.com/users/pilcru/events{/privacy}", "received_events_url": "https://api.github.com/users/pilcru/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1513089802, "node_id": "MDU6TGFiZWwxNTEzMDg5ODAy", "url": "https://api.github.com/repos/tomerfiliba/rpyc/labels/Done", "name": "Done", "color": "14935c", "default": false, "description": "Status: The issue has been resolved"}], "state": "closed", "locked": false, "assignee": {"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-07-07T03:15:13Z", "updated_at": "2019-09-23T20:30:32Z", "closed_at": "2019-07-15T05:38:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "While investigating the other issue I posted today, I came across [this line](https://github.com/tomerfiliba/rpyc/blob/2f2a43e3538e4f6f21c0106a2f51a92ffcd623fb/rpyc/core/netref.py#L298) in `core.netref.py`. I'm almost certain this is a typo, but I wasn't able to link it to an actual bug. It might have no impact at all given how it's used in `protocol.netref_factory.py`.\r\n\r\nHere is the code:\r\n```python\r\nif _module:\r\n    if id_pack[0] != 0:\r\n        ns[\"__class__\"] = _module\r\n    else:\r\n        ns[\"__class__\"] = getattr(_module, \"__class__\", None)\r\n```\r\nThe test `id_pack[0] != 0` does not make sense since `id_pack[0]` is the `name_pack` string. Instead I think it should be \r\n```python\r\nif _module:\r\n    if id_pack[2] == 0:\r\n       ...\r\n```\r\nThen if the object to be netref-ed is a class (`id_pack[2] == 0`), we can directly use it rather than finding its base class first.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/338", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/338/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/338/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/338/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/338", "id": 464903453, "node_id": "MDU6SXNzdWU0NjQ5MDM0NTM=", "number": 338, "title": "Issue template example is not working", "user": {"login": "pilcru", "id": 2668286, "node_id": "MDQ6VXNlcjI2NjgyODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2668286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pilcru", "html_url": "https://github.com/pilcru", "followers_url": "https://api.github.com/users/pilcru/followers", "following_url": "https://api.github.com/users/pilcru/following{/other_user}", "gists_url": "https://api.github.com/users/pilcru/gists{/gist_id}", "starred_url": "https://api.github.com/users/pilcru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pilcru/subscriptions", "organizations_url": "https://api.github.com/users/pilcru/orgs", "repos_url": "https://api.github.com/users/pilcru/repos", "events_url": "https://api.github.com/users/pilcru/events{/privacy}", "received_events_url": "https://api.github.com/users/pilcru/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 79025, "node_id": "MDU6TGFiZWw3OTAyNQ==", "url": "https://api.github.com/repos/tomerfiliba/rpyc/labels/Bug", "name": "Bug", "color": "fa0000", "default": false, "description": "Status: The issue is confirmed to be a bug"}], "state": "closed", "locked": false, "assignee": {"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-07-07T01:01:29Z", "updated_at": "2019-07-14T23:13:48Z", "closed_at": "2019-07-14T05:10:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "The \"minimal example\" from the issue template does not run, and I don't think it ever has. The error it runs into is the same as #192. Is that intended?\r\n\r\nI tested with Python 3, rpyc v4.1.0 and 4.0.2 with the same results.\r\n\r\nChanging the `ListService` class in the template to this makes the example output `['hello', 'world']`:\r\n\r\n```python\r\nclass ListService(rpyc.Service):\r\n    def exposed_concat(self, lst):\r\n        return [x for x in lst] + ['world']\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/337", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/337/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/337/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/337/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/337", "id": 464902998, "node_id": "MDU6SXNzdWU0NjQ5MDI5OTg=", "number": 337, "title": "Regression with IronPython on RPyC v4.1.0", "user": {"login": "pilcru", "id": 2668286, "node_id": "MDQ6VXNlcjI2NjgyODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2668286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pilcru", "html_url": "https://github.com/pilcru", "followers_url": "https://api.github.com/users/pilcru/followers", "following_url": "https://api.github.com/users/pilcru/following{/other_user}", "gists_url": "https://api.github.com/users/pilcru/gists{/gist_id}", "starred_url": "https://api.github.com/users/pilcru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pilcru/subscriptions", "organizations_url": "https://api.github.com/users/pilcru/orgs", "repos_url": "https://api.github.com/users/pilcru/repos", "events_url": "https://api.github.com/users/pilcru/events{/privacy}", "received_events_url": "https://api.github.com/users/pilcru/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 79025, "node_id": "MDU6TGFiZWw3OTAyNQ==", "url": "https://api.github.com/repos/tomerfiliba/rpyc/labels/Bug", "name": "Bug", "color": "fa0000", "default": false, "description": "Status: The issue is confirmed to be a bug"}], "state": "closed", "locked": false, "assignee": {"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-07-07T00:53:22Z", "updated_at": "2019-07-14T23:14:03Z", "closed_at": "2019-07-14T22:42:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "a63c27e53c709d02e6df995c2bd1bdb34fa6eaaa re-introduces incompatibilities of RPyC with IronPython that were initially referenced in #10. The issue is that in IronPython, `str == unicode`, and the CPython side unboxes objects of that type to `unicode`. This in turns leads to various problems in functions like `type()` that expect `str` objects.\r\n\r\nA simple fix is to replace [this line](https://github.com/tomerfiliba/rpyc/blob/2f2a43e3538e4f6f21c0106a2f51a92ffcd623fb/rpyc/core/protocol.py#L296) with:\r\n\r\n```\r\nid_pack = (str(value[0]), value[1], value[2])\r\n```\r\n\r\nto bring back the behavior that was [there before](https://github.com/tomerfiliba/rpyc/blob/9cbe40b489b9c46d7263c08fcd34fbfaf161e764/rpyc/core/netref.py#L289-L290). I feel like it's safer to do the cast during unboxing rather than in `class_factory`, to prevent the id_pack to ever exist as two different types, but that's just a suggestion.\r\n\r\nThis bug shows up when connecting IronPython 2.7.9 to CPython 2.7.16 on Windows 10 64bits, rpyc v4.1.0.\r\n\r\nServer = IronPython:\r\n\r\n```python\r\nimport rpyc\r\nfrom rpyc.utils.server import OneShotServer\r\nrpyc.lib.setup_logger()\r\n\r\nclass ListService(rpyc.Service):\r\n    def exposed_concat(self, lst):\r\n        return [x for x in lst] + ['world']\r\n\r\nserver = OneShotServer(ListService, port=12345)\r\nserver.start()\r\n```\r\n\r\nClient = CPython:\r\n\r\n```python\r\nimport rpyc\r\nc = rpyc.connect(\"localhost\", 12345)\r\nprint(c.root.concat(['hello']))\r\n```\r\n\r\nTraceback:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Users\\pierre\\AppData\\Local\\Continuum\\anaconda3\\envs\\rhinoremote\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 485, in root\r\n    self._remote_root = self.sync_request(consts.HANDLE_GETROOT)\r\n  File \"C:\\Users\\pierre\\AppData\\Local\\Continuum\\anaconda3\\envs\\rhinoremote\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 455, in sync_request\r\n    return self.async_request(handler, *args, timeout=timeout).value\r\n  File \"C:\\Users\\pierre\\AppData\\Local\\Continuum\\anaconda3\\envs\\rhinoremote\\lib\\site-packages\\rpyc\\core\\async_.py\", line 100, in value\r\n    self.wait()\r\n  File \"C:\\Users\\pierre\\AppData\\Local\\Continuum\\anaconda3\\envs\\rhinoremote\\lib\\site-packages\\rpyc\\core\\async_.py\", line 47, in wait\r\n    self._conn.serve(self._ttl)\r\n  File \"C:\\Users\\pierre\\AppData\\Local\\Continuum\\anaconda3\\envs\\rhinoremote\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 384, in serve\r\n    self._dispatch(data)\r\n  File \"C:\\Users\\pierre\\AppData\\Local\\Continuum\\anaconda3\\envs\\rhinoremote\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 352, in _dispatch\r\n    obj = self._unbox(args)\r\n  File \"C:\\Users\\pierre\\AppData\\Local\\Continuum\\anaconda3\\envs\\rhinoremote\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 300, in _unbox\r\n    proxy = self._netref_factory(id_pack)\r\n  File \"C:\\Users\\pierre\\AppData\\Local\\Continuum\\anaconda3\\envs\\rhinoremote\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 314, in _netref_factory\r\n    cls = netref.class_factory(id_pack, cls_methods)\r\n  File \"C:\\Users\\pierre\\AppData\\Local\\Continuum\\anaconda3\\envs\\rhinoremote\\lib\\site-packages\\rpyc\\core\\netref.py\", line 302, in class_factory\r\n    return type(name_pack, (BaseNetref,), ns)\r\nTypeError: type() argument 1 must be string, not unicode\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/336", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/336/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/336/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/336/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/336", "id": 462238372, "node_id": "MDU6SXNzdWU0NjIyMzgzNzI=", "number": 336, "title": "The readthedocs website is outdated", "user": {"login": "pilcru", "id": 2668286, "node_id": "MDQ6VXNlcjI2NjgyODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2668286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pilcru", "html_url": "https://github.com/pilcru", "followers_url": "https://api.github.com/users/pilcru/followers", "following_url": "https://api.github.com/users/pilcru/following{/other_user}", "gists_url": "https://api.github.com/users/pilcru/gists{/gist_id}", "starred_url": "https://api.github.com/users/pilcru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pilcru/subscriptions", "organizations_url": "https://api.github.com/users/pilcru/orgs", "repos_url": "https://api.github.com/users/pilcru/repos", "events_url": "https://api.github.com/users/pilcru/events{/privacy}", "received_events_url": "https://api.github.com/users/pilcru/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1513089802, "node_id": "MDU6TGFiZWwxNTEzMDg5ODAy", "url": "https://api.github.com/repos/tomerfiliba/rpyc/labels/Done", "name": "Done", "color": "14935c", "default": false, "description": "Status: The issue has been resolved"}], "state": "closed", "locked": false, "assignee": {"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-06-28T23:26:17Z", "updated_at": "2019-10-02T20:40:35Z", "closed_at": "2019-07-28T15:08:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "At https://rpyc.readthedocs.io/en/latest/, the \"news\" banner point to the release of 4.0.2, and the changelog hasn't been updated to 4.1.0. This got me slightly confused when I was looking for info related to #330 and hit that page first before heading to github.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/335", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/335/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/335/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/335/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/335", "id": 461908502, "node_id": "MDU6SXNzdWU0NjE5MDg1MDI=", "number": 335, "title": "Builtin json.dumps fails on transmitted dict", "user": {"login": "nasefbasdf", "id": 40052461, "node_id": "MDQ6VXNlcjQwMDUyNDYx", "avatar_url": "https://avatars3.githubusercontent.com/u/40052461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nasefbasdf", "html_url": "https://github.com/nasefbasdf", "followers_url": "https://api.github.com/users/nasefbasdf/followers", "following_url": "https://api.github.com/users/nasefbasdf/following{/other_user}", "gists_url": "https://api.github.com/users/nasefbasdf/gists{/gist_id}", "starred_url": "https://api.github.com/users/nasefbasdf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nasefbasdf/subscriptions", "organizations_url": "https://api.github.com/users/nasefbasdf/orgs", "repos_url": "https://api.github.com/users/nasefbasdf/repos", "events_url": "https://api.github.com/users/nasefbasdf/events{/privacy}", "received_events_url": "https://api.github.com/users/nasefbasdf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 98299265, "node_id": "MDU6TGFiZWw5ODI5OTI2NQ==", "url": "https://api.github.com/repos/tomerfiliba/rpyc/labels/Question", "name": "Question", "color": "fbca04", "default": false, "description": "Type"}], "state": "closed", "locked": false, "assignee": {"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-06-28T07:58:30Z", "updated_at": "2019-07-14T23:38:31Z", "closed_at": "2019-07-14T23:13:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nThere is a procedure which I need to call through RPyC in which a passed argument needs to be JSON serialized. This does not work unfortunately. I think the JSON encoder does not recognize the transmitted object's type.\r\n\r\nI expect the dict to be serialized, but `TypeError` is raised instead.\r\n\r\n## Reproducing the error\r\nI use a virtualenv in the example located at `C:\\L\\testing27` while the real interpreter is at `C:\\Programs\\Python27`.\r\n### Server\r\nTo reproduce start a classic server:\r\n```\r\nC:\\L\\testing27>Scripts\\activate.bat\r\n(testing27) C:\\L\\testing27>python Scripts/rpyc_classic.py\r\nINFO:SLAVE/18812:server started on [127.0.0.1]:18812\r\n```\r\n### Client\r\nOpen a client connection and try encoding a dict to JSON:\r\n```\r\nC:\\L\\testing27>Scripts\\activate.bat\r\n(testing27) C:\\L\\testing27>python\r\n>>> import rpyc\r\n>>> c = rpyc.classic.connect(\"localhost\")\r\n>>> c.modules['json'].dumps({})\r\n```\r\n### Traces\r\n```\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 1, in <module>\r\n  File \"C:\\L\\testing27\\lib\\site-packages\\rpyc\\core\\netref.py\", line 242, in __call__\r\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\r\n  File \"C:\\L\\testing27\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\r\n    return conn.sync_request(handler, proxy, *args)\r\n  File \"C:\\L\\testing27\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 455, in sync_request\r\n    return self.async_request(handler, *args, timeout=timeout).value\r\n  File \"C:\\L\\testing27\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\r\n    raise self._obj\r\nTypeError: {} is not JSON serializable\r\n\r\n========= Remote Traceback (1) =========\r\nTraceback (most recent call last):\r\n  File \"C:\\L\\testing27\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 322, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\L\\testing27\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 577, in _handle_call\r\n    return obj(*args, **dict(kwargs))\r\n  File \"C:\\Programs\\Python27\\Lib\\json\\__init__.py\", line 244, in dumps\r\n    return _default_encoder.encode(obj)\r\n  File \"C:\\Programs\\Python27\\Lib\\json\\encoder.py\", line 207, in encode\r\n    chunks = self.iterencode(o, _one_shot=True)\r\n  File \"C:\\Programs\\Python27\\Lib\\json\\encoder.py\", line 270, in iterencode\r\n    return _iterencode(o, 0)\r\n  File \"C:\\Programs\\Python27\\Lib\\json\\encoder.py\", line 184, in default\r\n    raise TypeError(repr(o) + \" is not JSON serializable\")\r\nTypeError: {} is not JSON serializable\r\n```\r\n\r\n## Environment\r\n\r\n- rypc 4.1.0\r\n- python 2.7.15\r\n- Windows 10\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/332", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/332/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/332/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/332/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/332", "id": 451746695, "node_id": "MDU6SXNzdWU0NTE3NDY2OTU=", "number": 332, "title": "Improve the clarity of error messages for version incompatibility", "user": {"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-06-04T00:40:31Z", "updated_at": "2019-06-17T04:37:20Z", "closed_at": "2019-06-17T04:37:20Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "There should be a unique exception which is thrown when using incompatible versions. Rather than using an exception hierarchy, once Python 2 support is dropped, `RpycVersionError` should suffice. So, support for this should be done in tandem with dropping Python 2 support.\r\n\r\n##### Environment: RPyC versions\r\n**Original issue:** #330 \r\n**Client**\r\n- RPyC 4.1.0\r\n- Python 3\r\n\r\n**Server**\r\n- RPyC 4.0.2\r\n- Python 3\r\n\r\n```\r\n========= Remote Traceback (1) =========\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 329, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"/usr/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 594, in _handle_inspect\r\n    return tuple(netref.inspect_methods(self._local_objects[oid]))\r\n  File \"/usr/lib/python3.7/site-packages/rpyc/lib/colls.py\", line 86, in __getitem__\r\n    return self._dict[key][0]\r\nKeyError: (7696561775896, 'SlaveService', 'rpyc.core.service')\r\n```\r\n##### Environment: Python interpreter 2-3 \r\n**Original issue:** #327  \r\n**Client**\r\n- RPyC 4.1.0\r\n- Python 2\r\n\r\n**Server**\r\n- RPyC 4.1.0\r\n- Python 3\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"./matlabClient.py\", line 17, in <module>\r\n    r = c.root.performMatlab(\"gcd\", *l)\r\n  File \"/home/lafayette/.local/lib/python2.7/site-packages/rpyc/core/netref.py\", line 199, in __call__\r\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\r\n  File \"/home/lafayette/.local/lib/python2.7/site-packages/rpyc/core/netref.py\", line 75, in syncreq\r\n    return conn.sync_request(handler, proxy, *args)\r\n  File \"/home/lafayette/.local/lib/python2.7/site-packages/rpyc/core/protocol.py\", line 471, in sync_request\r\n    return self.async_request(handler, *args, timeout=timeout).value\r\n  File \"/home/lafayette/.local/lib/python2.7/site-packages/rpyc/core/async_.py\", line 97, in value\r\n    raise self._obj\r\nrpyc.core.vinegar/builtins.TypeError: must be str, not bytes\r\n\r\n========= Remote Traceback (1) =========\r\nTraceback (most recent call last):\r\n  File \"/home/lafayette/.local/lib/python3.6/site-packages/rpyc/core/protocol.py\", line 329, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"/home/lafayette/.local/lib/python3.6/site-packages/rpyc/core/protocol.py\", line 590, in _handle_call\r\n    return obj(*args, **dict(kwargs))\r\n  File \"matlabService.py\", line 162, in exposed_performMatlab\r\n    return performMatlab(theMatlabFunc, *args, **kwargs)\r\n  File \"matlabService.py\", line 121, in performMatlab\r\n    \" \" + repr(args) + \" \" + repr(kwargs))\r\nTypeError: must be str, not bytes\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/331", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/331/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/331/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/331/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/331", "id": 451133151, "node_id": "MDU6SXNzdWU0NTExMzMxNTE=", "number": 331, "title": "rpyc uses a lot of bandwidth", "user": {"login": "Thordin", "id": 5335295, "node_id": "MDQ6VXNlcjUzMzUyOTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/5335295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thordin", "html_url": "https://github.com/Thordin", "followers_url": "https://api.github.com/users/Thordin/followers", "following_url": "https://api.github.com/users/Thordin/following{/other_user}", "gists_url": "https://api.github.com/users/Thordin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thordin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thordin/subscriptions", "organizations_url": "https://api.github.com/users/Thordin/orgs", "repos_url": "https://api.github.com/users/Thordin/repos", "events_url": "https://api.github.com/users/Thordin/events{/privacy}", "received_events_url": "https://api.github.com/users/Thordin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1443665116, "node_id": "MDU6TGFiZWwxNDQzNjY1MTE2", "url": "https://api.github.com/repos/tomerfiliba/rpyc/labels/Diagnosed", "name": "Diagnosed", "color": "2980B9", "default": false, "description": "Status: The issue is reviewed/confirmed but not in progress"}, {"id": 1371305861, "node_id": "MDU6TGFiZWwxMzcxMzA1ODYx", "url": "https://api.github.com/repos/tomerfiliba/rpyc/labels/Help%20Wanted", "name": "Help Wanted", "color": "fcbdf5", "default": false, "description": "Type"}], "state": "closed", "locked": false, "assignee": {"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-06-01T23:07:30Z", "updated_at": "2020-01-30T18:24:16Z", "closed_at": "2020-01-30T18:24:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "This seems to use a lot of bandwidth. \r\n\r\nUsing a function that takes 1 variable and returns it with an integer seems to take 295 bytes.\r\n\r\n##### Environment\r\n\r\n- rpyc version: 4.1.0\r\n- python version: 3.6.7\r\n- operating system: Ubuntu 18.04 x64\r\n\r\n\r\n##### Minimal example\r\n\r\nClient\r\n\r\n```\r\nimport rpyc\r\n\r\nc = rpyc.connect(\"127.0.0.1\", 5001)\r\nc.root.exposed_test(123)\r\n```\r\n\r\nServer\r\n```\r\nimport rpyc\r\nfrom rpyc.utils.server import ThreadedServer\r\n\r\nclass Service(rpyc.Service):\r\n    def exposed_test(self, a):\r\n        return a\r\n\r\nt = ThreadedServer(Service, port=5001)\r\nt.start()\r\n```\r\n\r\ntcpdump after connect fires.\r\n\r\n```\r\n16:05:54.599262 IP 127.0.0.1.34610 > 127.0.0.1.5001: Flags [P.], seq 290:370, ack 1378, win 1365, options [nop,nop,TS val 2631238375 ecr 2631217421], length 80\r\n16:05:54.600370 IP 127.0.0.1.5001 > 127.0.0.1.34610: Flags [P.], seq 1378:1435, ack 370, win 342, options [nop,nop,TS val 2631238376 ecr 2631238375], length 57\r\n16:05:54.600394 IP 127.0.0.1.34610 > 127.0.0.1.5001: Flags [.], ack 1435, win 1365, options [nop,nop,TS val 2631238376 ecr 2631238376], length 0\r\n16:05:54.601555 IP 127.0.0.1.34610 > 127.0.0.1.5001: Flags [P.], seq 370:439, ack 1435, win 1365, options [nop,nop,TS val 2631238378 ecr 2631238376], length 69\r\n16:05:54.601782 IP 127.0.0.1.5001 > 127.0.0.1.34610: Flags [P.], seq 1435:1447, ack 439, win 342, options [nop,nop,TS val 2631238378 ecr 2631238378], length 12\r\n16:05:54.602081 IP 127.0.0.1.34610 > 127.0.0.1.5001: Flags [P.], seq 439:504, ack 1447, win 1365, options [nop,nop,TS val 2631238378 ecr 2631238378], length 65\r\n16:05:54.602273 IP 127.0.0.1.5001 > 127.0.0.1.34610: Flags [P.], seq 1447:1459, ack 504, win 342, options [nop,nop,TS val 2631238378 ecr 2631238378], length 12\r\n16:05:54.644855 IP 127.0.0.1.34610 > 127.0.0.1.5001: Flags [.], ack 1459, win 1365, options [nop,nop,TS val 2631238421 ecr 2631238378], length 0\r\n```\r\n\r\nSo you can see here a simple function with 1 int variable that returns an int results in 295 bytes sent over the wire.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/330", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/330/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/330/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/330/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/330", "id": 450829007, "node_id": "MDU6SXNzdWU0NTA4MjkwMDc=", "number": 330, "title": "Cannot connect to 4.0.2 service from 4.1", "user": {"login": "astraw38", "id": 3842326, "node_id": "MDQ6VXNlcjM4NDIzMjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3842326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/astraw38", "html_url": "https://github.com/astraw38", "followers_url": "https://api.github.com/users/astraw38/followers", "following_url": "https://api.github.com/users/astraw38/following{/other_user}", "gists_url": "https://api.github.com/users/astraw38/gists{/gist_id}", "starred_url": "https://api.github.com/users/astraw38/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/astraw38/subscriptions", "organizations_url": "https://api.github.com/users/astraw38/orgs", "repos_url": "https://api.github.com/users/astraw38/repos", "events_url": "https://api.github.com/users/astraw38/events{/privacy}", "received_events_url": "https://api.github.com/users/astraw38/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1371395016, "node_id": "MDU6TGFiZWwxMzcxMzk1MDE2", "url": "https://api.github.com/repos/tomerfiliba/rpyc/labels/Won't%20Fix", "name": "Won't Fix", "color": "ef940b", "default": false, "description": "Type"}], "state": "closed", "locked": false, "assignee": {"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2019-05-31T14:32:41Z", "updated_at": "2019-11-14T19:34:44Z", "closed_at": "2019-11-14T19:34:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Remote slave service:\r\n\r\n```\r\n pip3 show rpyc\r\nName: rpyc\r\nVersion: 4.0.2\r\n```\r\n\r\nAnd the exception on the local machine:\r\n\r\n```\r\n========= Remote Traceback (1) =========\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 329, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"/usr/lib/python3.7/site-packages/rpyc/core/protocol.py\", line 594, in _handle_inspect\r\n    return tuple(netref.inspect_methods(self._local_objects[oid]))\r\n  File \"/usr/lib/python3.7/site-packages/rpyc/lib/colls.py\", line 86, in __getitem__\r\n    return self._dict[key][0]\r\nKeyError: (7696561775896, 'SlaveService', 'rpyc.core.service')\r\n```\r\n\r\nLocal machine rpyc:\r\n```\r\n pip show rpyc\r\nName: rpyc\r\nVersion: 4.1.0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/329", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/329/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/329/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/329/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/329", "id": 449864364, "node_id": "MDU6SXNzdWU0NDk4NjQzNjQ=", "number": 329, "title": "rpyc consume cpu on \"big\" data", "user": {"login": "p5-vbnekit", "id": 13237223, "node_id": "MDQ6VXNlcjEzMjM3MjIz", "avatar_url": "https://avatars1.githubusercontent.com/u/13237223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/p5-vbnekit", "html_url": "https://github.com/p5-vbnekit", "followers_url": "https://api.github.com/users/p5-vbnekit/followers", "following_url": "https://api.github.com/users/p5-vbnekit/following{/other_user}", "gists_url": "https://api.github.com/users/p5-vbnekit/gists{/gist_id}", "starred_url": "https://api.github.com/users/p5-vbnekit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/p5-vbnekit/subscriptions", "organizations_url": "https://api.github.com/users/p5-vbnekit/orgs", "repos_url": "https://api.github.com/users/p5-vbnekit/repos", "events_url": "https://api.github.com/users/p5-vbnekit/events{/privacy}", "received_events_url": "https://api.github.com/users/p5-vbnekit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-05-29T15:06:57Z", "updated_at": "2019-06-26T06:46:26Z", "closed_at": "2019-06-26T06:46:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "##### Environment\r\n- rpyc version: 4.1.0\r\n- Python 3.7.3rc1\r\n- Debian GNU/Linux 10\r\n\r\n##### Minimal example\r\nServer:\r\n```python\r\nimport rpyc, numpy\r\nfrom rpyc.utils.server import OneShotServer\r\nrpyc.lib.setup_logger()\r\n\r\nbig_data = numpy.arange(4 * 64 * 1024 * 1024).tobytes()\r\n\r\nclass ListService(rpyc.Service):\r\n  def exposed_print(self, data): print(len(data))\r\n  def exposed_get_data(self): return big_data\r\n\r\nserver = OneShotServer(ListService, port=12345)\r\nserver.start()\r\n```\r\n\r\nClient:\r\n```python\r\nimport numpy, rpyc\r\nd1 = numpy.arange(4 * 64 * 1024 * 1024).tobytes()\r\nc = rpyc.connect(\"localhost\", 12345)\r\nc.root.print(d1) # CPU stuck\r\nd2 = c.root.get_data() # same behaviour, CPU stuck\r\n```\r\n\r\nbut it works fine:\r\n```python\r\nx = rpyc.core.brine.dump(numpy.arange(4 * 64 * 1024 * 1024).tobytes())\r\n```\r\npassed too:\r\n```python\r\ny = rpyc.core.brine.load(x)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/328", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/328/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/328/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/328/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/328", "id": 448526720, "node_id": "MDU6SXNzdWU0NDg1MjY3MjA=", "number": 328, "title": "Can't get matching versions between PyCharm and ev3dev", "user": {"login": "terbos90803", "id": 33633331, "node_id": "MDQ6VXNlcjMzNjMzMzMx", "avatar_url": "https://avatars3.githubusercontent.com/u/33633331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terbos90803", "html_url": "https://github.com/terbos90803", "followers_url": "https://api.github.com/users/terbos90803/followers", "following_url": "https://api.github.com/users/terbos90803/following{/other_user}", "gists_url": "https://api.github.com/users/terbos90803/gists{/gist_id}", "starred_url": "https://api.github.com/users/terbos90803/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terbos90803/subscriptions", "organizations_url": "https://api.github.com/users/terbos90803/orgs", "repos_url": "https://api.github.com/users/terbos90803/repos", "events_url": "https://api.github.com/users/terbos90803/events{/privacy}", "received_events_url": "https://api.github.com/users/terbos90803/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-05-26T04:23:10Z", "updated_at": "2019-06-04T00:51:21Z", "closed_at": "2019-06-04T00:51:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to connect PyCharm to ev3dev.  I ran the rpyc installers on both sides using the instructions, but I ran into connection problems running the example.  I discovered that PyCharm had picked up rpyc 4.1 and ev3dev was only at 3.3.\r\n\r\nI tried to upgrade on the EV3 side, but ev3dev insists that the newest version available is 3.3.\r\n\r\nI tried to downgrade on the PyCharm side, but now the import isn't valid and I get this error on line 1:\r\n\r\n    Traceback (most recent call last):\r\n      File \"C:/Users/terbo/PycharmProjects/soccerbothost/Conntest.py\", line 1, in <module>\r\n        import rpyc\r\n      File \"C:\\Users\\terbo\\PycharmProjects\\soccerbothost\\venv\\lib\\site-packages\\rpyc\\__init__.py\", line 50\r\n        from rpyc.utils.helpers import async, timed, buffiter, BgServingThread, restricted\r\n                                           ^\r\n    SyntaxError: invalid syntax\r\n\r\nI feel like I'm really close to getting this working and I'm just stuck.  Any suggestions would be really helpful.\r\n\r\n##### Environment\r\n\r\n- rpyc version - 4.1 & 3.3 (as above)\r\n- python version - 3.7.3 (Win64) && 3.5.3(ev3dev)\r\n- operating system - Win10-64 && ev3dev(4.14.117-ev3dev-2.3.4-ev3)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/327", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/327/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/327/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/327/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/327", "id": 448357746, "node_id": "MDU6SXNzdWU0NDgzNTc3NDY=", "number": 327, "title": "RPyC client in python 2 cannot make requests to RPyC server running python 3.", "user": {"login": "DonaldKevin", "id": 41024529, "node_id": "MDQ6VXNlcjQxMDI0NTI5", "avatar_url": "https://avatars2.githubusercontent.com/u/41024529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DonaldKevin", "html_url": "https://github.com/DonaldKevin", "followers_url": "https://api.github.com/users/DonaldKevin/followers", "following_url": "https://api.github.com/users/DonaldKevin/following{/other_user}", "gists_url": "https://api.github.com/users/DonaldKevin/gists{/gist_id}", "starred_url": "https://api.github.com/users/DonaldKevin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DonaldKevin/subscriptions", "organizations_url": "https://api.github.com/users/DonaldKevin/orgs", "repos_url": "https://api.github.com/users/DonaldKevin/repos", "events_url": "https://api.github.com/users/DonaldKevin/events{/privacy}", "received_events_url": "https://api.github.com/users/DonaldKevin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-05-24T21:22:03Z", "updated_at": "2019-06-04T00:50:22Z", "closed_at": "2019-06-04T00:50:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was experimenting, and I discovered that a client and a server have to be running the same version of python to talk to each other.\r\n\r\nDon't know if it is a huge problem, or even something you want to support.\r\n\r\nrpyc-4.0.2\r\nubuntu 18.04\r\n\r\nfirst case python3 server, python2 client\r\n```\r\nTraceback (most recent call last):\r\n  File \"./matlabClient.py\", line 17, in <module>\r\n    r = c.root.performMatlab(\"gcd\", *l)\r\n  File \"/home/lafayette/.local/lib/python2.7/site-packages/rpyc/core/netref.py\", line 199, in __call__\r\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\r\n  File \"/home/lafayette/.local/lib/python2.7/site-packages/rpyc/core/netref.py\", line 75, in syncreq\r\n    return conn.sync_request(handler, proxy, *args)\r\n  File \"/home/lafayette/.local/lib/python2.7/site-packages/rpyc/core/protocol.py\", line 471, in sync_request\r\n    return self.async_request(handler, *args, timeout=timeout).value\r\n  File \"/home/lafayette/.local/lib/python2.7/site-packages/rpyc/core/async_.py\", line 97, in value\r\n    raise self._obj\r\nrpyc.core.vinegar/builtins.TypeError: must be str, not bytes\r\n\r\n========= Remote Traceback (1) =========\r\nTraceback (most recent call last):\r\n  File \"/home/lafayette/.local/lib/python3.6/site-packages/rpyc/core/protocol.py\", line 329, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"/home/lafayette/.local/lib/python3.6/site-packages/rpyc/core/protocol.py\", line 590, in _handle_call\r\n    return obj(*args, **dict(kwargs))\r\n  File \"matlabService.py\", line 162, in exposed_performMatlab\r\n    return performMatlab(theMatlabFunc, *args, **kwargs)\r\n  File \"matlabService.py\", line 121, in performMatlab\r\n    \" \" + repr(args) + \" \" + repr(kwargs))\r\nTypeError: must be str, not bytes\r\n\r\n```\r\nsecond case python2 server, python 3 client\r\n```\r\nTraceback (most recent call last):\r\n  File \"matlabClient.py\", line 17, in <module>\r\n    r = c.root.performMatlab(\"gcd\", *l)\r\nTypeError: 'b'instancemethod'' object is not callable\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/324", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/324/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/324/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/324/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/324", "id": 436416567, "node_id": "MDU6SXNzdWU0MzY0MTY1Njc=", "number": 324, "title": "Problem with __hash__ for protocol_config={'allow_all_attrs': True}", "user": {"login": "ps-lukin-siv", "id": 45522676, "node_id": "MDQ6VXNlcjQ1NTIyNjc2", "avatar_url": "https://avatars0.githubusercontent.com/u/45522676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ps-lukin-siv", "html_url": "https://github.com/ps-lukin-siv", "followers_url": "https://api.github.com/users/ps-lukin-siv/followers", "following_url": "https://api.github.com/users/ps-lukin-siv/following{/other_user}", "gists_url": "https://api.github.com/users/ps-lukin-siv/gists{/gist_id}", "starred_url": "https://api.github.com/users/ps-lukin-siv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ps-lukin-siv/subscriptions", "organizations_url": "https://api.github.com/users/ps-lukin-siv/orgs", "repos_url": "https://api.github.com/users/ps-lukin-siv/repos", "events_url": "https://api.github.com/users/ps-lukin-siv/events{/privacy}", "received_events_url": "https://api.github.com/users/ps-lukin-siv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-23T22:26:50Z", "updated_at": "2019-05-18T04:03:46Z", "closed_at": "2019-05-18T04:03:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm creating a server in one Jupyter Notebook and want to connect to it from a different Notebook.\r\n\r\nWhen `protocol_config={'allow_all_attrs': False}`, everything works fine. But when `protocol_config={'allow_all_attrs': True}`, it produces TypeError.\r\n\r\n##### Environment\r\n- rpyc version: 4.0.2\r\n- python version: 3.7.0\r\n- operating system: Windows 10\r\n- ipykernel: 4.10.0\r\n- ipython: 6.5.0\r\n\r\n\r\n##### Minimal example\r\n\r\nServer:\r\n```python\r\nimport rpyc\r\nfrom rpyc.utils.server import ThreadedServer\r\n\r\nclass MyService(rpyc.Service):\r\n    def on_connect(self, conn):\r\n        pass\r\n\r\n    def on_disconnect(self, conn):\r\n        pass\r\n\r\n    def exposed_get_answer(self):\r\n        return 50\r\n\r\nt = ThreadedServer(\r\n    MyService,\r\n    port=18861,\r\n    protocol_config={'allow_all_attrs': True}\r\n)\r\nt.start()\r\n```\r\nClient:\r\n```python\r\nimport rpyc\r\nc = rpyc.connect(\"localhost\", 18861)\r\n\r\nc.root\r\n```\r\n`c.root` call produces the following error message (in fact, many repetitions of this block):\r\n```stack trace / error log\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nC:\\Anaconda\\lib\\site-packages\\IPython\\core\\formatters.py in __call__(self, obj)\r\n    907             # lookup registered printer\r\n    908             try:\r\n--> 909                 printer = self.lookup(obj)\r\n    910             except KeyError:\r\n    911                 pass\r\n\r\nC:\\Anaconda\\lib\\site-packages\\IPython\\core\\formatters.py in lookup(self, obj)\r\n    393             return self.singleton_printers[obj_id]\r\n    394         # then lookup by type\r\n--> 395         return self.lookup_by_type(_get_type(obj))\r\n    396 \r\n    397     def lookup_by_type(self, typ):\r\n\r\nC:\\Anaconda\\lib\\site-packages\\IPython\\core\\formatters.py in lookup_by_type(self, typ)\r\n    423         else:\r\n    424             for cls in pretty._get_mro(typ):\r\n--> 425                 if cls in self.type_printers or self._in_deferred_types(cls):\r\n    426                     return self.type_printers[cls]\r\n    427 \r\n\r\nC:\\Anaconda\\lib\\site-packages\\rpyc\\core\\netref.py in method(_self, *args, **kwargs)\r\n    218         def method(_self, *args, **kwargs):\r\n    219             kwargs = tuple(kwargs.items())\r\n--> 220             return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\r\n    221         method.__name__ = name\r\n    222         method.__doc__ = doc\r\n\r\nC:\\Anaconda\\lib\\site-packages\\rpyc\\core\\netref.py in syncreq(proxy, handler, *args)\r\n     73     \"\"\"\r\n     74     conn = object.__getattribute__(proxy, \"____conn__\")\r\n---> 75     return conn.sync_request(handler, proxy, *args)\r\n     76 \r\n     77 def asyncreq(proxy, handler, *args):\r\n\r\nC:\\Anaconda\\lib\\site-packages\\rpyc\\core\\protocol.py in sync_request(self, handler, *args)\r\n    469         \"\"\"\r\n    470         timeout = self._config[\"sync_request_timeout\"]\r\n--> 471         return self.async_request(handler, *args, timeout=timeout).value\r\n    472 \r\n    473     def _async_request(self, handler, args = (), callback = (lambda a, b: None)):\r\n\r\nC:\\Anaconda\\lib\\site-packages\\rpyc\\core\\async_.py in value(self)\r\n     95         self.wait()\r\n     96         if self._is_exc:\r\n---> 97             raise self._obj\r\n     98         else:\r\n     99             return self._obj\r\n\r\nTypeError: descriptor '__hash__' of 'object' object needs an argument\r\n\r\n========= Remote Traceback (1) =========\r\nTraceback (most recent call last):\r\n  File \"C:\\Anaconda\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 329, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Anaconda\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 603, in _handle_callattr\r\n    return self._handle_call(obj, args, kwargs)\r\n  File \"C:\\Anaconda\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 590, in _handle_call\r\n    return obj(*args, **dict(kwargs))\r\nTypeError: descriptor '__hash__' of 'object' object needs an argument\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/323", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/323/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/323/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/323/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/323", "id": 431433319, "node_id": "MDU6SXNzdWU0MzE0MzMzMTk=", "number": 323, "title": "Very slow pickle on pandas Data Frame", "user": {"login": "kamalbowselvam", "id": 13810382, "node_id": "MDQ6VXNlcjEzODEwMzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/13810382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamalbowselvam", "html_url": "https://github.com/kamalbowselvam", "followers_url": "https://api.github.com/users/kamalbowselvam/followers", "following_url": "https://api.github.com/users/kamalbowselvam/following{/other_user}", "gists_url": "https://api.github.com/users/kamalbowselvam/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamalbowselvam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamalbowselvam/subscriptions", "organizations_url": "https://api.github.com/users/kamalbowselvam/orgs", "repos_url": "https://api.github.com/users/kamalbowselvam/repos", "events_url": "https://api.github.com/users/kamalbowselvam/events{/privacy}", "received_events_url": "https://api.github.com/users/kamalbowselvam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-10T10:46:13Z", "updated_at": "2019-06-10T04:29:15Z", "closed_at": "2019-06-10T04:29:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am trying to write a huge pandas data frame to Hdf5 via server. The data frame is sent from the client. \r\nI figured out that, I should use rpyc.classic.obtain() to unpickle my object before appending it to Hdf5Store. If I don't unpickle, pandas throws an error, as it is netref object. \r\n\r\nFor smaller data frame, the unpickle is faster, but when the data frame size is huge, it takes a lot of time to unpickle it and append. Is there a work around for this problem ? \r\n\r\nOr is there some other method that I should use ? I have attached a minimal example below:\r\n\r\n##### Environment\r\n\r\n- rpyc 4.0.2\r\n- pandas 0.24.2\r\n- python 3.7.3\r\n- Windows\r\n\r\n\r\n##### Minimal example\r\n\r\nServer:\r\n\r\n```\r\nimport logging\r\nimport rpyc\r\n\r\nclass DummyServer(rpyc.Service):\r\n\r\n    def on_connect(self,conn):\r\n        print(\"Starting Server\")\r\n        pass\r\n\r\n    def on_disconnect(self,conn):\r\n        pass\r\n\r\n    def exposed_write_data(self,dataframe):\r\n        data = pd.HDFStore(\"Test.h5\")\r\n        start = time.time()\r\n        realdata = rpyc.classic.obtain(dataframe)\r\n        end = time.time()\r\n        print(end-start)\r\n        data.append(\"DATA\",realdata)\r\n        print(\"Writing Data Completed\")\r\n        data.close()\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    t = ThreadedServer(DummyServer(), port=18860,protocol_config = rpyc.core.protocol.DEFAULT_CONFIG)\r\n    t.start()\r\n```\r\n\r\nClient:\r\n\r\n```\r\nimport rpyc\r\nimport pandas as pd\r\nrpyc.core.protocol.DEFAULT_CONFIG['allow_pickle'] = True\r\n\r\nconn = rpyc.connect(\"localhost\",18860, config=rpyc.core.protocol.DEFAULT_CONFIG)\r\nserver = conn.root\r\n\r\nimport datetime\r\nimport pandas as pd\r\nimport numpy as np\r\n\r\nN = 10000\r\nM = 10000\r\n\r\ntodays_date = datetime.datetime.now().date()\r\nindex = pd.date_range(todays_date-datetime.timedelta(N), periods=N, freq='D')\r\ncolumns = [str(x) for x in range(M)]\r\ndata = np.array([np.arange(N)]*M).T\r\ndf = pd.DataFrame(data, index=index, columns=columns)\r\n\r\nserver.write_data(df)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/322", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/322/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/322/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/322/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/322", "id": 425036044, "node_id": "MDU6SXNzdWU0MjUwMzYwNDQ=", "number": 322, "title": "ThreadPoolServer crashes when using authenticators", "user": {"login": "mihai-dobre", "id": 19185515, "node_id": "MDQ6VXNlcjE5MTg1NTE1", "avatar_url": "https://avatars2.githubusercontent.com/u/19185515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mihai-dobre", "html_url": "https://github.com/mihai-dobre", "followers_url": "https://api.github.com/users/mihai-dobre/followers", "following_url": "https://api.github.com/users/mihai-dobre/following{/other_user}", "gists_url": "https://api.github.com/users/mihai-dobre/gists{/gist_id}", "starred_url": "https://api.github.com/users/mihai-dobre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mihai-dobre/subscriptions", "organizations_url": "https://api.github.com/users/mihai-dobre/orgs", "repos_url": "https://api.github.com/users/mihai-dobre/repos", "events_url": "https://api.github.com/users/mihai-dobre/events{/privacy}", "received_events_url": "https://api.github.com/users/mihai-dobre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-25T17:49:39Z", "updated_at": "2019-05-21T21:58:23Z", "closed_at": "2019-05-21T21:58:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using **SSLAuthenticator** with the **ThreadPoolServer**. When a client tries to connect, the server throws and error on `h, p = sock.getpeername()` in server's `_accept_method`.\r\n\r\n### How to reproduce it:\r\nIn the `tests/test_ssl.py` replace the `ThreadedServer` with `ThreadPoolServer` and run the test.\r\n\r\n### What happens:\r\nIn `_authenticate_and_build_connection` method, self.authenticator(sock) is returning another socket, sock2. Sock2 is used to create the connection. In the meantime, because the sock1 is not used anymore, I'm assuming that it's garbage collected. Therefore, when `h, p = sock.getpeername()` is called in `_accept_method` it throws that error. The same error is thrown when you close a socket on purpose and call accept on it afterwards.(This led me to the conclusion that is closed/garbage collected in the meantime)\r\n\r\n### How to fix:\r\n\r\n1. split the method `_authenticate_and_build_connection` into `_authenticate(sock)` and `_build_connection(sock, credentials)`\r\n\r\n2. just remove line 489 from _rpyc/utils/server.py_ and the host and port from the log message.\r\n`self.logger.debug(\"Created connection with fd %d\", fd)` line 490 and 496.\r\n\r\nI prefer the first fix because it's more elegant and is compliant with the principle that a method should do one thing only.\r\n\r\n```\r\nException in thread RPyCServer:\r\nTraceback (most recent call last):\r\n  File \"/home/mihaido/.virtualenvs/windopen/lib/python3.6/site-packages/rpyc/utils/server.py\", line 488, in _accept_method\r\n    h, p = sock.getpeername()\r\nOSError: [Errno 9] Bad file descriptor\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/threading.py\", line 916, in _bootstrap_inner\r\n    self.run()\r\n  File \"/usr/local/lib/python3.6/threading.py\", line 864, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/home/mihaido/.virtualenvs/windopen/lib/python3.6/site-packages/rpyc/utils/server.py\", line 263, in start\r\n    self.accept()\r\n  File \"/home/mihaido/.virtualenvs/windopen/lib/python3.6/site-packages/rpyc/utils/server.py\", line 157, in accept\r\n    self._accept_method(sock)\r\n  File \"/home/mihaido/.virtualenvs/windopen/lib/python3.6/site-packages/rpyc/utils/server.py\", line 495, in _accept_method\r\n    h, p = sock.getpeername()\r\nOSError: [Errno 9] Bad file descriptor\r\n```\r\n\r\n\r\n##### Environment\r\n\r\n- rpyc version:  4.0.2\r\n- python version: 3.6.5\r\n- operating system: Debian GNU/Linux 9 (stretch)\r\n\r\n\r\n##### Minimal example\r\n\r\n```import rpyc\r\nimport os\r\nimport unittest\r\nimport time\r\nfrom rpyc.utils.authenticators import SSLAuthenticator\r\nfrom rpyc.utils.server import ThreadPoolServer\r\nfrom rpyc import SlaveService\r\nfrom nose import SkipTest\r\n\r\ntry:\r\n    import ssl #@UnusedImport\r\nexcept ImportError:\r\n    raise SkipTest(\"requires ssl\")\r\n\r\n\r\nclass Test_SSL(unittest.TestCase):\r\n    '''\r\n    created key like that\r\n    http://www.akadia.com/services/ssh_test_certificate.html\r\n\r\n    openssl req -newkey rsa:1024 -nodes -keyout mycert.pem -out mycert.pem\r\n    '''\r\n\r\n    def setUp(self):\r\n        self.key = os.path.join( os.path.dirname(__file__) , \"server.key\")\r\n        self.cert =  os.path.join( os.path.dirname(__file__) , \"server.crt\")\r\n        print( self.cert, self.key )\r\n\r\n        authenticator = SSLAuthenticator(self.key, self.cert)\r\n        self.server = ThreadPoolServer(SlaveService, port = 18812,\r\n            auto_register=False, authenticator = authenticator)\r\n        self.server.logger.quiet = False\r\n        self.server._start_in_thread()\r\n\r\n    def tearDown(self):\r\n        self.server.close()\r\n\r\n    def test_ssl_conenction(self):\r\n        c = rpyc.classic.ssl_connect(\"localhost\", port = 18812,\r\n            keyfile=self.key, certfile=self.cert)\r\n        c.close()\r\n\r\nif __name__ == \"__main__\":\r\n    unittest.main()\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/321", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/321/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/321/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/321", "id": 421144972, "node_id": "MDU6SXNzdWU0MjExNDQ5NzI=", "number": 321, "title": "unable to call exposed_ method on a remote server with floating ip.", "user": {"login": "raiesmh08", "id": 5044578, "node_id": "MDQ6VXNlcjUwNDQ1Nzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5044578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raiesmh08", "html_url": "https://github.com/raiesmh08", "followers_url": "https://api.github.com/users/raiesmh08/followers", "following_url": "https://api.github.com/users/raiesmh08/following{/other_user}", "gists_url": "https://api.github.com/users/raiesmh08/gists{/gist_id}", "starred_url": "https://api.github.com/users/raiesmh08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raiesmh08/subscriptions", "organizations_url": "https://api.github.com/users/raiesmh08/orgs", "repos_url": "https://api.github.com/users/raiesmh08/repos", "events_url": "https://api.github.com/users/raiesmh08/events{/privacy}", "received_events_url": "https://api.github.com/users/raiesmh08/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-14T17:13:29Z", "updated_at": "2019-07-15T02:51:37Z", "closed_at": "2019-07-15T02:51:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Describe the issue briefly here, including:\r\n\r\n- expected result versus actual result\r\n- involved/problematic methods, e.g. `__call__`\r\n- steps to reproduce\r\n- for bugs, please attach a\r\n\r\n```\r\nstack trace / error log\r\n```\r\n\r\n\r\n##### Environment\r\n\r\n- rpyc version\r\n- python version\r\n- operating system\r\n\r\n\r\n##### Minimal example\r\n\r\nRemote Server:\r\n\r\n```python\r\nimport rpyc\r\nfrom rpyc.utils.server import OneShotServer\r\nrpyc.lib.setup_logger()\r\n\r\nclass ListService(rpyc.Service):\r\n    def exposed_concat(self, lst):\r\n        return lst + ['world']\r\n\r\nserver = OneShotServer(ListService, port=12345)\r\nserver.start()\r\n```\r\n\r\nClient:\r\n\r\n```python\r\nimport rpyc\r\nc = rpyc.connect(<remote_server Floating IP>, 12345)\r\nprint(c.root.concat(['hello']))\r\n```\r\n\r\n\r\nAll methodology is correct, only I am trying to call exposed_ method, error is something like - \r\n\r\n\r\n```\r\n> /usr/local/lib/python2.7/dist-packages/rpyc/core/netref.py(133)__getattribute__()\r\n-> def __getattribute__(self, name):\r\n(Pdb) n\r\n> /usr/local/lib/python2.7/dist-packages/rpyc/core/netref.py(134)__getattribute__()\r\n-> if name in _local_netref_attrs:\r\n(Pdb) \r\n> /usr/local/lib/python2.7/dist-packages/rpyc/core/netref.py(148)__getattribute__()\r\n-> elif name == \"__hash__\":\r\n(Pdb) n\r\n> /usr/local/lib/python2.7/dist-packages/rpyc/core/netref.py(150)__getattribute__()\r\n-> elif name == \"__call__\":                          # IronPython issue #10\r\n(Pdb) \r\n> /usr/local/lib/python2.7/dist-packages/rpyc/core/netref.py(152)__getattribute__()\r\n-> elif name == \"__array__\":\r\n(Pdb) \r\n> /usr/local/lib/python2.7/dist-packages/rpyc/core/netref.py(155)__getattribute__()\r\n-> return syncreq(self, consts.HANDLE_GETATTR, name)\r\n(Pdb) \r\nTimeoutError: TimeoutE...xpired',)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/320", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/320/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/320/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/320/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/320", "id": 417181049, "node_id": "MDU6SXNzdWU0MTcxODEwNDk=", "number": 320, "title": "Getting timeout for long running commands on server", "user": {"login": "Arti3DPlayer", "id": 3278913, "node_id": "MDQ6VXNlcjMyNzg5MTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3278913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Arti3DPlayer", "html_url": "https://github.com/Arti3DPlayer", "followers_url": "https://api.github.com/users/Arti3DPlayer/followers", "following_url": "https://api.github.com/users/Arti3DPlayer/following{/other_user}", "gists_url": "https://api.github.com/users/Arti3DPlayer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Arti3DPlayer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Arti3DPlayer/subscriptions", "organizations_url": "https://api.github.com/users/Arti3DPlayer/orgs", "repos_url": "https://api.github.com/users/Arti3DPlayer/repos", "events_url": "https://api.github.com/users/Arti3DPlayer/events{/privacy}", "received_events_url": "https://api.github.com/users/Arti3DPlayer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1371395016, "node_id": "MDU6TGFiZWwxMzcxMzk1MDE2", "url": "https://api.github.com/repos/tomerfiliba/rpyc/labels/Won't%20Fix", "name": "Won't Fix", "color": "ef940b", "default": false, "description": "Type"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-05T08:45:22Z", "updated_at": "2019-05-21T21:29:08Z", "closed_at": "2019-05-21T20:02:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running classic rpyc server. And when I connect to server and perform long running command:\r\n\r\n```\r\nrconn = rpyc.classic.connect(host='ip', port='18812')\r\n\r\nrsubprocess = rconn.modules.subprocess\r\nrsubprocess.check_output(['my command'], shell=True).decode()\r\n```\r\n\r\nI got:\r\n\r\n`raise AsyncResultTimeout(\"result expired\") TimeoutError: result expired`\r\n\r\nI tried to set:\r\n\r\n`rconn._config['timeout'] = 240`\r\nand\r\n`rconn.ASYNC_REQUEST_TIMEOUT = 240`\r\n\r\n##### Environment\r\n\r\n- rpyc==4.0.2\r\n- python 3.6.2\r\n- osx client -  windows server", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/319", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/319/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/319/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/319/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/319", "id": 415809599, "node_id": "MDU6SXNzdWU0MTU4MDk1OTk=", "number": 319, "title": "socket.gaierror: [Errno 11001] getaddrinfo failed", "user": {"login": "sschumm", "id": 48083636, "node_id": "MDQ6VXNlcjQ4MDgzNjM2", "avatar_url": "https://avatars1.githubusercontent.com/u/48083636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sschumm", "html_url": "https://github.com/sschumm", "followers_url": "https://api.github.com/users/sschumm/followers", "following_url": "https://api.github.com/users/sschumm/following{/other_user}", "gists_url": "https://api.github.com/users/sschumm/gists{/gist_id}", "starred_url": "https://api.github.com/users/sschumm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sschumm/subscriptions", "organizations_url": "https://api.github.com/users/sschumm/orgs", "repos_url": "https://api.github.com/users/sschumm/repos", "events_url": "https://api.github.com/users/sschumm/events{/privacy}", "received_events_url": "https://api.github.com/users/sschumm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-28T20:30:17Z", "updated_at": "2019-04-01T13:06:38Z", "closed_at": "2019-04-01T13:06:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to work remotely on the Lego EV3 with ev3dev using RPyC as described in this tutorial:\r\nhttps://ev3dev-lang.readthedocs.io/projects/python-ev3dev/en/stable/rpyc.html\r\n\r\nInstead of a working connection the following error message shows up:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Users\\svens\\AppData\\Local\\conda\\conda\\envs\\Python_RPyC_VEnv\\lib\\site-packages\\rpyc\\utils\\classic.py\", line 70, in connect\r\n    return factory.connect(host, port, SlaveService, ipv6 = ipv6, keepalive = keepalive)\r\n  File \"C:\\Users\\svens\\AppData\\Local\\conda\\conda\\envs\\Python_RPyC_VEnv\\lib\\site-packages\\rpyc\\utils\\factory.py\", line 93, in connect\r\n    s = SocketStream.connect(host, port, ipv6=ipv6, keepalive=keepalive)\r\n  File \"C:\\Users\\svens\\AppData\\Local\\conda\\conda\\envs\\Python_RPyC_VEnv\\lib\\site-packages\\rpyc\\core\\stream.py\", line 154, in connect\r\n    return cls(cls._connect(host, port, **kwargs))\r\n  File \"C:\\Users\\svens\\AppData\\Local\\conda\\conda\\envs\\Python_RPyC_VEnv\\lib\\site-packages\\rpyc\\core\\stream.py\", line 109, in _connect\r\n    socktype, proto)[0]\r\n  File \"C:\\Users\\svens\\AppData\\Local\\conda\\conda\\envs\\Python_RPyC_VEnv\\lib\\socket.py\", line 745, in getaddrinfo\r\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\r\nsocket.gaierror: [Errno 11001] getaddrinfo failed\r\n```\r\n\r\nI also tried the New Style RPyC (https://rpyc.readthedocs.io/en/latest/tutorial/tut3.html) but it results in the same error message.\r\nAny Ideas why this error pops up?\r\n\r\n\r\n##### Environment\r\nServer:\r\n- rpyc version: 4.0.2\r\n- python version: 3.5.3\r\n- operating system: Linux ev3dev 4.14.80-ev3dev-2.3.1-ev3\r\n\r\nClient:\r\n- rpyc version: 4.0.2\r\n- python version: 3.6.8\r\n- operating system: Win10\r\n\r\n\r\n##### Minimal example\r\n\r\nServer:\r\n```\r\n#!/bin/bash\r\npython3 `which rpyc_classic.py`\r\n```\r\n\r\nClient:\r\n\r\n```\r\nimport rpyc\r\nconn = rpyc.classic.connect('ev3dev')\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/317", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/317/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/317/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/317/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/317", "id": 403616343, "node_id": "MDU6SXNzdWU0MDM2MTYzNDM=", "number": 317, "title": "Maintainer sought", "user": {"login": "coldfix", "id": 1816880, "node_id": "MDQ6VXNlcjE4MTY4ODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1816880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coldfix", "html_url": "https://github.com/coldfix", "followers_url": "https://api.github.com/users/coldfix/followers", "following_url": "https://api.github.com/users/coldfix/following{/other_user}", "gists_url": "https://api.github.com/users/coldfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/coldfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coldfix/subscriptions", "organizations_url": "https://api.github.com/users/coldfix/orgs", "repos_url": "https://api.github.com/users/coldfix/repos", "events_url": "https://api.github.com/users/coldfix/events{/privacy}", "received_events_url": "https://api.github.com/users/coldfix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-28T00:56:47Z", "updated_at": "2019-05-17T03:21:04Z", "closed_at": "2019-05-17T03:21:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, I recently haven't given rpyc the attention and perspective it needs and neither will I be able to anytime soon unfortunately. So if you're interested in taking up this project, feel free to message here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/316", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/316/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/316/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/316/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/316", "id": 402233373, "node_id": "MDU6SXNzdWU0MDIyMzMzNzM=", "number": 316, "title": "isinstance not working over connection-boundaries", "user": {"login": "walterschneider", "id": 33923060, "node_id": "MDQ6VXNlcjMzOTIzMDYw", "avatar_url": "https://avatars3.githubusercontent.com/u/33923060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/walterschneider", "html_url": "https://github.com/walterschneider", "followers_url": "https://api.github.com/users/walterschneider/followers", "following_url": "https://api.github.com/users/walterschneider/following{/other_user}", "gists_url": "https://api.github.com/users/walterschneider/gists{/gist_id}", "starred_url": "https://api.github.com/users/walterschneider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/walterschneider/subscriptions", "organizations_url": "https://api.github.com/users/walterschneider/orgs", "repos_url": "https://api.github.com/users/walterschneider/repos", "events_url": "https://api.github.com/users/walterschneider/events{/privacy}", "received_events_url": "https://api.github.com/users/walterschneider/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-23T13:13:21Z", "updated_at": "2019-05-25T06:27:29Z", "closed_at": "2019-05-25T06:27:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "isinstance() returns false if obj and class are not referenced over the same rpyc-connection.\r\n\r\nI used a wrapper-script to create a new connection for each module to get them work simultanously when using from different threads at the client-side.\r\n\r\n\r\n\r\n##### Environment\r\n\r\n- rpyc 4.0.2\r\n- python 3.6.7\r\n- ubuntu 18.04 (bionic)\r\n\r\n\r\n##### Minimal example\r\n\r\nServer:\r\n\r\n```bash\r\nrpyc_classic.py\r\n```\r\n\r\nmod.py:\r\n\r\n```python\r\nclass M:\r\n    pass\r\n```\r\n\r\nclient.py:\r\n\r\n```python\r\nimport rpyc\r\n\r\n# create connections\r\ncn1=rpyc.classic.connect(host=\"localhost\")\r\ncn2=rpyc.classic.connect(host=\"localhost\")\r\n\r\n# import module at server-side\r\ncn1.execute(\"import mod\")\r\n\r\n# get module per connection\r\nrm1=cn1.modules.mod\r\nrm2=cn2.modules.mod\r\n\r\n# create instances of class 'M'\r\nm1=rm1.M()\r\nm2=rm2.M()\r\n\r\n\r\nassert isinstance(m1, rm1.M)\r\nassert isinstance(m2, rm2.M)\r\n\r\nassert isinstance(m1, rm2.M) # fails\r\n```\r\n\r\nClient:\r\n```bash\r\npython3 client.py\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/315", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/315/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/315/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/315/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/315", "id": 399462604, "node_id": "MDU6SXNzdWUzOTk0NjI2MDQ=", "number": 315, "title": "rpyc server blocks ", "user": {"login": "andrewhack", "id": 46722365, "node_id": "MDQ6VXNlcjQ2NzIyMzY1", "avatar_url": "https://avatars2.githubusercontent.com/u/46722365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewhack", "html_url": "https://github.com/andrewhack", "followers_url": "https://api.github.com/users/andrewhack/followers", "following_url": "https://api.github.com/users/andrewhack/following{/other_user}", "gists_url": "https://api.github.com/users/andrewhack/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewhack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewhack/subscriptions", "organizations_url": "https://api.github.com/users/andrewhack/orgs", "repos_url": "https://api.github.com/users/andrewhack/repos", "events_url": "https://api.github.com/users/andrewhack/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewhack/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-15T17:51:53Z", "updated_at": "2019-05-21T19:00:00Z", "closed_at": "2019-05-21T19:00:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "HI,\r\n\r\nFirst, thank for your work - even I dind't explored everything, this software provides a lot of possibilities.\r\nI am sorry if I am missing something but I will explain as much as possible what is my issue.\r\nI am trying to integrate RPYC in existing software. \r\nI am aware that RPYC server is using blocking method that's why I tried to use a separate thread to initialize the server but even in this case the main loop is blocked. This is the general description of the code:\r\n\r\n------------------------------------------------------------------------------------------\r\ndef rpc(self):\r\n     rpch=rpyc.utils.server.ThreadedServer(RPCService, port=rpcport)\r\n     rpch.start()\r\n\r\nwhile (True)\r\n     # other code\r\n\r\n     th1=threading.Thread(target = rpc)\r\n     th1.daemon=True\r\n     th1.start()\r\n      \r\n      #other code\r\n------------------------------------------------------------------------------------------\r\n\r\nAm I using the library in a wrong way?\r\n\r\nThank you in advance ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/314", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/314/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/314/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/314/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/314", "id": 396228067, "node_id": "MDU6SXNzdWUzOTYyMjgwNjc=", "number": 314, "title": "Suggested improvement in Connection serve_all", "user": {"login": "pyscripter", "id": 1311616, "node_id": "MDQ6VXNlcjEzMTE2MTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1311616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pyscripter", "html_url": "https://github.com/pyscripter", "followers_url": "https://api.github.com/users/pyscripter/followers", "following_url": "https://api.github.com/users/pyscripter/following{/other_user}", "gists_url": "https://api.github.com/users/pyscripter/gists{/gist_id}", "starred_url": "https://api.github.com/users/pyscripter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pyscripter/subscriptions", "organizations_url": "https://api.github.com/users/pyscripter/orgs", "repos_url": "https://api.github.com/users/pyscripter/repos", "events_url": "https://api.github.com/users/pyscripter/events{/privacy}", "received_events_url": "https://api.github.com/users/pyscripter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-06T04:53:27Z", "updated_at": "2019-01-24T10:11:03Z", "closed_at": "2019-01-24T10:10:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Connection.serve_all has the following loop:\r\n\r\n```python\r\n        try:\r\n            while True:\r\n                self.serve(None)\r\n        except (socket.error, select_error, IOError):\r\n```\r\n\r\nWhen the client side closes a connection, _handle_close will do the clean-up and set _closed to True.  However the serve_all loop will still be running and it will rely on exceptions raised to break out of the loop.  This is subject to delays due to timeouts.\r\n\r\nI would suggest to replace the above with the following:\r\n\r\n```python\r\n        try:\r\n            while not self.closed:\r\n                self.serve(None)\r\n        except (socket.error, select_error, IOError):\r\n```\r\nso that when closed the connection breaks out of the loop immediately and without exception.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/313", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/313/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/313/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/313/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/313", "id": 389002712, "node_id": "MDU6SXNzdWUzODkwMDI3MTI=", "number": 313, "title": "no 2-way communication", "user": {"login": "juergmaier", "id": 4013832, "node_id": "MDQ6VXNlcjQwMTM4MzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/4013832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juergmaier", "html_url": "https://github.com/juergmaier", "followers_url": "https://api.github.com/users/juergmaier/followers", "following_url": "https://api.github.com/users/juergmaier/following{/other_user}", "gists_url": "https://api.github.com/users/juergmaier/gists{/gist_id}", "starred_url": "https://api.github.com/users/juergmaier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juergmaier/subscriptions", "organizations_url": "https://api.github.com/users/juergmaier/orgs", "repos_url": "https://api.github.com/users/juergmaier/repos", "events_url": "https://api.github.com/users/juergmaier/events{/privacy}", "received_events_url": "https://api.github.com/users/juergmaier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-09T09:19:48Z", "updated_at": "2019-06-25T23:29:05Z", "closed_at": "2019-06-25T23:29:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nI read about the possibility of using clients as servers and vice versa. I therefore create my connection in the client with a receiver service class.\r\n\r\nI get on_connect on server and client but sending messages from server to client causes a TimeoutError: result expired. What is wrong with my code?. \r\n\r\n##### Environment\r\n- rpyc version: (4, 0, 2)\r\n- python version: 3.6 64 (anaconda)\r\n- operating system: w10/64\r\n\r\n\r\n##### Minimal example\r\nServer:\r\n\r\n```python\r\n<\r\nimport rpyc\r\n\r\nclass rpcServerListener(rpyc.Service):\r\n    def on_connect(self, conn):\r\n        print(f\"on_connect in server seen {conn}\")\r\n        for i in range(10):\r\n            print(f\"send message  {i} to client\")\r\n            conn.root.exposed_log(f\"test message {i}\")\r\n\r\nfrom rpyc.utils.server import ThreadedServer\r\nserver = ThreadedServer(rpcServerListener(), port=20001)\r\nserver.start()\r\n>\r\n\r\n```\r\n\r\nClient:\r\n\r\n```python\r\n<\r\nimport time\r\nimport rpyc\r\n\r\nclass rpcClientListener(rpyc.Service):\r\n\r\n    def on_connect(self, conn):\r\n        print(f\"on connect in client seen {conn}\")\r\n\r\n    def exposed_log(self, msg):\r\n        print(msg)\r\n\r\nconn = rpyc.connect(\"localhost\", 20001, service = rpcClientListener)\r\n\r\nwhile True:\r\n    time.sleep(1)\r\n>\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/312", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/312/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/312/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/312/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/312", "id": 383064474, "node_id": "MDU6SXNzdWUzODMwNjQ0NzQ=", "number": 312, "title": "When connect to the socket fails, the socket stays opened", "user": {"login": "ayalash", "id": 1003519, "node_id": "MDQ6VXNlcjEwMDM1MTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1003519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ayalash", "html_url": "https://github.com/ayalash", "followers_url": "https://api.github.com/users/ayalash/followers", "following_url": "https://api.github.com/users/ayalash/following{/other_user}", "gists_url": "https://api.github.com/users/ayalash/gists{/gist_id}", "starred_url": "https://api.github.com/users/ayalash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ayalash/subscriptions", "organizations_url": "https://api.github.com/users/ayalash/orgs", "repos_url": "https://api.github.com/users/ayalash/repos", "events_url": "https://api.github.com/users/ayalash/events{/privacy}", "received_events_url": "https://api.github.com/users/ayalash/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-21T11:00:15Z", "updated_at": "2018-11-21T13:03:21Z", "closed_at": "2018-11-21T12:02:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "`SocketStream._connect` method does not close the socket when the connect fails. Relevant code lines:\r\n```\r\n        s = socket.socket(family, socktype, proto)\r\n        s.settimeout(timeout)\r\n        s.connect(sockaddr)\r\n```\r\nhttps://github.com/tomerfiliba/rpyc/blob/master/rpyc/core/stream.py#L109-L111\r\n\r\n\r\nThis cause python warning to be emitted:\r\n```\r\nunclosed <socket.socket fd=24, family=AddressFamily.AF_INET, type=2049, proto=6, laddr=('...', 56927)>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/310", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/310/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/310/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/310/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/310", "id": 378901651, "node_id": "MDU6SXNzdWUzNzg5MDE2NTE=", "number": 310, "title": "Suggestion: finer control over returning by value or by proxy", "user": {"login": "lurodrigo", "id": 552899, "node_id": "MDQ6VXNlcjU1Mjg5OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/552899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lurodrigo", "html_url": "https://github.com/lurodrigo", "followers_url": "https://api.github.com/users/lurodrigo/followers", "following_url": "https://api.github.com/users/lurodrigo/following{/other_user}", "gists_url": "https://api.github.com/users/lurodrigo/gists{/gist_id}", "starred_url": "https://api.github.com/users/lurodrigo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lurodrigo/subscriptions", "organizations_url": "https://api.github.com/users/lurodrigo/orgs", "repos_url": "https://api.github.com/users/lurodrigo/repos", "events_url": "https://api.github.com/users/lurodrigo/events{/privacy}", "received_events_url": "https://api.github.com/users/lurodrigo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-08T20:22:52Z", "updated_at": "2019-11-14T19:37:37Z", "closed_at": "2019-11-14T19:37:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! I would like to make a suggestion. [Theory of Operation](https://rpyc.readthedocs.io/en/latest/docs/theory.html) says simple, immutable objects are returned by value and everything else is returned by proxy. I think it would be really useful to have a way of forcing by-value return on a service method. Sometimes we return complex objects that don't actually interfere on anything server-side, so having proxy objects that do networking creates unnecessary overhead.\r\n\r\nFor example: I'm building right now a small distributed system for testing our company's algorithms (that do interact a lot with each other). I have services exposing methods that return numpy arrays or pandas objects. Since they are proxied, any operation with them involves networking and it quickly becomes difficult to reason about where the operations are actually taking place.\r\n\r\nMy workaround was to write wrappers calling `rpyc.utils.classic.obtain`. It's quite incovenient, not because of wrapping properly, but because it's client-side. Maybe we could have a decorator indicating that the method returns by value (or any other solution).\r\n\r\nTo be honest, I've been working with this package for only a few days, so maybe there's a better approach to that already available, or my understanding of rpyc's internal workings is wrong, but anyway I'd like to know what do you think about this. Thank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/309", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/309/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/309/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/309/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/309", "id": 376850335, "node_id": "MDU6SXNzdWUzNzY4NTAzMzU=", "number": 309, "title": "class transmission", "user": {"login": "FalseProtagonist", "id": 11063447, "node_id": "MDQ6VXNlcjExMDYzNDQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/11063447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FalseProtagonist", "html_url": "https://github.com/FalseProtagonist", "followers_url": "https://api.github.com/users/FalseProtagonist/followers", "following_url": "https://api.github.com/users/FalseProtagonist/following{/other_user}", "gists_url": "https://api.github.com/users/FalseProtagonist/gists{/gist_id}", "starred_url": "https://api.github.com/users/FalseProtagonist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FalseProtagonist/subscriptions", "organizations_url": "https://api.github.com/users/FalseProtagonist/orgs", "repos_url": "https://api.github.com/users/FalseProtagonist/repos", "events_url": "https://api.github.com/users/FalseProtagonist/events{/privacy}", "received_events_url": "https://api.github.com/users/FalseProtagonist/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-02T15:11:22Z", "updated_at": "2019-11-14T19:47:12Z", "closed_at": "2019-11-14T19:47:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nReading the documentation, rpyc is using brine to transmit only immutable primitives, is there any way to extend this?\r\n\r\nEg. if I want to transfer a dataframe, to I need to write (and call) a serializer/deserializer each side every time? If there any way to embed this cleanly?\r\n\r\nSorry if this is a stupid question.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/308", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/308/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/308/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/308/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/308", "id": 376681642, "node_id": "MDU6SXNzdWUzNzY2ODE2NDI=", "number": 308, "title": "Issues about accessing class members in another file without import", "user": {"login": "einiemand", "id": 34703053, "node_id": "MDQ6VXNlcjM0NzAzMDUz", "avatar_url": "https://avatars3.githubusercontent.com/u/34703053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/einiemand", "html_url": "https://github.com/einiemand", "followers_url": "https://api.github.com/users/einiemand/followers", "following_url": "https://api.github.com/users/einiemand/following{/other_user}", "gists_url": "https://api.github.com/users/einiemand/gists{/gist_id}", "starred_url": "https://api.github.com/users/einiemand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/einiemand/subscriptions", "organizations_url": "https://api.github.com/users/einiemand/orgs", "repos_url": "https://api.github.com/users/einiemand/repos", "events_url": "https://api.github.com/users/einiemand/events{/privacy}", "received_events_url": "https://api.github.com/users/einiemand/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-02T06:09:03Z", "updated_at": "2018-11-02T16:28:09Z", "closed_at": "2018-11-02T16:28:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have posted my doubt here[https://stackoverflow.com/questions/53111529/access-to-class-members-in-another-file-using-rpyc-without-import?noredirect=1#comment93118595_53111529](url). I still cannot get what I want. Ideally, the self-defined exception should be raised and I can get its member variables. How am I supposed to implement it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/306", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/306/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/306/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/306/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/306", "id": 376095734, "node_id": "MDU6SXNzdWUzNzYwOTU3MzQ=", "number": 306, "title": "Pipes and Named pipes in Windows very slow", "user": {"login": "pyscripter", "id": 1311616, "node_id": "MDQ6VXNlcjEzMTE2MTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1311616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pyscripter", "html_url": "https://github.com/pyscripter", "followers_url": "https://api.github.com/users/pyscripter/followers", "following_url": "https://api.github.com/users/pyscripter/following{/other_user}", "gists_url": "https://api.github.com/users/pyscripter/gists{/gist_id}", "starred_url": "https://api.github.com/users/pyscripter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pyscripter/subscriptions", "organizations_url": "https://api.github.com/users/pyscripter/orgs", "repos_url": "https://api.github.com/users/pyscripter/repos", "events_url": "https://api.github.com/users/pyscripter/events{/privacy}", "received_events_url": "https://api.github.com/users/pyscripter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-10-31T18:10:23Z", "updated_at": "2018-11-19T00:08:04Z", "closed_at": "2018-11-19T00:08:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was testing the relative speed of different transport protocols on windows.\r\n\r\nsockets:\r\n```\r\nconn = rpyc.classic.connect(\"localhost\")\r\n>>> t = timeit.timeit(conn.ping, number=100)\r\n>>> t\r\n0.01832969809993301\r\n```\r\npipes:\r\n```\r\nconn = rpyc.classic.connect_subproc(r\"c:\\python\\vpython36\\Scripts\\rpyc_classic.py\")\r\n>>> t = timeit.timeit(conn.ping, number=100)\r\n>>> t\r\n10.053397062580675\r\n```\r\n\r\nNamed pipes:\r\n```\r\n>>> np_client = NamedPipeStream.create_client(\"floop\")\r\n>>> conn = rpyc.classic.connect_stream(np_client)\r\n>>> t = timeit.timeit(conn.ping, number=100)\r\n>>> t\r\n10.05315956866582\r\n```\r\n\r\nIt appears that sockets about 500 times faster than pipes!  I find this quite surprising.  Local named pipes on windows are supposed to be as fast if not faster than sockets.  I know of the problem with the lack of poll and select for windows pipes, but there should be some scope for improvement (?).\r\n\r\nBy the way rpyc performance with sockets is very good.\r\n\r\n##### Environment\r\n\r\n- rpyc version (GitHub)\r\n- python version 3.6\r\n- operating system  Windows 10 with the latest updates\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/304", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/304/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/304/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/304/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/304", "id": 370087096, "node_id": "MDU6SXNzdWUzNzAwODcwOTY=", "number": 304, "title": "memory bug on server side when use forking mode", "user": {"login": "RichardChen3511", "id": 4652911, "node_id": "MDQ6VXNlcjQ2NTI5MTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4652911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RichardChen3511", "html_url": "https://github.com/RichardChen3511", "followers_url": "https://api.github.com/users/RichardChen3511/followers", "following_url": "https://api.github.com/users/RichardChen3511/following{/other_user}", "gists_url": "https://api.github.com/users/RichardChen3511/gists{/gist_id}", "starred_url": "https://api.github.com/users/RichardChen3511/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RichardChen3511/subscriptions", "organizations_url": "https://api.github.com/users/RichardChen3511/orgs", "repos_url": "https://api.github.com/users/RichardChen3511/repos", "events_url": "https://api.github.com/users/RichardChen3511/events{/privacy}", "received_events_url": "https://api.github.com/users/RichardChen3511/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-15T10:00:02Z", "updated_at": "2019-05-21T18:57:02Z", "closed_at": "2019-05-21T18:55:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Describe the issue briefly here, including:\r\n\r\nin file rpyc/utils/server.py, line 154-156, \r\n\r\n    def accept(self):\r\n        \"\"\"accepts an incoming socket connection (blocking)\"\"\"\r\n        while self.active:\r\n            try:\r\n                sock, addrinfo = self.listener.accept()\r\n            except socket.timeout:\r\n                pass\r\n            except socket.error:\r\n                ex = sys.exc_info()[1]\r\n                if get_exc_errno(ex) in (errno.EINTR, errno.EAGAIN):\r\n                    pass\r\n                else:\r\n                    raise EOFError()\r\n            else:\r\n                break\r\n\r\n        if not self.active:\r\n            return\r\n\r\n        sock.setblocking(True)\r\n        self.logger.info(\"accepted %s with fd %s\", addrinfo, sock.fileno())\r\n        self.clients.add(sock)                                                    <<<========== client sock add to clients\r\n        self._accept_method(sock)\r\n\r\n  \r\nClient socket \"sock\" add to self.cleints, But in class ForkingServer._accept_method:\r\n\r\n    def _accept_method(self, sock):\r\n        pid = os.fork()\r\n        if pid == 0:\r\n            # child\r\n            try:\r\n                self.logger.debug(\"child process created\")\r\n                signal.signal(signal.SIGCHLD, self._prevhandler)\r\n                #76: call signal.siginterrupt(False) in forked child\r\n                signal.siginterrupt(signal.SIGCHLD, False)\r\n                self.listener.close()\r\n                self.clients.clear()\r\n                self._authenticate_and_serve_client(sock)\r\n            except:\r\n                self.logger.exception(\"child process terminated abnormally\")\r\n            else:\r\n                self.logger.debug(\"child process terminated\")\r\n            finally:\r\n                self.logger.debug(\"child terminated\")\r\n                os._exit(0)\r\n        else:\r\n            # parent\r\n            sock.close()                           <<<<===========parent process forget to remove client, bug!\r\n\r\nthis bug will made parent process's memory out of limit\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/302", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/302/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/302/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/302/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/302", "id": 364721648, "node_id": "MDU6SXNzdWUzNjQ3MjE2NDg=", "number": 302, "title": "Execute yield command remotely", "user": {"login": "andresdemski", "id": 5638582, "node_id": "MDQ6VXNlcjU2Mzg1ODI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5638582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andresdemski", "html_url": "https://github.com/andresdemski", "followers_url": "https://api.github.com/users/andresdemski/followers", "following_url": "https://api.github.com/users/andresdemski/following{/other_user}", "gists_url": "https://api.github.com/users/andresdemski/gists{/gist_id}", "starred_url": "https://api.github.com/users/andresdemski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andresdemski/subscriptions", "organizations_url": "https://api.github.com/users/andresdemski/orgs", "repos_url": "https://api.github.com/users/andresdemski/repos", "events_url": "https://api.github.com/users/andresdemski/events{/privacy}", "received_events_url": "https://api.github.com/users/andresdemski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-28T02:48:55Z", "updated_at": "2019-05-21T19:32:00Z", "closed_at": "2019-05-21T19:32:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI'm trying to use RPyC in a proyect based in coroutines and i need to start a RPyC server inside one coroutine and i need to be able to send `yield` commands. \r\n\r\nI know that this application is not common. I want this because the coroutines are launched by an scheduler that controls a simulator engine and i need to continue simulation when all the coroutine are waiting for a simulation step.\r\n\r\nFor example:\r\nServer/Simulator side:\r\n``` python\r\n@sim.coroutine \r\ndef coroutine_A ( ... ):\r\n    while True:\r\n         yield ClasicServer.run()\r\n\r\n@sim.coroutine \r\ndef coroutine_B( ... ):\r\n    yield WaitEvent('event')\r\n    yield WaitEvent('another_event')\r\n```\r\nClient:\r\n```python\r\nconn = rpyc.classic.connect('localhost')\r\n...\r\nconn.execute(\"yield WaitEvent('event')\")\r\nconn.execute(\"yield WaitEvent('another_event')\")\r\n```\r\nBefore knowing RPyC project, i starting doing an ugly approach as is shown in https://github.com/andresdemski/pycocotb/blob/master/pycocotb/interactive.py\r\n\r\nWhat do you think? Can i do this in a simple way or i need to change all RPyC architecture?\r\n\r\nThx!\r\nAndres\r\n\r\n\r\n\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/301", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/301/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/301/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/301/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/301", "id": 362612782, "node_id": "MDU6SXNzdWUzNjI2MTI3ODI=", "number": 301, "title": "Statically typed brine-ish serializer (improve brine)", "user": {"login": "traverseda", "id": 2125828, "node_id": "MDQ6VXNlcjIxMjU4Mjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2125828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/traverseda", "html_url": "https://github.com/traverseda", "followers_url": "https://api.github.com/users/traverseda/followers", "following_url": "https://api.github.com/users/traverseda/following{/other_user}", "gists_url": "https://api.github.com/users/traverseda/gists{/gist_id}", "starred_url": "https://api.github.com/users/traverseda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/traverseda/subscriptions", "organizations_url": "https://api.github.com/users/traverseda/orgs", "repos_url": "https://api.github.com/users/traverseda/repos", "events_url": "https://api.github.com/users/traverseda/events{/privacy}", "received_events_url": "https://api.github.com/users/traverseda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1443665116, "node_id": "MDU6TGFiZWwxNDQzNjY1MTE2", "url": "https://api.github.com/repos/tomerfiliba/rpyc/labels/Diagnosed", "name": "Diagnosed", "color": "2980B9", "default": false, "description": "Status: The issue is reviewed/confirmed but not in progress"}, {"id": 1371305861, "node_id": "MDU6TGFiZWwxMzcxMzA1ODYx", "url": "https://api.github.com/repos/tomerfiliba/rpyc/labels/Help%20Wanted", "name": "Help Wanted", "color": "fcbdf5", "default": false, "description": "Type"}], "state": "closed", "locked": false, "assignee": {"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "comrumino", "id": 12876622, "node_id": "MDQ6VXNlcjEyODc2NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12876622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comrumino", "html_url": "https://github.com/comrumino", "followers_url": "https://api.github.com/users/comrumino/followers", "following_url": "https://api.github.com/users/comrumino/following{/other_user}", "gists_url": "https://api.github.com/users/comrumino/gists{/gist_id}", "starred_url": "https://api.github.com/users/comrumino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comrumino/subscriptions", "organizations_url": "https://api.github.com/users/comrumino/orgs", "repos_url": "https://api.github.com/users/comrumino/repos", "events_url": "https://api.github.com/users/comrumino/events{/privacy}", "received_events_url": "https://api.github.com/users/comrumino/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-09-21T13:18:36Z", "updated_at": "2020-01-30T18:24:41Z", "closed_at": "2020-01-30T18:24:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://gist.github.com/61dedd1a5f1ac3a8f9a825a0ecf300fc\r\n\r\nI wrote a serializer that does the same thing as brine, but has type-annotations and is ~1/2 the size. I also think it's a fair bit more readable (aside from the code for encoding ints) and it is much easier to extend.\r\n\r\nIt's also not backwards compatible. I figured I'd mention that it exists, and that rpyc is free to use it. It's a pretty significant refactor, but it might be a good choice for the next major release.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/300", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/300/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/300/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/300", "id": 358656925, "node_id": "MDU6SXNzdWUzNTg2NTY5MjU=", "number": 300, "title": "sklearn function hangs", "user": {"login": "dilzeem", "id": 8899724, "node_id": "MDQ6VXNlcjg4OTk3MjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/8899724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dilzeem", "html_url": "https://github.com/dilzeem", "followers_url": "https://api.github.com/users/dilzeem/followers", "following_url": "https://api.github.com/users/dilzeem/following{/other_user}", "gists_url": "https://api.github.com/users/dilzeem/gists{/gist_id}", "starred_url": "https://api.github.com/users/dilzeem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dilzeem/subscriptions", "organizations_url": "https://api.github.com/users/dilzeem/orgs", "repos_url": "https://api.github.com/users/dilzeem/repos", "events_url": "https://api.github.com/users/dilzeem/events{/privacy}", "received_events_url": "https://api.github.com/users/dilzeem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-10T14:45:52Z", "updated_at": "2019-03-25T15:51:37Z", "closed_at": "2019-03-25T15:51:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "##### Environment\r\n\r\n- rpyc version 4.02\r\n- python version 3.6.6\r\n- operating system Windows 10\r\n\r\n\r\n\r\n##### Minimal example\r\n\r\nServer:\r\n\r\n```python\r\nimport rpyc\r\nrpyc.lib.setup_logger()\r\n\r\n\r\nfrom sklearn import datasets\r\nfrom sklearn.model_selection import cross_val_predict\r\nfrom sklearn import linear_model\r\n\r\nclass MyService(rpyc.Service):\r\n    def on_connect(self, conn):\r\n        pass\r\n\r\n    def on_disconnect(self, conn):\r\n        pass\r\n\r\n    def exposed_predict(self):\r\n        lr = linear_model.LinearRegression()\r\n        boston = datasets.load_boston()\r\n        y = boston.target\r\n        predicted = cross_val_predict(lr, boston.data, y, cv=10)\r\n        return predicted\r\n\r\n\r\n    def exposed_predict_arg(self, data):\r\n        boston = data\r\n        lr = linear_model.LinearRegression()\r\n        y = boston[\"target\"]\r\n        predicted = cross_val_predict(lr, boston[\"data\"], y, cv=10)\r\n        return predicted\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    from rpyc.utils.server import ThreadedServer\r\n    t = ThreadedServer(MyService, port=18861)\r\n    t.start()\r\n```\r\n\r\n\r\nWhen I run `c.root.predict()` the data is returned and `cross_val_predict(lr, boston[\"data\"], y, cv=10)` is able to run.\r\n\r\n\r\n\r\n\r\nClient:\r\nHowever this does\r\n\r\n```python\r\nimport rpyc\r\nc = rpyc.connect(\"localhost\", 18861)\r\n\r\nfrom sklearn import datasets\r\nresults = c.root.predict()\r\n```\r\n\r\n\r\nHowever when I pass the data (boston) to server and call `c.root.predict_arg(boston)` I get a time out error, and it seems to hang at  `cross_val_predict(lr, boston[\"data\"], y, cv=10)` \r\n\r\nClient:\r\nThis doesn't work\r\n\r\n```python\r\nimport rpyc\r\nc = rpyc.connect(\"localhost\", 18861)\r\n\r\nfrom sklearn import datasets\r\nboston = datasets.load_boston()\r\n\r\nresults = c.root.predict_arg(boston)\r\n```\r\n\r\n\r\nStacktrace\r\n\r\n```\r\nTimeoutError                              Traceback (most recent call last)\r\n<ipython-input-137-3a865ab8ff07> in <module>()\r\n      1 boston = datasets.load_boston()\r\n      2 \r\n----> 3 results = c.root.predict_arg(boston)\r\n\r\nc:\\home\\.virtualenvs\\all-hzimeryf\\lib\\site-packages\\rpyc\\core\\netref.py in __call__(_self, *args, **kwargs)\r\n    197         def __call__(_self, *args, **kwargs):\r\n    198             kwargs = tuple(kwargs.items())\r\n--> 199             return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\r\n    200         __call__.__doc__ = doc\r\n    201         return __call__\r\n\r\nc:\\home\\.virtualenvs\\all-hzimeryf\\lib\\site-packages\\rpyc\\core\\netref.py in syncreq(proxy, handler, *args)\r\n     73     \"\"\"\r\n     74     conn = object.__getattribute__(proxy, \"____conn__\")\r\n---> 75     return conn.sync_request(handler, proxy, *args)\r\n     76 \r\n     77 def asyncreq(proxy, handler, *args):\r\n\r\nc:\\home\\.virtualenvs\\all-hzimeryf\\lib\\site-packages\\rpyc\\core\\protocol.py in sync_request(self, handler, *args)\r\n    469         \"\"\"\r\n    470         timeout = self._config[\"sync_request_timeout\"]\r\n--> 471         return self.async_request(handler, *args, timeout=timeout).value\r\n    472 \r\n    473     def _async_request(self, handler, args = (), callback = (lambda a, b: None)):\r\n\r\nc:\\home\\.virtualenvs\\all-hzimeryf\\lib\\site-packages\\rpyc\\core\\async_.py in value(self)\r\n     93         here. Otherwise, the result is returned directly.\r\n     94         \"\"\"\r\n---> 95         self.wait()\r\n     96         if self._is_exc:\r\n     97             raise self._obj\r\n\r\nc:\\home\\.virtualenvs\\all-hzimeryf\\lib\\site-packages\\rpyc\\core\\async_.py in wait(self)\r\n     45             self._conn.serve(self._ttl)\r\n     46         if not self._is_ready:\r\n---> 47             raise AsyncResultTimeout(\"result expired\")\r\n     48 \r\n     49     def add_callback(self, func):\r\n\r\nTimeoutError: result expired\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/299", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/299/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/299/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/299/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/299", "id": 356277725, "node_id": "MDU6SXNzdWUzNTYyNzc3MjU=", "number": 299, "title": "Some tests fail on a single core machine", "user": {"login": "arcresu", "id": 322256, "node_id": "MDQ6VXNlcjMyMjI1Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/322256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arcresu", "html_url": "https://github.com/arcresu", "followers_url": "https://api.github.com/users/arcresu/followers", "following_url": "https://api.github.com/users/arcresu/following{/other_user}", "gists_url": "https://api.github.com/users/arcresu/gists{/gist_id}", "starred_url": "https://api.github.com/users/arcresu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arcresu/subscriptions", "organizations_url": "https://api.github.com/users/arcresu/orgs", "repos_url": "https://api.github.com/users/arcresu/repos", "events_url": "https://api.github.com/users/arcresu/events{/privacy}", "received_events_url": "https://api.github.com/users/arcresu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-02T12:17:28Z", "updated_at": "2018-09-06T15:35:34Z", "closed_at": "2018-09-06T15:23:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When running the tests on a single core machine the three tests in `test_teleportation` fail, and some `select()`-related errors are raised. I'm not sure if this environment is one you want to support for running tests, but if not then would you consider skipping the affected tests when a single core environment is detected?\r\n\r\nThis was [reported](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=907716) during Debian packaging when I updated the package there to from 3.4.4 to 4.0.2.\r\n\r\nI can reproduce the failure using `taskset` on Linux with python3.6:\r\n\r\n```bash\r\nnosetests3 -vv -I test_deploy -I test_gevent_server -I test_ssh\r\n# => all OK\r\n\r\ntaskset -c 0 nosetests3 -vv -I test_deploy -I test_gevent_server -I test_ssh\r\n# => fails\r\n```\r\nHere are the specific failures:\r\n\r\n```\r\n======================================================================\r\nERROR: test (test_teleportation.TeleportationTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/carl/code/rpyc/tests/test_teleportation.py\", line 45, in setUp\r\n    self.conn = rpyc.classic.connect(host, int(port))\r\n  File \"/home/carl/code/rpyc/rpyc/utils/classic.py\", line 70, in connect\r\n    return factory.connect(host, port, SlaveService, ipv6 = ipv6, keepalive = keepalive)\r\n  File \"/home/carl/code/rpyc/rpyc/utils/factory.py\", line 94, in connect\r\n    s = SocketStream.connect(host, port, ipv6=ipv6, keepalive=keepalive)\r\n  File \"/home/carl/code/rpyc/rpyc/core/stream.py\", line 154, in connect\r\n    return cls(cls._connect(host, port, **kwargs))\r\n  File \"/home/carl/code/rpyc/rpyc/core/stream.py\", line 112, in _connect\r\n    s.connect(sockaddr)\r\nConnectionRefusedError: [Errno 111] Connection refused\r\n-------------------- >> begin captured logging << --------------------\r\nSLAVE/18812: INFO: server has terminated\r\nSLAVE/18812: INFO: goodbye ('127.0.0.1', 43594)\r\n--------------------- >> end captured logging << ---------------------\r\n\r\n======================================================================\r\nERROR: test_def (test_teleportation.TeleportationTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/carl/code/rpyc/tests/test_teleportation.py\", line 45, in setUp\r\n    self.conn = rpyc.classic.connect(host, int(port))\r\n  File \"/home/carl/code/rpyc/rpyc/utils/classic.py\", line 70, in connect\r\n    return factory.connect(host, port, SlaveService, ipv6 = ipv6, keepalive = keepalive)\r\n  File \"/home/carl/code/rpyc/rpyc/utils/factory.py\", line 94, in connect\r\n    s = SocketStream.connect(host, port, ipv6=ipv6, keepalive=keepalive)\r\n  File \"/home/carl/code/rpyc/rpyc/core/stream.py\", line 154, in connect\r\n    return cls(cls._connect(host, port, **kwargs))\r\n  File \"/home/carl/code/rpyc/rpyc/core/stream.py\", line 112, in _connect\r\n    s.connect(sockaddr)\r\nConnectionRefusedError: [Errno 111] Connection refused\r\n\r\n======================================================================\r\nERROR: test_globals (test_teleportation.TeleportationTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/carl/code/rpyc/tests/test_teleportation.py\", line 45, in setUp\r\n    self.conn = rpyc.classic.connect(host, int(port))\r\n  File \"/home/carl/code/rpyc/rpyc/utils/classic.py\", line 70, in connect\r\n    return factory.connect(host, port, SlaveService, ipv6 = ipv6, keepalive = keepalive)\r\n  File \"/home/carl/code/rpyc/rpyc/utils/factory.py\", line 94, in connect\r\n    s = SocketStream.connect(host, port, ipv6=ipv6, keepalive=keepalive)\r\n  File \"/home/carl/code/rpyc/rpyc/core/stream.py\", line 154, in connect\r\n    return cls(cls._connect(host, port, **kwargs))\r\n  File \"/home/carl/code/rpyc/rpyc/core/stream.py\", line 112, in _connect\r\n    s.connect(sockaddr)\r\nConnectionRefusedError: [Errno 111] Connection refused\r\n\r\n----------------------------------------------------------------------\r\n```\r\n\r\nThese errors also occur earlier but don't result in any test failures:\r\n```\r\ntest_properties (test_attributes.TestAttributes) ... Exception in thread Thread-7:\r\nTraceback (most recent call last):\r\n  File \"/home/carl/code/rpyc/rpyc/core/stream.py\", line 40, in poll\r\n    p.register(self.fileno(), \"r\")\r\n  File \"/home/carl/code/rpyc/rpyc/lib/compat.py\", line 99, in register\r\n    self._poll.register(fd, flags)\r\nValueError: file descriptor cannot be a negative integer (-1)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/threading.py\", line 916, in _bootstrap_inner\r\n    self.run()\r\n  File \"/usr/lib/python3.6/threading.py\", line 864, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/home/carl/code/rpyc/rpyc/utils/server.py\", line 181, in _authenticate_and_serve_client\r\n    self._serve_client(sock2, credentials)\r\n  File \"/home/carl/code/rpyc/rpyc/utils/server.py\", line 203, in _serve_client\r\n    self._handle_connection(conn)\r\n  File \"/home/carl/code/rpyc/rpyc/utils/server.py\", line 209, in _handle_connection\r\n    conn.serve_all()\r\n  File \"/home/carl/code/rpyc/rpyc/core/protocol.py\", line 413, in serve_all\r\n    self.serve(None)\r\n  File \"/home/carl/code/rpyc/rpyc/core/protocol.py\", line 387, in serve\r\n    data = self._channel.poll(timeout) and self._channel.recv()\r\n  File \"/home/carl/code/rpyc/rpyc/core/channel.py\", line 43, in poll\r\n    return self.stream.poll(timeout)\r\n  File \"/home/carl/code/rpyc/rpyc/core/stream.py\", line 58, in poll\r\n    raise select_error(str(ex))\r\nOSError: file descriptor cannot be a negative integer (-1)\r\n\r\ntest_connection (test_threaded_server.Test_ThreadedServerOverUnixSocket) ... Exception in thread Thread-56:\r\nTraceback (most recent call last):\r\n  File \"/home/carl/code/rpyc/rpyc/core/stream.py\", line 40, in poll\r\n    p.register(self.fileno(), \"r\")\r\n  File \"/home/carl/code/rpyc/rpyc/lib/compat.py\", line 99, in register\r\n    self._poll.register(fd, flags)\r\nValueError: file descriptor cannot be a negative integer (-1)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/threading.py\", line 916, in _bootstrap_inner\r\n    self.run()\r\n  File \"/usr/lib/python3.6/threading.py\", line 864, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/home/carl/code/rpyc/rpyc/utils/server.py\", line 181, in _authenticate_and_serve_client\r\n    self._serve_client(sock2, credentials)\r\n  File \"/home/carl/code/rpyc/rpyc/utils/server.py\", line 203, in _serve_client\r\n    self._handle_connection(conn)\r\n  File \"/home/carl/code/rpyc/rpyc/utils/server.py\", line 209, in _handle_connection\r\n    conn.serve_all()\r\n  File \"/home/carl/code/rpyc/rpyc/core/protocol.py\", line 413, in serve_all\r\n    self.serve(None)\r\n  File \"/home/carl/code/rpyc/rpyc/core/protocol.py\", line 387, in serve\r\n    data = self._channel.poll(timeout) and self._channel.recv()\r\n  File \"/home/carl/code/rpyc/rpyc/core/channel.py\", line 43, in poll\r\n    return self.stream.poll(timeout)\r\n  File \"/home/carl/code/rpyc/rpyc/core/stream.py\", line 58, in poll\r\n    raise select_error(str(ex))\r\nOSError: file descriptor cannot be a negative integer (-1)\r\n\r\nok\r\ntest_invoker (test_threads.Test_Multithreaded) ... Exception in thread Thread-58:\r\nTraceback (most recent call last):\r\n  File \"/home/carl/code/rpyc/rpyc/core/stream.py\", line 40, in poll\r\n    p.register(self.fileno(), \"r\")\r\n  File \"/home/carl/code/rpyc/rpyc/lib/compat.py\", line 99, in register\r\n    self._poll.register(fd, flags)\r\nValueError: file descriptor cannot be a negative integer (-1)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/threading.py\", line 916, in _bootstrap_inner\r\n    self.run()\r\n  File \"/usr/lib/python3.6/threading.py\", line 864, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/home/carl/code/rpyc/rpyc/utils/server.py\", line 181, in _authenticate_and_serve_client\r\n    self._serve_client(sock2, credentials)\r\n  File \"/home/carl/code/rpyc/rpyc/utils/server.py\", line 203, in _serve_client\r\n    self._handle_connection(conn)\r\n  File \"/home/carl/code/rpyc/rpyc/utils/server.py\", line 209, in _handle_connection\r\n    conn.serve_all()\r\n  File \"/home/carl/code/rpyc/rpyc/core/protocol.py\", line 413, in serve_all\r\n    self.serve(None)\r\n  File \"/home/carl/code/rpyc/rpyc/core/protocol.py\", line 387, in serve\r\n    data = self._channel.poll(timeout) and self._channel.recv()\r\n  File \"/home/carl/code/rpyc/rpyc/core/channel.py\", line 43, in poll\r\n    return self.stream.poll(timeout)\r\n  File \"/home/carl/code/rpyc/rpyc/core/stream.py\", line 58, in poll\r\n    raise select_error(str(ex))\r\nOSError: file descriptor cannot be a negative integer (-1)\r\n```\r\n\r\n##### Environment\r\n\r\n- rpyc version: 4.0.2 git HEAD 59efbf2938481a4b597c11c73bdc6a5f60aa90e5\r\n- python version: Python 3.6.6\r\n- operating system: Debian sid `Linux 4.17.0-3-amd64 #1 SMP Debian 4.17.17-1 (2018-08-18) x86_64 GNU/Linux`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/296", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/296/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/296/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/296", "id": 354675195, "node_id": "MDU6SXNzdWUzNTQ2NzUxOTU=", "number": 296, "title": "Traceback with \"rpyc.classic.connect()\" on EV3DEV", "user": {"login": "Maahess", "id": 39651127, "node_id": "MDQ6VXNlcjM5NjUxMTI3", "avatar_url": "https://avatars0.githubusercontent.com/u/39651127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Maahess", "html_url": "https://github.com/Maahess", "followers_url": "https://api.github.com/users/Maahess/followers", "following_url": "https://api.github.com/users/Maahess/following{/other_user}", "gists_url": "https://api.github.com/users/Maahess/gists{/gist_id}", "starred_url": "https://api.github.com/users/Maahess/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Maahess/subscriptions", "organizations_url": "https://api.github.com/users/Maahess/orgs", "repos_url": "https://api.github.com/users/Maahess/repos", "events_url": "https://api.github.com/users/Maahess/events{/privacy}", "received_events_url": "https://api.github.com/users/Maahess/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-28T10:48:53Z", "updated_at": "2018-11-01T02:20:25Z", "closed_at": "2018-11-01T02:20:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using python provided rpyc module for my remote connectivity purposes but my command \"import rpyc; conn = rpyc.classic.connect()\" yield the following traceback:\r\n>>> import rpyc\r\n>>> conn = rpyc.classic.connect('192.168.137.194')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Users\\Cuza\\AppData\\Roaming\\Python\\Python27\\site-packages\\rpyc\\utils\\classic.py\", line 70, in connect\r\n    return factory.connect(host, port, SlaveService, ipv6 = ipv6, keepalive = keepalive)\r\n  File \"C:\\Users\\Cuza\\AppData\\Roaming\\Python\\Python27\\site-packages\\rpyc\\utils\\factory.py\", line 94, in connect\r\n    return connect_stream(s, service, config)\r\n  File \"C:\\Users\\Cuza\\AppData\\Roaming\\Python\\Python27\\site-packages\\rpyc\\utils\\factory.py\", line 55, in connect_stream\r\n    return connect_channel(Channel(stream), service=service, config=config)\r\n  File \"C:\\Users\\Cuza\\AppData\\Roaming\\Python\\Python27\\site-packages\\rpyc\\utils\\factory.py\", line 44, in connect_channel\r\n    return service._connect(channel, config)\r\n  File \"C:\\Users\\Cuza\\AppData\\Roaming\\Python\\Python27\\site-packages\\rpyc\\core\\service.py\", line 100, in _connect\r\n    self.on_connect(conn)\r\n  File \"C:\\Users\\Cuza\\AppData\\Roaming\\Python\\Python27\\site-packages\\rpyc\\core\\service.py\", line 195, in on_connect\r\n    self._install(conn, conn.root)\r\n  File \"C:\\Users\\Cuza\\AppData\\Roaming\\Python\\Python27\\site-packages\\rpyc\\core\\service.py\", line 199, in _install\r\n    modules = ModuleNamespace(slave.getmodule)\r\n  File \"C:\\Users\\Cuza\\AppData\\Roaming\\Python\\Python27\\site-packages\\rpyc\\core\\netref.py\", line 155, in __getattribute__\r\n    return syncreq(self, consts.HANDLE_GETATTR, name)\r\n  File \"C:\\Users\\Cuza\\AppData\\Roaming\\Python\\Python27\\site-packages\\rpyc\\core\\netref.py\", line 75, in syncreq\r\n    return conn.sync_request(handler, proxy, *args)\r\n  File \"C:\\Users\\Cuza\\AppData\\Roaming\\Python\\Python27\\site-packages\\rpyc\\core\\protocol.py\", line 471, in sync_request\r\n    return self.async_request(handler, *args, timeout=timeout).value\r\n  File \"C:\\Users\\Cuza\\AppData\\Roaming\\Python\\Python27\\site-packages\\rpyc\\core\\async_.py\", line 97, in value\r\n    raise self._obj\r\nrpyc.core.vinegar/builtins.KeyError: <rpyc.core.service.SlaveService object at 0xb59a5050>\r\n\r\n========= Remote Traceback (1) =========\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/core/protocol.py\", line 347, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/core/protocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(oid, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/core/protocol.py\", line 588, in _access_attr\r\n    obj = self._local_objects[oid]\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/lib/colls.py\", line 86, in __getitem__\r\n    return self._dict[key][0]\r\nKeyError: <rpyc.core.service.SlaveService object at 0xb59a5050>\r\n\r\nAnd on Putty console i get this:\r\nrobot@ev3dev:~$ ./rpyc_server.sh\r\nINFO:SLAVE/18812:server started on [0.0.0.0]:18812\r\nINFO:SLAVE/18812:accepted ('192.168.137.1', 64846) with fd 4\r\nINFO:SLAVE/18812:welcome ('192.168.137.1', 64846)\r\nDEBUG:SLAVE/18812:Exception caught\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/core/pr                                                                                        otocol.py\", line 347, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/core/pr                                                                                        otocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(oid, name, (), \"_rpyc_getattr\", \"allow_getattr\", ge                                                                                        tattr)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/core/pr                                                                                        otocol.py\", line 588, in _access_attr\r\n    obj = self._local_objects[oid]\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/lib/col                                                                                        ls.py\", line 86, in __getitem__\r\n    return self._dict[key][0]\r\nKeyError: <rpyc.core.service.SlaveService object at 0xb59a5050>\r\nINFO:SLAVE/18812:goodbye ('192.168.137.1', 64846)\r\nERROR:SLAVE/18812:client connection terminated abruptly\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/utils/s                                                                                        erver.py\", line 179, in _authenticate_and_serve_client\r\n    self._serve_client(sock2, credentials)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/utils/s                                                                                        erver.py\", line 202, in _serve_client\r\n    conn._init_service()\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/core/pr                                                                                        otocol.py\", line 164, in _init_service\r\n    self._local_root.on_connect()\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/core/se                                                                                        rvice.py\", line 142, in on_connect\r\n    self._conn.modules = ModuleNamespace(self._conn.root.getmodule)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/core/ne                                                                                        tref.py\", line 151, in __getattribute__\r\n    return syncreq(self, consts.HANDLE_GETATTR, name)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/core/ne                                                                                        tref.py\", line 72, in syncreq\r\n    return conn.sync_request(handler, oid, *args)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/core/pr                                                                                        otocol.py\", line 519, in sync_request\r\n    self.sync_recv_and_dispatch(timeout, True)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/core/pr                                                                                        otocol.py\", line 417, in sync_recv_and_dispatch\r\n    self._dispatch(data)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/core/pr                                                                                        otocol.py\", line 405, in _dispatch\r\n    self._dispatch_exception(seq, args)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/core/pr                                                                                        otocol.py\", line 374, in _dispatch_exception\r\n    instantiate_oldstyle_exceptions = self._config[\"instantiate_oldstyle_excepti                                                                                        ons\"])\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/core/vi                                                                                        negar.py\", line 158, in load\r\n    setattr(exc, name, attrval)\r\nTypeError: attribute name must be string, not 'bytes'\r\nException in thread Thread-1:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.5/threading.py\", line 914, in _bootstrap_inner\r\n    self.run()\r\n  File \"/usr/lib/python3.5/threading.py\", line 862, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/utils/s                                                                                        erver.py\", line 179, in _authenticate_and_serve_client\r\n    self._serve_client(sock2, credentials)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/utils/s                                                                                        erver.py\", line 202, in _serve_client\r\n    conn._init_service()\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/core/pr                                                                                        otocol.py\", line 164, in _init_service\r\n    self._local_root.on_connect()\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/core/se                                                                                        rvice.py\", line 142, in on_connect\r\n    self._conn.modules = ModuleNamespace(self._conn.root.getmodule)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/core/ne                                                                                        tref.py\", line 151, in __getattribute__\r\n    return syncreq(self, consts.HANDLE_GETATTR, name)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/core/ne                                                                                        tref.py\", line 72, in syncreq\r\n    return conn.sync_request(handler, oid, *args)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/core/pr                                                                                        otocol.py\", line 519, in sync_request\r\n    self.sync_recv_and_dispatch(timeout, True)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/core/pr                                                                                        otocol.py\", line 417, in sync_recv_and_dispatch\r\n    self._dispatch(data)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/core/pr                                                                                        otocol.py\", line 405, in _dispatch\r\n    self._dispatch_exception(seq, args)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/core/pr                                                                                        otocol.py\", line 374, in _dispatch_exception\r\n    instantiate_oldstyle_exceptions = self._config[\"instantiate_oldstyle_excepti                                                                                        ons\"])\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc-3.4.4-py3.5.egg/rpyc/core/vi                                                                                        negar.py\", line 158, in load\r\n    setattr(exc, name, attrval)\r\nTypeError: attribute name must be string, not 'bytes'\r\n\r\nEnvironment:\r\nrpyc version = 3.4.4(on both pc and ev3)\r\nCan anyone please help me rectify this issue?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/295", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/295/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/295/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/295", "id": 354085177, "node_id": "MDU6SXNzdWUzNTQwODUxNzc=", "number": 295, "title": "reduce round-trip network traffic by adding _io to builtins", "user": {"login": "delandtj", "id": 5995555, "node_id": "MDQ6VXNlcjU5OTU1NTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/5995555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/delandtj", "html_url": "https://github.com/delandtj", "followers_url": "https://api.github.com/users/delandtj/followers", "following_url": "https://api.github.com/users/delandtj/following{/other_user}", "gists_url": "https://api.github.com/users/delandtj/gists{/gist_id}", "starred_url": "https://api.github.com/users/delandtj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/delandtj/subscriptions", "organizations_url": "https://api.github.com/users/delandtj/orgs", "repos_url": "https://api.github.com/users/delandtj/repos", "events_url": "https://api.github.com/users/delandtj/events{/privacy}", "received_events_url": "https://api.github.com/users/delandtj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-08-26T10:56:10Z", "updated_at": "2020-01-30T18:24:55Z", "closed_at": "2020-01-30T18:24:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "adding these saves two round-trips and over 500 bytes of traffic.  actually only _io.TextIOWrapper is the culprit: however adding all the others makes sense.  they're in the built-in module  \"_io\" which is a standard c-based python module in both 2.7 and 3.  may make sense to put this unconditionally (not with the ispy3k test?)\r\n\r\n ```\r\n\r\ndiff --git a/rpyc/core/netref.py b/rpyc/core/netref.py\r\nindex 6cf6ff1..c24211f 100644\r\n--- a/rpyc/core/netref.py\r\n+++ b/rpyc/core/netref.py\r\n@@ -7,6 +7,7 @@ import inspect\r\n import types\r\n from rpyc.lib.compat import pickle, is_py3k, maxint, with_metaclass\r\n from rpyc.core import consts\r\n+import _io\r\n \r\n \r\n # If these can be accessed, numpy will try to load the array from local memory,\r\n@@ -50,6 +51,17 @@ if is_py3k:\r\n         bytes, bytearray, type(iter(range(10))), memoryview,\r\n     ])\r\n     xrange = range\r\n+\r\n+    # look for builtin io.String (actually _io.String), TextIOWrapper\r\n+    # and others.  saves a lot of network traffic when using IPython.embed\r\n+    for ioname in dir(_io):\r\n+        if ioname.startswith(\"__\"):\r\n+            continue\r\n+        ioattr = getattr(_io, ioname)\r\n+        if not inspect.isclass(ioattr):\r\n+            continue\r\n+        _builtin_types.append(ioattr)\r\n+        print (\"adding ioname\", ioname)\r\n else:\r\n     _builtin_types.extend([\r\n         basestring, unicode, long, xrange, type(iter(xrange(10))), file,\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/294", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/294/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/294/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/294/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/294", "id": 354033667, "node_id": "MDU6SXNzdWUzNTQwMzM2Njc=", "number": 294, "title": "rpyc is awesome... and quite chatty.  might be a way to fix that....", "user": {"login": "delandtj", "id": 5995555, "node_id": "MDQ6VXNlcjU5OTU1NTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/5995555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/delandtj", "html_url": "https://github.com/delandtj", "followers_url": "https://api.github.com/users/delandtj/followers", "following_url": "https://api.github.com/users/delandtj/following{/other_user}", "gists_url": "https://api.github.com/users/delandtj/gists{/gist_id}", "starred_url": "https://api.github.com/users/delandtj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/delandtj/subscriptions", "organizations_url": "https://api.github.com/users/delandtj/orgs", "repos_url": "https://api.github.com/users/delandtj/repos", "events_url": "https://api.github.com/users/delandtj/events{/privacy}", "received_events_url": "https://api.github.com/users/delandtj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-25T18:30:14Z", "updated_at": "2020-01-30T18:25:03Z", "closed_at": "2020-01-30T18:25:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nokaaay, so i've just spent about 10 days writing and debugging \r\nsomething absolutely horrendously complex that looks like a\r\n dog threw up on the keyboard, which just so happens to \r\n*massively* reduce the dynamic loading and walking of python \r\nobjects, cacheing properties so that they are only fired off *on demand*.\r\n\r\nit was nothing like as simple as just dropping in a lazy property: \r\njust as in BaseNetref it was necessary to overload __getattribute__ and __dir__.\r\n\r\nhowever, unlike BaseNetref, properties are *not* just dropped \r\ninto place immediately: they're dropped instead into a special\r\n __subgetters__ dictionary (which would need to be put into\r\n the __slots__ of BaseNetref, with a wrapper class instance \r\naround the *actual* object-that-we-WILL-want...\r\n\r\nconsequently ONLY when the attribute is ACTUALLY needed does it get created.\r\n\r\nhere's the really critical bit: there is also an overload of __dir__ \r\nwhich will return the keys of the __subgetters__ dictionary \r\n(the properties that have NOT been instantiated yet) merged with \r\nthe properties that HAVE already been instantiated\r\n(by calling object.__dir__(self)).\r\n\r\nwould anyone be interested to help out debugging / checking if the\r\n same trick can be applied to rpyc, with a view to reducing\r\n the amount of network traffic?\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/293", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/293/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/293/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/293/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/293", "id": 354006925, "node_id": "MDU6SXNzdWUzNTQwMDY5MjU=", "number": 293, "title": "using rpyc.utils.zerodeploy, with IPython, getting a TypeError \"hash of object needs an argument\"", "user": {"login": "delandtj", "id": 5995555, "node_id": "MDQ6VXNlcjU5OTU1NTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/5995555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/delandtj", "html_url": "https://github.com/delandtj", "followers_url": "https://api.github.com/users/delandtj/followers", "following_url": "https://api.github.com/users/delandtj/following{/other_user}", "gists_url": "https://api.github.com/users/delandtj/gists{/gist_id}", "starred_url": "https://api.github.com/users/delandtj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/delandtj/subscriptions", "organizations_url": "https://api.github.com/users/delandtj/orgs", "repos_url": "https://api.github.com/users/delandtj/repos", "events_url": "https://api.github.com/users/delandtj/events{/privacy}", "received_events_url": "https://api.github.com/users/delandtj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-08-25T11:55:17Z", "updated_at": "2018-09-05T16:37:57Z", "closed_at": "2018-09-05T16:37:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "placeholder for now, will fill in later with more information (repro script etc.)\r\n```\r\n/home/lkcl/src/rpyc/rpyc/core/async_.py in value(self)\r\n     95         self.wait()\r\n     96         if self._is_exc:\r\n---> 97             raise self._obj\r\n     98         else:\r\n     99             return self._obj\r\n\r\nTypeError: descriptor '__hash__' of 'object' object needs an argument\r\n\r\n========= Remote Traceback (1) =========\r\nTraceback (most recent call last):\r\n  File \"/root/tmp.dMXeoymwGh/rpyc/core/protocol.py\", line 329, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"/root/tmp.dMXeoymwGh/rpyc/core/protocol.py\", line 603, in _handle_callattr\r\n    return self._handle_call(obj, args, kwargs)\r\n  File \"/root/tmp.dMXeoymwGh/rpyc/core/protocol.py\", line 590, in _handle_call\r\n    return obj(*args, **dict(kwargs))\r\nTypeError: descriptor '__hash__' of 'object' object needs an argument\r\n\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n/home/jan/jumpscale/core9/ptest.py in <module>()\r\n----> 1 j.tools.prefab\r\n\r\n/usr/lib/python3/dist-packages/IPython/core/displayhook.py in __call__(self, result)\r\n    244             self.start_displayhook()\r\n    245             self.write_output_prompt()\r\n--> 246             format_dict, md_dict = self.compute_format_data(result)\r\n    247             self.update_user_ns(result)\r\n    248             self.fill_exec_result(result)\r\n\r\n/usr/lib/python3/dist-packages/IPython/core/displayhook.py in compute_format_data(self, result)\r\n    148 \r\n    149         \"\"\"\r\n--> 150         return self.shell.display_formatter.format(result)\r\n    151 \r\n    152     # This can be set to True by the write_output_prompt method in a subclass\r\n\r\n/usr/lib/python3/dist-packages/IPython/core/formatters.py in format(self, obj, include, exclude)\r\n    150             return {}, {}\r\n    151 \r\n--> 152         format_dict, md_dict = self.mimebundle_formatter(obj, include=include, exclude=exclude)\r\n    153 \r\n    154         if format_dict or md_dict:\r\n\r\nTypeError: 'NoneType' object is not iterable\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/291", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/291/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/291/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/291", "id": 353284443, "node_id": "MDU6SXNzdWUzNTMyODQ0NDM=", "number": 291, "title": "'int' object has no attribute 'getmodule'", "user": {"login": "getixin", "id": 20057322, "node_id": "MDQ6VXNlcjIwMDU3MzIy", "avatar_url": "https://avatars3.githubusercontent.com/u/20057322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/getixin", "html_url": "https://github.com/getixin", "followers_url": "https://api.github.com/users/getixin/followers", "following_url": "https://api.github.com/users/getixin/following{/other_user}", "gists_url": "https://api.github.com/users/getixin/gists{/gist_id}", "starred_url": "https://api.github.com/users/getixin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/getixin/subscriptions", "organizations_url": "https://api.github.com/users/getixin/orgs", "repos_url": "https://api.github.com/users/getixin/repos", "events_url": "https://api.github.com/users/getixin/events{/privacy}", "received_events_url": "https://api.github.com/users/getixin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-23T08:51:14Z", "updated_at": "2018-11-01T02:16:38Z", "closed_at": "2018-11-01T02:16:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Describe the issue briefly here, including:\r\n\r\n- expected result versus actual result\r\n- involved/problematic methods, e.g. `__call__`\r\n- steps to reproduce\r\n- for bugs, please attach a\r\n\r\n```\r\nFile \"/usr/local/lib/python3.6/dist-packages/rpyc/core/protocol.py\", line 329, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"/usr/local/lib/python3.6/dist-packages/rpyc/core/protocol.py\", line 596, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"/usr/local/lib/python3.6/dist-packages/rpyc/core/protocol.py\", line 539, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'int' object has no attribute 'getmodule'\r\n```\r\n\r\n\r\n##### Environment\r\n\r\nServer:\r\n\r\n- rpyc 4.0.2\r\n- python 3.6.5\r\n- operating system Ubuntu 18.04\r\n\r\npython3 rpyc_classic.py\r\n\r\n\r\n##### Minimal example\r\n\r\nClient:\r\n\r\n- rpyc 4.0.2\r\n- python 3.6.5\r\n- operating system win10\r\n\r\n```\r\nimport rpyc\r\nc = rpyc.classic.connect(\"xxx\")\r\n```\r\nFile \"/usr/local/lib/python3.6/dist-packages/rpyc/core/protocol.py\", line 329, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"/usr/local/lib/python3.6/dist-packages/rpyc/core/protocol.py\", line 596, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"/usr/local/lib/python3.6/dist-packages/rpyc/core/protocol.py\", line 539, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'int' object has no attribute 'getmodule'\r\n\r\nwhat's the matter\uff1f", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/289", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/289/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/289/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/289/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/289", "id": 352561637, "node_id": "MDU6SXNzdWUzNTI1NjE2Mzc=", "number": 289, "title": "Missing parameters / typos in documentation", "user": {"login": "cailloumajor", "id": 8583146, "node_id": "MDQ6VXNlcjg1ODMxNDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/8583146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cailloumajor", "html_url": "https://github.com/cailloumajor", "followers_url": "https://api.github.com/users/cailloumajor/followers", "following_url": "https://api.github.com/users/cailloumajor/following{/other_user}", "gists_url": "https://api.github.com/users/cailloumajor/gists{/gist_id}", "starred_url": "https://api.github.com/users/cailloumajor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cailloumajor/subscriptions", "organizations_url": "https://api.github.com/users/cailloumajor/orgs", "repos_url": "https://api.github.com/users/cailloumajor/repos", "events_url": "https://api.github.com/users/cailloumajor/events{/privacy}", "received_events_url": "https://api.github.com/users/cailloumajor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-21T14:18:47Z", "updated_at": "2018-08-21T15:11:36Z", "closed_at": "2018-08-21T15:11:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In `rpyc.utils.factory` module :\r\n* some functions lack documentation for parameters\r\n* other functions' parameters name don't match documentation\r\n\r\nSee attached PR for details.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/287", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/287/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/287/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/287/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/287", "id": 347236921, "node_id": "MDU6SXNzdWUzNDcyMzY5MjE=", "number": 287, "title": "ThreadPoolServer auto close", "user": {"login": "melvinkcx", "id": 16914545, "node_id": "MDQ6VXNlcjE2OTE0NTQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/16914545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/melvinkcx", "html_url": "https://github.com/melvinkcx", "followers_url": "https://api.github.com/users/melvinkcx/followers", "following_url": "https://api.github.com/users/melvinkcx/following{/other_user}", "gists_url": "https://api.github.com/users/melvinkcx/gists{/gist_id}", "starred_url": "https://api.github.com/users/melvinkcx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/melvinkcx/subscriptions", "organizations_url": "https://api.github.com/users/melvinkcx/orgs", "repos_url": "https://api.github.com/users/melvinkcx/repos", "events_url": "https://api.github.com/users/melvinkcx/events{/privacy}", "received_events_url": "https://api.github.com/users/melvinkcx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-03T02:27:35Z", "updated_at": "2018-08-03T14:45:51Z", "closed_at": "2018-08-03T14:45:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "ThreadPoolServer auto close when started. I spawned an instance of ThreadPoolServer, when trying to start(), it immediately closes after started. If I switch it too ThreadedServer, it works properly. \r\n\r\nThis is my code to spawn a ThreadPoolServer:\r\n```\r\n    # Spawn a log server\r\n    log_server = ThreadedServer(\r\n        classpartial(LoggingService, settings),\r\n        port=service_port,\r\n        protocol_config={\r\n            'allow_public_attrs': True,\r\n        },\r\n    )\r\n\r\n    log_server.start()\r\n```\r\nThe log message that I got:\r\n```\r\nINFO:KT_LOGGING_WRITE/10002:server has terminated\r\nINFO:KT_LOGGING_WRITE/10002:listener closed\r\n```\r\n\r\nWhen trying to spawn a ThreadedServer:\r\n```\r\n    # Spawn a log server\r\n    log_server = ThreadedServer(\r\n        classpartial(LoggingService, settings),\r\n        port=service_port,\r\n        protocol_config={\r\n            'allow_public_attrs': True,\r\n        },\r\n    )\r\n\r\n    log_server.start()\r\n```\r\n\r\nIt starts and works properly:\r\n```\r\nINFO:KT_LOGGING_WRITE/10002:server started on [0.0.0.0]:10002\r\n\r\n```\r\n\r\nI am using Python 3.6, RpyC 4.0.1, Manjaro Linux. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/286", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/286/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/286/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/286", "id": 346985289, "node_id": "MDU6SXNzdWUzNDY5ODUyODk=", "number": 286, "title": "rpyc connection drops observed when server and client in NAT based private network and 7%packet losss ", "user": {"login": "madhukeshava", "id": 28648906, "node_id": "MDQ6VXNlcjI4NjQ4OTA2", "avatar_url": "https://avatars3.githubusercontent.com/u/28648906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madhukeshava", "html_url": "https://github.com/madhukeshava", "followers_url": "https://api.github.com/users/madhukeshava/followers", "following_url": "https://api.github.com/users/madhukeshava/following{/other_user}", "gists_url": "https://api.github.com/users/madhukeshava/gists{/gist_id}", "starred_url": "https://api.github.com/users/madhukeshava/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madhukeshava/subscriptions", "organizations_url": "https://api.github.com/users/madhukeshava/orgs", "repos_url": "https://api.github.com/users/madhukeshava/repos", "events_url": "https://api.github.com/users/madhukeshava/events{/privacy}", "received_events_url": "https://api.github.com/users/madhukeshava/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-02T12:14:26Z", "updated_at": "2018-08-04T09:02:11Z", "closed_at": "2018-08-04T09:02:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Describe the issue briefly here, including:\r\nwe are noticing frequent connection drop from client to server when we used private network using NAT based approach.... \r\ncan you please suggest what is best way to handle these kind of connection failures...\r\n try:\r\n\r\n            hadnle =rpyc.classic.connect\r\n            self.p = hadnle .modules.subprocess.Popen(cmdstr,\r\n                        cwd=self.cwd,\r\n                        shell=True,\r\n                        stdout=subprocess.PIPE,\r\n                        stderr=subprocess.STDOUT)   #TODO PIPE?\r\n        except EOFError:\r\n            LOGGER.critical('%s connection failure', self.connection['name'])\r\n            self.p = None\r\n- expected result versus actual result\r\n   \r\n\r\n\r\n- involved/problematic methods, e.g. `__call__`\r\n- steps to reproduce\r\n- for bugs, please attach a\r\n\r\n```\r\nstack trace / error log\r\n```\r\n\r\n\r\n##### Environment\r\n\r\n- rpyc version\r\n- python version\r\n- operating system\r\n\r\n\r\n##### Minimal example\r\n\r\nServer:\r\n\r\n```python\r\nimport rpyc\r\nfrom rpyc.utils.server import OneShotServer\r\nrpyc.lib.setup_logger()\r\n\r\nclass ListService(rpyc.Service):\r\n    def exposed_concat(self, lst):\r\n        return lst + ['world']\r\n\r\nserver = OneShotServer(ListService, port=12345)\r\nserver.start()\r\n```\r\n\r\nClient:\r\n\r\n```python\r\nimport rpyc\r\nc = rpyc.connect(\"localhost\", 12345)\r\nprint(c.root.concat(['hello']))\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/285", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/285/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/285/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/285", "id": 346114701, "node_id": "MDU6SXNzdWUzNDYxMTQ3MDE=", "number": 285, "title": "Run lambda functions on remote machine", "user": {"login": "kfir-drivenets", "id": 21293663, "node_id": "MDQ6VXNlcjIxMjkzNjYz", "avatar_url": "https://avatars1.githubusercontent.com/u/21293663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kfir-drivenets", "html_url": "https://github.com/kfir-drivenets", "followers_url": "https://api.github.com/users/kfir-drivenets/followers", "following_url": "https://api.github.com/users/kfir-drivenets/following{/other_user}", "gists_url": "https://api.github.com/users/kfir-drivenets/gists{/gist_id}", "starred_url": "https://api.github.com/users/kfir-drivenets/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kfir-drivenets/subscriptions", "organizations_url": "https://api.github.com/users/kfir-drivenets/orgs", "repos_url": "https://api.github.com/users/kfir-drivenets/repos", "events_url": "https://api.github.com/users/kfir-drivenets/events{/privacy}", "received_events_url": "https://api.github.com/users/kfir-drivenets/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-31T09:50:54Z", "updated_at": "2018-09-06T15:00:27Z", "closed_at": "2018-09-06T15:00:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently if you pass a callable argument via an RPyC exposed method that callback will invoked on the client side. This is by design and explained in the docs (http://rpyc.readthedocs.io/en/latest/tutorial/tut4.html).\r\nIn some scenarios one might want to run a specific callable on the remote end.\r\nFor example lets assume that I use RPyC service to query a large data structure. One of the parameters that I pass to the exposed method is a lambda function that performs custom filtering on each entry in the data structure. This flow will work a lot faster if the lambda can be executed on the remote machine.\r\n\r\nAs far as I saw in the docs there isn't a way to do this with the current API.\r\n\r\nExample service:\r\n```python\r\nimport typing\r\nimport rpyc\r\n\r\nclass SuperService(rpyc.Service):\r\n    def __init__(self, *args, **kwrags):\r\n        self._my_huge_list = [.....]\r\n\r\n    def exposed_query(self, entry_filter: typing.Callable):\r\n        return [ element for element in filter(entry_filter, self._my_huge_list) ]\r\n```\r\n\r\nExample client:\r\n```python\r\nimport rpyc\r\nclient = rpyc.connect(...)\r\nclient.root.query(lambda x: x > 2)\r\n\r\n````\r\n\r\nThanks in advance,\r\nKfir.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/284", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/284/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/284/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/284", "id": 342715594, "node_id": "MDU6SXNzdWUzNDI3MTU1OTQ=", "number": 284, "title": "rpyc Connection is closed when method is called a second time", "user": {"login": "WaetzoldP", "id": 10012749, "node_id": "MDQ6VXNlcjEwMDEyNzQ5", "avatar_url": "https://avatars0.githubusercontent.com/u/10012749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaetzoldP", "html_url": "https://github.com/WaetzoldP", "followers_url": "https://api.github.com/users/WaetzoldP/followers", "following_url": "https://api.github.com/users/WaetzoldP/following{/other_user}", "gists_url": "https://api.github.com/users/WaetzoldP/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaetzoldP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaetzoldP/subscriptions", "organizations_url": "https://api.github.com/users/WaetzoldP/orgs", "repos_url": "https://api.github.com/users/WaetzoldP/repos", "events_url": "https://api.github.com/users/WaetzoldP/events{/privacy}", "received_events_url": "https://api.github.com/users/WaetzoldP/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-19T12:53:40Z", "updated_at": "2018-07-19T14:28:03Z", "closed_at": "2018-07-19T14:28:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "rpyc-server app has closed connection when a method is called a second time, which is not what I expected.\r\n\r\nI've coded a server and a client script. You can run the server as stand alone scirpt just by commenting line 119 and uncommenting line 120. An empty Qt-Widget pops up. If you close it, a second Qt-Widget pops up. If you close it too you can shut down the server. The two widgets come from the calls in line 49 and 50 of the server. \r\n\r\nIf you start the client, then the client calls the server in a subprocess and connects to the server via rpyc.  in line 79 and 83 the client calls the exposed methods, which should have the same results as in the stand alone version. For the first call everything is fine. But when the client tries to call the method a second time, the connection is closed. \r\n\r\nstack trace\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\ProgramData\\Anaconda3\\envs\\osmnx\\lib\\site-packages\\rpyc\\core\\stream.py\", line 214, in read\r\n    buf = self.sock.recv(min(self.MAX_IO_CHUNK, count))\r\nConnectionResetError: [WinError 10054] Eine vorhandene Verbindung wurde vom Remotehost geschlossen\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"D:/Projekte/PythonKI/pal/PrototypMichael/qt_client.py\", line 81, in <module>\r\n    QT_CLIENT.get_name()\r\n  File \"D:/Projekte/PythonKI/pal/PrototypMichael/qt_client.py\", line 57, in get_name\r\n    print(self.connection.root.get_name())\r\n  File \"C:\\ProgramData\\Anaconda3\\envs\\osmnx\\lib\\site-packages\\rpyc\\core\\netref.py\", line 199, in __call__\r\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\r\n  File \"C:\\ProgramData\\Anaconda3\\envs\\osmnx\\lib\\site-packages\\rpyc\\core\\netref.py\", line 72, in syncreq\r\n    return conn.sync_request(handler, oid, *args)\r\n  File \"C:\\ProgramData\\Anaconda3\\envs\\osmnx\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 519, in sync_request\r\n    self.sync_recv_and_dispatch(timeout, True)\r\n  File \"C:\\ProgramData\\Anaconda3\\envs\\osmnx\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 414, in sync_recv_and_dispatch\r\n    data = self._recv(timeout, wait_for_lock = False)\r\n  File \"C:\\ProgramData\\Anaconda3\\envs\\osmnx\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 388, in _recv\r\n    data = self._channel.recv()\r\n  File \"C:\\ProgramData\\Anaconda3\\envs\\osmnx\\lib\\site-packages\\rpyc\\core\\channel.py\", line 50, in recv\r\n    header = self.stream.read(self.FRAME_HEADER.size)\r\n  File \"C:\\ProgramData\\Anaconda3\\envs\\osmnx\\lib\\site-packages\\rpyc\\core\\stream.py\", line 223, in read\r\n    raise EOFError(ex)\r\nEOFError: [WinError 10054] Eine vorhandene Verbindung wurde vom Remotehost geschlossen\r\n```\r\n\r\n\r\n##### Environment\r\n\r\n- rpyc version 3.4.4\r\n- python 3.7\r\n- Windows 10\r\n\r\n\r\n##### Minimal example\r\n## SERVER:\r\n```\r\nfrom __future__ import print_function\r\nimport sys\r\nfrom PyQt5.QtWidgets import QApplication, QMainWindow, QWidget, QDialog\r\nfrom PyQt5.QtCore import pyqtSignal\r\nimport rpyc\r\nprint(rpyc.__version__)\r\nimport queue\r\nfrom rpyc.utils.server import ThreadedServer\r\nfrom PyQt5 import QtCore\r\n\r\nimport time\r\n\r\n\r\nclass QtServer (object):\r\n    def __init__(self, port = None):\r\n        super(QtServer, self).__init__()\r\n        self.__app = QApplication(sys.argv)\r\n        self.__window =  MainWIndow(port)\r\n        sys.exit(self.__app.exec_())\r\n        print(\"Server beendet...\")\r\n\r\nclass MainWIndow(QMainWindow):\r\n\r\n    trigger_kfedit = pyqtSignal(dict)\r\n\r\n    def __init__(self, port = None):\r\n\r\n        super(MainWIndow, self).__init__()\r\n\r\n        print(\"Starte Server...\")\r\n\r\n        self.__port = port\r\n\r\n        self.__queue = queue.Queue()\r\n        print(\"self.__port\", self.__port)\r\n\r\n        sevice = getService(self)\r\n        if self.__port:\r\n            self.__server = ThreadedServer(sevice, port=self.__port)\r\n            self.__rpycThread = RPycThread(self.__server)\r\n            self.__rpycThread.start()\r\n\r\n        self.__widget = None\r\n\r\n        self.trigger_kfedit[dict].connect(self.kfedit, QtCore.Qt.BlockingQueuedConnection)\r\n\r\n        print(\"gestartet!\")\r\n\r\n        if not port:\r\n            self.kfedit({\"test\": 6})\r\n            self.kfedit({\"test\": 4})\r\n\r\n    @property\r\n    def queue(self):\r\n        return self.__queue\r\n\r\n    @QtCore.pyqtSlot(dict)\r\n    def kfedit(self, dic):\r\n        val = dic[\"test\"]\r\n        print(\"val\", val)\r\n        widget = QDialog()\r\n        print(\"Test\")\r\n        result = widget.exec_()\r\n        print(\"result\", result)\r\n        self.__queue.put(val * val)\r\n        print(\"Fertig!\")\r\n\r\n\r\nclass RPycThread(QtCore.QThread):\r\n\r\n    sig = QtCore.pyqtSignal(object)\r\n\r\n    def __init__(self, server):\r\n        QtCore.QThread.__init__(self)\r\n        self.__server = server\r\n\r\n    def run(self):\r\n        self.__server.start()\r\n\r\n\r\ndef getService(mw):\r\n\r\n    class QtHandlerService(rpyc.Service):\r\n\r\n        def __init__(self, *args, **kwargs):\r\n            super(QtHandlerService, self).__init__(*args, **kwargs)\r\n            self.name = 'noch nichts'\r\n            self.__mainWindow= mw\r\n\r\n        def exposed_get_name(self):\r\n            return(self.name)\r\n\r\n        def exposed_pow(self, val):\r\n            #time.sleep(1.0)\r\n            self.__mainWindow.trigger_kfedit.emit({\"test\": val})\r\n            retVal = None\r\n            if not self.__mainWindow.queue.empty():\r\n                try:\r\n                    print(\"try\")\r\n                    retVal = self.__mainWindow.queue.get()\r\n                except:\r\n                    print(\"except\")\r\n                    retVal = None\r\n            print(\"retVal\", retVal)\r\n            return retVal\r\n\r\n    return QtHandlerService\r\n\r\nif __name__ == '__main__':\r\n\r\n    try:\r\n        port = int(sys.argv[1])\r\n    except:\r\n        port = 18812\r\n\r\n    ####################\r\n    # Here 2 can  select the  \"stand-alone\" version\r\n    # and the client-server-version\r\n    ####################\r\n    handler = QtServer(port)   # client-server\r\n    #handler = QtServer()        # standalone\r\n    print(\"Ende Server-Aufruf!\")\r\n```\r\n\r\n## CLIENT\r\n```\r\nimport rpyc\r\nfrom subprocess import Popen, PIPE\r\nimport time\r\n\r\nimport threading\r\n\r\ndef get_free_port():\r\n    import socket\r\n    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\r\n    s.bind((\"\",0))\r\n    free_port = s.getsockname()[1]\r\n    s.close\r\n    print(\"free_port\", free_port)\r\n    return free_port\r\n\r\n\r\n\r\nclass PopenTrhead(threading.Thread):\r\n    def __init__(self,port):\r\n        super(PopenTrhead, self).__init__()\r\n        self.__port = port\r\n        self.__process = None\r\n\r\n    def run(self):\r\n        self.__process = Popen(['python', '.\\\\qt_server.py', str(self.__port)], stdout=PIPE,\r\n              bufsize=1,\r\n              universal_newlines=True)#9,\r\n        for line in self.__process.stdout:\r\n            print(\"Server> \" + line, end='')\r\n\r\n    def shutdown(self):\r\n        self.__process.kill()\r\n\r\nclass QtHandler:\r\n    def __init__(self, port = None):\r\n        if not port:\r\n            freePort = get_free_port()\r\n            self.__popenThread = PopenTrhead(freePort)\r\n            self.__popenThread.start()\r\n        else:\r\n            freePort = port\r\n\r\n        self.__init__connect(freePort)\r\n\r\n    def __init__connect(self, port):\r\n        while True:\r\n            try:\r\n                self.connection = rpyc.connect(\"localhost\", port)\r\n                return\r\n            except:\r\n                time.sleep(0.05)\r\n\r\n    def pow(self, val):\r\n        print(self.connection.root.pow(val))\r\n\r\n    def get_name(self):\r\n        print(self.connection.root.get_name())\r\n\r\n    def close(self):\r\n        self.__popenThread.shutdown()\r\n\r\n\r\ndef get_qt_client():\r\n    if \"QT_CLIENT\" not in globals():\r\n        global QT_CLIENT\r\n        QT_CLIENT = QtHandler()\r\n    return QT_CLIENT\r\n\r\ndef _pow(val):\r\n    qt = get_qt_client()\r\n    #print(id(qt))\r\n    return qt.pow(val)\r\n\r\nif __name__ == \"__main__\":\r\n    #_pow(3)\r\n    #_pow(5)\r\n    #QT_CLIENT = QtHandler(18812)\r\n    QT_CLIENT = QtHandler()\r\n    QT_CLIENT.pow(3)\r\n    QT_CLIENT.get_name()\r\n    QT_CLIENT.get_name()\r\n    QT_CLIENT.get_name()\r\n    QT_CLIENT.pow(5)\r\n    QT_CLIENT.close()\r\n    print(\"Ende!\")\r\n```\r\n\r\n\r\nis  attached\r\n\r\n[Prototyp.zip](https://github.com/tomerfiliba/rpyc/files/2209936/Prototyp.zip)\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/283", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/283/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/283/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/283/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/283", "id": 342235029, "node_id": "MDU6SXNzdWUzNDIyMzUwMjk=", "number": 283, "title": "ThreadPoolServer not working rpyc 4.0", "user": {"login": "AlinMH", "id": 32613827, "node_id": "MDQ6VXNlcjMyNjEzODI3", "avatar_url": "https://avatars2.githubusercontent.com/u/32613827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlinMH", "html_url": "https://github.com/AlinMH", "followers_url": "https://api.github.com/users/AlinMH/followers", "following_url": "https://api.github.com/users/AlinMH/following{/other_user}", "gists_url": "https://api.github.com/users/AlinMH/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlinMH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlinMH/subscriptions", "organizations_url": "https://api.github.com/users/AlinMH/orgs", "repos_url": "https://api.github.com/users/AlinMH/repos", "events_url": "https://api.github.com/users/AlinMH/events{/privacy}", "received_events_url": "https://api.github.com/users/AlinMH/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-18T08:53:26Z", "updated_at": "2018-08-03T14:57:52Z", "closed_at": "2018-08-03T14:57:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am having some issues on using **ThreadPoolServer**. The client cannot connect to the server, and gives the following error.\r\n\r\nBut it happens to work on **rpyc 3.4.4** really well. And I don't know if I'm using the **ThreadPoolServer** properly, it may be my fault.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:/.../RPyCTest/client_rpyc.py\", line 3, in <module>\r\n    con = rpyc.connect('localhost', 7777)\r\n  File \"C:\\...\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\rpyc\\utils\\factory.py\", line 93, in connect\r\n    s = SocketStream.connect(host, port, ipv6=ipv6, keepalive=keepalive)\r\n  File \"C:\\...\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\rpyc\\core\\stream.py\", line 154, in connect\r\n    return cls(cls._connect(host, port, **kwargs))\r\n  File \"C:\\...\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\rpyc\\core\\stream.py\", line 112, in _connect\r\n    s.connect(sockaddr)\r\nConnectionRefusedError: [WinError 10061] No connection could be made because the target machine actively refused it\r\n```\r\n\r\n\r\n##### Environment\r\n\r\n- rpyc version 4.0\r\n- python version 3.5\r\n- operating system Windows 7\r\n\r\n\r\n##### Minimal example\r\n\r\nServer:\r\n\r\n```python\r\nimport rpyc\r\nimport threading\r\n\r\nclass SomeService(rpyc.Service):\r\n    def on_connect(self, conn):\r\n        print(\"connected with connection %s\" % conn)\r\n\r\n\r\nserver = rpyc.ThreadPoolServer(service=SomeService, port=7777)\r\nt = threading.Thread(target=server.start)\r\nt.start()\r\n\r\n```\r\n\r\nClient:\r\n\r\n```python\r\nimport rpyc\r\n\r\ncon = rpyc.connect('localhost', 7777)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/282", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/282/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/282/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/282/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/282", "id": 340610697, "node_id": "MDU6SXNzdWUzNDA2MTA2OTc=", "number": 282, "title": "__eq__ for netref enum objects doesn't work", "user": {"login": "shalak", "id": 1536554, "node_id": "MDQ6VXNlcjE1MzY1NTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1536554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shalak", "html_url": "https://github.com/shalak", "followers_url": "https://api.github.com/users/shalak/followers", "following_url": "https://api.github.com/users/shalak/following{/other_user}", "gists_url": "https://api.github.com/users/shalak/gists{/gist_id}", "starred_url": "https://api.github.com/users/shalak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shalak/subscriptions", "organizations_url": "https://api.github.com/users/shalak/orgs", "repos_url": "https://api.github.com/users/shalak/repos", "events_url": "https://api.github.com/users/shalak/events{/privacy}", "received_events_url": "https://api.github.com/users/shalak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-12T12:10:04Z", "updated_at": "2018-11-02T11:29:13Z", "closed_at": "2018-08-04T09:17:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Environment:\r\n- rpyc 4.0.1 classic server\r\n- python 3.4\r\n\r\n# Reproduction details\r\nLet's say we have some custom class that implements `__eq__` and has a field that inherits a custom enum class:\r\n\r\n## custom_class.py\r\n```\r\nimport enum\r\n\r\nclass CustomEnum(enum.Enum):\r\n    type1 = 'value1'\r\n    type2 = 'value2'\r\n\r\nclass MyObj:\r\n    def __init__(self, value):\r\n        self.field = value\r\n\r\n    def __eq__(self, other):\r\n        return self.field == other.field\r\n\r\n\r\ndef return_t1():\r\n    return MyObj(CustomEnum.type1)\r\n```\r\n\r\nNow when we compare return values of `return_t1()` from client and server sides it claims to be different.\r\n\r\n## reproduction.py\r\n```\r\nimport rpyc\r\n\r\nimport custom_class\r\n\r\nconn = rpyc.classic.connect('localhost')\r\nconn.modules.sys.path.append(\".\")  # so the RPyC server sees the \"custom_class\" module\r\n\r\n# All of the above should be equal\r\nlocal1_1 = custom_class.return_t1()\r\nlocal1_2 = custom_class.return_t1()\r\n\r\n\r\nremote1_1 = conn.modules.custom_class.return_t1()\r\nremote1_2 = conn.modules.custom_class.return_t1()\r\n\r\n\r\nprint(\"Variables:\")\r\nprint(\"local1_1:\\n\" \\\r\n      \"            id: {}\\n\" \\\r\n      \"          type: {}\\n\" \\\r\n      \"         value: {}\\n\" \\\r\n      \"         field: {}\\n\" \\\r\n      \"    field type: {}\\n\".format(id(local1_1), type(local1_1), local1_1, local1_1.field, type(local1_1.field)))\r\n\r\nprint(\"local1_2:\\n\" \\\r\n      \"            id: {}\\n\" \\\r\n      \"          type: {}\\n\" \\\r\n      \"         value: {}\\n\" \\\r\n      \"         field: {}\\n\" \\\r\n      \"    field type: {}\\n\".format(id(local1_2), type(local1_2), local1_2, local1_2.field, type(local1_2.field)))\r\n\r\nprint(\"remote1_1:\\n\" \\\r\n      \"            id: {}\\n\" \\\r\n      \"          type: {}\\n\" \\\r\n      \"         value: {}\\n\" \\\r\n      \"         field: {}\\n\"\r\n      \"    field type: {}\\n\".format(id(remote1_1), type(remote1_1), remote1_1, remote1_1.field, type(remote1_1.field)))\r\n\r\nprint(\"remote1_2:\\n\" \\\r\n      \"            id: {}\\n\" \\\r\n      \"          type: {}\\n\" \\\r\n      \"         value: {}\\n\" \\\r\n      \"         field: {}\\n\" \\\r\n      \"    field type: {}\\n\".format(id(remote1_2), type(remote1_2), remote1_2, remote1_2.field, type(remote1_2.field)))\r\n\r\nprint(\"All those should be equal:\")\r\nprint(\"              local1_1 == local1_2 ? {}\".format(local1_1 == local1_2))\r\nprint(\"  local1_1.field == local1_2.field ? {}\".format(local1_1.field == local1_2.field))\r\nprint(\"            remote1_1 == remote1_2 ? {}\".format(remote1_1 == remote1_2))\r\nprint(\"remote1_1.field == remote1_2.field ? {}\".format(remote1_1.field == remote1_2.field))\r\nprint(\"             local1_1 == remote1_1 ? {}\".format(local1_1 == remote1_1))\r\nprint(\" local1_1.field == remote1_1.field ? {}\".format(local1_1.field == remote1_1.field))\r\n```\r\n\r\nThe result from above:\r\n\r\n```\r\nVariables:\r\nlocal1_1:\r\n            id: 139789842240176\r\n          type: <class 'custom_class.MyObj'>\r\n         value: <custom_class.MyObj object at 0x7f235be3d2b0>\r\n         field: CustomEnum.type1\r\n    field type: <enum 'CustomEnum'>\r\n\r\nlocal1_2:\r\n            id: 139789842239784\r\n          type: <class 'custom_class.MyObj'>\r\n         value: <custom_class.MyObj object at 0x7f235be3d128>\r\n         field: CustomEnum.type1\r\n    field type: <enum 'CustomEnum'>\r\n\r\nremote1_1:\r\n            id: 139789842220664\r\n          type: <netref class 'custom_class.MyObj'>\r\n         value: <custom_class.MyObj object at 0x7f46d9a03f98>\r\n         field: CustomEnum.type1\r\n    field type: <netref class 'custom_class.CustomEnum'>\r\n\r\nremote1_2:\r\n            id: 139789842221312\r\n          type: <netref class 'custom_class.MyObj'>\r\n         value: <custom_class.MyObj object at 0x7f46d9a03208>\r\n         field: CustomEnum.type1\r\n    field type: <netref class 'custom_class.CustomEnum'>\r\n\r\nAll those should be equal:\r\n              local1_1 == local1_2 ? True\r\n  local1_1.field == local1_2.field ? True\r\n            remote1_1 == remote1_2 ? True\r\nremote1_1.field == remote1_2.field ? True\r\n             local1_1 == remote1_1 ? False\r\n local1_1.field == remote1_1.field ? False\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/279", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/279/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/279/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/279/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/279", "id": 335161531, "node_id": "MDU6SXNzdWUzMzUxNjE1MzE=", "number": 279, "title": "Large data structures transmit inefficiently as netref", "user": {"login": "dirkroorda", "id": 1374704, "node_id": "MDQ6VXNlcjEzNzQ3MDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1374704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dirkroorda", "html_url": "https://github.com/dirkroorda", "followers_url": "https://api.github.com/users/dirkroorda/followers", "following_url": "https://api.github.com/users/dirkroorda/following{/other_user}", "gists_url": "https://api.github.com/users/dirkroorda/gists{/gist_id}", "starred_url": "https://api.github.com/users/dirkroorda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dirkroorda/subscriptions", "organizations_url": "https://api.github.com/users/dirkroorda/orgs", "repos_url": "https://api.github.com/users/dirkroorda/repos", "events_url": "https://api.github.com/users/dirkroorda/events{/privacy}", "received_events_url": "https://api.github.com/users/dirkroorda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-06-24T08:25:27Z", "updated_at": "2018-07-12T20:49:16Z", "closed_at": "2018-07-11T17:10:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "When a client asks a large dictionary or list from the server, it gets a netref shadow object back.\r\nOnly when it accesses an item in the dict or list, the data of that item will be sent over the line.\r\nThis causes a hefty performance penalty.\r\n\r\nIn my case, the innocent loop:\r\n\r\n```\r\nfor element in data:\r\n   do something with element\r\n```\r\n\r\ntook a long time if `data` is a list or dictionary with say a million items.\r\nEven when the client and the server are on the same machine.\r\n\r\nIt goes much better when the server pickles the dict or list, or converts it to a tuple of items first.\r\n\r\nIt would be nice if one could somehow instruct the client/server to transmit the real object, not a shadowed netref object.\r\n\r\nAnyway, it took me quite some time to bump into this fact, and I think it is helpful to point out this performance penalty in the docs, including the work-around.\r\n\r\nOtherwise I'm enjoying the rpyc package greatly, and it really helped me to get up and running with this kind of processing really quickly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/278", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/278/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/278/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/278", "id": 334451263, "node_id": "MDU6SXNzdWUzMzQ0NTEyNjM=", "number": 278, "title": "Cannot load dumped exception with @property and no setter", "user": {"login": "shalak", "id": 1536554, "node_id": "MDQ6VXNlcjE1MzY1NTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1536554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shalak", "html_url": "https://github.com/shalak", "followers_url": "https://api.github.com/users/shalak/followers", "following_url": "https://api.github.com/users/shalak/following{/other_user}", "gists_url": "https://api.github.com/users/shalak/gists{/gist_id}", "starred_url": "https://api.github.com/users/shalak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shalak/subscriptions", "organizations_url": "https://api.github.com/users/shalak/orgs", "repos_url": "https://api.github.com/users/shalak/repos", "events_url": "https://api.github.com/users/shalak/events{/privacy}", "received_events_url": "https://api.github.com/users/shalak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-21T11:26:05Z", "updated_at": "2018-08-04T09:21:27Z", "closed_at": "2018-08-04T09:21:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using python 3.6.5 (3.4.8 as well) and rpyc 4.0.1\r\n\r\nOn the classic server side, when we're throwing an exception that has some `@property`, but no setter for it, it cannot be properly loaded on client side, because `vinegar.py:load` tries to assign dumped property value into the property, thus raising `AttributeError` because of missing setter. \r\n\r\nThe issue inflicts only exceptions that are defined in `site-packages` (the original exception is mapped to client's version of it).\r\n\r\nAttached you'll find reproduction files:\r\n\r\nThe `custom_class.py` file:\r\n```\r\nfrom custom_method import worker\r\nclass MyObj:\r\n    def start(self):\r\n        worker()\r\n```\r\n\r\nThe `custom_method.py` file:\r\n```\r\nfrom custom_module.custom_exception import ExceptionWithProperty\r\n\r\ndef worker():\r\n    print(\"Worker called\")\r\n    exc = ExceptionWithProperty()\r\n    raise exc\r\n```\r\n\r\nThe `reproduction.py` file:\r\n```\r\nimport rpyc\r\nconn = rpyc.classic.connect('localhost')\r\nconn.modules.sys.path.append(\".\")  # so the RPyC server sees the \"custom_class\" module\r\nobj = conn.modules.custom_class.MyObj()\r\nobj.start()\r\n```\r\nAnd the `custom_module-0.1-py3-none-any.whl` package file, which contains only `custom_exception.py` file:\r\n```\r\nclass ExceptionWithProperty(Exception):\r\n\r\n    def __init__(self, msg=\"default msg\"):\r\n        print(\"Creating ExceptionWithProperty: {}\".format(msg))\r\n        self.msg = msg\r\n        self._custom_msg = \"Yep, this is custom message\"\r\n\r\n    # No setter!\r\n    @property\r\n    def custom_msg(self):\r\n        return self._custom_msg\r\n```\r\n\r\nThe most important thing is that the `ExceptionWithProperty` has to be installed in python's site-packages (when the `custom_exception.py` file is simply in the current directory instead of being installed as a package, everything works fine)\r\n\r\nTo reproduce, please download [rpyc_reproduction.zip](https://github.com/tomerfiliba/rpyc/files/2123377/rpyc_reproduction.zip), extract it to `/tmp/rpyc_repro` and:\r\n```\r\ncd /tmp/rpyc_repro\r\npython3 -m virtualenv venv\r\nsource venv/bin/activate\r\npip install rpyc custom_module-0.1-py3-none-any.whl\r\n./venv/bin/rpyc_classic.py &\r\npython reproduction.py\r\n```\r\n\r\nThe result is as follows:\r\n```\r\n(venv) shalak@home:/tmp/rpyc_repro$ python reproduction.py \r\nINFO:SLAVE/18812:accepted ('127.0.0.1', 55520) with fd 4\r\nINFO:SLAVE/18812:welcome ('127.0.0.1', 55520)\r\nWorker called\r\nCreating ExceptionWithProperty: default msg\r\nDEBUG:SLAVE/18812:Exception caught\r\nTraceback (most recent call last):\r\n  File \"/tmp/rpyc_repro/venv/lib/python3.6/site-packages/rpyc/core/protocol.py\", line 329, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"/tmp/rpyc_repro/venv/lib/python3.6/site-packages/rpyc/core/protocol.py\", line 590, in _handle_call\r\n    return obj(*args, **dict(kwargs))\r\n  File \"./custom_class.py\", line 7, in start\r\n    worker()\r\n  File \"./custom_method.py\", line 6, in worker\r\n    raise exc\r\ncustom_module.custom_exception.ExceptionWithProperty\r\nTraceback (most recent call last):\r\n  File \"reproduction.py\", line 5, in <module>\r\n    obj.start()\r\n  File \"/tmp/rpyc_repro/venv/lib/python3.6/site-packages/rpyc/core/netref.py\", line 199, in __call__\r\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\r\n  File \"/tmp/rpyc_repro/venv/lib/python3.6/site-packages/rpyc/core/netref.py\", line 75, in syncreq\r\n    return conn.sync_request(handler, proxy, *args)\r\n  File \"/tmp/rpyc_repro/venv/lib/python3.6/site-packages/rpyc/core/protocol.py\", line 471, in sync_request\r\n    return self.async_request(handler, *args, timeout=timeout).value\r\n  File \"/tmp/rpyc_repro/venv/lib/python3.6/site-packages/rpyc/core/async_.py\", line 95, in value\r\n    self.wait()\r\n  File \"/tmp/rpyc_repro/venv/lib/python3.6/site-packages/rpyc/core/async_.py\", line 45, in wait\r\n    self._conn.serve(self._ttl)\r\n  File \"/tmp/rpyc_repro/venv/lib/python3.6/site-packages/rpyc/core/protocol.py\", line 397, in serve\r\n    self._dispatch(data)\r\n  File \"/tmp/rpyc_repro/venv/lib/python3.6/site-packages/rpyc/core/protocol.py\", line 367, in _dispatch\r\n    obj = self._unbox_exc(args)\r\n  File \"/tmp/rpyc_repro/venv/lib/python3.6/site-packages/rpyc/core/protocol.py\", line 353, in _unbox_exc\r\n    instantiate_oldstyle_exceptions = self._config[\"instantiate_oldstyle_exceptions\"])\r\n  File \"/tmp/rpyc_repro/venv/lib/python3.6/site-packages/rpyc/core/vinegar.py\", line 158, in load\r\n    setattr(exc, name, attrval)\r\nAttributeError: can't set attribute\r\nINFO:SLAVE/18812:goodbye ('127.0.0.1', 55520)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/277", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/277/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/277/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/277/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/277", "id": 331620970, "node_id": "MDU6SXNzdWUzMzE2MjA5NzA=", "number": 277, "title": "IPv6", "user": {"login": "bor8", "id": 5301068, "node_id": "MDQ6VXNlcjUzMDEwNjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/5301068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bor8", "html_url": "https://github.com/bor8", "followers_url": "https://api.github.com/users/bor8/followers", "following_url": "https://api.github.com/users/bor8/following{/other_user}", "gists_url": "https://api.github.com/users/bor8/gists{/gist_id}", "starred_url": "https://api.github.com/users/bor8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bor8/subscriptions", "organizations_url": "https://api.github.com/users/bor8/orgs", "repos_url": "https://api.github.com/users/bor8/repos", "events_url": "https://api.github.com/users/bor8/events{/privacy}", "received_events_url": "https://api.github.com/users/bor8/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-12T14:46:31Z", "updated_at": "2018-06-12T16:49:59Z", "closed_at": "2018-06-12T14:55:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n# 3.4.4\r\n\r\npython3 /usr/local/bin/rpyc_classic.py --ipv6\r\n\r\nINFO:SLAVE/18812:server started on [::]:18812\r\n```\r\n\r\nversus\r\n\r\n```\r\n# 4.0.0\r\n\r\npython3 /usr/local/bin/rpyc_classic.py --ipv6\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/rpyc_classic.py\", line 125, in <module>\r\n    ClassicServer.run()\r\n  File \"/usr/local/lib/python3.5/dist-packages/plumbum/cli/application.py\", line 500, in run\r\n    retcode = inst.main(*tailargs)\r\n  File \"/usr/local/bin/rpyc_classic.py\", line 85, in main\r\n    self._serve_mode(ThreadedServer)\r\n  File \"/usr/local/bin/rpyc_classic.py\", line 96, in _serve_mode\r\n    registrar = self.registrar, auto_register = self.auto_register)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc/utils/server.py\", line 89, in __init__\r\n    self.listener.bind((hostname, port))\r\nsocket.gaierror: [Errno -9] Address family for hostname not supported\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/276", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/276/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/276/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/276", "id": 331384648, "node_id": "MDU6SXNzdWUzMzEzODQ2NDg=", "number": 276, "title": "pip install rpyc == 4.0.0 fails when building wheel on windows 7 python 2.7", "user": {"login": "klimburg", "id": 6772276, "node_id": "MDQ6VXNlcjY3NzIyNzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6772276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klimburg", "html_url": "https://github.com/klimburg", "followers_url": "https://api.github.com/users/klimburg/followers", "following_url": "https://api.github.com/users/klimburg/following{/other_user}", "gists_url": "https://api.github.com/users/klimburg/gists{/gist_id}", "starred_url": "https://api.github.com/users/klimburg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klimburg/subscriptions", "organizations_url": "https://api.github.com/users/klimburg/orgs", "repos_url": "https://api.github.com/users/klimburg/repos", "events_url": "https://api.github.com/users/klimburg/events{/privacy}", "received_events_url": "https://api.github.com/users/klimburg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-11T23:25:54Z", "updated_at": "2018-06-12T01:12:08Z", "closed_at": "2018-06-12T00:52:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Describe the issue briefly here, including:\r\n\r\npip install rpyc == 4.0.0 fails when building wheel on windows 7 python 2.7\r\n\r\nI setup a fresh virtualenv to reproduce the problem\r\n\r\n```\r\nMINGW64 /c\r\n$ virtualenv test_rpyc\r\nNew python executable in C:\\test_rpyc\\Scripts\\python.exe\r\nInstalling setuptools, pip, wheel...done.\r\n\r\nMINGW64 /c\r\n$ source ./test_rpyc/Scripts/activate\r\n(test_rpyc)\r\nMINGW64 /c\r\n$ pip install rpyc==4.0.0\r\nBuilding wheels for collected packages: rpyc\r\n  Running setup.py bdist_wheel for rpyc: started\r\n  Running setup.py bdist_wheel for rpyc: finished with status 'error'\r\n  Complete output from command c:\\test_rpyc\\scripts\\python.exe -u -c \"import setuptools, tokenize;__file__='c:\\\\appdata\\\\local\\\\temp\\\\pip-install-uzupvq\\\\rpyc\\\\setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" bdist_wheel -d c:\\appdata\\local\\temp\\pip-wheel-pwbcuf --python-tag cp27:\r\n  running bdist_wheel\r\n  running build\r\n  running build_py\r\n  creating build\r\n  creating build\\lib\r\n  creating build\\lib\\rpyc\r\n  copying rpyc\\version.py -> build\\lib\\rpyc\r\n  copying rpyc\\__init__.py -> build\\lib\\rpyc\r\n  creating build\\lib\\rpyc\\core\r\n  copying rpyc\\core\\async.py -> build\\lib\\rpyc\\core\r\n  copying rpyc\\core\\async_.py -> build\\lib\\rpyc\\core\r\n  copying rpyc\\core\\brine.py -> build\\lib\\rpyc\\core\r\n  copying rpyc\\core\\channel.py -> build\\lib\\rpyc\\core\r\n  copying rpyc\\core\\consts.py -> build\\lib\\rpyc\\core\r\n  copying rpyc\\core\\netref.py -> build\\lib\\rpyc\\core\r\n  copying rpyc\\core\\protocol.py -> build\\lib\\rpyc\\core\r\n  copying rpyc\\core\\reactor.py -> build\\lib\\rpyc\\core\r\n  copying rpyc\\core\\service.py -> build\\lib\\rpyc\\core\r\n  copying rpyc\\core\\stream.py -> build\\lib\\rpyc\\core\r\n  copying rpyc\\core\\vinegar.py -> build\\lib\\rpyc\\core\r\n  copying rpyc\\core\\__init__.py -> build\\lib\\rpyc\\core\r\n  creating build\\lib\\rpyc\\lib\r\n  copying rpyc\\lib\\colls.py -> build\\lib\\rpyc\\lib\r\n  copying rpyc\\lib\\compat.py -> build\\lib\\rpyc\\lib\r\n  copying rpyc\\lib\\__init__.py -> build\\lib\\rpyc\\lib\r\n  creating build\\lib\\rpyc\\utils\r\n  copying rpyc\\utils\\authenticators.py -> build\\lib\\rpyc\\utils\r\n  copying rpyc\\utils\\classic.py -> build\\lib\\rpyc\\utils\r\n  copying rpyc\\utils\\factory.py -> build\\lib\\rpyc\\utils\r\n  copying rpyc\\utils\\helpers.py -> build\\lib\\rpyc\\utils\r\n  copying rpyc\\utils\\registry.py -> build\\lib\\rpyc\\utils\r\n  copying rpyc\\utils\\server.py -> build\\lib\\rpyc\\utils\r\n  copying rpyc\\utils\\teleportation.py -> build\\lib\\rpyc\\utils\r\n  copying rpyc\\utils\\zerodeploy.py -> build\\lib\\rpyc\\utils\r\n  copying rpyc\\utils\\__init__.py -> build\\lib\\rpyc\\utils\r\n  running build_scripts\r\n  creating build\\scripts-2.7\r\n  copying and adjusting c:\\appdata\\local\\temp\\pip-install-uzupvq\\rpyc\\bin\\rpyc_classic.py -> build\\scripts-2.7\r\n  copying and adjusting c:\\appdata\\local\\temp\\pip-install-uzupvq\\rpyc\\bin\\rpyc_registry.py -> build\\scripts-2.7\r\n  installing to build\\bdist.win-amd64\\wheel\r\n  running install\r\n  running install_lib\r\n  creating build\\bdist.win-amd64\r\n  creating build\\bdist.win-amd64\\wheel\r\n  creating build\\bdist.win-amd64\\wheel\\rpyc\r\n  creating build\\bdist.win-amd64\\wheel\\rpyc\\core\r\n  copying build\\lib\\rpyc\\core\\async.py -> build\\bdist.win-amd64\\wheel\\.\\rpyc\\core\r\n  copying build\\lib\\rpyc\\core\\async_.py -> build\\bdist.win-amd64\\wheel\\.\\rpyc\\core\r\n  copying build\\lib\\rpyc\\core\\brine.py -> build\\bdist.win-amd64\\wheel\\.\\rpyc\\core\r\n  copying build\\lib\\rpyc\\core\\channel.py -> build\\bdist.win-amd64\\wheel\\.\\rpyc\\core\r\n  copying build\\lib\\rpyc\\core\\consts.py -> build\\bdist.win-amd64\\wheel\\.\\rpyc\\core\r\n  copying build\\lib\\rpyc\\core\\netref.py -> build\\bdist.win-amd64\\wheel\\.\\rpyc\\core\r\n  copying build\\lib\\rpyc\\core\\protocol.py -> build\\bdist.win-amd64\\wheel\\.\\rpyc\\core\r\n  copying build\\lib\\rpyc\\core\\reactor.py -> build\\bdist.win-amd64\\wheel\\.\\rpyc\\core\r\n  copying build\\lib\\rpyc\\core\\service.py -> build\\bdist.win-amd64\\wheel\\.\\rpyc\\core\r\n  copying build\\lib\\rpyc\\core\\stream.py -> build\\bdist.win-amd64\\wheel\\.\\rpyc\\core\r\n  copying build\\lib\\rpyc\\core\\vinegar.py -> build\\bdist.win-amd64\\wheel\\.\\rpyc\\core\r\n  copying build\\lib\\rpyc\\core\\__init__.py -> build\\bdist.win-amd64\\wheel\\.\\rpyc\\core\r\n  creating build\\bdist.win-amd64\\wheel\\rpyc\\lib\r\n  copying build\\lib\\rpyc\\lib\\colls.py -> build\\bdist.win-amd64\\wheel\\.\\rpyc\\lib\r\n  copying build\\lib\\rpyc\\lib\\compat.py -> build\\bdist.win-amd64\\wheel\\.\\rpyc\\lib\r\n  copying build\\lib\\rpyc\\lib\\__init__.py -> build\\bdist.win-amd64\\wheel\\.\\rpyc\\lib\r\n  creating build\\bdist.win-amd64\\wheel\\rpyc\\utils\r\n  copying build\\lib\\rpyc\\utils\\authenticators.py -> build\\bdist.win-amd64\\wheel\\.\\rpyc\\utils\r\n  copying build\\lib\\rpyc\\utils\\classic.py -> build\\bdist.win-amd64\\wheel\\.\\rpyc\\utils\r\n  copying build\\lib\\rpyc\\utils\\factory.py -> build\\bdist.win-amd64\\wheel\\.\\rpyc\\utils\r\n  copying build\\lib\\rpyc\\utils\\helpers.py -> build\\bdist.win-amd64\\wheel\\.\\rpyc\\utils\r\n  copying build\\lib\\rpyc\\utils\\registry.py -> build\\bdist.win-amd64\\wheel\\.\\rpyc\\utils\r\n  copying build\\lib\\rpyc\\utils\\server.py -> build\\bdist.win-amd64\\wheel\\.\\rpyc\\utils\r\n  copying build\\lib\\rpyc\\utils\\teleportation.py -> build\\bdist.win-amd64\\wheel\\.\\rpyc\\utils\r\n  copying build\\lib\\rpyc\\utils\\zerodeploy.py -> build\\bdist.win-amd64\\wheel\\.\\rpyc\\utils\r\n  copying build\\lib\\rpyc\\utils\\__init__.py -> build\\bdist.win-amd64\\wheel\\.\\rpyc\\utils\r\n  copying build\\lib\\rpyc\\version.py -> build\\bdist.win-amd64\\wheel\\.\\rpyc\r\n  copying build\\lib\\rpyc\\__init__.py -> build\\bdist.win-amd64\\wheel\\.\\rpyc\r\n  running install_egg_info\r\n  running egg_info\r\n  writing requirements to rpyc.egg-info\\requires.txt\r\n  writing rpyc.egg-info\\PKG-INFO\r\n  writing top-level names to rpyc.egg-info\\top_level.txt\r\n  writing dependency_links to rpyc.egg-info\\dependency_links.txt\r\n  reading manifest file 'rpyc.egg-info\\SOURCES.txt'\r\n  Traceback (most recent call last):\r\n    File \"<string>\", line 1, in <module>\r\n    File \"c:\\appdata\\local\\temp\\pip-install-uzupvq\\rpyc\\setup.py\", line 70, in <module>\r\n      \"Topic :: System :: Systems Administration\",\r\n    File \"c:\\test_rpyc\\lib\\site-packages\\setuptools\\__init__.py\", line 129, in setup\r\n      return distutils.core.setup(**attrs)\r\n    File \"c:\\python27\\Lib\\distutils\\core.py\", line 151, in setup\r\n      dist.run_commands()\r\n    File \"c:\\python27\\Lib\\distutils\\dist.py\", line 953, in run_commands\r\n      self.run_command(cmd)\r\n    File \"c:\\python27\\Lib\\distutils\\dist.py\", line 972, in run_command\r\n      cmd_obj.run()\r\n    File \"c:\\test_rpyc\\lib\\site-packages\\wheel\\bdist_wheel.py\", line 238, in run\r\n      self.run_command('install')\r\n    File \"c:\\python27\\Lib\\distutils\\cmd.py\", line 326, in run_command\r\n      self.distribution.run_command(command)\r\n    File \"c:\\python27\\Lib\\distutils\\dist.py\", line 972, in run_command\r\n      cmd_obj.run()\r\n    File \"c:\\test_rpyc\\lib\\site-packages\\setuptools\\command\\install.py\", line 61, in run\r\n      return orig.install.run(self)\r\n    File \"c:\\python27\\Lib\\distutils\\command\\install.py\", line 575, in run\r\n      self.run_command(cmd_name)\r\n    File \"c:\\python27\\Lib\\distutils\\cmd.py\", line 326, in run_command\r\n      self.distribution.run_command(command)\r\n    File \"c:\\python27\\Lib\\distutils\\dist.py\", line 972, in run_command\r\n      cmd_obj.run()\r\n    File \"c:\\test_rpyc\\lib\\site-packages\\setuptools\\command\\install_egg_info.py\", line 34, in run\r\n      self.run_command('egg_info')\r\n    File \"c:\\python27\\Lib\\distutils\\cmd.py\", line 326, in run_command\r\n      self.distribution.run_command(command)\r\n    File \"c:\\python27\\Lib\\distutils\\dist.py\", line 972, in run_command\r\n      cmd_obj.run()\r\n    File \"c:\\test_rpyc\\lib\\site-packages\\setuptools\\command\\egg_info.py\", line 278, in run\r\n      self.find_sources()\r\n    File \"c:\\test_rpyc\\lib\\site-packages\\setuptools\\command\\egg_info.py\", line 293, in find_sources\r\n      mm.run()\r\n    File \"c:\\test_rpyc\\lib\\site-packages\\setuptools\\command\\egg_info.py\", line 524, in run\r\n      self.add_defaults()\r\n    File \"c:\\test_rpyc\\lib\\site-packages\\setuptools\\command\\egg_info.py\", line 567, in add_defaults\r\n      self.read_manifest()\r\n    File \"c:\\test_rpyc\\lib\\site-packages\\setuptools\\command\\sdist.py\", line 199, in read_manifest\r\n      self.filelist.append(line)\r\n    File \"c:\\test_rpyc\\lib\\site-packages\\setuptools\\command\\egg_info.py\", line 466, in append\r\n      path = convert_path(item)\r\n    File \"c:\\python27\\Lib\\distutils\\util.py\", line 124, in convert_path\r\n      raise ValueError, \"path '%s' cannot be absolute\" % pathname\r\n  ValueError: path '/home/thomas/dev/project/rpyc/bin/rpyc_classic.py' cannot be absolute\r\n\r\n ```\r\n\r\n\r\n##### Environment\r\n\r\n- rpyc version 4.0.0\r\n- python version 2.7.13\r\n- operating system Windows 7\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/274", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/274/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/274/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/274", "id": 331320567, "node_id": "MDU6SXNzdWUzMzEzMjA1Njc=", "number": 274, "title": "Update SSH Documentation", "user": {"login": "Denton-L", "id": 9620836, "node_id": "MDQ6VXNlcjk2MjA4MzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/9620836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Denton-L", "html_url": "https://github.com/Denton-L", "followers_url": "https://api.github.com/users/Denton-L/followers", "following_url": "https://api.github.com/users/Denton-L/following{/other_user}", "gists_url": "https://api.github.com/users/Denton-L/gists{/gist_id}", "starred_url": "https://api.github.com/users/Denton-L/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Denton-L/subscriptions", "organizations_url": "https://api.github.com/users/Denton-L/orgs", "repos_url": "https://api.github.com/users/Denton-L/repos", "events_url": "https://api.github.com/users/Denton-L/events{/privacy}", "received_events_url": "https://api.github.com/users/Denton-L/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-11T19:33:43Z", "updated_at": "2018-06-11T20:36:13Z", "closed_at": "2018-06-11T20:30:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "In [this documentation](https://github.com/tomerfiliba/rpyc/blob/master/docs/docs/secure-connection.rst#ssh-tunneling), SSH is discussed. However, this is outdated information since `rypc.utils.ssh` was removed a long time ago.\r\n\r\nThe documentation should be updated to reflect the new changes.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/273", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/273/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/273/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/273/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/273", "id": 331116925, "node_id": "MDU6SXNzdWUzMzExMTY5MjU=", "number": 273, "title": "Creating a Self killing rpyc service", "user": {"login": "tarun2107", "id": 9085490, "node_id": "MDQ6VXNlcjkwODU0OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/9085490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tarun2107", "html_url": "https://github.com/tarun2107", "followers_url": "https://api.github.com/users/tarun2107/followers", "following_url": "https://api.github.com/users/tarun2107/following{/other_user}", "gists_url": "https://api.github.com/users/tarun2107/gists{/gist_id}", "starred_url": "https://api.github.com/users/tarun2107/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tarun2107/subscriptions", "organizations_url": "https://api.github.com/users/tarun2107/orgs", "repos_url": "https://api.github.com/users/tarun2107/repos", "events_url": "https://api.github.com/users/tarun2107/events{/privacy}", "received_events_url": "https://api.github.com/users/tarun2107/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-11T09:45:04Z", "updated_at": "2019-08-02T02:05:31Z", "closed_at": "2018-06-18T11:54:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am running rpyc classic server (forking mode) , with many clients connecting to same.\r\nWanted to know if it's possible for the server to terminate itself if no client has sent any request over a specified period of time?\r\n\r\n##### Environment\r\n- rpyc version : 3.4\r\n- python version : 2.7\r\n- operating system : MAC_OS\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/272", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/272/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/272/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/272", "id": 330586916, "node_id": "MDU6SXNzdWUzMzA1ODY5MTY=", "number": 272, "title": "netref dict does not expose .items() .keys() etc.", "user": {"login": "dirkroorda", "id": 1374704, "node_id": "MDQ6VXNlcjEzNzQ3MDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1374704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dirkroorda", "html_url": "https://github.com/dirkroorda", "followers_url": "https://api.github.com/users/dirkroorda/followers", "following_url": "https://api.github.com/users/dirkroorda/following{/other_user}", "gists_url": "https://api.github.com/users/dirkroorda/gists{/gist_id}", "starred_url": "https://api.github.com/users/dirkroorda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dirkroorda/subscriptions", "organizations_url": "https://api.github.com/users/dirkroorda/orgs", "repos_url": "https://api.github.com/users/dirkroorda/repos", "events_url": "https://api.github.com/users/dirkroorda/events{/privacy}", "received_events_url": "https://api.github.com/users/dirkroorda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-08T09:32:34Z", "updated_at": "2018-06-11T18:06:38Z", "closed_at": "2018-06-11T18:06:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for this nice library.\r\n\r\nThe documentation on readthedocs documents 3.5, but the latest available release is 3.4.4.\r\nThat causes some avoidable friction in my head as a newcomer!\r\n\r\nI got everything working, finally, but I stumbled on this: when my client gets a dict back from the server, as a netref, I can use the usual dict operations: `data[key]`, `for key in data:`, `data.__dict__`\r\nBut the methods with plain names do **not** work: `data.items()`. These attributes are not accessible.\r\n\r\nI think it has to do with the access policy of attributes, but it is unclear from the docs how to configure the client (or the server? or the connection?) to let those attributes pass.\r\n\r\nAs a work-around I actually fetch such dictionaries to the client, by saying\r\n\r\n`data = {key: data[key] for key in data}`\r\n\r\nBy the way, the dict in question is not an attribute of the .root object wrapped by the rpyc connection, but it is the result of a method that executes on the server.\r\n\r\nApart from this, everything works smoothly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/271", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/271/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/271/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/271/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/271", "id": 329005302, "node_id": "MDU6SXNzdWUzMjkwMDUzMDI=", "number": 271, "title": "How to send functions?", "user": {"login": "andreafioraldi", "id": 16168186, "node_id": "MDQ6VXNlcjE2MTY4MTg2", "avatar_url": "https://avatars0.githubusercontent.com/u/16168186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreafioraldi", "html_url": "https://github.com/andreafioraldi", "followers_url": "https://api.github.com/users/andreafioraldi/followers", "following_url": "https://api.github.com/users/andreafioraldi/following{/other_user}", "gists_url": "https://api.github.com/users/andreafioraldi/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreafioraldi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreafioraldi/subscriptions", "organizations_url": "https://api.github.com/users/andreafioraldi/orgs", "repos_url": "https://api.github.com/users/andreafioraldi/repos", "events_url": "https://api.github.com/users/andreafioraldi/events{/privacy}", "received_events_url": "https://api.github.com/users/andreafioraldi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-04T10:53:00Z", "updated_at": "2018-06-11T17:05:33Z", "closed_at": "2018-06-11T17:05:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys,\r\nI want to pass a callback function to a remote function and execute the sended function in the remote machine and not locally.\r\n\r\nfor example:\r\n```python\r\n>> def callback(a,b):\r\n    print a,b\r\n    return a+b\r\n>> #type(remote_caller) is netref\r\n>> remote_caller(callback, 4, 5)\r\n>> #4 5 is not printed here but in the remote machine\r\n```\r\nThanks :)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/270", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/270/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/270/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/270/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/270", "id": 323994924, "node_id": "MDU6SXNzdWUzMjM5OTQ5MjQ=", "number": 270, "title": "Deadlock when accessing attribute from one netref in another.", "user": {"login": "SergeyYanos", "id": 12593794, "node_id": "MDQ6VXNlcjEyNTkzNzk0", "avatar_url": "https://avatars0.githubusercontent.com/u/12593794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SergeyYanos", "html_url": "https://github.com/SergeyYanos", "followers_url": "https://api.github.com/users/SergeyYanos/followers", "following_url": "https://api.github.com/users/SergeyYanos/following{/other_user}", "gists_url": "https://api.github.com/users/SergeyYanos/gists{/gist_id}", "starred_url": "https://api.github.com/users/SergeyYanos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SergeyYanos/subscriptions", "organizations_url": "https://api.github.com/users/SergeyYanos/orgs", "repos_url": "https://api.github.com/users/SergeyYanos/repos", "events_url": "https://api.github.com/users/SergeyYanos/events{/privacy}", "received_events_url": "https://api.github.com/users/SergeyYanos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-17T12:08:53Z", "updated_at": "2018-05-20T23:48:43Z", "closed_at": "2018-05-20T23:47:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you have two netrefs on two connections and try to access attributes of one from the other you will get deadlock in protocol.sync_recv_and_dispatch method. \r\n\r\nFrom what I was able to gather:\r\nWhen we first call run_example from t1(thread 1) we enter protocol.sync_recv_and_dispatch of e1(Example obj 1) and take the _sync_lock, in addition t2 takes the _sync_lock of e2. Then t1 tries to take _sync_lock of e2 when it is accessing e2.exposed_e meanwhile t2 is doing the same with _sync_lock of e1 and e1.exposed_e. This results in deadlock because t1 holds a lock that t2 wants and won't release it until it(t1) gets the lock that t2 holds which in turn waits for t1 to release the lock it(t2) wants.\r\n\r\n##### Environment\r\n\r\n- rpyc version=3.4.4\r\n- python version=2.7\r\n- operating system=Linux(Fedora 27).\r\n\r\n\r\n##### Minimal example(sketchbook.py)\r\n```\r\nimport rpyc\r\nimport logging\r\nimport threading\r\n\r\n\r\nlogging.basicConfig(level=logging.DEBUG, format='%(levelname)-8s : %(name)-10s - %(message)s')\r\n\r\n\r\nclass Example(object):\r\n    def __init__(self, e):\r\n        self.exposed_e = e\r\n        self.logger = logging.getLogger('example_%s' % e)\r\n\r\n    def run_example(self, examples):\r\n        for _ in range(1000):\r\n            for example in examples:\r\n                self.logger.debug('%s accessing %s', self.exposed_e, example.exposed_e)\r\n\r\n\r\ndef main():\r\n    logger = logging.getLogger('main')\r\n    logger.debug('Starting test')\r\n\r\n    host1 = '10.135.174.5'\r\n    host2 = '10.135.175.5'\r\n    port = '18812'\r\n\r\n    conn1 = rpyc.classic.connect(host1, port)\r\n    conn2 = rpyc.classic.connect(host2, port)\r\n\r\n    examples = [conn1.modules['sketchbook'].Example(1),\r\n                conn2.modules['sketchbook'].Example(2)]\r\n\r\n    threads = [threading.Thread(target=e.run_example, args=(examples,)) for e in examples]\r\n\r\n    for t in threads:\r\n        t.start()\r\n    logger.debug('Threads started!')\r\n\r\n    for t in threads:\r\n        t.join()\r\n    logger.debug('Test finished!')\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/267", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/267/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/267/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/267/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/267", "id": 321644316, "node_id": "MDU6SXNzdWUzMjE2NDQzMTY=", "number": 267, "title": "ZeroDeploy: unhashable type: 'Tensor'", "user": {"login": "rodrigobaron", "id": 790725, "node_id": "MDQ6VXNlcjc5MDcyNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/790725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodrigobaron", "html_url": "https://github.com/rodrigobaron", "followers_url": "https://api.github.com/users/rodrigobaron/followers", "following_url": "https://api.github.com/users/rodrigobaron/following{/other_user}", "gists_url": "https://api.github.com/users/rodrigobaron/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodrigobaron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodrigobaron/subscriptions", "organizations_url": "https://api.github.com/users/rodrigobaron/orgs", "repos_url": "https://api.github.com/users/rodrigobaron/repos", "events_url": "https://api.github.com/users/rodrigobaron/events{/privacy}", "received_events_url": "https://api.github.com/users/rodrigobaron/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-09T16:42:27Z", "updated_at": "2018-05-11T18:47:18Z", "closed_at": "2018-05-11T18:47:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Heya,\r\n\r\nI did try using Tensorflow with ZeroDeploy, seems the problem is with `BaseNetref` '__hash__' attr..\r\ncode to reproduce:\r\n```python\r\nfrom __future__ import print_function\r\n\r\nimport rpyc\r\nfrom rpyc.utils.zerodeploy import DeployedServer\r\nfrom plumbum import SshMachine\r\n\r\nmach = SshMachine(\"rodrigo@server\")\r\nserver = DeployedServer(mach)\r\nconn = server.classic_connect()\r\n\r\nimport sys\r\nconn.modules.sys.stdout = sys.stdout\r\n\r\nnp = conn.modules.numpy\r\ntf = conn.modules.tensorflow\r\ninput_data = conn.modules['tensorflow.examples.tutorials.mnist'].input_data\r\nmnist = input_data.read_data_sets(\"/tmp/MNIST_data/\", one_hot=True, source_url=\"none\")\r\n\r\nx = tf.placeholder(tf.float32, [None, 784])\r\nW = tf.Variable(tf.zeros([784, 10]))\r\nb = tf.Variable(tf.zeros([10]))\r\n\r\ny = tf.nn.softmax(tf.matmul(x, W) + b)\r\n\r\ny_ = tf.placeholder(tf.float32, [None, 10])\r\ncross_entropy = tf.reduce_mean(-tf.reduce_sum(y_ * tf.log(y), reduction_indices=[1]))\r\ntrain_step = tf.train.GradientDescentOptimizer(0.5).minimize(cross_entropy)\r\n\r\ninit = tf.global_variables_initializer()\r\n\r\nsaver = tf.train.Saver()\r\nsess = tf.Session()\r\nsess.run(init)\r\nfor e in range(20):\r\n    if conn.modules.os.path.exists(\"/tmp/model.ckpt\"):\r\n        saver.restore(sess, \"/tmp/model.ckpt\")\r\n    for i in range(10):\r\n        batch_xs, batch_ys = mnist.train.next_batch(100)\r\n        sess.run(train_step, feed_dict={x: batch_xs, y_: batch_ys})\r\n        if i % 10 == 0:\r\n            correct_prediction = tf.equal(tf.argmax(y,1), tf.argmax(y_,1))\r\n            accuracy = tf.reduce_mean(tf.cast(correct_prediction, tf.float32))\r\n            conn.modules.sys.stdout.write(\"{0:3d} times\\taccuracy: {1:.10f} %\\n\".format(i+100, sess.run(accuracy, feed_dict={x: mnist.test.images, y_: mnist.test.labels})*100))\r\n            conn.modules.sys.stdout.flush()\r\n            #print(\"{0:3d} times\\taccuracy: {1:.10f} %\".format(i+100, sess.run(accuracy, feed_dict={x: mnist.test.images, y_: mnist.test.labels})*100))\r\n        save_path = saver.save(sess, \"/tmp/model.ckpt\")\r\n```\r\nerror log:\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 30, in <module>\r\n    sess.run(train_step, feed_dict={x: batch_xs, y_: batch_ys})\r\nTypeError: unhashable type: 'Tensor'\r\n```\r\nPython 3.6.2\r\nWindows 10\r\nRPyC 3.4.4", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/266", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/266/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/266/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/266/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/266", "id": 318758340, "node_id": "MDU6SXNzdWUzMTg3NTgzNDA=", "number": 266, "title": "Unable to authenticate using custom authenticator function", "user": {"login": "mmeade", "id": 6465574, "node_id": "MDQ6VXNlcjY0NjU1NzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6465574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmeade", "html_url": "https://github.com/mmeade", "followers_url": "https://api.github.com/users/mmeade/followers", "following_url": "https://api.github.com/users/mmeade/following{/other_user}", "gists_url": "https://api.github.com/users/mmeade/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmeade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmeade/subscriptions", "organizations_url": "https://api.github.com/users/mmeade/orgs", "repos_url": "https://api.github.com/users/mmeade/repos", "events_url": "https://api.github.com/users/mmeade/events{/privacy}", "received_events_url": "https://api.github.com/users/mmeade/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-29T23:09:50Z", "updated_at": "2018-05-31T20:20:28Z", "closed_at": "2018-05-31T20:20:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to lock my connections down with a password and added the function Authenticate to the server:\r\n\r\ndef Authenticator(sock):\r\n  logging.info('In authenticator with %s', sock)\r\n  if select.select([sock], [], [], 1)[0]:\r\n    data = sock.recv(26)\r\n    if not data:\r\n      logging.info('Sock not readable')\r\n      raise authenticators.AuthenticationError('No credentials sent')\r\n    else:\r\n      credentials += data\r\n  else:\r\n    logging.info('Sock closed')\r\n    raise authenticators.AuthenticationError('No credentials sent')\r\n\r\n  logging.info('credentials: %s', credentials)\r\n  if credentials in _CREDENTIALS and _CREDENTIALS[credentials] >= time.time():\r\n    del _CREDENTIALS[credentials]\r\n    logging.info('authenticated')\r\n    return sock, None\r\n  raise authenticators.AuthenticationError('Wrong credentials')\r\n\r\nI'm unable to figure out how to pass the credentials from the client to the server on connection. I've tried both connection and ssl_connection (but wasn't using keys, just to try) by passing in config={'credentials': credentials} without it working.\r\n\r\nThe authenticator gets triggered but the socket returns an empty string.\r\n\r\nThe documentation shows how to use a custom authenticator method but only briefly mentions ssl_connection and the 'credentials' key, but doesn't have an example from the client side.\r\n\r\nAny help would be appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/265", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/265/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/265/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/265/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/265", "id": 314308761, "node_id": "MDU6SXNzdWUzMTQzMDg3NjE=", "number": 265, "title": "ping raises EOFError(\"connection closed by peer\") instead of PingError ", "user": {"login": "szabgab", "id": 48833, "node_id": "MDQ6VXNlcjQ4ODMz", "avatar_url": "https://avatars2.githubusercontent.com/u/48833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/szabgab", "html_url": "https://github.com/szabgab", "followers_url": "https://api.github.com/users/szabgab/followers", "following_url": "https://api.github.com/users/szabgab/following{/other_user}", "gists_url": "https://api.github.com/users/szabgab/gists{/gist_id}", "starred_url": "https://api.github.com/users/szabgab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/szabgab/subscriptions", "organizations_url": "https://api.github.com/users/szabgab/orgs", "repos_url": "https://api.github.com/users/szabgab/repos", "events_url": "https://api.github.com/users/szabgab/events{/privacy}", "received_events_url": "https://api.github.com/users/szabgab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-14T07:50:59Z", "updated_at": "2018-05-17T03:37:21Z", "closed_at": "2018-05-11T18:54:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is the client code I have:\r\n\r\n```\r\nimport rpyc\r\nimport sys\r\nimport time\r\n\r\nif len(sys.argv) < 2:\r\n   exit(\"Usage {} SERVER\".format(sys.argv[0]))\r\n\r\nserver = sys.argv[1]\r\n\r\nconn = rpyc.classic.connect(server)\r\nrsys = conn.modules.sys\r\nprint(rsys.version)\r\n\r\nfor _ in range(10):\r\n    print(\"pinging\")\r\n    conn.ping()\r\n    time.sleep(3)\r\n    print(\"after wait\")\r\n    time.sleep(3)\r\n    print(\"after more wait\")\r\n```\r\n\r\nWhile it was running I stopped (Ctrl-c) the server. \r\nOnce the sleep-time was over I got the following stack trace  on the client side:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"rpyc_ping.py\", line 16, in <module>\r\n    conn.ping()\r\n  File \"/Users/gabor/venv3/lib/python3.6/site-packages/rpyc/core/protocol.py\", line 233, in ping\r\n    if res.value != data:\r\n  File \"/Users/gabor/venv3/lib/python3.6/site-packages/rpyc/core/async.py\", line 113, in value\r\n    self.wait()\r\n  File \"/Users/gabor/venv3/lib/python3.6/site-packages/rpyc/core/async.py\", line 54, in wait\r\n    self._conn.poll(timeout = max(timeout, 0))\r\n  File \"/Users/gabor/venv3/lib/python3.6/site-packages/rpyc/core/protocol.py\", line 431, in poll\r\n    return self.sync_recv_and_dispatch(timeout, wait_for_lock=False)\r\n  File \"/Users/gabor/venv3/lib/python3.6/site-packages/rpyc/core/protocol.py\", line 414, in sync_recv_and_dispatch\r\n    data = self._recv(timeout, wait_for_lock = False)\r\n  File \"/Users/gabor/venv3/lib/python3.6/site-packages/rpyc/core/protocol.py\", line 388, in _recv\r\n    data = self._channel.recv()\r\n  File \"/Users/gabor/venv3/lib/python3.6/site-packages/rpyc/core/channel.py\", line 50, in recv\r\n    header = self.stream.read(self.FRAME_HEADER.size)\r\n  File \"/Users/gabor/venv3/lib/python3.6/site-packages/rpyc/core/stream.py\", line 226, in read\r\n    raise EOFError(\"connection closed by peer\")\r\nEOFError: connection closed by peer\r\n```\r\nThe documentation in http://rpyc.readthedocs.io/en/latest/api/core_protocol.html seems to indicate that it should raise a `PingError`.\r\n\r\nThough reading the doc again, it might mean that PingError is raised only if the other side responds but not with the correct content.  If the current behavior is expected then maybe the documentation at \r\n http://rpyc.readthedocs.io/en/latest/api/core_protocol.html could be amended with something like this:\r\n`If there is no response at all then ping - as every other command - will raise and EOFError: connection closed by peer exception.`\r\n\r\n##### Environment\r\n\r\nclient:\r\n- Python 3.6.3.\r\n- rpyc 3.4.4\r\n- OSX\r\n\r\n\r\nserver\r\n- Python 3.6.3\r\n- rpyc 3.4.4\r\n- Ubuntu 17.10\r\n- running `rpyc_classic.py`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/264", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/264/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/264/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/264/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/264", "id": 314306774, "node_id": "MDU6SXNzdWUzMTQzMDY3NzQ=", "number": 264, "title": "Example for reaching timeout error", "user": {"login": "szabgab", "id": 48833, "node_id": "MDQ6VXNlcjQ4ODMz", "avatar_url": "https://avatars2.githubusercontent.com/u/48833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/szabgab", "html_url": "https://github.com/szabgab", "followers_url": "https://api.github.com/users/szabgab/followers", "following_url": "https://api.github.com/users/szabgab/following{/other_user}", "gists_url": "https://api.github.com/users/szabgab/gists{/gist_id}", "starred_url": "https://api.github.com/users/szabgab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/szabgab/subscriptions", "organizations_url": "https://api.github.com/users/szabgab/orgs", "repos_url": "https://api.github.com/users/szabgab/repos", "events_url": "https://api.github.com/users/szabgab/events{/privacy}", "received_events_url": "https://api.github.com/users/szabgab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-14T07:18:06Z", "updated_at": "2018-05-20T12:19:45Z", "closed_at": "2018-05-20T12:19:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Seeing `sync_request_timeout` I thought the client will time out after 30 sec if it does not get a response, but I could not make it trigger with this code. How can I see the timeout in action?\r\n\r\n```\r\nimport rpyc\r\nimport sys\r\n\r\nif len(sys.argv) < 2:\r\n   exit(\"Usage {} SERVER\".format(sys.argv[0]))\r\n\r\nserver = sys.argv[1]\r\n\r\nconn = rpyc.classic.connect(server)\r\nmy_code = '''\r\nimport time\r\ndef wait_a_bit(n):\r\n    start = time.time()\r\n    time.sleep(n)\r\n    end = time.time()\r\n    return { \"start\" : start, \"end\" : end, \"diff\" : int(end - start) }\r\n'''\r\nconn.execute(my_code)\r\n\r\nrf = conn.namespace['wait_a_bit']\r\nprint(rf(50))\r\n```\r\n\r\n##### Environment\r\n\r\nclient:\r\n- Python 3.6.3.\r\n- rpyc 3.4.4\r\n- OSX\r\n\r\n\r\nserver\r\n- Python 3.6.3\r\n- rpyc 3.4.4\r\n- Ubuntu 17.10\r\n- running `rpyc_classic.py`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/263", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/263/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/263/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/263/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/263", "id": 311864255, "node_id": "MDU6SXNzdWUzMTE4NjQyNTU=", "number": 263, "title": "Traceback with \"rpyc.classic.connect()\"", "user": {"login": "naveenshankar61", "id": 20944794, "node_id": "MDQ6VXNlcjIwOTQ0Nzk0", "avatar_url": "https://avatars1.githubusercontent.com/u/20944794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/naveenshankar61", "html_url": "https://github.com/naveenshankar61", "followers_url": "https://api.github.com/users/naveenshankar61/followers", "following_url": "https://api.github.com/users/naveenshankar61/following{/other_user}", "gists_url": "https://api.github.com/users/naveenshankar61/gists{/gist_id}", "starred_url": "https://api.github.com/users/naveenshankar61/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/naveenshankar61/subscriptions", "organizations_url": "https://api.github.com/users/naveenshankar61/orgs", "repos_url": "https://api.github.com/users/naveenshankar61/repos", "events_url": "https://api.github.com/users/naveenshankar61/events{/privacy}", "received_events_url": "https://api.github.com/users/naveenshankar61/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 23, "created_at": "2018-04-06T06:47:06Z", "updated_at": "2018-06-26T08:38:29Z", "closed_at": "2018-06-13T13:37:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using python provided rpyc module for my remote connectivity purposes but my command \"import rpyc; conn = rpyc.classic.connect(<Hostname>)\" yield the following traceback:\r\n\r\n```\r\n[root@SM-4-161 masher]# python\r\nPython 2.7.5 (default, Aug  4 2017, 00:39:18)\r\n[GCC 4.8.5 20150623 (Red Hat 4.8.5-16)] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import rpyc\r\n>>> conn = rpyc.classic.connect(\"10.206.110.155\")\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib/python2.7/site-packages/rpyc-3.4.4-py2.7.egg/rpyc/utils/classic.py\", line 70, in connect\r\n    return factory.connect(host, port, SlaveService, ipv6 = ipv6, keepalive = keepalive)\r\n  File \"/usr/lib/python2.7/site-packages/rpyc-3.4.4-py2.7.egg/rpyc/utils/factory.py\", line 93, in connect\r\n    return connect_stream(s, service, config)\r\n  File \"/usr/lib/python2.7/site-packages/rpyc-3.4.4-py2.7.egg/rpyc/utils/factory.py\", line 54, in connect_stream\r\n    return connect_channel(Channel(stream), service=service, config=config)\r\n  File \"/usr/lib/python2.7/site-packages/rpyc-3.4.4-py2.7.egg/rpyc/utils/factory.py\", line 43, in connect_channel\r\n    return service._connect(channel, config)\r\n  File \"/usr/lib/python2.7/site-packages/rpyc-3.4.4-py2.7.egg/rpyc/core/service.py\", line 100, in _connect\r\n    self.on_connect(conn)\r\n  File \"/usr/lib/python2.7/site-packages/rpyc-3.4.4-py2.7.egg/rpyc/core/service.py\", line 195, in on_connect\r\n    self._install(conn, conn.root)\r\n  File \"/usr/lib/python2.7/site-packages/rpyc-3.4.4-py2.7.egg/rpyc/core/service.py\", line 199, in _install\r\n    modules = ModuleNamespace(slave.getmodule)\r\n  File \"/usr/lib/python2.7/site-packages/rpyc-3.4.4-py2.7.egg/rpyc/core/netref.py\", line 157, in __getattribute__\r\n    return syncreq(self, consts.HANDLE_GETATTR, name)\r\n  File \"/usr/lib/python2.7/site-packages/rpyc-3.4.4-py2.7.egg/rpyc/core/netref.py\", line 77, in syncreq\r\n    return conn.sync_request(handler, proxy, *args)\r\n  File \"/usr/lib/python2.7/site-packages/rpyc-3.4.4-py2.7.egg/rpyc/core/protocol.py\", line 516, in sync_request\r\n    raise obj\r\nKeyError: '<rpyc.core.service.SlaveService object at 0x7fbfe0012090>'\r\n\r\n========= Remote Traceback (1) =========\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/site-packages/rpyc/core/protocol.py\", line 347, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"/usr/lib/python2.7/site-packages/rpyc/core/protocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(oid, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"/usr/lib/python2.7/site-packages/rpyc/core/protocol.py\", line 588, in _access_attr\r\n    obj = self._local_objects[oid]\r\n  File \"/usr/lib/python2.7/site-packages/rpyc/lib/colls.py\", line 86, in __getitem__\r\n    return self._dict[key][0]\r\nKeyError: <rpyc.core.service.SlaveService object at 0x7fbfe0012090>\r\n\r\n>>>\r\n```\r\n\r\n##### Environment\r\n\r\n- rpyc version = 3.4.4\r\n- python version = 2.7\r\n- operating system = CentOS-7.4 with kernel upgraded to 4.13.12\r\n\r\nCan anyone please help me rectify this issue?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/262", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/262/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/262/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/262/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/262", "id": 308507457, "node_id": "MDU6SXNzdWUzMDg1MDc0NTc=", "number": 262, "title": "How to run classic at boot with ver 3.4.4", "user": {"login": "micksulley", "id": 6191767, "node_id": "MDQ6VXNlcjYxOTE3Njc=", "avatar_url": "https://avatars0.githubusercontent.com/u/6191767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micksulley", "html_url": "https://github.com/micksulley", "followers_url": "https://api.github.com/users/micksulley/followers", "following_url": "https://api.github.com/users/micksulley/following{/other_user}", "gists_url": "https://api.github.com/users/micksulley/gists{/gist_id}", "starred_url": "https://api.github.com/users/micksulley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micksulley/subscriptions", "organizations_url": "https://api.github.com/users/micksulley/orgs", "repos_url": "https://api.github.com/users/micksulley/repos", "events_url": "https://api.github.com/users/micksulley/events{/privacy}", "received_events_url": "https://api.github.com/users/micksulley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-26T10:02:49Z", "updated_at": "2018-03-26T12:28:49Z", "closed_at": "2018-03-26T12:22:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running version 3.4.4 how can I get rpyc_classic.py to run at boot?  I installed with\r\npip install rpyc-3.4.4-py2-none-any.whl\r\n\r\nWith previous versions on another machine I added \r\n/home/mick/.rpyc/rpyc-3.3.0/bin/rpyc_classic.py\r\nto /etc/rc.local and that worked fine\r\n\r\nI have tried adding \r\n```\r\necho 'about to run it' > '/home/mick/rpyc.log'\r\n/home/mick/.local/bin/rpyc_classic.py >> '/home/mick/rpyc.log' 2>&1 &\r\necho 'should be running now' >> '/home/mick/rpyc.log'\r\n```\r\nto /etc/rc.local but the log shows\r\n```\r\nabout to run it\r\nshould be running now\r\nTraceback (most recent call last):\r\n  File \"/home/mick/.local/bin/rpyc_classic.py\", line 14, in <module>\r\n    import rpyc\r\nImportError: No module named rpyc\r\n```\r\nI can run it manually\r\n```\r\nmick@zen:~$ rpyc_classic.py\r\nINFO:SLAVE/18812:server started on [0.0.0.0]:18812\r\n```\r\n\r\nSo I am guessing it is a permissions or path problem. My path is\r\n```\r\nmick@zen:~$ echo $PATH\r\n/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/mick/.local/bin\r\n```\r\nCan you tell me how to get it to run at boot please?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/261", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/261/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/261/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/261/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/261", "id": 308285742, "node_id": "MDU6SXNzdWUzMDgyODU3NDI=", "number": 261, "title": "Cannot Install 3.4.4", "user": {"login": "micksulley", "id": 6191767, "node_id": "MDQ6VXNlcjYxOTE3Njc=", "avatar_url": "https://avatars0.githubusercontent.com/u/6191767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micksulley", "html_url": "https://github.com/micksulley", "followers_url": "https://api.github.com/users/micksulley/followers", "following_url": "https://api.github.com/users/micksulley/following{/other_user}", "gists_url": "https://api.github.com/users/micksulley/gists{/gist_id}", "starred_url": "https://api.github.com/users/micksulley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micksulley/subscriptions", "organizations_url": "https://api.github.com/users/micksulley/orgs", "repos_url": "https://api.github.com/users/micksulley/repos", "events_url": "https://api.github.com/users/micksulley/events{/privacy}", "received_events_url": "https://api.github.com/users/micksulley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-03-24T18:12:37Z", "updated_at": "2018-03-25T15:22:42Z", "closed_at": "2018-03-25T15:03:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI've used previous versions but I am just trying to install RPyC on a new machine, figured I would use the latest version and I can't work out how to do it.\r\n\r\nTrying to install on Ubuntu server 17.10\r\n\r\nI downloaded rpyc-3.4.4-py2-none-any.whl into a new directory and used pip to install.  Here is what I got.\r\n\r\nmick@zen:~/.rpyc$ pip install rpyc-3.4.4-py2-none-any.whl\r\nProcessing ./rpyc-3.4.4-py2-none-any.whl\r\nCollecting plumbum (from rpyc==3.4.4)\r\n  Using cached plumbum-1.6.6-py2.py3-none-any.whl\r\nInstalling collected packages: plumbum, rpyc\r\nSuccessfully installed plumbum-1.6.6 rpyc-3.4.4\r\nmick@zen:~/.rpyc$\r\n\r\nBut I cannot run it.  There is no 'rpyc_classic.py' anywhere.\r\n\r\nHave I missed something? Can anyone help me please?\r\n\r\nThanks\r\n\r\nMick ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/260", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/260/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/260/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/260", "id": 305659697, "node_id": "MDU6SXNzdWUzMDU2NTk2OTc=", "number": 260, "title": "How can I get the ip (or the host name) and the port of the client trying to connect?", "user": {"login": "dnlbazac", "id": 25955008, "node_id": "MDQ6VXNlcjI1OTU1MDA4", "avatar_url": "https://avatars1.githubusercontent.com/u/25955008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnlbazac", "html_url": "https://github.com/dnlbazac", "followers_url": "https://api.github.com/users/dnlbazac/followers", "following_url": "https://api.github.com/users/dnlbazac/following{/other_user}", "gists_url": "https://api.github.com/users/dnlbazac/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnlbazac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnlbazac/subscriptions", "organizations_url": "https://api.github.com/users/dnlbazac/orgs", "repos_url": "https://api.github.com/users/dnlbazac/repos", "events_url": "https://api.github.com/users/dnlbazac/events{/privacy}", "received_events_url": "https://api.github.com/users/dnlbazac/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-15T17:58:36Z", "updated_at": "2018-04-20T16:17:15Z", "closed_at": "2018-03-25T15:03:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello.\r\n\r\nI need a server that is able to identify the clients attempting to connect. The simplest way of doing that is by IP (name) and port. I started analyzing the on_connect method of the rpyc.Service.\r\nI got to the Connection object but I did not find the ip (or host name) or the port.\r\n\r\nI know I could expose a function on the clients that would return the IP and the port but this is not elegant at all.\r\n\r\nI guess that should be straightforward but I was not able to find it,\r\nPlease tell me what is the way you recommend for obtaining the IP (or name) and the port of the client who asking for a connection.\r\n\r\nThank you in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/258", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/258/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/258/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/258", "id": 302969518, "node_id": "MDU6SXNzdWUzMDI5Njk1MTg=", "number": 258, "title": "EOFerror stream has been closed", "user": {"login": "spacerainbow000", "id": 21026840, "node_id": "MDQ6VXNlcjIxMDI2ODQw", "avatar_url": "https://avatars3.githubusercontent.com/u/21026840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spacerainbow000", "html_url": "https://github.com/spacerainbow000", "followers_url": "https://api.github.com/users/spacerainbow000/followers", "following_url": "https://api.github.com/users/spacerainbow000/following{/other_user}", "gists_url": "https://api.github.com/users/spacerainbow000/gists{/gist_id}", "starred_url": "https://api.github.com/users/spacerainbow000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spacerainbow000/subscriptions", "organizations_url": "https://api.github.com/users/spacerainbow000/orgs", "repos_url": "https://api.github.com/users/spacerainbow000/repos", "events_url": "https://api.github.com/users/spacerainbow000/events{/privacy}", "received_events_url": "https://api.github.com/users/spacerainbow000/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-03-07T05:27:31Z", "updated_at": "2018-05-11T18:50:33Z", "closed_at": "2018-05-11T18:50:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "pretty new to python so sorry if this bug is dumb. I wrote a program that starts an arbitrary job from a set of python files from a directory - try_start_job is called with a job object, which has a first-class reference to the behavior to run. a new thread is spawned running an executor method, which calls the function to do the job along with some parameters from the job object. this works fine when the try_start_job method is called from within the same file it's defined, but when I try to execute the call to try_start_job over rpyc (trying to make a client-service-type-structure) I get the following error:\r\n\r\n```\r\nException in thread ping:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.5/threading.py\", line 914, in _bootstrap_inner\r\n    self.run()\r\n  File \"/usr/lib/python3.5/threading.py\", line 862, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/floodgate/libs/executor.py\", line 18, in executor\r\n    for _ in range(job.cycles):\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc/core/netref.py\", line 151, in __getattribute__\r\n    return syncreq(self, consts.HANDLE_GETATTR, name)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc/core/netref.py\", line 72, in syncreq\r\n    return conn.sync_request(handler, oid, *args)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc/core/protocol.py\", line 519, in sync_request\r\n    self.sync_recv_and_dispatch(timeout, True)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc/core/protocol.py\", line 414, in sync_recv_and_dispatch\r\n    data = self._recv(timeout, wait_for_lock = False)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc/core/protocol.py\", line 387, in _recv\r\n    if self._channel.poll(timeout):\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc/core/channel.py\", line 43, in poll\r\n    return self.stream.poll(timeout)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc/core/stream.py\", line 40, in poll\r\n    p.register(self.fileno(), \"r\")\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc/core/stream.py\", line 201, in fileno\r\n    return self.sock.fileno()\r\n  File \"/usr/local/lib/python3.5/dist-packages/rpyc/core/stream.py\", line 89, in fileno\r\n    raise EOFError(\"stream has been closed\")\r\nEOFError: stream has been closed\r\n```\r\n(ping is the name of the thread - the test job just writes a line to stdout)\r\nI call the function from the 'client' like this:\r\n\r\n```\r\nimport rpyc\r\nconn = rpyc.connect(\"localhost\", 18861, config={\"allow_all_attrs\": True})\r\nservice = conn.root\r\nr = rpyc.async(service.try_start_job)\r\nres = r(testjob)\r\nprint(res.value)\r\n```\r\nwhat am I doing wrong?\r\n\r\nrpyc 3.4.4\r\npython 3.5.2\r\nUbuntu 16.04.3 LTS", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/257", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/257/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/257/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/257", "id": 301839513, "node_id": "MDU6SXNzdWUzMDE4Mzk1MTM=", "number": 257, "title": "Integrating with Blender UI Event Loop", "user": {"login": "nathan5280", "id": 28061825, "node_id": "MDQ6VXNlcjI4MDYxODI1", "avatar_url": "https://avatars2.githubusercontent.com/u/28061825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathan5280", "html_url": "https://github.com/nathan5280", "followers_url": "https://api.github.com/users/nathan5280/followers", "following_url": "https://api.github.com/users/nathan5280/following{/other_user}", "gists_url": "https://api.github.com/users/nathan5280/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathan5280/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathan5280/subscriptions", "organizations_url": "https://api.github.com/users/nathan5280/orgs", "repos_url": "https://api.github.com/users/nathan5280/repos", "events_url": "https://api.github.com/users/nathan5280/events{/privacy}", "received_events_url": "https://api.github.com/users/nathan5280/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-02T17:12:31Z", "updated_at": "2018-04-19T23:15:08Z", "closed_at": "2018-04-19T23:15:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm working to integrate a remote client with the Blender 3D Studio.  I've done this with Pyro, but want to take advantage of the RPyC Classic server to access the Blender Python API.  It looks like I have a straight path to doing this when I run Blender headless as everything is driven by the Python interpreter in Blender.  When I run the headed version there is an event loop that keeps the UI alive.  If the blender interpreter starts the RPyC server, then the calls from RPyC run on a different thread than the UI and cause problems in Blender.\r\n\r\nWith Pyro I was able to set a timer in Blender that calls Pyro periodically and services any client requests.  When there are no more client requests, the server times out on the socket and returns control to Blender.  In this model client request are run on the Blender event loop thread and everything continues to work fine.\r\n\r\nIt seems like I need a new Server class that has a method to call when it is time to check for client requests that I can just hook into the Blender timer.  It seems like someone else must have come across this scenario before and I like to learn from their experience before I start hacking the server code myself.\r\n\r\nDoes anyone have suggestions on how to do something similar with RPyC?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/255", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/255/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/255/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/255/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/255", "id": 294977010, "node_id": "MDU6SXNzdWUyOTQ5NzcwMTA=", "number": 255, "title": "TypeError when calling exposed method", "user": {"login": "matthew-hodgins", "id": 7659771, "node_id": "MDQ6VXNlcjc2NTk3NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/7659771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthew-hodgins", "html_url": "https://github.com/matthew-hodgins", "followers_url": "https://api.github.com/users/matthew-hodgins/followers", "following_url": "https://api.github.com/users/matthew-hodgins/following{/other_user}", "gists_url": "https://api.github.com/users/matthew-hodgins/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthew-hodgins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthew-hodgins/subscriptions", "organizations_url": "https://api.github.com/users/matthew-hodgins/orgs", "repos_url": "https://api.github.com/users/matthew-hodgins/repos", "events_url": "https://api.github.com/users/matthew-hodgins/events{/privacy}", "received_events_url": "https://api.github.com/users/matthew-hodgins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-07T01:43:09Z", "updated_at": "2018-02-07T18:54:02Z", "closed_at": "2018-02-07T18:54:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've recently run into an issue where calling any of the exposed methods results in a stack trace similar to this:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/multiprocessing/process.py\", line 258, in _bootstrap\r\n    self.run()\r\n  File \"/usr/lib/python2.7/multiprocessing/process.py\", line 114, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"worker.py\", line 1217, in execute_test_suite\r\n    self.server.root.release(test_suite.id)\r\n  File \".../local/lib/python2.7/site-packages/rpyc/core/netref.py\", line 151, in __getattribute__\r\n    return syncreq(self, consts.HANDLE_GETATTR, name)\r\n  File \".../local/lib/python2.7/site-packages/rpyc/core/netref.py\", line 72, in syncreq\r\n    return conn.sync_request(handler, oid, *args)\r\n  File \".../local/lib/python2.7/site-packages/rpyc/core/protocol.py\", line 519, in sync_request\r\n    self.sync_recv_and_dispatch(timeout, True)\r\n  File \".../local/lib/python2.7/site-packages/rpyc/core/protocol.py\", line 417, in sync_recv_and_dispatch\r\n    self._dispatch(data)\r\n  File \".../local/lib/python2.7/site-packages/rpyc/core/protocol.py\", line 399, in _dispatch\r\n    msg, seq, args = brine.load(data)\r\nTypeError: 'int' object is not iterable\r\n```\r\n\r\nI'm connecting to a ThreadedServer. One of the methods in question is get() (which returns an integer or None). The ThreadedServer gets into a state (not sure how yet) where it raises the above TypeError. So far I've been able to work around the issue by putting every server call in a try/except and remaking the rpyc connection but have had no luck finding the root cause.\r\n\r\nAny insight would be appreciated. I'm using rpyc version 3.4.4", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/254", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/254/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/254/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/254", "id": 294227211, "node_id": "MDU6SXNzdWUyOTQyMjcyMTE=", "number": 254, "title": "TypeError: on_connect() missing 1 required positional argument: 'conn'", "user": {"login": "bgailer", "id": 1512596, "node_id": "MDQ6VXNlcjE1MTI1OTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1512596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bgailer", "html_url": "https://github.com/bgailer", "followers_url": "https://api.github.com/users/bgailer/followers", "following_url": "https://api.github.com/users/bgailer/following{/other_user}", "gists_url": "https://api.github.com/users/bgailer/gists{/gist_id}", "starred_url": "https://api.github.com/users/bgailer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bgailer/subscriptions", "organizations_url": "https://api.github.com/users/bgailer/orgs", "repos_url": "https://api.github.com/users/bgailer/repos", "events_url": "https://api.github.com/users/bgailer/events{/privacy}", "received_events_url": "https://api.github.com/users/bgailer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-04T20:22:58Z", "updated_at": "2018-02-23T15:12:29Z", "closed_at": "2018-02-23T15:12:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Tried example in tutorial. Got server running. Connect attempt results in traceback on server console:\r\n\r\n```\r\nclient connection terminated abruptly\r\nTraceback (most recent call last):\r\n  File \"C:\\Program Files\\PyScripter\\Lib\\rpyc.zip\\rpyc\\utils\\server.py\", line 165, in _authenticate_and_serve_client\r\n    self._serve_client(sock2, credentials)\r\n  File \"C:\\Program Files\\PyScripter\\Lib\\rpyc.zip\\rpyc\\utils\\server.py\", line 190, in _serve_client\r\n    conn._init_service()\r\n  File \"C:\\Program Files\\PyScripter\\Lib\\rpyc.zip\\rpyc\\core\\protocol.py\", line 147, in _init_service\r\n    self._local_root.on_connect()\r\nTypeError: on_connect() missing 1 required positional argument: 'conn'\r\nException in thread Thread-1:\r\nTraceback (most recent call last):\r\n  File \"C:\\Python35\\lib\\threading.py\", line 914, in _bootstrap_inner\r\n    self.run()\r\n  File \"C:\\Python35\\lib\\threading.py\", line 862, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"C:\\Program Files\\PyScripter\\Lib\\rpyc.zip\\rpyc\\utils\\server.py\", line 165, in _authenticate_and_serve_client\r\n    self._serve_client(sock2, credentials)\r\n  File \"C:\\Program Files\\PyScripter\\Lib\\rpyc.zip\\rpyc\\utils\\server.py\", line 190, in _serve_client\r\n    conn._init_service()\r\n  File \"C:\\Program Files\\PyScripter\\Lib\\rpyc.zip\\rpyc\\core\\protocol.py\", line 147, in _init_service\r\n    self._local_root.on_connect()\r\nTypeError: on_connect() missing 1 required positional argument: 'conn'\r\n\r\nException ignored in: <bound method Connection.__del__ of <rpyc.core.protocol.Connection 'conn2' object at 0x0000019B104A4278>>\r\nTraceback (most recent call last):\r\n  File \"C:\\Program Files\\PyScripter\\Lib\\rpyc.zip\\rpyc\\core\\protocol.py\", line 150, in __del__\r\n  File \"C:\\Program Files\\PyScripter\\Lib\\rpyc.zip\\rpyc\\core\\protocol.py\", line 194, in close\r\n  File \"C:\\Program Files\\PyScripter\\Lib\\rpyc.zip\\rpyc\\core\\protocol.py\", line 167, in _cleanup\r\nTypeError: on_disconnect() missing 1 required positional argument: 'conn'\r\n\r\nkeyboard interrupt!\r\n```\r\n\r\n##### Environment\r\n\r\n- rpyc version - latest as of 2/4/2018\r\n- python version 3.5\r\n- operating system windows 10\r\n\r\nServer: running in a command prompt\r\n\r\n```import rpyc\r\n\r\nclass MyService(rpyc.Service):\r\n    def on_connect(self, conn):\r\n        # code that runs when a connection is created\r\n        # (to init the serivce, if needed)\r\n        pass\r\n\r\n    def on_disconnect(self, conn):\r\n        # code that runs after the connection has already closed\r\n        # (to finalize the service, if needed)\r\n        pass\r\n\r\n    def exposed_get_answer(self): # this is an exposed method\r\n        return 42\r\n\r\n    exposed_the_real_answer_though = 43     # an exposed attribute\r\n\r\n    def get_question(self):  # while this method is not exposed\r\n        return \"what is the airspeed velocity of an unladen swallow?\"\r\n\r\nif __name__ == \"__main__\":\r\n    from rpyc.utils.server import ThreadedServer\r\n    t = ThreadedServer(MyService, port=18861)\r\n    t.start()\r\n```\r\n\r\nClient: running in a command promt\r\n\r\n```Python 3.5.1 (v3.5.1:37a07cee5969, Dec  6 2015, 01:54:25) [MSC v.1900 64 bit (AMD64)] on win32\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import rpyc\r\n>>> c = rpyc.connect(\"localhost\", 18861)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/253", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/253/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/253/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/253", "id": 292583581, "node_id": "MDU6SXNzdWUyOTI1ODM1ODE=", "number": 253, "title": "Async is a keyword in Python 3.7", "user": {"login": "pyscripter", "id": 1311616, "node_id": "MDQ6VXNlcjEzMTE2MTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1311616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pyscripter", "html_url": "https://github.com/pyscripter", "followers_url": "https://api.github.com/users/pyscripter/followers", "following_url": "https://api.github.com/users/pyscripter/following{/other_user}", "gists_url": "https://api.github.com/users/pyscripter/gists{/gist_id}", "starred_url": "https://api.github.com/users/pyscripter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pyscripter/subscriptions", "organizations_url": "https://api.github.com/users/pyscripter/orgs", "repos_url": "https://api.github.com/users/pyscripter/repos", "events_url": "https://api.github.com/users/pyscripter/events{/privacy}", "received_events_url": "https://api.github.com/users/pyscripter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-29T22:25:36Z", "updated_at": "2018-01-29T23:17:33Z", "closed_at": "2018-01-29T23:13:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since async was made a keyword in Python 3.7 rpyc will fail to compile.  The async module needs to be renamed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/252", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/252/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/252/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/252", "id": 289054794, "node_id": "MDU6SXNzdWUyODkwNTQ3OTQ=", "number": 252, "title": "Python 3.6.1 to Jython 2.7.0 connect() fails", "user": {"login": "clach04", "id": 424032, "node_id": "MDQ6VXNlcjQyNDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/424032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clach04", "html_url": "https://github.com/clach04", "followers_url": "https://api.github.com/users/clach04/followers", "following_url": "https://api.github.com/users/clach04/following{/other_user}", "gists_url": "https://api.github.com/users/clach04/gists{/gist_id}", "starred_url": "https://api.github.com/users/clach04/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clach04/subscriptions", "organizations_url": "https://api.github.com/users/clach04/orgs", "repos_url": "https://api.github.com/users/clach04/repos", "events_url": "https://api.github.com/users/clach04/events{/privacy}", "received_events_url": "https://api.github.com/users/clach04/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-16T21:02:10Z", "updated_at": "2018-01-21T11:00:44Z", "closed_at": "2018-01-21T11:00:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "    C:\\Python36-32>python.exe\r\n    Python 3.6.1 (v3.6.1:69c0db5, Mar 21 2017, 17:54:52) [MSC v.1900 32 bit (Intel)] on win32\r\n    Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n    >>> import rpyc\r\n    >>> conn = rpyc.classic.connect(\"localhost\")\r\n    Traceback (most recent call last):\r\n      File \"<stdin>\", line 1, in <module>\r\n      File \"C:\\Users\\clach04\\py\\rpyc\\rpyc\\utils\\classic.py\", line 70, in connect\r\n        return factory.connect(host, port, SlaveService, ipv6 = ipv6, keepalive = keepalive)\r\n      File \"C:\\Users\\clach04\\py\\rpyc\\rpyc\\utils\\factory.py\", line 93, in connect\r\n        return connect_stream(s, service, config)\r\n      File \"C:\\Users\\clach04\\py\\rpyc\\rpyc\\utils\\factory.py\", line 54, in connect_stream\r\n        return connect_channel(Channel(stream), service=service, config=config)\r\n      File \"C:\\Users\\clach04\\py\\rpyc\\rpyc\\utils\\factory.py\", line 43, in connect_channel\r\n        return service._connect(channel, config)\r\n      File \"C:\\Users\\clach04\\py\\rpyc\\rpyc\\core\\service.py\", line 100, in _connect\r\n        self.on_connect(conn)\r\n      File \"C:\\Users\\clach04\\py\\rpyc\\rpyc\\core\\service.py\", line 195, in on_connect\r\n        self._install(conn, conn.root)\r\n      File \"C:\\Users\\clach04\\py\\rpyc\\rpyc\\core\\service.py\", line 200, in _install\r\n        builtin = modules.builtins if is_py3k else modules.__builtin__\r\n      File \"C:\\Users\\clach04\\py\\rpyc\\rpyc\\core\\service.py\", line 131, in __getattr__\r\n        return self[name]\r\n      File \"C:\\Users\\clach04\\py\\rpyc\\rpyc\\core\\service.py\", line 128, in __getitem__\r\n        self.__cache[name] = self.__getmodule(name)\r\n    TypeError: 'b'instancemethod'' object is not callable\r\n\r\n\r\n##### Environment\r\n\r\n- rpyc version - latest as of commit 994f7e1e112a108e58af4fd8750cdbd67bc29ef9\r\n- python version, Python 3.6.1 for client, Jython 2.7.0 for server\r\n- Windows 10\r\n\r\n\r\n##### Minimal example\r\n\r\nServer:\r\n\r\n    jython rpyc_classic.py\r\n\r\nClient:\r\n\r\n```python\r\nimport rpyc\r\n\r\nconn = rpyc.classic.connect(\"localhost\")\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/251", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/251/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/251/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/251/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/251", "id": 287968742, "node_id": "MDU6SXNzdWUyODc5Njg3NDI=", "number": 251, "title": "Unicode-only strings in IronPython make rpyc.utils.classic.deliver() fail if the server is Python 2", "user": {"login": "pilcru", "id": 2668286, "node_id": "MDQ6VXNlcjI2NjgyODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2668286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pilcru", "html_url": "https://github.com/pilcru", "followers_url": "https://api.github.com/users/pilcru/followers", "following_url": "https://api.github.com/users/pilcru/following{/other_user}", "gists_url": "https://api.github.com/users/pilcru/gists{/gist_id}", "starred_url": "https://api.github.com/users/pilcru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pilcru/subscriptions", "organizations_url": "https://api.github.com/users/pilcru/orgs", "repos_url": "https://api.github.com/users/pilcru/repos", "events_url": "https://api.github.com/users/pilcru/events{/privacy}", "received_events_url": "https://api.github.com/users/pilcru/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-12T00:13:48Z", "updated_at": "2018-02-19T10:26:01Z", "closed_at": "2018-02-19T10:25:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "When connecting an IronPython (2.7) client to a server running Python 2, [`rpyc.utils.classic.deliver()`](https://github.com/tomerfiliba/rpyc/blob/994f7e1e112a108e58af4fd8750cdbd67bc29ef9/rpyc/utils/classic.py#L279) fails:\r\n\r\nOn the server:\r\n\r\n```python\r\n&> python -V && python rpyc_classic.py\r\nPython 2.7.13 :: Continuum Analytics, Inc.\r\nINFO:SLAVE/18812:server started on [127.0.0.1]:18812\r\nINFO:SLAVE/18812:accepted ('127.0.0.1', 52319) with fd 868\r\nINFO:SLAVE/18812:welcome ('127.0.0.1', 52319)\r\nDEBUG:SLAVE/18812:Exception caught\r\nTraceback (most recent call last):\r\n  File \"c:\\tools\\Anaconda3\\envs\\rhinoremote\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 347, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"c:\\tools\\Anaconda3\\envs\\rhinoremote\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 624, in _handle_call\r\n    return self._local_objects[oid](*args, **dict(kwargs))\r\nTypeError: loads() argument 1 must be string, not unicode\r\n```\r\n\r\nOn the client:\r\n\r\n```python\r\nIronPython 2.7.5 (2.7.5.0) on .NET 4.0.30319.42000 (64-bit)\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import rpyc\r\n>>> rpyc.__version__\r\n(3, 4, 4)\r\n>>> conn = rpyc.classic.connect('localhost')\r\n>>> rpyc.utils.classic.deliver(conn, 'a')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Program Files (x86)\\IronPython 2.7\\Lib\\rpyc\\utils\\classic.py\", line 289, in deliver\r\n  File \"C:\\Program Files (x86)\\IronPython 2.7\\Lib\\rpyc\\core\\netref.py\", line 199, in __call__\r\n  File \"C:\\Program Files (x86)\\IronPython 2.7\\Lib\\rpyc\\core\\netref.py\", line 72, in syncreq\r\n  File \"C:\\Program Files (x86)\\IronPython 2.7\\Lib\\rpyc\\core\\protocol.py\", line 523, in sync_request\r\nTypeError: loads() argument 1 must be string, not unicode\r\n\r\n========= Remote Traceback (1) =========\r\n...\r\n```\r\n\r\nI have identified the root of the problem to be in the `_dump_registry` in `brine.py`. Because IronPython does not distinguish between regular strings and unicode strings (ie. `unicode is str` is `True`), the `str` entry in the registry points to `_dump_unicode`, so thats how all strings are dumped. In turns, this makes the server decode as unicode all strings sent by value through brine, which in Python 2 cannot be passed to `pickle.loads()`.\r\n\r\nOne way to solve this is to force plain ascii strings to be sent as regular strings by brine by changing [`_dump_unicode`](https://github.com/tomerfiliba/rpyc/blob/994f7e1e112a108e58af4fd8750cdbd67bc29ef9/rpyc/core/brine.py#L167-L170) to:\r\n\r\n```python\r\n    import sys\r\n    if sys.platform == 'cli':\r\n        @register(_dump_registry, unicode)\r\n        def _dump_unicode(obj, stream):\r\n            try:\r\n                _dump_str(obj.decode('ascii'), stream)\r\n            except UnicodeDecodeError:\r\n                stream.append(TAG_UNICODE)\r\n                _dump_str(obj.encode(\"utf8\"), stream)\r\n    else:\r\n        @register(_dump_registry, unicode)\r\n        def _dump_unicode(obj, stream):\r\n            stream.append(TAG_UNICODE)\r\n            _dump_str(obj.encode(\"utf8\"), stream)\r\n```\r\n\r\nBut this might impact performance, and it might be better to send a flag to the server for when the string should not be considered unicode. However, the question is then to define what should be unicode or not... Another way would be to force the server to convert to `str` before unpickling, but I haven't found a way of doing specifically that.\r\n\r\nI know that IronPython 2 is an almost-dead project that you are not officially supporting, so I'm\u00a0fine if you do not want to include this in the main branch; I just thought I'd let you know. This might have also been what was causing part of #10.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/250", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/250/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/250/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/250/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/250", "id": 285906563, "node_id": "MDU6SXNzdWUyODU5MDY1NjM=", "number": 250, "title": "python 3.6 connect python 2.7 TypeError: 'b'instancemethod'' object is not callable", "user": {"login": "getixin", "id": 20057322, "node_id": "MDQ6VXNlcjIwMDU3MzIy", "avatar_url": "https://avatars3.githubusercontent.com/u/20057322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/getixin", "html_url": "https://github.com/getixin", "followers_url": "https://api.github.com/users/getixin/followers", "following_url": "https://api.github.com/users/getixin/following{/other_user}", "gists_url": "https://api.github.com/users/getixin/gists{/gist_id}", "starred_url": "https://api.github.com/users/getixin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/getixin/subscriptions", "organizations_url": "https://api.github.com/users/getixin/orgs", "repos_url": "https://api.github.com/users/getixin/repos", "events_url": "https://api.github.com/users/getixin/events{/privacy}", "received_events_url": "https://api.github.com/users/getixin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-04T07:56:10Z", "updated_at": "2019-05-14T21:29:02Z", "closed_at": "2018-01-04T09:39:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "##### Environment\r\n\r\n- rpyc version\r\n- python version\r\n- operating system\r\n\r\n\r\n##### Minimal example\r\n\r\nServer:\r\n- python version 2.7.13\r\npython rpyc_classic.py\r\n\r\nClient:\r\n- python version 3.6.2\r\n```python\r\nimport rpyc\r\nc = rpyc.classic.connect(\"xxx\")\r\n```\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Python36\\lib\\site-packages\\rpyc\\utils\\classic.py\", line 68, in connect\r\n    return factory.connect(host, port, SlaveService, ipv6 = ipv6, keepalive = keepalive)\r\n  File \"C:\\Python36\\lib\\site-packages\\rpyc\\utils\\factory.py\", line 91, in connect\r\n    return connect_stream(s, service, config)\r\n  File \"C:\\Python36\\lib\\site-packages\\rpyc\\utils\\factory.py\", line 52, in connect_stream\r\n    return connect_channel(Channel(stream), service = service, config = config)\r\n  File \"C:\\Python36\\lib\\site-packages\\rpyc\\utils\\factory.py\", line 41, in connect_channel\r\n    return Connection(service, channel, config = config)\r\n  File \"C:\\Python36\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 159, in __init__\r\n    self._init_service()\r\n  File \"C:\\Python36\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 164, in _init_service\r\n    self._local_root.on_connect()\r\n  File \"C:\\Python36\\lib\\site-packages\\rpyc\\core\\service.py\", line 147, in on_connect\r\n    self._conn.builtin = self._conn.modules.builtins\r\n  File \"C:\\Python36\\lib\\site-packages\\rpyc\\core\\service.py\", line 118, in __getattr__\r\n    return self[name]\r\n  File \"C:\\Python36\\lib\\site-packages\\rpyc\\core\\service.py\", line 115, in __getitem__\r\n    self.__cache[name] = self.__getmodule(name)\r\nTypeError: 'b'instancemethod'' object is not callable\r\n\r\nThe python version must be the same?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/249", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/249/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/249/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/249", "id": 283993951, "node_id": "MDU6SXNzdWUyODM5OTM5NTE=", "number": 249, "title": "Passing objects across connections", "user": {"login": "skeledrew", "id": 4778481, "node_id": "MDQ6VXNlcjQ3Nzg0ODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4778481?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skeledrew", "html_url": "https://github.com/skeledrew", "followers_url": "https://api.github.com/users/skeledrew/followers", "following_url": "https://api.github.com/users/skeledrew/following{/other_user}", "gists_url": "https://api.github.com/users/skeledrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/skeledrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skeledrew/subscriptions", "organizations_url": "https://api.github.com/users/skeledrew/orgs", "repos_url": "https://api.github.com/users/skeledrew/repos", "events_url": "https://api.github.com/users/skeledrew/events{/privacy}", "received_events_url": "https://api.github.com/users/skeledrew/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-21T20:22:34Z", "updated_at": "2017-12-26T22:11:31Z", "closed_at": "2017-12-26T22:11:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm trying to use rpyc as a memoize framework to hopefully speed up data access (keep in memory instead of reading from disk each time). As such I have implemented the foll. service:\r\n``` python\r\nclass MemoryService(rpyc.Service):\r\n\r\n    def on_connect(self):\r\n        if not '_blob' in globals(): self._blob = {}\r\n\r\n    def on_disconnect(self):\r\n        pass\r\n\r\n    def exposed_blob(self, caller_id, key, data=None):\r\n        if not caller_id or (not caller_id in self._blob and not data): return ValueError('Invalid caller_id')\r\n        if not data: return self._blob[caller_id].get(key, ValueError('Specified key does not exist'))\r\n        if not caller_id in self._blob: self._blob[caller_id] = {}\r\n        self._blob[caller_id][key] = data\r\n        return True\r\n```\r\nbut found that I cannot access the blob across connections, so I tried implementing a new server instead of using ThreadedServer, etc, but it still doesn't help (I imported `server` into `rpyc` as for some reason I can't directly access `rpyc.utils.server`):\r\n``` python\r\nclass SingletonServer(rpyc.server.Server):\r\n    '''\r\n    A server that does everything in a single thread.\r\n    '''\r\n\r\n    def _accept_method(self, sock):\r\n        try:\r\n            self._authenticate_and_serve_client(sock)\r\n\r\n        except Exception as e:\r\n            print('Something broke: ' + repr(e))\r\n```\r\n\r\n- expected result versus actual result\r\n-- I can access the objects I put in the blob fine until I create a new connection, then I get the error that the object isn't present.\r\n- steps to reproduce\r\n-- Add the above classes to a file along with:\r\n``` python\r\nif __name__ == '__main__':\r\n    port = 9998 if len(sys.argv) < 2 else int(sys.argv[1])\r\n    #from rpyc.utils.server import ThreadedServer\r\n\r\n    t = SingletonServer(MemoryService, 'localhost', port=port)\r\n    print('Running MemoryService on port %s. Use Ctrl+C to quit.' % (port))\r\n    t.start()\r\n    print('Killing MemoryService.')\r\n```\r\n-- Start the server\r\n-- Enter into an interpreter:\r\n```>>> import rpyc\r\n>>> c = rpyc.connect('localhost', 9998)\r\n>>> c.root\r\n<__main__.MemoryService object at 0x7f85c613d708>\r\n>>> c.root.blob\r\n<bound method MemoryService.exposed_blob of <__main__.MemoryService object at 0x7f85c613d708>>\r\n>>> c.root.blob('test', 'k')\r\nValueError('Invalid caller_id',)\r\n>>> c.root.blob('test', 'k', 12345)\r\nTrue\r\n>>> c.root.blob('test', 'k')\r\n12345\r\n>>> del c\r\n>>> c = rpyc.connect('localhost', 9998)\r\n>>> c.root.blob('test', 'k')\r\nValueError('Invalid caller_id',)\r\n```\r\n\r\nAny ideas where I'm going wrong? Thanks.\r\n\r\n##### Environment\r\n\r\n- rpyc version 3.4.4\r\n- python version 3.4.5\r\n- operating system \"Linux HSDNLP 2.6.32-696.6.3.el6.x86_64 #1 SMP Wed Jul 12 14:17:22 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\" (output from uname -a)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/244", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/244/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/244/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/244/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/244", "id": 281564856, "node_id": "MDU6SXNzdWUyODE1NjQ4NTY=", "number": 244, "title": "Passing objects to a Service", "user": {"login": "botev", "id": 1889878, "node_id": "MDQ6VXNlcjE4ODk4Nzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1889878?v=4", "gravatar_id": "", "url": "https://api.github.com/users/botev", "html_url": "https://github.com/botev", "followers_url": "https://api.github.com/users/botev/followers", "following_url": "https://api.github.com/users/botev/following{/other_user}", "gists_url": "https://api.github.com/users/botev/gists{/gist_id}", "starred_url": "https://api.github.com/users/botev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/botev/subscriptions", "organizations_url": "https://api.github.com/users/botev/orgs", "repos_url": "https://api.github.com/users/botev/repos", "events_url": "https://api.github.com/users/botev/events{/privacy}", "received_events_url": "https://api.github.com/users/botev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-12-12T22:48:48Z", "updated_at": "2017-12-22T11:40:24Z", "closed_at": "2017-12-21T14:53:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sorry, as this not nesscarily a bug, but currently I did not manage to find anyway of passing an external object to a service, except via global variables.\r\nTechnically I want something like this:\r\n```\r\nclass ClusterService(Service):\r\n    def __init__(self, conn, lock: RLock, cluster: Cluster):\r\n        super(ClusterService, self).__init__(conn)\r\n        self.lock: RLock = lock\r\n        self.cluster: Cluster = cluster\r\n\r\n    def print_stats(self, project, status, print_pool):\r\n        with self.lock:\r\n            self.cluster.print_stats(project, status, print_pool)\r\n\r\n    def submit_job(self, project, name, command, res_file, out_file, err_file, priority=None):\r\n        with self.lock:\r\n            self.cluster.submit_job(project, name, command,\r\n                                    res_file, out_file, err_file, priority)\r\n\r\n    def delete_job(self, project, names_or_uids):\r\n        with self.lock:\r\n            for name_or_uid in names_or_uids:\r\n                self.cluster.delete_job(project, name_or_uid)\r\n```\r\nThe issue is that there is no way to pass a partially constructed object to the `ThreadedServer`. Is there any work around this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/242", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/242/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/242/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/242", "id": 273267565, "node_id": "MDU6SXNzdWUyNzMyNjc1NjU=", "number": 242, "title": "__new__ is in safe_attrs", "user": {"login": "seveirein", "id": 19313590, "node_id": "MDQ6VXNlcjE5MzEzNTkw", "avatar_url": "https://avatars2.githubusercontent.com/u/19313590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seveirein", "html_url": "https://github.com/seveirein", "followers_url": "https://api.github.com/users/seveirein/followers", "following_url": "https://api.github.com/users/seveirein/following{/other_user}", "gists_url": "https://api.github.com/users/seveirein/gists{/gist_id}", "starred_url": "https://api.github.com/users/seveirein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seveirein/subscriptions", "organizations_url": "https://api.github.com/users/seveirein/orgs", "repos_url": "https://api.github.com/users/seveirein/repos", "events_url": "https://api.github.com/users/seveirein/events{/privacy}", "received_events_url": "https://api.github.com/users/seveirein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-12T21:37:08Z", "updated_at": "2017-12-06T10:41:43Z", "closed_at": "2017-12-06T10:41:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "\r\nIf ``__init__`` is not deemed to be a ``safe_attr``, there is no reason to have ``__new__`` as a ``safe_attr``.\r\n\r\nhttps://github.com/tomerfiliba/rpyc/blob/master/rpyc/core/protocol.py#L35\r\n\r\nThis seems like asking for trouble.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/239", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/239/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/239/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/239", "id": 272407670, "node_id": "MDU6SXNzdWUyNzI0MDc2NzA=", "number": 239, "title": "__call__ always accessible, even when not exposed by _rpyc_getattr", "user": {"login": "seveirein", "id": 19313590, "node_id": "MDQ6VXNlcjE5MzEzNTkw", "avatar_url": "https://avatars2.githubusercontent.com/u/19313590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seveirein", "html_url": "https://github.com/seveirein", "followers_url": "https://api.github.com/users/seveirein/followers", "following_url": "https://api.github.com/users/seveirein/following{/other_user}", "gists_url": "https://api.github.com/users/seveirein/gists{/gist_id}", "starred_url": "https://api.github.com/users/seveirein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seveirein/subscriptions", "organizations_url": "https://api.github.com/users/seveirein/orgs", "repos_url": "https://api.github.com/users/seveirein/repos", "events_url": "https://api.github.com/users/seveirein/events{/privacy}", "received_events_url": "https://api.github.com/users/seveirein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-11-09T01:18:30Z", "updated_at": "2017-12-18T11:15:17Z", "closed_at": "2017-12-18T11:15:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "RPYC has no mechanism to preclude access to the python ``__call__`` magic method. \r\n\r\nFetching a ``__call__`` via ``__getattribute__`` on a netref fetches the local netref ``__call__`` function automatically:\r\nhttps://github.com/tomerfiliba/rpyc/blame/master/rpyc/core/netref.py#L148\r\n\r\nThen the ``__call__`` method does a ``syncreq(_self, consts.HANDLE_CALL, args, kwargs)`` directly.\r\nhttps://github.com/tomerfiliba/rpyc/blame/master/rpyc/core/netref.py#L197\r\n\r\nThis is sent on through  the protocol, and there is no checking on either side if the remote ``__call__`` attribute was exposed by ``_rpyc_getattr``.\r\n\r\nSimple test case attached:\r\n[rpyc__call__issue.zip](https://github.com/tomerfiliba/rpyc/files/1455967/rpyc__call__issue.zip)\r\n\r\nUsers of restricted() may get a nasty surprise. As for my own purposes, I am using rpyc and I have created a lot of tools and magic python decorators (which I may want to contribute back to rpyc) to describe security restrictions.\r\n\r\nI have RPYC configured so it doesn't allow ANYTHING to be accessed except via ``_rpyc_getattr``.  I was hoping that would include the ``__call__``'s on class instances, classes themselves, and even function/method references. If there is no way enforce this, I will need to create my own patched fork of rpyc to meet my security model constraints. \r\n\r\nSince this 'hole\" is longstanding, I think the best way to address it is with a new ``protocol_config`` flag that locks down all calling access (unless the ``__call__`` attribute is exposed by ``_rpyc_getattr``).\r\n\r\nI can create a patch myself, but want some feedback from maintainers before I go off and do that.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/238", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/238/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/238/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/238/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/238", "id": 272095022, "node_id": "MDU6SXNzdWUyNzIwOTUwMjI=", "number": 238, "title": "RegistryServer on_service_removed() not called", "user": {"login": "geiranton", "id": 33477650, "node_id": "MDQ6VXNlcjMzNDc3NjUw", "avatar_url": "https://avatars2.githubusercontent.com/u/33477650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geiranton", "html_url": "https://github.com/geiranton", "followers_url": "https://api.github.com/users/geiranton/followers", "following_url": "https://api.github.com/users/geiranton/following{/other_user}", "gists_url": "https://api.github.com/users/geiranton/gists{/gist_id}", "starred_url": "https://api.github.com/users/geiranton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geiranton/subscriptions", "organizations_url": "https://api.github.com/users/geiranton/orgs", "repos_url": "https://api.github.com/users/geiranton/repos", "events_url": "https://api.github.com/users/geiranton/events{/privacy}", "received_events_url": "https://api.github.com/users/geiranton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-11-08T07:09:27Z", "updated_at": "2017-11-11T12:51:38Z", "closed_at": "2017-11-11T12:51:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would expect the on_service_removed() to be called whenever a service instance is removed,just like the add behaviour, but as it is implemented it is called only when all service instances for a service are pop'ed. Is this correct? I would have moved the  self.on_service_removed(name, addrinfo) outside the if.\r\n\r\n\r\n`class RegistryServer .....\r\n\r\n     def _remove_service(self, name, addrinfo):\r\n        \"\"\"removes a single server of the given service\"\"\"\r\n        self.services[name].pop(addrinfo, None)\r\n        if not self.services[name]:\r\n            del self.services[name]\r\n            try:\r\n                self.on_service_removed(name, addrinfo)\r\n            except Exception:\r\n                self.logger.exception('error executing service remove callback')`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/237", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/237/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/237/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/237/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/237", "id": 271866585, "node_id": "MDU6SXNzdWUyNzE4NjY1ODU=", "number": 237, "title": "EOFError Stream has been closed", "user": {"login": "AndyXan", "id": 12801920, "node_id": "MDQ6VXNlcjEyODAxOTIw", "avatar_url": "https://avatars0.githubusercontent.com/u/12801920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndyXan", "html_url": "https://github.com/AndyXan", "followers_url": "https://api.github.com/users/AndyXan/followers", "following_url": "https://api.github.com/users/AndyXan/following{/other_user}", "gists_url": "https://api.github.com/users/AndyXan/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndyXan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndyXan/subscriptions", "organizations_url": "https://api.github.com/users/AndyXan/orgs", "repos_url": "https://api.github.com/users/AndyXan/repos", "events_url": "https://api.github.com/users/AndyXan/events{/privacy}", "received_events_url": "https://api.github.com/users/AndyXan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-11-07T15:13:15Z", "updated_at": "2018-03-07T11:44:38Z", "closed_at": "2018-02-27T14:19:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello rpyc community,\r\n\r\nI am here with more of a question than an issue. The general problem ist that the error I am facing occurs quite randomly in a setup that is not reproducable here. \r\n\r\nThe short description is: I'm using a OneShotServer in an application, more detailed - The OneShotServer is running inside the IDA-Pro-Python (Python 2.7, rpyc 3.4.4) environment and exports the common ida modules. The client application uses those exported modules. Single-Threaded, only one connection over localhost (Python 2.7, rpyc 3.4.4)\r\n\r\nThis process worked so far and still does. However, recently I switched to pypy and since that change, at random events (sometimes after 5 minutes, sometimes after 10 or 15), suddenly an \"EOFError: Stream has been closed\" exception occurs - accordingly to the stacktrace among the execution path of syncrequest. Completely random, at different module calls and different times.\r\n\r\nSo, basically the only thing that changed during the transition to pypy is, well, the requests reaching the OneShotServer are coming faster. Approx. a 1000-times faster or even more than that. So, we're talking about several million rpc-invokes per hour, done over localhost. \r\n\r\nThe question now is: How does the OneShotServer react under such loads, can this be the source of EOFError Stream has been closed error and if yes, what could I possibly do about it despite \"sleep\" on client side?\r\n\r\nSome thoughts on this are very much appreciated. \r\nBest Regards, \r\nAndreas", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/236", "repository_url": "https://api.github.com/repos/tomerfiliba/rpyc", "labels_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/236/comments", "events_url": "https://api.github.com/repos/tomerfiliba/rpyc/issues/236/events", "html_url": "https://github.com/tomerfiliba/rpyc/issues/236", "id": 271050823, "node_id": "MDU6SXNzdWUyNzEwNTA4MjM=", "number": 236, "title": "Trouble accessing remote numpy objects", "user": {"login": "joshStillerman", "id": 7458917, "node_id": "MDQ6VXNlcjc0NTg5MTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7458917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshStillerman", "html_url": "https://github.com/joshStillerman", "followers_url": "https://api.github.com/users/joshStillerman/followers", "following_url": "https://api.github.com/users/joshStillerman/following{/other_user}", "gists_url": "https://api.github.com/users/joshStillerman/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshStillerman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshStillerman/subscriptions", "organizations_url": "https://api.github.com/users/joshStillerman/orgs", "repos_url": "https://api.github.com/users/joshStillerman/repos", "events_url": "https://api.github.com/users/joshStillerman/events{/privacy}", "received_events_url": "https://api.github.com/users/joshStillerman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-11-03T17:06:19Z", "updated_at": "2018-02-19T10:21:16Z", "closed_at": "2017-12-22T17:07:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using Python 2.7\r\nNumpy '1.7.1'\r\nrpyc (3, 4, 4)\r\n\r\nI am using rpyc.classic.connect\r\nI also tried using rpyc.utils.zerodeploy, with the same results.\r\n\r\nI have a remote object d\r\n```\r\nHelp on ndarray in module numpy object:\r\n\r\nclass ndarray(rpyc.core.netref.BaseNetref)\r\n |  Method resolution order:\r\n |      ndarray\r\n |      rpyc.core.netref.BaseNetref\r\n |      __builtin__.object\r\n |  \r\n |  Methods defined here:\r\n |  \r\n |  __abs__(_self, *args, **kwargs)\r\n |      x.__abs__() <==> abs(x)\r\n |  \r\n |  __add__(_self, *args, **kwargs)\r\n...\r\n```\r\nIf I try to plot it, or make a local numpy array from it I get an error:\r\n```\r\n>>> dd = np.array(d)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nValueError: invalid __array_struct__\r\n>>> \r\n```\r\nI can get it to segfault by typing: (actually this time it choked on a double free)\r\n```\r\n>>> help(d.__array_struct__)\r\n*** Error in `python': double free or corruption (!prev): 0x0000000001a44920 ***\r\n======= Backtrace: =========\r\n/lib64/libc.so.6(+0x7c619)[0x7f8e0cc70619]\r\n/lib64/libpython2.7.so.1.0(+0x9da63)[0x7f8e0d979a63]\r\n/lib64/libpython2.7.so.1.0(+0x6f282)[0x7f8e0d94b282]\r\n/lib64/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x67d9)[0x7f8e0d9c0599]\r\n/lib64/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x7ed)[0x7f8e0d9c2efd]\r\n/lib64/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x663c)[0x7f8e0d9c03fc]\r\n/lib64/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x67bd)[0x7f8e0d9c057d]\r\n/lib64/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x67bd)[0x7f8e0d9c057d]\r\n/lib64/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x67bd)[0x7f8e0d9c057d]\r\n/lib64/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x7ed)[0x7f8e0d9c2efd]\r\n/lib64/libpython2.7.so.1.0(+0x70858)[0x7f8e0d94c858]\r\n/lib64/libpython2.7.so.1.0(PyObject_Call+0x43)[0x7f8e0d9279a3]\r\n/lib64/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x17fd)[0x7f8e0d9bb5bd]\r\n/lib64/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x7ed)[0x7f8e0d9c2efd]\r\n/lib64/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x663c)[0x7f8e0d9c03fc]\r\n/lib64/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x67bd)[0x7f8e0d9c057d]\r\n/lib64/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x7ed)[0x7f8e0d9c2efd]\r\n/lib64/libpython2.7.so.1.0(+0x70858)[0x7f8e0d94c858]\r\n/lib64/libpython2.7.so.1.0(PyObject_Call+0x43)[0x7f8e0d9279a3]\r\n/lib64/libpython2.7.so.1.0(+0x5a995)[0x7f8e0d936995]\r\n/lib64/libpython2.7.so.1.0(PyObject_Call+0x43)[0x7f8e0d9279a3]\r\n/lib64/libpython2.7.so.1.0(PyObject_CallFunctionObjArgs+0xbc)[0x7f8e0d92829c]\r\n/lib64/libpython2.7.so.1.0(+0x9e2bf)[0x7f8e0d97a2bf]\r\n/lib64/libpython2.7.so.1.0(+0xa5183)[0x7f8e0d981183]\r\n/lib64/libpython2.7.so.1.0(+0x484fe)[0x7f8e0d9244fe]\r\n/lib64/libpython2.7.so.1.0(+0xa0a72)[0x7f8e0d97ca72]\r\n/lib64/libpython2.7.so.1.0(PyObject_Call+0x43)[0x7f8e0d9279a3]\r\n/lib64/libpython2.7.so.1.0(PyObject_CallFunctionObjArgs+0xbc)[0x7f8e0d92829c]\r\n/lib64/libpython2.7.so.1.0(PyObject_IsInstance+0x12f)[0x7f8e0d92889f]\r\n/lib64/libpython2.7.so.1.0(+0xd9b3a)[0x7f8e0d9b5b3a]\r\n/lib64/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x6df0)[0x7f8e0d9c0bb0]\r\n/lib64/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x7ed)[0x7f8e0d9c2efd]\r\n/lib64/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x663c)[0x7f8e0d9c03fc]\r\n/lib64/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x7ed)[0x7f8e0d9c2efd]\r\n/lib64/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x663c)[0x7f8e0d9c03fc]\r\n/lib64/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x7ed)[0x7f8e0d9c2efd]\r\n/lib64/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x663c)[0x7f8e0d9c03fc]\r\n/lib64/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x67bd)[0x7f8e0d9c057d]\r\n/lib64/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x7ed)[0x7f8e0d9c2efd]\r\n/lib64/libpython2.7.so.1.0(+0x7094d)[0x7f8e0d94c94d]\r\n/lib64/libpython2.7.so.1.0(PyObject_Call+0x43)[0x7f8e0d9279a3]\r\n/lib64/libpython2.7.so.1.0(+0x5a995)[0x7f8e0d936995]\r\n/lib64/libpython2.7.so.1.0(PyObject_Call+0x43)[0x7f8e0d9279a3]\r\n/lib64/libpython2.7.so.1.0(+0x56d38)[0x7f8e0d932d38]\r\n/lib64/libpython2.7.so.1.0(PyObject_Call+0x43)[0x7f8e0d9279a3]\r\n/lib64/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x17fd)[0x7f8e0d9bb5bd]\r\n/lib64/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x7ed)[0x7f8e0d9c2efd]\r\n/lib64/libpython2.7.so.1.0(+0x70858)[0x7f8e0d94c858]\r\n/lib64/libpython2.7.so.1.0(PyObject_Call+0x43)[0x7f8e0d9279a3]\r\n/lib64/libpython2.7.so.1.0(+0x5a995)[0x7f8e0d936995]\r\n/lib64/libpython2.7.so.1.0(PyObject_Call+0x43)[0x7f8e0d9279a3]\r\n/lib64/libpython2.7.so.1.0(+0xa2ce7)[0x7f8e0d97ece7]\r\n/lib64/libpython2.7.so.1.0(PyObject_Call+0x43)[0x7f8e0d9279a3]\r\n/lib64/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x2336)[0x7f8e0d9bc0f6]\r\n/lib64/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x7ed)[0x7f8e0d9c2efd]\r\n/lib64/libpython2.7.so.1.0(PyEval_EvalCode+0x32)[0x7f8e0d9c3002]\r\n/lib64/libpython2.7.so.1.0(+0x10043f)[0x7f8e0d9dc43f]\r\n/lib64/libpython2.7.so.1.0(PyRun_InteractiveOneFlags+0x150)[0x7f8e0d9de4f0]\r\n/lib64/libpython2.7.so.1.0(PyRun_InteractiveLoopFlags+0x5e)[0x7f8e0d9de6de]\r\n/lib64/libpython2.7.so.1.0(PyRun_AnyFileExFlags+0x3e)[0x7f8e0d9ded6e]\r\n/lib64/libpython2.7.so.1.0(Py_Main+0xc9f)[0x7f8e0d9efa3f]\r\n/lib64/libc.so.6(__libc_start_main+0xf5)[0x7f8e0cc15c05]\r\npython[0x40071e]\r\n======= Memory map: ========\r\n00400000-00401000 r-xp 00000000 fd:00 178051                             /usr/bin/python2.7\r\n00600000-00601000 r--p 00000000 fd:00 178051                             /usr/bin/python2.7\r\n00601000-00602000 rw-p 00001000 fd:00 178051                             /usr/bin/python2.7\r\n00d7b000-01c21000 rw-p 00000000 00:00 0                                  [heap]\r\n7f8df4000000-7f8df4021000 rw-p 00000000 00:00 0 \r\n7f8df4021000-7f8df8000000 ---p 00000000 00:00 0 \r\n7f8dfb6ff000-7f8dfb70e000 r-xp 00000000 fd:00 33603078                   /usr/lib64/libbz2.so.1.0.6\r\n7f8dfb70e000-7f8dfb90d000 ---p 0000f000 fd:00 33603078                   /usr/lib64/libbz2.so.1.0.6\r\n7f8dfb90d000-7f8dfb90e000 r--p 0000e000 fd:00 33603078                   /usr/lib64/libbz2.so.1.0.6\r\n7f8dfb90e000-7f8dfb90f000 rw-p 0000f000 fd:00 33603078                   /usr/lib64/libbz2.so.1.0.6\r\n7f8dfb90f000-7f8dfb926000 r-xp 00000000 fd:00 33603209                   /usr/lib64/libelf-0.168.so\r\n7f8dfb926000-7f8dfbb25000 ---p 00017000 fd:00 33603209                   /usr/lib64/libelf-0.168.so\r\n7f8dfbb25000-7f8dfbb26000 r--p 00016000 fd:00 33603209                   /usr/lib64/libelf-0.168.so\r\n7f8dfbb26000-7f8dfbb27000 rw-p 00017000 fd:00 33603209                   /usr/lib64/libelf-0.168.so\r\n7f8dfbb27000-7f8dfbb2b000 r-xp 00000000 fd:00 33603259                   /usr/lib64/libattr.so.1.1.0\r\n7f8dfbb2b000-7f8dfbd2a000 ---p 00004000 fd:00 33603259                   /usr/lib64/libattr.so.1.1.0\r\n7f8dfbd2a000-7f8dfbd2b000 r--p 00003000 fd:00 33603259                   /usr/lib64/libattr.so.1.1.0\r\n7f8dfbd2b000-7f8dfbd2c000 rw-p 00004000 fd:00 33603259                   /usr/lib64/libattr.so.1.1.0\r\n7f8dfbd2c000-7f8dfbd70000 r-xp 00000000 fd:00 33721523                   /usr/lib64/libdw-0.168.so\r\n7f8dfbd70000-7f8dfbf70000 ---p 00044000 fd:00 33721523                   /usr/lib64/libdw-0.168.so\r\n7f8dfbf70000-7f8dfbf72000 r--p 00044000 fd:00 33721523                   /usr/lib64/libdw-0.168.so\r\n7f8dfbf72000-7f8dfbf73000 rw-p 00046000 fd:00 33721523                   /usr/lib64/libdw-0.168.so\r\n7f8dfbf73000-7f8dfbf77000 r-xp 00000000 fd:00 33603115                   /usr/lib64/libgpg-error.so.0.10.0\r\n7f8dfbf77000-7f8dfc176000 ---p 00004000 fd:00 33603115                   /usr/lib64/libgpg-error.so.0.10.0\r\n7f8dfc176000-7f8dfc177000 r--p 00003000 fd:00 33603115                   /usr/lib64/libgpg-error.so.0.10.0\r\n7f8dfc177000-7f8dfc178000 rw-p 00004000 fd:00 33603115                   /usr/lib64/libgpg-error.so.0.10.0\r\n7f8dfc178000-7f8dfc1f5000 r-xp 00000000 fd:00 33603133                   /usr/lib64/libgcrypt.so.11.8.2\r\n7f8dfc1f5000-7f8dfc3f4000 ---p 0007d000 fd:00 33603133                   /usr/lib64/libgcrypt.so.11.8.2\r\n7f8dfc3f4000-7f8dfc3f5000 r--p 0007c000 fd:00 33603133                   /usr/lib64/libgcrypt.so.11.8.2\r\n7f8dfc3f5000-7f8dfc3f8000 rw-p 0007d000 fd:00 33603133                   /usr/lib64/libgcrypt.so.11.8.2\r\n7f8dfc3f8000-7f8dfc3f9000 rw-p 00000000 00:00 0 Aborted (core dumped)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}]}