{"total_count": 176, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/mhammond/pywin32/issues/1570", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1570/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1570/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1570/events", "html_url": "https://github.com/mhammond/pywin32/issues/1570", "id": 674206990, "node_id": "MDU6SXNzdWU2NzQyMDY5OTA=", "number": 1570, "title": "ReadProcessMemory error (0xC0000005)", "user": {"login": "NULL-777", "id": 39430317, "node_id": "MDQ6VXNlcjM5NDMwMzE3", "avatar_url": "https://avatars2.githubusercontent.com/u/39430317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NULL-777", "html_url": "https://github.com/NULL-777", "followers_url": "https://api.github.com/users/NULL-777/followers", "following_url": "https://api.github.com/users/NULL-777/following{/other_user}", "gists_url": "https://api.github.com/users/NULL-777/gists{/gist_id}", "starred_url": "https://api.github.com/users/NULL-777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NULL-777/subscriptions", "organizations_url": "https://api.github.com/users/NULL-777/orgs", "repos_url": "https://api.github.com/users/NULL-777/repos", "events_url": "https://api.github.com/users/NULL-777/events{/privacy}", "received_events_url": "https://api.github.com/users/NULL-777/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-06T10:29:09Z", "updated_at": "2020-08-06T22:27:31Z", "closed_at": "2020-08-06T22:27:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I try to use ReadProcessMemory function to get a value.\r\nBut I got error code with 0xC0000005.\r\nCould mhammond write an example to show how to use him?\r\n\r\nMy code:\r\nthreadID, pID = win32process.GetWindowThreadProcessId(hwndWindow)\r\nhwndProcess = win32api.OpenProcess(win32con.PROCESS_ALL_ACCESS, 0, pID)\r\nprint(win32process.ReadProcessMemory(hwndProcess, 0x26B30850AEC, 4))", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1565", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1565/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1565/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1565/events", "html_url": "https://github.com/mhammond/pywin32/issues/1565", "id": 666223492, "node_id": "MDU6SXNzdWU2NjYyMjM0OTI=", "number": 1565, "title": "availability to register x64 COM servers", "user": {"login": "slovj5", "id": 22231224, "node_id": "MDQ6VXNlcjIyMjMxMjI0", "avatar_url": "https://avatars2.githubusercontent.com/u/22231224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slovj5", "html_url": "https://github.com/slovj5", "followers_url": "https://api.github.com/users/slovj5/followers", "following_url": "https://api.github.com/users/slovj5/following{/other_user}", "gists_url": "https://api.github.com/users/slovj5/gists{/gist_id}", "starred_url": "https://api.github.com/users/slovj5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slovj5/subscriptions", "organizations_url": "https://api.github.com/users/slovj5/orgs", "repos_url": "https://api.github.com/users/slovj5/repos", "events_url": "https://api.github.com/users/slovj5/events{/privacy}", "received_events_url": "https://api.github.com/users/slovj5/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2020-07-27T11:32:52Z", "updated_at": "2020-07-29T04:41:56Z", "closed_at": "2020-07-29T04:35:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could you please add functionality to register x64 COM classes? Now it's working good in my 32-bit application, but in 64-bit com object creation method returns -2147221164(0x80040154): Class not registered", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1563", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1563/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1563/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1563/events", "html_url": "https://github.com/mhammond/pywin32/issues/1563", "id": 663472814, "node_id": "MDU6SXNzdWU2NjM0NzI4MTQ=", "number": 1563, "title": "[Feature Request] Option to terminate Service and trigger recovery actions", "user": {"login": "LincolnPuzey", "id": 18750802, "node_id": "MDQ6VXNlcjE4NzUwODAy", "avatar_url": "https://avatars3.githubusercontent.com/u/18750802?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LincolnPuzey", "html_url": "https://github.com/LincolnPuzey", "followers_url": "https://api.github.com/users/LincolnPuzey/followers", "following_url": "https://api.github.com/users/LincolnPuzey/following{/other_user}", "gists_url": "https://api.github.com/users/LincolnPuzey/gists{/gist_id}", "starred_url": "https://api.github.com/users/LincolnPuzey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LincolnPuzey/subscriptions", "organizations_url": "https://api.github.com/users/LincolnPuzey/orgs", "repos_url": "https://api.github.com/users/LincolnPuzey/repos", "events_url": "https://api.github.com/users/LincolnPuzey/events{/privacy}", "received_events_url": "https://api.github.com/users/LincolnPuzey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-07-22T04:53:48Z", "updated_at": "2020-08-21T01:21:45Z", "closed_at": "2020-08-21T01:19:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am using the `win32serviceutil.ServiceFramework` class to write a Windows Service.\r\n\r\nI have a use-case where I would like my service to terminate in such a way that the recovery actions (e.g. restart service) are triggered.\r\n\r\nBy default these recovery actions are triggered when the service terminates without reporting a status of `SERVICE_STOPPED`.\r\n\r\nI have tried overriding `svcRun` and raising an exception or calling `sys.exit()`, eg\r\n\r\n    def SvcRun(self):\r\n        self.ReportServiceStatus(win32service.SERVICE_RUNNING)\r\n\r\n        # ideally this would cause the service process to end without any further calls to SetServiceStatus(),\r\n        # so the recovery actions are triggered.\r\n        raise Exception()\r\n\r\nbut pywin32 sets the service status to `SERVICE_STOPPED` in its cleanup actions after calling `SvcRun`.\r\nhttps://github.com/mhammond/pywin32/blob/master/win32/src/PythonService.cpp#L907\r\n\r\nIdeally there would be some way for `SvcRun` to flag that this cleanup should not be done.\r\n\r\nMy current workaround is to call `os.kill(os.getpid(), signal.SIGABRT)`, which avoids the cleanup. But I would like to avoid such a nuclear option.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1553", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1553/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1553/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1553/events", "html_url": "https://github.com/mhammond/pywin32/issues/1553", "id": 652403988, "node_id": "MDU6SXNzdWU2NTI0MDM5ODg=", "number": 1553, "title": "SyntaxError: invalid syntax   /  IndentationError: unexpected indent", "user": {"login": "DomingosCostateste", "id": 67967140, "node_id": "MDQ6VXNlcjY3OTY3MTQw", "avatar_url": "https://avatars0.githubusercontent.com/u/67967140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DomingosCostateste", "html_url": "https://github.com/DomingosCostateste", "followers_url": "https://api.github.com/users/DomingosCostateste/followers", "following_url": "https://api.github.com/users/DomingosCostateste/following{/other_user}", "gists_url": "https://api.github.com/users/DomingosCostateste/gists{/gist_id}", "starred_url": "https://api.github.com/users/DomingosCostateste/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DomingosCostateste/subscriptions", "organizations_url": "https://api.github.com/users/DomingosCostateste/orgs", "repos_url": "https://api.github.com/users/DomingosCostateste/repos", "events_url": "https://api.github.com/users/DomingosCostateste/events{/privacy}", "received_events_url": "https://api.github.com/users/DomingosCostateste/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-07T15:11:12Z", "updated_at": "2020-07-07T22:47:04Z", "closed_at": "2020-07-07T22:47:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am having this bug which im not understand why is that.   \r\n\r\n\r\nPython version:  Python 3.8 (32-Bit) \r\nExtension: pywin32-228.win32-py3.8.exe\r\n\r\n\r\n>>> import win32com.client as win32\r\n>>> import os\r\n>>>\r\n>>> myDir = r'C:\\Users\\Utilizador\\Desktop\\Empresa\\ABB\\Power grid\\Rodrigo\\teste'\r\n>>> XL = win32.Dispatch('Excel.Application')\r\n>>> XL.Visible = 0\r\n>>>\r\n>>> XLbook = XL.Workbooks.Open(os.path.join(myDir,'Rodrigo_Spreadsheet.xlsx'))\r\n>>> XLsheet = XLbook.Worksheets(1)\r\n>>> XLrow = 2\r\n>>> for myFile in os.listdir(myDir):\r\n...  filepath = os.path.join(myDir,myFile)\r\n...  filename = os.path.splitext(myFile)[0]\r\n...  ext = os.path.splitext(myFile)[1]\r\n...\r\n>>> if ext == '.docx'\r\n  File \"<stdin>\", line 1\r\n    if ext == '.docx'\r\n                    ^\r\nSyntaxError: invalid syntax\r\n>>>  word = win32.Dispatch('Word.Application')\r\n  File \"<stdin>\", line 1\r\n    word = win32.Dispatch('Word.Application')\r\n    ^\r\nIndentationError: unexpected indent\r\n>>>  word.Visible = 0\r\n  File \"<stdin>\", line 1\r\n    word.Visible = 0\r\n    ^\r\nIndentationError: unexpected indent\r\n>>> pywin32-228.win32-py3.8.exe\r\n  File \"<stdin>\", line 1\r\n    pywin32-228.win32-py3.8.exe\r\n                ^\r\nSyntaxError: invalid syntax\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1548", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1548/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1548/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1548/events", "html_url": "https://github.com/mhammond/pywin32/issues/1548", "id": 647669200, "node_id": "MDU6SXNzdWU2NDc2NjkyMDA=", "number": 1548, "title": "Exception thrown inconsistently while calling VisualReportsEdit() on MS Project application", "user": {"login": "gavinhailey-sunriselabs", "id": 59024158, "node_id": "MDQ6VXNlcjU5MDI0MTU4", "avatar_url": "https://avatars3.githubusercontent.com/u/59024158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gavinhailey-sunriselabs", "html_url": "https://github.com/gavinhailey-sunriselabs", "followers_url": "https://api.github.com/users/gavinhailey-sunriselabs/followers", "following_url": "https://api.github.com/users/gavinhailey-sunriselabs/following{/other_user}", "gists_url": "https://api.github.com/users/gavinhailey-sunriselabs/gists{/gist_id}", "starred_url": "https://api.github.com/users/gavinhailey-sunriselabs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gavinhailey-sunriselabs/subscriptions", "organizations_url": "https://api.github.com/users/gavinhailey-sunriselabs/orgs", "repos_url": "https://api.github.com/users/gavinhailey-sunriselabs/repos", "events_url": "https://api.github.com/users/gavinhailey-sunriselabs/events{/privacy}", "received_events_url": "https://api.github.com/users/gavinhailey-sunriselabs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-29T21:05:44Z", "updated_at": "2020-06-29T23:18:30Z", "closed_at": "2020-06-29T23:18:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Expected behavior:\r\nMS Project generates the visual report and opens it in excel.\r\nActual behavior:\r\nException thrown sometimes, successfully generates in 1 of every 10 tries or so.\r\n\r\nCode:\r\n```\r\nimport win32com.client as win32\r\n\r\n\r\nclass MSProject:\r\n    def __init__(self):\r\n        self.mpp = win32.gencache.EnsureDispatch('MSProject.Application')\r\n        self.Project = None\r\n        self.mpp.Visible = 0\r\n\r\n    def load(self, doc):\r\n        try:\r\n            self.mpp.FileOpen(doc)\r\n            self.Project = self.mpp.ActiveProject\r\n        except Exception as e:\r\n            print(\"Error opening file\", e)\r\n\r\n    def save(self):\r\n        self.mpp.FileSave()\r\n        self.mpp.Quit()\r\n\r\n    def create_resource_usage_report(self):\r\n        self.mpp.OptionsSchedule(DurationUnits=5, WorkUnits=5)\r\n        self.mpp.FileSave()\r\n        templates = self.mpp.VisualReportTemplateList\r\n        template_path = templates.Item(10).TemplatePath\r\n        self.mpp.VisualReportsEdit(template_path)\r\n\r\n\r\ndef main(doc):\r\n    project = MSProject()\r\n    project.__init__()\r\n    project.load(doc)\r\n    project.create_resource_usage_report()\r\n```\r\n\r\nException:\r\n`Traceback (most recent call last):\r\n  File \"C:/Users/ghailey/python/MicrosoftProjectExport/generate_usage_report.py\", line 42, in <module>\r\n    main('C:\\\\Users\\\\ghailey\\\\Downloads\\\\AIO200529-pln-v00c  Retinopathy imager Phase 0 Plan for proposal.mpp')\r\n  File \"C:/Users/ghailey/python/MicrosoftProjectExport/generate_usage_report.py\", line 35, in main\r\n    project.create_resource_usage_report()\r\n  File \"C:/Users/ghailey/python/MicrosoftProjectExport/generate_usage_report.py\", line 27, in create_resource_usage_report\r\n    self.mpp.VisualReportsEdit(template_path)\r\n  File \"C:\\Users\\ghailey\\AppData\\Local\\Temp\\gen_py\\3.8\\A7107640-94DF-1068-855E-00DD01075445x0x4x9\\_MSProject.py\", line 3087, in VisualReportsEdit\r\n    return self._oleobj_.InvokeTypes(2143, LCID, 1, (11, 0), ((12, 16), (3, 48)),strVisualReportTemplateFile\r\npywintypes.com_error: (-2147352567, 'Exception occurred.', (1004, 'Microsoft Project', 'An unexpected error occurred with the method.', 'C:\\\\Program Files\\\\Microsoft Office\\\\Root\\\\Office16\\\\VBAPJ.CHM\\x00', 131072, 0), None)`\r\n\r\nPython: v3.8.3\r\npywin32: v228\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1546", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1546/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1546/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1546/events", "html_url": "https://github.com/mhammond/pywin32/issues/1546", "id": 645859073, "node_id": "MDU6SXNzdWU2NDU4NTkwNzM=", "number": 1546, "title": "PyTime is missing many attributes (like tzinfo) on Python 2", "user": {"login": "ofek", "id": 9677399, "node_id": "MDQ6VXNlcjk2NzczOTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/9677399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ofek", "html_url": "https://github.com/ofek", "followers_url": "https://api.github.com/users/ofek/followers", "following_url": "https://api.github.com/users/ofek/following{/other_user}", "gists_url": "https://api.github.com/users/ofek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ofek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ofek/subscriptions", "organizations_url": "https://api.github.com/users/ofek/orgs", "repos_url": "https://api.github.com/users/ofek/repos", "events_url": "https://api.github.com/users/ofek/events{/privacy}", "received_events_url": "https://api.github.com/users/ofek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-25T21:22:15Z", "updated_at": "2020-06-25T23:12:23Z", "closed_at": "2020-06-25T23:07:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* Steps to reproduce the problem.\r\n\r\nThis demo fails https://github.com/mhammond/pywin32/blob/master/win32/Demos/EvtFormatMessage.py\r\n\r\nYou can also add:\r\n\r\n```python\r\n        time_value, time_variant = result[win32evtlog.EvtSystemTimeCreated]\r\n        if time_variant != win32evtlog.EvtVarTypeNull:\r\n            print(dir(time_value))\r\n```\r\n\r\n* Version of Python and pywin32\r\n\r\nPython 2.7\r\nv228", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1544", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1544/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1544/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1544/events", "html_url": "https://github.com/mhammond/pywin32/issues/1544", "id": 644331422, "node_id": "MDU6SXNzdWU2NDQzMzE0MjI=", "number": 1544, "title": "Different behavior when running from * .exe or * .py", "user": {"login": "AndreiRadac", "id": 33694446, "node_id": "MDQ6VXNlcjMzNjk0NDQ2", "avatar_url": "https://avatars2.githubusercontent.com/u/33694446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreiRadac", "html_url": "https://github.com/AndreiRadac", "followers_url": "https://api.github.com/users/AndreiRadac/followers", "following_url": "https://api.github.com/users/AndreiRadac/following{/other_user}", "gists_url": "https://api.github.com/users/AndreiRadac/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreiRadac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreiRadac/subscriptions", "organizations_url": "https://api.github.com/users/AndreiRadac/orgs", "repos_url": "https://api.github.com/users/AndreiRadac/repos", "events_url": "https://api.github.com/users/AndreiRadac/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreiRadac/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-06-24T05:32:57Z", "updated_at": "2020-06-24T12:06:46Z", "closed_at": "2020-06-24T12:06:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a Python project developed by a colleague, in which pywin32  is used to control the application: CANoe from Vector.\r\n\r\nWhen he is running the *.py script from PyCharm (2019.2.5) everything is ok, if he used auto-py-to-exe to convert the python script to *.exe, and then he executes the *.exe everything is ok, in both cases the script is working perfectly fine.\r\n\r\nNow the problem is the following: if I'm trying to run the *.py script from PyCharm (2020.1.2) the module pywin32 is throwing an exception:\r\nraise AttributeError(\"'%s' object has no attribute '%s'\" % (repr(self), attr))AttributeError: '<win32com.gen_py.CANoe 11.0 Type Library.ITestEnvironment instance at 0x2039251561776>' object has no attribute 'TestModules'\r\n\r\nFrom what I checked the COM Library has 2 dispinterface: ITestEnvironment and ITestEnvironment2, and only ITestEnvironment2 has the attribute TestModules, and it seems that in my case somehow the script is not considering the correct interface.\r\n\r\nIf I use auto-py-to-exe to convert the python script to *.exe, and then execute the *.exe, everything works perfectly fine. If he converts the script to *.exe and then I run it on my PC, or I convert locally the script to *.exe and run it on my PC, in both cases the output of the script is the same.\r\n\r\nI tried:\r\n- Install the same PyCharm version as he uses- Run the code from Visual Studio 2017- Update pywin32 to latest version (228)\r\nin all the cases the result is the same.\r\n\r\nI'm using the same Python version as he uses: Py 3.6.7.\r\nDose anyone know why pywin32 has different behavior when running from * .exe or * .py, and also why it has different behavior on different PCs ?\r\n\r\nP.S: I posted the same question also on the mailing list, but I didn't received any answer, maybe here someone can help.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1538", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1538/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1538/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1538/events", "html_url": "https://github.com/mhammond/pywin32/issues/1538", "id": 641906274, "node_id": "MDU6SXNzdWU2NDE5MDYyNzQ=", "number": 1538, "title": "word.CentimetersToPoints(1.1)  fails", "user": {"login": "retsyo", "id": 7960913, "node_id": "MDQ6VXNlcjc5NjA5MTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/7960913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retsyo", "html_url": "https://github.com/retsyo", "followers_url": "https://api.github.com/users/retsyo/followers", "following_url": "https://api.github.com/users/retsyo/following{/other_user}", "gists_url": "https://api.github.com/users/retsyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/retsyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retsyo/subscriptions", "organizations_url": "https://api.github.com/users/retsyo/orgs", "repos_url": "https://api.github.com/users/retsyo/repos", "events_url": "https://api.github.com/users/retsyo/events{/privacy}", "received_events_url": "https://api.github.com/users/retsyo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-19T11:34:56Z", "updated_at": "2020-06-22T22:09:49Z", "closed_at": "2020-06-22T22:09:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I met this problem on word 2019 on win 10 64 bits\r\n1. there is `word.CentimetersToPoints`\r\n2. but `word.CentimetersToPoints(1.1)`  crashes the program\r\n\r\nso I searched and found [post from 2001](http://computer-programming-forum.com/56-python/83ed3e3767f78add.htm)\r\n\r\nwhat is the suggested solution today? thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1536", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1536/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1536/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1536/events", "html_url": "https://github.com/mhammond/pywin32/issues/1536", "id": 638896876, "node_id": "MDU6SXNzdWU2Mzg4OTY4NzY=", "number": 1536, "title": "Feature: pythoncom, \"Schedule.Service\" and Principal2 (IPrincipal2)", "user": {"login": "quentinhardy", "id": 6815593, "node_id": "MDQ6VXNlcjY4MTU1OTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6815593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quentinhardy", "html_url": "https://github.com/quentinhardy", "followers_url": "https://api.github.com/users/quentinhardy/followers", "following_url": "https://api.github.com/users/quentinhardy/following{/other_user}", "gists_url": "https://api.github.com/users/quentinhardy/gists{/gist_id}", "starred_url": "https://api.github.com/users/quentinhardy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quentinhardy/subscriptions", "organizations_url": "https://api.github.com/users/quentinhardy/orgs", "repos_url": "https://api.github.com/users/quentinhardy/repos", "events_url": "https://api.github.com/users/quentinhardy/events{/privacy}", "received_events_url": "https://api.github.com/users/quentinhardy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-15T14:25:11Z", "updated_at": "2020-06-17T17:01:20Z", "closed_at": "2020-06-17T17:01:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nIt seems the _IPrincipal2_ interface (https://docs.microsoft.com/is-is/windows/win32/api/taskschd/nn-taskschd-iprincipal2) is missing from **Scheduled Task** service.\r\n\r\nFor example, with the following code, you can get/set _Principal_ (https://docs.microsoft.com/is-is/windows/win32/api/taskschd/nn-taskschd-iprincipal) of a scheduled task:\r\n\r\n```python\r\n[...]\r\nservice = win32com.client.Dispatch(\"Schedule.Service\")\r\nservice.Connect()\r\nrootFolder = service.GetFolder(location)\r\ntaskDefinition = service.NewTask(0)\r\nregInfo = taskDefinition.RegistrationInfo\r\n[...]\r\nprincipal = taskDefinition.Principal\r\nprincipal.LogonType = logonType\r\n[...]\r\n```\r\n\r\nHowever, I have not found a method for accessing to Principal2 for _AddRequiredPrivilege(_) for example.\r\n\r\nI would like to do something like that (pseudo code):\r\n```C++\r\nIPrincipal2* pP2 = NULL;\r\n pPrincipal->QueryInterface(IID_IPrincipal2, (void**)&pP2)\r\n```\r\n\r\nDo you have an idea for accessing to principal2?\r\n\r\nGUID of _IPrincipal2_ : {248919AE-E345-4A6D-8AEB-E0D3165C904E}\r\n\r\nThank you in advance for your help,\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1531", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1531/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1531/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1531/events", "html_url": "https://github.com/mhammond/pywin32/issues/1531", "id": 631659686, "node_id": "MDU6SXNzdWU2MzE2NTk2ODY=", "number": 1531, "title": "Ishell issues in threading", "user": {"login": "dhutter", "id": 22098484, "node_id": "MDQ6VXNlcjIyMDk4NDg0", "avatar_url": "https://avatars2.githubusercontent.com/u/22098484?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhutter", "html_url": "https://github.com/dhutter", "followers_url": "https://api.github.com/users/dhutter/followers", "following_url": "https://api.github.com/users/dhutter/following{/other_user}", "gists_url": "https://api.github.com/users/dhutter/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhutter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhutter/subscriptions", "organizations_url": "https://api.github.com/users/dhutter/orgs", "repos_url": "https://api.github.com/users/dhutter/repos", "events_url": "https://api.github.com/users/dhutter/events{/privacy}", "received_events_url": "https://api.github.com/users/dhutter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-05T14:53:07Z", "updated_at": "2020-06-09T00:37:18Z", "closed_at": "2020-06-09T00:36:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given the following small function\r\n\r\n```\r\n def` testdevices ():\r\n     topshell = shell.SHGetDesktopFolder()\r\n     drives_pidl = shell.SHGetSpecialFolderLocation(0, shellcon.CSIDL_DRIVES)\r\n     ishell = topshell.BindToObject(drives_pidl, None, shell.IID_IShellFolder)\r\n     items = ishell.EnumObjects(None, shellcon.SHCONTF_FOLDERS)\r\n     item = items.Next(1)\r\n     while item != []:\r\n         print (ishell.GetDisplayNameOf(item[0], 1))\r\n         item = items.Next(1)    \r\n```\r\n\r\nCalling testdevices() inside the main thread of Python works well and without any problems. However, calling the same function within a threading.thread like\r\nusbwatch = threading.Thread(target=testdevices)\r\ncauses an exception:\r\n>  File ***, line ***, in testdevices\r\n>    print (ishell.GetDisplayNameOf(item[0], 1))\r\n>  pywintypes.com_error: (-2147221231, 'ClassFactory kann angeforderte Klasse nicht liefern', None, None)\r\n\r\nChanging slightly the above function by requesting shellcon.CSIDL_CONNECTIONS instead of shellcon.CSIDL_DRIVES raises an exception in BindToObject. Again, this error only occurs when called within a threading.Thread\r\n\r\n>     ishell = topshell.BindToObject(drives_pidl, None, shell.IID_IShellFolder)\r\n> pywintypes.com_error: (-2147221008, 'CoInitialize wurde nicht aufgerufen.', None, None)\r\n\r\nI downloaded pywin32 two months ago; so this should be a reasonably new version.\r\n\r\nThanks for your help (in advance) ;-)\r\n        \r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1526", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1526/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1526/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1526/events", "html_url": "https://github.com/mhammond/pywin32/issues/1526", "id": 622419470, "node_id": "MDU6SXNzdWU2MjI0MTk0NzA=", "number": 1526, "title": "No matching distribution found for pywin32", "user": {"login": "LavanyaKata", "id": 64300875, "node_id": "MDQ6VXNlcjY0MzAwODc1", "avatar_url": "https://avatars2.githubusercontent.com/u/64300875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LavanyaKata", "html_url": "https://github.com/LavanyaKata", "followers_url": "https://api.github.com/users/LavanyaKata/followers", "following_url": "https://api.github.com/users/LavanyaKata/following{/other_user}", "gists_url": "https://api.github.com/users/LavanyaKata/gists{/gist_id}", "starred_url": "https://api.github.com/users/LavanyaKata/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LavanyaKata/subscriptions", "organizations_url": "https://api.github.com/users/LavanyaKata/orgs", "repos_url": "https://api.github.com/users/LavanyaKata/repos", "events_url": "https://api.github.com/users/LavanyaKata/events{/privacy}", "received_events_url": "https://api.github.com/users/LavanyaKata/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-05-21T10:54:57Z", "updated_at": "2020-05-26T04:07:04Z", "closed_at": "2020-05-22T01:10:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nI am using Pycharm IDE for python selenium automation. pywin32 installs successfully when installed in cmd prompt but when try to install the same in pycharm it says \"Could not find a version that satisfies the requirement pywin32\" and ' No matching distribution found for pywin32'.\r\n\r\nPython version= 3.8.1\r\npycharm community edition.\r\n\r\nKindly help me put with the issue. Thanks in advance !!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1515", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1515/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1515/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1515/events", "html_url": "https://github.com/mhammond/pywin32/issues/1515", "id": 617500597, "node_id": "MDU6SXNzdWU2MTc1MDA1OTc=", "number": 1515, "title": "LsaGetLogonSessionData does not return all of SECURITY_LOGON_SESSION_DATA", "user": {"login": "aliceh75", "id": 5604799, "node_id": "MDQ6VXNlcjU2MDQ3OTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5604799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aliceh75", "html_url": "https://github.com/aliceh75", "followers_url": "https://api.github.com/users/aliceh75/followers", "following_url": "https://api.github.com/users/aliceh75/following{/other_user}", "gists_url": "https://api.github.com/users/aliceh75/gists{/gist_id}", "starred_url": "https://api.github.com/users/aliceh75/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aliceh75/subscriptions", "organizations_url": "https://api.github.com/users/aliceh75/orgs", "repos_url": "https://api.github.com/users/aliceh75/repos", "events_url": "https://api.github.com/users/aliceh75/events{/privacy}", "received_events_url": "https://api.github.com/users/aliceh75/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-13T14:33:12Z", "updated_at": "2020-05-23T04:42:30Z", "closed_at": "2020-05-23T04:42:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Expected Behaviour\r\n\r\nInvoking `win32security.LsaGetLogonSessionData` should return all the fields from [SECURITY_LOGON_SESSION_DATA](https://docs.microsoft.com/en-us/windows/win32/api/ntsecapi/ns-ntsecapi-security_logon_session_data) structure.\r\n\r\n## Actual Behaviour\r\n\r\n`win32security.LsaGetLogonSessionData` only returns a subset of the available fields. For example it does not include `LogoffTime`. Code that generates the returned values is https://github.com/mhammond/pywin32/blob/master/win32/src/win32security.i#L3526 . \r\n\r\n## Version of Python and pywin32\r\n\r\nPython: tested in 3.7 and 3.8\r\npywin32: tested on 224 and 227", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1514", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1514/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1514/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1514/events", "html_url": "https://github.com/mhammond/pywin32/issues/1514", "id": 615477987, "node_id": "MDU6SXNzdWU2MTU0Nzc5ODc=", "number": 1514, "title": "ImportError with venv (Python 3.7)", "user": {"login": "axc450", "id": 30942843, "node_id": "MDQ6VXNlcjMwOTQyODQz", "avatar_url": "https://avatars2.githubusercontent.com/u/30942843?v=4", "gravatar_id": "", "url": "https://api.github.com/users/axc450", "html_url": "https://github.com/axc450", "followers_url": "https://api.github.com/users/axc450/followers", "following_url": "https://api.github.com/users/axc450/following{/other_user}", "gists_url": "https://api.github.com/users/axc450/gists{/gist_id}", "starred_url": "https://api.github.com/users/axc450/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/axc450/subscriptions", "organizations_url": "https://api.github.com/users/axc450/orgs", "repos_url": "https://api.github.com/users/axc450/repos", "events_url": "https://api.github.com/users/axc450/events{/privacy}", "received_events_url": "https://api.github.com/users/axc450/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-10T21:15:20Z", "updated_at": "2020-05-11T20:39:13Z", "closed_at": "2020-05-11T01:36:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have been using pywin32 for around 2 years now with no issues. The apps that use pywin32 now need to be converted to use virtual environments. I am using the basic Python 3.7 `venv`.\r\nI installed `pywin32` with `\"env/Scripts/pip.exe\" install pywin32`\r\n\r\nI am getting the following error when running the app under a virtual environment:\r\n\r\n```\r\nimport win32service, win32api, win32con, winerror\r\nImportError: DLL load failed: The specified module could not be found.\r\n```\r\n(in `win32serviceutil.py`)\r\n\r\nI have run the post install script however it tried to modify things outside of the venv (I didnt pursue this any further as I didnt want to break the apps that are currently running).\r\n\r\nIs there something simple I can do to fix this? Sharing the DLLs should be fine, but why cant it find them?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1513", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1513/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1513/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1513/events", "html_url": "https://github.com/mhammond/pywin32/issues/1513", "id": 611893117, "node_id": "MDU6SXNzdWU2MTE4OTMxMTc=", "number": 1513, "title": "Please add support for pywin32 on WSL (Windows Subsystem for Linux)", "user": {"login": "jspv", "id": 6540751, "node_id": "MDQ6VXNlcjY1NDA3NTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6540751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jspv", "html_url": "https://github.com/jspv", "followers_url": "https://api.github.com/users/jspv/followers", "following_url": "https://api.github.com/users/jspv/following{/other_user}", "gists_url": "https://api.github.com/users/jspv/gists{/gist_id}", "starred_url": "https://api.github.com/users/jspv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jspv/subscriptions", "organizations_url": "https://api.github.com/users/jspv/orgs", "repos_url": "https://api.github.com/users/jspv/repos", "events_url": "https://api.github.com/users/jspv/events{/privacy}", "received_events_url": "https://api.github.com/users/jspv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-04T13:54:00Z", "updated_at": "2020-05-07T14:30:40Z", "closed_at": "2020-05-07T14:30:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Windows Subsystem for Linux is a compatibility layer for running Linux binary executables natively on Windows 10 and Windows Server 2019.  It's available on every Windows 10 system and is really nice, allows for running Ubuntu, Centos, etc. natively on Windows and the linux binaries have full visibility to the Windows filespace as well.  Seems like a potential fit for pywin32.  \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1511", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1511/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1511/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1511/events", "html_url": "https://github.com/mhammond/pywin32/issues/1511", "id": 611228387, "node_id": "MDU6SXNzdWU2MTEyMjgzODc=", "number": 1511, "title": "`win32file.FindFileNames()` leaves trailing null", "user": {"login": "searchingforpants", "id": 2057373, "node_id": "MDQ6VXNlcjIwNTczNzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/2057373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/searchingforpants", "html_url": "https://github.com/searchingforpants", "followers_url": "https://api.github.com/users/searchingforpants/followers", "following_url": "https://api.github.com/users/searchingforpants/following{/other_user}", "gists_url": "https://api.github.com/users/searchingforpants/gists{/gist_id}", "starred_url": "https://api.github.com/users/searchingforpants/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/searchingforpants/subscriptions", "organizations_url": "https://api.github.com/users/searchingforpants/orgs", "repos_url": "https://api.github.com/users/searchingforpants/repos", "events_url": "https://api.github.com/users/searchingforpants/events{/privacy}", "received_events_url": "https://api.github.com/users/searchingforpants/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-02T16:44:14Z", "updated_at": "2020-05-23T04:42:50Z", "closed_at": "2020-05-23T04:42:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Presuming that this is not intentional, but `FindFileNames()` leaves a trailing null byte on all returned paths.\r\n\r\n`>>> import win32file`\r\n`>>> win32file.FindFileNames(r'C:\\Windows\\system.ini')`\r\n`['\\\\Windows\\\\system.ini\\x00']`\r\n\r\nRunning Python 3.8 with pywin32 v227", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1509", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1509/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1509/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1509/events", "html_url": "https://github.com/mhammond/pywin32/issues/1509", "id": 610720085, "node_id": "MDU6SXNzdWU2MTA3MjAwODU=", "number": 1509, "title": "Support for VirtualAllocEx/VirtualFreeEx", "user": {"login": "vbe0201", "id": 38182450, "node_id": "MDQ6VXNlcjM4MTgyNDUw", "avatar_url": "https://avatars2.githubusercontent.com/u/38182450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vbe0201", "html_url": "https://github.com/vbe0201", "followers_url": "https://api.github.com/users/vbe0201/followers", "following_url": "https://api.github.com/users/vbe0201/following{/other_user}", "gists_url": "https://api.github.com/users/vbe0201/gists{/gist_id}", "starred_url": "https://api.github.com/users/vbe0201/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vbe0201/subscriptions", "organizations_url": "https://api.github.com/users/vbe0201/orgs", "repos_url": "https://api.github.com/users/vbe0201/repos", "events_url": "https://api.github.com/users/vbe0201/events{/privacy}", "received_events_url": "https://api.github.com/users/vbe0201/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-01T12:08:23Z", "updated_at": "2020-05-02T02:27:06Z", "closed_at": "2020-05-02T02:27:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I've been using pywin32 lately and wasn't able to find the functions mentioned in the title. Did I miss something or are they unimplemented?\r\n\r\nIn case of the latter, I'd be happy to open a Pull Request to add them, but I'll need some instructions on how to add support for new functions as I've never contributed to the project before.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1508", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1508/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1508/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1508/events", "html_url": "https://github.com/mhammond/pywin32/issues/1508", "id": 610419722, "node_id": "MDU6SXNzdWU2MTA0MTk3MjI=", "number": 1508, "title": "No error handling for CreateJobObject", "user": {"login": "christianbrugger", "id": 235346, "node_id": "MDQ6VXNlcjIzNTM0Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/235346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/christianbrugger", "html_url": "https://github.com/christianbrugger", "followers_url": "https://api.github.com/users/christianbrugger/followers", "following_url": "https://api.github.com/users/christianbrugger/following{/other_user}", "gists_url": "https://api.github.com/users/christianbrugger/gists{/gist_id}", "starred_url": "https://api.github.com/users/christianbrugger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christianbrugger/subscriptions", "organizations_url": "https://api.github.com/users/christianbrugger/orgs", "repos_url": "https://api.github.com/users/christianbrugger/repos", "events_url": "https://api.github.com/users/christianbrugger/events{/privacy}", "received_events_url": "https://api.github.com/users/christianbrugger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-30T22:09:35Z", "updated_at": "2020-04-30T23:20:32Z", "closed_at": "2020-04-30T23:20:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Expected behavior\r\n\r\n`CreateJobObject` should raise a Python exception when the API call was not successful.\r\n\r\n### Actual behaviour\r\n\r\nErrors are silently ignored and the call even returns a valid handle.\r\n\r\n### How to reproduce\r\n\r\n```python\r\nimport win32api\r\nimport win32job\r\n\r\nh1 = win32job.CreateJobObject(None, \"test\")\r\nh2 = win32job.CreateJobObject(None, \"test\")\r\n\r\nprint(\"h1\", h1)\r\nprint(\"h2\", h2)\r\nprint(\"last error:\", win32api.GetLastError(), win32api.FormatMessage())\r\n```\r\n\r\nThis outputs\r\n\r\n```\r\nh1 <PyHANDLE:144>\r\nh2 <PyHANDLE:436>\r\nlast error: 183 Cannot create a file when that file already exists.\r\n```\r\n\r\n### Possible workaround\r\n\r\nUse `win32api.SetLastError(0)` before calling the function and check `win32api.GetLastError()` after calling the function.\r\n\r\n### Possibly related issues\r\n\r\nI looked at the source and suspect the same issue is present for other function in this module too, like `SetInformationJobObject`, `AssignProcessToJobObject`, `TerminateJobObject`, ... .\r\n\r\n### Versions\r\n\r\nPython 3.8.0, 64bit on Windows 10\r\npywin32 227 (installed via pip)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1507", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1507/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1507/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1507/events", "html_url": "https://github.com/mhammond/pywin32/issues/1507", "id": 608065139, "node_id": "MDU6SXNzdWU2MDgwNjUxMzk=", "number": 1507, "title": "Python3.7 only supports pywin32 (223). Any higher version will produce `DLL load failed: The specified procedure could not be found`", "user": {"login": "Coderx7", "id": 5382892, "node_id": "MDQ6VXNlcjUzODI4OTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5382892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Coderx7", "html_url": "https://github.com/Coderx7", "followers_url": "https://api.github.com/users/Coderx7/followers", "following_url": "https://api.github.com/users/Coderx7/following{/other_user}", "gists_url": "https://api.github.com/users/Coderx7/gists{/gist_id}", "starred_url": "https://api.github.com/users/Coderx7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Coderx7/subscriptions", "organizations_url": "https://api.github.com/users/Coderx7/orgs", "repos_url": "https://api.github.com/users/Coderx7/repos", "events_url": "https://api.github.com/users/Coderx7/events{/privacy}", "received_events_url": "https://api.github.com/users/Coderx7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-28T06:40:31Z", "updated_at": "2020-04-28T07:43:32Z", "closed_at": "2020-04-28T06:46:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed any versions higher than 223 wont work with Python3.7.4 and will generate :\r\n```python\r\nImportError: DLL load failed: The specified procedure could not be found.\r\n```\r\nI tested different approaches and yes I do run the `pywin32_postinstall.py -install` for all versions. \r\nThere is also something weird and that is, intrestingly, importing modules in `PythonWin` doesnt issue any errors at all while basically everywhere else the error exists and turns up!  \r\n\r\n\r\n* Expected behavior: Newer versions should also work well on Python3.7.4   \r\n* Atual behavior: Only version `223 `works with Python 3.7.4  \r\n* Steps to reproduce the problem : \r\n  1. Install the Python3.7.4, \r\n  2. Install Pywin32 the latest version (either using the installer or pip)\r\n  3. Import win32api\r\n\r\n* Version of Python and pywin32\r\nPython: \r\n```\r\nPython 3.7.4 (default, Aug  9 2019, 18:34:13) [MSC v.1915 64 bit (AMD64)] :: Anaconda, Inc. on win32\r\n```\r\npywin32 : all versions greater than 223 wont work \r\n```\r\n224, 225, 226, 227\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1505", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1505/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1505/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1505/events", "html_url": "https://github.com/mhammond/pywin32/issues/1505", "id": 606813040, "node_id": "MDU6SXNzdWU2MDY4MTMwNDA=", "number": 1505, "title": "Unresolved import in VS2019 but imports into command line no problem.", "user": {"login": "M103Tanker", "id": 37376367, "node_id": "MDQ6VXNlcjM3Mzc2MzY3", "avatar_url": "https://avatars2.githubusercontent.com/u/37376367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/M103Tanker", "html_url": "https://github.com/M103Tanker", "followers_url": "https://api.github.com/users/M103Tanker/followers", "following_url": "https://api.github.com/users/M103Tanker/following{/other_user}", "gists_url": "https://api.github.com/users/M103Tanker/gists{/gist_id}", "starred_url": "https://api.github.com/users/M103Tanker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/M103Tanker/subscriptions", "organizations_url": "https://api.github.com/users/M103Tanker/orgs", "repos_url": "https://api.github.com/users/M103Tanker/repos", "events_url": "https://api.github.com/users/M103Tanker/events{/privacy}", "received_events_url": "https://api.github.com/users/M103Tanker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-25T17:06:25Z", "updated_at": "2020-05-27T10:27:43Z", "closed_at": "2020-04-26T07:19:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I installed the correct pywin32 for Python38 32 bit but none of the imports work in VS code 2019.  I see all of them in python site-packages, however.  When I go to cmd and open up python, I can import them in without error.  Any ideas? I have only been using python for a few days.\r\n\r\nThe VS error is \"unresolved import 'win32api'\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1504", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1504/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1504/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1504/events", "html_url": "https://github.com/mhammond/pywin32/issues/1504", "id": 606665543, "node_id": "MDU6SXNzdWU2MDY2NjU1NDM=", "number": 1504, "title": "win32gui missing `ValidateRect` function", "user": {"login": "d3dave", "id": 1116272, "node_id": "MDQ6VXNlcjExMTYyNzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1116272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d3dave", "html_url": "https://github.com/d3dave", "followers_url": "https://api.github.com/users/d3dave/followers", "following_url": "https://api.github.com/users/d3dave/following{/other_user}", "gists_url": "https://api.github.com/users/d3dave/gists{/gist_id}", "starred_url": "https://api.github.com/users/d3dave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d3dave/subscriptions", "organizations_url": "https://api.github.com/users/d3dave/orgs", "repos_url": "https://api.github.com/users/d3dave/repos", "events_url": "https://api.github.com/users/d3dave/events{/privacy}", "received_events_url": "https://api.github.com/users/d3dave/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-25T02:00:43Z", "updated_at": "2020-04-26T07:19:59Z", "closed_at": "2020-04-26T07:19:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python 3.7.1\r\npywin32 227\r\n\r\nwin32gui is missing a declaration for the [ValidateRect function](https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-validaterect) (fortunately, `ValidateRgn` exists)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1502", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1502/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1502/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1502/events", "html_url": "https://github.com/mhammond/pywin32/issues/1502", "id": 604442597, "node_id": "MDU6SXNzdWU2MDQ0NDI1OTc=", "number": 1502, "title": "Read/WriteProcessMemory Support", "user": {"login": "achillis2016", "id": 16607564, "node_id": "MDQ6VXNlcjE2NjA3NTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/16607564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/achillis2016", "html_url": "https://github.com/achillis2016", "followers_url": "https://api.github.com/users/achillis2016/followers", "following_url": "https://api.github.com/users/achillis2016/following{/other_user}", "gists_url": "https://api.github.com/users/achillis2016/gists{/gist_id}", "starred_url": "https://api.github.com/users/achillis2016/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/achillis2016/subscriptions", "organizations_url": "https://api.github.com/users/achillis2016/orgs", "repos_url": "https://api.github.com/users/achillis2016/repos", "events_url": "https://api.github.com/users/achillis2016/events{/privacy}", "received_events_url": "https://api.github.com/users/achillis2016/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-22T04:22:18Z", "updated_at": "2020-05-02T04:27:47Z", "closed_at": "2020-05-02T04:27:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is no ReadProcessMemory/WriteProcessMemory function in module win32process , why? This two functions is very important.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1500", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1500/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1500/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1500/events", "html_url": "https://github.com/mhammond/pywin32/issues/1500", "id": 599252477, "node_id": "MDU6SXNzdWU1OTkyNTI0Nzc=", "number": 1500, "title": "the workbook's Unprotect function do not work", "user": {"login": "fightingpjh", "id": 39395788, "node_id": "MDQ6VXNlcjM5Mzk1Nzg4", "avatar_url": "https://avatars3.githubusercontent.com/u/39395788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fightingpjh", "html_url": "https://github.com/fightingpjh", "followers_url": "https://api.github.com/users/fightingpjh/followers", "following_url": "https://api.github.com/users/fightingpjh/following{/other_user}", "gists_url": "https://api.github.com/users/fightingpjh/gists{/gist_id}", "starred_url": "https://api.github.com/users/fightingpjh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fightingpjh/subscriptions", "organizations_url": "https://api.github.com/users/fightingpjh/orgs", "repos_url": "https://api.github.com/users/fightingpjh/repos", "events_url": "https://api.github.com/users/fightingpjh/events{/privacy}", "received_events_url": "https://api.github.com/users/fightingpjh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-14T02:32:20Z", "updated_at": "2020-04-26T06:59:59Z", "closed_at": "2020-04-26T06:59:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to :   https://docs.microsoft.com/zh-CN/office/vba/api/excel.workbook.unprotect\r\ncode: \r\nxcl = win32com.client.Dispatch('Excel.Application')\r\nxcl.visible = True\r\npw_str = raw_input(\"Enter password: \")\r\ntry:\r\n    wb = xcl.workbooks.open(filename, 0, False, None, pw_str, pw_str)\r\nexcept Exception as e:\r\n    print \"Error:\", str(e)\r\n    sys.exit()\r\nwb.Unprotect(pw_str)\r\nwb.UnprotectSharing(pw_str)\r\nwb.Save()\r\nxcl.Quit()\r\n\r\nit does't work, the excel file still protected.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1498", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1498/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1498/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1498/events", "html_url": "https://github.com/mhammond/pywin32/issues/1498", "id": 597070937, "node_id": "MDU6SXNzdWU1OTcwNzA5Mzc=", "number": 1498, "title": "DecryptMessage using SSPI/Kerbero example fails", "user": {"login": "jborean93", "id": 8462645, "node_id": "MDQ6VXNlcjg0NjI2NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8462645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jborean93", "html_url": "https://github.com/jborean93", "followers_url": "https://api.github.com/users/jborean93/followers", "following_url": "https://api.github.com/users/jborean93/following{/other_user}", "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}", "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions", "organizations_url": "https://api.github.com/users/jborean93/orgs", "repos_url": "https://api.github.com/users/jborean93/repos", "events_url": "https://api.github.com/users/jborean93/events{/privacy}", "received_events_url": "https://api.github.com/users/jborean93/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-09T07:10:18Z", "updated_at": "2020-05-02T04:36:47Z", "closed_at": "2020-05-02T04:36:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm currently using pywin32 to encrypt and decrypt messages sent to GSSAPI Kerberos server. I'm using the examples from Microsoft at https://docs.microsoft.com/en-us/windows/win32/secauthn/sspi-kerberos-interoperability-with-gssapi and when implementing this in either C++ or C# I'm having no issues getting it to work.\r\n\r\nWhen implementing the same decryption method in Python like\r\n\r\n```\r\ndef unwrap(self, data):\r\n    buffer = win32security.PySecBufferDescType()\r\n    buffer.append(win32security.PySecBufferType(len(data), sspicon.SECBUFFER_STREAM))\r\n    buffer.append(win32security.PySecBufferType(0, sspicon.SECBUFFER_DATA))\r\n    buffer[0].Buffer = data\r\n\r\n    self._ctxt.DecryptMessage(buffer, self._next_seq_num())\r\n\r\n    # Running either of the 2 below will cause the heap corruption failure which tells me pywin32 is trying to free memory it shouldn't\r\n    # buffer = None\r\n    # buffer[1] = win32security.PySecBufferType(0, 0)\r\n\r\n    return buffer[1].Buffer\r\n```\r\n\r\nAs soon as the function is left, or you run one of the 2 commented lines the process will crash with the exit code `0xC0000374` `STATUS_HEAP_CORRUPTION`. The funny thing is when I inspect the value of `buffer[1].Buffer` is does contain the proper decrypted data and I can assign it to a variable, it just seems like the cleanup of the sec buffer is causing an issue.\r\n\r\nIf I understand how this all works, the decrypted data is just overwrites the decrypted data section and the 2nd data buffer is just a pointer to where the decrypted data is at in the first buffer. When inspecting the 2 buffers before the function returns I can see that the 2nd buffer contains the proper values and the 1st buffer contains the original data stream with the decrypted value also in that buffer at the end. Potentially pywin32 frees the unmanaged memory of the first buffer and when it goes to free the memory of the 2nd buffer it fails because it points to an address of the first buffer.\r\n\r\nI see the `decrypt` method on the BaseAuth object is slightly different where you pass in data and trailer separately as they use the `SECBUFFER_DATA` and `SECBUFFER_TOKEN` buffers but in this case I don't have the trailer and data as separated objects and I cannot easily get the trailer size so I need to use this method.\r\n\r\nI am current testing pywin32 227 on Server 2019 if that helps.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1497", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1497/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1497/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1497/events", "html_url": "https://github.com/mhammond/pywin32/issues/1497", "id": 592939687, "node_id": "MDU6SXNzdWU1OTI5Mzk2ODc=", "number": 1497, "title": "Issue installing TM1py", "user": {"login": "Ank888", "id": 63075980, "node_id": "MDQ6VXNlcjYzMDc1OTgw", "avatar_url": "https://avatars2.githubusercontent.com/u/63075980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ank888", "html_url": "https://github.com/Ank888", "followers_url": "https://api.github.com/users/Ank888/followers", "following_url": "https://api.github.com/users/Ank888/following{/other_user}", "gists_url": "https://api.github.com/users/Ank888/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ank888/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ank888/subscriptions", "organizations_url": "https://api.github.com/users/Ank888/orgs", "repos_url": "https://api.github.com/users/Ank888/repos", "events_url": "https://api.github.com/users/Ank888/events{/privacy}", "received_events_url": "https://api.github.com/users/Ank888/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-02T21:51:46Z", "updated_at": "2020-04-02T23:16:13Z", "closed_at": "2020-04-02T23:16:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am new to Python, and I am trying to install TM1py in Python 3.7.  Here is an error \"Could not find a version that satisfies the requirement pywin32\".  I ran pip install TM1py in Command Prompt, and it worked, but I cannot access the package in PyCharm, getting an error \"ModuleNotFoundError: No module named 'TM1py'\".  When I attempt to install in Project Interpreter, I have a problem with the installation itself.\r\n\r\nThe complete output:\r\n\r\nCollecting TM1py\r\n  Using cached https://files.pythonhosted.org/packages/66/d9/268ed93d5bddbc59d41f4c35af89c34534addd6fc33b56d7eef0402998cb/TM1py-1.4.1.tar.gz\r\nCollecting requests (from TM1py)\r\n  Using cached https://files.pythonhosted.org/packages/1a/70/1935c770cb3be6e3a8b78ced23d7e0f3b187f5cbfab4749523ed65d7c9b1/requests-2.23.0-py2.py3-none-any.whl\r\nCollecting pandas (from TM1py)\r\n  Using cached https://files.pythonhosted.org/packages/2f/79/f236ab1cfde94bac03d7b58f3f2ab0b1cc71d6a8bda3b25ce370a9fe4ab1/pandas-1.0.3.tar.gz\r\n  Installing build dependencies: started\r\n  Installing build dependencies: still running...\r\n  Installing build dependencies: finished with status 'done'\r\n  Getting requirements to build wheel: started\r\n  Getting requirements to build wheel: still running...\r\n  Getting requirements to build wheel: still running...\r\n  Getting requirements to build wheel: finished with status 'done'\r\n    Preparing wheel metadata: started\r\n    Preparing wheel metadata: finished with status 'done'\r\nCollecting pytz (from TM1py)\r\n  Using cached https://files.pythonhosted.org/packages/e7/f9/f0b53f88060247251bf481fa6ea62cd0d25bf1b11a87888e53ce5b7c8ad2/pytz-2019.3-py2.py3-none-any.whl\r\nCollecting requests_negotiate_sspi (from TM1py)\r\n  Using cached https://files.pythonhosted.org/packages/7c/0b/99220cb4d3c8cf9b667a1cd13650d28b19e689ab7145085897e254d141a3/requests_negotiate_sspi-0.5.2-py2.py3-none-any.whl\r\nCollecting urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 (from requests->TM1py)\r\n  Using cached https://files.pythonhosted.org/packages/e8/74/6e4f91745020f967d09332bb2b8b9b10090957334692eb88ea4afe91b77f/urllib3-1.25.8-py2.py3-none-any.whl\r\nCollecting chardet<4,>=3.0.2 (from requests->TM1py)\r\n  Using cached https://files.pythonhosted.org/packages/bc/a9/01ffebfb562e4274b6487b4bb1ddec7ca55ec7510b22e4c51f14098443b8/chardet-3.0.4-py2.py3-none-any.whl\r\nCollecting certifi>=2017.4.17 (from requests->TM1py)\r\n  Using cached https://files.pythonhosted.org/packages/b9/63/df50cac98ea0d5b006c55a399c3bf1db9da7b5a24de7890bc9cfd5dd9e99/certifi-2019.11.28-py2.py3-none-any.whl\r\nCollecting idna<3,>=2.5 (from requests->TM1py)\r\n  Using cached https://files.pythonhosted.org/packages/89/e3/afebe61c546d18fb1709a61bee788254b40e736cff7271c7de5de2dc4128/idna-2.9-py2.py3-none-any.whl\r\nCollecting numpy>=1.13.3 (from pandas->TM1py)\r\n  Using cached https://files.pythonhosted.org/packages/84/1e/ff467ac56bfeaea51d4a2e72d315c1fe440b20192fea7e460f0f248acac8/numpy-1.18.2.zip\r\n  Installing build dependencies: started\r\n  Installing build dependencies: finished with status 'done'\r\n  Getting requirements to build wheel: started\r\n  Getting requirements to build wheel: finished with status 'done'\r\n    Preparing wheel metadata: started\r\n    Preparing wheel metadata: finished with status 'done'\r\nCollecting python-dateutil>=2.6.1 (from pandas->TM1py)\r\n  Using cached https://files.pythonhosted.org/packages/d4/70/d60450c3dd48ef87586924207ae8907090de0b306af2bce5d134d78615cb/python_dateutil-2.8.1-py2.py3-none-any.whl\r\nCollecting pypiwin32>=223 (from requests_negotiate_sspi->TM1py)\r\n  Using cached https://files.pythonhosted.org/packages/d0/1b/2f292bbd742e369a100c91faa0483172cd91a1a422a6692055ac920946c5/pypiwin32-223-py3-none-any.whl\r\nCollecting six>=1.5 (from python-dateutil>=2.6.1->pandas->TM1py)\r\n  Using cached https://files.pythonhosted.org/packages/65/eb/1f97cb97bfc2390a276969c6fae16075da282f5058082d4cb10c6c5c1dba/six-1.14.0-py2.py3-none-any.whl\r\nCollecting pywin32>=223 (from pypiwin32>=223->requests_negotiate_sspi->TM1py)\r\n\r\n  Could not find a version that satisfies the requirement pywin32>=223 (from pypiwin32>=223->requests_negotiate_sspi->TM1py) (from versions: )\r\nNo matching distribution found for pywin32>=223 (from pypiwin32>=223->requests_negotiate_sspi->TM1py)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1493", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1493/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1493/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1493/events", "html_url": "https://github.com/mhammond/pywin32/issues/1493", "id": 587459992, "node_id": "MDU6SXNzdWU1ODc0NTk5OTI=", "number": 1493, "title": "how to change service startuptype", "user": {"login": "BlackRouter", "id": 15177510, "node_id": "MDQ6VXNlcjE1MTc3NTEw", "avatar_url": "https://avatars1.githubusercontent.com/u/15177510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BlackRouter", "html_url": "https://github.com/BlackRouter", "followers_url": "https://api.github.com/users/BlackRouter/followers", "following_url": "https://api.github.com/users/BlackRouter/following{/other_user}", "gists_url": "https://api.github.com/users/BlackRouter/gists{/gist_id}", "starred_url": "https://api.github.com/users/BlackRouter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BlackRouter/subscriptions", "organizations_url": "https://api.github.com/users/BlackRouter/orgs", "repos_url": "https://api.github.com/users/BlackRouter/repos", "events_url": "https://api.github.com/users/BlackRouter/events{/privacy}", "received_events_url": "https://api.github.com/users/BlackRouter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-25T05:52:39Z", "updated_at": "2020-04-26T07:02:18Z", "closed_at": "2020-04-26T07:02:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "i want change startup type a service:\r\n\r\n```\r\nimport win32serviceutil\r\n\r\nwin32serviceutil.ChangeServiceConfig(serviceName='MoeinDesk', startType='Auto')\r\n```\r\n\r\nbut i get this error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"E:/Project/Moeinsoft/MoeinDesk/test.py\", line 3, in <module>\r\n    win32serviceutil.ChangeServiceConfig(serviceName='MoeinDesk', startType='Auto')\r\nTypeError: ChangeServiceConfig() missing 1 required positional argument: 'pythonClassString'\r\n```\r\n\r\nplease help me and put list insert startup type.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1491", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1491/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1491/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1491/events", "html_url": "https://github.com/mhammond/pywin32/issues/1491", "id": 585903039, "node_id": "MDU6SXNzdWU1ODU5MDMwMzk=", "number": 1491, "title": "python win32com <unknown>.Text", "user": {"login": "liujiayi0042", "id": 43633521, "node_id": "MDQ6VXNlcjQzNjMzNTIx", "avatar_url": "https://avatars3.githubusercontent.com/u/43633521?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liujiayi0042", "html_url": "https://github.com/liujiayi0042", "followers_url": "https://api.github.com/users/liujiayi0042/followers", "following_url": "https://api.github.com/users/liujiayi0042/following{/other_user}", "gists_url": "https://api.github.com/users/liujiayi0042/gists{/gist_id}", "starred_url": "https://api.github.com/users/liujiayi0042/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liujiayi0042/subscriptions", "organizations_url": "https://api.github.com/users/liujiayi0042/orgs", "repos_url": "https://api.github.com/users/liujiayi0042/repos", "events_url": "https://api.github.com/users/liujiayi0042/events{/privacy}", "received_events_url": "https://api.github.com/users/liujiayi0042/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-23T03:32:17Z", "updated_at": "2020-03-23T03:44:14Z", "closed_at": "2020-03-23T03:44:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Note that issues in this repository are only for bugs or feature requests in the pywin32.\r\n\r\nI used win32com for PowerPoint, but 'python win32com .text' came up\r\n\r\n* python==3.6andpywin32==225\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1489", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1489/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1489/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1489/events", "html_url": "https://github.com/mhammond/pywin32/issues/1489", "id": 585502730, "node_id": "MDU6SXNzdWU1ODU1MDI3MzA=", "number": 1489, "title": "How to set up the build environment", "user": {"login": "markuskramerIgitt", "id": 8489107, "node_id": "MDQ6VXNlcjg0ODkxMDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8489107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markuskramerIgitt", "html_url": "https://github.com/markuskramerIgitt", "followers_url": "https://api.github.com/users/markuskramerIgitt/followers", "following_url": "https://api.github.com/users/markuskramerIgitt/following{/other_user}", "gists_url": "https://api.github.com/users/markuskramerIgitt/gists{/gist_id}", "starred_url": "https://api.github.com/users/markuskramerIgitt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markuskramerIgitt/subscriptions", "organizations_url": "https://api.github.com/users/markuskramerIgitt/orgs", "repos_url": "https://api.github.com/users/markuskramerIgitt/repos", "events_url": "https://api.github.com/users/markuskramerIgitt/events{/privacy}", "received_events_url": "https://api.github.com/users/markuskramerIgitt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-03-21T13:49:45Z", "updated_at": "2020-05-23T05:07:00Z", "closed_at": "2020-05-23T05:07:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I try to set up and document the build environment (for Python 3)\r\n\r\nRelated: https://github.com/mhammond/pywin32/issues/1487\r\n\r\n\r\n\r\nThis is a rewrite of https://wiki.python.org/moin/WindowsCompilers\r\n\r\n## Install Microsoft Visual C++ compiler for Python 3.5, 3.6, 3.7, 3.8\r\n\r\nMicrosoft Visual C++ 14.2 is in Visual Studio 2019\r\n\r\n\r\n- Download the [Installer for Visual Studio 2019](https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=BuildTools&rel=16#) (~ 1 MB)\r\n- In the installer:\r\n  - Check `C++ build tools`\r\n    - In the menue to the right, check:\r\n        - `MSVCv142 - VS 2019 C++ x64/x86 build tools`\r\n        - `Windows 10 SDK`\r\n        - `C++ MFC for latest v142 build tools` (automatically ticks `C++ ATL`)\r\n          - Note: The installer does not contain MFC for v140\r\n    - Press `Install` (~ 5 GB)\r\n- Restart\r\n\r\n\r\n- Include the \"Microsoft (R) Message Compiler\" into the path\r\n  - Search\r\n\r\n    dir /b /s mc.exe\r\n\r\n  - and set (example)\r\n\r\n    set \"path=%path%;c:\\Program Files (x86)\\Windows Kits\\10\\bin\\10.0.18362.0\\x64\"\r\n\r\n- Run\r\n\r\n    python setup.py -q build\r\n\r\n\r\n## Error\r\n\r\n    RuntimeError: No MFC files found!\r\n\r\n\r\n\r\n\r\nWhat am I missing/doing wrong?\r\n\r\nThank you\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1486", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1486/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1486/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1486/events", "html_url": "https://github.com/mhammond/pywin32/issues/1486", "id": 582996848, "node_id": "MDU6SXNzdWU1ODI5OTY4NDg=", "number": 1486, "title": "pywin32window gets smaller (overall size and font) when use >>plt.show() ", "user": {"login": "CompuNeuroPsychiatryLabEinKerem", "id": 54101224, "node_id": "MDQ6VXNlcjU0MTAxMjI0", "avatar_url": "https://avatars0.githubusercontent.com/u/54101224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CompuNeuroPsychiatryLabEinKerem", "html_url": "https://github.com/CompuNeuroPsychiatryLabEinKerem", "followers_url": "https://api.github.com/users/CompuNeuroPsychiatryLabEinKerem/followers", "following_url": "https://api.github.com/users/CompuNeuroPsychiatryLabEinKerem/following{/other_user}", "gists_url": "https://api.github.com/users/CompuNeuroPsychiatryLabEinKerem/gists{/gist_id}", "starred_url": "https://api.github.com/users/CompuNeuroPsychiatryLabEinKerem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CompuNeuroPsychiatryLabEinKerem/subscriptions", "organizations_url": "https://api.github.com/users/CompuNeuroPsychiatryLabEinKerem/orgs", "repos_url": "https://api.github.com/users/CompuNeuroPsychiatryLabEinKerem/repos", "events_url": "https://api.github.com/users/CompuNeuroPsychiatryLabEinKerem/events{/privacy}", "received_events_url": "https://api.github.com/users/CompuNeuroPsychiatryLabEinKerem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-17T13:02:43Z", "updated_at": "2020-04-26T07:05:09Z", "closed_at": "2020-04-26T07:05:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "[Open pywin32 window]\r\nWrite:\r\n\r\n>>> from matplotlib import pyplot as plt\r\n>>> plt.plot([1,2,3], [1,2,3])\r\n\r\nOn plt.plot() (before show() or draw()), the whole window (both window size and all fonts) becomes smaller be nearly half. Resizing the window doesn't change its font.\r\n\r\nWhy does this happen?\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1485", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1485/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1485/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1485/events", "html_url": "https://github.com/mhammond/pywin32/issues/1485", "id": 582781974, "node_id": "MDU6SXNzdWU1ODI3ODE5NzQ=", "number": 1485, "title": "Getting pywin32 excelAddin.py working on Windows 7 Microsoft Excel 2010", "user": {"login": "caoyudeng", "id": 20593729, "node_id": "MDQ6VXNlcjIwNTkzNzI5", "avatar_url": "https://avatars3.githubusercontent.com/u/20593729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caoyudeng", "html_url": "https://github.com/caoyudeng", "followers_url": "https://api.github.com/users/caoyudeng/followers", "following_url": "https://api.github.com/users/caoyudeng/following{/other_user}", "gists_url": "https://api.github.com/users/caoyudeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/caoyudeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caoyudeng/subscriptions", "organizations_url": "https://api.github.com/users/caoyudeng/orgs", "repos_url": "https://api.github.com/users/caoyudeng/repos", "events_url": "https://api.github.com/users/caoyudeng/events{/privacy}", "received_events_url": "https://api.github.com/users/caoyudeng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-17T06:19:01Z", "updated_at": "2020-03-17T07:57:54Z", "closed_at": "2020-03-17T07:57:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\\Lib\\site-packages\\win32com\\demos\\excelAddin.py invalid.\r\n\r\nThough the Com add-in registers itself successfully and is displayed in \"com add-ins\" list in Excel, it does not work.\r\n\r\nOnly error feedback I get is on the \"Load behavior\" line in excel's \"com add-ins\" dialog, says \"Not loaded. A runtime error occurred during the loading of the com add-in\"\r\n\r\nHow can I find out what goes wrong?\r\n\r\nVersion: \r\npython2.7/python3.8\r\npywin32\r\nexcel 2010 32bit/64bit\r\nwin7\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1481", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1481/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1481/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1481/events", "html_url": "https://github.com/mhammond/pywin32/issues/1481", "id": 574647230, "node_id": "MDU6SXNzdWU1NzQ2NDcyMzA=", "number": 1481, "title": "DLL load failed", "user": {"login": "Mockbeth", "id": 56512376, "node_id": "MDQ6VXNlcjU2NTEyMzc2", "avatar_url": "https://avatars0.githubusercontent.com/u/56512376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mockbeth", "html_url": "https://github.com/Mockbeth", "followers_url": "https://api.github.com/users/Mockbeth/followers", "following_url": "https://api.github.com/users/Mockbeth/following{/other_user}", "gists_url": "https://api.github.com/users/Mockbeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mockbeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mockbeth/subscriptions", "organizations_url": "https://api.github.com/users/Mockbeth/orgs", "repos_url": "https://api.github.com/users/Mockbeth/repos", "events_url": "https://api.github.com/users/Mockbeth/events{/privacy}", "received_events_url": "https://api.github.com/users/Mockbeth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-03-03T12:52:59Z", "updated_at": "2020-03-06T08:09:38Z", "closed_at": "2020-03-06T08:09:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Expected behavior and actual behavior.\r\n\r\nI installed pywin32 via pip back around November, im not sure which version it was, but it worked and without any additional postinstall. \r\n\r\nLater I installed xlwings (ver 0.15.8)  and recently I had to reinstall xlwings (ver 0.18). Since the reinstall pywin32 is throwing an error when loading win32api:\r\n\"DLL load failed: The specified procedure could not be found.\"\r\n\r\nI reinstalled pywin32 via pip and ran the postintall file, which didn't solve my issue. I reinstalled pywin32 via binary executable, which also didn't solve my issue. I tried running pywin32 version 224. It doesn't throw the DLL error, however it throws another error, which doesn't seem to be critical since the code itself is working.\r\n\r\nIm not sure what else to try, any help is appreciated. \r\n\r\n* Steps to reproduce the problem.\r\n\r\nTo reproduce the problem I just try to import win32api in a jupyter notebook\r\n\r\n* Version of Python and pywin32\r\n\r\nPython 3.7.3 (via anaconda) \r\npywin32 227\r\nxlwings 0.18\r\nwindows 10\r\n* update\r\n\r\nBefore the problem appeared i have installed a piece of software that conflicted with my application references. Since then i have deleted the software but the damage was done, It might be the case that dll references got mixed as well and pywin32 is looking for the dll's in the wrong place. i'll update once i know more\r\n\r\n* update 2\r\n\r\nas far as I can see py*.dlls are not in my missing shared dlls list in ccleaner ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1480", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1480/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1480/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1480/events", "html_url": "https://github.com/mhammond/pywin32/issues/1480", "id": 573495483, "node_id": "MDU6SXNzdWU1NzM0OTU0ODM=", "number": 1480, "title": "\"U\" mode is no longer accepted from Python 3.9", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-01T06:43:25Z", "updated_at": "2020-05-02T05:34:59Z", "closed_at": "2020-05-02T05:34:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\npywin32/win32/Lib/win32rcparser.py\r\n520:        h_file = open(h_name, \"rU\")\r\n525:            h_file = open(h_name, \"rU\")\r\n530:                h_file = open(h_name, \"rU\")\r\n534:    rc_file = open(rc_name, \"rU\")\r\n```\r\n\r\nhttps://github.com/python/cpython/pull/16959", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1479", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1479/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1479/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1479/events", "html_url": "https://github.com/mhammond/pywin32/issues/1479", "id": 572209227, "node_id": "MDU6SXNzdWU1NzIyMDkyMjc=", "number": 1479, "title": "Possibly incorrect #ifndef/#define", "user": {"login": "lvu", "id": 606516, "node_id": "MDQ6VXNlcjYwNjUxNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/606516?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lvu", "html_url": "https://github.com/lvu", "followers_url": "https://api.github.com/users/lvu/followers", "following_url": "https://api.github.com/users/lvu/following{/other_user}", "gists_url": "https://api.github.com/users/lvu/gists{/gist_id}", "starred_url": "https://api.github.com/users/lvu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lvu/subscriptions", "organizations_url": "https://api.github.com/users/lvu/orgs", "repos_url": "https://api.github.com/users/lvu/repos", "events_url": "https://api.github.com/users/lvu/events{/privacy}", "received_events_url": "https://api.github.com/users/lvu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-27T16:44:27Z", "updated_at": "2020-04-26T07:18:16Z", "closed_at": "2020-04-26T07:18:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/mhammond/pywin32/blob/059b7beb928225e389621802db758c75a7b8c58f/win32/src/PyWinObjects.h#L2-L3\r\nLooks like this is a mistake", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1473", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1473/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1473/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1473/events", "html_url": "https://github.com/mhammond/pywin32/issues/1473", "id": 559706110, "node_id": "MDU6SXNzdWU1NTk3MDYxMTA=", "number": 1473, "title": "Pip install on python3.6 missing postinstall.py", "user": {"login": "vctibor", "id": 54367119, "node_id": "MDQ6VXNlcjU0MzY3MTE5", "avatar_url": "https://avatars2.githubusercontent.com/u/54367119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vctibor", "html_url": "https://github.com/vctibor", "followers_url": "https://api.github.com/users/vctibor/followers", "following_url": "https://api.github.com/users/vctibor/following{/other_user}", "gists_url": "https://api.github.com/users/vctibor/gists{/gist_id}", "starred_url": "https://api.github.com/users/vctibor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vctibor/subscriptions", "organizations_url": "https://api.github.com/users/vctibor/orgs", "repos_url": "https://api.github.com/users/vctibor/repos", "events_url": "https://api.github.com/users/vctibor/events{/privacy}", "received_events_url": "https://api.github.com/users/vctibor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-04T13:03:49Z", "updated_at": "2020-02-12T11:34:20Z", "closed_at": "2020-02-12T11:34:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, if I install pywin using pip on python 3.6, install target directory doesn't contain postinstall.py. Doing the same on python 3.7 or 3.8 behaves as expected - postinstall.py is found in target dir.\r\n\r\n* Steps to reproduce the problem:\r\n\r\n`python.exe -m pip install pywin -t target_dir`\r\n\r\n* Expected behavior:\r\n\r\n`target_dir` contains (anywhere inside it) `postinstall.py`.\r\n\r\n* Actual behavior:\r\n\r\n`target_dir` doesn't contain `postinstall.py`.\r\n\r\n* Version of Python and pywin32:\r\n\r\n- python 3.6\r\n- pywin32 227 \r\n- Windows 10\r\n\r\nNow I'm not sure if this is bug, expected or out of scope. It's possible to close this issue with \"just upgrade python\" but it would be great if there was other solution.\r\n\r\nI'd be willing to help with PR, but I'm not sure if it's related to pip packaging or something else.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1472", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1472/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1472/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1472/events", "html_url": "https://github.com/mhammond/pywin32/issues/1472", "id": 556044657, "node_id": "MDU6SXNzdWU1NTYwNDQ2NTc=", "number": 1472, "title": "Special Char Error. python pandas and win32com", "user": {"login": "elmaquito", "id": 52471848, "node_id": "MDQ6VXNlcjUyNDcxODQ4", "avatar_url": "https://avatars0.githubusercontent.com/u/52471848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elmaquito", "html_url": "https://github.com/elmaquito", "followers_url": "https://api.github.com/users/elmaquito/followers", "following_url": "https://api.github.com/users/elmaquito/following{/other_user}", "gists_url": "https://api.github.com/users/elmaquito/gists{/gist_id}", "starred_url": "https://api.github.com/users/elmaquito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elmaquito/subscriptions", "organizations_url": "https://api.github.com/users/elmaquito/orgs", "repos_url": "https://api.github.com/users/elmaquito/repos", "events_url": "https://api.github.com/users/elmaquito/events{/privacy}", "received_events_url": "https://api.github.com/users/elmaquito/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-28T08:03:54Z", "updated_at": "2020-01-28T10:23:47Z", "closed_at": "2020-01-28T10:23:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nHi, I hope you are having a good night/day. Im actually developing a module with django that extract a xlsx file with datas from my server and it worked for a few files. for the process, i request data from my server filtered by my need and put them into a pandas dataframe then i insert it in a xlsx template by using Win32com and export it on a local driver, when i tried yesterday, it worked!!!. But when i tried to do an extract from my webapp today. i had an unexpected surprise, an Exception Error:\r\n\r\ncom_error at /extract/extract_files (-2147352567, 'Exception occurred.', (0, None, None, None, 0, -2146827284), None)\r\n\r\nso i did research on this error and on my database to see what is the problem between the files created last day and this one. actually it seems like the new one have a LOT of text with special character, but it's not like it's a few char that causing the problem.(the data for this file his more than 8000 rows). this is how put data into my template.\r\n\r\n\r\n\r\n   \r\n   \r\n    df2 = pd.DataFrame(dict_datas_c2)\r\n    df1 = pd.DataFrame(dict_datas_c1)\r\n    df3 = pd.DataFrame(dict_datas_c3)\r\n\r\n    # convertion de l'objet en date\r\n\r\n    df1['Task End Date'] = pd.to_datetime(df1['Task End Date'])\r\n    df1['Previous Inspection Date'] = pd.to_datetime(df1['Previous Inspection Date'])\r\n\r\n    # conversion de date en str\r\n\r\n    df1['Task End Date'] = df1['Task End Date'].dt.strftime('%Y-%m-%d')\r\n    df1['Previous Inspection Date'] = df1['Previous Inspection Date'].dt.strftime('%Y-%m-%d')\r\n\r\n    df1['Previous Inspection Date'] = df1['Previous Inspection Date'].replace('NaT', '')\r\n\r\n    ########################## CREATION PERSONALIZED PATH AND PATH FOR OUTPUT FROM TEMPLATE##########################\r\n\r\n    date_now = datetime.datetime.now()\r\n    date_str = date_now.strftime(\"%d%m%Y\" + \"_\" + \"%H\" + \"%M\")\r\n\r\n    path = './SUPPORT DATA FILES/'\r\n    filename = 'ED_' + ed + '_' + ed_name + '_' + date_str + '.xlsx'\r\n\r\n    extract_filename = path +  filename \r\n    template_file = #another path\r\n\r\n    copyfile(template_file, extract_filename)\r\n    ########################## INSERTING DATAS INTO EXCELFILE ########################################################\r\n\r\n    pythoncom.CoInitialize()\r\n\r\n    # Open excel to access to template\r\n\r\n    excel = win32.GetObject(None, 'Excel.Application')\r\n\r\n    # def workbook\r\n\r\n    wb = excel.Workbooks.Open(extract_filename)\r\n\r\n    # each sheet\r\n\r\n    first_sheet_info=wb.Worksheets(\"NOTES\")\r\n    second_sheet_C1=wb.Worksheets(\"C1. Scheduled Maintenance Tasks\")\r\n    third_sheet_C2= wb.Worksheets(\"C2. Findings&Corrective Actions\")\r\n\r\n    # inserting datas into each sheet\r\n\r\n    first_sheet_info.Range(first_sheet_info.Cells(2,1),# Cell to start the \"paste\"\r\n                first_sheet_info.Cells(1+len(df3.index)-1,\r\n                1+len(df3.columns)-1)\r\n            ).Value = df3.values\r\n\r\n    second_sheet_C1.Range(second_sheet_C1.Cells(4,1),# Cell to start the \"paste\"\r\n                second_sheet_C1.Cells(4+len(df1.index)-1,\r\n                1+len(df1.columns)-1)\r\n            ).Value = df1.values\r\n\r\n    third_sheet_C2.Range(third_sheet_C2.Cells(4,1),# Cell to start the \"paste\"\r\n            third_sheet_C2.Cells(4+len(df2.index)-1,\r\n                    1+len(df2.columns)-1)\r\n            ).Value = df2.values\r\n\r\n    # excel close and save\r\n\r\n    wb.Close(SaveChanges=1)\r\n    excel.Quit()\r\n\r\n    name_of_file = str(filename)\r\n    list_files.append(name_of_file)\r\nso, the sheet i'm struggling with is the \"third_sheet_C2\" where some columns have a special char:\r\n\r\nThis is the code that insert the dataframe into the template with win32com.client.\r\n![Capture](https://user-images.githubusercontent.com/52471848/73245544-c300a080-41ac-11ea-93ef-86596a047771.PNG)\r\n\r\nPlease if you guys have any idea on how to help me or another solution to put the df into a templates without using win32com, tell me!! PS: i already tried to use openpyxl and it doesn't work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1468", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1468/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1468/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1468/events", "html_url": "https://github.com/mhammond/pywin32/issues/1468", "id": 552928393, "node_id": "MDU6SXNzdWU1NTI5MjgzOTM=", "number": 1468, "title": "pythoncom.CoGetInterfaceAndReleaseStream throws exception in the second time", "user": {"login": "ahmad811", "id": 22340990, "node_id": "MDQ6VXNlcjIyMzQwOTkw", "avatar_url": "https://avatars2.githubusercontent.com/u/22340990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahmad811", "html_url": "https://github.com/ahmad811", "followers_url": "https://api.github.com/users/ahmad811/followers", "following_url": "https://api.github.com/users/ahmad811/following{/other_user}", "gists_url": "https://api.github.com/users/ahmad811/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahmad811/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahmad811/subscriptions", "organizations_url": "https://api.github.com/users/ahmad811/orgs", "repos_url": "https://api.github.com/users/ahmad811/repos", "events_url": "https://api.github.com/users/ahmad811/events{/privacy}", "received_events_url": "https://api.github.com/users/ahmad811/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-21T14:54:43Z", "updated_at": "2020-01-21T21:44:07Z", "closed_at": "2020-01-21T21:44:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Note that issues in this repository are only for bugs or feature requests in the pywin32.\r\n\r\n**If you need support or help using this package, please follow [these instructions](https://github.com/mhammond/pywin32/blob/master/README.md#support)** - support or help requests will be closed without comment.\r\n\r\nFor all bugs, please provide the following information.\r\n\r\n* Expected behavior and actual behavior.\r\nI want to call MyOle in different threads...\r\nThe second myOle.call1 will throw an exception: args:(-2147417827, 'The marshaled inter...n format.', None, None)\r\n\r\n\r\n* Steps to reproduce the problem.\r\nIn the main.py:\r\n`\r\nclass My_HTTPServer_RequestHandler(BaseHTTPRequestHandler):\r\n    def do_POST(self):\r\n        self.callFoo()\r\n\r\n    def callFoo(self):\r\n        myOle = MyOleWrapper()\r\n        myOle.create()\r\n        myOle.call1()\r\n        # This will throw an exception\r\n        myOle.call1()\r\n\r\ndef run():\r\n    server_address = ('', 80)\r\n    httpd = ThreadingHTTPServer(server_address,My_HTTPServer_RequestHandler)\r\n    try:\r\n        httpd.serve_forever()\r\n    except KeyboardInterrupt:\r\n        pass\r\n    httpd.server_close()\r\n \r\nif __name__ == \"__main__\":\r\n    run()\r\n`\r\n\r\nIn MyOleWrapper.py\r\n`\r\nfrom win32com import client\r\nimport pythoncom\r\nclass MyOleWrapper():\r\n    \r\n    def create(self):\r\n        pythoncom.CoInitialize()\r\n        ole = client.Dispatch('what ever')\r\n        oleid = pythoncom.CoMarshalInterThreadInterfaceInStream(pythoncom.IID_IDispatch, old)\r\n        return oleid\r\n\r\n    def call1(self, oleid):\r\n        pythoncom.CoInitialize()\r\n        x= client.Dispatch(pythoncom.CoGetInterfaceAndReleaseStream(oleid, pythoncom.IID_IDispatch))\r\n        x = client.Dispatch(x)\r\n        # do some stuff with x\r\n        pythoncom.CoUninitialize()\r\n`\r\n* Version of Python and pywin32\r\npython: 3.7.3\r\npywin32: 223", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1460", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1460/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1460/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1460/events", "html_url": "https://github.com/mhammond/pywin32/issues/1460", "id": 544480060, "node_id": "MDU6SXNzdWU1NDQ0ODAwNjA=", "number": 1460, "title": "SyntaxWarning on Python 3.8 and pywin32 227", "user": {"login": "Nutznieser", "id": 24735031, "node_id": "MDQ6VXNlcjI0NzM1MDMx", "avatar_url": "https://avatars3.githubusercontent.com/u/24735031?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nutznieser", "html_url": "https://github.com/Nutznieser", "followers_url": "https://api.github.com/users/Nutznieser/followers", "following_url": "https://api.github.com/users/Nutznieser/following{/other_user}", "gists_url": "https://api.github.com/users/Nutznieser/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nutznieser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nutznieser/subscriptions", "organizations_url": "https://api.github.com/users/Nutznieser/orgs", "repos_url": "https://api.github.com/users/Nutznieser/repos", "events_url": "https://api.github.com/users/Nutznieser/events{/privacy}", "received_events_url": "https://api.github.com/users/Nutznieser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-02T07:57:26Z", "updated_at": "2020-04-25T05:19:49Z", "closed_at": "2020-04-25T05:19:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got the following warning running pywin32 on python 3.8:\r\n\r\n```\r\nC:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\win32com\\client\\makepy.py:369: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\r\n  if path is not '' and not os.path.exists(path):\r\n```\r\n\r\nIt seems it should be:\r\n`if path != '' and not os.path.exists(path):`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1458", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1458/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1458/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1458/events", "html_url": "https://github.com/mhammond/pywin32/issues/1458", "id": 544088867, "node_id": "MDU6SXNzdWU1NDQwODg4Njc=", "number": 1458, "title": "Fix simple typo: wierd -> weird", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-31T04:57:58Z", "updated_at": "2020-01-06T01:29:16Z", "closed_at": "2020-01-06T01:29:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a small typo in win32/scripts/VersionStamp/vssutil.py.\nShould read `weird` rather than `wierd`.\n\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1449", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1449/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1449/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1449/events", "html_url": "https://github.com/mhammond/pywin32/issues/1449", "id": 533390270, "node_id": "MDU6SXNzdWU1MzMzOTAyNzA=", "number": 1449, "title": "pyWin32 for linux OS", "user": {"login": "bhushan-2", "id": 25223097, "node_id": "MDQ6VXNlcjI1MjIzMDk3", "avatar_url": "https://avatars1.githubusercontent.com/u/25223097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhushan-2", "html_url": "https://github.com/bhushan-2", "followers_url": "https://api.github.com/users/bhushan-2/followers", "following_url": "https://api.github.com/users/bhushan-2/following{/other_user}", "gists_url": "https://api.github.com/users/bhushan-2/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhushan-2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhushan-2/subscriptions", "organizations_url": "https://api.github.com/users/bhushan-2/orgs", "repos_url": "https://api.github.com/users/bhushan-2/repos", "events_url": "https://api.github.com/users/bhushan-2/events{/privacy}", "received_events_url": "https://api.github.com/users/bhushan-2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-05T14:34:55Z", "updated_at": "2019-12-06T00:32:36Z", "closed_at": "2019-12-06T00:32:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying to install excel2Image python package on linux machine. As this package is highly dependent on Windows OS because it uses pyWin32 module,it is giving me following error.\r\n\r\n**Could not find a version that satisfies the requirement pywin32>=223 (from pypiwin32->excel2img) (from versions: )\r\nNo matching distribution found for pywin32>=223 (from pypiwin32->excel2img)**\r\n\r\nFor windows machine it is working perfectly.\r\nIs it possible to use pyWin32 library on Linux OS or equivalent library which does similar job as pyWin32 on Linux OS\r\n\r\nPython Version : 3.x\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1441", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1441/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1441/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1441/events", "html_url": "https://github.com/mhammond/pywin32/issues/1441", "id": 520758021, "node_id": "MDU6SXNzdWU1MjA3NTgwMjE=", "number": 1441, "title": "Make code python 2/3 compatible", "user": {"login": "dhairyanadapara", "id": 19250981, "node_id": "MDQ6VXNlcjE5MjUwOTgx", "avatar_url": "https://avatars2.githubusercontent.com/u/19250981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhairyanadapara", "html_url": "https://github.com/dhairyanadapara", "followers_url": "https://api.github.com/users/dhairyanadapara/followers", "following_url": "https://api.github.com/users/dhairyanadapara/following{/other_user}", "gists_url": "https://api.github.com/users/dhairyanadapara/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhairyanadapara/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhairyanadapara/subscriptions", "organizations_url": "https://api.github.com/users/dhairyanadapara/orgs", "repos_url": "https://api.github.com/users/dhairyanadapara/repos", "events_url": "https://api.github.com/users/dhairyanadapara/events{/privacy}", "received_events_url": "https://api.github.com/users/dhairyanadapara/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-11T06:05:11Z", "updated_at": "2019-11-22T06:58:03Z", "closed_at": "2019-11-22T06:58:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, I'm using this module with `wmi.py`. I'm trying to make my code python 2/3 compatible but currently repo doesn't support python 3. Is there any plan to make it python 2/3 compatible?\r\nI can work on this you need help. :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1439", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1439/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1439/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1439/events", "html_url": "https://github.com/mhammond/pywin32/issues/1439", "id": 520578368, "node_id": "MDU6SXNzdWU1MjA1NzgzNjg=", "number": 1439, "title": "Pywin32 - Release 226 breaks Virtualenv.", "user": {"login": "KelSolaar", "id": 99779, "node_id": "MDQ6VXNlcjk5Nzc5", "avatar_url": "https://avatars1.githubusercontent.com/u/99779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KelSolaar", "html_url": "https://github.com/KelSolaar", "followers_url": "https://api.github.com/users/KelSolaar/followers", "following_url": "https://api.github.com/users/KelSolaar/following{/other_user}", "gists_url": "https://api.github.com/users/KelSolaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/KelSolaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KelSolaar/subscriptions", "organizations_url": "https://api.github.com/users/KelSolaar/orgs", "repos_url": "https://api.github.com/users/KelSolaar/repos", "events_url": "https://api.github.com/users/KelSolaar/events{/privacy}", "received_events_url": "https://api.github.com/users/KelSolaar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-11-10T09:49:35Z", "updated_at": "2019-11-14T20:54:06Z", "closed_at": "2019-11-13T23:38:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Note that issues in this repository are only for bugs or feature requests in the pywin32.\r\n\r\n**If you need support or help using this package, please follow [these instructions](https://github.com/mhammond/pywin32/blob/master/README.md#support)** - support or help requests will be closed without comment.\r\n\r\nFor all bugs, please provide the following information.\r\n\r\n* Expected behavior and actual behavior.\r\n\r\nPip installation of packages in virtual environments after having installed Pywin32 should work.\r\n\r\n* Steps to reproduce the problem.\r\n\r\nI'm not exactly sure what is happening but it seems like Pywin32 - Release 226 overrides the `site.py` module to a degree: https://github.com/colour-science/colour/runs/296273919#step:6:71\r\n\r\n```\r\n2019-11-10T09:31:49.6665830Z   - Installing pywin32 (226)\r\n2019-11-10T09:31:55.9900265Z   - Installing traitlets (4.3.3)\r\n2019-11-10T09:31:56.0385213Z \r\n2019-11-10T09:31:56.0385876Z [EnvCommandError]\r\n2019-11-10T09:31:56.0386325Z Command ['C:\\\\Users\\\\runneradmin\\\\AppData\\\\Local\\\\pypoetry\\\\Cache\\\\virtualenvs\\\\colour-9UyTvm6t-py2.7\\\\Scripts\\\\python.exe', '-m', 'pip', 'install', '--no-deps', 'traitlets==4.3.3'] errored with the following return code 1, and output: \r\n2019-11-10T09:31:56.0386682Z Traceback (most recent call last):\r\n2019-11-10T09:31:56.0386831Z \r\n2019-11-10T09:31:56.0390404Z   File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\colour-9UyTvm6t-py2.7\\lib\\site.py\", line 769, in <module>\r\n2019-11-10T09:31:56.0391101Z \r\n2019-11-10T09:31:56.0391696Z     main()\r\n2019-11-10T09:31:56.0391836Z \r\n2019-11-10T09:31:56.0392174Z   File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\colour-9UyTvm6t-py2.7\\lib\\site.py\", line 746, in main\r\n2019-11-10T09:31:56.0392414Z \r\n2019-11-10T09:31:56.0392683Z     paths_in_sys = addsitepackages(paths_in_sys)\r\n2019-11-10T09:31:56.0392841Z \r\n2019-11-10T09:31:56.0393147Z   File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\colour-9UyTvm6t-py2.7\\lib\\site.py\", line 279, in addsitepackages\r\n2019-11-10T09:31:56.0393361Z \r\n2019-11-10T09:31:56.0393635Z     addsitedir(sitedir, known_paths)\r\n2019-11-10T09:31:56.0393778Z \r\n2019-11-10T09:31:56.0394067Z   File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\colour-9UyTvm6t-py2.7\\lib\\site.py\", line 202, in addsitedir\r\n2019-11-10T09:31:56.0394280Z \r\n2019-11-10T09:31:56.0394499Z     addpackage(sitedir, name, known_paths)\r\n2019-11-10T09:31:56.0394700Z \r\n2019-11-10T09:31:56.0394997Z   File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\colour-9UyTvm6t-py2.7\\lib\\site.py\", line 170, in addpackage\r\n2019-11-10T09:31:56.0395160Z \r\n2019-11-10T09:31:56.0395377Z     exec(line)\r\n2019-11-10T09:31:56.0395557Z \r\n2019-11-10T09:31:56.0395843Z   File \"<string>\", line 1, in <module>\r\n2019-11-10T09:31:56.0395993Z \r\n2019-11-10T09:31:56.0396291Z   File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\colour-9UyTvm6t-py2.7\\lib\\site-packages\\win32\\lib\\pywin32_bootstrap.py\", line 14, in <module>\r\n2019-11-10T09:31:56.0396511Z \r\n2019-11-10T09:31:56.0397903Z     for maybe in site.getsitepackages():\r\n2019-11-10T09:31:56.0398374Z \r\n2019-11-10T09:31:56.0399692Z AttributeError: 'module' object has no attribute 'getsitepackages'\r\n```\r\n\r\nPretty much same build with Release 225 was fine yesterday: https://github.com/colour-science/colour/commit/b8399d28760179f46f7090dd69457565d1754403/checks?check_suite_id=303070722#step:6:42\r\n\r\n* Version of Python and pywin32\r\n\r\nPython 2.7 and Pywin32 - Release 226\r\n\r\nCheers,\r\n\r\nThomas", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1437", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1437/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1437/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1437/events", "html_url": "https://github.com/mhammond/pywin32/issues/1437", "id": 520315798, "node_id": "MDU6SXNzdWU1MjAzMTU3OTg=", "number": 1437, "title": "Is that pywin32==224 not supported in Python 3.8?", "user": {"login": "haroldrandom", "id": 14357159, "node_id": "MDQ6VXNlcjE0MzU3MTU5", "avatar_url": "https://avatars2.githubusercontent.com/u/14357159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haroldrandom", "html_url": "https://github.com/haroldrandom", "followers_url": "https://api.github.com/users/haroldrandom/followers", "following_url": "https://api.github.com/users/haroldrandom/following{/other_user}", "gists_url": "https://api.github.com/users/haroldrandom/gists{/gist_id}", "starred_url": "https://api.github.com/users/haroldrandom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haroldrandom/subscriptions", "organizations_url": "https://api.github.com/users/haroldrandom/orgs", "repos_url": "https://api.github.com/users/haroldrandom/repos", "events_url": "https://api.github.com/users/haroldrandom/events{/privacy}", "received_events_url": "https://api.github.com/users/haroldrandom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-09T02:12:08Z", "updated_at": "2019-11-13T00:23:34Z", "closed_at": "2019-11-13T00:23:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Today when I trying to install pywin32==24\r\n```\r\nERROR: Could not find a version that satisfies the requirement pywin32==224 (from versions: none)\r\nERROR: No matching distribution found for pywin32==224\r\n```\r\nBut it worked in Python 3.7.\r\n\r\nMy Environment:\r\n- Windows 10\r\n- Python 3.8", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1436", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1436/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1436/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1436/events", "html_url": "https://github.com/mhammond/pywin32/issues/1436", "id": 519587536, "node_id": "MDU6SXNzdWU1MTk1ODc1MzY=", "number": 1436, "title": "Visual Studio 2019 without legacy baggage", "user": {"login": "wimcolgate", "id": 695426, "node_id": "MDQ6VXNlcjY5NTQyNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/695426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wimcolgate", "html_url": "https://github.com/wimcolgate", "followers_url": "https://api.github.com/users/wimcolgate/followers", "following_url": "https://api.github.com/users/wimcolgate/following{/other_user}", "gists_url": "https://api.github.com/users/wimcolgate/gists{/gist_id}", "starred_url": "https://api.github.com/users/wimcolgate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wimcolgate/subscriptions", "organizations_url": "https://api.github.com/users/wimcolgate/orgs", "repos_url": "https://api.github.com/users/wimcolgate/repos", "events_url": "https://api.github.com/users/wimcolgate/events{/privacy}", "received_events_url": "https://api.github.com/users/wimcolgate/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-08T00:20:34Z", "updated_at": "2019-11-08T17:48:25Z", "closed_at": "2019-11-08T04:30:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sorry if this is not the right place or forum to ask this question. If not, feel free to direct me elsewhere.\r\n\r\nUsing b224, I've had trouble building with just Visual Studio 2019. \r\n\r\nI do have an environment with VS2012 w/ XP support files, VS2015 and VS2017 and I can build just fine, as the old legacy stuff is found by all that SDK sniffing.\r\n\r\nBut on a clean VM with just VS2019 (no bundled legacy tools, sdk, etc) and the most recent SDK (& WDK) I'm having issues.\r\n\r\nWithout overriding MSSDK_INCLUDE or MSSDK_LIB environment variables, I get the error that Windows 8.1 SDK cannot be found.\r\n\r\nOverriding them, I get a compile, but link fails with one error: propsys.obj : error LNK2001: unresolved external symbol CLSID_PropertyChangeArray\r\n\r\nWhat would it take to support the current Microsoft tool chain as is?\r\n\r\nIf I've missed something in the documentation, apologies ... and point me there.\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1435", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1435/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1435/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1435/events", "html_url": "https://github.com/mhammond/pywin32/issues/1435", "id": 519446768, "node_id": "MDU6SXNzdWU1MTk0NDY3Njg=", "number": 1435, "title": "Please thumbs up Awesome-python to update url", "user": {"login": "firejava", "id": 623795, "node_id": "MDQ6VXNlcjYyMzc5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/623795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/firejava", "html_url": "https://github.com/firejava", "followers_url": "https://api.github.com/users/firejava/followers", "following_url": "https://api.github.com/users/firejava/following{/other_user}", "gists_url": "https://api.github.com/users/firejava/gists{/gist_id}", "starred_url": "https://api.github.com/users/firejava/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/firejava/subscriptions", "organizations_url": "https://api.github.com/users/firejava/orgs", "repos_url": "https://api.github.com/users/firejava/repos", "events_url": "https://api.github.com/users/firejava/events{/privacy}", "received_events_url": "https://api.github.com/users/firejava/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-07T18:48:40Z", "updated_at": "2019-11-11T22:52:48Z", "closed_at": "2019-11-11T22:52:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "[Link to update Pull request](https://github.com/vinta/awesome-python/pull/1360)\r\n\r\nPlease click link above and react to first comment with thumbs up.  We need 20 thumbs up to change.  Thank you for your help.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1434", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1434/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1434/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1434/events", "html_url": "https://github.com/mhammond/pywin32/issues/1434", "id": 516903748, "node_id": "MDU6SXNzdWU1MTY5MDM3NDg=", "number": 1434, "title": " win32help.HtmlHelp crashes python3 64bit", "user": {"login": "kxrob", "id": 17337899, "node_id": "MDQ6VXNlcjE3MzM3ODk5", "avatar_url": "https://avatars1.githubusercontent.com/u/17337899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kxrob", "html_url": "https://github.com/kxrob", "followers_url": "https://api.github.com/users/kxrob/followers", "following_url": "https://api.github.com/users/kxrob/following{/other_user}", "gists_url": "https://api.github.com/users/kxrob/gists{/gist_id}", "starred_url": "https://api.github.com/users/kxrob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kxrob/subscriptions", "organizations_url": "https://api.github.com/users/kxrob/orgs", "repos_url": "https://api.github.com/users/kxrob/repos", "events_url": "https://api.github.com/users/kxrob/events{/privacy}", "received_events_url": "https://api.github.com/users/kxrob/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-03T23:03:01Z", "updated_at": "2019-11-10T07:09:11Z", "closed_at": "2019-11-10T07:09:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Almost any call to win32help.HtmlHelp hard-crashes Python(win) with Py3.7 64bit pywin32 build 225 Win10 at least !\r\nBut not with Py2.7 64bit & 32bit pywin32 build 224 .\r\nAnd also not with Py3.4 32bit pywin32 build 220 - though a string for parameter `data` needs to be utf16 encoded manually (`word.encode('utf16')+ b'\\x00\\x00' `) like this - because Py3 builds use HtmlHelpW in a raw way probably :\r\n`win32help.HtmlHelp(None, 'C:\\\\Python34\\\\Doc\\\\python342.chm', win32help.HH_DISPLAY_INDEX, b'i\\x00m\\x00p\\x00o\\x00r\\x00t\\x00\\x00\\x00\\x00\\x00')\r\n`\r\nDidn't double-check further combinations so far, but the problems seems to be with PY3 & 64bit only - since long.\r\n\r\n* Steps to reproduce the problem:\r\n\r\n`win32help.HtmlHelp(None, 'C:\\\\Python37\\\\Doc\\\\python373.chm', win32help.HH_DISPLAY_INDEX, 'import')`\r\n\r\nEven this alone crashes:\r\n\r\n`win32help.HtmlHelp(None, None, win32help.HH_INITIALIZE, 0) `\r\n(though not necessary on py2.7 and py3.4-32bit at least to run HH_DISPLAY_INDEX etc.)\r\n\r\n* Version of Python and pywin32 with error:\r\n\r\nPython 3.7.3 pywin32 build225 Win10\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1432", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1432/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1432/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1432/events", "html_url": "https://github.com/mhammond/pywin32/issues/1432", "id": 511322011, "node_id": "MDU6SXNzdWU1MTEzMjIwMTE=", "number": 1432, "title": "still can't get my hands on win32ui", "user": {"login": "bgailer", "id": 1512596, "node_id": "MDQ6VXNlcjE1MTI1OTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1512596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bgailer", "html_url": "https://github.com/bgailer", "followers_url": "https://api.github.com/users/bgailer/followers", "following_url": "https://api.github.com/users/bgailer/following{/other_user}", "gists_url": "https://api.github.com/users/bgailer/gists{/gist_id}", "starred_url": "https://api.github.com/users/bgailer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bgailer/subscriptions", "organizations_url": "https://api.github.com/users/bgailer/orgs", "repos_url": "https://api.github.com/users/bgailer/repos", "events_url": "https://api.github.com/users/bgailer/events{/privacy}", "received_events_url": "https://api.github.com/users/bgailer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-23T13:25:49Z", "updated_at": "2019-11-05T04:02:44Z", "closed_at": "2019-11-05T04:02:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Expected behavior \r\n    pywin application window\r\nactual behavior.\r\n    error \"still can't get my hands on win32ui\"\r\n\r\n* Steps to reproduce the problem.\r\n    download and run pywin32-225.win32-py3.8.exe\r\n    installation completes with no apparant problem\r\n    open Pythonwin.exe\r\n\r\n* Version of Python = 3.8.0\r\npywin32 = 225\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1431", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1431/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1431/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1431/events", "html_url": "https://github.com/mhammond/pywin32/issues/1431", "id": 511115389, "node_id": "MDU6SXNzdWU1MTExMTUzODk=", "number": 1431, "title": "ImportError: DLL load failed while importing win32event: The specified module could not be found.", "user": {"login": "inhahe", "id": 61786, "node_id": "MDQ6VXNlcjYxNzg2", "avatar_url": "https://avatars1.githubusercontent.com/u/61786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inhahe", "html_url": "https://github.com/inhahe", "followers_url": "https://api.github.com/users/inhahe/followers", "following_url": "https://api.github.com/users/inhahe/following{/other_user}", "gists_url": "https://api.github.com/users/inhahe/gists{/gist_id}", "starred_url": "https://api.github.com/users/inhahe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inhahe/subscriptions", "organizations_url": "https://api.github.com/users/inhahe/orgs", "repos_url": "https://api.github.com/users/inhahe/repos", "events_url": "https://api.github.com/users/inhahe/events{/privacy}", "received_events_url": "https://api.github.com/users/inhahe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2019-10-23T06:53:57Z", "updated_at": "2020-08-14T04:30:21Z", "closed_at": "2019-11-05T04:02:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just installed Python 3.8.0 32-bit, then installed a few modules including pywin32 using pip.\r\nWhen I try \"import win32event\", I get the following error:\r\n\r\nPython 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:21:23) [MSC v.1916 32 bit (Intel)] on win32\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import win32event\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nImportError: DLL load failed while importing win32event: The specified module could not be found.\r\n\r\nThe same happens when I try \"import win32com\". \r\n\r\nSince I found this http://www.xavierdupre.fr/blog/2014-07-01_nojs.html , I tried adding c:\\python3.8.0-32\\lib\\site-packages\\pywin32_system32 to my path and then restarting cmd and importing win32event again and still got the same error. \r\n\r\nI also tried adding \r\n\r\npath = os.path.join(os.path.split(sys.executable)[0], \"Lib\",\"site-packages\",\"pywin32_system32\")\r\nos.environ[\"PATH\"] = os.environ[\"PATH\"] + \";\" + path\r\n\r\nbefore calling qt5reactor.install() #(which is what's trying to load win32event), and that didn't work either.\r\n\r\nI also have Python 2.7 and Python 3.6 installed, but I don't seem to to have pywin32 installed on those versions of Python.\r\n\r\nI saw that a similar issue had been submitted, but it seems that it was decided that that error was due to some custom installation, and in my case there was no custom installation.\r\n\r\nI just tried copying the dll's in c:\\python3.8.0-32\\lib\\site-packages\\pywin32_system32 to c:\\python3.8.0-32, and now the import statement works.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1428", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1428/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1428/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1428/events", "html_url": "https://github.com/mhammond/pywin32/issues/1428", "id": 507143823, "node_id": "MDU6SXNzdWU1MDcxNDM4MjM=", "number": 1428, "title": "\"Unknown encoding: unicode-internal\" error is observed when trying to \"freeze\" project on Python 3.8", "user": {"login": "t-o-n-y-p", "id": 42129780, "node_id": "MDQ6VXNlcjQyMTI5Nzgw", "avatar_url": "https://avatars2.githubusercontent.com/u/42129780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-o-n-y-p", "html_url": "https://github.com/t-o-n-y-p", "followers_url": "https://api.github.com/users/t-o-n-y-p/followers", "following_url": "https://api.github.com/users/t-o-n-y-p/following{/other_user}", "gists_url": "https://api.github.com/users/t-o-n-y-p/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-o-n-y-p/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-o-n-y-p/subscriptions", "organizations_url": "https://api.github.com/users/t-o-n-y-p/orgs", "repos_url": "https://api.github.com/users/t-o-n-y-p/repos", "events_url": "https://api.github.com/users/t-o-n-y-p/events{/privacy}", "received_events_url": "https://api.github.com/users/t-o-n-y-p/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-15T10:08:51Z", "updated_at": "2019-11-02T05:05:16Z", "closed_at": "2019-11-02T05:05:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This issue can be reproduced with both pywin32 v224 and v225 for Python 3.8.\r\nWorks fine with pywin32 v224 and v225 for Python 3.7.4.\r\n\r\nSteps:\r\n- download the project https://github.com/t-o-n-y-p/rssim/tree/a48fa0665844b2d9c17106ef5203a7fe6ce5ade2 , install pywin32 and all the other requirements\r\n- run \"python setup.py build\"\r\n\r\nExpected result: executable is built successfully\r\n\r\nActual result: \"Unknown encoding: unicode-internal\" error is observed inside pywin32 lib and build fails\r\n![cxfreeze_python38_issue](https://user-images.githubusercontent.com/42129780/66822185-c43af400-ef54-11e9-9508-15d420aa57cd.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1426", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1426/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1426/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1426/events", "html_url": "https://github.com/mhammond/pywin32/issues/1426", "id": 506098937, "node_id": "MDU6SXNzdWU1MDYwOTg5Mzc=", "number": 1426, "title": "win32file.SetFileAttributes does not work", "user": {"login": "jamercee", "id": 1328402, "node_id": "MDQ6VXNlcjEzMjg0MDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1328402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamercee", "html_url": "https://github.com/jamercee", "followers_url": "https://api.github.com/users/jamercee/followers", "following_url": "https://api.github.com/users/jamercee/following{/other_user}", "gists_url": "https://api.github.com/users/jamercee/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamercee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamercee/subscriptions", "organizations_url": "https://api.github.com/users/jamercee/orgs", "repos_url": "https://api.github.com/users/jamercee/repos", "events_url": "https://api.github.com/users/jamercee/events{/privacy}", "received_events_url": "https://api.github.com/users/jamercee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-11T23:46:40Z", "updated_at": "2019-10-12T00:05:11Z", "closed_at": "2019-10-12T00:04:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to set compression on a directory using ``win32file.SetFileAttributes`` does not work.  Here is code that demonstrates the issue.\r\n\r\n```\r\nimport tempfile\r\nimport win32file, win32con\r\n\r\ndesired = (win32con.FILE_ATTRIBUTE_DIRECTORY |\r\n           win32con.FILE_ATTRIBUTE_COMPRESSED)\r\ntmpd = tempfile.mkdtemp()\r\nwin32file.SetFileAttributes(tmpd, desired)\r\nactual = win32file.GetFileAttributes(tmpd)\r\nassert desired == actual, '0x%x != 0x%x' % (desired, actual)\r\n\r\n```\r\n\r\nPlatform, Windows 10 Pro, 64-bit, python 3, pywin32 build 255.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1424", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1424/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1424/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1424/events", "html_url": "https://github.com/mhammond/pywin32/issues/1424", "id": 502935954, "node_id": "MDU6SXNzdWU1MDI5MzU5NTQ=", "number": 1424, "title": "ImportError: cannot import name 'MSO' from 'win32com.client' (C:\\Python37\\lib\\site-packages\\win32com\\client\\__init__.py)", "user": {"login": "hsluoyz", "id": 3787410, "node_id": "MDQ6VXNlcjM3ODc0MTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3787410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hsluoyz", "html_url": "https://github.com/hsluoyz", "followers_url": "https://api.github.com/users/hsluoyz/followers", "following_url": "https://api.github.com/users/hsluoyz/following{/other_user}", "gists_url": "https://api.github.com/users/hsluoyz/gists{/gist_id}", "starred_url": "https://api.github.com/users/hsluoyz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hsluoyz/subscriptions", "organizations_url": "https://api.github.com/users/hsluoyz/orgs", "repos_url": "https://api.github.com/users/hsluoyz/repos", "events_url": "https://api.github.com/users/hsluoyz/events{/privacy}", "received_events_url": "https://api.github.com/users/hsluoyz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-05T08:43:50Z", "updated_at": "2019-10-05T11:31:36Z", "closed_at": "2019-10-05T11:31:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "from win32com.client import constants as c, Dispatch, MSO\r\n\r\n* Expected behavior and actual behavior.\r\n\r\nError:\r\n\r\n```\r\nC:\\Python37\\python.exe J:/github_repos/DrawGraph/process.py\r\nTraceback (most recent call last):\r\n  File \"J:/github_repos/DrawGraph/process.py\", line 6, in <module>\r\n    from drawExcelGraph import Drawchart\r\n  File \"J:\\github_repos\\DrawGraph\\drawExcelGraph.py\", line 4, in <module>\r\n    from win32com.client import constants as c, Dispatch, MSO\r\nImportError: cannot import name 'MSO' from 'win32com.client' (C:\\Python37\\lib\\site-packages\\win32com\\client\\__init__.py)\r\n\r\nProcess finished with exit code 1\r\n```\r\n\r\n* Steps to reproduce the problem.\r\n\r\n`drawExcelGraph.py` code fragment:\r\n\r\n```py\r\n# -*- coding: utf-8 -*-\r\nimport os\r\nimport win32com.client\r\nfrom win32com.client import constants as c, Dispatch, MSO\r\nimport string\r\nfrom pandas import Series\r\nimport pythoncom\r\n\r\n...\r\n```\r\n\r\n* Version of Python and pywin32\r\n\r\nPython 3.7.4 (tags/v3.7.4:e09359112e, Jul  8 2019, 20:34:20) [MSC v.1916 64 bit (AMD64)] on win32\r\n\r\npywin32-225.win-amd64-py3.7.exe\r\n\r\n![image](https://user-images.githubusercontent.com/3787410/66252497-ea130c80-e78e-11e9-94a7-6f0e3e7f4d99.png)\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1418", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1418/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1418/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1418/events", "html_url": "https://github.com/mhammond/pywin32/issues/1418", "id": 499897366, "node_id": "MDU6SXNzdWU0OTk4OTczNjY=", "number": 1418, "title": "Problem with win32crypt", "user": {"login": "konstantinosDMS", "id": 3994851, "node_id": "MDQ6VXNlcjM5OTQ4NTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3994851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/konstantinosDMS", "html_url": "https://github.com/konstantinosDMS", "followers_url": "https://api.github.com/users/konstantinosDMS/followers", "following_url": "https://api.github.com/users/konstantinosDMS/following{/other_user}", "gists_url": "https://api.github.com/users/konstantinosDMS/gists{/gist_id}", "starred_url": "https://api.github.com/users/konstantinosDMS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/konstantinosDMS/subscriptions", "organizations_url": "https://api.github.com/users/konstantinosDMS/orgs", "repos_url": "https://api.github.com/users/konstantinosDMS/repos", "events_url": "https://api.github.com/users/konstantinosDMS/events{/privacy}", "received_events_url": "https://api.github.com/users/konstantinosDMS/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-29T10:31:40Z", "updated_at": "2019-09-30T01:07:44Z", "closed_at": "2019-09-30T01:07:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi I am new on Python and tried to install the pywin32 in a project on Visual Studio.Then I run the installation and succeded.But I get \"unresolved import win32crypt\".Any suggestion?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1415", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1415/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1415/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1415/events", "html_url": "https://github.com/mhammond/pywin32/issues/1415", "id": 498955977, "node_id": "MDU6SXNzdWU0OTg5NTU5Nzc=", "number": 1415, "title": "pywintypes.error: (50, 'GetFileSecurity', 'The request is not supported.') kernel error with jupyter lab version 1.1.4", "user": {"login": "wikwok", "id": 29019941, "node_id": "MDQ6VXNlcjI5MDE5OTQx", "avatar_url": "https://avatars3.githubusercontent.com/u/29019941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wikwok", "html_url": "https://github.com/wikwok", "followers_url": "https://api.github.com/users/wikwok/followers", "following_url": "https://api.github.com/users/wikwok/following{/other_user}", "gists_url": "https://api.github.com/users/wikwok/gists{/gist_id}", "starred_url": "https://api.github.com/users/wikwok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wikwok/subscriptions", "organizations_url": "https://api.github.com/users/wikwok/orgs", "repos_url": "https://api.github.com/users/wikwok/repos", "events_url": "https://api.github.com/users/wikwok/events{/privacy}", "received_events_url": "https://api.github.com/users/wikwok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-26T15:21:37Z", "updated_at": "2020-02-15T20:17:39Z", "closed_at": "2019-10-01T10:40:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\n\r\nLaunching jupyter notebook v1.1.4 python3.7 from Anaconda3 throws kernel error on windows 8.1\r\n\r\nDefault installation of jupyterlab v1.0.2 compiled with Anaconda3 works fine and not prone to this error.\r\n\r\nAlso Mac seems not prone to this issue when testing it on Mac.\r\n\r\ninspecting the terminal feed, it seems that pywin32 has a bug on windows8.1 causing the kernal to fail.\r\n\r\nPlease see full details below:\r\n\r\n<!--Describe the bug clearly and concisely. Include screenshots if possible-->\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\xxx\\.conda\\envs\\logAna\\lib\\site-packages\\tornado\\web.py\", line 1699, in _execute\r\n    result = await result\r\n  File \"C:\\Users\\xxx\\.conda\\envs\\logAna\\lib\\site-packages\\tornado\\gen.py\", line 742, in run\r\n    yielded = self.gen.throw(*exc_info)  # type: ignore\r\n  File \"C:\\Users\\xxx\\.conda\\envs\\logAna\\lib\\site-packages\\notebook\\services\\sessions\\handlers.py\", line 72, in post\r\n    type=mtype))\r\n  File \"C:\\Users\\sxxx\\.conda\\envs\\logAna\\lib\\site-packages\\tornado\\gen.py\", line 735, in run\r\n    value = future.result()\r\n  File \"C:\\Users\\xxx\\.conda\\envs\\logAna\\lib\\site-packages\\tornado\\gen.py\", line 742, in run\r\n    yielded = self.gen.throw(*exc_info)  # type: ignore\r\n  File \"C:\\Users\\xxx\\.conda\\envs\\logAna\\lib\\site-packages\\notebook\\services\\sessions\\sessionmanager.py\", line 88, in create_session\r\n    kernel_id = yield self.start_kernel_for_session(session_id, path, name, type, kernel_name)\r\n  File \"C:\\Users\\xxx\\.conda\\envs\\logAna\\lib\\site-packages\\tornado\\gen.py\", line 735, in run\r\n    value = future.result()\r\n  File \"C:\\Users\\xxx\\.conda\\envs\\logAna\\lib\\site-packages\\tornado\\gen.py\", line 742, in run\r\n    yielded = self.gen.throw(*exc_info)  # type: ignore\r\n  File \"C:\\Users\\xxx\\.conda\\envs\\logAna\\lib\\site-packages\\notebook\\services\\sessions\\sessionmanager.py\", line 101, in start_kernel_for_session\r\n    self.kernel_manager.start_kernel(path=kernel_path, kernel_name=kernel_name)\r\n  File \"C:\\Users\\xxx\\.conda\\envs\\logAna\\lib\\site-packages\\tornado\\gen.py\", line 735, in run\r\n    value = future.result()\r\n  File \"C:\\Users\\xxx\\.conda\\envs\\logAna\\lib\\site-packages\\tornado\\gen.py\", line 209, in wrapper\r\n    yielded = next(result)\r\n  File \"C:\\Users\\xxx\\.conda\\envs\\logAna\\lib\\site-packages\\notebook\\services\\kernels\\kernelmanager.py\", line 168, in start_kernel\r\n    super(MappingKernelManager, self).start_kernel(**kwargs)\r\n  File \"C:\\Users\\xxx\\.conda\\envs\\logAna\\lib\\site-packages\\jupyter_client\\multikernelmanager.py\", line 110, in start_kernel\r\n    km.start_kernel(**kwargs)\r\n  File \"C:\\Users\\xxx\\.conda\\envs\\logAna\\lib\\site-packages\\jupyter_client\\manager.py\", line 240, in start_kernel\r\n    self.write_connection_file()\r\n  File \"C:\\Users\\xxx\\.conda\\envs\\logAna\\lib\\site-packages\\jupyter_client\\connect.py\", line 547, in write_connection_file\r\n    kernel_name=self.kernel_name\r\n  File \"C:\\Users\\xxx\\.conda\\envs\\logAna\\lib\\site-packages\\jupyter_client\\connect.py\", line 212, in write_connection_file\r\n    with secure_write(fname) as f:\r\n  File \"C:\\Users\\xxx\\.conda\\envs\\logAna\\lib\\contextlib.py\", line 112, in __enter__\r\n    return next(self.gen)\r\n  File \"C:\\Users\\xxx\\.conda\\envs\\logAna\\lib\\site-packages\\jupyter_client\\connect.py\", line 100, in secure_write\r\n    win32_restrict_file_to_user(fname)\r\n  File \"C:\\Users\\xxx\\.conda\\envs\\logAna\\lib\\site-packages\\jupyter_client\\connect.py\", line 61, in win32_restrict_file_to_user\r\n    sd = win32security.GetFileSecurity(fname, win32security.DACL_SECURITY_INFORMATION)\r\npywintypes.error: (50, 'GetFileSecurity', 'The request is not supported.')\r\n```\r\n\r\n## Reproduce\r\n- install Anaconda3 2019.07 64bit python3.7 for windows.\r\n- I use windows 8.1 Enterprise 64bit SP0\r\n- update jupyter or install a fresh one in a new environment\r\n- run jupyter lab and start a new python3 notebook, you get the kernel error in the top right corner.\r\n\r\n\r\n<!--Describe how you diagnosed the issue. See the guidelines at\r\n https://jupyterlab.readthedocs.io/en/latest/getting_started/issue.html -->\r\n\r\nAt first instance jupyter was automatically updated when installing other Anaconda3 packages which seemed to cause the error. However, after testing lots of setups and finally installing jupyterlab on a fresh clean anaconda environment determined that the new version has got a bug running on windows 8.1 Enterprise 64bit SP0 at the least. I don't know if other versions of windows are prone to this.\r\n\r\n## Expected behavior\r\ncreate new python3.7 notebooks without any kernel errors due to pywin32.\r\n\r\n## Context\r\n\r\n<!--Complete the following for context, and add any other relevant context-->\r\n\r\n- windows 8.1 Enterprise 64bit SP0\r\n- Chrome Version 73.0.3683.75 (Official Build) (64-bit)\r\n- JupyterLab version: v1.1.4\r\n\r\n<details><summary>Troubleshoot Output</summary>\r\n<pre>\r\n\r\n(base) C:\\WINDOWS\\system32>activate test\r\n\r\n(test) C:\\WINDOWS\\system32>jupyter troubleshoot\r\n$PATH:\r\n        C:\\Users\\xxx\\.conda\\envs\\test\r\n        C:\\Users\\xxx\\.conda\\envs\\test\\Library\\mingw-w64\\bin\r\n        C:\\Users\\xxx\\.conda\\envs\\test\\Library\\usr\\bin\r\n        C:\\Users\\xxx\\.conda\\envs\\test\\Library\\bin\r\n        C:\\Users\\xxx\\.conda\\envs\\test\\Scripts\r\n        C:\\Users\\xxx\\.conda\\envs\\test\\bin\r\n        C:\\ProgramData\\Anaconda3\\condabin\r\n        C:\\oracle\\Oracle11g\\product\\11.2.0\\client_1\\bin\r\n        C:\\Rtools\\bin\r\n        C:\\ProgramData\\Oracle\\Java\\javapath\r\n        C:\\WINDOWS\\system32\r\n        C:\\WINDOWS\r\n        C:\\WINDOWS\\System32\\Wbem\r\n        C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\r\n        C:\\Program Files (x86)\\ZANTAZ\\EAS Outlook Addin\r\n        C:\\Program Files\\Liquid Technologies\\Liquid Studio 2018\\XmlDataBinder16\\\r\nRedist16\\cpp\\win32\\bin\r\n        C:\\Program Files\\Liquid Technologies\\Liquid Studio 2018\\XmlDataBinder16\\\r\nRedist16\\cpp\\win64\\bin\r\n        C:\\Program Files\\PostgreSQL\\11\\bin\r\n        C:\\Program Files\\SAS94\\Secure\\ccme4\r\n        C:\\Program Files\\SAS94\\x86\\Secure\\ccme4\r\n        C:\\oracle\\10.2.0\\bin\r\n        C:\\BI_HOME\\bin\r\n        C:\\BI_HOME\\jre\\1.4.2\\bin\r\n        C:\\BI_HOME\\jre\\1.4.2\\bin\\client\r\n        C:\\BI_HOME\\jlib\r\n        C:\\OpenSSL-Win64\\bin\r\n        C:\\Program Files (x86)\\Microsoft SQL Server\\150\\DTS\\Binn\r\n        C:\\Users\\xxx\\AppData\\Local\\Programs\\Microsoft VS Code\\bin\r\n\r\nsys.path:\r\n        C:\\Users\\xxx\\.conda\\envs\\test\\Scripts\r\n        C:\\Users\\xxx\\.conda\\envs\\test\\python37.zip\r\n        C:\\Users\\xxx\\.conda\\envs\\test\\DLLs\r\n        C:\\Users\\xxx\\.conda\\envs\\test\\lib\r\n        C:\\Users\\xxx\\.conda\\envs\\test\r\n        C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\r\n        C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\win32\r\n        C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\win32\\lib\r\n        C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\Pythonwin\r\n\r\nsys.executable:\r\n        C:\\Users\\xxx\\.conda\\envs\\test\\python.exe\r\n\r\nsys.version:\r\n        3.7.4 (default, Aug  9 2019, 18:34:13) [MSC v.1915 64 bit (AMD64)]\r\n\r\nplatform.platform():\r\n        Windows-8.1-6.3.9600-SP0\r\n\r\nwhere jupyter:\r\n        C:\\Users\\xxx\\.conda\\envs\\test\\Scripts\\jupyter.exe\r\n\r\npip list:\r\n        Package           Version\r\n        ----------------- ---------\r\n        attrs             19.1.0\r\n        backcall          0.1.0\r\n        bleach            3.1.0\r\n        certifi           2019.9.11\r\n        colorama          0.4.1\r\n        decorator         4.4.0\r\n        defusedxml        0.6.0\r\n        entrypoints       0.3\r\n        ipykernel         5.1.2\r\n        ipython           7.8.0\r\n        ipython-genutils  0.2.0\r\n        jedi              0.15.1\r\n        Jinja2            2.10.1\r\n        json5             0.8.5\r\n        jsonschema        3.0.2\r\n        jupyter-client    5.3.3\r\n        jupyter-core      4.5.0\r\n        jupyterlab        1.1.4\r\n        jupyterlab-server 1.0.6\r\n        MarkupSafe        1.1.1\r\n        mistune           0.8.4\r\n        nbconvert         5.6.0\r\n        nbformat          4.4.0\r\n        notebook          6.0.1\r\n        pandocfilters     1.4.2\r\n        parso             0.5.1\r\n        pickleshare       0.7.5\r\n        pip               19.2.3\r\n        prometheus-client 0.7.1\r\n        prompt-toolkit    2.0.9\r\n        Pygments          2.4.2\r\n        pyrsistent        0.15.4\r\n        python-dateutil   2.8.0\r\n        pywin32           223\r\n        pywinpty          0.5.5\r\n        pyzmq             18.1.0\r\n        Send2Trash        1.5.0\r\n        setuptools        41.2.0\r\n        six               1.12.0\r\n        terminado         0.8.2\r\n        testpath          0.4.2\r\n        tornado           6.0.3\r\n        traitlets         4.3.2\r\n        wcwidth           0.1.7\r\n        webencodings      0.5.1\r\n        wheel             0.33.6\r\n        wincertstore      0.2\r\n\r\n(test) C:\\WINDOWS\\system32>\r\n</pre>\r\n</details>\r\n\r\n<details><summary>Command Line Output</summary>\r\n<pre>\r\n\r\n(base) C:\\WINDOWS\\system32>activate test\r\n\r\n(test) C:\\WINDOWS\\system32>jupyter lab\r\n[I 15:50:55.678 LabApp] JupyterLab extension loaded from C:\\Users\\xxx\\\r\n.conda\\envs\\test\\lib\\site-packages\\jupyterlab\r\n[I 15:50:55.678 LabApp] JupyterLab application directory is C:\\Users\\xxx\\.conda\\envs\\test\\share\\jupyter\\lab\r\n[I 15:50:55.682 LabApp] Serving notebooks from local directory: C:\\WINDOWS\\syste\r\nm32\r\n[I 15:50:55.682 LabApp] The Jupyter Notebook is running at:\r\n[I 15:50:55.682 LabApp] http://localhost:8888/?token=e2f1c73d291f7e884d3c618eb43\r\n83196c2d75484a0f88d96\r\n[I 15:50:55.682 LabApp]  or http://127.0.0.1:8888/?token=e2f1c73d291f7e884d3c618\r\neb4383196c2d75484a0f88d96\r\n[I 15:50:55.682 LabApp] Use Control-C to stop this server and shut down all kern\r\nels (twice to skip confirmation).\r\n[C 15:50:55.914 LabApp]\r\n\r\n    To access the notebook, open this file in a browser:\r\n        file://A-FILEDATA-COV-P/Profile/xxx/AppData/Roaming/jupyter/ru\r\nntime/nbserver-8544-open.html\r\n    Or copy and paste one of these URLs:\r\n        http://localhost:8888/?token=e2f1c73d291f7e884d3c618eb4383196c2d75484a0f\r\n88d96\r\n     or http://127.0.0.1:8888/?token=e2f1c73d291f7e884d3c618eb4383196c2d75484a0f\r\n88d96\r\n[W 15:51:04.157 LabApp] Could not determine jupyterlab build status without node\r\njs\r\n[E 15:51:13.236 LabApp] Uncaught exception POST /api/sessions?1569509473167 (::1\r\n)\r\n    HTTPServerRequest(protocol='http', host='localhost:8888', method='POST', uri\r\n='/api/sessions?1569509473167', version='HTTP/1.1', remote_ip='::1')\r\n    Traceback (most recent call last):\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\tornado\\we\r\nb.py\", line 1699, in _execute\r\n        result = await result\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\tornado\\ge\r\nn.py\", line 742, in run\r\n        yielded = self.gen.throw(*exc_info)  # type: ignore\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\notebook\\s\r\nervices\\sessions\\handlers.py\", line 72, in post\r\n        type=mtype))\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\tornado\\ge\r\nn.py\", line 735, in run\r\n        value = future.result()\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\tornado\\ge\r\nn.py\", line 742, in run\r\n        yielded = self.gen.throw(*exc_info)  # type: ignore\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\notebook\\s\r\nervices\\sessions\\sessionmanager.py\", line 88, in create_session\r\n        kernel_id = yield self.start_kernel_for_session(session_id, path, name,\r\ntype, kernel_name)\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\tornado\\ge\r\nn.py\", line 735, in run\r\n        value = future.result()\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\tornado\\ge\r\nn.py\", line 742, in run\r\n        yielded = self.gen.throw(*exc_info)  # type: ignore\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\notebook\\s\r\nervices\\sessions\\sessionmanager.py\", line 101, in start_kernel_for_session\r\n        self.kernel_manager.start_kernel(path=kernel_path, kernel_name=kernel_na\r\nme)\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\tornado\\ge\r\nn.py\", line 735, in run\r\n        value = future.result()\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\tornado\\ge\r\nn.py\", line 209, in wrapper\r\n        yielded = next(result)\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\notebook\\s\r\nervices\\kernels\\kernelmanager.py\", line 168, in start_kernel\r\n        super(MappingKernelManager, self).start_kernel(**kwargs)\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\jupyter_cl\r\nient\\multikernelmanager.py\", line 110, in start_kernel\r\n        km.start_kernel(**kwargs)\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\jupyter_cl\r\nient\\manager.py\", line 240, in start_kernel\r\n        self.write_connection_file()\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\jupyter_cl\r\nient\\connect.py\", line 547, in write_connection_file\r\n        kernel_name=self.kernel_name\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\jupyter_cl\r\nient\\connect.py\", line 212, in write_connection_file\r\n        with secure_write(fname) as f:\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\contextlib.py\", line 112\r\n, in __enter__\r\n        return next(self.gen)\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\jupyter_cl\r\nient\\connect.py\", line 100, in secure_write\r\n        win32_restrict_file_to_user(fname)\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\jupyter_cl\r\nient\\connect.py\", line 61, in win32_restrict_file_to_user\r\n        sd = win32security.GetFileSecurity(fname, win32security.DACL_SECURITY_IN\r\nFORMATION)\r\n    pywintypes.error: (50, 'GetFileSecurity', 'The request is not supported.')\r\n[W 15:51:13.245 LabApp] Unhandled error\r\n[E 15:51:13.247 LabApp] {\r\n      \"Host\": \"localhost:8888\",\r\n      \"Connection\": \"keep-alive\",\r\n      \"Content-Length\": \"97\",\r\n      \"Authorization\": \"token e2f1c73d291f7e884d3c618eb4383196c2d75484a0f88d96\",\r\n\r\n      \"Origin\": \"http://localhost:8888\",\r\n      \"X-Xsrftoken\": \"2|e0797587|bfb0295d2cfd16737a016247e6e4c3bb|1569403253\",\r\n      \"User-Agent\": \"Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36\r\n (KHTML, like Gecko) Chrome/73.0.3683.75 Safari/537.36\",\r\n      \"Content-Type\": \"application/json\",\r\n      \"Accept\": \"*/*\",\r\n      \"Referer\": \"http://localhost:8888/lab\",\r\n      \"Accept-Encoding\": \"gzip, deflate, br\",\r\n      \"Accept-Language\": \"en-US,en;q=0.9\",\r\n      \"Cookie\": \"_xsrf=2|e0797587|bfb0295d2cfd16737a016247e6e4c3bb|1569403253; u\r\nsername-localhost-8889=\\\"2|1:0|10:1569504770|23:username-localhost-8889|44:NGY0Y\r\njJmZTI2MDZiNGU1ZDk5MTNjYjY3MTcwYjdlMDM=|caa84e45c938a438e74fe746b2d337a2e50d7882\r\na22c70ec0f114d22aa337feb\\\"; username-localhost-8888=\\\"2|1:0|10:1569509473|23:use\r\nrname-localhost-8888|44:MDFkMmNlYjcwYzgxNGY3M2JlYmFjYTA4OTE2MGMwNDI=|d3bdb147f2b\r\nafff4d6e7528326a74e6b7d13199b6f63400e84e2c00af8337dbf\\\"\"\r\n    }\r\n[E 15:51:13.248 LabApp] 500 POST /api/sessions?1569509473167 (::1) 69.19ms refer\r\ner=http://localhost:8888/lab\r\n[E 15:51:38.978 LabApp] Uncaught exception POST /api/sessions?1569509497781 (::1\r\n)\r\n    HTTPServerRequest(protocol='http', host='localhost:8888', method='POST', uri\r\n='/api/sessions?1569509497781', version='HTTP/1.1', remote_ip='::1')\r\n    Traceback (most recent call last):\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\tornado\\we\r\nb.py\", line 1699, in _execute\r\n        result = await result\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\tornado\\ge\r\nn.py\", line 742, in run\r\n        yielded = self.gen.throw(*exc_info)  # type: ignore\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\notebook\\s\r\nervices\\sessions\\handlers.py\", line 72, in post\r\n        type=mtype))\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\tornado\\ge\r\nn.py\", line 735, in run\r\n        value = future.result()\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\tornado\\ge\r\nn.py\", line 742, in run\r\n        yielded = self.gen.throw(*exc_info)  # type: ignore\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\notebook\\s\r\nervices\\sessions\\sessionmanager.py\", line 88, in create_session\r\n        kernel_id = yield self.start_kernel_for_session(session_id, path, name,\r\ntype, kernel_name)\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\tornado\\ge\r\nn.py\", line 735, in run\r\n        value = future.result()\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\tornado\\ge\r\nn.py\", line 742, in run\r\n        yielded = self.gen.throw(*exc_info)  # type: ignore\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\notebook\\s\r\nervices\\sessions\\sessionmanager.py\", line 101, in start_kernel_for_session\r\n        self.kernel_manager.start_kernel(path=kernel_path, kernel_name=kernel_na\r\nme)\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\tornado\\ge\r\nn.py\", line 735, in run\r\n        value = future.result()\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\tornado\\ge\r\nn.py\", line 209, in wrapper\r\n        yielded = next(result)\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\notebook\\s\r\nervices\\kernels\\kernelmanager.py\", line 168, in start_kernel\r\n        super(MappingKernelManager, self).start_kernel(**kwargs)\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\jupyter_cl\r\nient\\multikernelmanager.py\", line 110, in start_kernel\r\n        km.start_kernel(**kwargs)\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\jupyter_cl\r\nient\\manager.py\", line 240, in start_kernel\r\n        self.write_connection_file()\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\jupyter_cl\r\nient\\connect.py\", line 547, in write_connection_file\r\n        kernel_name=self.kernel_name\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\jupyter_cl\r\nient\\connect.py\", line 212, in write_connection_file\r\n        with secure_write(fname) as f:\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\contextlib.py\", line 112\r\n, in __enter__\r\n        return next(self.gen)\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\jupyter_cl\r\nient\\connect.py\", line 100, in secure_write\r\n        win32_restrict_file_to_user(fname)\r\n      File \"C:\\Users\\xxx\\.conda\\envs\\test\\lib\\site-packages\\jupyter_cl\r\nient\\connect.py\", line 61, in win32_restrict_file_to_user\r\n        sd = win32security.GetFileSecurity(fname, win32security.DACL_SECURITY_IN\r\nFORMATION)\r\n    pywintypes.error: (50, 'GetFileSecurity', 'The request is not supported.')\r\n[W 15:51:38.984 LabApp] Unhandled error\r\n[E 15:51:38.985 LabApp] {\r\n      \"Host\": \"localhost:8888\",\r\n      \"Connection\": \"keep-alive\",\r\n      \"Content-Length\": \"97\",\r\n      \"Pragma\": \"no-cache\",\r\n      \"Cache-Control\": \"no-cache\",\r\n      \"Authorization\": \"token e2f1c73d291f7e884d3c618eb4383196c2d75484a0f88d96\",\r\n\r\n      \"Origin\": \"http://localhost:8888\",\r\n      \"X-Xsrftoken\": \"2|e0797587|bfb0295d2cfd16737a016247e6e4c3bb|1569403253\",\r\n      \"User-Agent\": \"Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36\r\n (KHTML, like Gecko) Chrome/73.0.3683.75 Safari/537.36\",\r\n      \"Content-Type\": \"application/json\",\r\n      \"Accept\": \"*/*\",\r\n      \"Referer\": \"http://localhost:8888/lab\",\r\n      \"Accept-Encoding\": \"gzip, deflate, br\",\r\n      \"Accept-Language\": \"en-US,en;q=0.9\",\r\n      \"Cookie\": \"_xsrf=2|e0797587|bfb0295d2cfd16737a016247e6e4c3bb|1569403253; u\r\nsername-localhost-8889=\\\"2|1:0|10:1569504770|23:username-localhost-8889|44:NGY0Y\r\njJmZTI2MDZiNGU1ZDk5MTNjYjY3MTcwYjdlMDM=|caa84e45c938a438e74fe746b2d337a2e50d7882\r\na22c70ec0f114d22aa337feb\\\"; username-localhost-8888=\\\"2|1:0|10:1569509486|23:use\r\nrname-localhost-8888|44:OWMzYTU5MjgzZDQ0NDQ5Zjk3ZDZkYzUzNTE5MDYxMjQ=|fc18aa7b12f\r\ndfb162c64a2236e57c93d1088d13b7ae52fd63a37ffd9e815de38\\\"\"\r\n    }\r\n[E 15:51:38.986 LabApp] 500 POST /api/sessions?1569509497781 (::1) 25.07ms refer\r\ner=http://localhost:8888/lab\r\n\r\n</pre>\r\n</details>\r\n\r\n<details><summary>Browser Output</summary>\r\n<pre>\r\nStarting application in workspace: \"/lab\"\r\napi/sessions?1569509473167:1 \r\nFailed to load resource: the server responded with a status of 500 (Internal Server Error)\r\nserverconnection.js:193 \r\nPOST http://localhost:8888/api/sessions?1569509497781 500 (Internal Server Error)\r\nhandleRequest @ serverconnection.js:193\r\nmakeRequest @ serverconnection.js:75\r\nstartSession @ default.js:636\r\nstartNew @ default.js:614\r\nstartNew @ default.js:378\r\nstartNew @ session.js:50\r\nstartNew @ manager.js:166\r\n_startSession @ clientsession.js:418\r\n_changeKernel @ clientsession.js:370\r\n(anonymous) @ clientsession.js:403\r\nserverconnection.js:89 \r\nUncaught (in promise) Error: Invalid response: 500 Internal Server Error\r\n    at default.js:639\r\n    at async SessionManager.startNew (manager.js:166)\r\nResponseError @ serverconnection.js:89\r\n(anonymous) @ default.js:639\r\n</pre>\r\n</details>\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1414", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1414/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1414/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1414/events", "html_url": "https://github.com/mhammond/pywin32/issues/1414", "id": 498608120, "node_id": "MDU6SXNzdWU0OTg2MDgxMjA=", "number": 1414, "title": "Increment work memory in FormatMessage to avoid errors when formating Event log messages", "user": {"login": "cladic", "id": 12968504, "node_id": "MDQ6VXNlcjEyOTY4NTA0", "avatar_url": "https://avatars0.githubusercontent.com/u/12968504?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cladic", "html_url": "https://github.com/cladic", "followers_url": "https://api.github.com/users/cladic/followers", "following_url": "https://api.github.com/users/cladic/following{/other_user}", "gists_url": "https://api.github.com/users/cladic/gists{/gist_id}", "starred_url": "https://api.github.com/users/cladic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cladic/subscriptions", "organizations_url": "https://api.github.com/users/cladic/orgs", "repos_url": "https://api.github.com/users/cladic/repos", "events_url": "https://api.github.com/users/cladic/events{/privacy}", "received_events_url": "https://api.github.com/users/cladic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-09-26T01:55:54Z", "updated_at": "2019-10-07T06:10:14Z", "closed_at": "2019-10-07T06:10:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sometime the 512 bytes is not enough and we get error during the process to format a message in event log api. I studied the source code and I think we need two modifications: Module **Win32apimodule.cpp**, two changes 1: ==> change \"const int bufsize = **512**;\" to \"const int bufsize = **4096**;\" , 2: ==> change \"for (i = 0; i < numInserts + **2**; i++)  // Make sure clean for cleanup\"  to \"for (i = 0; i < numInserts + **8**; i++)  // Make sure clean for cleanup\". I already tested these modifications and the error during the message formating was corrected", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1410", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1410/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1410/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1410/events", "html_url": "https://github.com/mhammond/pywin32/issues/1410", "id": 496251892, "node_id": "MDU6SXNzdWU0OTYyNTE4OTI=", "number": 1410, "title": "Anyone know how use pywin2 read the cell conditional format color", "user": {"login": "virh", "id": 1642721, "node_id": "MDQ6VXNlcjE2NDI3MjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1642721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/virh", "html_url": "https://github.com/virh", "followers_url": "https://api.github.com/users/virh/followers", "following_url": "https://api.github.com/users/virh/following{/other_user}", "gists_url": "https://api.github.com/users/virh/gists{/gist_id}", "starred_url": "https://api.github.com/users/virh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/virh/subscriptions", "organizations_url": "https://api.github.com/users/virh/orgs", "repos_url": "https://api.github.com/users/virh/repos", "events_url": "https://api.github.com/users/virh/events{/privacy}", "received_events_url": "https://api.github.com/users/virh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-20T09:38:42Z", "updated_at": "2019-09-22T07:01:30Z", "closed_at": "2019-09-22T07:01:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does anyone know how to read the cell conditinal format cell, I can read the cell value, but can't read the color, why, and how we can use the FormatConditions appy to special cell, I speed two days for this, does anyone has some idea for me, thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1407", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1407/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1407/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1407/events", "html_url": "https://github.com/mhammond/pywin32/issues/1407", "id": 494264367, "node_id": "MDU6SXNzdWU0OTQyNjQzNjc=", "number": 1407, "title": "SetConsoleWindowInfo : The parameter is incorrect", "user": {"login": "sctnightcore", "id": 23263315, "node_id": "MDQ6VXNlcjIzMjYzMzE1", "avatar_url": "https://avatars2.githubusercontent.com/u/23263315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sctnightcore", "html_url": "https://github.com/sctnightcore", "followers_url": "https://api.github.com/users/sctnightcore/followers", "following_url": "https://api.github.com/users/sctnightcore/following{/other_user}", "gists_url": "https://api.github.com/users/sctnightcore/gists{/gist_id}", "starred_url": "https://api.github.com/users/sctnightcore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sctnightcore/subscriptions", "organizations_url": "https://api.github.com/users/sctnightcore/orgs", "repos_url": "https://api.github.com/users/sctnightcore/repos", "events_url": "https://api.github.com/users/sctnightcore/events{/privacy}", "received_events_url": "https://api.github.com/users/sctnightcore/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-09-16T20:37:31Z", "updated_at": "2019-11-02T05:20:09Z", "closed_at": "2019-11-02T05:20:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Note that issues in this repository are only for bugs or feature requests in the pywin32.\r\n\r\n**If you need support or help using this package, please follow [these instructions](https://github.com/mhammond/pywin32/blob/master/README.md#support)** - support or help requests will be closed without comment.\r\n\r\nFor all bugs, please provide the following information.\r\n\r\n* Expected behavior and actual behavior.\r\n\r\n* Steps reproduce the problem. to\r\nsimple code : https://gist.github.com/sctnightcore/d74b01fd8b72d8d4bf62f229a714f55a\r\n\r\ni try SetConsoleWindowInfo but get The parameter is incorrect\r\nsomething wrong ? \r\n* Version of Python and pywin32\r\nPython 3.7.4\r\npywin32 224\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1402", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1402/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1402/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1402/events", "html_url": "https://github.com/mhammond/pywin32/issues/1402", "id": 488065219, "node_id": "MDU6SXNzdWU0ODgwNjUyMTk=", "number": 1402, "title": "pywin32_postinstall.py fails with syntax error", "user": {"login": "zkghost", "id": 33910052, "node_id": "MDQ6VXNlcjMzOTEwMDUy", "avatar_url": "https://avatars3.githubusercontent.com/u/33910052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zkghost", "html_url": "https://github.com/zkghost", "followers_url": "https://api.github.com/users/zkghost/followers", "following_url": "https://api.github.com/users/zkghost/following{/other_user}", "gists_url": "https://api.github.com/users/zkghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/zkghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zkghost/subscriptions", "organizations_url": "https://api.github.com/users/zkghost/orgs", "repos_url": "https://api.github.com/users/zkghost/repos", "events_url": "https://api.github.com/users/zkghost/events{/privacy}", "received_events_url": "https://api.github.com/users/zkghost/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-02T08:28:05Z", "updated_at": "2019-11-02T05:21:52Z", "closed_at": "2019-11-02T05:21:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Repro:\r\n```\r\n# git clone repo\r\npip install pywin32\r\npython .\\pywin32_postinstall.py\r\n```\r\n# Expected\r\nIt works\r\n# Actual\r\n```\r\nPS C:\\Users\\admin\\Desktop\\src\\pywin32> python .\\pywin32_postinstall.py\r\n  File \".\\pywin32_postinstall.py\", line 75\r\n    except OSError, details:\r\n                  ^\r\nSyntaxError: invalid syntax\r\n```\r\n\r\n# Versions\r\nPython: 3.7.4\r\npywin32: 224\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1398", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1398/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1398/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1398/events", "html_url": "https://github.com/mhammond/pywin32/issues/1398", "id": 485843819, "node_id": "MDU6SXNzdWU0ODU4NDM4MTk=", "number": 1398, "title": "RegSetValueEx does not work", "user": {"login": "deogo", "id": 387522, "node_id": "MDQ6VXNlcjM4NzUyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/387522?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deogo", "html_url": "https://github.com/deogo", "followers_url": "https://api.github.com/users/deogo/followers", "following_url": "https://api.github.com/users/deogo/following{/other_user}", "gists_url": "https://api.github.com/users/deogo/gists{/gist_id}", "starred_url": "https://api.github.com/users/deogo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deogo/subscriptions", "organizations_url": "https://api.github.com/users/deogo/orgs", "repos_url": "https://api.github.com/users/deogo/repos", "events_url": "https://api.github.com/users/deogo/events{/privacy}", "received_events_url": "https://api.github.com/users/deogo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-27T14:25:05Z", "updated_at": "2019-11-03T03:39:07Z", "closed_at": "2019-11-03T03:37:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Expected behavior and actual behavior.\r\nCalling RegSetValueEx gives error\r\nSystemError: ..\\Objects\\longobject.c:998: bad argument to internal function\r\n\r\n* Steps to reproduce the problem.\r\n`import win32api as wa`\r\n`import win32con as wc`\r\n`import ctypes`\r\n`rbranch = wc.HKEY_LOCAL_MACHINE`\r\n`rkey = 'SOFTWARE\\\\SomeBranch\\\\'`\r\n`valueName = 'KeyName'`\r\n`value = 128`\r\n`try:`\r\n`  hReg = wa.RegOpenKeyEx( rbranch, rkey, 0, wc.KEY_SET_VALUE )`\r\n`except:`\r\n`  hReg,ret = wa.RegCreateKeyEx( rbranch, rkey, wc.KEY_CREATE_SUB_KEY | wc.KEY_SET_VALUE )`\r\n`wa.RegSetValueEx( hReg, valueName, 0, wc.REG_QWORD, value )`\r\n`wa.RegCloseKey( hReg )`\r\n\r\n\r\nin v.214 following variant worked\r\n`wa.RegSetValueEx( hReg, valueName, 0, wc.REG_QWORD, ctypes.c_ulonglong( value ) )`\r\n* Version of Python and pywin32\r\n2.7.16/224", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1390", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1390/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1390/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1390/events", "html_url": "https://github.com/mhammond/pywin32/issues/1390", "id": 480771314, "node_id": "MDU6SXNzdWU0ODA3NzEzMTQ=", "number": 1390, "title": "Dispatch command hanging", "user": {"login": "JAGJ10", "id": 5720623, "node_id": "MDQ6VXNlcjU3MjA2MjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5720623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JAGJ10", "html_url": "https://github.com/JAGJ10", "followers_url": "https://api.github.com/users/JAGJ10/followers", "following_url": "https://api.github.com/users/JAGJ10/following{/other_user}", "gists_url": "https://api.github.com/users/JAGJ10/gists{/gist_id}", "starred_url": "https://api.github.com/users/JAGJ10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JAGJ10/subscriptions", "organizations_url": "https://api.github.com/users/JAGJ10/orgs", "repos_url": "https://api.github.com/users/JAGJ10/repos", "events_url": "https://api.github.com/users/JAGJ10/events{/privacy}", "received_events_url": "https://api.github.com/users/JAGJ10/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-14T16:20:46Z", "updated_at": "2019-08-14T22:52:37Z", "closed_at": "2019-08-14T22:52:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have a multi-threaded application that receives a large number of messages (COM objects) in sudden bursts. During this time, I've noticed that if my other thread attempts to create a new COM object via the Dispatch call, that call seems to hang until the messages have been processed. I am wondering if this is because the win32 side of things is still trying to churn through all the messages? Is there a way to preempt this behavior to ensure that the object I'm trying to create gets created immediately?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1387", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1387/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1387/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1387/events", "html_url": "https://github.com/mhammond/pywin32/issues/1387", "id": 478548211, "node_id": "MDU6SXNzdWU0Nzg1NDgyMTE=", "number": 1387, "title": "MinGW handling in setup.py", "user": {"login": "joankaradimov", "id": 221979, "node_id": "MDQ6VXNlcjIyMTk3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/221979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joankaradimov", "html_url": "https://github.com/joankaradimov", "followers_url": "https://api.github.com/users/joankaradimov/followers", "following_url": "https://api.github.com/users/joankaradimov/following{/other_user}", "gists_url": "https://api.github.com/users/joankaradimov/gists{/gist_id}", "starred_url": "https://api.github.com/users/joankaradimov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joankaradimov/subscriptions", "organizations_url": "https://api.github.com/users/joankaradimov/orgs", "repos_url": "https://api.github.com/users/joankaradimov/repos", "events_url": "https://api.github.com/users/joankaradimov/events{/privacy}", "received_events_url": "https://api.github.com/users/joankaradimov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-08T15:39:37Z", "updated_at": "2019-09-08T14:06:09Z", "closed_at": "2019-09-08T14:06:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In `setup.py` there are few occurances of `[\"/SUBSYSTEM:CONSOLE\"]`and `[\"/SUBSYSTEM:WINDOWS\"]`. I'd like to replace those with `[\"-mconsole\", \"-municode\"]` and `[\"-mwindows\", \"-municode\"]` on mingw. However, I have no access to the `compiler` filed of `build_ext` where those are used.\r\n\r\nAny recommendation on how to approach this? Maybe I can introduce an extra argument to `WinExt_win32` and `WinExt_pythonwin`. Or is there some other way to do this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1385", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1385/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1385/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1385/events", "html_url": "https://github.com/mhammond/pywin32/issues/1385", "id": 477476440, "node_id": "MDU6SXNzdWU0Nzc0NzY0NDA=", "number": 1385, "title": "pywintypes.datetime missing milliseconds field", "user": {"login": "JAGJ10", "id": 5720623, "node_id": "MDQ6VXNlcjU3MjA2MjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5720623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JAGJ10", "html_url": "https://github.com/JAGJ10", "followers_url": "https://api.github.com/users/JAGJ10/followers", "following_url": "https://api.github.com/users/JAGJ10/following{/other_user}", "gists_url": "https://api.github.com/users/JAGJ10/gists{/gist_id}", "starred_url": "https://api.github.com/users/JAGJ10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JAGJ10/subscriptions", "organizations_url": "https://api.github.com/users/JAGJ10/orgs", "repos_url": "https://api.github.com/users/JAGJ10/repos", "events_url": "https://api.github.com/users/JAGJ10/events{/privacy}", "received_events_url": "https://api.github.com/users/JAGJ10/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-06T16:23:07Z", "updated_at": "2019-11-05T03:55:56Z", "closed_at": "2019-11-05T03:55:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm using a built version of the current repo with python 3.6.7 and am experiencing some issues with the datetime object. I have a COM timestamp object that contains milliseconds, but when I fetch it using pywin32 it is always showing 0 for the milliseconds field.\r\n\r\nI see that there was this issue: https://github.com/mhammond/pywin32/pull/1326 but I'm wondering if there might be another reason the milliseconds field isn't being populated?\r\n\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1382", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1382/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1382/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1382/events", "html_url": "https://github.com/mhammond/pywin32/issues/1382", "id": 475537418, "node_id": "MDU6SXNzdWU0NzU1Mzc0MTg=", "number": 1382, "title": "SetSecurityDescriptorGroup does not accept None as group value ", "user": {"login": "Nocturem", "id": 4144490, "node_id": "MDQ6VXNlcjQxNDQ0OTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4144490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nocturem", "html_url": "https://github.com/Nocturem", "followers_url": "https://api.github.com/users/Nocturem/followers", "following_url": "https://api.github.com/users/Nocturem/following{/other_user}", "gists_url": "https://api.github.com/users/Nocturem/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nocturem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nocturem/subscriptions", "organizations_url": "https://api.github.com/users/Nocturem/orgs", "repos_url": "https://api.github.com/users/Nocturem/repos", "events_url": "https://api.github.com/users/Nocturem/events{/privacy}", "received_events_url": "https://api.github.com/users/Nocturem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-01T08:09:15Z", "updated_at": "2019-09-09T02:47:10Z", "closed_at": "2019-09-09T02:47:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "from https://docs.microsoft.com/en-us/windows/win32/api/securitybaseapi/nf-securitybaseapi-setsecuritydescriptorgroup\r\n\r\n\"pGroup\r\n\r\nA pointer to a **SID** structure for the security descriptor's new primary group. The SID structure is referenced by, not copied into, the security descriptor. If this parameter is **NULL**, the function clears the security descriptor's primary group information. This marks the security descriptor as having no primary group.\"\r\n\r\nHowever the equivalent \r\n`sd.SetSecurityDescriptorGroup(None, False)`\r\nappears to trip on a testing for SID structure validity.\r\nhttps://github.com/mhammond/pywin32/blob/63240273565f2c51c72d687ac3fd92021ea922d0/win32/src/PySECURITY_DESCRIPTOR.cpp#L508\r\n\r\ntested on python 3.7 with pywin32-223 & pywin32-224", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1375", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1375/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1375/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1375/events", "html_url": "https://github.com/mhammond/pywin32/issues/1375", "id": 472820502, "node_id": "MDU6SXNzdWU0NzI4MjA1MDI=", "number": 1375, "title": "Build fail for python 3.7.3 on VS2017", "user": {"login": "rksinghal", "id": 15012325, "node_id": "MDQ6VXNlcjE1MDEyMzI1", "avatar_url": "https://avatars1.githubusercontent.com/u/15012325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rksinghal", "html_url": "https://github.com/rksinghal", "followers_url": "https://api.github.com/users/rksinghal/followers", "following_url": "https://api.github.com/users/rksinghal/following{/other_user}", "gists_url": "https://api.github.com/users/rksinghal/gists{/gist_id}", "starred_url": "https://api.github.com/users/rksinghal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rksinghal/subscriptions", "organizations_url": "https://api.github.com/users/rksinghal/orgs", "repos_url": "https://api.github.com/users/rksinghal/repos", "events_url": "https://api.github.com/users/rksinghal/events{/privacy}", "received_events_url": "https://api.github.com/users/rksinghal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-25T11:48:04Z", "updated_at": "2019-09-05T22:57:04Z", "closed_at": "2019-09-05T22:57:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using python 3.7.3, VS 2017 professional edition and pywin32 224 on 64 bit OS. Build python 32bit from sources. The tried building pywin32 using this python but it is failing. It is not able to get VS 2017 path. Then I tried with both options first is make changes in msvc.py in setuptools to get correct location and second is install VS2017 on location \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.1\". In both cases, getting error \"LINK : fatal error LNK1161: invalid export specification\".\r\n\r\nTried with master branch also but getting same error.\r\n\r\nPyIServerSecurity.cpp\r\nC:\\Program Files (x86)\\Microsoft Visual Studio 14.1\\VC\\Tools\\MSVC\\14.16.27023\\bin\\HostX86\\x86\\link.exe /DLL /nologo /INC\r\nREMENTAL:NO /LIBPATH:C:\\Users\\sanity\\Downloads\\Python-3.7.3\\libs /LIBPATH:C:\\Users\\sanity\\Downloads\\Python-3.7.3\\PCbuild\r\n\\win32 /LIBPATH:build\\temp.win32-3.7\\Release \"/LIBPATH:C:\\Program Files (x86)\\Windows Kits\\8.1\\lib\\winv6.3\\um\\x86\" oleau\r\nt32.lib ole32.lib user32.lib urlmon.lib python37.lib /EXPORT:DllCanUnloadNow,@1,PRIVATE /EXPORT:DllGetClassObject,@2,PRI\r\nVATE /EXPORT:PyCom_VariantFromPyObject /EXPORT:PyCom_PyObjectFromVariant /EXPORT:PyCom_InterfaceFromPyObject /EXPORT:PyC\r\nom_PyObjectFromIUnknown /EXPORT:PyCom_MakeOlePythonCall /EXPORT:PyCom_CoInitializeEx /EXPORT:PyCom_CoInitialize /EXPORT:\r\nPyCom_CoUninitialize /EXPORT:PyInit_pythoncom build\\temp.win32-3.7\\Release\\com/win32com/src/dllmain.obj build\\temp.win32\r\n-3.7\\Release\\com/win32com/src/ErrorUtils.obj build\\temp.win32-3.7\\Release\\com/win32com/src/MiscTypes.obj build\\temp.win3\r\n2-3.7\\Release\\com/win32com/src/oleargs.obj build\\temp.win32-3.7\\Release\\com/win32com/src/PyComHelpers.obj build\\temp.win\r\n32-3.7\\Release\\com/win32com/src/PyFactory.obj build\\temp.win32-3.7\\Release\\com/win32com/src/PyGatewayBase.obj build\\temp\r\n.win32-3.7\\Release\\com/win32com/src/PyIBase.obj build\\temp.win32-3.7\\Release\\com/win32com/src/PyIClassFactory.obj build\\\r\ntemp.win32-3.7\\Release\\com/win32com/src/PyIDispatch.obj build\\temp.win32-3.7\\Release\\com/win32com/src/PyIUnknown.obj bui\r\nld\\temp.win32-3.7\\Release\\com/win32com/src/PyRecord.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PySTGME\r\nDIUM.obj build\\temp.win32-3.7\\Release\\com/win32com/src/PyStorage.obj build\\temp.win32-3.7\\Release\\com/win32com/src/Pytho\r\nnCOM.obj build\\temp.win32-3.7\\Release\\com/win32com/src/Register.obj build\\temp.win32-3.7\\Release\\com/win32com/src/stdafx\r\n.obj build\\temp.win32-3.7\\Release\\com/win32com/src/univgw.obj build\\temp.win32-3.7\\Release\\com/win32com/src/univgw_datac\r\nonv.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyFUNCDESC.obj build\\temp.win32-3.7\\Release\\com/win32co\r\nm/src/extensions/PyGConnectionPoint.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyGConnectionPointConta\r\niner.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyGEnumVariant.obj build\\temp.win32-3.7\\Release\\com/wi\r\nn32com/src/extensions/PyGErrorLog.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyGPersist.obj build\\temp\r\n.win32-3.7\\Release\\com/win32com/src/extensions/PyGPersistPropertyBag.obj build\\temp.win32-3.7\\Release\\com/win32com/src/e\r\nxtensions/PyGPersistStorage.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyGPersistStream.obj build\\temp\r\n.win32-3.7\\Release\\com/win32com/src/extensions/PyGPersistStreamInit.obj build\\temp.win32-3.7\\Release\\com/win32com/src/ex\r\ntensions/PyGPropertyBag.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyGStream.obj build\\temp.win32-3.7\\\r\nRelease\\com/win32com/src/extensions/PyIBindCtx.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyICatInform\r\nation.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyICatRegister.obj build\\temp.win32-3.7\\Release\\com/w\r\nin32com/src/extensions/PyIConnectionPoint.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyIConnectionPoin\r\ntContainer.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyICreateTypeInfo.obj build\\temp.win32-3.7\\Relea\r\nse\\com/win32com/src/extensions/PyICreateTypeLib.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyICreateTy\r\npeLib2.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyIDataObject.obj build\\temp.win32-3.7\\Release\\com/w\r\nin32com/src/extensions/PyIDropSource.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyIDropTarget.obj buil\r\nd\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyIEnumCATEGORYINFO.obj build\\temp.win32-3.7\\Release\\com/win32com/s\r\nrc/extensions/PyIEnumConnectionPoints.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyIEnumConnections.ob\r\nj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyIEnumFORMATETC.obj build\\temp.win32-3.7\\Release\\com/win32co\r\nm/src/extensions/PyIEnumGUID.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyIEnumSTATPROPSETSTG.obj buil\r\nd\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyIEnumSTATPROPSTG.obj build\\temp.win32-3.7\\Release\\com/win32com/sr\r\nc/extensions/PyIEnumSTATSTG.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyIEnumString.obj build\\temp.wi\r\nn32-3.7\\Release\\com/win32com/src/extensions/PyIEnumVARIANT.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/\r\nPyIErrorLog.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyIExternalConnection.obj build\\temp.win32-3.7\\\r\nRelease\\com/win32com/src/extensions/PyIGlobalInterfaceTable.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions\r\n/PyILockBytes.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyIMoniker.obj build\\temp.win32-3.7\\Release\\c\r\nom/win32com/src/extensions/PyIOleWindow.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyIPersist.obj buil\r\nd\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyIPersistFile.obj build\\temp.win32-3.7\\Release\\com/win32com/src/ex\r\ntensions/PyIPersistPropertyBag.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyIPersistStorage.obj build\\\r\ntemp.win32-3.7\\Release\\com/win32com/src/extensions/PyIPersistStream.obj build\\temp.win32-3.7\\Release\\com/win32com/src/ex\r\ntensions/PyIPersistStreamInit.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyIPropertyBag.obj build\\temp\r\n.win32-3.7\\Release\\com/win32com/src/extensions/PyIPropertySetStorage.obj build\\temp.win32-3.7\\Release\\com/win32com/src/e\r\nxtensions/PyIPropertyStorage.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyIProvideClassInfo.obj build\\\r\ntemp.win32-3.7\\Release\\com/win32com/src/extensions/PyIRunningObjectTable.obj build\\temp.win32-3.7\\Release\\com/win32com/s\r\nrc/extensions/PyIServiceProvider.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyIStorage.obj build\\temp.\r\nwin32-3.7\\Release\\com/win32com/src/extensions/PyIStream.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyI\r\nType.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyITypeObjects.obj build\\temp.win32-3.7\\Release\\com/wi\r\nn32com/src/extensions/PyTYPEATTR.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyVARDESC.obj build\\temp.w\r\nin32-3.7\\Release\\com/win32com/src/extensions/PyICancelMethodCalls.obj build\\temp.win32-3.7\\Release\\com/win32com/src/exte\r\nnsions/PyIContext.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/PyIEnumContextProps.obj build\\temp.win32-\r\n3.7\\Release\\com/win32com/src/extensions/PyIClientSecurity.obj build\\temp.win32-3.7\\Release\\com/win32com/src/extensions/P\r\nyIServerSecurity.obj /OUT:build\\lib.win32-3.7\\pywin32_system32\\pythoncom37.dll /IMPLIB:build\\temp.win32-3.7\\Release\\com/\r\nwin32com/src\\pythoncom37.lib /MANIFEST:NO /MACHINE:x86 /BASE:0x1e200000 /DEBUG /PDB:build\\temp.win32-3.7\\Release\\pythonc\r\nom.pdb\r\nLINK : fatal error LNK1161: invalid export specification\r\nerror: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio 14.1\\\\VC\\\\Tools\\\\MSVC\\\\14.16.27023\\\\bin\\\\HostX86\\\\x86\\\\\r\nlink.exe' failed with exit status 1161 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1372", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1372/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1372/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1372/events", "html_url": "https://github.com/mhammond/pywin32/issues/1372", "id": 470925153, "node_id": "MDU6SXNzdWU0NzA5MjUxNTM=", "number": 1372, "title": "pywin32 for Linux", "user": {"login": "Srinirap", "id": 44205368, "node_id": "MDQ6VXNlcjQ0MjA1MzY4", "avatar_url": "https://avatars1.githubusercontent.com/u/44205368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Srinirap", "html_url": "https://github.com/Srinirap", "followers_url": "https://api.github.com/users/Srinirap/followers", "following_url": "https://api.github.com/users/Srinirap/following{/other_user}", "gists_url": "https://api.github.com/users/Srinirap/gists{/gist_id}", "starred_url": "https://api.github.com/users/Srinirap/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Srinirap/subscriptions", "organizations_url": "https://api.github.com/users/Srinirap/orgs", "repos_url": "https://api.github.com/users/Srinirap/repos", "events_url": "https://api.github.com/users/Srinirap/events{/privacy}", "received_events_url": "https://api.github.com/users/Srinirap/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-07-22T06:56:26Z", "updated_at": "2019-07-30T00:16:23Z", "closed_at": "2019-07-22T23:12:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nCould you please help me out to get pywin32 module for linux environment.\r\nI am currently using centos 7 with python 3.6. \r\nI am getting the below error,\r\n\r\npython3 -m pip install pywin32\r\nCollecting pywin32\r\n  ERROR: Could not find a version that satisfies the requirement pywin32 (from versions: none)\r\nERROR: No matching distribution found for pywin32\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1367", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1367/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1367/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1367/events", "html_url": "https://github.com/mhammond/pywin32/issues/1367", "id": 464442951, "node_id": "MDU6SXNzdWU0NjQ0NDI5NTE=", "number": 1367, "title": " pywin32-224-cp36-cp36m-win32.whl is not a supported wheel on this platform.", "user": {"login": "psw13583112", "id": 40815200, "node_id": "MDQ6VXNlcjQwODE1MjAw", "avatar_url": "https://avatars1.githubusercontent.com/u/40815200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/psw13583112", "html_url": "https://github.com/psw13583112", "followers_url": "https://api.github.com/users/psw13583112/followers", "following_url": "https://api.github.com/users/psw13583112/following{/other_user}", "gists_url": "https://api.github.com/users/psw13583112/gists{/gist_id}", "starred_url": "https://api.github.com/users/psw13583112/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/psw13583112/subscriptions", "organizations_url": "https://api.github.com/users/psw13583112/orgs", "repos_url": "https://api.github.com/users/psw13583112/repos", "events_url": "https://api.github.com/users/psw13583112/events{/privacy}", "received_events_url": "https://api.github.com/users/psw13583112/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-05T03:10:53Z", "updated_at": "2019-07-08T22:26:02Z", "closed_at": "2019-07-08T22:26:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to solve this problem,Other versions I've tried are still the problem.My system is Linux,thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1366", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1366/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1366/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1366/events", "html_url": "https://github.com/mhammond/pywin32/issues/1366", "id": 463628908, "node_id": "MDU6SXNzdWU0NjM2Mjg5MDg=", "number": 1366, "title": "PyPI version is regularly out of date", "user": {"login": "ExplodingCabbage", "id": 2358339, "node_id": "MDQ6VXNlcjIzNTgzMzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/2358339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ExplodingCabbage", "html_url": "https://github.com/ExplodingCabbage", "followers_url": "https://api.github.com/users/ExplodingCabbage/followers", "following_url": "https://api.github.com/users/ExplodingCabbage/following{/other_user}", "gists_url": "https://api.github.com/users/ExplodingCabbage/gists{/gist_id}", "starred_url": "https://api.github.com/users/ExplodingCabbage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ExplodingCabbage/subscriptions", "organizations_url": "https://api.github.com/users/ExplodingCabbage/orgs", "repos_url": "https://api.github.com/users/ExplodingCabbage/repos", "events_url": "https://api.github.com/users/ExplodingCabbage/events{/privacy}", "received_events_url": "https://api.github.com/users/ExplodingCabbage/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-03T08:56:32Z", "updated_at": "2019-07-03T08:58:26Z", "closed_at": "2019-07-03T08:58:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Right now, version 224 is listed in \"releases\", while PyPI only goes up to version 223 (https://pypi.org/project/pypiwin32/).\r\n\r\nI similarly noticed PyPI being several versions behind previously (see revision history at https://stackoverflow.com/a/48851291/1709587 where I documented this in 2018).\r\n\r\nI'm not sure if y'all consider this a problem or not, but if you do, perhaps it's worth adding uploading to PyPI to your release process in the README to catch this in future?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1360", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1360/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1360/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1360/events", "html_url": "https://github.com/mhammond/pywin32/issues/1360", "id": 459924488, "node_id": "MDU6SXNzdWU0NTk5MjQ0ODg=", "number": 1360, "title": "parameter error", "user": {"login": "arashtavakoli", "id": 39130316, "node_id": "MDQ6VXNlcjM5MTMwMzE2", "avatar_url": "https://avatars2.githubusercontent.com/u/39130316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arashtavakoli", "html_url": "https://github.com/arashtavakoli", "followers_url": "https://api.github.com/users/arashtavakoli/followers", "following_url": "https://api.github.com/users/arashtavakoli/following{/other_user}", "gists_url": "https://api.github.com/users/arashtavakoli/gists{/gist_id}", "starred_url": "https://api.github.com/users/arashtavakoli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arashtavakoli/subscriptions", "organizations_url": "https://api.github.com/users/arashtavakoli/orgs", "repos_url": "https://api.github.com/users/arashtavakoli/repos", "events_url": "https://api.github.com/users/arashtavakoli/events{/privacy}", "received_events_url": "https://api.github.com/users/arashtavakoli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-24T14:28:41Z", "updated_at": "2020-06-01T00:17:29Z", "closed_at": "2020-06-01T00:17:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Note that issues in this repository are only for bugs or feature requests in the pywin32.\r\n\r\n**If you need support or help using this package, please follow [these instructions](https://github.com/mhammond/pywin32/blob/master/README.md#support)** - support or help requests will be closed without comment.\r\n\r\nFor all bugs, please provide the following information.\r\n\r\n* Expected behavior and actual behavior.\r\n\r\n* Steps to reproduce the problem.\r\n\r\n* Version of Python and pywin32\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1356", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1356/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1356/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1356/events", "html_url": "https://github.com/mhammond/pywin32/issues/1356", "id": 452435897, "node_id": "MDU6SXNzdWU0NTI0MzU4OTc=", "number": 1356, "title": "win32service.SERVICE_DISABLED and win32service.SERVICE_RUNNING have the same int ( 4 )", "user": {"login": "dschiller", "id": 3144986, "node_id": "MDQ6VXNlcjMxNDQ5ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3144986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschiller", "html_url": "https://github.com/dschiller", "followers_url": "https://api.github.com/users/dschiller/followers", "following_url": "https://api.github.com/users/dschiller/following{/other_user}", "gists_url": "https://api.github.com/users/dschiller/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschiller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschiller/subscriptions", "organizations_url": "https://api.github.com/users/dschiller/orgs", "repos_url": "https://api.github.com/users/dschiller/repos", "events_url": "https://api.github.com/users/dschiller/events{/privacy}", "received_events_url": "https://api.github.com/users/dschiller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-05T10:50:46Z", "updated_at": "2019-06-27T06:15:07Z", "closed_at": "2019-06-25T08:21:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Expected behavior and actual behavior.\r\n\r\n``win32service.SERVICE_DISABLED`` has a different int than ``win32service.SERVICE_RUNNING``\r\n\r\n* Steps to reproduce the problem.\r\n\r\nThis function returns ``False`` for a disabled Service.\r\n\r\n```\r\ndef isServiceDisabled(self, serviceName):\r\n        isDisabled = win32serviceutil.QueryServiceStatus(serviceName)[1] == win32service.SERVICE_DISABLED\r\n        return isDisabled\r\n```\r\n\r\n* Version of Python and pywin32\r\nPython: 3.7.2 x64\r\npywin32: 224", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1354", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1354/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1354/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1354/events", "html_url": "https://github.com/mhammond/pywin32/issues/1354", "id": 452247646, "node_id": "MDU6SXNzdWU0NTIyNDc2NDY=", "number": 1354, "title": "ntsecuritycon.FILE_ALL_ACCESS has the wrong value", "user": {"login": "bmw", "id": 6504915, "node_id": "MDQ6VXNlcjY1MDQ5MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/6504915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmw", "html_url": "https://github.com/bmw", "followers_url": "https://api.github.com/users/bmw/followers", "following_url": "https://api.github.com/users/bmw/following{/other_user}", "gists_url": "https://api.github.com/users/bmw/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmw/subscriptions", "organizations_url": "https://api.github.com/users/bmw/orgs", "repos_url": "https://api.github.com/users/bmw/repos", "events_url": "https://api.github.com/users/bmw/events{/privacy}", "received_events_url": "https://api.github.com/users/bmw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-04T23:13:46Z", "updated_at": "2019-09-09T03:20:01Z", "closed_at": "2019-09-09T03:20:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "It's certainly possible that I'm misunderstanding something, but I suspect `ntsecuritycon.FILE_ALL_ACCESS` has the wrong value. It is set to:\r\n```\r\nSTANDARD_RIGHTS_REQUIRED | SYNCHRONIZE | 1023\r\n```\r\nHowever, `winnt.h` in my Windows 10 setup defines it as:\r\n```\r\nSTANDARD_RIGHTS_REQUIRED | SYNCHRONIZE | 511\r\n```\r\nThis difference has caused some problems in my project because we're obtaining ACLs and comparing them to `ntsecuritycon.FILE_ALL_ACCESS`, but this comparison is never successful because `ntsecuritycon.FILE_ALL_ACCESS` has an extra bit set.\r\n\r\nI created the following script to show this behavior:\r\n```\r\nimport ntsecuritycon as con\r\nimport win32api\r\nimport win32security\r\n\r\n# Get admin and user accounts\r\nADMINS = win32security.LookupAccountName(\"\", \"Administrators\")[0]\r\nUSER = win32security.LookupAccountName(\"\", win32api.GetUserName())[0]\r\n\r\n# Create a file\r\nFILENAME = \"temp.txt\"\r\nopen(FILENAME, \"w\").close()\r\n\r\n# Get current security descriptor\r\nsd = win32security.GetFileSecurity(FILENAME, win32security.DACL_SECURITY_INFORMATION)\r\n\r\n# Create and set new ACL giving admins FILE_ALL_ACCESS\r\ndacl = win32security.ACL()\r\ndacl.AddAccessAllowedAce(win32security.ACL_REVISION, con.FILE_GENERIC_READ | con.FILE_GENERIC_WRITE, USER)\r\ndacl.AddAccessAllowedAce(win32security.ACL_REVISION, con.FILE_ALL_ACCESS, ADMINS)\r\nsd.SetSecurityDescriptorDacl(1, dacl, 0)\r\nwin32security.SetFileSecurity(FILENAME, win32security.DACL_SECURITY_INFORMATION, sd)\r\n\r\n# Assert that admins ACE is set to FILE_ALL_ACCESS\r\nsd = win32security.GetFileSecurity(FILENAME, win32security.DACL_SECURITY_INFORMATION)\r\ndacl = sd.GetSecurityDescriptorDacl()\r\nfor i in range(dacl.GetAceCount()):\r\n    ace = dacl.GetAce(i)\r\n    if ace[2] == ADMINS:\r\n        # This assertion fails\r\n        assert ace[1] == con.FILE_ALL_ACCESS\r\n```\r\nI would expect the assertion on the last line to succeed because we set this ACE to `FILE_ALL_ACCESS` earlier in the script.\r\n\r\nI encountered this behavior using Python 3.7.1 and pywin32 224.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1350", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1350/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1350/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1350/events", "html_url": "https://github.com/mhammond/pywin32/issues/1350", "id": 449677788, "node_id": "MDU6SXNzdWU0NDk2Nzc3ODg=", "number": 1350, "title": "EnumChildWindows's return value should not be used", "user": {"login": "bbzy", "id": 17975012, "node_id": "MDQ6VXNlcjE3OTc1MDEy", "avatar_url": "https://avatars2.githubusercontent.com/u/17975012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bbzy", "html_url": "https://github.com/bbzy", "followers_url": "https://api.github.com/users/bbzy/followers", "following_url": "https://api.github.com/users/bbzy/following{/other_user}", "gists_url": "https://api.github.com/users/bbzy/gists{/gist_id}", "starred_url": "https://api.github.com/users/bbzy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bbzy/subscriptions", "organizations_url": "https://api.github.com/users/bbzy/orgs", "repos_url": "https://api.github.com/users/bbzy/repos", "events_url": "https://api.github.com/users/bbzy/events{/privacy}", "received_events_url": "https://api.github.com/users/bbzy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-29T08:50:26Z", "updated_at": "2019-09-09T03:24:50Z", "closed_at": "2019-09-09T03:24:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Note that issues in this repository are only for bugs or feature requests in the pywin32.\r\n\r\n**If you need support or help using this package, please follow [these instructions](https://github.com/mhammond/pywin32/blob/master/README.md#support)** - support or help requests will be closed without comment.\r\n\r\nFor all bugs, please provide the following information.\r\n\r\n* Expected behavior and actual behavior.\r\nNo exception raised\r\n* Steps to reproduce the problem.\r\nI found pywin32 uses the return value of EnumChildWindows() as according to set error state. Excactly, the code shows below:\r\nrc = EnumChildWindows(hwnd, PyEnumWindowsProc, (LPARAM)&cb);\r\nif (!rc)\r\n\treturn PyWin_SetAPIError(\"EnumChildWindows\");\r\nBut, msdn says the return value of EnumChildWindows() is not used.\r\n* Version of Python and pywin32\r\n3.7.3\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1346", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1346/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1346/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1346/events", "html_url": "https://github.com/mhammond/pywin32/issues/1346", "id": 448083738, "node_id": "MDU6SXNzdWU0NDgwODM3Mzg=", "number": 1346, "title": "Conversion from numpy.array to VARIANT fails with Python 3", "user": {"login": "panikc", "id": 50984779, "node_id": "MDQ6VXNlcjUwOTg0Nzc5", "avatar_url": "https://avatars3.githubusercontent.com/u/50984779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/panikc", "html_url": "https://github.com/panikc", "followers_url": "https://api.github.com/users/panikc/followers", "following_url": "https://api.github.com/users/panikc/following{/other_user}", "gists_url": "https://api.github.com/users/panikc/gists{/gist_id}", "starred_url": "https://api.github.com/users/panikc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/panikc/subscriptions", "organizations_url": "https://api.github.com/users/panikc/orgs", "repos_url": "https://api.github.com/users/panikc/repos", "events_url": "https://api.github.com/users/panikc/events{/privacy}", "received_events_url": "https://api.github.com/users/panikc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-24T09:59:11Z", "updated_at": "2019-09-09T03:26:03Z", "closed_at": "2019-09-09T03:26:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Passing a numpy.array to a COM method taking a VARIANT as parameter no longer works in Python 3 as compared to Python 2.\r\n\r\nThe underlying problem is that calling `PyCom_VariantFromPyObject` (oleargs.cpp) with an object of type `numpy.ndarray` containing elements of type `numpy.int32` fails with the error:\r\n\r\n> Internal error - the buffer length is not the sequence length!\r\n\r\nThe expected output would be a `VARIANT` containing a Safearray of Variants of type `VT_I4`.\r\n\r\nThe problem can be reproduced with this minimal example without the need for an actual COM interface:\r\n\r\n```python\r\nfrom ctypes import POINTER, PyDLL, byref, py_object, wintypes\r\nfrom comtypes.automation import VARIANT\r\nimport pythoncom\r\nimport numpy\r\n\r\n_dll = PyDLL(pythoncom.__file__)\r\n_pack = _dll.PyCom_VariantFromPyObject\r\n_pack.argtypes = py_object, POINTER(VARIANT)\r\n_pack.restype = wintypes.BOOL\r\n\r\ndef pack(obj):\r\n    var = VARIANT()\r\n    _pack(obj, byref(var))\r\n    return var\r\n\r\ninput1 = [1,2,3]\r\ninput2 = numpy.array(input1)\r\n\r\narr1 = pack(input1) # works with python 2 & 3\r\narr2 = pack(input2) # work with python 2, fails with python 3\r\n```\r\nReproduced using Python 3.7 and pywin32-224\r\n\r\nThere seem to be two problems:\r\n\r\n1. The first problem seems to be that inside `PyCom_VariantFromPyObject` the `PYWIN_BUFFER_CHECK` branch is taken, which tries to produce a byte array and then causes the error message in `PyCom_SAFEARRAYFromPyObjectBuildDimension`, called from`PyCom_SAFEARRAYFromPyObjectEx`. This seems to be due to the different definition of `PYWIN_BUFFER_CHECK` in Python 3 compared to Python 2: In Python 2, the branch is taken if the object _is_ a buffer, whereas in Python 3 it is erroneously taken whenever the object _can be interpreted as_ a buffer.\r\n\r\n2. When I tried to skip the `PYWIN_BUFFER_CHECK` branch in the debugger, the `PySequence_Check` branch is taken, which then correctly creates the Safearray. But then, converting each single array element from `numpy.int32` to `VARIANT` fails in an inner call to `PyCom_VariantFromPyObject` as the `PyLong_Check` branch is not taken. The reason for this seems to be that `numpy.int32` no longer has the `Py_TPFLAGS_LONG_SUBCLASS` flag in Python3, even though it can be converted using PyLong_AsLong.\r\nAs then, no branch is taken, it produces the error: \"Objects of type 'numpy.int32' can not be converted to a COM VARIANT (but obtaining the buffer() of this object could)\".", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1339", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1339/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1339/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1339/events", "html_url": "https://github.com/mhammond/pywin32/issues/1339", "id": 443083928, "node_id": "MDU6SXNzdWU0NDMwODM5Mjg=", "number": 1339, "title": "is this package compatible to python3 64 bit ?", "user": {"login": "giorgiberia", "id": 6876423, "node_id": "MDQ6VXNlcjY4NzY0MjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6876423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giorgiberia", "html_url": "https://github.com/giorgiberia", "followers_url": "https://api.github.com/users/giorgiberia/followers", "following_url": "https://api.github.com/users/giorgiberia/following{/other_user}", "gists_url": "https://api.github.com/users/giorgiberia/gists{/gist_id}", "starred_url": "https://api.github.com/users/giorgiberia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giorgiberia/subscriptions", "organizations_url": "https://api.github.com/users/giorgiberia/orgs", "repos_url": "https://api.github.com/users/giorgiberia/repos", "events_url": "https://api.github.com/users/giorgiberia/events{/privacy}", "received_events_url": "https://api.github.com/users/giorgiberia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-12T09:30:11Z", "updated_at": "2019-05-13T23:25:40Z", "closed_at": "2019-05-13T23:25:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nwhen i run install or update after i change some code in main it doesn't do anything\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/6876423/57580370-ab1bac00-74b9-11e9-9505-63ee8928cbe9.png)\r\n\r\npython version is 3.7.3 \r\n![image](https://user-images.githubusercontent.com/6876423/57580392-0fd70680-74ba-11e9-9fda-cc2bd936ff3e.png)\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1337", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1337/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1337/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1337/events", "html_url": "https://github.com/mhammond/pywin32/issues/1337", "id": 438055696, "node_id": "MDU6SXNzdWU0MzgwNTU2OTY=", "number": 1337, "title": "Controlling Pause and Continue command for print job", "user": {"login": "VictorZhang2014", "id": 6853884, "node_id": "MDQ6VXNlcjY4NTM4ODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/6853884?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VictorZhang2014", "html_url": "https://github.com/VictorZhang2014", "followers_url": "https://api.github.com/users/VictorZhang2014/followers", "following_url": "https://api.github.com/users/VictorZhang2014/following{/other_user}", "gists_url": "https://api.github.com/users/VictorZhang2014/gists{/gist_id}", "starred_url": "https://api.github.com/users/VictorZhang2014/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VictorZhang2014/subscriptions", "organizations_url": "https://api.github.com/users/VictorZhang2014/orgs", "repos_url": "https://api.github.com/users/VictorZhang2014/repos", "events_url": "https://api.github.com/users/VictorZhang2014/events{/privacy}", "received_events_url": "https://api.github.com/users/VictorZhang2014/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-28T13:17:16Z", "updated_at": "2019-04-29T07:45:17Z", "closed_at": "2019-04-29T07:45:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm new to pywin32 and windows api, but I want to control the printers' print job, so I found a doc by MSDN, link is here:\r\nhttps://docs.microsoft.com/en-us/windows/desktop/cimwin32prov/win32-printjob\r\nhttps://www.codeproject.com/Articles/6592/A-Simple-Approach-for-Controlling-Print-Jobs-using\r\n\r\n It says that `Win32_PrintJob` class has two methods, `Pause` and `Continue`, What I want is to use the two methods on Python `pywin32`.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1336", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1336/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1336/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1336/events", "html_url": "https://github.com/mhammond/pywin32/issues/1336", "id": 437975099, "node_id": "MDU6SXNzdWU0Mzc5NzUwOTk=", "number": 1336, "title": "Watch fie change", "user": {"login": "jarlva", "id": 26058035, "node_id": "MDQ6VXNlcjI2MDU4MDM1", "avatar_url": "https://avatars0.githubusercontent.com/u/26058035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jarlva", "html_url": "https://github.com/jarlva", "followers_url": "https://api.github.com/users/jarlva/followers", "following_url": "https://api.github.com/users/jarlva/following{/other_user}", "gists_url": "https://api.github.com/users/jarlva/gists{/gist_id}", "starred_url": "https://api.github.com/users/jarlva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jarlva/subscriptions", "organizations_url": "https://api.github.com/users/jarlva/orgs", "repos_url": "https://api.github.com/users/jarlva/repos", "events_url": "https://api.github.com/users/jarlva/events{/privacy}", "received_events_url": "https://api.github.com/users/jarlva/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-27T19:15:33Z", "updated_at": "2019-04-28T04:03:10Z", "closed_at": "2019-04-28T04:03:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I'm new to pywin32. Would like to pause python script until a text file is updated. Used the following code (from http://timgolden.me.uk/python/win32_how_do_i/watch_directory_for_changes.html ) but it fires twice (prints duplicates for each change). Any ideas why?\r\n\r\nimport os, time\r\nimport win32file\r\nimport win32con\r\n\r\nACTIONS = {\r\n  1 : \"Created\",\r\n  2 : \"Deleted\",\r\n  3 : \"Updated\",\r\n  4 : \"Renamed from something\",\r\n  5 : \"Renamed to something\"\r\n}\r\nFILE_LIST_DIRECTORY = 0x0001\r\n\r\npath_to_watch = \".\"\r\nhDir = win32file.CreateFile (\r\n  path_to_watch,\r\n  FILE_LIST_DIRECTORY,\r\n  win32con.FILE_SHARE_READ | win32con.FILE_SHARE_WRITE | win32con.FILE_SHARE_DELETE,\r\n  None,\r\n  win32con.OPEN_EXISTING,\r\n  win32con.FILE_FLAG_BACKUP_SEMANTICS,\r\n  None\r\n)\r\nwhile 1:\r\n    #\r\n    # ReadDirectoryChangesW takes a previously-created\r\n    # handle to a directory, a buffer size for results,\r\n    # a flag to indicate whether to watch subtrees and\r\n    # a filter of what changes to notify.\r\n    #\r\n    # NB Tim Juchcinski reports that he needed to up\r\n    # the buffer size to be sure of picking up all\r\n    # events when a large number of files were\r\n    # deleted at once.\r\n    #\r\n    time.sleep (1)\r\n    results = win32file.ReadDirectoryChangesW (\r\n        hDir,\r\n        1024,\r\n        False, \r\n        # win32con.FILE_NOTIFY_CHANGE_FILE_NAME |\r\n        #  win32con.FILE_NOTIFY_CHANGE_DIR_NAME |\r\n        #  win32con.FILE_NOTIFY_CHANGE_ATTRIBUTES |\r\n        #  win32con.FILE_NOTIFY_CHANGE_SIZE |\r\n        win32con.FILE_NOTIFY_CHANGE_LAST_WRITE , \r\n        #  win32con.FILE_NOTIFY_CHANGE_SECURITY,\r\n        None,\r\n        None\r\n    )\r\n    for action, file in results:\r\n        full_filename = os.path.join (path_to_watch, file)\r\n        print ( full_filename, ACTIONS.get (action, \"Unknown\") )\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1335", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1335/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1335/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1335/events", "html_url": "https://github.com/mhammond/pywin32/issues/1335", "id": 437939339, "node_id": "MDU6SXNzdWU0Mzc5MzkzMzk=", "number": 1335, "title": " no module named win32types", "user": {"login": "tszw", "id": 17845710, "node_id": "MDQ6VXNlcjE3ODQ1NzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/17845710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tszw", "html_url": "https://github.com/tszw", "followers_url": "https://api.github.com/users/tszw/followers", "following_url": "https://api.github.com/users/tszw/following{/other_user}", "gists_url": "https://api.github.com/users/tszw/gists{/gist_id}", "starred_url": "https://api.github.com/users/tszw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tszw/subscriptions", "organizations_url": "https://api.github.com/users/tszw/orgs", "repos_url": "https://api.github.com/users/tszw/repos", "events_url": "https://api.github.com/users/tszw/events{/privacy}", "received_events_url": "https://api.github.com/users/tszw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-27T12:36:25Z", "updated_at": "2019-04-29T07:44:15Z", "closed_at": "2019-04-28T05:30:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Note that issues in this repository are only for bugs or feature requests in the pywin32.\r\n\r\n**If you need support or help using this package, please follow [these instructions](https://github.com/mhammond/pywin32/blob/master/README.md#support)** - support or help requests will be closed without comment.\r\n\r\nFor all bugs, please provide the following information.\r\n\r\n* Expected behavior and actual behavior.\r\n\r\n* Steps to reproduce the problem.\r\n\r\n* Version of Python and pywin32: 220\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1334", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1334/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1334/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1334/events", "html_url": "https://github.com/mhammond/pywin32/issues/1334", "id": 436415241, "node_id": "MDU6SXNzdWU0MzY0MTUyNDE=", "number": 1334, "title": "DLL for opc communication crashes for python3.5+ on windows", "user": {"login": "niklas-andersson", "id": 41210346, "node_id": "MDQ6VXNlcjQxMjEwMzQ2", "avatar_url": "https://avatars2.githubusercontent.com/u/41210346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/niklas-andersson", "html_url": "https://github.com/niklas-andersson", "followers_url": "https://api.github.com/users/niklas-andersson/followers", "following_url": "https://api.github.com/users/niklas-andersson/following{/other_user}", "gists_url": "https://api.github.com/users/niklas-andersson/gists{/gist_id}", "starred_url": "https://api.github.com/users/niklas-andersson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/niklas-andersson/subscriptions", "organizations_url": "https://api.github.com/users/niklas-andersson/orgs", "repos_url": "https://api.github.com/users/niklas-andersson/repos", "events_url": "https://api.github.com/users/niklas-andersson/events{/privacy}", "received_events_url": "https://api.github.com/users/niklas-andersson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-23T22:22:21Z", "updated_at": "2019-04-24T18:10:20Z", "closed_at": "2019-04-24T03:00:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Description\r\nThere may be a pywin32 related problem that we've seen when we try to port the [OpenOPC project](http://openopc.sourceforge.net/) to Python 3.7 (x64) in Windows 10. OpenOPC was originally written for Python 2.7 (x86) but has since been ported to some extent by others to python 3. When trying to read a variable from an OPC server, the python session just crashes and terminates. The same problem is also described [here](https://stackoverflow.com/questions/52824127/python-3-6-x64-openopc) with the error message from the event viewer. \r\n\r\n* Expected behavior and actual behavior.\r\n    Expected output (from read_matrikon_opc.py): \r\n        (6334, 'Good', '2019-04-23 21:12:40+00:00')\r\nActual behavior: \r\n    Python crashes and directly terminates. In the event viewer it can be seen that gbda_aut.dll caused the problem. \r\n\r\n* Steps to reproduce the problem.\r\n 1. Unpack the attached files. [OpenOPC.zip](https://github.com/mhammond/pywin32/files/3109740/OpenOPC.zip)\r\n 2. Package Pyro4 is required (pip install Pyro4)\r\n 3. Register the dll in the OpenOPC folder. (The dll can also be downloaded from [OPC DA Auto Wrapper](http://gray-box.net/download_daawrapper.php?lang=en))\r\n`regsvr32 gbda_aut.dll`\r\n 4. Install an OPC-server, for example [matrikon](https://www.matrikonopc.com/downloads/178/drivers/index.aspx). For convenience it can also be downloaded from my [box](https://www.dropbox.com/s/m6h6bf9fju9zyrr/MatrikonOPCSimulation.exe?dl=0).\r\n 5. Run the script read_matrikon_opc.py in the OpenOPC folder.\r\n\r\n* Version of Python and pywin32\r\nThe bug only happens for Python 3.5+ (x64) in windows 10. \r\nPython 3.4 with pywin32 version 220 works fine. \r\nIt also works fine in windows 7 for all tested python versions (2.7, 3.4 and 3.7) with pywin32 versions 220-224. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1333", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1333/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1333/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1333/events", "html_url": "https://github.com/mhammond/pywin32/issues/1333", "id": 435644610, "node_id": "MDU6SXNzdWU0MzU2NDQ2MTA=", "number": 1333, "title": "error win i use it to open ppt file, the error code from win32 is -2147352570", "user": {"login": "x19990416", "id": 9440757, "node_id": "MDQ6VXNlcjk0NDA3NTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/9440757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/x19990416", "html_url": "https://github.com/x19990416", "followers_url": "https://api.github.com/users/x19990416/followers", "following_url": "https://api.github.com/users/x19990416/following{/other_user}", "gists_url": "https://api.github.com/users/x19990416/gists{/gist_id}", "starred_url": "https://api.github.com/users/x19990416/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/x19990416/subscriptions", "organizations_url": "https://api.github.com/users/x19990416/orgs", "repos_url": "https://api.github.com/users/x19990416/repos", "events_url": "https://api.github.com/users/x19990416/events{/privacy}", "received_events_url": "https://api.github.com/users/x19990416/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-22T08:20:44Z", "updated_at": "2019-04-23T05:20:54Z", "closed_at": "2019-04-23T05:20:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Note that issues in this repository are only for bugs or feature requests in the pywin32.\r\n\r\n**If you need support or help using this package, please follow [these instructions](https://github.com/mhammond/pywin32/blob/master/README.md#support)** - support or help requests will be closed without comment.\r\n\r\nFor all bugs, please provide the following information.\r\n\r\n* Expected behavior and actual behavior.\r\n\r\n* Steps to reproduce the problem.\r\n\r\n* Version of Python and pywin32\r\n\r\npywin32  version:  224\r\n\r\nwhen i use it to open ppt file, there is some exception\u3002see the detail from the image\r\n1st img\uff0cthe py code how i use pywin32 \u3002\r\n2rd img, the error from the pywin32 (`win32com\\client\\dynamic.py`)\r\n3rd img, the error where i debug info.\r\n\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/9440757/56491035-c4b08000-6519-11e9-99c4-218b266f8906.png)\r\n\r\n![image](https://user-images.githubusercontent.com/9440757/56491014-bb271800-6519-11e9-983d-daf896b745df.png)\r\n\r\n![image](https://user-images.githubusercontent.com/9440757/56491012-b3677380-6519-11e9-9657-06f3ab046ff9.png)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1332", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1332/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1332/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1332/events", "html_url": "https://github.com/mhammond/pywin32/issues/1332", "id": 435631177, "node_id": "MDU6SXNzdWU0MzU2MzExNzc=", "number": 1332, "title": "win32process.CreateRemoteThread with no response", "user": {"login": "Wall-ee", "id": 11410548, "node_id": "MDQ6VXNlcjExNDEwNTQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/11410548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Wall-ee", "html_url": "https://github.com/Wall-ee", "followers_url": "https://api.github.com/users/Wall-ee/followers", "following_url": "https://api.github.com/users/Wall-ee/following{/other_user}", "gists_url": "https://api.github.com/users/Wall-ee/gists{/gist_id}", "starred_url": "https://api.github.com/users/Wall-ee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Wall-ee/subscriptions", "organizations_url": "https://api.github.com/users/Wall-ee/orgs", "repos_url": "https://api.github.com/users/Wall-ee/repos", "events_url": "https://api.github.com/users/Wall-ee/events{/privacy}", "received_events_url": "https://api.github.com/users/Wall-ee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-22T07:28:31Z", "updated_at": "2019-04-23T05:20:08Z", "closed_at": "2019-04-23T05:19:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "For all bugs, please provide the following information.\r\n\r\n* Expected behavior and actual behavior.\r\nI want to inject a dll into a program.  After inject by c++ using CreateRemoteThread.  there is a message box comes out. \r\n\r\nbut after using win32process.CreateRemoteThread.  I got a tuple value respones. but nothing happened and no message box comming out.\r\n\r\nso is this injection successful? \r\n\r\n* Steps to reproduce the problem.\r\n1, using win32api.OpenProcess to get the target process handler\r\n```\r\ntargetHandler = win32api.OpenProcess(win32con.PROCESS_ALL_ACCESS,True,wechatPid)\r\n```\r\n\r\n2,allocate a memory using  kernel32.VirtualAllocEx\r\n```\r\ntargetNewDllAddress = kernel32.VirtualAllocEx(wechatHandler.handle,0,len(injectPath),win32con.MEM_COMMIT,win32con.PAGE_READWRITE)\r\n```\r\n\r\n3,using kernel32.WriteProcessMemory to write the dll path which i want to inject into the target process\r\n```\r\nwriteState = kernel32.WriteProcessMemory(targetHandler.handle, targetNewDllAddress, injectPath, len(injectPath), byref(written))\r\n```\r\n\r\n4, using  this two step to get the LoadLibraryA  Address\r\n```\r\nkernel32Handler = win32api.GetModuleHandle(\"Kernel32.dll\")\r\nloadLibraryAddr = win32api.GetProcAddress(kernel32Handler,\"LoadLibraryA\")\r\n```\r\n\r\n5, using win32process.CreateRemoteThread command to perfome.\r\n```\r\ninjectResult =  win32process.CreateRemoteThread(targetHandler.handle, None, 0,loadLibraryAddr, targetNewDllAddress,0)\r\n```\r\nand the result is:\r\n(<PyHANDLE:1412>, 13824)\r\nand nothing happened.   but a message box would comming out by C++ solution\r\n\r\n\r\n* Version of Python and pywin32\r\npython:\r\nPython 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 10:22:32) [MSC v.1900 64 bit (AMD64)] on \r\n\r\npywin32:\r\npywin32-224.win-amd64-py3.6.exe\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1331", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1331/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1331/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1331/events", "html_url": "https://github.com/mhammond/pywin32/issues/1331", "id": 434540207, "node_id": "MDU6SXNzdWU0MzQ1NDAyMDc=", "number": 1331, "title": "(-2147024891, 'Access is denied.', None, None)", "user": {"login": "tom-kacvinsky", "id": 5741275, "node_id": "MDQ6VXNlcjU3NDEyNzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/5741275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tom-kacvinsky", "html_url": "https://github.com/tom-kacvinsky", "followers_url": "https://api.github.com/users/tom-kacvinsky/followers", "following_url": "https://api.github.com/users/tom-kacvinsky/following{/other_user}", "gists_url": "https://api.github.com/users/tom-kacvinsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/tom-kacvinsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tom-kacvinsky/subscriptions", "organizations_url": "https://api.github.com/users/tom-kacvinsky/orgs", "repos_url": "https://api.github.com/users/tom-kacvinsky/repos", "events_url": "https://api.github.com/users/tom-kacvinsky/events{/privacy}", "received_events_url": "https://api.github.com/users/tom-kacvinsky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-18T00:28:44Z", "updated_at": "2019-04-23T08:39:04Z", "closed_at": "2019-04-23T08:39:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n* Expected behavior and actual behavior.\r\n\r\nusing Python 2.7.5 for 32-bit Windows, using pywin32 219, we do not see an error loading a COM object.  However, for Python 2.7.14 with pywin32 223, we get the following error message\r\n\r\nERROR: failed to create the foo COM application object.\r\n(-2147024891, 'Access is denied.', None, None)\r\n\r\nThe interesting thing is that for Python 2.7.14/pywin32 223, if the user switches accounts, the problem goes away.  Given the error above, I suspect pywin32 has become more stringent in terms of checking permissions, either by design or by using a different underlying system library, or perhaps an updated system library.\r\n\r\n* Steps to reproduce the problem.\r\n\r\nI need to get this information from the field engineer I am working with - it might be complicated as this is proprietary code I am working with.  Are there any variables (within Python or an environment variable) I can set to trace exactly where the error is happening?  If there is, that might help me come up with a reproducer.\r\n\r\n* Version of Python and pywin32\r\n\r\nPython 2.7.14\r\npywin32 223\r\n\r\nI also need to find out the version of Windows being (7/8/10, is it a server version, etc...)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1330", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1330/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1330/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1330/events", "html_url": "https://github.com/mhammond/pywin32/issues/1330", "id": 433096391, "node_id": "MDU6SXNzdWU0MzMwOTYzOTE=", "number": 1330, "title": "win32gui.getWindwoRect() wrong on retina screen", "user": {"login": "huhuang03", "id": 4716706, "node_id": "MDQ6VXNlcjQ3MTY3MDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4716706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huhuang03", "html_url": "https://github.com/huhuang03", "followers_url": "https://api.github.com/users/huhuang03/followers", "following_url": "https://api.github.com/users/huhuang03/following{/other_user}", "gists_url": "https://api.github.com/users/huhuang03/gists{/gist_id}", "starred_url": "https://api.github.com/users/huhuang03/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huhuang03/subscriptions", "organizations_url": "https://api.github.com/users/huhuang03/orgs", "repos_url": "https://api.github.com/users/huhuang03/repos", "events_url": "https://api.github.com/users/huhuang03/events{/privacy}", "received_events_url": "https://api.github.com/users/huhuang03/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-15T05:05:54Z", "updated_at": "2019-04-28T05:36:10Z", "closed_at": "2019-04-28T04:06:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Expected behavior and actual behavior.\r\nwin32gui.GetWindowRect() return different size vs spy++\u3002\r\n\r\nfor example:\r\nthe spy++ return (3, 3, 300, 300)\r\nbut win32gui return (2, 2, 200, 200) \r\nwhich is x1.5 scale.\r\n\r\n* Steps to reproduce the problem.\r\nInstall windows on mac's external drive. And run windows on mac.\r\n\r\n* Version of Python and pywin32\r\nPython 3.7\r\npip install's version\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1324", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1324/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1324/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1324/events", "html_url": "https://github.com/mhammond/pywin32/issues/1324", "id": 422015549, "node_id": "MDU6SXNzdWU0MjIwMTU1NDk=", "number": 1324, "title": "how can I use win32gui?", "user": {"login": "JackyNiu", "id": 34859178, "node_id": "MDQ6VXNlcjM0ODU5MTc4", "avatar_url": "https://avatars3.githubusercontent.com/u/34859178?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JackyNiu", "html_url": "https://github.com/JackyNiu", "followers_url": "https://api.github.com/users/JackyNiu/followers", "following_url": "https://api.github.com/users/JackyNiu/following{/other_user}", "gists_url": "https://api.github.com/users/JackyNiu/gists{/gist_id}", "starred_url": "https://api.github.com/users/JackyNiu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JackyNiu/subscriptions", "organizations_url": "https://api.github.com/users/JackyNiu/orgs", "repos_url": "https://api.github.com/users/JackyNiu/repos", "events_url": "https://api.github.com/users/JackyNiu/events{/privacy}", "received_events_url": "https://api.github.com/users/JackyNiu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-18T02:53:46Z", "updated_at": "2019-03-18T03:48:45Z", "closed_at": "2019-03-18T03:48:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I use win32gui, there have nothing in win32gui,\r\n\r\n`def AbortPath(*args, **kwargs): # real signature unknown\r\n    pass\r\n\r\ndef AlphaBlend(*args, **kwargs): # real signature unknown\r\n    pass\r\n\r\ndef AngleArc(*args, **kwargs): # real signature unknown\r\n    pass\r\n\r\ndef AnimateWindow(*args, **kwargs): # real signature unknown\r\n    pass\r\n\r\ndef AppendMenu(*args, **kwargs): # real signature unknown\r\n    pass\r\n\r\ndef Arc(*args, **kwargs): # real signature unknown\r\n    pass`\r\n\r\npython 3.5.4  ; pywin32 virsion 224", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1323", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1323/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1323/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1323/events", "html_url": "https://github.com/mhammond/pywin32/issues/1323", "id": 421948491, "node_id": "MDU6SXNzdWU0MjE5NDg0OTE=", "number": 1323, "title": "LogonUser via LOGON32_LOGON_NEW_CREDENTIALS", "user": {"login": "kureeoffsec", "id": 16323173, "node_id": "MDQ6VXNlcjE2MzIzMTcz", "avatar_url": "https://avatars2.githubusercontent.com/u/16323173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kureeoffsec", "html_url": "https://github.com/kureeoffsec", "followers_url": "https://api.github.com/users/kureeoffsec/followers", "following_url": "https://api.github.com/users/kureeoffsec/following{/other_user}", "gists_url": "https://api.github.com/users/kureeoffsec/gists{/gist_id}", "starred_url": "https://api.github.com/users/kureeoffsec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kureeoffsec/subscriptions", "organizations_url": "https://api.github.com/users/kureeoffsec/orgs", "repos_url": "https://api.github.com/users/kureeoffsec/repos", "events_url": "https://api.github.com/users/kureeoffsec/events{/privacy}", "received_events_url": "https://api.github.com/users/kureeoffsec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-17T17:08:23Z", "updated_at": "2019-03-18T03:49:20Z", "closed_at": "2019-03-18T03:49:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n* Expected behavior:\r\n\r\nAfter creating a new logon session, and then applying the token with impersonation, I want to use the token to authenticate to a remote system (for example to net use). \r\n\r\nActual behavior.\r\nThe remote system does not receive the impersonated token. Instead it receives the default token, and authentication fails. \r\n\r\n* Steps to reproduce the problem.\r\n\r\nfrom subprocess import Popen, PIPE\r\nimport subprocess\r\nimport win32api\r\nimport win32con\r\nimport win32security\r\n\r\ndomain = 'domain.com'\r\nusername = 'user'\r\npassword = 'password'\r\n\r\nhandle = win32security.LogonUser(username, domain, password, win32con.LOGON32_LOGON_NEW_CREDENTIALS, win32con.LOGON32_PROVIDER_WINNT50)\r\nwin32security.ImpersonateLoggedOnUser(handle)\r\n#call command on remote system with subprocess\r\nsi = win32process.STARTUPINFO()\r\ncommand = 'cmd.exe'\r\nprocArgs = (None,  # appName\r\n                command,  # commandLine\r\n                None,  # processAttributes\r\n                None,  # threadAttributes\r\n                1,  # bInheritHandles\r\n                win32process.CREATE_NEW_CONSOLE,  # dwCreationFlags\r\n                None,  # newEnvironment\r\n                None,  # currentDirectory\r\n                si) # startupinfo\r\nprocHandles = win32process.CreateProcess(*procArgs)\r\n\r\n* Version of Python and pywin32\r\nPython 3.7.2\r\npywin32==224\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1322", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1322/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1322/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1322/events", "html_url": "https://github.com/mhammond/pywin32/issues/1322", "id": 421919987, "node_id": "MDU6SXNzdWU0MjE5MTk5ODc=", "number": 1322, "title": "Volume IOCTL constants are missing", "user": {"login": "gsuyashs", "id": 15890674, "node_id": "MDQ6VXNlcjE1ODkwNjc0", "avatar_url": "https://avatars0.githubusercontent.com/u/15890674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gsuyashs", "html_url": "https://github.com/gsuyashs", "followers_url": "https://api.github.com/users/gsuyashs/followers", "following_url": "https://api.github.com/users/gsuyashs/following{/other_user}", "gists_url": "https://api.github.com/users/gsuyashs/gists{/gist_id}", "starred_url": "https://api.github.com/users/gsuyashs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gsuyashs/subscriptions", "organizations_url": "https://api.github.com/users/gsuyashs/orgs", "repos_url": "https://api.github.com/users/gsuyashs/repos", "events_url": "https://api.github.com/users/gsuyashs/events{/privacy}", "received_events_url": "https://api.github.com/users/gsuyashs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178761995, "node_id": "MDU6TGFiZWwxMTc4NzYxOTk1", "url": "https://api.github.com/repos/mhammond/pywin32/labels/feature%20request", "name": "feature request", "color": "f9dbbb", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-17T13:05:02Z", "updated_at": "2019-04-28T06:51:45Z", "closed_at": "2019-04-28T06:51:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "To deal online/offline operation with volume following volume IOCLTs are missing in `winioctlcon`:\r\n- IOCTL_VOLUME_ONLINE\r\n- IOCTL_VOLUME_OFFLINE\r\n\r\nAlthough one can use respective constants for these IOCTLs but I feel it must be present in constant list.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1321", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1321/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1321/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1321/events", "html_url": "https://github.com/mhammond/pywin32/issues/1321", "id": 421829019, "node_id": "MDU6SXNzdWU0MjE4MjkwMTk=", "number": 1321, "title": "Windows Service CWD is System32", "user": {"login": "axc450", "id": 30942843, "node_id": "MDQ6VXNlcjMwOTQyODQz", "avatar_url": "https://avatars2.githubusercontent.com/u/30942843?v=4", "gravatar_id": "", "url": "https://api.github.com/users/axc450", "html_url": "https://github.com/axc450", "followers_url": "https://api.github.com/users/axc450/followers", "following_url": "https://api.github.com/users/axc450/following{/other_user}", "gists_url": "https://api.github.com/users/axc450/gists{/gist_id}", "starred_url": "https://api.github.com/users/axc450/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/axc450/subscriptions", "organizations_url": "https://api.github.com/users/axc450/orgs", "repos_url": "https://api.github.com/users/axc450/repos", "events_url": "https://api.github.com/users/axc450/events{/privacy}", "received_events_url": "https://api.github.com/users/axc450/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-16T16:53:55Z", "updated_at": "2019-03-18T03:52:18Z", "closed_at": "2019-03-18T03:52:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\r\n\r\nWhen I install my application as a Windows Service, the CWD of this app is the System32 folder despite the service showing the correct path under \"Path to executable:\".\r\n\r\nI noticed that `sys.argv[0]` contains the correct path too, so I can extract it and then use a `os.chdir` before I run my app. I was wondering if this is intended behaviour and if this is the correct way to be dealing with this (if so, is this the correct place to be changing the CWD?). In my opinion, the default CWD of a service should be where the exe is, but I am in no means an expert with Windows Services \ud83d\ude04  Code for service below:\r\n\r\n```\r\nimport servicemanager\r\nimport socket\r\nimport sys\r\nimport win32event\r\nimport win32service\r\nimport win32serviceutil\r\n\r\nimport os\r\n\r\n\r\nclass TestService(win32serviceutil.ServiceFramework):\r\n    _svc_name_ = \"TestService\"\r\n    _svc_display_name_ = \"Test Service\"\r\n\r\n    def __init__(self, args):\r\n        win32serviceutil.ServiceFramework.__init__(self, args)\r\n        self.hWaitStop = win32event.CreateEvent(None, 0, 0, None)\r\n        socket.setdefaulttimeout(60)\r\n\r\n    def SvcStop(self):\r\n        self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING)\r\n        win32event.SetEvent(self.hWaitStop)\r\n\r\n    def SvcDoRun(self):\r\n        # Here I am changing the CWD. We can use sys.argv[0] to get the path.\r\n        os.chdir(\"C:\\\\Test\")\r\n\r\n        import app\r\n        app.run()\r\n\r\n\r\nif __name__ == '__main__':\r\n    if len(sys.argv) == 1:\r\n        servicemanager.Initialize()\r\n        servicemanager.PrepareToHostSingle(TestService)\r\n        servicemanager.StartServiceCtrlDispatcher()\r\n    else:\r\n        win32serviceutil.HandleCommandLine(TestService)\r\n```\r\n\r\nRelated: #720", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1317", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1317/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1317/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1317/events", "html_url": "https://github.com/mhammond/pywin32/issues/1317", "id": 418655080, "node_id": "MDU6SXNzdWU0MTg2NTUwODA=", "number": 1317, "title": "Having trouble with win32com in python", "user": {"login": "antony0808", "id": 24729050, "node_id": "MDQ6VXNlcjI0NzI5MDUw", "avatar_url": "https://avatars2.githubusercontent.com/u/24729050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antony0808", "html_url": "https://github.com/antony0808", "followers_url": "https://api.github.com/users/antony0808/followers", "following_url": "https://api.github.com/users/antony0808/following{/other_user}", "gists_url": "https://api.github.com/users/antony0808/gists{/gist_id}", "starred_url": "https://api.github.com/users/antony0808/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antony0808/subscriptions", "organizations_url": "https://api.github.com/users/antony0808/orgs", "repos_url": "https://api.github.com/users/antony0808/repos", "events_url": "https://api.github.com/users/antony0808/events{/privacy}", "received_events_url": "https://api.github.com/users/antony0808/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-08T06:46:10Z", "updated_at": "2019-03-08T13:12:30Z", "closed_at": "2019-03-08T13:12:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "when i run the command\r\n\r\n```\r\nimport win32com.client\r\nexl = win32com.client.Dispatch('Excel.Application')\r\n```\r\nim getting the following error.. how can i solve this\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\win32com\\client\\dynamic.py\", line 89, in _GetGoodDispatch\r\n    IDispatch = pythoncom.connect(IDispatch)\r\npywintypes.com_error: (-2147221021, 'Operation unavailable', None, None)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\win32com\\client\\__init__.py\", line 95, in Dispatch\r\n    dispatch, userName = dynamic._GetGoodDispatchAndUserName(dispatch,userName,clsctx)\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\win32com\\client\\dynamic.py\", line 114, in _GetGoodDispatchAndUserName\r\n    return (_GetGoodDispatch(IDispatch, clsctx), userName)\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\win32com\\client\\dynamic.py\", line 91, in _GetGoodDispatch\r\n    IDispatch = pythoncom.CoCreateInstance(IDispatch, None, clsctx, pythoncom.IID_IDispatch)\r\npywintypes.com_error: (-2147024893, 'The system cannot find the path specified.', None, None)\r\n```\r\n![capture](https://user-images.githubusercontent.com/24729050/54012494-40d64a80-419c-11e9-9b1b-fecf4e68a6e1.PNG)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1316", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1316/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1316/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1316/events", "html_url": "https://github.com/mhammond/pywin32/issues/1316", "id": 416773663, "node_id": "MDU6SXNzdWU0MTY3NzM2NjM=", "number": 1316, "title": "exeName quotation mark for script win32serviceutil.py", "user": {"login": "achillis2016", "id": 16607564, "node_id": "MDQ6VXNlcjE2NjA3NTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/16607564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/achillis2016", "html_url": "https://github.com/achillis2016", "followers_url": "https://api.github.com/users/achillis2016/followers", "following_url": "https://api.github.com/users/achillis2016/following{/other_user}", "gists_url": "https://api.github.com/users/achillis2016/gists{/gist_id}", "starred_url": "https://api.github.com/users/achillis2016/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/achillis2016/subscriptions", "organizations_url": "https://api.github.com/users/achillis2016/orgs", "repos_url": "https://api.github.com/users/achillis2016/repos", "events_url": "https://api.github.com/users/achillis2016/events{/privacy}", "received_events_url": "https://api.github.com/users/achillis2016/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-03-04T12:15:04Z", "updated_at": "2019-03-07T18:13:45Z", "closed_at": "2019-03-04T13:14:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "File : /win32/Lib/win32serviceutil.py\r\nCode in  function InstallService and ChangeServiceConfig:\r\n\r\nexeName = '\"%s\"' % LocatePythonServiceExe(exeName) # None here means use default PythonService.exe\r\n\r\nIs the inner quotation mark necessary? \r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1315", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1315/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1315/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1315/events", "html_url": "https://github.com/mhammond/pywin32/issues/1315", "id": 416440587, "node_id": "MDU6SXNzdWU0MTY0NDA1ODc=", "number": 1315, "title": "Unable to import pywin32", "user": {"login": "ExpertsGaming", "id": 26716524, "node_id": "MDQ6VXNlcjI2NzE2NTI0", "avatar_url": "https://avatars1.githubusercontent.com/u/26716524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ExpertsGaming", "html_url": "https://github.com/ExpertsGaming", "followers_url": "https://api.github.com/users/ExpertsGaming/followers", "following_url": "https://api.github.com/users/ExpertsGaming/following{/other_user}", "gists_url": "https://api.github.com/users/ExpertsGaming/gists{/gist_id}", "starred_url": "https://api.github.com/users/ExpertsGaming/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ExpertsGaming/subscriptions", "organizations_url": "https://api.github.com/users/ExpertsGaming/orgs", "repos_url": "https://api.github.com/users/ExpertsGaming/repos", "events_url": "https://api.github.com/users/ExpertsGaming/events{/privacy}", "received_events_url": "https://api.github.com/users/ExpertsGaming/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-02T20:49:14Z", "updated_at": "2019-03-03T22:35:19Z", "closed_at": "2019-03-03T22:35:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am making a program that can change time (personal project) and I found some premade code that helps to change it, but when I installed pywin32 (tried both pip and installer), I get `ModuleNotFoundError: No module named 'pywin32'`\r\nThis is the code:\r\n`def _win_set_time(time_tuple):\r\n    import pywin32\r\n    # http://timgolden.me.uk/pywin32-docs/win32api__SetSystemTime_meth.html\r\n    # pywin32.SetSystemTime(year, month , dayOfWeek , day , hour , minute , second , millseconds )\r\n    dayOfWeek = datetime.datetime(time_tuple).isocalendar()[2]\r\n    pywin32.SetSystemTime( time_tuple[:2] + (dayOfWeek,) + time_tuple[2:])`\r\n\r\npywin32 version is 224", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1314", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1314/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1314/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1314/events", "html_url": "https://github.com/mhammond/pywin32/issues/1314", "id": 416404999, "node_id": "MDU6SXNzdWU0MTY0MDQ5OTk=", "number": 1314, "title": "Cite pywin32 using a DOI", "user": {"login": "amabdallah", "id": 3268971, "node_id": "MDQ6VXNlcjMyNjg5NzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3268971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amabdallah", "html_url": "https://github.com/amabdallah", "followers_url": "https://api.github.com/users/amabdallah/followers", "following_url": "https://api.github.com/users/amabdallah/following{/other_user}", "gists_url": "https://api.github.com/users/amabdallah/gists{/gist_id}", "starred_url": "https://api.github.com/users/amabdallah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amabdallah/subscriptions", "organizations_url": "https://api.github.com/users/amabdallah/orgs", "repos_url": "https://api.github.com/users/amabdallah/repos", "events_url": "https://api.github.com/users/amabdallah/events{/privacy}", "received_events_url": "https://api.github.com/users/amabdallah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-03-02T14:57:13Z", "updated_at": "2019-03-18T22:17:03Z", "closed_at": "2019-03-18T03:51:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Mark,\r\n\r\nThanks for the very useful tool. Would you please create a DOI for this repository so I can cite it appropriately? Peer-reviewed papers/journals love DOIs :)\r\n\r\nHere is how you could easily do it with Zonedo in case you're not aware of it    \r\nhttps://guides.github.com/activities/citable-code/\r\n\r\nThank you so much for the handy tool\r\nAdel", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1307", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1307/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1307/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1307/events", "html_url": "https://github.com/mhammond/pywin32/issues/1307", "id": 408439794, "node_id": "MDU6SXNzdWU0MDg0Mzk3OTQ=", "number": 1307, "title": "No module named win32api", "user": {"login": "sryze", "id": 4525736, "node_id": "MDQ6VXNlcjQ1MjU3MzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4525736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sryze", "html_url": "https://github.com/sryze", "followers_url": "https://api.github.com/users/sryze/followers", "following_url": "https://api.github.com/users/sryze/following{/other_user}", "gists_url": "https://api.github.com/users/sryze/gists{/gist_id}", "starred_url": "https://api.github.com/users/sryze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sryze/subscriptions", "organizations_url": "https://api.github.com/users/sryze/orgs", "repos_url": "https://api.github.com/users/sryze/repos", "events_url": "https://api.github.com/users/sryze/events{/privacy}", "received_events_url": "https://api.github.com/users/sryze/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-09T15:13:13Z", "updated_at": "2019-03-13T02:43:45Z", "closed_at": "2019-03-13T02:43:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python can't find the  `win32api` module.\r\n\r\n* Steps to reproduce the problem.\r\n\r\n1. Run python\r\n2. Execute `import win32api`\r\n\r\nFor example, I'm trying to build [Deluge](https://github.com/deluge-torrent/deluge) on Windows, here is an error that I get when I try to run it:\r\n\r\n```\r\n(env) c:\\deluge>env\\Scripts\\deluged\r\nTraceback (most recent call last):\r\n  File \"c:\\deluge\\env\\Scripts\\deluged-script.py\", line 11, in <module>\r\n    load_entry_point('deluge', 'console_scripts', 'deluged')()\r\n  File \"c:\\deluge\\deluge\\core\\daemon_entry.py\", line 90, in start_daemon\r\n    from deluge.core.daemon import is_daemon_running\r\n  File \"c:\\deluge\\deluge\\core\\daemon.py\", line 22, in <module>\r\n    from deluge.core.core import Core\r\n  File \"c:\\deluge\\deluge\\core\\core.py\", line 23, in <module>\r\n    from twisted.web.client import Agent, readBody\r\n  File \"c:\\deluge\\env\\lib\\site-packages\\twisted-18.9.0-py2.7-win32.egg\\twisted\\web\\client.py\", line 41, in <module>\r\n    from twisted.internet.endpoints import HostnameEndpoint, wrapClientTLS\r\n  File \"c:\\deluge\\env\\lib\\site-packages\\twisted-18.9.0-py2.7-win32.egg\\twisted\\internet\\endpoints.py\", line 41, in <module>\r\n    from twisted.internet.stdio import StandardIO, PipeAddress\r\n  File \"c:\\deluge\\env\\lib\\site-packages\\twisted-18.9.0-py2.7-win32.egg\\twisted\\internet\\stdio.py\", line 30, in <module>\r\n    from twisted.internet import _win32stdio\r\n  File \"c:\\deluge\\env\\lib\\site-packages\\twisted-18.9.0-py2.7-win32.egg\\twisted\\internet\\_win32stdio.py\", line 9, in <module>\r\n    import win32api\r\n```\r\n\r\n```\r\n>pip show pywin32\r\nDEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won't be maintained after that date. A future version of pip will drop support for Python 2.7.\r\nName: pywin32\r\nVersion: 224\r\nSummary: Python for Window Extensions\r\nHome-page: https://github.com/mhammond/pywin32\r\nAuthor: Mark Hammond (et al)\r\nAuthor-email: mhammond@skippinet.com.au\r\nLicense: PSF\r\nLocation: e:\\sources\\deluge\\env\\lib\\site-packages\\pywin32-224-py2.7-win32.egg\r\nRequires:\r\nRequired-by: pypiwin32, deluge\r\n```\r\n\r\n* Version of Python and pywin32\r\n\r\n  pywin32 224\r\n  Tried with both Python 2.7 and 3.7\r\n  Windows 10\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1305", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1305/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1305/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1305/events", "html_url": "https://github.com/mhammond/pywin32/issues/1305", "id": 403937816, "node_id": "MDU6SXNzdWU0MDM5Mzc4MTY=", "number": 1305, "title": "getting error pywintypes.com_error: (-2147221021, 'Operation unavailable', None, None) when connecting to alm", "user": {"login": "neeraj2019", "id": 47003412, "node_id": "MDQ6VXNlcjQ3MDAzNDEy", "avatar_url": "https://avatars1.githubusercontent.com/u/47003412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neeraj2019", "html_url": "https://github.com/neeraj2019", "followers_url": "https://api.github.com/users/neeraj2019/followers", "following_url": "https://api.github.com/users/neeraj2019/following{/other_user}", "gists_url": "https://api.github.com/users/neeraj2019/gists{/gist_id}", "starred_url": "https://api.github.com/users/neeraj2019/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neeraj2019/subscriptions", "organizations_url": "https://api.github.com/users/neeraj2019/orgs", "repos_url": "https://api.github.com/users/neeraj2019/repos", "events_url": "https://api.github.com/users/neeraj2019/events{/privacy}", "received_events_url": "https://api.github.com/users/neeraj2019/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-28T18:02:29Z", "updated_at": "2019-01-28T22:05:19Z", "closed_at": "2019-01-28T22:05:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Note that issues in this repository are only for bugs or feature requests in the pywin32.\r\n\r\n**If you need support or help using this package, please follow [these instructions](https://github.com/mhammond/pywin32/blob/master/README.md#support)** - support or help requests will be closed without comment.\r\n\r\nFor all bugs, please provide the following information.\r\n\r\n* Steps to reproduce the problem.\r\n\r\ntd = win32com.client.Dispatch(\"TDApiOle80.TDConnection.1\")\r\n    #Starting to connect\r\ntd.InitConnectionEx(qcServer)\r\ntd.Login(qcUser, qcPassword)\r\ntd.Connect(qcDomain, qcProject)\r\nif td.Connected is True:\r\n    print(\"Connected to \" + qcProject)\r\nelse:\r\n    print(\"Connection failed\")\r\n\r\n* Version of Python and pywin32\r\n\r\npython 3.5\r\npywin32 - 224", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1301", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1301/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1301/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1301/events", "html_url": "https://github.com/mhammond/pywin32/issues/1301", "id": 400973940, "node_id": "MDU6SXNzdWU0MDA5NzM5NDA=", "number": 1301, "title": "Bug - Passing byref an array to a com method interpreted as a single element", "user": {"login": "RVC69", "id": 36585182, "node_id": "MDQ6VXNlcjM2NTg1MTgy", "avatar_url": "https://avatars2.githubusercontent.com/u/36585182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RVC69", "html_url": "https://github.com/RVC69", "followers_url": "https://api.github.com/users/RVC69/followers", "following_url": "https://api.github.com/users/RVC69/following{/other_user}", "gists_url": "https://api.github.com/users/RVC69/gists{/gist_id}", "starred_url": "https://api.github.com/users/RVC69/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RVC69/subscriptions", "organizations_url": "https://api.github.com/users/RVC69/orgs", "repos_url": "https://api.github.com/users/RVC69/repos", "events_url": "https://api.github.com/users/RVC69/events{/privacy}", "received_events_url": "https://api.github.com/users/RVC69/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-19T08:21:06Z", "updated_at": "2019-01-20T23:58:48Z", "closed_at": "2019-01-20T23:58:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'm trying to translate a VBA application to Python. I cannot change the COM Server as its works also with others programs.\r\nIt seems I have a problem with win32com.client by passing an array of double to a COM method. \r\n\r\nVBA allows to pass arrays to COM server byref on the first element of the array\r\nVBA WORKS :\r\n\r\n    ' com object knows ALREADY the number of values to read or write from array\r\n    ReDim Preserve Values(0 To nbvalues - 1) ' array of nbvalues double\r\n    ' setting values, \r\n    obj.SetValues Values(0) ' passing byref the address of the first element of the array to read in\r\n    ' reverse method reading back values\r\n    obj.GetValues Values(0) ' passing byref the first address of the array to write in\r\n\r\n\r\nFrom typelib COM interface\r\n\r\n    [id(0x00000007), helpstring(\"M\u00e9thode GetValues\")]\r\n    HRESULT GetValues([in, out] double* pValues); # pointer on array of double\r\n    [id(0x00000008), helpstring(\"M\u00e9thode SetValues\")]\r\n    HRESULT SetValues([in] double* pValues);\r\n\r\n \r\n    \r\nFor Python win32com.client\r\n\r\n    values=[1.0]*nbvalues # array of  nbvalues values to set\r\n    # setting values, PYTHON complains for typeerror and expect just a float. It is not possible to pass the array of double\r\n    obj.SetValues (values[0]) # values[0] is pass byval as a single float to com server \r\n    #getting values, \r\n    obj.GetValues (values[0]) # PYTHON expect just a float, and worst PYTHON exit as the com server tries to write an array of float \r\n    \r\nTrying to pass to SetValues / GetValues something else  than a float gives : \r\n\r\n    return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), ((16389, 1),),pValues\r\n    TypeError: float() argument must be a string or a number, not 'VARIANT'\r\n\r\nIt seems win32client do not interpret correctly the type expected by the COM server, here float() instead of pointer on an array of float.\r\n\r\nDo you have any ideas of workaround to bypass the Type control and pass byref the adress of the array and not byval the value of the first element ?\r\n\r\nPython 3.6 32 bits, pywin32-224\r\n\r\nbest regards\r\n\r\n    ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1299", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1299/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1299/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1299/events", "html_url": "https://github.com/mhammond/pywin32/issues/1299", "id": 399848557, "node_id": "MDU6SXNzdWUzOTk4NDg1NTc=", "number": 1299, "title": "TimeZoneInfo raises KeyError if Windows registry contains a TZ without a Std key", "user": {"login": "buchi", "id": 270502, "node_id": "MDQ6VXNlcjI3MDUwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/270502?v=4", "gravatar_id": "", "url": "https://api.github.com/users/buchi", "html_url": "https://github.com/buchi", "followers_url": "https://api.github.com/users/buchi/followers", "following_url": "https://api.github.com/users/buchi/following{/other_user}", "gists_url": "https://api.github.com/users/buchi/gists{/gist_id}", "starred_url": "https://api.github.com/users/buchi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/buchi/subscriptions", "organizations_url": "https://api.github.com/users/buchi/orgs", "repos_url": "https://api.github.com/users/buchi/repos", "events_url": "https://api.github.com/users/buchi/events{/privacy}", "received_events_url": "https://api.github.com/users/buchi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-16T15:00:58Z", "updated_at": "2019-02-18T23:06:48Z", "closed_at": "2019-02-18T23:06:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure why some Windows installations contain timezone registry entries without a `Std` key.\r\nHowever this seems to be the case in some rare situations.\r\n\r\nTraceback:\r\n```\r\nTraceback (most recent call last):\r\n  File \"site-packages\\win32\\lib\\win32timezone.py\", line 698, in utc\r\n  File \"site-packages\\win32\\lib\\win32timezone.py\", line 475, in __init__\r\n  File \"site-packages\\win32\\lib\\win32timezone.py\", line 496, in _LoadInfoFromKey\r\n  File \"site-packages\\win32\\lib\\win32timezone.py\", line 482, in _FindTimeZoneKey\r\n  File \"site-packages\\win32\\lib\\win32timezone.py\", line 723, in get_index_value\r\nKeyError: 'Std'\r\n```\r\n\r\nTo reproduce the problem, delete the Std key of a timezone registry entry (e.g. HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Time Zones\\UTC\\Std) and call `win32timezone.TimeZoneInfo.utc()`.\r\n\r\nPython version: 3.6.8, pywin32 224\r\n\r\nAlso seen here: https://sourceforge.net/p/pywin32/mailman/message/28751500/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1296", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1296/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1296/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1296/events", "html_url": "https://github.com/mhammond/pywin32/issues/1296", "id": 397251352, "node_id": "MDU6SXNzdWUzOTcyNTEzNTI=", "number": 1296, "title": "win32file.FindFilesW crashes on Python 3.7.1", "user": {"login": "jan11011977", "id": 1407570, "node_id": "MDQ6VXNlcjE0MDc1NzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1407570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jan11011977", "html_url": "https://github.com/jan11011977", "followers_url": "https://api.github.com/users/jan11011977/followers", "following_url": "https://api.github.com/users/jan11011977/following{/other_user}", "gists_url": "https://api.github.com/users/jan11011977/gists{/gist_id}", "starred_url": "https://api.github.com/users/jan11011977/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jan11011977/subscriptions", "organizations_url": "https://api.github.com/users/jan11011977/orgs", "repos_url": "https://api.github.com/users/jan11011977/repos", "events_url": "https://api.github.com/users/jan11011977/events{/privacy}", "received_events_url": "https://api.github.com/users/jan11011977/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-09T07:56:43Z", "updated_at": "2019-01-14T09:52:26Z", "closed_at": "2019-01-14T09:52:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Calling win32file.FindFilesW with a filename that exists will cause an exception.\r\n\r\nSteps to reproduce:\r\n- Clean install of Python 3.7.1\r\n- pip install pywin32\r\n\r\nRun the following program:\r\n\r\n    import win32file\r\n\r\n    with open('file1.txt', 'w') as stream:\r\n        stream.write('hello\\n')\r\n    finddata = win32file.FindFilesW('file1.txt')\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1293", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1293/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1293/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1293/events", "html_url": "https://github.com/mhammond/pywin32/issues/1293", "id": 394042387, "node_id": "MDU6SXNzdWUzOTQwNDIzODc=", "number": 1293, "title": "Faulty Detection of Win8.1 SDK", "user": {"login": "PGAnonamous", "id": 25986450, "node_id": "MDQ6VXNlcjI1OTg2NDUw", "avatar_url": "https://avatars0.githubusercontent.com/u/25986450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PGAnonamous", "html_url": "https://github.com/PGAnonamous", "followers_url": "https://api.github.com/users/PGAnonamous/followers", "following_url": "https://api.github.com/users/PGAnonamous/following{/other_user}", "gists_url": "https://api.github.com/users/PGAnonamous/gists{/gist_id}", "starred_url": "https://api.github.com/users/PGAnonamous/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PGAnonamous/subscriptions", "organizations_url": "https://api.github.com/users/PGAnonamous/orgs", "repos_url": "https://api.github.com/users/PGAnonamous/repos", "events_url": "https://api.github.com/users/PGAnonamous/events{/privacy}", "received_events_url": "https://api.github.com/users/PGAnonamous/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-25T18:26:44Z", "updated_at": "2019-09-09T03:26:45Z", "closed_at": "2019-09-09T03:26:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed that setup.py is looking in `SOFTWARE\\Microsoft\\Windows Kits\\Installed Roots`. However, on my machine the value it is looking for is in `SOFTWARE\\WOW6432Node\\Microsoft\\Windows Kits\\Installed Roots`\r\n\r\nShouldn't it be checking to see if the machine is 64 bit or 32 bit and look in the corresponding registry location?\r\n\r\nI ran setup.py build and it built just fine (I had to go and find EdkMdb.h which I got from https://github.com/stephenegriffin/mfcmapi and placed in both win10sdk include/um and win8.1 sdk include/um since I wasn't sure where to put it.) The only thing that wasn't build was exchdapi: No 64-bit library for utility functions available.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1292", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1292/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1292/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1292/events", "html_url": "https://github.com/mhammond/pywin32/issues/1292", "id": 393538219, "node_id": "MDU6SXNzdWUzOTM1MzgyMTk=", "number": 1292, "title": "Error with installer when finishing", "user": {"login": "DragonOsman", "id": 18173932, "node_id": "MDQ6VXNlcjE4MTczOTMy", "avatar_url": "https://avatars3.githubusercontent.com/u/18173932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DragonOsman", "html_url": "https://github.com/DragonOsman", "followers_url": "https://api.github.com/users/DragonOsman/followers", "following_url": "https://api.github.com/users/DragonOsman/following{/other_user}", "gists_url": "https://api.github.com/users/DragonOsman/gists{/gist_id}", "starred_url": "https://api.github.com/users/DragonOsman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DragonOsman/subscriptions", "organizations_url": "https://api.github.com/users/DragonOsman/orgs", "repos_url": "https://api.github.com/users/DragonOsman/repos", "events_url": "https://api.github.com/users/DragonOsman/events{/privacy}", "received_events_url": "https://api.github.com/users/DragonOsman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-21T17:41:49Z", "updated_at": "2019-01-03T05:29:35Z", "closed_at": "2019-01-03T05:29:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to install the latest release of Pywin32 2.7 for my Python 2.7.15 on my Windows 10 laptop.  When the installer finished installing Pywin32, I saw these messages printed to the screen:\r\n```\r\nclose failed in file object destructor:\r\nsys.excepthook is missing\r\nlost sys.stderr\r\n```\r\nWhat's this about?  And is there anything I need to do?\r\n\r\nThe reason I wanted to install Pywin32 was to get rid of this error:\r\n```\r\nemrun index.html\r\nNo module named win32api\r\nImporting Python win32 modules failed! This most likely occurs if you do not have PyWin32 installed! Get it from http://sourceforge.net/projects/pywin32/\r\nTraceback (most recent call last):\r\n  File \"C:\\emscripten\\emrun.py\", line 1604, in <module>\r\n    sys.exit(main())\r\n  File \"C:\\emscripten\\emrun.py\", line 1597, in main\r\n    returncode = run()\r\n  File \"C:\\emscripten\\emrun.py\", line 1459, in run\r\n    browser = find_browser(str(options.browser))\r\n  File \"C:\\emscripten\\emrun.py\", line 1020, in find_browser\r\n    return win_get_default_browser()\r\n  File \"C:\\emscripten\\emrun.py\", line 1001, in win_get_default_browser\r\n    import_win32api_modules()\r\n  File \"C:\\emscripten\\emrun.py\", line 89, in import_win32api_modules\r\n    import win32api\r\nImportError: No module named win32api\r\n```\r\nI already have a `winpython` directory inside my Python root directory, though.  So how do I fix the error?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1291", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1291/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1291/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1291/events", "html_url": "https://github.com/mhammond/pywin32/issues/1291", "id": 392443289, "node_id": "MDU6SXNzdWUzOTI0NDMyODk=", "number": 1291, "title": "pywin32 SendMessage return 0 and don't work", "user": {"login": "wx409790282", "id": 10881838, "node_id": "MDQ6VXNlcjEwODgxODM4", "avatar_url": "https://avatars1.githubusercontent.com/u/10881838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wx409790282", "html_url": "https://github.com/wx409790282", "followers_url": "https://api.github.com/users/wx409790282/followers", "following_url": "https://api.github.com/users/wx409790282/following{/other_user}", "gists_url": "https://api.github.com/users/wx409790282/gists{/gist_id}", "starred_url": "https://api.github.com/users/wx409790282/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wx409790282/subscriptions", "organizations_url": "https://api.github.com/users/wx409790282/orgs", "repos_url": "https://api.github.com/users/wx409790282/repos", "events_url": "https://api.github.com/users/wx409790282/events{/privacy}", "received_events_url": "https://api.github.com/users/wx409790282/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-19T05:11:23Z", "updated_at": "2018-12-19T05:15:37Z", "closed_at": "2018-12-19T05:15:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am new to python and want to write an script to click an program. So pywin32 is good choice and i successfully use it's method like mouse_event\r\n\r\n`def mouseClickReally(width,high):\r\nwin32api.SetCursorPos([int(width),int(high)])\r\ntime.sleep(0.5)\r\nwin32api.mouse_event(win32con.MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0)\r\ntime.sleep(0.05)\r\nwin32api.mouse_event(win32con.MOUSEEVENTF_LEFTUP, 0, 0, 0, 0)`\r\n\r\nbut mouse_event need my program stay in front of desktop,and i want to hidden it in background,so i want to change to SendMessage method\r\n\r\n`def left_click(hwd, x_position, y_position):\r\nlong_position = win32api.MAKELONG(x_position, y_position)\r\nwin32gui.PostMessage(hwd, win32con.WM_LBUTTONDOWN, win32con.MK_LBUTTON, long_position)\r\nwin32api.PostMessage(hwd, win32con.WM_LBUTTONUP, win32con.MK_LBUTTON, long_position)`\r\n\r\nbut it doesn't work. i changed it to SendMessage or use RBUTTON. SendMessage just return 0, and nothing happend i wrote in windows10 ,python 3.6,pywin32 224", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1288", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1288/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1288/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1288/events", "html_url": "https://github.com/mhammond/pywin32/issues/1288", "id": 389300359, "node_id": "MDU6SXNzdWUzODkzMDAzNTk=", "number": 1288, "title": "win32com getting Outlook mailitem objects ReceivedTime property crashes Python", "user": {"login": "juhaoo", "id": 42586841, "node_id": "MDQ6VXNlcjQyNTg2ODQx", "avatar_url": "https://avatars0.githubusercontent.com/u/42586841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juhaoo", "html_url": "https://github.com/juhaoo", "followers_url": "https://api.github.com/users/juhaoo/followers", "following_url": "https://api.github.com/users/juhaoo/following{/other_user}", "gists_url": "https://api.github.com/users/juhaoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/juhaoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juhaoo/subscriptions", "organizations_url": "https://api.github.com/users/juhaoo/orgs", "repos_url": "https://api.github.com/users/juhaoo/repos", "events_url": "https://api.github.com/users/juhaoo/events{/privacy}", "received_events_url": "https://api.github.com/users/juhaoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-10T13:26:03Z", "updated_at": "2020-06-22T07:02:02Z", "closed_at": "2018-12-11T05:28:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting receivedtime crashes python:\r\n`win32com.client.gencache.EnsureDispatch('Outlook.Application').Session.Folders.Item(1).Folders.Item(1).Items.Item(1).ReceivedTime`\r\n\r\nWhereas getting for example subject works:\r\n`win32com.client.gencache.EnsureDispatch('Outlook.Application').Session.Folders.Item(1).Folders.Item(1).Items.Item(1).Subject`\r\n\r\nIt seems that getting any property that should indicate time crashes Python.\r\n\r\nPython version 3.7.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1287", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1287/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1287/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1287/events", "html_url": "https://github.com/mhammond/pywin32/issues/1287", "id": 389206440, "node_id": "MDU6SXNzdWUzODkyMDY0NDA=", "number": 1287, "title": "How to get frame when i handle ie ??", "user": {"login": "flyme2012", "id": 5844237, "node_id": "MDQ6VXNlcjU4NDQyMzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5844237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flyme2012", "html_url": "https://github.com/flyme2012", "followers_url": "https://api.github.com/users/flyme2012/followers", "following_url": "https://api.github.com/users/flyme2012/following{/other_user}", "gists_url": "https://api.github.com/users/flyme2012/gists{/gist_id}", "starred_url": "https://api.github.com/users/flyme2012/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flyme2012/subscriptions", "organizations_url": "https://api.github.com/users/flyme2012/orgs", "repos_url": "https://api.github.com/users/flyme2012/repos", "events_url": "https://api.github.com/users/flyme2012/events{/privacy}", "received_events_url": "https://api.github.com/users/flyme2012/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-10T09:17:33Z", "updated_at": "2018-12-11T01:23:37Z", "closed_at": "2018-12-11T01:23:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to achieve automation by pywin32 , and  i have two questions : 1. When I use Pywin32 to operate ie, how do I get the existing ie objects?   2. How to Switch Frames in Web Pages \uff1f frame have not name and id .\r\n\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1284", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1284/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1284/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1284/events", "html_url": "https://github.com/mhammond/pywin32/issues/1284", "id": 383098925, "node_id": "MDU6SXNzdWUzODMwOTg5MjU=", "number": 1284, "title": "the password from the archive", "user": {"login": "miha10999", "id": 12597443, "node_id": "MDQ6VXNlcjEyNTk3NDQz", "avatar_url": "https://avatars1.githubusercontent.com/u/12597443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miha10999", "html_url": "https://github.com/miha10999", "followers_url": "https://api.github.com/users/miha10999/followers", "following_url": "https://api.github.com/users/miha10999/following{/other_user}", "gists_url": "https://api.github.com/users/miha10999/gists{/gist_id}", "starred_url": "https://api.github.com/users/miha10999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miha10999/subscriptions", "organizations_url": "https://api.github.com/users/miha10999/orgs", "repos_url": "https://api.github.com/users/miha10999/repos", "events_url": "https://api.github.com/users/miha10999/events{/privacy}", "received_events_url": "https://api.github.com/users/miha10999/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-21T12:37:04Z", "updated_at": "2018-11-24T18:35:38Z", "closed_at": "2018-11-24T18:35:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please tell me the password from the archive", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1283", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1283/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1283/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1283/events", "html_url": "https://github.com/mhammond/pywin32/issues/1283", "id": 383098266, "node_id": "MDU6SXNzdWUzODMwOTgyNjY=", "number": 1283, "title": "password from the archive", "user": {"login": "miha10999", "id": 12597443, "node_id": "MDQ6VXNlcjEyNTk3NDQz", "avatar_url": "https://avatars1.githubusercontent.com/u/12597443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miha10999", "html_url": "https://github.com/miha10999", "followers_url": "https://api.github.com/users/miha10999/followers", "following_url": "https://api.github.com/users/miha10999/following{/other_user}", "gists_url": "https://api.github.com/users/miha10999/gists{/gist_id}", "starred_url": "https://api.github.com/users/miha10999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miha10999/subscriptions", "organizations_url": "https://api.github.com/users/miha10999/orgs", "repos_url": "https://api.github.com/users/miha10999/repos", "events_url": "https://api.github.com/users/miha10999/events{/privacy}", "received_events_url": "https://api.github.com/users/miha10999/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-21T12:35:07Z", "updated_at": "2018-11-21T12:35:20Z", "closed_at": "2018-11-21T12:35:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1282", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1282/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1282/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1282/events", "html_url": "https://github.com/mhammond/pywin32/issues/1282", "id": 383096764, "node_id": "MDU6SXNzdWUzODMwOTY3NjQ=", "number": 1282, "title": "Background mouse events possible?", "user": {"login": "Ohmano1", "id": 45171898, "node_id": "MDQ6VXNlcjQ1MTcxODk4", "avatar_url": "https://avatars2.githubusercontent.com/u/45171898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ohmano1", "html_url": "https://github.com/Ohmano1", "followers_url": "https://api.github.com/users/Ohmano1/followers", "following_url": "https://api.github.com/users/Ohmano1/following{/other_user}", "gists_url": "https://api.github.com/users/Ohmano1/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ohmano1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ohmano1/subscriptions", "organizations_url": "https://api.github.com/users/Ohmano1/orgs", "repos_url": "https://api.github.com/users/Ohmano1/repos", "events_url": "https://api.github.com/users/Ohmano1/events{/privacy}", "received_events_url": "https://api.github.com/users/Ohmano1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-21T12:30:46Z", "updated_at": "2018-11-24T18:35:58Z", "closed_at": "2018-11-24T18:35:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am searching for a possibility to do mouse events(clicks, movements and maybe screenshots and screen recognition) in the background(for example in minimized windows). Is this possible with the pywin32 module?\r\n\r\nIs there any alternative for Mac users? I really wanted to stay on Mac OS, but would change if there is no alternative to pywin32 for background mouse movements.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mhammond/pywin32/issues/1279", "repository_url": "https://api.github.com/repos/mhammond/pywin32", "labels_url": "https://api.github.com/repos/mhammond/pywin32/issues/1279/labels{/name}", "comments_url": "https://api.github.com/repos/mhammond/pywin32/issues/1279/comments", "events_url": "https://api.github.com/repos/mhammond/pywin32/issues/1279/events", "html_url": "https://github.com/mhammond/pywin32/issues/1279", "id": 381251594, "node_id": "MDU6SXNzdWUzODEyNTE1OTQ=", "number": 1279, "title": "wb.Save() throws TypeError: 'bool' object is not callable ", "user": {"login": "parul3067", "id": 22602954, "node_id": "MDQ6VXNlcjIyNjAyOTU0", "avatar_url": "https://avatars0.githubusercontent.com/u/22602954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/parul3067", "html_url": "https://github.com/parul3067", "followers_url": "https://api.github.com/users/parul3067/followers", "following_url": "https://api.github.com/users/parul3067/following{/other_user}", "gists_url": "https://api.github.com/users/parul3067/gists{/gist_id}", "starred_url": "https://api.github.com/users/parul3067/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/parul3067/subscriptions", "organizations_url": "https://api.github.com/users/parul3067/orgs", "repos_url": "https://api.github.com/users/parul3067/repos", "events_url": "https://api.github.com/users/parul3067/events{/privacy}", "received_events_url": "https://api.github.com/users/parul3067/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-15T16:54:40Z", "updated_at": "2018-11-19T22:10:33Z", "closed_at": "2018-11-19T22:10:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Excel automation crashes at wb.Save() and gives an exception \"TypeError: 'bool' object is not callable\".\r\nI tried but I am not able to find the root cause of the issue.", "performed_via_github_app": null, "score": 1.0}]}