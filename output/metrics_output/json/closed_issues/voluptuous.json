{"total_count": 181, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/426", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/426/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/426/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/426/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/426", "id": 676713373, "node_id": "MDU6SXNzdWU2NzY3MTMzNzM=", "number": 426, "title": "string length range", "user": {"login": "batara666", "id": 67689090, "node_id": "MDQ6VXNlcjY3Njg5MDkw", "avatar_url": "https://avatars3.githubusercontent.com/u/67689090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/batara666", "html_url": "https://github.com/batara666", "followers_url": "https://api.github.com/users/batara666/followers", "following_url": "https://api.github.com/users/batara666/following{/other_user}", "gists_url": "https://api.github.com/users/batara666/gists{/gist_id}", "starred_url": "https://api.github.com/users/batara666/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/batara666/subscriptions", "organizations_url": "https://api.github.com/users/batara666/orgs", "repos_url": "https://api.github.com/users/batara666/repos", "events_url": "https://api.github.com/users/batara666/events{/privacy}", "received_events_url": "https://api.github.com/users/batara666/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-11T09:12:20Z", "updated_at": "2020-08-11T09:16:22Z", "closed_at": "2020-08-11T09:16:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "`Required('name'): All(str, Range(min=2, max=20))`\r\n\r\nreturn\r\n\r\n`'>=' not supported between instances of 'str' and 'int'`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/419", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/419/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/419/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/419/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/419", "id": 590350016, "node_id": "MDU6SXNzdWU1OTAzNTAwMTY=", "number": 419, "title": "`Required` flag not set properly after #379 fix", "user": {"login": "EarQuack", "id": 62698102, "node_id": "MDQ6VXNlcjYyNjk4MTAy", "avatar_url": "https://avatars0.githubusercontent.com/u/62698102?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EarQuack", "html_url": "https://github.com/EarQuack", "followers_url": "https://api.github.com/users/EarQuack/followers", "following_url": "https://api.github.com/users/EarQuack/following{/other_user}", "gists_url": "https://api.github.com/users/EarQuack/gists{/gist_id}", "starred_url": "https://api.github.com/users/EarQuack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EarQuack/subscriptions", "organizations_url": "https://api.github.com/users/EarQuack/orgs", "repos_url": "https://api.github.com/users/EarQuack/repos", "events_url": "https://api.github.com/users/EarQuack/events{/privacy}", "received_events_url": "https://api.github.com/users/EarQuack/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "EarQuack", "id": 62698102, "node_id": "MDQ6VXNlcjYyNjk4MTAy", "avatar_url": "https://avatars0.githubusercontent.com/u/62698102?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EarQuack", "html_url": "https://github.com/EarQuack", "followers_url": "https://api.github.com/users/EarQuack/followers", "following_url": "https://api.github.com/users/EarQuack/following{/other_user}", "gists_url": "https://api.github.com/users/EarQuack/gists{/gist_id}", "starred_url": "https://api.github.com/users/EarQuack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EarQuack/subscriptions", "organizations_url": "https://api.github.com/users/EarQuack/orgs", "repos_url": "https://api.github.com/users/EarQuack/repos", "events_url": "https://api.github.com/users/EarQuack/events{/privacy}", "received_events_url": "https://api.github.com/users/EarQuack/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "EarQuack", "id": 62698102, "node_id": "MDQ6VXNlcjYyNjk4MTAy", "avatar_url": "https://avatars0.githubusercontent.com/u/62698102?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EarQuack", "html_url": "https://github.com/EarQuack", "followers_url": "https://api.github.com/users/EarQuack/followers", "following_url": "https://api.github.com/users/EarQuack/following{/other_user}", "gists_url": "https://api.github.com/users/EarQuack/gists{/gist_id}", "starred_url": "https://api.github.com/users/EarQuack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EarQuack/subscriptions", "organizations_url": "https://api.github.com/users/EarQuack/orgs", "repos_url": "https://api.github.com/users/EarQuack/repos", "events_url": "https://api.github.com/users/EarQuack/events{/privacy}", "received_events_url": "https://api.github.com/users/EarQuack/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-03-30T14:45:24Z", "updated_at": "2020-04-01T11:12:27Z", "closed_at": "2020-04-01T11:12:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Following test (this will be a new test, if accepted) fails:\r\n\r\n```python\r\ndef test_new_required_test():\r\n    schema = Schema({\r\n        'mykey': All(int, Range(1, 20)),\r\n    }, required=True)\r\n    assert_true(schema.required)\r\n```\r\n\r\nSuspect problem was introduced in #379 \r\n\r\nWill propose a solution and issue pull request to fix", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/418", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/418/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/418/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/418/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/418", "id": 590275171, "node_id": "MDU6SXNzdWU1OTAyNzUxNzE=", "number": 418, "title": "(Contributions only)", "user": {"login": "EarQuack", "id": 62698102, "node_id": "MDQ6VXNlcjYyNjk4MTAy", "avatar_url": "https://avatars0.githubusercontent.com/u/62698102?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EarQuack", "html_url": "https://github.com/EarQuack", "followers_url": "https://api.github.com/users/EarQuack/followers", "following_url": "https://api.github.com/users/EarQuack/following{/other_user}", "gists_url": "https://api.github.com/users/EarQuack/gists{/gist_id}", "starred_url": "https://api.github.com/users/EarQuack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EarQuack/subscriptions", "organizations_url": "https://api.github.com/users/EarQuack/orgs", "repos_url": "https://api.github.com/users/EarQuack/repos", "events_url": "https://api.github.com/users/EarQuack/events{/privacy}", "received_events_url": "https://api.github.com/users/EarQuack/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-30T13:06:49Z", "updated_at": "2020-03-30T13:07:13Z", "closed_at": "2020-03-30T13:07:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# CONTRIBUTIONS ONLY\r\n\r\n**What does this mean?** I do not have time to fix issues myself. The only way fixes or new features will be added is by people submitting PRs.\r\n\r\n**Current status.** Voluptuous is largely feature stable. There hasn't been a need to add new features in a while, but there are some bugs that should be fixed.\r\n\r\n**Why?** I no longer use Voluptuous personally (in fact I no longer regularly write Python code). Rather than leave the project in a limbo of people filing issues and wondering why they're note being worked on, I believe this notice will more clearly set expectations.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/415", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/415/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/415/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/415/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/415", "id": 534266251, "node_id": "MDU6SXNzdWU1MzQyNjYyNTE=", "number": 415, "title": "Fix simple typo: arugment -> argument", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-06T21:29:37Z", "updated_at": "2019-12-06T22:07:48Z", "closed_at": "2019-12-06T22:07:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a small typo in voluptuous/schema_builder.py.\nShould read argument rather than arugment.\n\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/410", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/410/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/410/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/410/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/410", "id": 514022921, "node_id": "MDU6SXNzdWU1MTQwMjI5MjE=", "number": 410, "title": "'Extra key not allowed' - key is in schema", "user": {"login": "FabioRosado", "id": 3131401, "node_id": "MDQ6VXNlcjMxMzE0MDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3131401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabioRosado", "html_url": "https://github.com/FabioRosado", "followers_url": "https://api.github.com/users/FabioRosado/followers", "following_url": "https://api.github.com/users/FabioRosado/following{/other_user}", "gists_url": "https://api.github.com/users/FabioRosado/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabioRosado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabioRosado/subscriptions", "organizations_url": "https://api.github.com/users/FabioRosado/orgs", "repos_url": "https://api.github.com/users/FabioRosado/repos", "events_url": "https://api.github.com/users/FabioRosado/events{/privacy}", "received_events_url": "https://api.github.com/users/FabioRosado/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-29T15:46:58Z", "updated_at": "2019-11-17T10:07:15Z", "closed_at": "2019-11-17T10:07:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'm trying to use voluptuous with opsdroid to validate our yaml files. Our parsers is a list containing dictionaries, which looks like this:\r\n\r\n```python\r\nparsers: [{'name': 'watson', 'gateway': 'gateway', 'assistant-id': 'long-id', 'access-token': 'token'}, {'name': 'regex', 'enabled': True}]\r\n```\r\n\r\nMy schema looks like this (it's probably wrong since I been doing guesswork and playing around. I wanted to check if any of these dicts are present in the parsers and if it is, check the required fields of them.\r\n\r\n```python\r\nOptional('parsers', default=list): voluptuous.All([\r\n        Optional({\r\n            Required('name', default=\"watson\"): str,\r\n            Required('gateway', msg=\"Watson Parser required param not provided\"): str,\r\n            Required('assistant-id', msg=\"Watson Parser required param not provided\"): str,\r\n            Required('access-token', msg=\"Watson Parser required param not provided\"): str,\r\n        }),\r\n        Optional({\r\n            Required('name', default='regex'): str,\r\n            Required('enabled', msg=\"Regex Parser required param not provided\"): bool,\r\n        })])\r\n```\r\n\r\nThis is the error I'm getting:\r\n\r\n```\r\nConfiguration contains an error - extra keys not allowed @ data['parsers'][1]['enabled']\r\n```\r\n\r\nSo the parser regex does have enabled and is marked as required on the schema, not sure why I'm getting an extra key error.\r\n\r\nAny idea why this is happening or if I should be doing things differently?\r\n\r\nThank you for the help \ud83d\udc4d ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/407", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/407/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/407/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/407/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/407", "id": 499503593, "node_id": "MDU6SXNzdWU0OTk1MDM1OTM=", "number": 407, "title": "./voluptuous/schema_builder.py\", line 237", "user": {"login": "kentatoi", "id": 37659312, "node_id": "MDQ6VXNlcjM3NjU5MzEy", "avatar_url": "https://avatars0.githubusercontent.com/u/37659312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kentatoi", "html_url": "https://github.com/kentatoi", "followers_url": "https://api.github.com/users/kentatoi/followers", "following_url": "https://api.github.com/users/kentatoi/following{/other_user}", "gists_url": "https://api.github.com/users/kentatoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/kentatoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kentatoi/subscriptions", "organizations_url": "https://api.github.com/users/kentatoi/orgs", "repos_url": "https://api.github.com/users/kentatoi/repos", "events_url": "https://api.github.com/users/kentatoi/events{/privacy}", "received_events_url": "https://api.github.com/users/kentatoi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-27T15:14:58Z", "updated_at": "2019-09-27T22:18:56Z", "closed_at": "2019-09-27T22:18:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI have an issue when I am trying to install. \r\n\r\n> Traceback (most recent call last):\r\n  File \"setup.py\", line 8, in <module>\r\n    version = __import__('voluptuous').__version__\r\n  File \"./voluptuous/__init__.py\", line 3, in <module>\r\n    from voluptuous.schema_builder import *\r\n  File \"./voluptuous/schema_builder.py\", line 237\r\n    for k, v in iteritems(value)}\r\n      ^\r\n\r\nIs it just me ? I am running the setup install on RedHat 6.10 (Santiago),\r\nPython 2.6\r\n\r\nThanks for your help", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/406", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/406/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/406/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/406/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/406", "id": 498345782, "node_id": "MDU6SXNzdWU0OTgzNDU3ODI=", "number": 406, "title": "Default to other key in dict", "user": {"login": "roflcoopter", "id": 26493864, "node_id": "MDQ6VXNlcjI2NDkzODY0", "avatar_url": "https://avatars0.githubusercontent.com/u/26493864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roflcoopter", "html_url": "https://github.com/roflcoopter", "followers_url": "https://api.github.com/users/roflcoopter/followers", "following_url": "https://api.github.com/users/roflcoopter/following{/other_user}", "gists_url": "https://api.github.com/users/roflcoopter/gists{/gist_id}", "starred_url": "https://api.github.com/users/roflcoopter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roflcoopter/subscriptions", "organizations_url": "https://api.github.com/users/roflcoopter/orgs", "repos_url": "https://api.github.com/users/roflcoopter/repos", "events_url": "https://api.github.com/users/roflcoopter/events{/privacy}", "received_events_url": "https://api.github.com/users/roflcoopter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-25T15:02:44Z", "updated_at": "2019-09-26T17:43:24Z", "closed_at": "2019-09-26T17:43:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a dict in this format:\r\n```{'cameras': [{'name': 'Cam1', 'mqtt_name': 'cam_one'}, {'name': 'Cam2'}]}```\r\n\r\nI would like my schema to default ```mqtt_name``` to ```name```.\r\nSo given the input above, i would like this to be the result:\r\n```{'cameras': [{'name': 'Cam1', 'mqtt_name': 'cam_one'}, {'name': 'Cam2', 'mqtt_name': 'Cam2'}]}```\r\n\r\nIs this possible in any way?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/405", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/405/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/405/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/405/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/405", "id": 490794563, "node_id": "MDU6SXNzdWU0OTA3OTQ1NjM=", "number": 405, "title": "Esphome fails \"TypeError: __init__() got an unexpected keyword argument 'required'\"", "user": {"login": "greypanda", "id": 1550804, "node_id": "MDQ6VXNlcjE1NTA4MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1550804?v=4", "gravatar_id": "", "url": "https://api.github.com/users/greypanda", "html_url": "https://github.com/greypanda", "followers_url": "https://api.github.com/users/greypanda/followers", "following_url": "https://api.github.com/users/greypanda/following{/other_user}", "gists_url": "https://api.github.com/users/greypanda/gists{/gist_id}", "starred_url": "https://api.github.com/users/greypanda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/greypanda/subscriptions", "organizations_url": "https://api.github.com/users/greypanda/orgs", "repos_url": "https://api.github.com/users/greypanda/repos", "events_url": "https://api.github.com/users/greypanda/events{/privacy}", "received_events_url": "https://api.github.com/users/greypanda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-08T19:23:54Z", "updated_at": "2019-09-08T21:02:43Z", "closed_at": "2019-09-08T21:02:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am having a problem after the last update to esphome. It's getting the following error:\r\n\r\n/local/lib/python2.7/site-packages/voluptuous/schema_builder.py\", line 782, in extend\r\n    return result_cls(result, required=result_required, extra=result_extra)\r\nTypeError: __init__() got an unexpected keyword argument 'required'\r\n\r\nThat line reads: return result_cls(result, required=result_required, extra=result_extra).\r\nI \"fixed\" it by removing the \"required=result_required\" parameter, but that is just a band-aide.\r\n\r\nIt also fails with Python 3.6.8.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/404", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/404/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/404/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/404/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/404", "id": 484956403, "node_id": "MDU6SXNzdWU0ODQ5NTY0MDM=", "number": 404, "title": "TypeError: __init__() got an unexpected keyword argument 'required'", "user": {"login": "greypanda", "id": 1550804, "node_id": "MDQ6VXNlcjE1NTA4MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1550804?v=4", "gravatar_id": "", "url": "https://api.github.com/users/greypanda", "html_url": "https://github.com/greypanda", "followers_url": "https://api.github.com/users/greypanda/followers", "following_url": "https://api.github.com/users/greypanda/following{/other_user}", "gists_url": "https://api.github.com/users/greypanda/gists{/gist_id}", "starred_url": "https://api.github.com/users/greypanda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/greypanda/subscriptions", "organizations_url": "https://api.github.com/users/greypanda/orgs", "repos_url": "https://api.github.com/users/greypanda/repos", "events_url": "https://api.github.com/users/greypanda/events{/privacy}", "received_events_url": "https://api.github.com/users/greypanda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-25T17:40:09Z", "updated_at": "2019-08-25T23:21:28Z", "closed_at": "2019-08-25T23:21:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just installed the most recent esphome and it is now broken. I'm running Ubuntu 18.04.3, but it also fails on Debian. \r\n\r\nHere is the failure:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/manager/.local/bin/esphome\", line 7, in <module>\r\n    from esphome.__main__ import main\r\n  File \"/home/manager/.local/lib/python2.7/site-packages/esphome/__main__.py\", line 10, in <module>\r\n    from esphome import const, writer, yaml_util\r\n  File \"/home/manager/.local/lib/python2.7/site-packages/esphome/writer.py\", line 7, in <module>\r\n    from esphome.config import iter_components\r\n  File \"/home/manager/.local/lib/python2.7/site-packages/esphome/config.py\", line 15, in <module>\r\n    from esphome import core, core_config, yaml_util\r\n  File \"/home/manager/.local/lib/python2.7/site-packages/esphome/core_config.py\", line 6, in <module>\r\n    import esphome.config_validation as cv\r\n  File \"/home/manager/.local/lib/python2.7/site-packages/esphome/config_validation.py\", line 1242, in <module>\r\n    Optional(CONF_COMMAND_TOPIC): All(requires_component('mqtt'), subscribe_topic),\r\n  File \"/home/manager/.local/lib/python2.7/site-packages/esphome/voluptuous_schema.py\", line 198, in extend\r\n    ret = super(_Schema, self).extend(schema, extra=extra)\r\n  File \"/home/manager/.local/lib/python2.7/site-packages/voluptuous/schema_builder.py\", line 782, in extend\r\n    return result_cls(result, required=result_required, extra=result_extra)\r\nTypeError: __init__() got an unexpected keyword argument 'required'\r\n\r\nI was able to get it working again by removing \"required=result_required\" from line 782.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/403", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/403/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/403/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/403/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/403", "id": 483948280, "node_id": "MDU6SXNzdWU0ODM5NDgyODA=", "number": 403, "title": "Any Replace not working together", "user": {"login": "halbow", "id": 39669025, "node_id": "MDQ6VXNlcjM5NjY5MDI1", "avatar_url": "https://avatars0.githubusercontent.com/u/39669025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/halbow", "html_url": "https://github.com/halbow", "followers_url": "https://api.github.com/users/halbow/followers", "following_url": "https://api.github.com/users/halbow/following{/other_user}", "gists_url": "https://api.github.com/users/halbow/gists{/gist_id}", "starred_url": "https://api.github.com/users/halbow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/halbow/subscriptions", "organizations_url": "https://api.github.com/users/halbow/orgs", "repos_url": "https://api.github.com/users/halbow/repos", "events_url": "https://api.github.com/users/halbow/events{/privacy}", "received_events_url": "https://api.github.com/users/halbow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-22T11:53:36Z", "updated_at": "2019-08-22T14:41:14Z", "closed_at": "2019-08-22T14:41:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello \ud83d\ude00 \r\n\r\nI have some issue when combining Any and Replace together, it validates an invalid input,\r\nhere's a minimal example:\r\n\r\n```\r\nfrom voluptuous import Schema, Any, Replace\r\nimport voluptuous\r\nimport pytest\r\n\r\nc = \"xyz\"\r\nd = Replace(\"lol\", \"lolz\")\r\n\r\na = {\"x\": c, \"y\": list}\r\nb = {\"x\": d, \"y\": int}\r\n\r\ncondition = Any(a, b, required=True)\r\n\r\nvalidator = Schema(condition)\r\n\r\ndef test_list_raise():\r\n    # this is not valid but doesn't raise anything\r\n    with pytest.raises(voluptuous.Error):\r\n        validator({\r\n            \"x\": \"xyz\",\r\n            \"y\": 1\r\n        })\r\n\r\n```\r\n\r\nMaybe there's another way of validating this kind of schema ? \r\n\r\nThanks for the work on this library by the way !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/401", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/401/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/401/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/401/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/401", "id": 479922539, "node_id": "MDU6SXNzdWU0Nzk5MjI1Mzk=", "number": 401, "title": "Python3.8 Support", "user": {"login": "newAM", "id": 7845120, "node_id": "MDQ6VXNlcjc4NDUxMjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7845120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/newAM", "html_url": "https://github.com/newAM", "followers_url": "https://api.github.com/users/newAM/followers", "following_url": "https://api.github.com/users/newAM/following{/other_user}", "gists_url": "https://api.github.com/users/newAM/gists{/gist_id}", "starred_url": "https://api.github.com/users/newAM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/newAM/subscriptions", "organizations_url": "https://api.github.com/users/newAM/orgs", "repos_url": "https://api.github.com/users/newAM/repos", "events_url": "https://api.github.com/users/newAM/events{/privacy}", "received_events_url": "https://api.github.com/users/newAM/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-13T01:52:08Z", "updated_at": "2019-08-13T02:19:56Z", "closed_at": "2019-08-13T02:16:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python3.8 is coming in October, and I would like to be able to test my code that utilizes voluptuous before then.\r\n\r\n#367 is still a blocking issue since there has been no release yet.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/393", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/393/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/393/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/393/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/393", "id": 430482300, "node_id": "MDU6SXNzdWU0MzA0ODIzMDA=", "number": 393, "title": "If this then that scenario", "user": {"login": "RobCoops", "id": 25176958, "node_id": "MDQ6VXNlcjI1MTc2OTU4", "avatar_url": "https://avatars0.githubusercontent.com/u/25176958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RobCoops", "html_url": "https://github.com/RobCoops", "followers_url": "https://api.github.com/users/RobCoops/followers", "following_url": "https://api.github.com/users/RobCoops/following{/other_user}", "gists_url": "https://api.github.com/users/RobCoops/gists{/gist_id}", "starred_url": "https://api.github.com/users/RobCoops/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RobCoops/subscriptions", "organizations_url": "https://api.github.com/users/RobCoops/orgs", "repos_url": "https://api.github.com/users/RobCoops/repos", "events_url": "https://api.github.com/users/RobCoops/events{/privacy}", "received_events_url": "https://api.github.com/users/RobCoops/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-08T14:25:58Z", "updated_at": "2019-04-10T06:59:43Z", "closed_at": "2019-04-10T06:59:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following valid data sets:\r\n{'a': , 'd':}\r\n{'a': {'b': 'String 1'}, 'd':}\r\n{'a': {'b': 'String 1', 'c': 'String 2'}, 'd':}\r\nInvalid would be for instance:\r\n{'a': {'c': 'String 2'}, 'd':}\r\n\r\nBasically only if key 'b' exists is key 'c' allowed. it cannot exist on its own as a child of 'a'\r\nTo test this I created the following bit of code:\r\n```\r\nfrom voluptuous import Schema, Any, Optional, All, ALLOW_EXTRA\r\n\r\nsimple = Schema({'a': None}, required=True)\r\ncomplex = Schema({'a': {'b': str, Optional('c'): str}}, required=True)\r\nmain = Schema({'d': None}, extra=ALLOW_EXTRA)\r\n\r\ndemo = {'a': {'b': 'String 1', 'c': 'String 2'}}\r\ntest_1 = Any(simple, complex)\r\nprint( test_1(demo) )\r\n\r\ntest_2 = All(main, Any(simple, complex))\r\nprint( test_2(demo) )\r\n```\r\n\r\nThis works perfectly fine with the exception that now I can in my main schema add any number of arbitrary keys which is not desirable. As the main schema is rather complex and large I would very much like to avoid a scenario where I replicate the same schema multiple times for each of these it key 'b' exists then key 'c' can exist otherwise it should not be there type scenario's as that would very quickly balloon out of all reasonable proportion.\r\nYet I need to be strict on my main schema and not allow extra keys. Is this a bug (needing the EXTRA_KEYS option enabled to be able to handle such scenario's or is this as designed and am I overlooking an obvious solution to this (what at least in my mind) common scenario?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/392", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/392/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/392/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/392/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/392", "id": 429964862, "node_id": "MDU6SXNzdWU0Mjk5NjQ4NjI=", "number": 392, "title": "Is there a voluptuous style guide?", "user": {"login": "rawrgulmuffins", "id": 1521575, "node_id": "MDQ6VXNlcjE1MjE1NzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1521575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rawrgulmuffins", "html_url": "https://github.com/rawrgulmuffins", "followers_url": "https://api.github.com/users/rawrgulmuffins/followers", "following_url": "https://api.github.com/users/rawrgulmuffins/following{/other_user}", "gists_url": "https://api.github.com/users/rawrgulmuffins/gists{/gist_id}", "starred_url": "https://api.github.com/users/rawrgulmuffins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rawrgulmuffins/subscriptions", "organizations_url": "https://api.github.com/users/rawrgulmuffins/orgs", "repos_url": "https://api.github.com/users/rawrgulmuffins/repos", "events_url": "https://api.github.com/users/rawrgulmuffins/events{/privacy}", "received_events_url": "https://api.github.com/users/rawrgulmuffins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-05T23:06:05Z", "updated_at": "2019-04-05T23:08:02Z", "closed_at": "2019-04-05T23:07:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sorry about asking this on an issue but I didn't see a message board, e-mail list, or chat app location.\r\n\r\nI'm finding myself writing statements like this in my schemas:\r\n\r\n```\r\n\"httpIngestTime\": (str, Datetime(format=\"%Y-%m-%d %H:%M:%S %Z\")),\r\n```\r\n\r\nWhich is technically correct but so is this statement:\r\n\r\n```\r\n\"httpIngestTime\": (Datetime(format=\"%Y-%m-%d %H:%M:%S %Z\")),\r\n```\r\n\r\nThis got me looking for a style guide for schema creation and I didn't find one. As such I've opened this issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/391", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/391/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/391/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/391/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/391", "id": 427903675, "node_id": "MDU6SXNzdWU0Mjc5MDM2NzU=", "number": 391, "title": "Suggestion: Add version attribute to schemas", "user": {"login": "rawrgulmuffins", "id": 1521575, "node_id": "MDQ6VXNlcjE1MjE1NzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1521575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rawrgulmuffins", "html_url": "https://github.com/rawrgulmuffins", "followers_url": "https://api.github.com/users/rawrgulmuffins/followers", "following_url": "https://api.github.com/users/rawrgulmuffins/following{/other_user}", "gists_url": "https://api.github.com/users/rawrgulmuffins/gists{/gist_id}", "starred_url": "https://api.github.com/users/rawrgulmuffins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rawrgulmuffins/subscriptions", "organizations_url": "https://api.github.com/users/rawrgulmuffins/orgs", "repos_url": "https://api.github.com/users/rawrgulmuffins/repos", "events_url": "https://api.github.com/users/rawrgulmuffins/events{/privacy}", "received_events_url": "https://api.github.com/users/rawrgulmuffins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-01T20:44:09Z", "updated_at": "2019-04-01T22:16:26Z", "closed_at": "2019-04-01T22:16:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm currently using Voluptuous to validate JSON objects that are passed between different AWS lambda functions. My expectation is that the data that's passed between the lambda's in question will migrate over time.\r\n\r\nCurrently I'm appending a version string to each schema object after creation. so\r\n\r\n```\r\nimport distutils\r\nlambda_schema = voluptuous.Schema({ ... })\r\nlambda_schema.__version__ = distutils.version.StrictVersion(\"0.1.0\")\r\n```\r\n\r\nI think it would be more convenient to have schema versions using a similar principle to the `extend` method for the schema class right now. So, for example, you would be able to say something like\r\n\r\n\r\n```\r\nlambda_schema = voluptuous.Schema({ ... }, version=\"0.1.0\")\r\nlambda_schema.add_version(voluptuous.Schema({ ... }, version=\"0.1.1\")\r\n\r\nlambda_schema(test_record, version=\"0.1.1\") # passes in this example\r\nlambda_schema(test_record, version=\"0.1.0\") # fails\r\n```\r\n\r\nThe use case would be a supported method of tracking schema migrations over time built into the library itself.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/385", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/385/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/385/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/385/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/385", "id": 416099115, "node_id": "MDU6SXNzdWU0MTYwOTkxMTU=", "number": 385, "title": "iterative validation for list of objects?", "user": {"login": "avoidik", "id": 6435932, "node_id": "MDQ6VXNlcjY0MzU5MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6435932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avoidik", "html_url": "https://github.com/avoidik", "followers_url": "https://api.github.com/users/avoidik/followers", "following_url": "https://api.github.com/users/avoidik/following{/other_user}", "gists_url": "https://api.github.com/users/avoidik/gists{/gist_id}", "starred_url": "https://api.github.com/users/avoidik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avoidik/subscriptions", "organizations_url": "https://api.github.com/users/avoidik/orgs", "repos_url": "https://api.github.com/users/avoidik/repos", "events_url": "https://api.github.com/users/avoidik/events{/privacy}", "received_events_url": "https://api.github.com/users/avoidik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-03-01T13:18:16Z", "updated_at": "2019-03-01T15:44:13Z", "closed_at": "2019-03-01T15:41:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello,\r\n\r\ncould you please help me a bit, is it possible to define an iterative validation for the following structure\r\n\r\n```yaml\r\n- name: random\r\n  owner: bob\r\n  source:\r\n  - type: a\r\n    param: robert\r\n  - type: b\r\n    param: jim\r\n  - type: c\r\n    param: frank\r\n    data:\r\n      aa: sally\r\n      bb: berta\r\n      cc: irena\r\n      dd: helen\r\n```\r\n\r\nhere it is my attempt to wrap it into `Schema`, not quite sure how to proceed with `type: c` and is it even correct?\r\n\r\n```python\r\nValidationSchema = Schema([{\r\n    Optional('name'): str,\r\n    Required('owner'): All('bob', msg='The only owner should be Bob'),\r\n    Required('source'): [{\r\n        Required('type'): All(\"a\", \"b\", \"c\"),\r\n        Required('param'): str,\r\n        Extra('data'): dict\r\n    }]\r\n}])\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/384", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/384/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/384/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/384/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/384", "id": 413416727, "node_id": "MDU6SXNzdWU0MTM0MTY3Mjc=", "number": 384, "title": "Support for deleting non-required keys", "user": {"login": "kozisek", "id": 8324066, "node_id": "MDQ6VXNlcjgzMjQwNjY=", "avatar_url": "https://avatars0.githubusercontent.com/u/8324066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kozisek", "html_url": "https://github.com/kozisek", "followers_url": "https://api.github.com/users/kozisek/followers", "following_url": "https://api.github.com/users/kozisek/following{/other_user}", "gists_url": "https://api.github.com/users/kozisek/gists{/gist_id}", "starred_url": "https://api.github.com/users/kozisek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kozisek/subscriptions", "organizations_url": "https://api.github.com/users/kozisek/orgs", "repos_url": "https://api.github.com/users/kozisek/repos", "events_url": "https://api.github.com/users/kozisek/events{/privacy}", "received_events_url": "https://api.github.com/users/kozisek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-22T14:02:09Z", "updated_at": "2019-02-22T14:14:17Z", "closed_at": "2019-02-22T14:02:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure if this has already been implemented, but couldn't find it in any existing issues or documentation.\r\n\r\nIt would be beneficial if (instead of removing keys outside of a schema) it were be possible to remove keys which are not required, just optional.\r\n\r\nThis way, only just-required configurations could be generated from existing ones.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/379", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/379/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/379/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/379/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/379", "id": 396572540, "node_id": "MDU6SXNzdWUzOTY1NzI1NDA=", "number": 379, "title": "Regression with Any and required", "user": {"login": "CedricCabessa", "id": 365097, "node_id": "MDQ6VXNlcjM2NTA5Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/365097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CedricCabessa", "html_url": "https://github.com/CedricCabessa", "followers_url": "https://api.github.com/users/CedricCabessa/followers", "following_url": "https://api.github.com/users/CedricCabessa/following{/other_user}", "gists_url": "https://api.github.com/users/CedricCabessa/gists{/gist_id}", "starred_url": "https://api.github.com/users/CedricCabessa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CedricCabessa/subscriptions", "organizations_url": "https://api.github.com/users/CedricCabessa/orgs", "repos_url": "https://api.github.com/users/CedricCabessa/repos", "events_url": "https://api.github.com/users/CedricCabessa/events{/privacy}", "received_events_url": "https://api.github.com/users/CedricCabessa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-07T17:10:40Z", "updated_at": "2019-01-13T06:18:09Z", "closed_at": "2019-01-13T06:18:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nI've observed a change of behaviour in the recent version of voluptuous\r\n\r\nHere is a sample\r\n\r\n```\r\nfrom voluptuous import Schema, Any, Optional, All, Length\r\n\r\nanyschema = Schema(Any({\r\n    'name': All(unicode, Length(min=1, max=128)),\r\n    Optional('protected'): bool,\r\n}, {\r\n    'name': All(unicode, Length(min=1, max=128)),\r\n    Optional('dynamic_ip_required'): bool,\r\n}, required=True))\r\n\r\ntry:\r\n    anyschema({})\r\nexcept Exception as e:\r\n    print(e)\r\n```\t\r\n\r\n```\r\n$ sudo pip install 'voluptuous==0.11.5'\r\n$ python t.py \r\n```\r\nno output\r\n\r\n```\r\n$ sudo pip install 'voluptuous==0.10.5'\r\n$ python t.py \r\nrequired key not provided @ data['name']\r\n```\r\n\r\nMy understanding is the behavior of 0.10.5 is correct as we want a \"required schema\"\r\nBut it is not the case with 0.11.5 and above, required seem to be ignored\r\n\r\nIs it normal?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/376", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/376/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/376/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/376/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/376", "id": 394439492, "node_id": "MDU6SXNzdWUzOTQ0Mzk0OTI=", "number": 376, "title": "Schema extends a list of dict objects", "user": {"login": "3dw1np", "id": 814267, "node_id": "MDQ6VXNlcjgxNDI2Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/814267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/3dw1np", "html_url": "https://github.com/3dw1np", "followers_url": "https://api.github.com/users/3dw1np/followers", "following_url": "https://api.github.com/users/3dw1np/following{/other_user}", "gists_url": "https://api.github.com/users/3dw1np/gists{/gist_id}", "starred_url": "https://api.github.com/users/3dw1np/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/3dw1np/subscriptions", "organizations_url": "https://api.github.com/users/3dw1np/orgs", "repos_url": "https://api.github.com/users/3dw1np/repos", "events_url": "https://api.github.com/users/3dw1np/events{/privacy}", "received_events_url": "https://api.github.com/users/3dw1np/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-27T16:39:58Z", "updated_at": "2018-12-27T20:50:52Z", "closed_at": "2018-12-27T20:50:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to extend a nested schema definition inside a list:\r\n\r\n`\r\n>>> t = Schema({\r\n...     'delivery_addresses': All([{\r\n...             Required('name'): unicode\r\n...     }])\r\n... })\r\n\r\n>>> t = t.extend({\r\n...     Required('delivery_addresses'): [{\r\n...             Required('geohash'): unicode\r\n...     }]\r\n... })\r\n\r\n>>> print(t)\r\n{u'delivery_addresses': [{u'geohash': <type 'unicode'>}]}\r\n`\r\n\r\nBut as you can see, it's not merging the dict definition, it's replacing.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/374", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/374/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/374/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/374/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/374", "id": 392139069, "node_id": "MDU6SXNzdWUzOTIxMzkwNjk=", "number": 374, "title": "Lower() and similar functions convert unicode to str", "user": {"login": "lcosmin", "id": 1164572, "node_id": "MDQ6VXNlcjExNjQ1NzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1164572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcosmin", "html_url": "https://github.com/lcosmin", "followers_url": "https://api.github.com/users/lcosmin/followers", "following_url": "https://api.github.com/users/lcosmin/following{/other_user}", "gists_url": "https://api.github.com/users/lcosmin/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcosmin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcosmin/subscriptions", "organizations_url": "https://api.github.com/users/lcosmin/orgs", "repos_url": "https://api.github.com/users/lcosmin/repos", "events_url": "https://api.github.com/users/lcosmin/events{/privacy}", "received_events_url": "https://api.github.com/users/lcosmin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "svisser", "id": 723226, "node_id": "MDQ6VXNlcjcyMzIyNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/723226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svisser", "html_url": "https://github.com/svisser", "followers_url": "https://api.github.com/users/svisser/followers", "following_url": "https://api.github.com/users/svisser/following{/other_user}", "gists_url": "https://api.github.com/users/svisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/svisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svisser/subscriptions", "organizations_url": "https://api.github.com/users/svisser/orgs", "repos_url": "https://api.github.com/users/svisser/repos", "events_url": "https://api.github.com/users/svisser/events{/privacy}", "received_events_url": "https://api.github.com/users/svisser/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "svisser", "id": 723226, "node_id": "MDQ6VXNlcjcyMzIyNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/723226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svisser", "html_url": "https://github.com/svisser", "followers_url": "https://api.github.com/users/svisser/followers", "following_url": "https://api.github.com/users/svisser/following{/other_user}", "gists_url": "https://api.github.com/users/svisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/svisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svisser/subscriptions", "organizations_url": "https://api.github.com/users/svisser/orgs", "repos_url": "https://api.github.com/users/svisser/repos", "events_url": "https://api.github.com/users/svisser/events{/privacy}", "received_events_url": "https://api.github.com/users/svisser/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-12-18T12:41:17Z", "updated_at": "2018-12-31T15:46:02Z", "closed_at": "2018-12-31T15:46:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it the expected behavior for `Lower()` to convert an unicode string to a plain string (Python 2) ? \r\n\r\nExample:\r\n\r\n```\r\n>>> from voluptuous import Schema, Lower\r\n>>> s = Schema(Lower)\r\n>>> s('asd')\r\n'asd'\r\n>>> s(u'asd')\r\n'asd'\r\n>>> type(s(u'asd'))\r\n<type 'str'>\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/370", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/370/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/370/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/370/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/370", "id": 388241801, "node_id": "MDU6SXNzdWUzODgyNDE4MDE=", "number": 370, "title": "Schema.extend is not compatible with Schema subclasses (affects pytest-voluptuous)", "user": {"login": "himikof", "id": 43698, "node_id": "MDQ6VXNlcjQzNjk4", "avatar_url": "https://avatars2.githubusercontent.com/u/43698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/himikof", "html_url": "https://github.com/himikof", "followers_url": "https://api.github.com/users/himikof/followers", "following_url": "https://api.github.com/users/himikof/following{/other_user}", "gists_url": "https://api.github.com/users/himikof/gists{/gist_id}", "starred_url": "https://api.github.com/users/himikof/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/himikof/subscriptions", "organizations_url": "https://api.github.com/users/himikof/orgs", "repos_url": "https://api.github.com/users/himikof/repos", "events_url": "https://api.github.com/users/himikof/events{/privacy}", "received_events_url": "https://api.github.com/users/himikof/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "svisser", "id": 723226, "node_id": "MDQ6VXNlcjcyMzIyNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/723226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svisser", "html_url": "https://github.com/svisser", "followers_url": "https://api.github.com/users/svisser/followers", "following_url": "https://api.github.com/users/svisser/following{/other_user}", "gists_url": "https://api.github.com/users/svisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/svisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svisser/subscriptions", "organizations_url": "https://api.github.com/users/svisser/orgs", "repos_url": "https://api.github.com/users/svisser/repos", "events_url": "https://api.github.com/users/svisser/events{/privacy}", "received_events_url": "https://api.github.com/users/svisser/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "svisser", "id": 723226, "node_id": "MDQ6VXNlcjcyMzIyNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/723226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svisser", "html_url": "https://github.com/svisser", "followers_url": "https://api.github.com/users/svisser/followers", "following_url": "https://api.github.com/users/svisser/following{/other_user}", "gists_url": "https://api.github.com/users/svisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/svisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svisser/subscriptions", "organizations_url": "https://api.github.com/users/svisser/orgs", "repos_url": "https://api.github.com/users/svisser/repos", "events_url": "https://api.github.com/users/svisser/events{/privacy}", "received_events_url": "https://api.github.com/users/svisser/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-12-06T14:38:02Z", "updated_at": "2018-12-31T15:47:50Z", "closed_at": "2018-12-31T15:47:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [pytest-voluptuous](https://github.com/f-secure/pytest-voluptuous) integration package makes use of a `Schema` subclass (`S`) to implement concise pytest assertion syntax.\r\nIt looks like this:\r\n```python\r\n   assert S({\r\n      'info': Partial({\r\n          'package_url': 'https://pypi.org/project/pytest/',\r\n          'platform': 'INVALID VALUE',\r\n          'description': Length(max=10),\r\n          'downloads': list,\r\n          'classifiers': dict,\r\n      }),\r\n      'releases': dict,\r\n      'urls': int\r\n   }) == resp.json()\r\n```\r\n\r\nBut the problem is that the `S(...).extend` returns `Schema`, not `S`, which breaks pytest integration after using `extend`.\r\nIf `Schema.extend` behaved more like a `@classmethod` and returned an instance of `type(self)`, this use case would just work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/367", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/367/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/367/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/367/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/367", "id": 384485752, "node_id": "MDU6SXNzdWUzODQ0ODU3NTI=", "number": 367, "title": "DeprecationWarning in python 3.7 with pytest", "user": {"login": "voidpp", "id": 6121328, "node_id": "MDQ6VXNlcjYxMjEzMjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6121328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/voidpp", "html_url": "https://github.com/voidpp", "followers_url": "https://api.github.com/users/voidpp/followers", "following_url": "https://api.github.com/users/voidpp/following{/other_user}", "gists_url": "https://api.github.com/users/voidpp/gists{/gist_id}", "starred_url": "https://api.github.com/users/voidpp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/voidpp/subscriptions", "organizations_url": "https://api.github.com/users/voidpp/orgs", "repos_url": "https://api.github.com/users/voidpp/repos", "events_url": "https://api.github.com/users/voidpp/events{/privacy}", "received_events_url": "https://api.github.com/users/voidpp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-11-26T19:54:33Z", "updated_at": "2019-08-13T02:18:53Z", "closed_at": "2018-12-15T14:44:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "pytest shows this warning message after I run a test which is contains a voluptuous.Schema instance\r\n\r\nvoluptuous version: 0.11.5\r\n\r\n```\r\n/Users/voidpp/.virtualenvs/configpp-371/lib/python3.7/site-packages/voluptuous/schema_builder.py:283\r\n  /Users/voidpp/.virtualenvs/configpp-371/lib/python3.7/site-packages/voluptuous/schema_builder.py:283: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n    if isinstance(schema, collections.Mapping):\r\n\r\n-- Docs: https://docs.pytest.org/en/latest/warnings.html\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/366", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/366/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/366/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/366/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/366", "id": 381577119, "node_id": "MDU6SXNzdWUzODE1NzcxMTk=", "number": 366, "title": "round", "user": {"login": "HavardLine", "id": 1689771, "node_id": "MDQ6VXNlcjE2ODk3NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1689771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HavardLine", "html_url": "https://github.com/HavardLine", "followers_url": "https://api.github.com/users/HavardLine/followers", "following_url": "https://api.github.com/users/HavardLine/following{/other_user}", "gists_url": "https://api.github.com/users/HavardLine/gists{/gist_id}", "starred_url": "https://api.github.com/users/HavardLine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HavardLine/subscriptions", "organizations_url": "https://api.github.com/users/HavardLine/orgs", "repos_url": "https://api.github.com/users/HavardLine/repos", "events_url": "https://api.github.com/users/HavardLine/events{/privacy}", "received_events_url": "https://api.github.com/users/HavardLine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-16T12:20:06Z", "updated_at": "2018-11-16T12:20:25Z", "closed_at": "2018-11-16T12:20:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/365", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/365/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/365/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/365/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/365", "id": 381169262, "node_id": "MDU6SXNzdWUzODExNjkyNjI=", "number": 365, "title": "Coerce(float)", "user": {"login": "HavardLine", "id": 1689771, "node_id": "MDQ6VXNlcjE2ODk3NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1689771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HavardLine", "html_url": "https://github.com/HavardLine", "followers_url": "https://api.github.com/users/HavardLine/followers", "following_url": "https://api.github.com/users/HavardLine/following{/other_user}", "gists_url": "https://api.github.com/users/HavardLine/gists{/gist_id}", "starred_url": "https://api.github.com/users/HavardLine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HavardLine/subscriptions", "organizations_url": "https://api.github.com/users/HavardLine/orgs", "repos_url": "https://api.github.com/users/HavardLine/repos", "events_url": "https://api.github.com/users/HavardLine/events{/privacy}", "received_events_url": "https://api.github.com/users/HavardLine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-15T13:50:08Z", "updated_at": "2018-11-15T14:14:57Z", "closed_at": "2018-11-15T14:14:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi There!\r\n\r\n We validate XML input and voluptuous seems to be great for this.\r\n\r\nThe code bellow worked fine for validating and converting integer strings. I guess it will also work fine for strings like \"1.5\". In Norway we use comma as decimal separator. Strings like \"1,5\" is not accepted.\r\n\r\nDo you have any tips for how to convert and accept the comma decimal separator?\r\n\r\n`schema = Schema({'LENGTH': Coerce(float)})`\r\n\r\nI do not have much experience using voluptuous. Sorry in advance if the issue is already addressed.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/362", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/362/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/362/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/362/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/362", "id": 361618336, "node_id": "MDU6SXNzdWUzNjE2MTgzMzY=", "number": 362, "title": "one test fails with voluptuous > 0.11", "user": {"login": "buzzdeee", "id": 8383396, "node_id": "MDQ6VXNlcjgzODMzOTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/8383396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/buzzdeee", "html_url": "https://github.com/buzzdeee", "followers_url": "https://api.github.com/users/buzzdeee/followers", "following_url": "https://api.github.com/users/buzzdeee/following{/other_user}", "gists_url": "https://api.github.com/users/buzzdeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/buzzdeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/buzzdeee/subscriptions", "organizations_url": "https://api.github.com/users/buzzdeee/orgs", "repos_url": "https://api.github.com/users/buzzdeee/repos", "events_url": "https://api.github.com/users/buzzdeee/events{/privacy}", "received_events_url": "https://api.github.com/users/buzzdeee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-19T07:39:22Z", "updated_at": "2018-09-19T08:50:09Z", "closed_at": "2018-09-19T08:50:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was looking into updating the voluptuous package on OpenBSD. The current version there is 0.10.5, which, when run regress tests, all 165 tests pass.\r\n\r\nnow updating, the one test fails:\r\n\r\n```\r\n======================================================================\r\nFAIL: Doctest: voluptuous.util.SetTo\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python2.7/doctest.py\", line 2226, in runTest\r\n    raise self.failureException(self.format_failure(new.getvalue()))\r\nAssertionError: Failed doctest test for voluptuous.util.SetTo\r\n  File \"/home/ports/pobj/amd64/py-voluptuous-0.11.1/voluptuous-0.11.1/voluptuous/util.py\", line 84, in SetTo\r\n\r\n----------------------------------------------------------------------\r\nFile \"/home/ports/pobj/amd64/py-voluptuous-0.11.1/voluptuous-0.11.1/voluptuous/util.py\", line 90, in voluptuous.util.SetTo\r\nFailed example:\r\n    s(\"foo\")\r\nException raised:\r\n    Traceback (most recent call last):\r\n      File \"/usr/local/lib/python2.7/doctest.py\", line 1315, in __run\r\n        compileflags, 1) in test.globs\r\n      File \"<doctest voluptuous.util.SetTo[2]>\", line 1, in <module>\r\n        s(\"foo\")\r\n      File \"/home/ports/pobj/amd64/py-voluptuous-0.11.1/voluptuous-0.11.1/voluptuous/schema_builder.py\", line 271, in __call__\r\n        raise er.MultipleInvalid([e])\r\n    MultipleInvalid: expected int\r\n----------------------------------------------------------------------\r\nRan 189 tests in 2.677s\r\n\r\nFAILED (failures=1)\r\n*** Error 1 in . (Makefile:27 'do-test')\r\n*** Error 1 in . (/home/ports/infrastructure/mk/bsd.port.mk:2762 '/home/ports/pobj/amd64/py-voluptuous-0.11.1/.test_done')\r\n*** Error 1 in /home/ports/devel/py-voluptuous (/home/ports/infrastructure/mk/bsd.port.mk:2412 'test')\r\n\r\n```\r\n\r\ntested on OpenBSD 6.4 amd64 with python-2.7.15 and 3.6.6, and tested py-voluptuous up to 0.11.5, and always this single test fails.\r\nSince there are more tests now, don't know if this is a new test failing, or an old test that was working previously.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/360", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/360/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/360/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/360/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/360", "id": 358860990, "node_id": "MDU6SXNzdWUzNTg4NjA5OTA=", "number": 360, "title": "Error returned by \"Any\" dict validator should be of the closest alternative", "user": {"login": "ydidwania", "id": 22861049, "node_id": "MDQ6VXNlcjIyODYxMDQ5", "avatar_url": "https://avatars1.githubusercontent.com/u/22861049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ydidwania", "html_url": "https://github.com/ydidwania", "followers_url": "https://api.github.com/users/ydidwania/followers", "following_url": "https://api.github.com/users/ydidwania/following{/other_user}", "gists_url": "https://api.github.com/users/ydidwania/gists{/gist_id}", "starred_url": "https://api.github.com/users/ydidwania/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ydidwania/subscriptions", "organizations_url": "https://api.github.com/users/ydidwania/orgs", "repos_url": "https://api.github.com/users/ydidwania/repos", "events_url": "https://api.github.com/users/ydidwania/events{/privacy}", "received_events_url": "https://api.github.com/users/ydidwania/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-09-11T02:18:18Z", "updated_at": "2019-08-15T13:00:25Z", "closed_at": "2019-08-15T13:00:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "\r\nValidation of  `Any(..)` is done in the order in which the alternatives are written. When using dicts, if none of them match, the deepest `error` is returned. The `error` (that is returned in the end) is updated only when it is [more nested](https://github.com/alecthomas/voluptuous/blob/master/voluptuous/validators.py#L251) in an alternate dict than the already existing error. \r\n\r\nIf all dicts are of the same level, the error is from the first dict in `Any(..)`. It would be better if Any() is made to return the error of the closest alternative. Or provide a `discriminant` function in the parameters used to generate error messages.\r\n\r\nFor the example below the validation error for all three types is at the same level of the dict. The error for type A is returned as that is the first to be validated.\r\n```\r\nfrom voluptuous import Schema\r\n\r\nsch = Schema({\r\n    # this field is keyed by 'type'\r\n    'implementation': Any({\r\n        'type': 'A',\r\n        'a-value': str,\r\n    }, {\r\n        'type': 'B',\r\n        'b-value': int,\r\n    }, {\r\n        'type': 'C',\r\n        'c-value': bool,\r\n    })  \r\n})\r\n\r\n# should be OK\r\nsch({\r\n    'implementation': {\r\n        'type': 'A',\r\n        'a-value': 'hello',}  \r\n})\r\n\r\n# but this one gives a very confusing error message, because Voluptuous does\r\n# not realize this is a (malformed) type-C implementation. Most confusingly,\r\n# it says the value for 'type' is not allowed, when really it is!\r\n# raises(\r\n#     er.MultipleInvalid, \r\n#    'extra keys not allowed @ data['implementation']['c-value']', \r\n#    'not a valid value for dictionary value @ data['implementation']['type']'\r\n# )\r\n\r\nsch({                                                                                                                                                                                                                         \r\n    'implementation': {\r\n        'type': 'C',\r\n        'c-value': None, }\r\n})\r\n```\r\nProbably, the error  best suited here is \r\n```\r\nexpected str for dictionary value @ data['implementation']['c-value']\r\n```\r\nMaybe we could return the one with shortest `errors` list (https://github.com/alecthomas/voluptuous/blob/master/voluptuous/schema_builder.py#L536) among all alternatives.\r\nOriginal discussion on [BMO](https://bugzilla.mozilla.org/show_bug.cgi?id=1490141) (reported by @djmitche) ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/359", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/359/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/359/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/359/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/359", "id": 355947541, "node_id": "MDU6SXNzdWUzNTU5NDc1NDE=", "number": 359, "title": "Please update the docs", "user": {"login": "m-aciek", "id": 9288014, "node_id": "MDQ6VXNlcjkyODgwMTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/9288014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-aciek", "html_url": "https://github.com/m-aciek", "followers_url": "https://api.github.com/users/m-aciek/followers", "following_url": "https://api.github.com/users/m-aciek/following{/other_user}", "gists_url": "https://api.github.com/users/m-aciek/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-aciek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-aciek/subscriptions", "organizations_url": "https://api.github.com/users/m-aciek/orgs", "repos_url": "https://api.github.com/users/m-aciek/repos", "events_url": "https://api.github.com/users/m-aciek/events{/privacy}", "received_events_url": "https://api.github.com/users/m-aciek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-31T11:42:02Z", "updated_at": "2018-09-01T05:29:45Z", "closed_at": "2018-09-01T05:29:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nThanks for this nice library!\r\nWould it be possible for you to update the docs at http://alecthomas.github.io/voluptuous/?\r\nThey are 0.8.11 only for now.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/355", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/355/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/355/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/355/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/355", "id": 346428204, "node_id": "MDU6SXNzdWUzNDY0MjgyMDQ=", "number": 355, "title": "0.11.4 is broken on Python 2", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-01T02:48:48Z", "updated_at": "2018-08-01T03:15:32Z", "closed_at": "2018-08-01T03:15:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\nrunning build\r\nrunning build_py\r\ncreating build\r\ncreating build/lib\r\ncreating build/lib/voluptuous\r\ncopying voluptuous/schema_builder.py -> build/lib/voluptuous\r\ncopying voluptuous/humanize.py -> build/lib/voluptuous\r\ncopying voluptuous/__init__.py -> build/lib/voluptuous\r\ncopying voluptuous/validators.py -> build/lib/voluptuous\r\ncopying voluptuous/util.py -> build/lib/voluptuous\r\ncopying voluptuous/error.py -> build/lib/voluptuous\r\nTraceback (most recent call last):\r\n  File \"setup.py\", line 10, in <module>\r\n    with open('README.md', encoding='utf-8') as f:\r\nTypeError: 'encoding' is an invalid keyword argument for this function\r\n```\r\n\r\nAlthough the source code doesn't seem to be pushed into the repository here...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/354", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/354/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/354/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/354/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/354", "id": 346156496, "node_id": "MDU6SXNzdWUzNDYxNTY0OTY=", "number": 354, "title": "setup.py fails on importing pypandoc", "user": {"login": "jakabk", "id": 7803077, "node_id": "MDQ6VXNlcjc4MDMwNzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/7803077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakabk", "html_url": "https://github.com/jakabk", "followers_url": "https://api.github.com/users/jakabk/followers", "following_url": "https://api.github.com/users/jakabk/following{/other_user}", "gists_url": "https://api.github.com/users/jakabk/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakabk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakabk/subscriptions", "organizations_url": "https://api.github.com/users/jakabk/orgs", "repos_url": "https://api.github.com/users/jakabk/repos", "events_url": "https://api.github.com/users/jakabk/events{/privacy}", "received_events_url": "https://api.github.com/users/jakabk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-31T12:00:11Z", "updated_at": "2018-07-31T23:27:19Z", "closed_at": "2018-07-31T23:27:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "version 0.11.3\r\n\r\nIssue:\r\nCalling setup.py fails when trying to import `pypandoc`. However it is not a dependency of voluptuous, at least it is absent from dependencies.\r\n\r\nTraceback:\r\n```\r\nCollecting voluptuous==0.11.3\r\n  Using cached https://files.pythonhosted.org/packages/1e/e1/d4ee28be80c22d17cf2a085582fd3ced2825731a4ea53fc42ad6da920725/voluptuous-0.11.3.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-install-2wichjm5/voluptuous/setup.py\", line 12, in <module>\r\n        import pypandoc\r\n    ImportError: No module named 'pypandoc'\r\n```\r\n\r\nReproduce:\r\npip install voluptuous==0.11.3 --no-binary :all:\r\n\r\nNote:\r\nFrom wheel I can install it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/352", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/352/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/352/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/352/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/352", "id": 343568145, "node_id": "MDU6SXNzdWUzNDM1NjgxNDU=", "number": 352, "title": "Release a new version", "user": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-23T10:04:48Z", "updated_at": "2018-07-27T09:03:33Z", "closed_at": "2018-07-27T09:03:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "So we can have the fix from https://github.com/alecthomas/voluptuous/pull/348", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/350", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/350/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/350/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/350/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/350", "id": 342255940, "node_id": "MDU6SXNzdWUzNDIyNTU5NDA=", "number": 350, "title": "Replace hard-coded regexp by source component", "user": {"login": "kdeldycke", "id": 159718, "node_id": "MDQ6VXNlcjE1OTcxOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/159718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kdeldycke", "html_url": "https://github.com/kdeldycke", "followers_url": "https://api.github.com/users/kdeldycke/followers", "following_url": "https://api.github.com/users/kdeldycke/following{/other_user}", "gists_url": "https://api.github.com/users/kdeldycke/gists{/gist_id}", "starred_url": "https://api.github.com/users/kdeldycke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kdeldycke/subscriptions", "organizations_url": "https://api.github.com/users/kdeldycke/orgs", "repos_url": "https://api.github.com/users/kdeldycke/repos", "events_url": "https://api.github.com/users/kdeldycke/events{/privacy}", "received_events_url": "https://api.github.com/users/kdeldycke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-18T09:50:28Z", "updated_at": "2018-07-18T10:28:08Z", "closed_at": "2018-07-18T10:26:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Email validation regexp is currently hard-coded at: https://github.com/alecthomas/voluptuous/blob/b99459ffb6c9932abae3c6882c634a108a34f6ab/voluptuous/validators.py#L22-L39\r\n\r\nWhy not reusing the [`validators`](https://github.com/kvesteri/validators/) package it is based on? See: https://github.com/kvesteri/validators/blob/master/validators/email.py#L5-L22\r\n\r\nThis have the advantage of lowering the maintenance burden by not trying to keep that regexp up to date.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/347", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/347/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/347/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/347/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/347", "id": 338551043, "node_id": "MDU6SXNzdWUzMzg1NTEwNDM=", "number": 347, "title": "Undocumented breaking change between 0.10.5 and 0.11.1 regarding error handling", "user": {"login": "Spredzy", "id": 1191411, "node_id": "MDQ6VXNlcjExOTE0MTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1191411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Spredzy", "html_url": "https://github.com/Spredzy", "followers_url": "https://api.github.com/users/Spredzy/followers", "following_url": "https://api.github.com/users/Spredzy/following{/other_user}", "gists_url": "https://api.github.com/users/Spredzy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Spredzy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Spredzy/subscriptions", "organizations_url": "https://api.github.com/users/Spredzy/orgs", "repos_url": "https://api.github.com/users/Spredzy/repos", "events_url": "https://api.github.com/users/Spredzy/events{/privacy}", "received_events_url": "https://api.github.com/users/Spredzy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-05T12:20:09Z", "updated_at": "2018-07-06T00:27:16Z", "closed_at": "2018-07-06T00:27:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Following the migration from 0.10.5 to 0.11.1, there has been a change in the way error are handled that is not documented on the changelog.\r\n\r\nAs one can see below, the `path` part of the error (for `q2`) is missing when a error message is specified in `0.11.1` while it used to be filled in `0.10.5`.\r\n\r\n```\r\n[root@localhost vagrant]# cat vol.py\r\n#!/bin/python                          \r\n                                                                                                                                                                                              \r\nimport voluptuous as v   \r\n\r\n_schema = v.Schema({\r\n    v.Optional('q'): int,\r\n    v.Required('q2'): v.Any(int, msg='toto')\r\n})\r\n\r\ntry:\r\n    _schema({'q': 'str', 'q2': 'tata'})\r\nexcept v.MultipleInvalid as exc:\r\n     print(str([d.__dict__ for d in exc.errors]))\r\n\r\n[root@localhost vagrant]# python -c \"import voluptuous; print(voluptuous.__version__)\"\r\n0.10.5\r\n\r\n[root@localhost vagrant]# python vol.py\r\n[{'path': ['q'], 'error_type': 'dictionary value', 'error_message': 'expected int'}, {'path': ['q2'], 'error_type': 'dictionary value', 'error_message': 'toto'}]\r\n\r\n[root@localhost vagrant]# python -c \"import voluptuous; print(voluptuous.__version__)\"                                                                                                        \r\n0.11.1\r\n\r\n[root@localhost vagrant]# python vol.py\r\n[{'path': ['q'], 'error_type': 'dictionary value', 'error_message': 'expected int'}, {'path': [], 'error_type': 'dictionary value', 'error_message': 'toto'}]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/346", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/346/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/346/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/346/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/346", "id": 337482692, "node_id": "MDU6SXNzdWUzMzc0ODI2OTI=", "number": 346, "title": "SchemaError: unsupported schema data type 'set' ?", "user": {"login": "lotusirous", "id": 5105237, "node_id": "MDQ6VXNlcjUxMDUyMzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5105237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lotusirous", "html_url": "https://github.com/lotusirous", "followers_url": "https://api.github.com/users/lotusirous/followers", "following_url": "https://api.github.com/users/lotusirous/following{/other_user}", "gists_url": "https://api.github.com/users/lotusirous/gists{/gist_id}", "starred_url": "https://api.github.com/users/lotusirous/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lotusirous/subscriptions", "organizations_url": "https://api.github.com/users/lotusirous/orgs", "repos_url": "https://api.github.com/users/lotusirous/repos", "events_url": "https://api.github.com/users/lotusirous/events{/privacy}", "received_events_url": "https://api.github.com/users/lotusirous/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-02T11:38:49Z", "updated_at": "2018-07-03T02:41:05Z", "closed_at": "2018-07-03T02:41:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I run the example code in section [Sets and frozensets](https://github.com/alecthomas/voluptuous#sets-and-frozensets)\r\n\r\n> Sets and frozensets are treated as a set of valid values. Each element in the schema set is compared to each value in the input data\r\n\r\n\r\nI used python 3.6.5.\r\n```\r\n$ python --version\r\nPython 3.6.5\r\n```\r\n\r\n```py\r\nimport voluptuous\r\nprint(voluptuous.__version__) # '0.11.1'\r\n\r\nfrom voluptuous import Schema\r\nschema = Schema({42})\r\n```\r\n\r\nWhy does it raise voluptuous.error.SchemaError: unsupported schema data type 'set' ?\r\n\r\n```py\r\n\r\nTraceback (most recent call last):\r\n  File \"t.py\", line 2, in <module>\r\n    schema = Schema({42})\r\n  File \"/home/trongkha/.local/py3/lib/python3.6/site-packages/voluptuous/schema_builder.py\", line 202, in __init__\r\n    self._compiled = self._compile(schema)\r\n  File \"/home/trongkha/.local/py3/lib/python3.6/site-packages/voluptuous/schema_builder.py\", line 296, in _compile\r\n    type(schema).__name__)\r\nvoluptuous.error.SchemaError: unsupported schema data type 'set'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/340", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/340/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/340/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/340/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/340", "id": 334563103, "node_id": "MDU6SXNzdWUzMzQ1NjMxMDM=", "number": 340, "title": "Functions do not work as default values", "user": {"login": "ChristopherChudzicki", "id": 9010790, "node_id": "MDQ6VXNlcjkwMTA3OTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9010790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChristopherChudzicki", "html_url": "https://github.com/ChristopherChudzicki", "followers_url": "https://api.github.com/users/ChristopherChudzicki/followers", "following_url": "https://api.github.com/users/ChristopherChudzicki/following{/other_user}", "gists_url": "https://api.github.com/users/ChristopherChudzicki/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChristopherChudzicki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChristopherChudzicki/subscriptions", "organizations_url": "https://api.github.com/users/ChristopherChudzicki/orgs", "repos_url": "https://api.github.com/users/ChristopherChudzicki/repos", "events_url": "https://api.github.com/users/ChristopherChudzicki/events{/privacy}", "received_events_url": "https://api.github.com/users/ChristopherChudzicki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-21T16:14:11Z", "updated_at": "2018-07-18T10:27:52Z", "closed_at": "2018-07-18T10:27:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "When creating a schema for dictionaries, functions should be useable as default values but they seem not to be:\r\n\r\n```python\r\nfrom voluptuous import Schema, Required, truth\r\n\r\n@truth\r\ndef is_callable(obj):\r\n  return callable(obj)\r\n\r\ndef f(x):\r\n  return x*x\r\n\r\nschema = Schema({\r\n  Required('function', default=f): is_callable\r\n})\r\n\r\nschema({'function': lambda x: x**3}) # passes\r\nschema({}) # TypeError: f() takes exactly 1 argument (0 given)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/339", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/339/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/339/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/339/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/339", "id": 330587002, "node_id": "MDU6SXNzdWUzMzA1ODcwMDI=", "number": 339, "title": "Date validator fails if len(input_string) != 10", "user": {"login": "entropiae", "id": 1800661, "node_id": "MDQ6VXNlcjE4MDA2NjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1800661?v=4", "gravatar_id": "", "url": "https://api.github.com/users/entropiae", "html_url": "https://github.com/entropiae", "followers_url": "https://api.github.com/users/entropiae/followers", "following_url": "https://api.github.com/users/entropiae/following{/other_user}", "gists_url": "https://api.github.com/users/entropiae/gists{/gist_id}", "starred_url": "https://api.github.com/users/entropiae/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/entropiae/subscriptions", "organizations_url": "https://api.github.com/users/entropiae/orgs", "repos_url": "https://api.github.com/users/entropiae/repos", "events_url": "https://api.github.com/users/entropiae/events{/privacy}", "received_events_url": "https://api.github.com/users/entropiae/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-08T09:32:50Z", "updated_at": "2018-07-19T01:02:03Z", "closed_at": "2018-07-19T01:02:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The Date validator always check if the length of the input string is equal to the length of the default format string (10); however this conditions may be (incorrectly) not verified when a custom format string is supplied and the input string respect this format.\r\n\r\nExample:\r\n```\r\n>>> validators.Date('%Y%d%m')('20180101')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/rcirimelli/.local/share/virtualenvs/feed_normalizer-ROQHSXxK/lib/python3.6/site-packages/voluptuous/validators.py\", line 645, in __call__\r\n    ' expected length %d (%s)' % (len(self.FORMAT_DESCRIPTION), self.FORMAT_DESCRIPTION))\r\nvoluptuous.error.DateInvalid: value has invalid length expected length 10 (yyyy-mm-dd)\r\n>>>\r\n>>> datetime.datetime.strptime('20180101', '%Y%d%m')\r\ndatetime.datetime(2018, 1, 1, 0, 0)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/338", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/338/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/338/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/338/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/338", "id": 329399180, "node_id": "MDU6SXNzdWUzMjkzOTkxODA=", "number": 338, "title": "Change reference in the title of this repo to new pypi.org", "user": {"login": "elipavlov", "id": 7875287, "node_id": "MDQ6VXNlcjc4NzUyODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/7875287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elipavlov", "html_url": "https://github.com/elipavlov", "followers_url": "https://api.github.com/users/elipavlov/followers", "following_url": "https://api.github.com/users/elipavlov/following{/other_user}", "gists_url": "https://api.github.com/users/elipavlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/elipavlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elipavlov/subscriptions", "organizations_url": "https://api.github.com/users/elipavlov/orgs", "repos_url": "https://api.github.com/users/elipavlov/repos", "events_url": "https://api.github.com/users/elipavlov/events{/privacy}", "received_events_url": "https://api.github.com/users/elipavlov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-05T10:40:58Z", "updated_at": "2018-06-05T10:51:44Z", "closed_at": "2018-06-05T10:51:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently in the title of this repo we see http://pypi.python.org/pypi/voluptuous, and this link redirect customers to new page https://pypi.org/project/voluptuous/.\r\n\r\nIn the future pypi maintainers going to remove redirect and link will be unavailable.\r\nhttps://packaging.python.org/guides/migrating-to-pypi-org/#browsing-packages\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/334", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/334/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/334/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/334/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/334", "id": 301329439, "node_id": "MDU6SXNzdWUzMDEzMjk0Mzk=", "number": 334, "title": "Validation behaviour changed.", "user": {"login": "amateja", "id": 9973037, "node_id": "MDQ6VXNlcjk5NzMwMzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/9973037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amateja", "html_url": "https://github.com/amateja", "followers_url": "https://api.github.com/users/amateja/followers", "following_url": "https://api.github.com/users/amateja/following{/other_user}", "gists_url": "https://api.github.com/users/amateja/gists{/gist_id}", "starred_url": "https://api.github.com/users/amateja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amateja/subscriptions", "organizations_url": "https://api.github.com/users/amateja/orgs", "repos_url": "https://api.github.com/users/amateja/repos", "events_url": "https://api.github.com/users/amateja/events{/privacy}", "received_events_url": "https://api.github.com/users/amateja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-01T09:15:58Z", "updated_at": "2018-03-01T12:19:56Z", "closed_at": "2018-03-01T09:47:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi.\r\n\r\nSchema validation in version 0.11.1 validates also default values of optional parameters. Is that change intentional?\r\n\r\n```python\r\nfrom voluptuous import Coerce, Optional, Schema\r\n\r\nfoo = Schema(\r\n    {\r\n        Optional('bar', default=None): Coerce(int)\r\n    }\r\n)\r\nfoo({})\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/333", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/333/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/333/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/333/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/333", "id": 300051452, "node_id": "MDU6SXNzdWUzMDAwNTE0NTI=", "number": 333, "title": "Permission issues in PyPI source tarballs", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-25T19:01:37Z", "updated_at": "2020-06-24T17:44:55Z", "closed_at": "2018-04-21T11:44:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The files inside the PyPI source tarballs are 0640, including those under `voluptuous.egg-info/`. This causes setuptools to install these metadata with 640 permission (not world readable). It would be okay to either exclude egg-info from the source tarball or make them world-readable (644).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/327", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/327/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/327/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/327/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/327", "id": 296689023, "node_id": "MDU6SXNzdWUyOTY2ODkwMjM=", "number": 327, "title": "Suggestion/discussion - schema part or combining schemas", "user": {"login": "guyarad", "id": 6987428, "node_id": "MDQ6VXNlcjY5ODc0Mjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6987428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guyarad", "html_url": "https://github.com/guyarad", "followers_url": "https://api.github.com/users/guyarad/followers", "following_url": "https://api.github.com/users/guyarad/following{/other_user}", "gists_url": "https://api.github.com/users/guyarad/gists{/gist_id}", "starred_url": "https://api.github.com/users/guyarad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guyarad/subscriptions", "organizations_url": "https://api.github.com/users/guyarad/orgs", "repos_url": "https://api.github.com/users/guyarad/repos", "events_url": "https://api.github.com/users/guyarad/events{/privacy}", "received_events_url": "https://api.github.com/users/guyarad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-13T10:38:22Z", "updated_at": "2018-02-13T11:28:04Z", "closed_at": "2018-02-13T11:28:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Didn't see that anything like is supported.\r\nThe use-case is wanted to compose a new schema from 2 (or possibly more) other schemas. \r\n```python\r\nSCHEMA1 = Schema(...)\r\nSCHEMA2 = Schema(...)\r\nCOMBINED_SCHEMA = Schema(parts=[\r\n    SCHEMA1,\r\n    SCHEMA2])\r\n```\r\n\r\nOf course we can do something like: `COMBINED_SCHEMA = All(SCHEMA1, SCHEMA2)`\r\nBut that's tricky because what if I have `extra=REMOVE_EXTRA` in either of the schema parts? \r\nThis could happen if in some cases I want to use these schemas in other context that aren't combined, in which I want to PREVENT_EXTRA, for instance. \r\n\r\nSo when used with imagined `parts` attribute it should temporarily ignore `extra` configuration and apply later on, somehow indicating which fields were extraneous.\r\nMaybe implement further logic such as:\r\n- if both schemas were configured as PREVENT_EXTRA, remove the extraneous fields\r\n- if one of them was ALLOW_EXTRA all fields are allowed. \r\n- if both were marked REMOVE_EXTRA, remove them\r\n\r\nWhat do you think?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/323", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/323/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/323/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/323/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/323", "id": 293379189, "node_id": "MDU6SXNzdWUyOTMzNzkxODk=", "number": 323, "title": "Does voluptuous support multiple field validations", "user": {"login": "jeff1evesque", "id": 2907085, "node_id": "MDQ6VXNlcjI5MDcwODU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2907085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeff1evesque", "html_url": "https://github.com/jeff1evesque", "followers_url": "https://api.github.com/users/jeff1evesque/followers", "following_url": "https://api.github.com/users/jeff1evesque/following{/other_user}", "gists_url": "https://api.github.com/users/jeff1evesque/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeff1evesque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeff1evesque/subscriptions", "organizations_url": "https://api.github.com/users/jeff1evesque/orgs", "repos_url": "https://api.github.com/users/jeff1evesque/repos", "events_url": "https://api.github.com/users/jeff1evesque/events{/privacy}", "received_events_url": "https://api.github.com/users/jeff1evesque/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-01T02:09:45Z", "updated_at": "2018-02-03T12:51:54Z", "closed_at": "2018-02-03T12:51:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can, I validated 2+ fields at the same time, and receive feedback, on 2+ errors at a given validation instance?  The way I've implemented, it seems to catch only the first error.  When I fix the first error, then run the `voluptuous` validation again, the next error is raised, and so forth.  Is this generally how validation is implemented either internally with voluptuous, or how the error is caught?\r\n\r\nI have the following schema:\r\n\r\n```python\r\n            schema = Schema({\r\n                Required('collection'): All(unicode, Length(min=1)),\r\n                Required('model_type'): In(model_type),\r\n                Required('session_type'): 'model_generate',\r\n                Optional('stream'): Any('True', 'False'),\r\n                Required('sv_kernel_type'): In(sv_kernel_type),\r\n                Optional('gamma'): Any(int, float),\r\n                Optional('penalty'): Any(int, float),\r\n            })\r\n```\r\n\r\nIf I were to validate my `schema`:\r\n\r\n```json\r\npremodel_settings: {'sv_kernel_type': u'linear', 'stream': 'False', 'session_type': u'model_generate', 'collection': u'collection-1', 'penalty': u'161528', 'model_type': u'svm', 'gamma': u'164'}\r\n```\r\n\r\nAs follows:\r\n\r\n```python\r\n        try:\r\n            schema(premodel_settings)\r\n\r\n        except Exception, error:\r\n            self.list_error.append(error)\r\n            return error\r\n```\r\n\r\nIt seems I'm only capturing one error twice:\r\n\r\n```\r\n\"expected int for dictionary value @ data['penalty']\"\r\n```\r\n\r\nI've commented my exact use case, on an [issue](https://github.com/jeff1evesque/machine-learning/issues/3192#issuecomment-362133372), I've just recently quasi finished.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/322", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/322/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/322/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/322/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/322", "id": 291702239, "node_id": "MDU6SXNzdWUyOTE3MDIyMzk=", "number": 322, "title": "Feature request: Return only elements from iterable that validate", "user": {"login": "benjaminweb", "id": 1290837, "node_id": "MDQ6VXNlcjEyOTA4Mzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1290837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benjaminweb", "html_url": "https://github.com/benjaminweb", "followers_url": "https://api.github.com/users/benjaminweb/followers", "following_url": "https://api.github.com/users/benjaminweb/following{/other_user}", "gists_url": "https://api.github.com/users/benjaminweb/gists{/gist_id}", "starred_url": "https://api.github.com/users/benjaminweb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benjaminweb/subscriptions", "organizations_url": "https://api.github.com/users/benjaminweb/orgs", "repos_url": "https://api.github.com/users/benjaminweb/repos", "events_url": "https://api.github.com/users/benjaminweb/events{/privacy}", "received_events_url": "https://api.github.com/users/benjaminweb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-25T20:18:54Z", "updated_at": "2018-02-16T01:49:03Z", "closed_at": "2018-02-16T01:49:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "How relevant to you consider a built-in method `valid_elements(elements, Schema)` that only recovers elements that validate?\r\n\r\n\r\n```python\r\nimport pytest\r\n\r\nfrom voluptuous import Schema\r\nfrom voluptuous.validators import Email\r\nfrom voluptuous.schema_builder import Required\r\nfrom voluptuous.error import MultipleInvalid\r\n\r\n\r\ndef valid_element(element, validator):\r\n    \"\"\"Returns element if valid.\"\"\"\r\n    try:\r\n        return validator(element)\r\n    except MultipleInvalid:\r\n        pass\r\n\r\n\r\ndef valid_elements(elements, validator):\r\n    \"\"\"Returns only valid elements.\"\"\"\r\n    return list(filter(lambda x: valid_element(x, validator), elements))\r\n\r\n\r\ndef valid_elements(elements, validator):\r\n    result = []\r\n    for element in elements:\r\n        try:\r\n            result.append(validator(element))\r\n        except MultipleInvalid:\r\n            pass\r\n    return result\r\n\r\n\r\ndef test_valid_elements():\r\n    Element = Schema({Required('id'): int, Required('price'): float, Required('email'): Email()})\r\n    elements = [{'id': 1, 'price': 33.34, 'email': 'mail@example.tld'}, {'id': 2, 'price': 33.34, 'email': ''}]\r\n    expected = [{'email': 'mail@example.tld', 'id': 1, 'price': 33.34}]\r\n\r\n    assert valid_elements(elements, Element) == expected\r\n\r\n\r\n@pytest.mark.parametrize('element, expected',\r\n    [\r\n        [{'id': 1, 'price': 33.34, 'email': 'mail@example.tld'},\r\n         {'id': 1, 'price': 33.34, 'email': 'mail@example.tld'}\r\n        ],\r\n        [{'id': 2, 'price': 33.34, 'email': ''},\r\n         None\r\n        ]\r\n    ]\r\n)\r\ndef test_valid_element(element, expected):\r\n    Element = Schema({Required('id'): int,\r\n                      Required('price'): float,\r\n                      Required('email'): Email()})\r\n    assert valid_element(element, Element) == expected\r\n\r\n\r\ndef test_valid_elements():\r\n    Element = Schema({Required('id'): int,\r\n                      Required('price'): float,\r\n                      Required('email'): Email()})\r\n    elements = [{'id': 1, 'price': 33.34, 'email': 'mail@example.tld'},\r\n                {'id': 2, 'price': 33.34, 'email': ''}]\r\n    expected = [{'email': 'mail@example.tld', 'id': 1, 'price': 33.34}]\r\n    assert valid_elements(elements, Element) == expected\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/320", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/320/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/320/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/320/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/320", "id": 287876535, "node_id": "MDU6SXNzdWUyODc4NzY1MzU=", "number": 320, "title": "Link to pytest-voluptuous plugin in README", "user": {"login": "tuukkamustonen", "id": 94327, "node_id": "MDQ6VXNlcjk0MzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/94327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tuukkamustonen", "html_url": "https://github.com/tuukkamustonen", "followers_url": "https://api.github.com/users/tuukkamustonen/followers", "following_url": "https://api.github.com/users/tuukkamustonen/following{/other_user}", "gists_url": "https://api.github.com/users/tuukkamustonen/gists{/gist_id}", "starred_url": "https://api.github.com/users/tuukkamustonen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tuukkamustonen/subscriptions", "organizations_url": "https://api.github.com/users/tuukkamustonen/orgs", "repos_url": "https://api.github.com/users/tuukkamustonen/repos", "events_url": "https://api.github.com/users/tuukkamustonen/events{/privacy}", "received_events_url": "https://api.github.com/users/tuukkamustonen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-11T18:16:56Z", "updated_at": "2018-01-12T09:48:27Z", "closed_at": "2018-01-12T09:48:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, I released a pytest plugin that integrates with voluptuous. It's called, surprise suprise, [pytest-voluptuous](https://github.com/F-Secure/pytest-voluptuous)! Find it at [PyPI](https://pypi.python.org/pypi/pytest-voluptuous).\r\n\r\nWould you mind if we linked to it in the README? Maybe even right away in the first section (before `Contact`). On the same go, you could go over the [README](https://github.com/F-Secure/pytest-voluptuous/blob/master/README.rst) and verify that it makes sense in the first place :)\r\n\r\nI published it in a [Reddit post](https://www.reddit.com/r/Python/comments/7pmijj/released_pytestvoluptuous_a_nifty_little_pytest/) and while it unfortunately didn't get much attention, there's also a line or two about the background of the library.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/317", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/317/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/317/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/317/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/317", "id": 280069910, "node_id": "MDU6SXNzdWUyODAwNjk5MTA=", "number": 317, "title": "Adding pyenv Python versions configuration", "user": {"login": "guyarad", "id": 6987428, "node_id": "MDQ6VXNlcjY5ODc0Mjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6987428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guyarad", "html_url": "https://github.com/guyarad", "followers_url": "https://api.github.com/users/guyarad/followers", "following_url": "https://api.github.com/users/guyarad/following{/other_user}", "gists_url": "https://api.github.com/users/guyarad/gists{/gist_id}", "starred_url": "https://api.github.com/users/guyarad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guyarad/subscriptions", "organizations_url": "https://api.github.com/users/guyarad/orgs", "repos_url": "https://api.github.com/users/guyarad/repos", "events_url": "https://api.github.com/users/guyarad/events{/privacy}", "received_events_url": "https://api.github.com/users/guyarad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-07T10:05:38Z", "updated_at": "2018-02-09T01:06:14Z", "closed_at": "2018-02-09T01:06:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider add a configuration file for pyenv to indicate which python versions to support.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/315", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/315/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/315/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/315/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/315", "id": 279720509, "node_id": "MDU6SXNzdWUyNzk3MjA1MDk=", "number": 315, "title": "Travis Failing Test Cases in Master", "user": {"login": "tusharmakkar08", "id": 2357025, "node_id": "MDQ6VXNlcjIzNTcwMjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2357025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tusharmakkar08", "html_url": "https://github.com/tusharmakkar08", "followers_url": "https://api.github.com/users/tusharmakkar08/followers", "following_url": "https://api.github.com/users/tusharmakkar08/following{/other_user}", "gists_url": "https://api.github.com/users/tusharmakkar08/gists{/gist_id}", "starred_url": "https://api.github.com/users/tusharmakkar08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tusharmakkar08/subscriptions", "organizations_url": "https://api.github.com/users/tusharmakkar08/orgs", "repos_url": "https://api.github.com/users/tusharmakkar08/repos", "events_url": "https://api.github.com/users/tusharmakkar08/events{/privacy}", "received_events_url": "https://api.github.com/users/tusharmakkar08/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-06T11:34:44Z", "updated_at": "2017-12-07T07:23:24Z", "closed_at": "2017-12-07T07:23:24Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Hey\r\n\r\nMerging of PR: https://github.com/alecthomas/voluptuous/pull/311 has resulted in tests failure in the master branch. \r\n\r\n@dtao: Please look into this. \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/313", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/313/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/313/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/313/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/313", "id": 276858209, "node_id": "MDU6SXNzdWUyNzY4NTgyMDk=", "number": 313, "title": "New release", "user": {"login": "fabaff", "id": 116184, "node_id": "MDQ6VXNlcjExNjE4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/116184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabaff", "html_url": "https://github.com/fabaff", "followers_url": "https://api.github.com/users/fabaff/followers", "following_url": "https://api.github.com/users/fabaff/following{/other_user}", "gists_url": "https://api.github.com/users/fabaff/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabaff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabaff/subscriptions", "organizations_url": "https://api.github.com/users/fabaff/orgs", "repos_url": "https://api.github.com/users/fabaff/repos", "events_url": "https://api.github.com/users/fabaff/events{/privacy}", "received_events_url": "https://api.github.com/users/fabaff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-26T21:28:23Z", "updated_at": "2018-02-15T10:07:28Z", "closed_at": "2018-02-15T09:38:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a new release planned in the near future? I'm especially interested in #307. Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/312", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/312/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/312/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/312/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/312", "id": 274728828, "node_id": "MDU6SXNzdWUyNzQ3Mjg4Mjg=", "number": 312, "title": " About multiple same key\uff0cIn dict", "user": {"login": "flybaozi", "id": 13565243, "node_id": "MDQ6VXNlcjEzNTY1MjQz", "avatar_url": "https://avatars3.githubusercontent.com/u/13565243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flybaozi", "html_url": "https://github.com/flybaozi", "followers_url": "https://api.github.com/users/flybaozi/followers", "following_url": "https://api.github.com/users/flybaozi/following{/other_user}", "gists_url": "https://api.github.com/users/flybaozi/gists{/gist_id}", "starred_url": "https://api.github.com/users/flybaozi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flybaozi/subscriptions", "organizations_url": "https://api.github.com/users/flybaozi/orgs", "repos_url": "https://api.github.com/users/flybaozi/repos", "events_url": "https://api.github.com/users/flybaozi/events{/privacy}", "received_events_url": "https://api.github.com/users/flybaozi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-17T02:10:33Z", "updated_at": "2018-04-21T11:44:54Z", "closed_at": "2018-04-21T11:44:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are multiple identical keys in a dict, which is correct if you only need to match the value of one key. How can it be a better operation?\r\n```\r\n{\r\n\t\"code\": 0,\r\n\t\"data\": {\r\n\t\t\"com\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"pear\",\r\n\t\t\t\t\"status\": \"open\",\r\n\t\t\t\t\"tags\": \"one\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"apple\",\r\n\t\t\t\t\"status\": \"open\",\r\n\t\t\t\t\"tags\": \"one\"\r\n\t\t\t},\r\n\t\t]\r\n\t},\r\n\t\"msg\": \"thks\uff01\"\r\n}\r\n```\r\n\r\nI just need to verify that the name is equal to pear\r\n\r\nthks~", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/310", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/310/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/310/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/310/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/310", "id": 271713463, "node_id": "MDU6SXNzdWUyNzE3MTM0NjM=", "number": 310, "title": "cannot have module named error and util in my project", "user": {"login": "lonsdale8734", "id": 8331629, "node_id": "MDQ6VXNlcjgzMzE2Mjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/8331629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lonsdale8734", "html_url": "https://github.com/lonsdale8734", "followers_url": "https://api.github.com/users/lonsdale8734/followers", "following_url": "https://api.github.com/users/lonsdale8734/following{/other_user}", "gists_url": "https://api.github.com/users/lonsdale8734/gists{/gist_id}", "starred_url": "https://api.github.com/users/lonsdale8734/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lonsdale8734/subscriptions", "organizations_url": "https://api.github.com/users/lonsdale8734/orgs", "repos_url": "https://api.github.com/users/lonsdale8734/repos", "events_url": "https://api.github.com/users/lonsdale8734/events{/privacy}", "received_events_url": "https://api.github.com/users/lonsdale8734/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-07T05:24:42Z", "updated_at": "2017-11-07T08:34:49Z", "closed_at": "2017-11-07T08:34:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I cannot name a module `error` in my project. Here is the exception message.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"xxx/python3.6/site-packages/voluptuous/__init__.py\", line 4, in <module>\r\n    from schema_builder import *\r\nModuleNotFoundError: No module named 'schema_builder'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Applications/PyCharm.app/Contents/helpers/pydev/pydevd.py\", line 1599, in <module>\r\n    globals = debugger.run(setup['file'], None, None, is_module)\r\n  File \"/Applications/PyCharm.app/Contents/helpers/pydev/pydevd.py\", line 1026, in run\r\n    pydev_imports.execfile(file, globals, locals)  # execute the script\r\n  File \"/Applications/PyCharm.app/Contents/helpers/pydev/_pydev_imps/_pydev_execfile.py\", line 18, in execfile\r\n    exec(compile(contents+\"\\n\", file, 'exec'), glob, loc)\r\n  File \"/src/main.py\", line 20, in <module>\r\n    __register_blueprint(app)\r\n  File \"/src/main.py\", line 10, in __register_blueprint\r\n    import view.timetable\r\n  File \"/src/view/timetable.py\", line 5, in <module>\r\n    from form import timetable as timetable_form\r\n  File \"/src/form/timetable.py\", line 3, in <module>\r\n    from voluptuous import Schema, Required, Length, Range, All\r\n  File \"xxx/python3.6/site-packages/voluptuous/__init__.py\", line 10, in <module>\r\n    from .validators import *\r\n  File \"xxx/python3.6/site-packages/voluptuous/validators.py\", line 110, in <module>\r\n    @message('value was not true', cls=TrueInvalid)\r\n  File \"xxx/python3.6/site-packages/voluptuous/schema_builder.py\", line 1103, in message\r\n    if cls and not issubclass(cls, er.Invalid):\r\nAttributeError: module 'error' has no attribute 'Invalid'\r\n```\r\n\r\nWhen I deep into the code, I found the reason is that voluptuous used relative import\r\n\r\n```\r\ntry:\r\n    from schema_builder import *\r\n    from validators import *\r\n    from util import *\r\n    from error import *\r\nexcept ImportError:\r\n    from .schema_builder import *\r\n    from .validators import *\r\n    from .util import *\r\n    from .error import *\r\n\r\n__version__ = '0.10.5'\r\n__author__ = 'tusharmakkar08'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/309", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/309/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/309/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/309/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/309", "id": 271049476, "node_id": "MDU6SXNzdWUyNzEwNDk0NzY=", "number": 309, "title": "Support for Python 3.4+ enums", "user": {"login": "svisser", "id": 723226, "node_id": "MDQ6VXNlcjcyMzIyNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/723226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svisser", "html_url": "https://github.com/svisser", "followers_url": "https://api.github.com/users/svisser/followers", "following_url": "https://api.github.com/users/svisser/following{/other_user}", "gists_url": "https://api.github.com/users/svisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/svisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svisser/subscriptions", "organizations_url": "https://api.github.com/users/svisser/orgs", "repos_url": "https://api.github.com/users/svisser/repos", "events_url": "https://api.github.com/users/svisser/events{/privacy}", "received_events_url": "https://api.github.com/users/svisser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-03T17:01:57Z", "updated_at": "2017-12-16T06:09:49Z", "closed_at": "2017-12-16T06:09:49Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "This is a ticket to explore the possibility of adding support for Python 3.4+ enums to voluptuous.\r\n\r\nSo far it's possible to write:\r\n\r\n```python\r\nimport enum\r\n\r\nfrom voluptuous import In, Schema\r\n\r\nclass MyEnum(enum.Enum):\r\n    A = 'a'\r\n    B = 'b'\r\n\r\ns = Schema(In(item.value for item in MyEnum))\r\ns('a')\r\n```\r\n\r\nbut perhaps it would be nice if it could be written as the following?\r\n\r\n```python\r\ns = Schema(In(MyEnum))\r\n```\r\n\r\nor:\r\n\r\n```python\r\ns = Schema(MyEnum)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/308", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/308/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/308/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/308/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/308", "id": 270248735, "node_id": "MDU6SXNzdWUyNzAyNDg3MzU=", "number": 308, "title": "Nested dictionaries with optional keys?", "user": {"login": "jeremyherbert", "id": 52499, "node_id": "MDQ6VXNlcjUyNDk5", "avatar_url": "https://avatars2.githubusercontent.com/u/52499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremyherbert", "html_url": "https://github.com/jeremyherbert", "followers_url": "https://api.github.com/users/jeremyherbert/followers", "following_url": "https://api.github.com/users/jeremyherbert/following{/other_user}", "gists_url": "https://api.github.com/users/jeremyherbert/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremyherbert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremyherbert/subscriptions", "organizations_url": "https://api.github.com/users/jeremyherbert/orgs", "repos_url": "https://api.github.com/users/jeremyherbert/repos", "events_url": "https://api.github.com/users/jeremyherbert/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremyherbert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-01T09:33:34Z", "updated_at": "2017-11-01T09:47:15Z", "closed_at": "2017-11-01T09:41:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm trying to validate a dict which has another dict inside it. Both of these can have optional keys. However, there doesn't seem to be a way to allow optional keys, I always get a validation error: `voluptuous.error.MultipleInvalid: extra keys not allowed @ data['test2']['extra_key']`. Am I doing something wrong, or is this a bug?\r\n\r\nI'm using version 0.10.5 installed via pip about 15 minutes ago.\r\n\r\nPlease see my test code below:\r\n\r\n```\r\nfrom voluptuous import Schema, Required\r\n\r\ns = Schema({\r\n    Required(\"test1\"): int,\r\n    Required(\"test2\"): {\r\n        Required(\"test3\"): int\r\n    }\r\n})\r\n\r\ns2 = Schema({\r\n    Required(\"test1\"): int,\r\n    Required(\"test2\"): Schema({\r\n        Required(\"test3\"): int\r\n    }, required=False)\r\n}, required=False)\r\n\r\n\r\ntest_dict = {\r\n    \"test1\": 1,\r\n    \"test2\": {\r\n        \"test3\": 1,\r\n        \"extra_key\": 2\r\n    }\r\n}\r\n\r\n#s(test_dict) # this will fail\r\ns2(test_dict) # and this one fails too\r\n```\r\n\r\nThanks,\r\nJeremy", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/306", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/306/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/306/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/306/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/306", "id": 269478765, "node_id": "MDU6SXNzdWUyNjk0Nzg3NjU=", "number": 306, "title": "Python-2.6 support", "user": {"login": "abadger", "id": 209242, "node_id": "MDQ6VXNlcjIwOTI0Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/209242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abadger", "html_url": "https://github.com/abadger", "followers_url": "https://api.github.com/users/abadger/followers", "following_url": "https://api.github.com/users/abadger/following{/other_user}", "gists_url": "https://api.github.com/users/abadger/gists{/gist_id}", "starred_url": "https://api.github.com/users/abadger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abadger/subscriptions", "organizations_url": "https://api.github.com/users/abadger/orgs", "repos_url": "https://api.github.com/users/abadger/repos", "events_url": "https://api.github.com/users/abadger/events{/privacy}", "received_events_url": "https://api.github.com/users/abadger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-30T04:29:02Z", "updated_at": "2017-10-31T13:26:16Z", "closed_at": "2017-10-31T13:24:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just feeling out the waters here.  Would you be willing to re-add support for Python-2.6?  I'm working on a project that needs to support RHEL-6 and CentOS-6 until they go EOL which means that this particular project needs to support Python-2.6 until November 2020.  I understand that not all projects are going to want to maintain support for older python versions for that long.  I figured I would never know what was possible until I asked.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/305", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/305/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/305/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/305/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/305", "id": 260517460, "node_id": "MDU6SXNzdWUyNjA1MTc0NjA=", "number": 305, "title": "RFC: Add description attribute to Required/Optional", "user": {"login": "balloob", "id": 1444314, "node_id": "MDQ6VXNlcjE0NDQzMTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1444314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/balloob", "html_url": "https://github.com/balloob", "followers_url": "https://api.github.com/users/balloob/followers", "following_url": "https://api.github.com/users/balloob/following{/other_user}", "gists_url": "https://api.github.com/users/balloob/gists{/gist_id}", "starred_url": "https://api.github.com/users/balloob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/balloob/subscriptions", "organizations_url": "https://api.github.com/users/balloob/orgs", "repos_url": "https://api.github.com/users/balloob/repos", "events_url": "https://api.github.com/users/balloob/events{/privacy}", "received_events_url": "https://api.github.com/users/balloob/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-26T07:20:52Z", "updated_at": "2017-10-31T13:15:05Z", "closed_at": "2017-10-31T13:15:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "So I'm not sure if this should be even a thing in voluptuous, but since more users of this lib might be interested I thought I'll bring it up.\r\n\r\nWe use voluptuous in [Home Assistant](https://github.com/home-assistant/home-assistant) and it's awesome. For some of the things that we have voluptuous validate, we would like to generate a schema of what is allowed.\r\n\r\nTo this end I started an experiment a while ago called [voluptuous form](https://github.com/balloob/voluptuous_form). I'm looking into reviving this effort but there is one missing piece of the puzzle: description of the fields.\r\n\r\nWould description be something that would make sense to add to Voluptuous?\r\n\r\nPotential syntax:\r\n\r\n```python\r\nimport voluptuous as vol\r\n\r\nSCHEMA = vol.Schema({\r\n  vol.Required('name', description='The name of the user.'): str,\r\n  vol.Required('age', description='The age of the user.'): int,\r\n})\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/304", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/304/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/304/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/304/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/304", "id": 258586801, "node_id": "MDU6SXNzdWUyNTg1ODY4MDE=", "number": 304, "title": "GPG signatures for source validation", "user": {"login": "NicoHood", "id": 6888294, "node_id": "MDQ6VXNlcjY4ODgyOTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6888294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NicoHood", "html_url": "https://github.com/NicoHood", "followers_url": "https://api.github.com/users/NicoHood/followers", "following_url": "https://api.github.com/users/NicoHood/following{/other_user}", "gists_url": "https://api.github.com/users/NicoHood/gists{/gist_id}", "starred_url": "https://api.github.com/users/NicoHood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NicoHood/subscriptions", "organizations_url": "https://api.github.com/users/NicoHood/orgs", "repos_url": "https://api.github.com/users/NicoHood/repos", "events_url": "https://api.github.com/users/NicoHood/events{/privacy}", "received_events_url": "https://api.github.com/users/NicoHood/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-18T19:04:00Z", "updated_at": "2018-04-22T15:34:11Z", "closed_at": "2018-04-21T11:48:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "As we all know, today more than ever before, it is crucial to be able to trust our computing environments. One of the main difficulties that package maintainers of GNU/Linux distributions face, is the difficulty to verify the authenticity and the integrity of the source code. With GPG signatures it is possible for packagers to verify source code releases quickly and easily.\r\n\r\n#### Overview of the required tasks:\r\n* Create and/or use a **[4096-bit RSA keypair][1]** for the file signing\r\n* Use a **[strong, unique, secret passphrase][2]** for the key\r\n* Upload the public key to a **[key server][3]** and **[publish the full fingerprint][4]**\r\n* **[Sign][5]** every new Git **[commit][6]** and **[tag][7]**\r\n* Create **[signed][8], [compressed][9]** (xz --best) release **archives**\r\n* Upload a **[strong message digest][10]** (sha512) of the archive\r\n* Configure **[HTTPS][11]** for your download server\r\n\r\n### GPGit\r\n[GPGit][12] is meant to bring GPG to the masses. It is not only a Python script that automates the process of [creating new signed Git releases with GPG][13], but also a [quick-start-guide][14] for learning how to use GPG. GPGit integrates perfectly with the [Github Release API][15] for uploading.\r\n\r\nThe security status of GNU/Linux projects will be tracked in the [Linux Security Database][16]. If you have any further questions, do not hesitate to [contact me][17] personally. Thanks for your help in making GNU/Linux projects more secure by using GPG signatures.\r\n\r\nThanks in advance.\r\n\r\n[1]: https://github.com/NicoHood/gpgit#12-key-generation\r\n[2]: https://github.com/NicoHood/gpgit#11-strong-unique-secret-passphrase\r\n[3]: https://github.com/NicoHood/gpgit#21-send-key-to-a-key-server\r\n[4]: https://github.com/NicoHood/gpgit#22-publish-full-fingerprint\r\n[5]: https://github.com/NicoHood/gpgit#31-configure-git-gpg-key\r\n[6]: https://github.com/NicoHood/gpgit#32-commit-signing\r\n[7]: https://github.com/NicoHood/gpgit#33-create-signed-git-tag\r\n[8]: https://github.com/NicoHood/gpgit#42-sign-the-archive\r\n[9]: https://github.com/NicoHood/gpgit#41-create-compressed-archive\r\n[10]: https://github.com/NicoHood/gpgit#43-create-the-message-digest\r\n[11]: https://github.com/NicoHood/gpgit#51-configure-https-download-server\r\n[12]: https://github.com/NicoHood/gpgit\r\n[13]: https://github.com/NicoHood/gpgit#script-usage\r\n[14]: https://github.com/NicoHood/gpgit#gpg-quick-start-guide\r\n[15]: https://github.com/NicoHood/gpgit#52-upload-to-github\r\n[16]: https://github.com/NicoHood/LSD\r\n[17]: http://contact.nicohood.de/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/297", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/297/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/297/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/297/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/297", "id": 241255919, "node_id": "MDU6SXNzdWUyNDEyNTU5MTk=", "number": 297, "title": "Python 3.6.1 - This QueryDict instance is immutable", "user": {"login": "vcorobceanu", "id": 13583318, "node_id": "MDQ6VXNlcjEzNTgzMzE4", "avatar_url": "https://avatars0.githubusercontent.com/u/13583318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcorobceanu", "html_url": "https://github.com/vcorobceanu", "followers_url": "https://api.github.com/users/vcorobceanu/followers", "following_url": "https://api.github.com/users/vcorobceanu/following{/other_user}", "gists_url": "https://api.github.com/users/vcorobceanu/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcorobceanu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcorobceanu/subscriptions", "organizations_url": "https://api.github.com/users/vcorobceanu/orgs", "repos_url": "https://api.github.com/users/vcorobceanu/repos", "events_url": "https://api.github.com/users/vcorobceanu/events{/privacy}", "received_events_url": "https://api.github.com/users/vcorobceanu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-07T12:57:17Z", "updated_at": "2017-07-31T08:07:11Z", "closed_at": "2017-07-31T08:07:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "In pyhon 3.6.1 i get error: \r\nAttributeError: This QueryDict instance is immutable\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/296", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/296/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/296/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/296", "id": 240404193, "node_id": "MDU6SXNzdWUyNDA0MDQxOTM=", "number": 296, "title": "Partial validation with @validate?", "user": {"login": "AndreaCrotti", "id": 53640, "node_id": "MDQ6VXNlcjUzNjQw", "avatar_url": "https://avatars2.githubusercontent.com/u/53640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCrotti", "html_url": "https://github.com/AndreaCrotti", "followers_url": "https://api.github.com/users/AndreaCrotti/followers", "following_url": "https://api.github.com/users/AndreaCrotti/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCrotti/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCrotti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCrotti/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCrotti/orgs", "repos_url": "https://api.github.com/users/AndreaCrotti/repos", "events_url": "https://api.github.com/users/AndreaCrotti/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCrotti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-04T12:19:50Z", "updated_at": "2017-10-11T15:01:28Z", "closed_at": "2017-10-11T15:01:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was a bit surprised that the following snippet doesn't work\r\n```\r\nimport voluptuous as V\r\n\r\nAPI_SCHEMA = V.Schema({\r\n    V.Required('uri'): str,\r\n}, extra=V.ALLOW_EXTRA)\r\n\r\nprint(API_SCHEMA({'uri': 'hello', 'other': 'hello'}))\r\n\r\n\r\n@V.validate(data=API_SCHEMA)\r\ndef func(a, data):\r\n    print(data)\r\n\r\n\r\nfunc(10, {'uri': 'hello', 'other': 'hello'})\r\n```\r\n\r\nAnd it gives this error:\r\n\r\n```\r\n    raise er.MultipleInvalid(errors)\r\nvoluptuous.error.MultipleInvalid: extra keys not allowed @ data['a']\r\n```\r\n\r\nI can't find any flag (or tests supporting the idea that there is a way) to do this kind of partial validation of argument types.\r\nIs it not possible on purpose for some reason?\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/292", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/292/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/292/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/292", "id": 233832835, "node_id": "MDU6SXNzdWUyMzM4MzI4MzU=", "number": 292, "title": "Support for sets", "user": {"login": "nowox", "id": 1132849, "node_id": "MDQ6VXNlcjExMzI4NDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1132849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nowox", "html_url": "https://github.com/nowox", "followers_url": "https://api.github.com/users/nowox/followers", "following_url": "https://api.github.com/users/nowox/following{/other_user}", "gists_url": "https://api.github.com/users/nowox/gists{/gist_id}", "starred_url": "https://api.github.com/users/nowox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nowox/subscriptions", "organizations_url": "https://api.github.com/users/nowox/orgs", "repos_url": "https://api.github.com/users/nowox/repos", "events_url": "https://api.github.com/users/nowox/events{/privacy}", "received_events_url": "https://api.github.com/users/nowox/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-06T09:34:00Z", "updated_at": "2018-07-03T02:39:36Z", "closed_at": "2018-07-03T02:39:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following gives me an error: \r\n\r\n```\r\n>>> Schema({int})(set([42]))\r\nSchemaError: unsupported schema data type 'set'\r\n```\r\n\r\nThe workaround I found is: \r\n\r\n```\r\n>>> Schema(All(lambda x: {k: None for k in x}, {int: None}, lambda x: set(x.keys())))(set([42]))\r\n{42}\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/289", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/289/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/289/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/289/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/289", "id": 228297256, "node_id": "MDU6SXNzdWUyMjgyOTcyNTY=", "number": 289, "title": "Strange merging two schemas", "user": {"login": "v-v-vishnevskiy", "id": 2003933, "node_id": "MDQ6VXNlcjIwMDM5MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2003933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/v-v-vishnevskiy", "html_url": "https://github.com/v-v-vishnevskiy", "followers_url": "https://api.github.com/users/v-v-vishnevskiy/followers", "following_url": "https://api.github.com/users/v-v-vishnevskiy/following{/other_user}", "gists_url": "https://api.github.com/users/v-v-vishnevskiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/v-v-vishnevskiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/v-v-vishnevskiy/subscriptions", "organizations_url": "https://api.github.com/users/v-v-vishnevskiy/orgs", "repos_url": "https://api.github.com/users/v-v-vishnevskiy/repos", "events_url": "https://api.github.com/users/v-v-vishnevskiy/events{/privacy}", "received_events_url": "https://api.github.com/users/v-v-vishnevskiy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-05-12T13:47:28Z", "updated_at": "2017-05-14T07:55:24Z", "closed_at": "2017-05-14T07:55:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I try to run following code on **0.10.5** version:\r\n```python\r\nfrom voluptuous import Schema, Required, Optional, Coerce, REMOVE_EXTRA\r\nfrom datetime import datetime\r\n\r\n\r\na = Schema(\r\n    {\r\n        Required('is_active', default=True): Coerce(bool),\r\n        Required('record'): {\r\n            Required('created'): datetime\r\n        }\r\n    },\r\n    extra=REMOVE_EXTRA\r\n)\r\nb = a.extend({\r\n    Optional('images'): list,\r\n    Required('record'): {\r\n        Required('updated'): datetime\r\n    }\r\n})\r\nprint(b)\r\n```\r\nResult is:\r\n`<Schema({'is_active': Coerce(bool, msg=None), 'record': {'created': <class 'datetime.datetime'>}, 'images': <class 'list'>, 'record': {'updated': <class 'datetime.datetime'>}}, extra=REMOVE_EXTRA, required=False) object at 0x1128290b8>`\r\n\r\nI expected that `created` and `updated` would be in `record` field, but I have two different `record`'s fields.\r\n\r\nAlso:\r\n```python\r\nprint(Required('created') == Required('created'))\r\n```\r\nis `False`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/288", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/288/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/288/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/288", "id": 228196586, "node_id": "MDU6SXNzdWUyMjgxOTY1ODY=", "number": 288, "title": "Build Failing due to coveralls ", "user": {"login": "tusharmakkar08", "id": 2357025, "node_id": "MDQ6VXNlcjIzNTcwMjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2357025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tusharmakkar08", "html_url": "https://github.com/tusharmakkar08", "followers_url": "https://api.github.com/users/tusharmakkar08/followers", "following_url": "https://api.github.com/users/tusharmakkar08/following{/other_user}", "gists_url": "https://api.github.com/users/tusharmakkar08/gists{/gist_id}", "starred_url": "https://api.github.com/users/tusharmakkar08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tusharmakkar08/subscriptions", "organizations_url": "https://api.github.com/users/tusharmakkar08/orgs", "repos_url": "https://api.github.com/users/tusharmakkar08/repos", "events_url": "https://api.github.com/users/tusharmakkar08/events{/privacy}", "received_events_url": "https://api.github.com/users/tusharmakkar08/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-12T06:09:09Z", "updated_at": "2017-05-12T13:21:33Z", "closed_at": "2017-05-12T13:21:33Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Hey \r\n\r\nCoveralls stopped supporting Python version < 3.3. Please check the build [here](https://travis-ci.org/alecthomas/voluptuous/jobs/231428779). \r\n\r\n@alecthomas : How should we proceed in this case? \r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/287", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/287/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/287/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/287/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/287", "id": 226472077, "node_id": "MDU6SXNzdWUyMjY0NzIwNzc=", "number": 287, "title": "consider renaming the library", "user": {"login": "glyph", "id": 716529, "node_id": "MDQ6VXNlcjcxNjUyOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/716529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glyph", "html_url": "https://github.com/glyph", "followers_url": "https://api.github.com/users/glyph/followers", "following_url": "https://api.github.com/users/glyph/following{/other_user}", "gists_url": "https://api.github.com/users/glyph/gists{/gist_id}", "starred_url": "https://api.github.com/users/glyph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glyph/subscriptions", "organizations_url": "https://api.github.com/users/glyph/orgs", "repos_url": "https://api.github.com/users/glyph/repos", "events_url": "https://api.github.com/users/glyph/events{/privacy}", "received_events_url": "https://api.github.com/users/glyph/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-05-05T04:36:16Z", "updated_at": "2017-05-08T09:21:30Z", "closed_at": "2017-05-07T11:26:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I didn't see anyone having raised this issue before, so I thought perhaps you might not realize: the word \"voluptuous\" in english has a heavily sexual connotation.  [The very first noun associated with it in the dictionary definition](https://www.merriam-webster.com/dictionary/voluptuous) is \"nudes\".  \r\n\r\n[Using unnecessarily sexualized language can create an environment that is unduly hostile to women](http://geekfeminism.wikia.com/wiki/Sexualized_environment), even if this is not intended. Many of the biases against women that such language provokes are totally unconscious, so even if the intent is not harmful, it can be bad regardless.\r\n\r\nFinally, the _very first_ thing in the README says \"despite the name\" so it seems that perhaps it's occurred to you that this isn't a great name for a library.\r\n\r\nIn summary: in the interests of creating a more inclusive community, please come up with a new name for this library.  Thank you for reading!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/286", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/286/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/286/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/286", "id": 225836749, "node_id": "MDU6SXNzdWUyMjU4MzY3NDk=", "number": 286, "title": "Boolean() validation woes", "user": {"login": "untergeek", "id": 1020383, "node_id": "MDQ6VXNlcjEwMjAzODM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1020383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/untergeek", "html_url": "https://github.com/untergeek", "followers_url": "https://api.github.com/users/untergeek/followers", "following_url": "https://api.github.com/users/untergeek/following{/other_user}", "gists_url": "https://api.github.com/users/untergeek/gists{/gist_id}", "starred_url": "https://api.github.com/users/untergeek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/untergeek/subscriptions", "organizations_url": "https://api.github.com/users/untergeek/orgs", "repos_url": "https://api.github.com/users/untergeek/repos", "events_url": "https://api.github.com/users/untergeek/events{/privacy}", "received_events_url": "https://api.github.com/users/untergeek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-02T22:12:12Z", "updated_at": "2017-05-03T00:33:28Z", "closed_at": "2017-05-03T00:24:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n>>> from voluptuous import *\r\n>>> schema = Schema({ Required('a'): Boolean() })\r\n>>> schema({ 'a': [{'foo':'bar'}]})\r\n{'a': True}\r\n```\r\n\r\nIs this expected behavior?  This is the shortened code snippet:\r\n```python\r\n>>> def Boolean(v):\r\n...     if isinstance(v, basestring):\r\n...         v = v.lower()\r\n...         if v in ('1', 'true', 'yes', 'on', 'enable'):\r\n...             return True\r\n...         if v in ('0', 'false', 'no', 'off', 'disable'):\r\n...             return False\r\n...         raise ValueError\r\n...     return bool(v)\r\n```\r\nIt seems like it will only return `True` and `False` for the indicated values, and then return `True` for any populated value that is not of type `str` or `unicode`:\r\n\r\nDict:\r\n```\r\n>>> schema({ 'a': {'foo':'bar'}})\r\n{'a': True}\r\n```\r\n\r\nInt:\r\n```\r\n>>> schema({ 'a': 99})\r\n{'a': True}\r\n```\r\nFloat:\r\n```\r\n>>> schema({ 'a': 123.45})\r\n{'a': True}\r\n```\r\n\r\nIt doesn't seem like a good idea to validate `Boolean()` if I can pass a list to the schema check and have it accidentally validate as True.\r\n\r\nThis can be partially solved by using `All(Any(str, unicode), Boolean())`, but this is not what I would _expect_ to need to do with the validator.  The problem I have is that after importing YAML data, `exclude: False` becomes `{'exclude': False}`, rather than `{'exclude': 'False'}`, which leads me to the current ugly, final solution:\r\n\r\n```\r\nAny(bool, All(Any(str, unicode), Boolean()))\r\n```\r\n\r\nThere is nothing in your documentation that informs me of these hoops I have to jump through.  If I didn't read the code, I would have had no idea that it expects a string value.\r\n\r\nAs far as potential fixes go:\r\n```\r\n>>> def Boolean(v):\r\n...     if isinstance(v, basestring):\r\n...         v = v.lower()\r\n...         if v in ('1', 'true', 'yes', 'on', 'enable'):\r\n...             return True\r\n...         if v in ('0', 'false', 'no', 'off', 'disable'):\r\n...             return False\r\n...         raise ValueError\r\n...     elif isinstance(v, bool):\r\n...         return v\r\n...     else:\r\n...         raise ValueError\r\n...\r\n>>> Boolean(1)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"<stdin>\", line 12, in Boolean\r\nValueError\r\n>>> Boolean(\"1\")\r\nTrue\r\n>>> Boolean(\"0\")\r\nFalse\r\n>>> Boolean(True)\r\nTrue\r\n>>> Boolean(False)\r\nFalse\r\n>>> Boolean({'a':'b'})\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"<stdin>\", line 12, in Boolean\r\nValueError\r\n```\r\nIt seems pretty straightforward to add the `elif` to test if it's a `bool` before attempting to return `bool(v)`, or more appropriately, `v`, since it's an instance of `bool`.\r\n\r\nIt could also be modified to work with floats and ints (not just strings of `\"1\"`, and `\"0\"`:\r\n```python\r\ndef Boolean(v):\r\n    # Make floats into integers\r\n    if isinstance(v, float):\r\n        # Ensure that only 0.0 is 0\r\n        v = 1.0 if v > 0 and v < 1 else v\r\n        v = int(v)\r\n    # Make integers strings for guaranteed comparisons \r\n    if isinstance(v, int):\r\n        v = str(v)\r\n    if isinstance(v, basestring):\r\n        v = v.lower()\r\n        if v in ('1', 'true', 'yes', 'on', 'enable'):\r\n            return True\r\n        if v in ('0', 'false', 'no', 'off', 'disable'):\r\n            return False\r\n        raise ValueError\r\n    elif isinstance(v, bool):\r\n        return v\r\n    else:\r\n        raise ValueError\r\n```\r\n\r\nI'm happy to submit this as a PR if you're satisfied this won't break existing, expected behavior.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/284", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/284/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/284/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/284", "id": 224638247, "node_id": "MDU6SXNzdWUyMjQ2MzgyNDc=", "number": 284, "title": "Incorrect error messages when using subschemas inside a list?", "user": {"login": "linclelinkpart5", "id": 844735, "node_id": "MDQ6VXNlcjg0NDczNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/844735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linclelinkpart5", "html_url": "https://github.com/linclelinkpart5", "followers_url": "https://api.github.com/users/linclelinkpart5/followers", "following_url": "https://api.github.com/users/linclelinkpart5/following{/other_user}", "gists_url": "https://api.github.com/users/linclelinkpart5/gists{/gist_id}", "starred_url": "https://api.github.com/users/linclelinkpart5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linclelinkpart5/subscriptions", "organizations_url": "https://api.github.com/users/linclelinkpart5/orgs", "repos_url": "https://api.github.com/users/linclelinkpart5/repos", "events_url": "https://api.github.com/users/linclelinkpart5/events{/privacy}", "received_events_url": "https://api.github.com/users/linclelinkpart5/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-04-27T00:44:06Z", "updated_at": "2017-05-29T14:53:20Z", "closed_at": "2017-05-29T14:53:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm seeing some unexpected error messages when using subschemas inside a list.\r\n\r\nI've made a simple test case that illustrates what I'm seeing. I'm using the following Schema:\r\n\r\n```python\r\ntest = Schema([Any({Required('text'): str}, {Required('num'): int})])\r\n```\r\n\r\nAnd the invocations that show unexpected error messages are:\r\n\r\n```python\r\ntest([{}]) # Message says that the required 'text' key is missing, but no mention of 'num'\r\ntest([{'num': 'hello!'}]) # Message says that extra keys are not allowed??\r\n# Note that test([{'text': 27}]) returns an error message I'd expect\r\n```\r\n\r\n```python\r\n>>> from voluptuous import Schema, Any, Required\r\n>>> test = Schema([Any({Required('text'): str}, {Required('num'): int})])\r\n\r\n>>> test([])\r\n[]\r\n\r\n>>> test([{}])\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/lemoine/venvs/cheffu/lib/python3.6/site-packages/voluptuous/schema_builder.py\", line 221, in __call__\r\n    return self._compiled([], data)\r\n  File \"/home/lemoine/venvs/cheffu/lib/python3.6/site-packages/voluptuous/schema_builder.py\", line 575, in validate_sequence\r\n    cval = validate(index_path, value)\r\n  File \"/home/lemoine/venvs/cheffu/lib/python3.6/site-packages/voluptuous/schema_builder.py\", line 716, in validate_callable\r\n    return schema(data)\r\n  File \"/home/lemoine/venvs/cheffu/lib/python3.6/site-packages/voluptuous/validators.py\", line 230, in __call__\r\n    raise error if self.msg is None else AnyInvalid(self.msg)\r\n  File \"/home/lemoine/venvs/cheffu/lib/python3.6/site-packages/voluptuous/validators.py\", line 224, in __call__\r\n    return schema(v)\r\n  File \"/home/lemoine/venvs/cheffu/lib/python3.6/site-packages/voluptuous/schema_builder.py\", line 221, in __call__\r\n    return self._compiled([], data)\r\n  File \"/home/lemoine/venvs/cheffu/lib/python3.6/site-packages/voluptuous/schema_builder.py\", line 538, in validate_dict\r\n    return base_validate(path, iteritems(data), out)\r\n  File \"/home/lemoine/venvs/cheffu/lib/python3.6/site-packages/voluptuous/schema_builder.py\", line 370, in validate_mapping\r\n    raise er.MultipleInvalid(errors)\r\nvoluptuous.error.MultipleInvalid: required key not provided @ data[0]['text']\r\n\r\n>>> test([{'text': 'hello!'}])\r\n[{'text': 'hello!'}]\r\n\r\n>>> test([{'text': 27}])\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/lemoine/venvs/cheffu/lib/python3.6/site-packages/voluptuous/schema_builder.py\", line 221, in __call__\r\n    return self._compiled([], data)\r\n  File \"/home/lemoine/venvs/cheffu/lib/python3.6/site-packages/voluptuous/schema_builder.py\", line 575, in validate_sequence\r\n    cval = validate(index_path, value)\r\n  File \"/home/lemoine/venvs/cheffu/lib/python3.6/site-packages/voluptuous/schema_builder.py\", line 716, in validate_callable\r\n    return schema(data)\r\n  File \"/home/lemoine/venvs/cheffu/lib/python3.6/site-packages/voluptuous/validators.py\", line 230, in __call__\r\n    raise error if self.msg is None else AnyInvalid(self.msg)\r\n  File \"/home/lemoine/venvs/cheffu/lib/python3.6/site-packages/voluptuous/validators.py\", line 224, in __call__\r\n    return schema(v)\r\n  File \"/home/lemoine/venvs/cheffu/lib/python3.6/site-packages/voluptuous/schema_builder.py\", line 221, in __call__\r\n    return self._compiled([], data)\r\n  File \"/home/lemoine/venvs/cheffu/lib/python3.6/site-packages/voluptuous/schema_builder.py\", line 538, in validate_dict\r\n    return base_validate(path, iteritems(data), out)\r\n  File \"/home/lemoine/venvs/cheffu/lib/python3.6/site-packages/voluptuous/schema_builder.py\", line 370, in validate_mapping\r\n    raise er.MultipleInvalid(errors)\r\nvoluptuous.error.MultipleInvalid: expected str for dictionary value @ data[0]['text']\r\n\r\n>>> test([{'num': 27}])\r\n[{'num': 27}]\r\n\r\n>>> test([{'num': 'hello!'}])\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/lemoine/venvs/cheffu/lib/python3.6/site-packages/voluptuous/schema_builder.py\", line 221, in __call__\r\n    return self._compiled([], data)\r\n  File \"/home/lemoine/venvs/cheffu/lib/python3.6/site-packages/voluptuous/schema_builder.py\", line 575, in validate_sequence\r\n    cval = validate(index_path, value)\r\n  File \"/home/lemoine/venvs/cheffu/lib/python3.6/site-packages/voluptuous/schema_builder.py\", line 716, in validate_callable\r\n    return schema(data)\r\n  File \"/home/lemoine/venvs/cheffu/lib/python3.6/site-packages/voluptuous/validators.py\", line 230, in __call__\r\n    raise error if self.msg is None else AnyInvalid(self.msg)\r\n  File \"/home/lemoine/venvs/cheffu/lib/python3.6/site-packages/voluptuous/validators.py\", line 224, in __call__\r\n    return schema(v)\r\n  File \"/home/lemoine/venvs/cheffu/lib/python3.6/site-packages/voluptuous/schema_builder.py\", line 221, in __call__\r\n    return self._compiled([], data)\r\n  File \"/home/lemoine/venvs/cheffu/lib/python3.6/site-packages/voluptuous/schema_builder.py\", line 538, in validate_dict\r\n    return base_validate(path, iteritems(data), out)\r\n  File \"/home/lemoine/venvs/cheffu/lib/python3.6/site-packages/voluptuous/schema_builder.py\", line 370, in validate_mapping\r\n    raise er.MultipleInvalid(errors)\r\nvoluptuous.error.MultipleInvalid: extra keys not allowed @ data[0]['num']\r\n```\r\n\r\nIs this a bug, or am I using the library incorrectly?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/282", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/282/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/282/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/282/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/282", "id": 223273038, "node_id": "MDU6SXNzdWUyMjMyNzMwMzg=", "number": 282, "title": "Remove key if one type, leave it if another?", "user": {"login": "lsglick", "id": 5394693, "node_id": "MDQ6VXNlcjUzOTQ2OTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5394693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lsglick", "html_url": "https://github.com/lsglick", "followers_url": "https://api.github.com/users/lsglick/followers", "following_url": "https://api.github.com/users/lsglick/following{/other_user}", "gists_url": "https://api.github.com/users/lsglick/gists{/gist_id}", "starred_url": "https://api.github.com/users/lsglick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lsglick/subscriptions", "organizations_url": "https://api.github.com/users/lsglick/orgs", "repos_url": "https://api.github.com/users/lsglick/repos", "events_url": "https://api.github.com/users/lsglick/events{/privacy}", "received_events_url": "https://api.github.com/users/lsglick/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-21T04:30:34Z", "updated_at": "2017-04-21T14:10:44Z", "closed_at": "2017-04-21T04:51:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to remove a key from a dict if it is a specific type, leave it if it is another, and be invalid if it is any other type?\r\n\r\nBasically I want:\r\n```\r\n{'my_str': basestring} -> {'my_str': basestring}\r\n{'my_str': None} -> {}\r\n{'my_str': int, list, etc.} -> Invalid\r\n```\r\n\r\nI'm trying to use `Requires()` but it doesn't seem to work right.\r\n\r\nThings I've tried include:\r\n```\r\nSchema({'my_str': Any(Remove(None), basestring)}) \r\nSchema({Optional('my_str'): Any(Remove(None), basestring)})\r\nSchema({Remove('my_str'): None, 'my_str': basestring}) \r\nSchema({'my_str': basestring, Remove('my_str'): None}) \r\nSchema({'my_str': basestring, Remove(basestring): None})\r\n```\r\n\r\nThe closest I've gotten is:\r\n```\r\nSchema({v.Remove('my_str'): None}, extra=v.ALLOW_EXTRA)\r\n```\r\nBut unfortunately this 1) doesn't provide a way to validate `my_str` is actually a `basestring`, and 2) allows all other extras which I don't want.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/276", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/276/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/276/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/276", "id": 219875220, "node_id": "MDU6SXNzdWUyMTk4NzUyMjA=", "number": 276, "title": "0.10.0 Release ", "user": {"login": "tusharmakkar08", "id": 2357025, "node_id": "MDQ6VXNlcjIzNTcwMjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2357025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tusharmakkar08", "html_url": "https://github.com/tusharmakkar08", "followers_url": "https://api.github.com/users/tusharmakkar08/followers", "following_url": "https://api.github.com/users/tusharmakkar08/following{/other_user}", "gists_url": "https://api.github.com/users/tusharmakkar08/gists{/gist_id}", "starred_url": "https://api.github.com/users/tusharmakkar08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tusharmakkar08/subscriptions", "organizations_url": "https://api.github.com/users/tusharmakkar08/orgs", "repos_url": "https://api.github.com/users/tusharmakkar08/repos", "events_url": "https://api.github.com/users/tusharmakkar08/events{/privacy}", "received_events_url": "https://api.github.com/users/tusharmakkar08/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-06T11:59:05Z", "updated_at": "2017-04-12T14:28:20Z", "closed_at": "2017-04-12T14:28:20Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Hey @alecthomas \r\n\r\nAs mentioned by @odedfos over [here](https://github.com/alecthomas/voluptuous/issues/259#issuecomment-292137057) , let's release the new major bump version for voluptuous. Any suggestions for the release and release date? \r\n\r\nThanks. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/274", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/274/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/274/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/274", "id": 214416238, "node_id": "MDU6SXNzdWUyMTQ0MTYyMzg=", "number": 274, "title": "voluptuous.error.SchemaError: unsupported schema data type 'bytes'", "user": {"login": "boramalper", "id": 5618038, "node_id": "MDQ6VXNlcjU2MTgwMzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5618038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boramalper", "html_url": "https://github.com/boramalper", "followers_url": "https://api.github.com/users/boramalper/followers", "following_url": "https://api.github.com/users/boramalper/following{/other_user}", "gists_url": "https://api.github.com/users/boramalper/gists{/gist_id}", "starred_url": "https://api.github.com/users/boramalper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boramalper/subscriptions", "organizations_url": "https://api.github.com/users/boramalper/orgs", "repos_url": "https://api.github.com/users/boramalper/repos", "events_url": "https://api.github.com/users/boramalper/events{/privacy}", "received_events_url": "https://api.github.com/users/boramalper/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-15T14:56:22Z", "updated_at": "2017-03-20T13:23:19Z", "closed_at": "2017-03-20T11:34:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I am using the code below to validate but voluptuous raises the exception in the title.\r\n\r\n```python\r\n\r\ngeneric_message_schema = {\r\n    voluptuous.Required(b\"t\"): voluptuous.All(bytes, voluptuous.Length(min=1)),\r\n}\r\n```\r\n\r\nAm I doing something wrong or does voluptous not support bytes?\r\n\r\n```\r\n$ pip3 show voluptuous\r\nName: voluptuous\r\nVersion: 0.9.3\r\nSummary: # Voluptuous is a Python data validation library\r\nHome-page: https://github.com/alecthomas/voluptuous\r\nAuthor: Alec Thomas\r\nAuthor-email: alec@swapoff.org\r\nLicense: BSD\r\nLocation: /home/bora/.pyenv/versions/3.6.0/lib/python3.6/site-packages\r\nRequires: setuptools\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/272", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/272/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/272/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/272", "id": 211372462, "node_id": "MDU6SXNzdWUyMTEzNzI0NjI=", "number": 272, "title": "Schema for a list of dict", "user": {"login": "derekwallace", "id": 5574230, "node_id": "MDQ6VXNlcjU1NzQyMzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5574230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/derekwallace", "html_url": "https://github.com/derekwallace", "followers_url": "https://api.github.com/users/derekwallace/followers", "following_url": "https://api.github.com/users/derekwallace/following{/other_user}", "gists_url": "https://api.github.com/users/derekwallace/gists{/gist_id}", "starred_url": "https://api.github.com/users/derekwallace/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/derekwallace/subscriptions", "organizations_url": "https://api.github.com/users/derekwallace/orgs", "repos_url": "https://api.github.com/users/derekwallace/repos", "events_url": "https://api.github.com/users/derekwallace/events{/privacy}", "received_events_url": "https://api.github.com/users/derekwallace/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-02T12:07:16Z", "updated_at": "2017-03-02T12:59:04Z", "closed_at": "2017-03-02T12:33:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI have data that is a list of dict\r\n[{'A' : 'a', 'B': 'b'}, {'A' : 'aa', 'B': 'bb'}]\r\n\r\nIs it possible to define a schema to supprt this.\r\nSpecifically i want to bound the list length to be between 1 and 5\r\n\r\nMy first attempt is this. This works and allows unbounded number of the Dict\r\noSchema = Schema(\r\n   [{'A' : str, 'B'   : str}]\r\n)\r\n\r\nis there a way to bound to between 1 and 5?\r\n\r\nThx\r\nderek\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/270", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/270/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/270/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/270/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/270", "id": 208749248, "node_id": "MDU6SXNzdWUyMDg3NDkyNDg=", "number": 270, "title": "IsDir, IsFile and PathExists differ between Python 2.7 and Python 3.x", "user": {"login": "svisser", "id": 723226, "node_id": "MDQ6VXNlcjcyMzIyNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/723226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svisser", "html_url": "https://github.com/svisser", "followers_url": "https://api.github.com/users/svisser/followers", "following_url": "https://api.github.com/users/svisser/following{/other_user}", "gists_url": "https://api.github.com/users/svisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/svisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svisser/subscriptions", "organizations_url": "https://api.github.com/users/svisser/orgs", "repos_url": "https://api.github.com/users/svisser/repos", "events_url": "https://api.github.com/users/svisser/events{/privacy}", "received_events_url": "https://api.github.com/users/svisser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-19T21:48:40Z", "updated_at": "2017-04-18T22:57:23Z", "closed_at": "2017-04-18T22:46:43Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "In Python 2.7 the following calls:\r\n\r\n- ```Schema(IsDir())(3)```\r\n- ```Schema(IsFile())(3)```\r\n- ```Schema(PathExists())(3)```\r\n\r\nraise:\r\n\r\n    TypeError: coercing to Unicode: need string or buffer, int found\r\n\r\nbut in Python 3.x they respectively result in:\r\n\r\n- voluptuous.error.MultipleInvalid: not a directory\r\n- voluptuous.error.MultipleInvalid: not a file\r\n- voluptuous.error.MultipleInvalid: path does not exist", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/268", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/268/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/268/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/268/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/268", "id": 207938955, "node_id": "MDU6SXNzdWUyMDc5Mzg5NTU=", "number": 268, "title": "In and Contains are duplicates", "user": {"login": "z1IB6p", "id": 24550107, "node_id": "MDQ6VXNlcjI0NTUwMTA3", "avatar_url": "https://avatars2.githubusercontent.com/u/24550107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/z1IB6p", "html_url": "https://github.com/z1IB6p", "followers_url": "https://api.github.com/users/z1IB6p/followers", "following_url": "https://api.github.com/users/z1IB6p/following{/other_user}", "gists_url": "https://api.github.com/users/z1IB6p/gists{/gist_id}", "starred_url": "https://api.github.com/users/z1IB6p/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/z1IB6p/subscriptions", "organizations_url": "https://api.github.com/users/z1IB6p/orgs", "repos_url": "https://api.github.com/users/z1IB6p/repos", "events_url": "https://api.github.com/users/z1IB6p/events{/privacy}", "received_events_url": "https://api.github.com/users/z1IB6p/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-15T21:49:21Z", "updated_at": "2017-02-16T13:23:29Z", "closed_at": "2017-02-16T13:23:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "The `In` and `Contains` validators are basically exactly the same. `In` came first (present in and before https://github.com/alecthomas/voluptuous/commit/fafc7204d7121645fc0fa18dc9df521431d000be 10 months ago, where as `Contain` was introduced 1 month ago in https://github.com/alecthomas/voluptuous/commit/b23fe91a04131ac9758aade47bd33706177f6477.\r\n\r\nI suggest `Contains` is removed - that would break any projects that depend on voluptuous but the upgraded path is very simple so I don't think that's such a big deal.\r\n\r\nWhat do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/265", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/265/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/265/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/265/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/265", "id": 206441058, "node_id": "MDU6SXNzdWUyMDY0NDEwNTg=", "number": 265, "title": "Voluptuous shouldn't list setuptools as an install requirement", "user": {"login": "HolgerPeters", "id": 4097049, "node_id": "MDQ6VXNlcjQwOTcwNDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4097049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HolgerPeters", "html_url": "https://github.com/HolgerPeters", "followers_url": "https://api.github.com/users/HolgerPeters/followers", "following_url": "https://api.github.com/users/HolgerPeters/following{/other_user}", "gists_url": "https://api.github.com/users/HolgerPeters/gists{/gist_id}", "starred_url": "https://api.github.com/users/HolgerPeters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HolgerPeters/subscriptions", "organizations_url": "https://api.github.com/users/HolgerPeters/orgs", "repos_url": "https://api.github.com/users/HolgerPeters/repos", "events_url": "https://api.github.com/users/HolgerPeters/events{/privacy}", "received_events_url": "https://api.github.com/users/HolgerPeters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-09T08:53:51Z", "updated_at": "2017-02-09T09:00:39Z", "closed_at": "2017-02-09T09:00:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Voluptuous lists setuptools in its `install_requires` in the setup.py\r\n\r\n```\r\n    install_requires=[\r\n        'setuptools >= 0.6b1',\r\n]\r\n```\r\n\r\nPackages should list all their dependencies that they need at runtime in `install_requires`. Setuptools however isn't necessary at runtime. Probably a more fitting attribute for listing setuptools with a constraint would be `setup_requires`. Nevertheless I suggest dropping mention of setuptools in requirements alltogether. since the constraint you give here (`>= 0.6b1`) basically says you should install a setuptools version later than that of 2006-05-12 (https://pypi.python.org/pypi/setuptools/0.6b1).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/264", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/264/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/264/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/264/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/264", "id": 204736218, "node_id": "MDU6SXNzdWUyMDQ3MzYyMTg=", "number": 264, "title": "Should default values fail validation?", "user": {"login": "svisser", "id": 723226, "node_id": "MDQ6VXNlcjcyMzIyNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/723226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svisser", "html_url": "https://github.com/svisser", "followers_url": "https://api.github.com/users/svisser/followers", "following_url": "https://api.github.com/users/svisser/following{/other_user}", "gists_url": "https://api.github.com/users/svisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/svisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svisser/subscriptions", "organizations_url": "https://api.github.com/users/svisser/orgs", "repos_url": "https://api.github.com/users/svisser/repos", "events_url": "https://api.github.com/users/svisser/events{/privacy}", "received_events_url": "https://api.github.com/users/svisser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-02-01T23:20:20Z", "updated_at": "2018-02-17T01:45:18Z", "closed_at": "2018-02-17T01:45:11Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "In using voluptuous, we've come across a few cases where the following code is written:\r\n\r\n```python\r\ns = Schema({\r\n    Optional('key', default=None): int,\r\n})\r\n```\r\n\r\nThis behaves as:\r\n\r\n```python\r\n>>> s({})\r\n{'key': None}\r\n>>> s({'key': 3})\r\n{'key': 3}\r\n```\r\n\r\nbut `s({'key': None})` raises a validation error:\r\n\r\n    voluptuous.error.MultipleInvalid: expected int for dictionary value @ data['key']\r\n\r\nOn one hand, this is true as the schema specifies that the value, if provided, must be of type `int`.\r\n\r\nBut, on the other hand, the developer may have expected `Optional('key', default=None): int` to behave as `Optional('key', default=None): Any(None, int)` which gives the intended behaviour:\r\n\r\n```python\r\n>>> s({})\r\n{'key': None}\r\n>>> s({'key': 3})\r\n{'key': 3}\r\n>>> s({'key': None})\r\n{'key': None}\r\n```\r\n\r\nSo the question is: if the default value on its own does not validate against the schema of the value, should that raise an error?\r\n\r\nI believe this issue is different from https://github.com/alecthomas/voluptuous/issues/233 as that issue is about evaluating nested default values without duplication.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/263", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/263/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/263/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/263/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/263", "id": 204235300, "node_id": "MDU6SXNzdWUyMDQyMzUzMDA=", "number": 263, "title": "Validation of Strings", "user": {"login": "jason-feng", "id": 7146007, "node_id": "MDQ6VXNlcjcxNDYwMDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/7146007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jason-feng", "html_url": "https://github.com/jason-feng", "followers_url": "https://api.github.com/users/jason-feng/followers", "following_url": "https://api.github.com/users/jason-feng/following{/other_user}", "gists_url": "https://api.github.com/users/jason-feng/gists{/gist_id}", "starred_url": "https://api.github.com/users/jason-feng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jason-feng/subscriptions", "organizations_url": "https://api.github.com/users/jason-feng/orgs", "repos_url": "https://api.github.com/users/jason-feng/repos", "events_url": "https://api.github.com/users/jason-feng/events{/privacy}", "received_events_url": "https://api.github.com/users/jason-feng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-31T08:51:32Z", "updated_at": "2017-01-31T09:27:44Z", "closed_at": "2017-01-31T09:27:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am currently attempting to validate this:\r\n`{\r\n    \"wordObjects\":  [\r\n        {\r\n            \"end\": 1.3,\r\n            \"features\": [\r\n                \"sos\"\r\n            ],\r\n            \"start\": 1.27,\r\n            \"word\": \"I\"},\r\n        {\r\n            \"end\": 2.2,\r\n            \"features\": [\r\n                \"eos\"\r\n            ],\r\n            \"start\": 1.3,\r\n            \"word\": \"heard\"\r\n        },\r\n        {\r\n            \"end\": 12.85,\r\n            \"features\": [\r\n                \"sos\"\r\n            ],\r\n            \"start\": 12.79,\r\n            \"word\": \"a\"\r\n        },\r\n        {\r\n            \"end\": 12.85,\r\n            \"features\": [\r\n                \"sos\"\r\n            ],\r\n            \"start\": 12.79,\r\n            \"word\": \"fox\"\r\n        },\r\n        {\r\n            \"end\": 12.85,\r\n            \"features\": [\r\n                \"sos\"\r\n            ],\r\n            \"start\": 12.79,\r\n            \"word\": \"walking\"\r\n        },\r\n        {\r\n            \"end\": 12.85,\r\n            \"features\": [\r\n                \"sos\"\r\n            ],\r\n            \"start\": 12.79,\r\n            \"word\": \"in\"\r\n        },\r\n        {\r\n            \"end\": 12.85,\r\n            \"features\": [\r\n                \"sos\"\r\n            ],\r\n            \"start\": 12.79,\r\n            \"word\": \"the\"\r\n        },\r\n        {\r\n            \"end\": 12.85,\r\n            \"features\": [\r\n                \"sos\"\r\n            ],\r\n            \"start\": 12.79,\r\n            \"word\": \"woods\"\r\n        }\r\n    ]\r\n}\r\n`\r\n\r\nusing the below schema:\r\n\r\n`\r\nschema = Schema(\r\n    {\r\n        Required('wordObjects'): [\r\n            {\r\n                'start': float,\r\n                'end': float,\r\n                'word': str,\r\n                'features': [str],\r\n            }\r\n        ]\r\n    }\r\n)\r\n`\r\n\r\nHowever I keep getting an error saying that \r\n`\r\n{\r\n  \"error\": \"expected str @ data[u'wordObjects'][0][u'features'][0]\"\r\n}\r\n`\r\n\r\nHowever clearly it is already a string, I am pretty lost here. Please if you guys could point out what I'm doing wrong, or maybe I found a bug with nested objects", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/261", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/261/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/261/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/261/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/261", "id": 201337308, "node_id": "MDU6SXNzdWUyMDEzMzczMDg=", "number": 261, "title": "Schema contraction", "user": {"login": "mprager", "id": 3528569, "node_id": "MDQ6VXNlcjM1Mjg1Njk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3528569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mprager", "html_url": "https://github.com/mprager", "followers_url": "https://api.github.com/users/mprager/followers", "following_url": "https://api.github.com/users/mprager/following{/other_user}", "gists_url": "https://api.github.com/users/mprager/gists{/gist_id}", "starred_url": "https://api.github.com/users/mprager/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mprager/subscriptions", "organizations_url": "https://api.github.com/users/mprager/orgs", "repos_url": "https://api.github.com/users/mprager/repos", "events_url": "https://api.github.com/users/mprager/events{/privacy}", "received_events_url": "https://api.github.com/users/mprager/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-01-17T16:31:32Z", "updated_at": "2017-02-06T14:43:17Z", "closed_at": "2017-02-05T04:33:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a useful function in the Schema class that allows extension of a schema by adding keys to it. This saves a lot code when you have multiple schema with only minor variations. Something that might also be useful is the ability to contract a schema, taking keys away. I'm not sure if this would be too specific a feature for this library, and I'm also not sure of a clean way to do it, but right now we write our own helper functions to do just this.\r\n\r\nIs it worth pursuing?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/259", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/259/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/259/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/259/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/259", "id": 201303721, "node_id": "MDU6SXNzdWUyMDEzMDM3MjE=", "number": 259, "title": "Validation of a dictionary runs in O(n^2)", "user": {"login": "odedfos", "id": 2203899, "node_id": "MDQ6VXNlcjIyMDM4OTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2203899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/odedfos", "html_url": "https://github.com/odedfos", "followers_url": "https://api.github.com/users/odedfos/followers", "following_url": "https://api.github.com/users/odedfos/following{/other_user}", "gists_url": "https://api.github.com/users/odedfos/gists{/gist_id}", "starred_url": "https://api.github.com/users/odedfos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/odedfos/subscriptions", "organizations_url": "https://api.github.com/users/odedfos/orgs", "repos_url": "https://api.github.com/users/odedfos/repos", "events_url": "https://api.github.com/users/odedfos/events{/privacy}", "received_events_url": "https://api.github.com/users/odedfos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-17T14:36:20Z", "updated_at": "2017-04-06T10:47:33Z", "closed_at": "2017-01-19T10:28:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently all keys in the dictionary are matched against all keys in the schema. If we have a large set of keys then the validation takes very long.\r\n\r\nHere is a test that simulates the problem. A single validation should take under 1 ms but currently takes 12 ms.\r\n\r\n```\r\ndef test_validation_performance():\r\n    \"\"\"\r\n    Naive validation of a dictionary with many keys with a schema that has many keys\r\n     This test verifies a single validation runs in under 1 msec\r\n    :return:\r\n    \"\"\"\r\n    number_if_keys_in_schema = 100\r\n    iterations = 1000\r\n    threshold_ms = 1\r\n\r\n    schema_dict = {str(i): str for i in range(number_if_keys_in_schema)}\r\n\r\n    schema = Schema(schema_dict)\r\n\r\n    data = {str(i): str(i) for i in range(number_if_keys_in_schema)}\r\n\r\n    start = time.time()\r\n\r\n    for i in xrange(iterations):\r\n        schema(data)\r\n\r\n    total_elapsed = time.time() - start\r\n    avg_per_round = round(total_elapsed * 1000 / iterations, 3)\r\n    print(\"Total: %s secs, avg: %s ms\" % (round(total_elapsed, 3), avg_per_round))\r\n\r\n    assert avg_per_round < threshold_ms, \"Avg validation %s > %s ms\" % (avg_per_round, threshold_ms)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/254", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/254/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/254/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/254", "id": 193926805, "node_id": "MDU6SXNzdWUxOTM5MjY4MDU=", "number": 254, "title": "validating an OrderedDict returns an unordered dict", "user": {"login": "SimplyKnownAsG", "id": 1082590, "node_id": "MDQ6VXNlcjEwODI1OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1082590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimplyKnownAsG", "html_url": "https://github.com/SimplyKnownAsG", "followers_url": "https://api.github.com/users/SimplyKnownAsG/followers", "following_url": "https://api.github.com/users/SimplyKnownAsG/following{/other_user}", "gists_url": "https://api.github.com/users/SimplyKnownAsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimplyKnownAsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimplyKnownAsG/subscriptions", "organizations_url": "https://api.github.com/users/SimplyKnownAsG/orgs", "repos_url": "https://api.github.com/users/SimplyKnownAsG/repos", "events_url": "https://api.github.com/users/SimplyKnownAsG/events{/privacy}", "received_events_url": "https://api.github.com/users/SimplyKnownAsG/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-12-07T00:38:51Z", "updated_at": "2016-12-08T02:17:45Z", "closed_at": "2016-12-08T02:17:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be nice if the returned dictionary from validation were the same type as the original.\r\n\r\nFor example, if I validate an OrderedDict of (x,y) pairs, the order may be important and converting to a traditional dict doesn't maintain the order. I suppose it is also possible that one could request the validator be ordered as well and I'm not sure what that would mean.\r\n\r\nExample:\r\n\r\n```python\r\nimport numpy\r\nimport collections\r\nfrom voluptuous import Schema, Number\r\n\r\nschema = Schema({Number(): Number()}) # x, y pairs (for interpolation or something)\r\ndata = collections.OrderedDict(zip(numpy.linspace(5, 100, 11), numpy.random.random(11)))\r\nout = schema(data)\r\nassert isinstance(out, collections.OrderedDict),\\\r\n    'Collection is no longer ordered, order:{}'.format(', '.join(str(k) for k in out.keys()))\r\n```\r\n---\r\n\r\nThis may be related to #40, but I don't quite understand what the issue was there.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/253", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/253/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/253/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/253", "id": 193916183, "node_id": "MDU6SXNzdWUxOTM5MTYxODM=", "number": 253, "title": "schema validation duplicates reference types (dictionaries/lists)", "user": {"login": "SimplyKnownAsG", "id": 1082590, "node_id": "MDQ6VXNlcjEwODI1OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1082590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimplyKnownAsG", "html_url": "https://github.com/SimplyKnownAsG", "followers_url": "https://api.github.com/users/SimplyKnownAsG/followers", "following_url": "https://api.github.com/users/SimplyKnownAsG/following{/other_user}", "gists_url": "https://api.github.com/users/SimplyKnownAsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimplyKnownAsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimplyKnownAsG/subscriptions", "organizations_url": "https://api.github.com/users/SimplyKnownAsG/orgs", "repos_url": "https://api.github.com/users/SimplyKnownAsG/repos", "events_url": "https://api.github.com/users/SimplyKnownAsG/events{/privacy}", "received_events_url": "https://api.github.com/users/SimplyKnownAsG/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-12-06T23:30:40Z", "updated_at": "2016-12-08T13:29:52Z", "closed_at": "2016-12-08T03:34:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a schema I am trying to validate which uses YAML's alias/anchor to prevent duplication of inputs. When trying to use `voluptuous` for validation on the YAML-parsed `dict`, it creates new instances for each alias. Can `voluptuous` be changed to understand visited items and not duplicate entries?\r\n\r\nExample YAML (joke obviously):\r\n```yaml\r\nby month:\r\n  November:\r\n  - &mickey {birthday: '1928-11-18', name: Mickey}\r\nby year:\r\n  1928:\r\n  - *mickey\r\n````\r\n\r\nExample test:\r\n\r\n```python\r\n\r\nimport calendar\r\nimport datetime\r\n\r\ndef test_dict_reference():\r\n    mouse = Schema({\"name\": str, \"birthday\": Date()})\r\n    mice = Schema([mouse])\r\n    schema = Schema({\r\n        \"by month\": {In(set(calendar.month_name[1:])): mice},\r\n        \"by year\": {Range(min=1900, max=datetime.datetime.now().year): mice}\r\n    })\r\n    mickey = dict(name=\"Mickey\", birthday=\"1928-11-18\")\r\n    data = {\"by month\":\r\n            {\r\n                calendar.month_name[11]: [mickey]\r\n            },\r\n            \"by year\":\r\n            {\r\n                1928: [mickey],\r\n            }\r\n            }\r\n    out = schema(data)\r\n    orig = out['by month'][calendar.month_name[11]][0]\r\n    dup = out['by year'][1928][0]\r\n    assert orig is dup, 'they are not the same ({}) != ({})'.format(id(orig), id(dup))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/252", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/252/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/252/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/252", "id": 193624223, "node_id": "MDU6SXNzdWUxOTM2MjQyMjM=", "number": 252, "title": "[Solved] Does Voluptuous support biconditionals across Nodes?", "user": {"login": "acouch00", "id": 4381639, "node_id": "MDQ6VXNlcjQzODE2Mzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4381639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acouch00", "html_url": "https://github.com/acouch00", "followers_url": "https://api.github.com/users/acouch00/followers", "following_url": "https://api.github.com/users/acouch00/following{/other_user}", "gists_url": "https://api.github.com/users/acouch00/gists{/gist_id}", "starred_url": "https://api.github.com/users/acouch00/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acouch00/subscriptions", "organizations_url": "https://api.github.com/users/acouch00/orgs", "repos_url": "https://api.github.com/users/acouch00/repos", "events_url": "https://api.github.com/users/acouch00/events{/privacy}", "received_events_url": "https://api.github.com/users/acouch00/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-12-05T22:09:22Z", "updated_at": "2016-12-06T02:35:34Z", "closed_at": "2016-12-06T00:09:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using voluptuous to do some server-side verification of incoming data on our service.  My code follows the form:\r\n`\r\nschema = Schema({Required('key'): str,\r\n                                 ...})\r\n`\r\n\r\nCurrently, I'm running into a situation where our API requires users to specify two particular keys simultaneously, or requires that they are omitted altogether.  \r\n\r\nIn other words, these two keys (or Nodes, in voluptuous parlance) are either simultaneously Required, or simultaneously not supposed to be specified.  Essentially, these two keys must behave as a biconditional.\r\n\r\nHere's a quick truth table, for illustrating the necessary behavior:\r\n\r\nKey 1|Key 2|is_valid?\r\n-----|------|--------\r\n1|1|1\r\n1|0|0\r\n0|1|0\r\n0|0|1\r\n\r\nIs there a provision in voluptuous that allows you to do something like this?  I can move this check outside the voluptuous validator code, but I thought I'd reach out and see if I've overlooked something.\r\n\r\nThanks in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/250", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/250/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/250/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/250/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/250", "id": 190713658, "node_id": "MDU6SXNzdWUxOTA3MTM2NTg=", "number": 250, "title": "Where is next relise?", "user": {"login": "divanovGH", "id": 2437654, "node_id": "MDQ6VXNlcjI0Mzc2NTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/2437654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divanovGH", "html_url": "https://github.com/divanovGH", "followers_url": "https://api.github.com/users/divanovGH/followers", "following_url": "https://api.github.com/users/divanovGH/following{/other_user}", "gists_url": "https://api.github.com/users/divanovGH/gists{/gist_id}", "starred_url": "https://api.github.com/users/divanovGH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divanovGH/subscriptions", "organizations_url": "https://api.github.com/users/divanovGH/orgs", "repos_url": "https://api.github.com/users/divanovGH/repos", "events_url": "https://api.github.com/users/divanovGH/events{/privacy}", "received_events_url": "https://api.github.com/users/divanovGH/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-21T13:15:29Z", "updated_at": "2016-11-22T06:57:41Z", "closed_at": "2016-11-22T06:57:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/248", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/248/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/248/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/248", "id": 189376885, "node_id": "MDU6SXNzdWUxODkzNzY4ODU=", "number": 248, "title": "Broken Twitter User Search API link in README", "user": {"login": "checkaayush", "id": 4137581, "node_id": "MDQ6VXNlcjQxMzc1ODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4137581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/checkaayush", "html_url": "https://github.com/checkaayush", "followers_url": "https://api.github.com/users/checkaayush/followers", "following_url": "https://api.github.com/users/checkaayush/following{/other_user}", "gists_url": "https://api.github.com/users/checkaayush/gists{/gist_id}", "starred_url": "https://api.github.com/users/checkaayush/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/checkaayush/subscriptions", "organizations_url": "https://api.github.com/users/checkaayush/orgs", "repos_url": "https://api.github.com/users/checkaayush/repos", "events_url": "https://api.github.com/users/checkaayush/events{/privacy}", "received_events_url": "https://api.github.com/users/checkaayush/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "tusharmakkar08", "id": 2357025, "node_id": "MDQ6VXNlcjIzNTcwMjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2357025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tusharmakkar08", "html_url": "https://github.com/tusharmakkar08", "followers_url": "https://api.github.com/users/tusharmakkar08/followers", "following_url": "https://api.github.com/users/tusharmakkar08/following{/other_user}", "gists_url": "https://api.github.com/users/tusharmakkar08/gists{/gist_id}", "starred_url": "https://api.github.com/users/tusharmakkar08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tusharmakkar08/subscriptions", "organizations_url": "https://api.github.com/users/tusharmakkar08/orgs", "repos_url": "https://api.github.com/users/tusharmakkar08/repos", "events_url": "https://api.github.com/users/tusharmakkar08/events{/privacy}", "received_events_url": "https://api.github.com/users/tusharmakkar08/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tusharmakkar08", "id": 2357025, "node_id": "MDQ6VXNlcjIzNTcwMjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2357025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tusharmakkar08", "html_url": "https://github.com/tusharmakkar08", "followers_url": "https://api.github.com/users/tusharmakkar08/followers", "following_url": "https://api.github.com/users/tusharmakkar08/following{/other_user}", "gists_url": "https://api.github.com/users/tusharmakkar08/gists{/gist_id}", "starred_url": "https://api.github.com/users/tusharmakkar08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tusharmakkar08/subscriptions", "organizations_url": "https://api.github.com/users/tusharmakkar08/orgs", "repos_url": "https://api.github.com/users/tusharmakkar08/repos", "events_url": "https://api.github.com/users/tusharmakkar08/events{/privacy}", "received_events_url": "https://api.github.com/users/tusharmakkar08/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2016-11-15T12:17:32Z", "updated_at": "2016-11-15T12:36:04Z", "closed_at": "2016-11-15T12:36:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Suggested URL: https://dev.twitter.com/rest/reference/get/users/search", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/247", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/247/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/247/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/247/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/247", "id": 188943923, "node_id": "MDU6SXNzdWUxODg5NDM5MjM=", "number": 247, "title": "Boolean should validate rather than coerce values", "user": {"login": "svisser", "id": 723226, "node_id": "MDQ6VXNlcjcyMzIyNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/723226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svisser", "html_url": "https://github.com/svisser", "followers_url": "https://api.github.com/users/svisser/followers", "following_url": "https://api.github.com/users/svisser/following{/other_user}", "gists_url": "https://api.github.com/users/svisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/svisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svisser/subscriptions", "organizations_url": "https://api.github.com/users/svisser/orgs", "repos_url": "https://api.github.com/users/svisser/repos", "events_url": "https://api.github.com/users/svisser/events{/privacy}", "received_events_url": "https://api.github.com/users/svisser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-13T00:41:50Z", "updated_at": "2016-11-13T07:39:47Z", "closed_at": "2016-11-13T07:39:47Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "This issue is about a design decision regarding `Boolean`.\r\n\r\nThe following schema:\r\n\r\n```python\r\ns = Any(Boolean(), None)\r\n```\r\n\r\nintends to express the idea of \"any boolean value or `None`\". This seems reasonable but for the value `None` it evaluates to `False`:\r\n\r\n\r\n```python\r\n>>> s(None)\r\nFalse\r\n```\r\n\r\nThis happens because `Boolean` coerces the value using `bool()` and therefore \"validates\" the value. Although it makes sense that `Any` checks the validators from left to right, this result can be an unexpected result if one has not read the docstring of `Boolean`. For the values `True` and `False` this schema also succeeds but it returns the values `True` and `False` as expected.\r\n\r\nIt seems that `Boolean` differs from other validation objects in the voluptuous library by doing  validation for string values but coercion for non-string values.\r\n\r\nIt would be more explicit to let users express coercion using `Coerce(bool)` and to implement `Boolean` as a validator:\r\n\r\n```python\r\n@message('expected boolean', cls=BooleanInvalid)\r\ndef Boolean2(v):\r\n    if isinstance(v, basestring):\r\n        v = v.lower()\r\n        if v in ('1', 'true', 'yes', 'on', 'enable'):\r\n            return True\r\n        if v in ('0', 'false', 'no', 'off', 'disable'):\r\n            return False\r\n        raise ValueError\r\n    if not isinstance(v, bool):\r\n        raise ValueError\r\n    return v\r\n```\r\n\r\nThe schema mentioned earlier can be fixed by doing:\r\n\r\n```python\r\ns = Any(None, Boolean())\r\n```\r\n\r\nbut it does mean that a new developer could add another component after `Boolean()` and introduce a bug.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/246", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/246/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/246/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/246", "id": 188906543, "node_id": "MDU6SXNzdWUxODg5MDY1NDM=", "number": 246, "title": "Can voluptuous play well with pyparsing?", "user": {"login": "nowox", "id": 1132849, "node_id": "MDQ6VXNlcjExMzI4NDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1132849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nowox", "html_url": "https://github.com/nowox", "followers_url": "https://api.github.com/users/nowox/followers", "following_url": "https://api.github.com/users/nowox/following{/other_user}", "gists_url": "https://api.github.com/users/nowox/gists{/gist_id}", "starred_url": "https://api.github.com/users/nowox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nowox/subscriptions", "organizations_url": "https://api.github.com/users/nowox/orgs", "repos_url": "https://api.github.com/users/nowox/repos", "events_url": "https://api.github.com/users/nowox/events{/privacy}", "received_events_url": "https://api.github.com/users/nowox/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-12T11:19:16Z", "updated_at": "2016-11-13T08:17:02Z", "closed_at": "2016-11-13T08:17:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am wondering how good it could be to have a native support for `pyparsing` in `voluptuous`. They are both some really powerful packages and I have the intuition they could play well together. \r\n\r\nIsn't that schema nice?\r\n\r\n```\r\ns = Schema( Suppress(':') + Word('abc') + Suppress(':') )\r\ns(':aabbcc:')\r\naabbcc   \r\n```\r\n\r\nA first step could be easily achieved by making a pyparsing `ParserElement` callable and then retrieve its first element: \r\n\r\n```\r\nclass PyparsingInvalid(Invalid):\r\n    pass\r\n\r\nclass Pyparsing(object):\r\n    def __call__(self, value):\r\n        try:\r\n            return self.pyparsing_schema.parseString(value)[0]\r\n        except ParseException as e:\r\n            raise PyparsingInvalid(e.msg)\r\n    def __init__(self, schema):\r\n        self.pyparsing_schema = stringStart + schema + stringEnd\r\n```\r\n\r\nThe minor difference with the initial idea is the need to explicitly cast a `ParseElement` to a `Schema`:\r\n \r\n```\r\ns = Schema( Pyparsing(Suppress(':') + Word('abc') + Suppress(':')) )\r\n```\r\n\r\nIn order to enhance the synergy between `pyparsing` and `voluptuous` it would be good to make both packages *more* compatible. This could be done on both sides: \r\n\r\n1. pyparsing `ParseElement`\r\n\r\nMaking `__call__` not set the default result name, but instead call `parseString` which will result in an unwanted compatibility break. \r\n\r\n2. voluptuous\r\n\r\nDetect if the input is a `pyparsing.ParserElement` and automatically wrap the `Pyparsing` class around it. \r\n\r\n```\r\ntry: \r\n    from pyparsing import ParserElement as _parserElement\r\nexcept ImportError: \r\n    class _parserElement(): \r\n       pass\r\n...\r\n\r\ndef wrap_pyparsing(element):\r\n    if isinstance(element, _parseElement):\r\n        return Pyparsing(element)\r\n    return element\r\n```\r\n\r\nOne last point to consider is to define what should `Pyparsing` return once called: \r\n\r\n1. An instance of `ParseResults` which should not be very useful in a voluptuous schema\r\n2. The first element: `foo.parseString(bar)[0]`\r\n3. A `list` or a `dict` with `list(foo.parseString(bar)[0])`\r\n4. Something configurable by the user using either a `kwargs` or a global setting. \r\n\r\nRegarding this latter point, the most straightforward way to increase the synergy would be to keep the proposed `Pyparsing` and add to it the ability to choose what output the user wants: \r\n\r\n```\r\nSchema(Pyparsing(Suppress(':') + Word('abc') + Suppress(':'), output=lambda x: x[0]))\r\n```\r\n\r\nOr...\r\n\r\n```\r\nSchema(All(\r\n   Pyparsing(Suppress(':') + Word('abc') + Suppress(':')),\r\n   lambda x: x[0]\r\n))\r\n```\r\n\r\n\r\n\r\nAny better idea?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/244", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/244/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/244/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/244/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/244", "id": 188575898, "node_id": "MDU6SXNzdWUxODg1NzU4OTg=", "number": 244, "title": "Validating dictionary with unknown keys", "user": {"login": "AndreaCrotti", "id": 53640, "node_id": "MDQ6VXNlcjUzNjQw", "avatar_url": "https://avatars2.githubusercontent.com/u/53640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCrotti", "html_url": "https://github.com/AndreaCrotti", "followers_url": "https://api.github.com/users/AndreaCrotti/followers", "following_url": "https://api.github.com/users/AndreaCrotti/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCrotti/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCrotti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCrotti/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCrotti/orgs", "repos_url": "https://api.github.com/users/AndreaCrotti/repos", "events_url": "https://api.github.com/users/AndreaCrotti/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCrotti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-10T17:53:50Z", "updated_at": "2016-11-11T10:00:11Z", "closed_at": "2016-11-11T10:00:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I had the situation a few time where I wanted to validate something like\r\n\r\n```\r\n    {'a': 1, 'b': 2}\r\n```\r\n\r\nwhere however the key values are arbitrary (even if always strings).\r\nIs there a way to write a schema for such a thing?\r\nThe alternative could be to make a list of dictionaries of course like\r\n\r\n```\r\n    [{'key': 'a', 'value': 1}]\r\n```\r\nwhich is easy to deal with, but I wonder if I can avoid that..", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/243", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/243/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/243/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/243", "id": 188192139, "node_id": "MDU6SXNzdWUxODgxOTIxMzk=", "number": 243, "title": "Validate a datetime.datetime instance?", "user": {"login": "nowox", "id": 1132849, "node_id": "MDQ6VXNlcjExMzI4NDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1132849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nowox", "html_url": "https://github.com/nowox", "followers_url": "https://api.github.com/users/nowox/followers", "following_url": "https://api.github.com/users/nowox/following{/other_user}", "gists_url": "https://api.github.com/users/nowox/gists{/gist_id}", "starred_url": "https://api.github.com/users/nowox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nowox/subscriptions", "organizations_url": "https://api.github.com/users/nowox/orgs", "repos_url": "https://api.github.com/users/nowox/repos", "events_url": "https://api.github.com/users/nowox/events{/privacy}", "received_events_url": "https://api.github.com/users/nowox/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-11-09T08:41:05Z", "updated_at": "2016-11-11T15:07:19Z", "closed_at": "2016-11-09T18:06:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "When deserializing data using `pyyaml`/`ruamel.yaml` date are returned as a datetime instance. \r\n\r\nI did not find a native solution on voluptuous but I eventually wrote this: \r\n\r\n```\r\ndef IsDate(date):\r\n    if isinstance(date, (datetime.datetime, datetime.date)):\r\n        return date\r\n    raise DateInvalid('value is not a valid date %s' % repr(date))\r\n```\r\n\r\nWould it be useful to elaborate and make a pull request?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/242", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/242/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/242/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/242", "id": 187976365, "node_id": "MDU6SXNzdWUxODc5NzYzNjU=", "number": 242, "title": "Validation for tuples?", "user": {"login": "nowox", "id": 1132849, "node_id": "MDQ6VXNlcjExMzI4NDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1132849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nowox", "html_url": "https://github.com/nowox", "followers_url": "https://api.github.com/users/nowox/followers", "following_url": "https://api.github.com/users/nowox/following{/other_user}", "gists_url": "https://api.github.com/users/nowox/gists{/gist_id}", "starred_url": "https://api.github.com/users/nowox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nowox/subscriptions", "organizations_url": "https://api.github.com/users/nowox/orgs", "repos_url": "https://api.github.com/users/nowox/repos", "events_url": "https://api.github.com/users/nowox/events{/privacy}", "received_events_url": "https://api.github.com/users/nowox/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-11-08T12:12:48Z", "updated_at": "2016-11-08T16:45:29Z", "closed_at": "2016-11-08T16:45:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to define a schema for a tuple: \r\n\r\n```\r\nSchema( ( Any( int, 'foo', 'bar') ) )( ('foo', 'bar) )\r\n```\r\n\r\nI found that voluptuous does not understand the tuple information. For this I had to trick it using: \r\n\r\n```\r\nSchema( All(tuple, Coerce(list), [ Any(int, 'foo', 'bar') ]))\r\n```\r\n\r\nBut this time I get this error:\r\n\r\n```\r\n/usr/lib/python2.7/site-packages/voluptuous/schema_builder.pyc in validate_mapping(path, iterable, out)\r\n    270                         # include if it's not marked for removal\r\n    271                         if not is_remove:\r\n--> 272                             out[new_key] = cval\r\n    273                         else:\r\n    274                             remove_key = True\r\n\r\nTypeError: unhashable type: 'list'\r\n```\r\n\r\nSo I eventually wrote this workaround: \r\n\r\n```\r\nSchema( All(tuple, Coerce(list), [ Any(int, 'foo', 'bar') ], Coerce(tuple)))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/230", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/230/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/230/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/230/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/230", "id": 181855931, "node_id": "MDU6SXNzdWUxODE4NTU5MzE=", "number": 230, "title": "NamedTuples do not validate as tuples or named tuples", "user": {"login": "dangitall", "id": 882363, "node_id": "MDQ6VXNlcjg4MjM2Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/882363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dangitall", "html_url": "https://github.com/dangitall", "followers_url": "https://api.github.com/users/dangitall/followers", "following_url": "https://api.github.com/users/dangitall/following{/other_user}", "gists_url": "https://api.github.com/users/dangitall/gists{/gist_id}", "starred_url": "https://api.github.com/users/dangitall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dangitall/subscriptions", "organizations_url": "https://api.github.com/users/dangitall/orgs", "repos_url": "https://api.github.com/users/dangitall/repos", "events_url": "https://api.github.com/users/dangitall/events{/privacy}", "received_events_url": "https://api.github.com/users/dangitall/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-09T00:11:11Z", "updated_at": "2016-10-10T04:46:18Z", "closed_at": "2016-10-10T04:46:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\nfrom collections import namedtuple\n\nNT = namedtuple('NT', ['a', 'b'])\n\nnt = NT(1, 2)\nt = (1, 2)\n\nSchema((int, int))(nt)    # => Invalid\nSchema((int, int))(t)     # => Valid\nSchema(NT(int, int))(nt)  # => Invalid\nSchema(NT(int, int))(t)   # => Valid\n```\n\nGiven that `NT(1, 2) == (1, 2) => True` I'd expect all of the above cases to return as valid.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/229", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/229/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/229/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/229", "id": 181537382, "node_id": "MDU6SXNzdWUxODE1MzczODI=", "number": 229, "title": "IsDir: If given a file, check that its directory exists", "user": {"login": "kamakazikamikaze", "id": 8862823, "node_id": "MDQ6VXNlcjg4NjI4MjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/8862823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamakazikamikaze", "html_url": "https://github.com/kamakazikamikaze", "followers_url": "https://api.github.com/users/kamakazikamikaze/followers", "following_url": "https://api.github.com/users/kamakazikamikaze/following{/other_user}", "gists_url": "https://api.github.com/users/kamakazikamikaze/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamakazikamikaze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamakazikamikaze/subscriptions", "organizations_url": "https://api.github.com/users/kamakazikamikaze/orgs", "repos_url": "https://api.github.com/users/kamakazikamikaze/repos", "events_url": "https://api.github.com/users/kamakazikamikaze/events{/privacy}", "received_events_url": "https://api.github.com/users/kamakazikamikaze/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-10-06T22:03:46Z", "updated_at": "2016-10-11T14:36:13Z", "closed_at": "2016-10-07T06:50:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, I'm really digging Voluptuous! I've been able to cut out a lot of lines when refactoring our checks for configuration files we read in, all because of your project. Thank you for putting the time and effort in to create this.\n\n`IsDir`, `IsFile`, and `IsPath` are great for checking existing files and directories. What they cannot do is check the _directory_ if a file name is passed in. For example, pretend that a field allows the user to input the destination file name that they want output to go to. This could be a new file _or_ an existing one to append to. (Like a log file.) I don't necessarily need to check if the file exists, I just need to check if the directory it goes to exists.\n\nTo demonstrate:\n\n``` Python\ninput = {\n    'outfile' : '/srv/cron/myapp/logs/myapp.log' # File doesn't exist\n}\n\n# The code we want to run. If the file doesn't exist already, it will be created\ndef writelog(input):\n    with open(input['outfile'], 'a') as log:\n        log.writelines(msg)\n\n# ==== Voluptuous ====\n# Can't use this. The file isn't a directory!\ndirschema = Schema({\n    Required('outfile', default='./myapp.log'): IsDir(),  \n})\n# This throws an Exception if 'myapp.log' hasn't been created yet\nfileschema = Schema({\n    Required('outfile', default='./myapp.log'): IsFile(), \n})\n# Same behavior as both of the above\nanyschema = Schema({\n    Required('outfile', default='./myapp.log'): IsPath(),\n})\n```\n\nTo get around this, I have one of two options:\n\n``` Python\n# Require the user to split it themselves\ninput = { \n    'filename' : 'myapp.log',\n    'output dir': '/src/cron/myapp/logs'\n}\n\n# Or split it prior to checking with Voluptuous\ninput2 = {\n    'outfile' : '/srv/cron/myapp/logs/myapp.log'\n}\n\ninput2['filename'] = input2['outfile'].split('/')[-1]\ninput2['output dir'] = '/'.join(input2['outfile'].split('/')[0:-1])\n```\n\nThe issue with these is that if we require specifying multiple files in different directories, I/they will have to split each and every one of them. The user isn't going to like this if there's three or four, plus my solution isn't going to be very pretty.\n\nA possible (example) solution using Voluptuous would be to modify the `IsDir` function:\n\n``` Python\n@message('not a directory', cls=DirInvalid)\n@truth\ndef IsDir(v, filedir=False):\n    \"\"\"Verify the directory exists.\n\n    >>> IsDir()('/')\n    '/'\n    >>> IsDir()('/tmp/foo.txt', True)\n    '/tmp'\n    >>> IsDir()('/fake/foo.txt', True)\n    DirInvalid: not a directory\n\n    :param filedir: If a file name is included, strip it out first\n    \"\"\"\n\n    return os.path.isdir(v if not filedir else os.path.dirname(v))\n```\n\nHopefully that all makes sense and demonstrates why it may be worthwhile to implement. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/228", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/228/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/228/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/228", "id": 181218255, "node_id": "MDU6SXNzdWUxODEyMTgyNTU=", "number": 228, "title": "More flexible schema definition", "user": {"login": "AndreaCrotti", "id": 53640, "node_id": "MDQ6VXNlcjUzNjQw", "avatar_url": "https://avatars2.githubusercontent.com/u/53640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCrotti", "html_url": "https://github.com/AndreaCrotti", "followers_url": "https://api.github.com/users/AndreaCrotti/followers", "following_url": "https://api.github.com/users/AndreaCrotti/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCrotti/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCrotti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCrotti/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCrotti/orgs", "repos_url": "https://api.github.com/users/AndreaCrotti/repos", "events_url": "https://api.github.com/users/AndreaCrotti/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCrotti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-10-05T17:34:07Z", "updated_at": "2016-10-26T00:06:04Z", "closed_at": "2016-10-25T15:12:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We needed to be able to change schema depending on countries, and for example maybe sometimes we just want to change if a field is required or not.\n\nThe way generally you declare voluptuous schemas doesn't make it very easy, so we just did a small function to translate from our format to voluptuous format, and we can write things like:\n\n```\nMY_SCHEMA = {\n    'id': Field(required=True, type=unicode),\n    'choice': Field(required=True, type=V.Any('main', 'secondary')),\n    'subinfo': SubSchema(SUB_SCHEMA),\n}\n```\n\nit works quite well for us, if that's something that might be interesting to include in voluptuous let me know!\n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/226", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/226/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/226/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/226", "id": 180043616, "node_id": "MDU6SXNzdWUxODAwNDM2MTY=", "number": 226, "title": "Function as validator", "user": {"login": "AndreaCrotti", "id": 53640, "node_id": "MDQ6VXNlcjUzNjQw", "avatar_url": "https://avatars2.githubusercontent.com/u/53640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCrotti", "html_url": "https://github.com/AndreaCrotti", "followers_url": "https://api.github.com/users/AndreaCrotti/followers", "following_url": "https://api.github.com/users/AndreaCrotti/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCrotti/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCrotti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCrotti/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCrotti/orgs", "repos_url": "https://api.github.com/users/AndreaCrotti/repos", "events_url": "https://api.github.com/users/AndreaCrotti/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCrotti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-09-29T13:04:41Z", "updated_at": "2016-09-30T09:21:37Z", "closed_at": "2016-09-30T08:07:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I actually found we had a bug in my code with a Date validator, which can be summarised as this:\n\n```\nIn [63]: import voluptuous as V\n\nIn [64]: def Date(fmt='%Y-%m-%d'):\n    ...:    return lambda v: datetime.strptime(v, fmt)\n    ...: \n\nIn [65]: V.Schema(Date)(11)\nOut[65]: <function __main__.<lambda>>\n```\n\nSo instead of calling Date I was just passing it.\nStupid mistake surely, but I wonder if voluptuos could at least warn about this.\nReturning a function from the schema validation is normally not something that makes sense right?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/221", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/221/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/221/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/221", "id": 179738663, "node_id": "MDU6SXNzdWUxNzk3Mzg2NjM=", "number": 221, "title": "Pytest?", "user": {"login": "AndreaCrotti", "id": 53640, "node_id": "MDQ6VXNlcjUzNjQw", "avatar_url": "https://avatars2.githubusercontent.com/u/53640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCrotti", "html_url": "https://github.com/AndreaCrotti", "followers_url": "https://api.github.com/users/AndreaCrotti/followers", "following_url": "https://api.github.com/users/AndreaCrotti/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCrotti/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCrotti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCrotti/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCrotti/orgs", "repos_url": "https://api.github.com/users/AndreaCrotti/repos", "events_url": "https://api.github.com/users/AndreaCrotti/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCrotti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-09-28T10:43:05Z", "updated_at": "2016-09-29T05:04:33Z", "closed_at": "2016-09-28T10:58:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I used to use nosetests as well in the past, but generally py.test got way better and it's actively maintained..\n\nHere for example some slides about it:\nhttp://mathieu.agopian.info/presentations/2015_06_djangocon_europe/\n\nif you would be interested about that I can do the change..\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/220", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/220/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/220/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/220", "id": 179659428, "node_id": "MDU6SXNzdWUxNzk2NTk0Mjg=", "number": 220, "title": "validate_with_humanized_errors throws exception with nested MultipleInvalidErrors", "user": {"login": "NassarS", "id": 4316106, "node_id": "MDQ6VXNlcjQzMTYxMDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4316106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NassarS", "html_url": "https://github.com/NassarS", "followers_url": "https://api.github.com/users/NassarS/followers", "following_url": "https://api.github.com/users/NassarS/following{/other_user}", "gists_url": "https://api.github.com/users/NassarS/gists{/gist_id}", "starred_url": "https://api.github.com/users/NassarS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NassarS/subscriptions", "organizations_url": "https://api.github.com/users/NassarS/orgs", "repos_url": "https://api.github.com/users/NassarS/repos", "events_url": "https://api.github.com/users/NassarS/events{/privacy}", "received_events_url": "https://api.github.com/users/NassarS/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-28T01:31:39Z", "updated_at": "2016-09-30T05:53:21Z", "closed_at": "2016-09-30T05:11:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n>>> Schema(All(json.loads, All({Required('x'): All(unicode, Length(min=2))})))('{\"x\": \"a\"}')\n...\nvoluptuous.error.MultipleInvalid: length of value must be at least 2 for dictionary value @ data[u'x']\n\n>>> validate_with_humanized_errors('{\"x\": \"a\"}', Schema(All(json.loads, All({Required('x'): All(unicode, Length(min=2))}))))\nTraceback (most recent call last):\n  File \"/Users/nstoertz/.virtualenvs/frontend/lib/python2.7/site-packages/voluptuous/humanize.py\", line 39, in validate_with_humanized_errors\n    raise Error(humanize_error(data, e, max_sub_error_length))\n  File \"/Users/nstoertz/.virtualenvs/frontend/lib/python2.7/site-packages/voluptuous/humanize.py\", line 26, in humanize_error\n    for sub_error in validation_error.errors\n  File \"/Users/nstoertz/.virtualenvs/frontend/lib/python2.7/site-packages/voluptuous/humanize.py\", line 26, in <genexpr>\n    for sub_error in validation_error.errors\n  File \"/Users/nstoertz/.virtualenvs/frontend/lib/python2.7/site-packages/voluptuous/humanize.py\", line 29, in humanize_error\n    offending_item_summary = repr(_nested_getitem(data, validation_error.path))\n  File \"/Users/nstoertz/.virtualenvs/frontend/lib/python2.7/site-packages/voluptuous/humanize.py\", line 11, in _nested_getitem\n    data = data[item_index]\nTypeError: string indices must be integers, not unicode\n>>> \n\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/219", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/219/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/219/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/219", "id": 179525724, "node_id": "MDU6SXNzdWUxNzk1MjU3MjQ=", "number": 219, "title": "Extending schema to change properties of existing keys", "user": {"login": "mprager", "id": 3528569, "node_id": "MDQ6VXNlcjM1Mjg1Njk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3528569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mprager", "html_url": "https://github.com/mprager", "followers_url": "https://api.github.com/users/mprager/followers", "following_url": "https://api.github.com/users/mprager/following{/other_user}", "gists_url": "https://api.github.com/users/mprager/gists{/gist_id}", "starred_url": "https://api.github.com/users/mprager/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mprager/subscriptions", "organizations_url": "https://api.github.com/users/mprager/orgs", "repos_url": "https://api.github.com/users/mprager/repos", "events_url": "https://api.github.com/users/mprager/events{/privacy}", "received_events_url": "https://api.github.com/users/mprager/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-27T15:23:43Z", "updated_at": "2016-10-21T16:02:21Z", "closed_at": "2016-10-21T16:02:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently modifying key types in an existing schema duplicates the keys and causes all objects to fail validation. Consider this example:\n\n```\n>>> s1 = Schema({Optional('a'): int})\n>>> s2 = s1.extend({Required('a'): int})\n>>> s1.schema\n{'a': <type 'int'>}\n>>> s2.schema\n{'a': <type 'int'>, 'a': <type 'int'>}\n```\n\nThe s2 object now cannot pass validation for any object, since all 'a' keys will be considered for the optional key and the required key appears absent.\n\n```\n>>> s1({})\n{}\n>>> s1({'a': 3})\n{'a': 3}\n>>> s2({})\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/mprager/.virtualenv/validator/lib/python2.7/site-packages/voluptuous/schema_builder.py\", line 192, in __call__\n    return self._compiled([], data)\n  File \"/home/mprager/.virtualenv/validator/lib/python2.7/site-packages/voluptuous/schema_builder.py\", line 486, in validate_dict\n    return base_validate(path, iteritems(data), out)\n  File \"/home/mprager/.virtualenv/validator/lib/python2.7/site-packages/voluptuous/schema_builder.py\", line 324, in validate_mapping\n    raise er.MultipleInvalid(errors)\nvoluptuous.error.MultipleInvalid: required key not provided @ data['a']\n>>> s2({'a':4})\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/mprager/.virtualenv/validator/lib/python2.7/site-packages/voluptuous/schema_builder.py\", line 192, in __call__\n    return self._compiled([], data)\n  File \"/home/mprager/.virtualenv/validator/lib/python2.7/site-packages/voluptuous/schema_builder.py\", line 486, in validate_dict\n    return base_validate(path, iteritems(data), out)\n  File \"/home/mprager/.virtualenv/validator/lib/python2.7/site-packages/voluptuous/schema_builder.py\", line 324, in validate_mapping\n    raise er.MultipleInvalid(errors)\nvoluptuous.error.MultipleInvalid: required key not provided @ data['a']\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/217", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/217/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/217/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/217", "id": 179467002, "node_id": "MDU6SXNzdWUxNzk0NjcwMDI=", "number": 217, "title": "Using Travis to update documentation ", "user": {"login": "tusharmakkar08", "id": 2357025, "node_id": "MDQ6VXNlcjIzNTcwMjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2357025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tusharmakkar08", "html_url": "https://github.com/tusharmakkar08", "followers_url": "https://api.github.com/users/tusharmakkar08/followers", "following_url": "https://api.github.com/users/tusharmakkar08/following{/other_user}", "gists_url": "https://api.github.com/users/tusharmakkar08/gists{/gist_id}", "starred_url": "https://api.github.com/users/tusharmakkar08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tusharmakkar08/subscriptions", "organizations_url": "https://api.github.com/users/tusharmakkar08/orgs", "repos_url": "https://api.github.com/users/tusharmakkar08/repos", "events_url": "https://api.github.com/users/tusharmakkar08/events{/privacy}", "received_events_url": "https://api.github.com/users/tusharmakkar08/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 396151052, "node_id": "MDU6TGFiZWwzOTYxNTEwNTI=", "url": "https://api.github.com/repos/alecthomas/voluptuous/labels/in%20progress", "name": "in progress", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "tusharmakkar08", "id": 2357025, "node_id": "MDQ6VXNlcjIzNTcwMjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2357025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tusharmakkar08", "html_url": "https://github.com/tusharmakkar08", "followers_url": "https://api.github.com/users/tusharmakkar08/followers", "following_url": "https://api.github.com/users/tusharmakkar08/following{/other_user}", "gists_url": "https://api.github.com/users/tusharmakkar08/gists{/gist_id}", "starred_url": "https://api.github.com/users/tusharmakkar08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tusharmakkar08/subscriptions", "organizations_url": "https://api.github.com/users/tusharmakkar08/orgs", "repos_url": "https://api.github.com/users/tusharmakkar08/repos", "events_url": "https://api.github.com/users/tusharmakkar08/events{/privacy}", "received_events_url": "https://api.github.com/users/tusharmakkar08/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tusharmakkar08", "id": 2357025, "node_id": "MDQ6VXNlcjIzNTcwMjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2357025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tusharmakkar08", "html_url": "https://github.com/tusharmakkar08", "followers_url": "https://api.github.com/users/tusharmakkar08/followers", "following_url": "https://api.github.com/users/tusharmakkar08/following{/other_user}", "gists_url": "https://api.github.com/users/tusharmakkar08/gists{/gist_id}", "starred_url": "https://api.github.com/users/tusharmakkar08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tusharmakkar08/subscriptions", "organizations_url": "https://api.github.com/users/tusharmakkar08/orgs", "repos_url": "https://api.github.com/users/tusharmakkar08/repos", "events_url": "https://api.github.com/users/tusharmakkar08/events{/privacy}", "received_events_url": "https://api.github.com/users/tusharmakkar08/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2016-09-27T11:27:28Z", "updated_at": "2016-11-04T02:37:06Z", "closed_at": "2016-11-04T02:37:06Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Hey @alecthomas \n\nCurrently we are using travis only to run tests. Since our documentation (which is hosted on `gh-pages`), gets modified as and when new commit happens at `master`. Should we update travis to accomodate the updation of documentation as well? \n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/216", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/216/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/216/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/216", "id": 179461236, "node_id": "MDU6SXNzdWUxNzk0NjEyMzY=", "number": 216, "title": "Decorating functions", "user": {"login": "AndreaCrotti", "id": 53640, "node_id": "MDQ6VXNlcjUzNjQw", "avatar_url": "https://avatars2.githubusercontent.com/u/53640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCrotti", "html_url": "https://github.com/AndreaCrotti", "followers_url": "https://api.github.com/users/AndreaCrotti/followers", "following_url": "https://api.github.com/users/AndreaCrotti/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCrotti/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCrotti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCrotti/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCrotti/orgs", "repos_url": "https://api.github.com/users/AndreaCrotti/repos", "events_url": "https://api.github.com/users/AndreaCrotti/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCrotti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-09-27T10:58:31Z", "updated_at": "2016-09-29T04:54:55Z", "closed_at": "2016-09-27T11:05:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "What do you think about this decorator\n\nhttps://gist.github.com/AndreaCrotti/3d6b69acc55b637d32865dbf2d7b1fd5\n\n(of course it can be improved and polished a lot).\n\nIs that something we could include into the library?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/214", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/214/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/214/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/214", "id": 178901465, "node_id": "MDU6SXNzdWUxNzg5MDE0NjU=", "number": 214, "title": "When validating a sub-schema against possible schemas, the error messages are not correct", "user": {"login": "mprager", "id": 3528569, "node_id": "MDQ6VXNlcjM1Mjg1Njk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3528569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mprager", "html_url": "https://github.com/mprager", "followers_url": "https://api.github.com/users/mprager/followers", "following_url": "https://api.github.com/users/mprager/following{/other_user}", "gists_url": "https://api.github.com/users/mprager/gists{/gist_id}", "starred_url": "https://api.github.com/users/mprager/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mprager/subscriptions", "organizations_url": "https://api.github.com/users/mprager/orgs", "repos_url": "https://api.github.com/users/mprager/repos", "events_url": "https://api.github.com/users/mprager/events{/privacy}", "received_events_url": "https://api.github.com/users/mprager/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-23T15:07:34Z", "updated_at": "2016-09-27T15:02:50Z", "closed_at": "2016-09-25T05:52:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Say you have something like this:\n\n```\nimport voluptuous as v\ns = v.Schema([v.Any({v.Required('a'): 3}, {v.Required('b'):4})])\n```\n\nthis means that you expect a list of elements, each element can either be a dictionary with key 'a' and value 3, or a dictionary with key 'b' and value 4.\n\nThe validation works:\n\n```\n>>> s = v.Schema([v.Any({v.Required('a'): 3}, {v.Required('b'):4})])\n>>> s([{'a':3}])\n[{'a': 3}]\n>>> s([{'b':4}])\n[{'b': 4}]\n```\n\nhowever when you violate it the message you get does not make sense:\n\n```\n>>> s([{'b':3}])\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/mprager/.virtualenv/validator/lib/python2.7/site-packages/voluptuous/schema_builder.py\", line 192, in __call__\n    return self._compiled([], data)\n  File \"/home/mprager/.virtualenv/validator/lib/python2.7/site-packages/voluptuous/schema_builder.py\", line 523, in validate_sequence\n    cval = validate(index_path, value)\n  File \"/home/mprager/.virtualenv/validator/lib/python2.7/site-packages/voluptuous/schema_builder.py\", line 625, in validate_callable\n    return schema(data)\n  File \"/home/mprager/.virtualenv/validator/lib/python2.7/site-packages/voluptuous/validators.py\", line 230, in __call__\n    raise error if self.msg is None else AnyInvalid(self.msg)\nvoluptuous.error.MultipleInvalid: extra keys not allowed @ data[0]['b']\n```\n\nThe message should read like:\n\n```\nvoluptuous.error.MultipleInvalid: not a valid value for dictionary value @ data[0]['b']\n```\n\nFor more complex validation, this makes it hard for the user to know what exactly is wrong with the schema.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/213", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/213/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/213/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/213", "id": 178893130, "node_id": "MDU6SXNzdWUxNzg4OTMxMzA=", "number": 213, "title": "Validators date format support", "user": {"login": "divanovGH", "id": 2437654, "node_id": "MDQ6VXNlcjI0Mzc2NTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/2437654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divanovGH", "html_url": "https://github.com/divanovGH", "followers_url": "https://api.github.com/users/divanovGH/followers", "following_url": "https://api.github.com/users/divanovGH/following{/other_user}", "gists_url": "https://api.github.com/users/divanovGH/gists{/gist_id}", "starred_url": "https://api.github.com/users/divanovGH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divanovGH/subscriptions", "organizations_url": "https://api.github.com/users/divanovGH/orgs", "repos_url": "https://api.github.com/users/divanovGH/repos", "events_url": "https://api.github.com/users/divanovGH/events{/privacy}", "received_events_url": "https://api.github.com/users/divanovGH/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-23T14:32:50Z", "updated_at": "2016-09-25T05:53:04Z", "closed_at": "2016-09-25T05:53:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nclass Date(object):\n    \"\"\"Validate that the value matches the date format.\"\"\"\n\n    DEFAULT_FORMAT = '%Y-%m-%d'\n\n    def __init__(self, format=None, msg=None):\n        self.format = format or self.DEFAULT_FORMAT\n        self.msg = msg\n\n    def __call__(self, v):\n        try:\n            datetime.date(datetime.strptime(v, self.format))\n        except (TypeError, ValueError):\n            raise DatetimeInvalid(\n                self.msg or 'value does not match'\n                            ' expected format %s' % self.format)\n        return v\n\n    def __repr__(self):\n        return 'Date(format=%s)' % self.format\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/211", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/211/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/211/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/211", "id": 178876352, "node_id": "MDU6SXNzdWUxNzg4NzYzNTI=", "number": 211, "title": "Integrating Coveralls", "user": {"login": "tusharmakkar08", "id": 2357025, "node_id": "MDQ6VXNlcjIzNTcwMjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2357025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tusharmakkar08", "html_url": "https://github.com/tusharmakkar08", "followers_url": "https://api.github.com/users/tusharmakkar08/followers", "following_url": "https://api.github.com/users/tusharmakkar08/following{/other_user}", "gists_url": "https://api.github.com/users/tusharmakkar08/gists{/gist_id}", "starred_url": "https://api.github.com/users/tusharmakkar08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tusharmakkar08/subscriptions", "organizations_url": "https://api.github.com/users/tusharmakkar08/orgs", "repos_url": "https://api.github.com/users/tusharmakkar08/repos", "events_url": "https://api.github.com/users/tusharmakkar08/events{/privacy}", "received_events_url": "https://api.github.com/users/tusharmakkar08/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "tusharmakkar08", "id": 2357025, "node_id": "MDQ6VXNlcjIzNTcwMjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2357025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tusharmakkar08", "html_url": "https://github.com/tusharmakkar08", "followers_url": "https://api.github.com/users/tusharmakkar08/followers", "following_url": "https://api.github.com/users/tusharmakkar08/following{/other_user}", "gists_url": "https://api.github.com/users/tusharmakkar08/gists{/gist_id}", "starred_url": "https://api.github.com/users/tusharmakkar08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tusharmakkar08/subscriptions", "organizations_url": "https://api.github.com/users/tusharmakkar08/orgs", "repos_url": "https://api.github.com/users/tusharmakkar08/repos", "events_url": "https://api.github.com/users/tusharmakkar08/events{/privacy}", "received_events_url": "https://api.github.com/users/tusharmakkar08/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tusharmakkar08", "id": 2357025, "node_id": "MDQ6VXNlcjIzNTcwMjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2357025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tusharmakkar08", "html_url": "https://github.com/tusharmakkar08", "followers_url": "https://api.github.com/users/tusharmakkar08/followers", "following_url": "https://api.github.com/users/tusharmakkar08/following{/other_user}", "gists_url": "https://api.github.com/users/tusharmakkar08/gists{/gist_id}", "starred_url": "https://api.github.com/users/tusharmakkar08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tusharmakkar08/subscriptions", "organizations_url": "https://api.github.com/users/tusharmakkar08/orgs", "repos_url": "https://api.github.com/users/tusharmakkar08/repos", "events_url": "https://api.github.com/users/tusharmakkar08/events{/privacy}", "received_events_url": "https://api.github.com/users/tusharmakkar08/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2016-09-23T13:22:42Z", "updated_at": "2016-09-23T14:33:58Z", "closed_at": "2016-09-23T14:33:54Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Hey @alecthomas \n\nI am planning to integrate the repo with [Coveralls](https://coveralls.io/) for gathering coverage reports of `Voluptuous`. What do you think about this? \n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/208", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/208/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/208/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/208", "id": 178614954, "node_id": "MDU6SXNzdWUxNzg2MTQ5NTQ=", "number": 208, "title": "Equality between schemas", "user": {"login": "AndreaCrotti", "id": 53640, "node_id": "MDQ6VXNlcjUzNjQw", "avatar_url": "https://avatars2.githubusercontent.com/u/53640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCrotti", "html_url": "https://github.com/AndreaCrotti", "followers_url": "https://api.github.com/users/AndreaCrotti/followers", "following_url": "https://api.github.com/users/AndreaCrotti/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCrotti/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCrotti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCrotti/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCrotti/orgs", "repos_url": "https://api.github.com/users/AndreaCrotti/repos", "events_url": "https://api.github.com/users/AndreaCrotti/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCrotti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "tusharmakkar08", "id": 2357025, "node_id": "MDQ6VXNlcjIzNTcwMjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2357025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tusharmakkar08", "html_url": "https://github.com/tusharmakkar08", "followers_url": "https://api.github.com/users/tusharmakkar08/followers", "following_url": "https://api.github.com/users/tusharmakkar08/following{/other_user}", "gists_url": "https://api.github.com/users/tusharmakkar08/gists{/gist_id}", "starred_url": "https://api.github.com/users/tusharmakkar08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tusharmakkar08/subscriptions", "organizations_url": "https://api.github.com/users/tusharmakkar08/orgs", "repos_url": "https://api.github.com/users/tusharmakkar08/repos", "events_url": "https://api.github.com/users/tusharmakkar08/events{/privacy}", "received_events_url": "https://api.github.com/users/tusharmakkar08/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tusharmakkar08", "id": 2357025, "node_id": "MDQ6VXNlcjIzNTcwMjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2357025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tusharmakkar08", "html_url": "https://github.com/tusharmakkar08", "followers_url": "https://api.github.com/users/tusharmakkar08/followers", "following_url": "https://api.github.com/users/tusharmakkar08/following{/other_user}", "gists_url": "https://api.github.com/users/tusharmakkar08/gists{/gist_id}", "starred_url": "https://api.github.com/users/tusharmakkar08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tusharmakkar08/subscriptions", "organizations_url": "https://api.github.com/users/tusharmakkar08/orgs", "repos_url": "https://api.github.com/users/tusharmakkar08/repos", "events_url": "https://api.github.com/users/tusharmakkar08/events{/privacy}", "received_events_url": "https://api.github.com/users/tusharmakkar08/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2016-09-22T13:49:03Z", "updated_at": "2016-09-24T18:31:58Z", "closed_at": "2016-09-24T18:31:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I just noticed that this doesn't work as I thought it would:\n\n```\nIn [20]: v = voluptuous.Schema({voluptuous.Required('a'): unicode})\n\nIn [21]: v1 = voluptuous.Schema({voluptuous.Required('a'): unicode})\n\nIn [22]: v == v1\nOut[22]: False\n```\n\nis that desired or maybe just not implemented?\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/204", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/204/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/204/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/204", "id": 177417098, "node_id": "MDU6SXNzdWUxNzc0MTcwOTg=", "number": 204, "title": "IsFile and IsDir and other path validators breaks on None", "user": {"login": "voidpp", "id": 6121328, "node_id": "MDQ6VXNlcjYxMjEzMjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6121328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/voidpp", "html_url": "https://github.com/voidpp", "followers_url": "https://api.github.com/users/voidpp/followers", "following_url": "https://api.github.com/users/voidpp/following{/other_user}", "gists_url": "https://api.github.com/users/voidpp/gists{/gist_id}", "starred_url": "https://api.github.com/users/voidpp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/voidpp/subscriptions", "organizations_url": "https://api.github.com/users/voidpp/orgs", "repos_url": "https://api.github.com/users/voidpp/repos", "events_url": "https://api.github.com/users/voidpp/events{/privacy}", "received_events_url": "https://api.github.com/users/voidpp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 95223555, "node_id": "MDU6TGFiZWw5NTIyMzU1NQ==", "url": "https://api.github.com/repos/alecthomas/voluptuous/labels/3%20-%20Done", "name": "3 - Done", "color": "CCCCCC", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "tusharmakkar08", "id": 2357025, "node_id": "MDQ6VXNlcjIzNTcwMjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2357025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tusharmakkar08", "html_url": "https://github.com/tusharmakkar08", "followers_url": "https://api.github.com/users/tusharmakkar08/followers", "following_url": "https://api.github.com/users/tusharmakkar08/following{/other_user}", "gists_url": "https://api.github.com/users/tusharmakkar08/gists{/gist_id}", "starred_url": "https://api.github.com/users/tusharmakkar08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tusharmakkar08/subscriptions", "organizations_url": "https://api.github.com/users/tusharmakkar08/orgs", "repos_url": "https://api.github.com/users/tusharmakkar08/repos", "events_url": "https://api.github.com/users/tusharmakkar08/events{/privacy}", "received_events_url": "https://api.github.com/users/tusharmakkar08/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tusharmakkar08", "id": 2357025, "node_id": "MDQ6VXNlcjIzNTcwMjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2357025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tusharmakkar08", "html_url": "https://github.com/tusharmakkar08", "followers_url": "https://api.github.com/users/tusharmakkar08/followers", "following_url": "https://api.github.com/users/tusharmakkar08/following{/other_user}", "gists_url": "https://api.github.com/users/tusharmakkar08/gists{/gist_id}", "starred_url": "https://api.github.com/users/tusharmakkar08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tusharmakkar08/subscriptions", "organizations_url": "https://api.github.com/users/tusharmakkar08/orgs", "repos_url": "https://api.github.com/users/tusharmakkar08/repos", "events_url": "https://api.github.com/users/tusharmakkar08/events{/privacy}", "received_events_url": "https://api.github.com/users/tusharmakkar08/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2016-09-16T12:46:59Z", "updated_at": "2016-09-17T07:30:04Z", "closed_at": "2016-09-17T07:30:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` py\nfrom voluptuous import IsFile\ns = IsFile()\ns('.bashrc') # ok\ns('jkfhsdh') # throws: FileInvalid: not a file\ns(None) # throws TypeError: coercing to Unicode: need string or buffer, NoneType found\n```\n\nI think in case of the value is None, the voluptuous has to raise FileInvalid exception\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/203", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/203/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/203/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/203", "id": 177101643, "node_id": "MDU6SXNzdWUxNzcxMDE2NDM=", "number": 203, "title": "Required('field', default=<value>): Any(bool, None) behaves differently for value = True/False", "user": {"login": "pavel-shpilev", "id": 2881806, "node_id": "MDQ6VXNlcjI4ODE4MDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2881806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pavel-shpilev", "html_url": "https://github.com/pavel-shpilev", "followers_url": "https://api.github.com/users/pavel-shpilev/followers", "following_url": "https://api.github.com/users/pavel-shpilev/following{/other_user}", "gists_url": "https://api.github.com/users/pavel-shpilev/gists{/gist_id}", "starred_url": "https://api.github.com/users/pavel-shpilev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pavel-shpilev/subscriptions", "organizations_url": "https://api.github.com/users/pavel-shpilev/orgs", "repos_url": "https://api.github.com/users/pavel-shpilev/repos", "events_url": "https://api.github.com/users/pavel-shpilev/events{/privacy}", "received_events_url": "https://api.github.com/users/pavel-shpilev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-15T06:45:41Z", "updated_at": "2016-09-16T07:23:07Z", "closed_at": "2016-09-15T21:06:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\n\nHere's my schema and a test case for it:\n\n```\nimport unittest\n\nfrom voluptuous import Schema, Required, Any, MultipleInvalid\n\n\nschema = Schema({\n    Required('inview', default=False): Any(bool, None),\n    Required('mute', default=True): Any(bool, None),\n})\n\n\nclass TestSchemaValidation(unittest.TestCase):\n\n    def setUp(self):\n        self.data = {\n            'inview': True,\n            'mute': False\n        }\n\n    def _assertExceptionHasText(self, text):\n        try:\n            schema(self.data)\n            raise AssertionError('MultipleInvalid not raised')\n        except MultipleInvalid as e:\n            self.assertIn(text, str(e))\n\n    def test_inview(self):\n        # Test knows how to deal with None and has default value.\n        self.data['inview'] = None\n        self.assertFalse(schema(self.data)['inview'])\n        del self.data['inview']\n        self.assertFalse(schema(self.data)['inview'])\n\n    def test_mute(self):\n        # Test knows how to deal with None and has default value.\n        self.data['mute'] = None\n        self.assertTrue(schema(self.data)['mute'])\n        del self.data['mute']\n        self.assertTrue(schema(self.data)['mute'])\n\n\nif __name__ == '__main__':\n    unittest.main()\n\n```\n\nI might be doing something wrong here (like allowing bool field to be None), but either way the behaviour is inconsistent depending on whether the field is True or False\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/198", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/198/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/198/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/198", "id": 176231149, "node_id": "MDU6SXNzdWUxNzYyMzExNDk=", "number": 198, "title": "[] should evaluate to an empty list, not any list", "user": {"login": "tuukkamustonen", "id": 94327, "node_id": "MDQ6VXNlcjk0MzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/94327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tuukkamustonen", "html_url": "https://github.com/tuukkamustonen", "followers_url": "https://api.github.com/users/tuukkamustonen/followers", "following_url": "https://api.github.com/users/tuukkamustonen/following{/other_user}", "gists_url": "https://api.github.com/users/tuukkamustonen/gists{/gist_id}", "starred_url": "https://api.github.com/users/tuukkamustonen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tuukkamustonen/subscriptions", "organizations_url": "https://api.github.com/users/tuukkamustonen/orgs", "repos_url": "https://api.github.com/users/tuukkamustonen/repos", "events_url": "https://api.github.com/users/tuukkamustonen/events{/privacy}", "received_events_url": "https://api.github.com/users/tuukkamustonen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-09-11T08:36:51Z", "updated_at": "2016-10-21T16:00:34Z", "closed_at": "2016-10-21T16:00:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "``` python\n>>> from voluptuous import Schema\n>>> Schema({})({})\n{}\n>>> Schema({})({'foo': 1})\nTraceback (most recent call last):\n...\nvoluptuous.error.MultipleInvalid: extra keys not allowed @ data['foo']\n>>> Schema(int)(5)\n5\n>>> Schema(2)(5)\nTraceback (most recent call last):\n...\nvoluptuous.error.MultipleInvalid: not a valid value\n>>> Schema([])([])\n[]\n>>> Schema([])([1])  # shouldn't this throw error?\n[1]\n```\n\nWouldn't it be logical to evaluate `list` for any list and `[]` for an exact value (an empty list)?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/194", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/194/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/194/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/194", "id": 171532002, "node_id": "MDU6SXNzdWUxNzE1MzIwMDI=", "number": 194, "title": "nan interpreted as valid within a Range", "user": {"login": "dangitall", "id": 882363, "node_id": "MDQ6VXNlcjg4MjM2Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/882363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dangitall", "html_url": "https://github.com/dangitall", "followers_url": "https://api.github.com/users/dangitall/followers", "following_url": "https://api.github.com/users/dangitall/following{/other_user}", "gists_url": "https://api.github.com/users/dangitall/gists{/gist_id}", "starred_url": "https://api.github.com/users/dangitall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dangitall/subscriptions", "organizations_url": "https://api.github.com/users/dangitall/orgs", "repos_url": "https://api.github.com/users/dangitall/repos", "events_url": "https://api.github.com/users/dangitall/events{/privacy}", "received_events_url": "https://api.github.com/users/dangitall/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-16T22:21:10Z", "updated_at": "2016-08-18T11:03:10Z", "closed_at": "2016-08-18T11:03:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`Schema(Range(min=0, max=10))(math.nan)` results in `nan` which is counterintuitive to me as\n`0 < math.nan < 10` is `False`. Is there a reason it needs to be like this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/192", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/192/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/192/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/192", "id": 171027790, "node_id": "MDU6SXNzdWUxNzEwMjc3OTA=", "number": 192, "title": "Making a key required while extending a dictionary validation schema fails", "user": {"login": "balloob", "id": 1444314, "node_id": "MDQ6VXNlcjE0NDQzMTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1444314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/balloob", "html_url": "https://github.com/balloob", "followers_url": "https://api.github.com/users/balloob/followers", "following_url": "https://api.github.com/users/balloob/following{/other_user}", "gists_url": "https://api.github.com/users/balloob/gists{/gist_id}", "starred_url": "https://api.github.com/users/balloob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/balloob/subscriptions", "organizations_url": "https://api.github.com/users/balloob/orgs", "repos_url": "https://api.github.com/users/balloob/repos", "events_url": "https://api.github.com/users/balloob/events{/privacy}", "received_events_url": "https://api.github.com/users/balloob/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-13T21:15:05Z", "updated_at": "2016-10-21T16:02:43Z", "closed_at": "2016-10-21T16:02:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Running voluptuous 0.9.2\n\nExtending a dictionary validating schema will not work if one of the existing keys is overwritten and made required.\n\nGiven this code, you would expect both schema's to pass the data:\n\n``` python\nimport voluptuous as vol\n\nschema1 = vol.Schema({'platform': str})\nschema2 = schema1.extend({vol.Required('platform'): str})\n\ndata = {'platform': 'hello'}\n\nprint('schema1')\nprint(schema1(data))\nprint('schema2')\nprint(schema2(data))\n```\n\nHowever, an invalid exception is raised for `schema2`:\n\n```\n\u203a python3 pm_test.py\nschema1\n{'platform': 'hello'}\nschema2\nTraceback (most recent call last):\n  File \"pm_test.py\", line 20, in <module>\n    print(schema2(data))\n  File \"/Users/paulus/dev/python/home-assistant/lib/python3.4/site-packages/voluptuous-0.9.2-py3.4.egg/voluptuous/schema_builder.py\", line 192, in __call__\n  File \"/Users/paulus/dev/python/home-assistant/lib/python3.4/site-packages/voluptuous-0.9.2-py3.4.egg/voluptuous/schema_builder.py\", line 486, in validate_dict\n  File \"/Users/paulus/dev/python/home-assistant/lib/python3.4/site-packages/voluptuous-0.9.2-py3.4.egg/voluptuous/schema_builder.py\", line 324, in validate_mapping\nvoluptuous.error.MultipleInvalid: required key not provided @ data['platform']\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/191", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/191/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/191/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/191", "id": 170397431, "node_id": "MDU6SXNzdWUxNzAzOTc0MzE=", "number": 191, "title": "Git tags missing", "user": {"login": "toabctl", "id": 276317, "node_id": "MDQ6VXNlcjI3NjMxNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/276317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toabctl", "html_url": "https://github.com/toabctl", "followers_url": "https://api.github.com/users/toabctl/followers", "following_url": "https://api.github.com/users/toabctl/following{/other_user}", "gists_url": "https://api.github.com/users/toabctl/gists{/gist_id}", "starred_url": "https://api.github.com/users/toabctl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toabctl/subscriptions", "organizations_url": "https://api.github.com/users/toabctl/orgs", "repos_url": "https://api.github.com/users/toabctl/repos", "events_url": "https://api.github.com/users/toabctl/events{/privacy}", "received_events_url": "https://api.github.com/users/toabctl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-10T11:45:32Z", "updated_at": "2016-08-10T15:26:51Z", "closed_at": "2016-08-10T15:26:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "On pypi is already version 0.9.3 but the corresponding git tag is not here.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/alecthomas/voluptuous/issues/189", "repository_url": "https://api.github.com/repos/alecthomas/voluptuous", "labels_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/189/comments", "events_url": "https://api.github.com/repos/alecthomas/voluptuous/issues/189/events", "html_url": "https://github.com/alecthomas/voluptuous/issues/189", "id": 168546085, "node_id": "MDU6SXNzdWUxNjg1NDYwODU=", "number": 189, "title": "Problems installing voluptuous", "user": {"login": "balloob", "id": 1444314, "node_id": "MDQ6VXNlcjE0NDQzMTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1444314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/balloob", "html_url": "https://github.com/balloob", "followers_url": "https://api.github.com/users/balloob/followers", "following_url": "https://api.github.com/users/balloob/following{/other_user}", "gists_url": "https://api.github.com/users/balloob/gists{/gist_id}", "starred_url": "https://api.github.com/users/balloob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/balloob/subscriptions", "organizations_url": "https://api.github.com/users/balloob/orgs", "repos_url": "https://api.github.com/users/balloob/repos", "events_url": "https://api.github.com/users/balloob/events{/privacy}", "received_events_url": "https://api.github.com/users/balloob/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-01T00:10:14Z", "updated_at": "2016-08-01T03:37:30Z", "closed_at": "2016-08-01T03:17:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "At [Home Assistant](https://github.com/home-assistant/home-assistant) we use voluptuous and it is awesome. Thanks for all the work on this.\n\nWe've just released a new version which included an upgraded voluptuous. We went from 0.8.9 to 0.9.1.\n\nWe've had several users report that their installation of Home Assistant is hanging at the installation of voluptuous. The issue started with 0.9.0. I don't have a repo of the problem but we did find a workaround: installing `flake8` before installing `voluptuous` makes the problem disappear. \n\nLooking at the diffs between those versions, [these lines in setup.py](https://github.com/alecthomas/voluptuous/blob/master/setup.py#L54-L56) are probably the culprit:\n\n``` python\n    setup_requires=[\n        'flake8',\n    ]\n```\n\nI did not want to submit a PR removing these lines without knowing the reasoning behind it. It looks to me that the lines can be removed because `tox` [is setup](https://github.com/alecthomas/voluptuous/blob/master/tox.ini#L24) to install the dependency.\n", "performed_via_github_app": null, "score": 1.0}]}