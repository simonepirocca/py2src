{"total_count": 28, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/tmux-python/libtmux/issues/277", "repository_url": "https://api.github.com/repos/tmux-python/libtmux", "labels_url": "https://api.github.com/repos/tmux-python/libtmux/issues/277/labels{/name}", "comments_url": "https://api.github.com/repos/tmux-python/libtmux/issues/277/comments", "events_url": "https://api.github.com/repos/tmux-python/libtmux/issues/277/events", "html_url": "https://github.com/tmux-python/libtmux/issues/277", "id": 613389303, "node_id": "MDU6SXNzdWU2MTMzODkzMDM=", "number": 277, "title": "Deprecation warning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.9 it will stop working", "user": {"login": "d1618033", "id": 4275273, "node_id": "MDQ6VXNlcjQyNzUyNzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/4275273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d1618033", "html_url": "https://github.com/d1618033", "followers_url": "https://api.github.com/users/d1618033/followers", "following_url": "https://api.github.com/users/d1618033/following{/other_user}", "gists_url": "https://api.github.com/users/d1618033/gists{/gist_id}", "starred_url": "https://api.github.com/users/d1618033/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d1618033/subscriptions", "organizations_url": "https://api.github.com/users/d1618033/orgs", "repos_url": "https://api.github.com/users/d1618033/repos", "events_url": "https://api.github.com/users/d1618033/events{/privacy}", "received_events_url": "https://api.github.com/users/d1618033/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-06T15:00:15Z", "updated_at": "2020-08-16T13:42:40Z", "closed_at": "2020-08-16T13:42:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get the above deprecation warning when importing libtmux\r\n\r\n```\r\n  import libtmux\r\n  File \"env/lib/python3.8/site-packages/libtmux/__init__.py\", line 16, in <module>\r\n    from .pane import Pane\r\n  File \"env/lib/python3.8/site-packages/libtmux/pane.py\", line 13, in <module>\r\n    from .common import TmuxMappingObject, TmuxRelationalObject\r\n  File \"env/lib/python3.8/site-packages/libtmux/common.py\", line 221, in <module>\r\n    class TmuxMappingObject(collections.MutableMapping):\r\n  File \"/usr/lib/python3.8/collections/__init__.py\", line 49, in __getattr__\r\n    warnings.warn(\"Using or importing the ABCs from 'collections' instead \"\r\nDeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.9 it will stop working\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tmux-python/libtmux/issues/230", "repository_url": "https://api.github.com/repos/tmux-python/libtmux", "labels_url": "https://api.github.com/repos/tmux-python/libtmux/issues/230/labels{/name}", "comments_url": "https://api.github.com/repos/tmux-python/libtmux/issues/230/comments", "events_url": "https://api.github.com/repos/tmux-python/libtmux/issues/230/events", "html_url": "https://github.com/tmux-python/libtmux/issues/230", "id": 490482967, "node_id": "MDU6SXNzdWU0OTA0ODI5Njc=", "number": 230, "title": "libtmux.Server() creating new server rather than connecting to existing one.", "user": {"login": "LoadingCyclone", "id": 22184996, "node_id": "MDQ6VXNlcjIyMTg0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/22184996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LoadingCyclone", "html_url": "https://github.com/LoadingCyclone", "followers_url": "https://api.github.com/users/LoadingCyclone/followers", "following_url": "https://api.github.com/users/LoadingCyclone/following{/other_user}", "gists_url": "https://api.github.com/users/LoadingCyclone/gists{/gist_id}", "starred_url": "https://api.github.com/users/LoadingCyclone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LoadingCyclone/subscriptions", "organizations_url": "https://api.github.com/users/LoadingCyclone/orgs", "repos_url": "https://api.github.com/users/LoadingCyclone/repos", "events_url": "https://api.github.com/users/LoadingCyclone/events{/privacy}", "received_events_url": "https://api.github.com/users/LoadingCyclone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-06T19:16:14Z", "updated_at": "2019-09-06T20:10:56Z", "closed_at": "2019-09-06T20:10:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! I have a python script that is running inside of a tmux session. This runs and creates a tmux session. However when I run it everything works great except the new session is created on a seperate tmux server. When I run `ps -e | grep tmux` I have 1 instance of a tmux: client and two tmux: server. Is there any solution to this? Could I give the PID to the Server() function to have it connect like that?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tmux-python/libtmux/issues/188", "repository_url": "https://api.github.com/repos/tmux-python/libtmux", "labels_url": "https://api.github.com/repos/tmux-python/libtmux/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/tmux-python/libtmux/issues/188/comments", "events_url": "https://api.github.com/repos/tmux-python/libtmux/issues/188/events", "html_url": "https://github.com/tmux-python/libtmux/issues/188", "id": 415638575, "node_id": "MDU6SXNzdWU0MTU2Mzg1NzU=", "number": 188, "title": "'capture-pane' return only the first line in some case", "user": {"login": "rockandska", "id": 24546770, "node_id": "MDQ6VXNlcjI0NTQ2Nzcw", "avatar_url": "https://avatars0.githubusercontent.com/u/24546770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rockandska", "html_url": "https://github.com/rockandska", "followers_url": "https://api.github.com/users/rockandska/followers", "following_url": "https://api.github.com/users/rockandska/following{/other_user}", "gists_url": "https://api.github.com/users/rockandska/gists{/gist_id}", "starred_url": "https://api.github.com/users/rockandska/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rockandska/subscriptions", "organizations_url": "https://api.github.com/users/rockandska/orgs", "repos_url": "https://api.github.com/users/rockandska/repos", "events_url": "https://api.github.com/users/rockandska/events{/privacy}", "received_events_url": "https://api.github.com/users/rockandska/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-28T14:03:07Z", "updated_at": "2019-03-27T09:08:43Z", "closed_at": "2019-03-27T09:08:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "HI,\r\n\r\nDid i miss something ?\r\nThis little script works with the python console, but display the 'send_keys' parameter instead of executing it.\r\n\r\n```\r\nbash-4.4$ cat test.py\r\nimport libtmux\r\n\r\ntmux_session_name = 'test'\r\n\r\nserver = libtmux.Server()\r\nsession = server.new_session(tmux_session_name)\r\nwindow = session.attached_window\r\npane = window.split_window(shell='PROMPT_COMMAND= bash --norc --noprofile')\r\npane.send_keys('cowsay hello')\r\nprint('\\n'.join(pane.cmd('capture-pane', '-p').stdout))\r\nbash-4.4$ \r\nbash-4.4$ python test.py\r\nbash-4.4$  cowsay hello\r\nbash-4.4$ \r\nbash-4.4$ pkill tmux\r\nbash-4.4$ \r\nbash-4.4$ python\r\nPython 2.7.15rc1 (default, Nov 12 2018, 14:31:15) \r\n[GCC 7.3.0] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import libtmux\r\n>>> tmux_session_name = 'test'\r\n>>> server = libtmux.Server()\r\n>>> session = server.new_session(tmux_session_name)\r\n>>> window = session.attached_window\r\n>>> pane = window.split_window(shell='PROMPT_COMMAND= bash --norc --noprofile')\r\n>>> pane.send_keys('cowsay hello')\r\n>>> print('\\n'.join(pane.cmd('capture-pane', '-p').stdout))\r\nbash-4.4$  cowsay hello\r\n _______\r\n< hello >\r\n -------\r\n        \\   ^__^\r\n         \\  (oo)\\_______\r\n            (__)\\       )\\/\\\r\n                ||----w |\r\n                ||     ||\r\nbash-4.4$\r\n>>> \r\nbash-4.4$ \r\n```\r\n\r\nRegards,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tmux-python/libtmux/issues/130", "repository_url": "https://api.github.com/repos/tmux-python/libtmux", "labels_url": "https://api.github.com/repos/tmux-python/libtmux/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/tmux-python/libtmux/issues/130/comments", "events_url": "https://api.github.com/repos/tmux-python/libtmux/issues/130/events", "html_url": "https://github.com/tmux-python/libtmux/issues/130", "id": 338880860, "node_id": "MDU6SXNzdWUzMzg4ODA4NjA=", "number": 130, "title": "respawn-pane not refreshing pane_tty", "user": {"login": "GuillaumeGETTE", "id": 19366464, "node_id": "MDQ6VXNlcjE5MzY2NDY0", "avatar_url": "https://avatars2.githubusercontent.com/u/19366464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGETTE", "html_url": "https://github.com/GuillaumeGETTE", "followers_url": "https://api.github.com/users/GuillaumeGETTE/followers", "following_url": "https://api.github.com/users/GuillaumeGETTE/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGETTE/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGETTE/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGETTE/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGETTE/orgs", "repos_url": "https://api.github.com/users/GuillaumeGETTE/repos", "events_url": "https://api.github.com/users/GuillaumeGETTE/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGETTE/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-06T10:03:28Z", "updated_at": "2018-07-09T13:42:34Z", "closed_at": "2018-07-09T13:42:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "The tmux respawn-pane command changed the tty of the pane, but pane['pane_tty'] stays the same before and after the respawn-pane.\r\n\r\n``` python\r\nprint(cmd_daemux.pane['pane_tty'])\r\ncmd_daemux.pane.cmd('respawn-pane', '-k', cmd_daemux.cmd)\r\nprint(cmd_daemux.pane['pane_tty'])\r\n```\r\nI'm running tmux 2.7 on ArchLinux ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tmux-python/libtmux/issues/117", "repository_url": "https://api.github.com/repos/tmux-python/libtmux", "labels_url": "https://api.github.com/repos/tmux-python/libtmux/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/tmux-python/libtmux/issues/117/comments", "events_url": "https://api.github.com/repos/tmux-python/libtmux/issues/117/events", "html_url": "https://github.com/tmux-python/libtmux/issues/117", "id": 318639256, "node_id": "MDU6SXNzdWUzMTg2MzkyNTY=", "number": 117, "title": "OS X giving \"no current client\" when using rename_session", "user": {"login": "tony", "id": 26336, "node_id": "MDQ6VXNlcjI2MzM2", "avatar_url": "https://avatars0.githubusercontent.com/u/26336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tony", "html_url": "https://github.com/tony", "followers_url": "https://api.github.com/users/tony/followers", "following_url": "https://api.github.com/users/tony/following{/other_user}", "gists_url": "https://api.github.com/users/tony/gists{/gist_id}", "starred_url": "https://api.github.com/users/tony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tony/subscriptions", "organizations_url": "https://api.github.com/users/tony/orgs", "repos_url": "https://api.github.com/users/tony/repos", "events_url": "https://api.github.com/users/tony/events{/privacy}", "received_events_url": "https://api.github.com/users/tony/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-28T14:03:25Z", "updated_at": "2018-07-04T00:23:46Z", "closed_at": "2018-04-28T14:06:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The tmux tests will raise \"no current client\" because we are raising exceptions if stderr is returned.\r\n\r\nhttps://github.com/tmux-python/libtmux/blob/v0.8.0/libtmux/session.py#L128\r\n\r\nRelated links:\r\n\r\n- https://www.mail-archive.com/tech@openbsd.org/msg45186.html\r\n- https://marc.info/?l=openbsd-cvs&m=152183263526828&w=2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tmux-python/libtmux/issues/108", "repository_url": "https://api.github.com/repos/tmux-python/libtmux", "labels_url": "https://api.github.com/repos/tmux-python/libtmux/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/tmux-python/libtmux/issues/108/comments", "events_url": "https://api.github.com/repos/tmux-python/libtmux/issues/108/events", "html_url": "https://github.com/tmux-python/libtmux/issues/108", "id": 304183951, "node_id": "MDU6SXNzdWUzMDQxODM5NTE=", "number": 108, "title": "Initial Update", "user": {"login": "pyup-bot", "id": 16239342, "node_id": "MDQ6VXNlcjE2MjM5MzQy", "avatar_url": "https://avatars0.githubusercontent.com/u/16239342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pyup-bot", "html_url": "https://github.com/pyup-bot", "followers_url": "https://api.github.com/users/pyup-bot/followers", "following_url": "https://api.github.com/users/pyup-bot/following{/other_user}", "gists_url": "https://api.github.com/users/pyup-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/pyup-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pyup-bot/subscriptions", "organizations_url": "https://api.github.com/users/pyup-bot/orgs", "repos_url": "https://api.github.com/users/pyup-bot/repos", "events_url": "https://api.github.com/users/pyup-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/pyup-bot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-11T19:02:19Z", "updated_at": "2018-03-11T19:21:29Z", "closed_at": "2018-03-11T19:21:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The bot created this issue to inform you that pyup.io has been set up on this repo.\nOnce you have closed it, the bot will open pull requests for updates as soon as they are available.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tmux-python/libtmux/issues/107", "repository_url": "https://api.github.com/repos/tmux-python/libtmux", "labels_url": "https://api.github.com/repos/tmux-python/libtmux/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/tmux-python/libtmux/issues/107/comments", "events_url": "https://api.github.com/repos/tmux-python/libtmux/issues/107/events", "html_url": "https://github.com/tmux-python/libtmux/issues/107", "id": 303136185, "node_id": "MDU6SXNzdWUzMDMxMzYxODU=", "number": 107, "title": "ModuleNotFoundError: No module named 'libtmux'", "user": {"login": "simonj-smith", "id": 9284182, "node_id": "MDQ6VXNlcjkyODQxODI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9284182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonj-smith", "html_url": "https://github.com/simonj-smith", "followers_url": "https://api.github.com/users/simonj-smith/followers", "following_url": "https://api.github.com/users/simonj-smith/following{/other_user}", "gists_url": "https://api.github.com/users/simonj-smith/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonj-smith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonj-smith/subscriptions", "organizations_url": "https://api.github.com/users/simonj-smith/orgs", "repos_url": "https://api.github.com/users/simonj-smith/repos", "events_url": "https://api.github.com/users/simonj-smith/events{/privacy}", "received_events_url": "https://api.github.com/users/simonj-smith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-07T15:11:20Z", "updated_at": "2018-03-07T15:17:06Z", "closed_at": "2018-03-07T15:17:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting the error ModuleNotFoundError: No module named 'libtmux' when trying to run. I definitely have the module installed but still get the error.\r\nHas anyone else had this issue?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tmux-python/libtmux/issues/88", "repository_url": "https://api.github.com/repos/tmux-python/libtmux", "labels_url": "https://api.github.com/repos/tmux-python/libtmux/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/tmux-python/libtmux/issues/88/comments", "events_url": "https://api.github.com/repos/tmux-python/libtmux/issues/88/events", "html_url": "https://github.com/tmux-python/libtmux/issues/88", "id": 284594667, "node_id": "MDU6SXNzdWUyODQ1OTQ2Njc=", "number": 88, "title": "Do not send-keys literally by default", "user": {"login": "ritiek", "id": 20314742, "node_id": "MDQ6VXNlcjIwMzE0NzQy", "avatar_url": "https://avatars1.githubusercontent.com/u/20314742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ritiek", "html_url": "https://github.com/ritiek", "followers_url": "https://api.github.com/users/ritiek/followers", "following_url": "https://api.github.com/users/ritiek/following{/other_user}", "gists_url": "https://api.github.com/users/ritiek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ritiek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ritiek/subscriptions", "organizations_url": "https://api.github.com/users/ritiek/orgs", "repos_url": "https://api.github.com/users/ritiek/repos", "events_url": "https://api.github.com/users/ritiek/events{/privacy}", "received_events_url": "https://api.github.com/users/ritiek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 809269619, "node_id": "MDU6TGFiZWw4MDkyNjk2MTk=", "url": "https://api.github.com/repos/tmux-python/libtmux/labels/pinned", "name": "pinned", "color": "1d108c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-26T18:41:07Z", "updated_at": "2019-01-26T16:17:59Z", "closed_at": "2019-01-26T16:17:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I noticed that libtmux sends keys to a window pane literally. A minimal reproduction:\r\n```python\r\nimport libtmux\r\n\r\nserver = libtmux.Server()\r\nsession = server.new_session('happy_session')\r\nwindow = session.new_window('happy_window')\r\npane = window.attached_pane\r\n\r\n# instead of KeyboardInterrupt, libtmux sends 'C-c'\r\npane.send_keys('C-c')\r\n```\r\n\r\ntmux uses `-l` to specifiy if the keys are to be sent literally:\r\n```bash\r\n# not literally\r\ntmux send-keys -t happy_session C-c\r\n\r\n# literally\r\ntmux send-keys -l -t happy_session C-c\r\n```\r\n\r\nIt would be nice if there were an option to override this behavior in libtmux and preferably set as defaults `Pane.send_keys(literal=False)` just as in tmux.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tmux-python/libtmux/issues/81", "repository_url": "https://api.github.com/repos/tmux-python/libtmux", "labels_url": "https://api.github.com/repos/tmux-python/libtmux/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/tmux-python/libtmux/issues/81/comments", "events_url": "https://api.github.com/repos/tmux-python/libtmux/issues/81/events", "html_url": "https://github.com/tmux-python/libtmux/issues/81", "id": 272812744, "node_id": "MDU6SXNzdWUyNzI4MTI3NDQ=", "number": 81, "title": "Initial Update", "user": {"login": "pyup-bot", "id": 16239342, "node_id": "MDQ6VXNlcjE2MjM5MzQy", "avatar_url": "https://avatars0.githubusercontent.com/u/16239342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pyup-bot", "html_url": "https://github.com/pyup-bot", "followers_url": "https://api.github.com/users/pyup-bot/followers", "following_url": "https://api.github.com/users/pyup-bot/following{/other_user}", "gists_url": "https://api.github.com/users/pyup-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/pyup-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pyup-bot/subscriptions", "organizations_url": "https://api.github.com/users/pyup-bot/orgs", "repos_url": "https://api.github.com/users/pyup-bot/repos", "events_url": "https://api.github.com/users/pyup-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/pyup-bot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-10T03:57:26Z", "updated_at": "2017-11-10T05:32:23Z", "closed_at": "2017-11-10T05:32:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi \ud83d\udc4a\n\nThis is my first visit to this fine repo, but it seems you have been working hard to keep all dependencies updated so far.\n\nOnce you have closed this issue, I'll create separate pull requests for every update as soon as I find one.\n\nThat's it for now!\n\nHappy merging! \ud83e\udd16\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tmux-python/libtmux/issues/80", "repository_url": "https://api.github.com/repos/tmux-python/libtmux", "labels_url": "https://api.github.com/repos/tmux-python/libtmux/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/tmux-python/libtmux/issues/80/comments", "events_url": "https://api.github.com/repos/tmux-python/libtmux/issues/80/events", "html_url": "https://github.com/tmux-python/libtmux/issues/80", "id": 272793532, "node_id": "MDU6SXNzdWUyNzI3OTM1MzI=", "number": 80, "title": "Support chain commands / viewing command string by default?", "user": {"login": "tony", "id": 26336, "node_id": "MDQ6VXNlcjI2MzM2", "avatar_url": "https://avatars0.githubusercontent.com/u/26336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tony", "html_url": "https://github.com/tony", "followers_url": "https://api.github.com/users/tony/followers", "following_url": "https://api.github.com/users/tony/following{/other_user}", "gists_url": "https://api.github.com/users/tony/gists{/gist_id}", "starred_url": "https://api.github.com/users/tony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tony/subscriptions", "organizations_url": "https://api.github.com/users/tony/orgs", "repos_url": "https://api.github.com/users/tony/repos", "events_url": "https://api.github.com/users/tony/events{/privacy}", "received_events_url": "https://api.github.com/users/tony/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 747107963, "node_id": "MDU6TGFiZWw3NDcxMDc5NjM=", "url": "https://api.github.com/repos/tmux-python/libtmux/labels/stale", "name": "stale", "color": "ffffff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-10T01:47:44Z", "updated_at": "2018-01-16T03:04:36Z", "closed_at": "2018-01-16T03:04:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://github.com/tony/libtmux/pull/79#issuecomment-343349939\r\n\r\nThis could have a potential break in the API, commands would be required to have `.execute()` to run.\r\n\r\nOn the other hand, you would be able to view and even alter the raw string output of the command before running it. Highly valuable for debugging.\r\n\r\nBut it gets better, this could allow the use of chained commands separated by semicolons. This could substantially improve the performance of libtmux and tmuxp downstream.\r\n\r\nAny feedback would be appreciated. I don't like breaking API's, but this seems like one that could be worth the investment.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tmux-python/libtmux/issues/78", "repository_url": "https://api.github.com/repos/tmux-python/libtmux", "labels_url": "https://api.github.com/repos/tmux-python/libtmux/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/tmux-python/libtmux/issues/78/comments", "events_url": "https://api.github.com/repos/tmux-python/libtmux/issues/78/events", "html_url": "https://github.com/tmux-python/libtmux/issues/78", "id": 272665746, "node_id": "MDU6SXNzdWUyNzI2NjU3NDY=", "number": 78, "title": "Refactor server/session/window/pane updates", "user": {"login": "tony", "id": 26336, "node_id": "MDQ6VXNlcjI2MzM2", "avatar_url": "https://avatars0.githubusercontent.com/u/26336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tony", "html_url": "https://github.com/tony", "followers_url": "https://api.github.com/users/tony/followers", "following_url": "https://api.github.com/users/tony/following{/other_user}", "gists_url": "https://api.github.com/users/tony/gists{/gist_id}", "starred_url": "https://api.github.com/users/tony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tony/subscriptions", "organizations_url": "https://api.github.com/users/tony/orgs", "repos_url": "https://api.github.com/users/tony/repos", "events_url": "https://api.github.com/users/tony/events{/privacy}", "received_events_url": "https://api.github.com/users/tony/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 747107963, "node_id": "MDU6TGFiZWw3NDcxMDc5NjM=", "url": "https://api.github.com/repos/tmux-python/libtmux/labels/stale", "name": "stale", "color": "ffffff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-09T18:11:14Z", "updated_at": "2018-01-15T20:33:43Z", "closed_at": "2018-01-15T20:33:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Creating new-windows/sessions can ``-P`` updated information as of recent tmux versions. \r\n\r\nAs of right now, the refreshing of session/window/pane information isn't very performant. There is room to refactor safely since the test bed has good coverage", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tmux-python/libtmux/issues/77", "repository_url": "https://api.github.com/repos/tmux-python/libtmux", "labels_url": "https://api.github.com/repos/tmux-python/libtmux/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/tmux-python/libtmux/issues/77/comments", "events_url": "https://api.github.com/repos/tmux-python/libtmux/issues/77/events", "html_url": "https://github.com/tmux-python/libtmux/issues/77", "id": 272665230, "node_id": "MDU6SXNzdWUyNzI2NjUyMzA=", "number": 77, "title": "Normalize how commands work, debugging", "user": {"login": "tony", "id": 26336, "node_id": "MDQ6VXNlcjI2MzM2", "avatar_url": "https://avatars0.githubusercontent.com/u/26336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tony", "html_url": "https://github.com/tony", "followers_url": "https://api.github.com/users/tony/followers", "following_url": "https://api.github.com/users/tony/following{/other_user}", "gists_url": "https://api.github.com/users/tony/gists{/gist_id}", "starred_url": "https://api.github.com/users/tony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tony/subscriptions", "organizations_url": "https://api.github.com/users/tony/orgs", "repos_url": "https://api.github.com/users/tony/repos", "events_url": "https://api.github.com/users/tony/events{/privacy}", "received_events_url": "https://api.github.com/users/tony/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 747107963, "node_id": "MDU6TGFiZWw3NDcxMDc5NjM=", "url": "https://api.github.com/repos/tmux-python/libtmux/labels/stale", "name": "stale", "color": "ffffff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-09T18:09:38Z", "updated_at": "2018-01-15T20:33:42Z", "closed_at": "2018-01-15T20:33:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Restructure how commands are passed in\r\n\r\nThis will probably be by creating a command factory where the command is built, then an execute() for it. But to the user in a tmux object, ``.cmd`` should still execute immediately, ``_cmd()`` could leave an object where the user can see the exact command tmux is running before hand.\r\n\r\nThere should be more options to toggle debug settings", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tmux-python/libtmux/issues/69", "repository_url": "https://api.github.com/repos/tmux-python/libtmux", "labels_url": "https://api.github.com/repos/tmux-python/libtmux/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/tmux-python/libtmux/issues/69/comments", "events_url": "https://api.github.com/repos/tmux-python/libtmux/issues/69/events", "html_url": "https://github.com/tmux-python/libtmux/issues/69", "id": 253788814, "node_id": "MDU6SXNzdWUyNTM3ODg4MTQ=", "number": 69, "title": "setting window name doesn't work on tmux 2.5", "user": {"login": "aragaer", "id": 53614, "node_id": "MDQ6VXNlcjUzNjE0", "avatar_url": "https://avatars1.githubusercontent.com/u/53614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aragaer", "html_url": "https://github.com/aragaer", "followers_url": "https://api.github.com/users/aragaer/followers", "following_url": "https://api.github.com/users/aragaer/following{/other_user}", "gists_url": "https://api.github.com/users/aragaer/gists{/gist_id}", "starred_url": "https://api.github.com/users/aragaer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aragaer/subscriptions", "organizations_url": "https://api.github.com/users/aragaer/orgs", "repos_url": "https://api.github.com/users/aragaer/repos", "events_url": "https://api.github.com/users/aragaer/events{/privacy}", "received_events_url": "https://api.github.com/users/aragaer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 747107963, "node_id": "MDU6TGFiZWw3NDcxMDc5NjM=", "url": "https://api.github.com/repos/tmux-python/libtmux/labels/stale", "name": "stale", "color": "ffffff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-08-29T20:12:32Z", "updated_at": "2017-11-18T06:32:14Z", "closed_at": "2017-11-18T06:32:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "```$ python\r\nPython 3.6.1 (default, Aug 23 2017, 20:07:59) \r\n[GCC 5.4.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import libtmux\r\n>>> server = libtmux.Server()\r\n>>> server.new_session(session_name=\"pa\")\r\nSession($0 pa)\r\n>>> session = server.find_where({\"session_name\":\"pa\"})\r\n>>> session\r\nSession($0 pa)\r\n>>> session.new_window(window_name=\"telegram\")\r\nWindow(@1 1:telegram, Session($0 pa))\r\n>>> window = session.find_where({\"window_name\":\"telegram\"})\r\n>>> window\r\n>>> window is None\r\nTrue\r\n```\r\n\r\nExplicitly calling `rename_window` works:\r\n```\r\n>>> session.windows[1].rename_window(\"telegram\")\r\nWindow(@1 1:telegram, Session($0 pa))\r\n>>> session.find_where({\"window_name\":\"telegram\"})\r\nWindow(@1 1:telegram, Session($0 pa))\r\n```\r\nBut not when called \"too soon\":\r\n```\r\n>>> window=session.new_window(); window.rename_window(\"test\")\r\nWindow(@2 2:aragaer@netbook:~/Projects/pa/router, Session($0 pa))\r\n>>> session.find_where({\"window_name\":\"test\"})\r\n```\r\n\r\nI don't see any errors in logging or tmux stderr. However windows are not actually renamed - `tmux list-windows` shows generic names.\r\n\r\nTrying to manually run the command I'm getting the following error:\r\n```\r\n/usr/bin/tmux new-window -P -c/home/aragaer/Projects/pa/tg -F\"#{session_name}#{session_id}#{window_id}#{window_name}#{window_width}#{window_height}#{window_layout}#{window_panes}#{window_index}#{window_flags}#{window_active}#{window_bell_flag}#{window_activity_flag}#{window_silence_flag}\" -ntelegram -t$0:\r\ncan't find session bash\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tmux-python/libtmux/issues/67", "repository_url": "https://api.github.com/repos/tmux-python/libtmux", "labels_url": "https://api.github.com/repos/tmux-python/libtmux/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/tmux-python/libtmux/issues/67/comments", "events_url": "https://api.github.com/repos/tmux-python/libtmux/issues/67/events", "html_url": "https://github.com/tmux-python/libtmux/issues/67", "id": 250773337, "node_id": "MDU6SXNzdWUyNTA3NzMzMzc=", "number": 67, "title": "Server.has_session() erroneously reports session exists with tmux 2.5", "user": {"login": "jlargentaye", "id": 6608774, "node_id": "MDQ6VXNlcjY2MDg3NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6608774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlargentaye", "html_url": "https://github.com/jlargentaye", "followers_url": "https://api.github.com/users/jlargentaye/followers", "following_url": "https://api.github.com/users/jlargentaye/following{/other_user}", "gists_url": "https://api.github.com/users/jlargentaye/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlargentaye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlargentaye/subscriptions", "organizations_url": "https://api.github.com/users/jlargentaye/orgs", "repos_url": "https://api.github.com/users/jlargentaye/repos", "events_url": "https://api.github.com/users/jlargentaye/events{/privacy}", "received_events_url": "https://api.github.com/users/jlargentaye/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 380502461, "node_id": "MDU6TGFiZWwzODA1MDI0NjE=", "url": "https://api.github.com/repos/tmux-python/libtmux/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 747107963, "node_id": "MDU6TGFiZWw3NDcxMDc5NjM=", "url": "https://api.github.com/repos/tmux-python/libtmux/labels/stale", "name": "stale", "color": "ffffff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-08-16T22:02:40Z", "updated_at": "2017-11-18T06:32:13Z", "closed_at": "2017-11-18T06:32:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "tmux from MacPorts (on macOS 10.12.6), recently updated to tmux 2.5.\r\n\r\nTmuxp erroneously reports the session already exists when trying to load the session.\r\n\r\nSome light debugging points to libtmux/server.py:Server.has_sessions() does not account for 'tmux has-session' now responds with 'no current session'.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tmux-python/libtmux/issues/64", "repository_url": "https://api.github.com/repos/tmux-python/libtmux", "labels_url": "https://api.github.com/repos/tmux-python/libtmux/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/tmux-python/libtmux/issues/64/comments", "events_url": "https://api.github.com/repos/tmux-python/libtmux/issues/64/events", "html_url": "https://github.com/tmux-python/libtmux/issues/64", "id": 248803823, "node_id": "MDU6SXNzdWUyNDg4MDM4MjM=", "number": 64, "title": "tmux_cmd doesn't include kwargs", "user": {"login": "askedrelic", "id": 130111, "node_id": "MDQ6VXNlcjEzMDExMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/130111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/askedrelic", "html_url": "https://github.com/askedrelic", "followers_url": "https://api.github.com/users/askedrelic/followers", "following_url": "https://api.github.com/users/askedrelic/following{/other_user}", "gists_url": "https://api.github.com/users/askedrelic/gists{/gist_id}", "starred_url": "https://api.github.com/users/askedrelic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/askedrelic/subscriptions", "organizations_url": "https://api.github.com/users/askedrelic/orgs", "repos_url": "https://api.github.com/users/askedrelic/repos", "events_url": "https://api.github.com/users/askedrelic/events{/privacy}", "received_events_url": "https://api.github.com/users/askedrelic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-08-08T18:24:17Z", "updated_at": "2017-08-19T08:04:39Z", "closed_at": "2017-08-19T08:04:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In tmux_cmd https://github.com/tony/libtmux/blob/189114cde7e125a482ab984749637fa44d66b284/libtmux/common.py#L132\r\n\r\nthe func receives args and kwargs but only args are added to form the cmd str\r\nhttps://github.com/tony/libtmux/blob/189114cde7e125a482ab984749637fa44d66b284/libtmux/common.py#L176\r\n\r\nHere is some IPDB output showing this, from tracking down https://github.com/tony/tmuxp/issues/184\r\n```\r\n# Reach tmux_cmd() with args and kwargs\r\n> /usr/local/var/pyenv/versions/2.7.11/lib/python2.7/site-packages/libtmux/server.py(99)cmd()\r\n     97                 raise ValueError('Server.colors must equal 88 or 256')\r\n     98\r\n---> 99         return tmux_cmd(*args, **kwargs)\r\n    100\r\n    101     def _list_sessions(self):\r\n\r\nipdb> args\r\nself = <libtmux.server.Server object at 0x10fd11350>\r\nargs = [u'-2', 'set-environment', 'FOO', 'bar']\r\nkwargs = {u'-t': u'$8'}\r\n\r\n# Reach cmd and kwargs not included\r\nipdb>\r\n> /usr/local/var/pyenv/versions/2.7.11/lib/python2.7/site-packages/libtmux/common.py(179)__init__()\r\n    177         cmd = [str(c) for c in cmd]\r\n    178\r\n--> 179         self.cmd = cmd\r\n    180\r\n    181         try:\r\n\r\nipdb> cmd\r\n['/usr/local/bin/tmux', '-2', 'set-environment', 'FOO', 'bar']\r\n```\r\n\r\nSo this seems pretty big; any command using tmux_cmd would apply in the current session instead of the target session. Maybe it hasn't been noticed since a common use case isn't use tmuxp inside of an existing TMUX session?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tmux-python/libtmux/issues/63", "repository_url": "https://api.github.com/repos/tmux-python/libtmux", "labels_url": "https://api.github.com/repos/tmux-python/libtmux/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/tmux-python/libtmux/issues/63/comments", "events_url": "https://api.github.com/repos/tmux-python/libtmux/issues/63/events", "html_url": "https://github.com/tmux-python/libtmux/issues/63", "id": 248583980, "node_id": "MDU6SXNzdWUyNDg1ODM5ODA=", "number": 63, "title": "Looking for maintainers", "user": {"login": "tony", "id": 26336, "node_id": "MDQ6VXNlcjI2MzM2", "avatar_url": "https://avatars0.githubusercontent.com/u/26336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tony", "html_url": "https://github.com/tony", "followers_url": "https://api.github.com/users/tony/followers", "following_url": "https://api.github.com/users/tony/following{/other_user}", "gists_url": "https://api.github.com/users/tony/gists{/gist_id}", "starred_url": "https://api.github.com/users/tony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tony/subscriptions", "organizations_url": "https://api.github.com/users/tony/orgs", "repos_url": "https://api.github.com/users/tony/repos", "events_url": "https://api.github.com/users/tony/events{/privacy}", "received_events_url": "https://api.github.com/users/tony/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 747107963, "node_id": "MDU6TGFiZWw3NDcxMDc5NjM=", "url": "https://api.github.com/repos/tmux-python/libtmux/labels/stale", "name": "stale", "color": "ffffff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-08T02:35:41Z", "updated_at": "2018-01-17T06:03:34Z", "closed_at": "2018-01-17T06:03:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See https://github.com/tony/tmuxp/issues/290\r\n\r\nWe're looking for some people to help with spare time, issues, QA'ing, and general maintenance.  Answer in the tmuxp issue if you're available to help out!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tmux-python/libtmux/issues/46", "repository_url": "https://api.github.com/repos/tmux-python/libtmux", "labels_url": "https://api.github.com/repos/tmux-python/libtmux/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/tmux-python/libtmux/issues/46/comments", "events_url": "https://api.github.com/repos/tmux-python/libtmux/issues/46/events", "html_url": "https://github.com/tmux-python/libtmux/issues/46", "id": 231839352, "node_id": "MDU6SXNzdWUyMzE4MzkzNTI=", "number": 46, "title": "Switch to MIT license", "user": {"login": "tony", "id": 26336, "node_id": "MDQ6VXNlcjI2MzM2", "avatar_url": "https://avatars0.githubusercontent.com/u/26336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tony", "html_url": "https://github.com/tony", "followers_url": "https://api.github.com/users/tony/followers", "following_url": "https://api.github.com/users/tony/following{/other_user}", "gists_url": "https://api.github.com/users/tony/gists{/gist_id}", "starred_url": "https://api.github.com/users/tony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tony/subscriptions", "organizations_url": "https://api.github.com/users/tony/orgs", "repos_url": "https://api.github.com/users/tony/repos", "events_url": "https://api.github.com/users/tony/events{/privacy}", "received_events_url": "https://api.github.com/users/tony/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 809269619, "node_id": "MDU6TGFiZWw4MDkyNjk2MTk=", "url": "https://api.github.com/repos/tmux-python/libtmux/labels/pinned", "name": "pinned", "color": "1d108c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2017-05-28T01:25:04Z", "updated_at": "2018-03-11T19:34:55Z", "closed_at": "2018-03-11T19:34:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "(See also https://github.com/tony/tmuxp/issues/264)\r\n\r\nThis project is currently licensed BSD 3-Clause.  Apologies if this causes any interruption.\r\n\r\nI would like to relicense the project under MIT.  If you agree to licensing your contribution(s) to libtmux under the MIT license, please reply.\r\n\r\n- [x] @kaushalmodi\r\n- [x] @tek\r\n- [ ] @huwenchao\r\n- [x] @gandelman-a\r\n- [x] @robled\r\n- [x] @dankrause\r\n- [x] @leezu\r\n- [x] @sloria\r\n- [x] @minijackson\r\n- [x] @geekli ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tmux-python/libtmux/issues/39", "repository_url": "https://api.github.com/repos/tmux-python/libtmux", "labels_url": "https://api.github.com/repos/tmux-python/libtmux/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/tmux-python/libtmux/issues/39/comments", "events_url": "https://api.github.com/repos/tmux-python/libtmux/issues/39/events", "html_url": "https://github.com/tmux-python/libtmux/issues/39", "id": 225552355, "node_id": "MDU6SXNzdWUyMjU1NTIzNTU=", "number": 39, "title": "Cannot start another Virtual Enviroment in tmux (locked to actual python's venv)", "user": {"login": "gascarcella", "id": 26383829, "node_id": "MDQ6VXNlcjI2MzgzODI5", "avatar_url": "https://avatars1.githubusercontent.com/u/26383829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gascarcella", "html_url": "https://github.com/gascarcella", "followers_url": "https://api.github.com/users/gascarcella/followers", "following_url": "https://api.github.com/users/gascarcella/following{/other_user}", "gists_url": "https://api.github.com/users/gascarcella/gists{/gist_id}", "starred_url": "https://api.github.com/users/gascarcella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gascarcella/subscriptions", "organizations_url": "https://api.github.com/users/gascarcella/orgs", "repos_url": "https://api.github.com/users/gascarcella/repos", "events_url": "https://api.github.com/users/gascarcella/events{/privacy}", "received_events_url": "https://api.github.com/users/gascarcella/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-01T23:21:40Z", "updated_at": "2017-05-02T05:09:09Z", "closed_at": "2017-05-01T23:53:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. I need to run this on Django. My django has his own virtual enviroment. I'm trying to start another python project (with his own virtual enviroment)in a tmux pane.\r\n\r\nI've tried to run source venv/bin/activate inside pane, but seems like it's locked to actual running python virtual enviroment.\r\n\r\nThis is my code:\r\n`def startproc(path):\r\n    tmux = libtmux.Server()\r\n    session = tmux.new_session('myproc', True, False, path)\r\n    pane = session.attached_pane\r\n    cmd = pane.send_keys('source ../venv/bin/activate')\r\n   cmd = pane.send_keys('python __main__.py start')\r\nreturn cmd`\r\n\r\nPaths are OK. \r\nWhen i connect to the tmux via terminal, i see an import error, since virtual enviroment isn't loaded.\r\nIf i try the exact same commands in tmux without python, everythings works ok.\r\n\r\nI any way to fix this?\r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tmux-python/libtmux/issues/36", "repository_url": "https://api.github.com/repos/tmux-python/libtmux", "labels_url": "https://api.github.com/repos/tmux-python/libtmux/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/tmux-python/libtmux/issues/36/comments", "events_url": "https://api.github.com/repos/tmux-python/libtmux/issues/36/events", "html_url": "https://github.com/tmux-python/libtmux/issues/36", "id": 221430531, "node_id": "MDU6SXNzdWUyMjE0MzA1MzE=", "number": 36, "title": "KeyError on session_id", "user": {"login": "ShadwDrgn", "id": 2470781, "node_id": "MDQ6VXNlcjI0NzA3ODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2470781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShadwDrgn", "html_url": "https://github.com/ShadwDrgn", "followers_url": "https://api.github.com/users/ShadwDrgn/followers", "following_url": "https://api.github.com/users/ShadwDrgn/following{/other_user}", "gists_url": "https://api.github.com/users/ShadwDrgn/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShadwDrgn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShadwDrgn/subscriptions", "organizations_url": "https://api.github.com/users/ShadwDrgn/orgs", "repos_url": "https://api.github.com/users/ShadwDrgn/repos", "events_url": "https://api.github.com/users/ShadwDrgn/events{/privacy}", "received_events_url": "https://api.github.com/users/ShadwDrgn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 747107963, "node_id": "MDU6TGFiZWw3NDcxMDc5NjM=", "url": "https://api.github.com/repos/tmux-python/libtmux/labels/stale", "name": "stale", "color": "ffffff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-04-13T00:59:18Z", "updated_at": "2019-11-13T06:35:13Z", "closed_at": "2017-11-18T06:32:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I created a tmux session called 'minecraft' and a window named 'server' manually. also there's a 'bash' window. anything i do to search panes or show _panes or list_panes() or attached_pane gives the same error:\r\n\r\n```python\r\n>>> import libtmux\r\n>>>\r\n>>> tmux = libtmux.Server()\r\n>>> ses = tmux.find_where({'session_name': 'minecraft'})\r\n>>> win = ses.find_where({'window_name': 'server'})\r\n>>> win\r\nWindow(@1 1:server, Session($0 minecraft))\r\n>>> win.attached_pane\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python2.7/dist-packages/libtmux/window.py\", line 441, in attached_pane\r\n    for pane in self._panes:\r\n  File \"/usr/local/lib/python2.7/dist-packages/libtmux/window.py\", line 466, in _panes\r\n    return self._list_panes()\r\n  File \"/usr/local/lib/python2.7/dist-packages/libtmux/window.py\", line 455, in _list_panes\r\n    p for p in panes if p['session_id'] == self.get('session_id')\r\nKeyError: u'session_id'\r\n>>>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tmux-python/libtmux/issues/29", "repository_url": "https://api.github.com/repos/tmux-python/libtmux", "labels_url": "https://api.github.com/repos/tmux-python/libtmux/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/tmux-python/libtmux/issues/29/comments", "events_url": "https://api.github.com/repos/tmux-python/libtmux/issues/29/events", "html_url": "https://github.com/tmux-python/libtmux/issues/29", "id": 210734517, "node_id": "MDU6SXNzdWUyMTA3MzQ1MTc=", "number": 29, "title": "libtmux fails to use send_keys with escape sequences for setting tmux pane title", "user": {"login": "mahescho", "id": 5101589, "node_id": "MDQ6VXNlcjUxMDE1ODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5101589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahescho", "html_url": "https://github.com/mahescho", "followers_url": "https://api.github.com/users/mahescho/followers", "following_url": "https://api.github.com/users/mahescho/following{/other_user}", "gists_url": "https://api.github.com/users/mahescho/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahescho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahescho/subscriptions", "organizations_url": "https://api.github.com/users/mahescho/orgs", "repos_url": "https://api.github.com/users/mahescho/repos", "events_url": "https://api.github.com/users/mahescho/events{/privacy}", "received_events_url": "https://api.github.com/users/mahescho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-28T09:41:51Z", "updated_at": "2017-03-04T10:59:55Z", "closed_at": "2017-03-04T10:59:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Every thing works as expected but sending escape sequences with \"send_keys\" method for setting the pane title where \"p\" is the pane object:\r\n\r\n`p.send_keys(\"printf '\\033]2;\" + names[i] + \"\\033\\\\'\")`\r\n\r\nwhen I do the same in a shell script with:\r\n\r\n`tmux send-keys -t 0 \" printf '\\033]2;%s\\033\\\\' 'A'\" C-m`\r\n\r\nit works as expected. How to do it with libtmux?\r\n\r\nFor some odd reason there is no \"rename-pane\" like \"rename-window\" in tmux.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tmux-python/libtmux/issues/27", "repository_url": "https://api.github.com/repos/tmux-python/libtmux", "labels_url": "https://api.github.com/repos/tmux-python/libtmux/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/tmux-python/libtmux/issues/27/comments", "events_url": "https://api.github.com/repos/tmux-python/libtmux/issues/27/events", "html_url": "https://github.com/tmux-python/libtmux/issues/27", "id": 209655357, "node_id": "MDU6SXNzdWUyMDk2NTUzNTc=", "number": 27, "title": "API to add copy buffer?", "user": {"login": "wqhhust", "id": 5955201, "node_id": "MDQ6VXNlcjU5NTUyMDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5955201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wqhhust", "html_url": "https://github.com/wqhhust", "followers_url": "https://api.github.com/users/wqhhust/followers", "following_url": "https://api.github.com/users/wqhhust/following{/other_user}", "gists_url": "https://api.github.com/users/wqhhust/gists{/gist_id}", "starred_url": "https://api.github.com/users/wqhhust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wqhhust/subscriptions", "organizations_url": "https://api.github.com/users/wqhhust/orgs", "repos_url": "https://api.github.com/users/wqhhust/repos", "events_url": "https://api.github.com/users/wqhhust/events{/privacy}", "received_events_url": "https://api.github.com/users/wqhhust/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 747107963, "node_id": "MDU6TGFiZWw3NDcxMDc5NjM=", "url": "https://api.github.com/repos/tmux-python/libtmux/labels/stale", "name": "stale", "color": "ffffff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-23T03:40:44Z", "updated_at": "2017-11-18T06:32:11Z", "closed_at": "2017-11-18T06:32:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "In my daily work, I need to run tens of command repeatedly, So it will be better to load the command from file into the copy buffer, then I could just select the command to run, instead of copy/paste from my file.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tmux-python/libtmux/issues/15", "repository_url": "https://api.github.com/repos/tmux-python/libtmux", "labels_url": "https://api.github.com/repos/tmux-python/libtmux/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/tmux-python/libtmux/issues/15/comments", "events_url": "https://api.github.com/repos/tmux-python/libtmux/issues/15/events", "html_url": "https://github.com/tmux-python/libtmux/issues/15", "id": 181220843, "node_id": "MDU6SXNzdWUxODEyMjA4NDM=", "number": 15, "title": "How to send a key to the pane?", "user": {"login": "niya3", "id": 1140412, "node_id": "MDQ6VXNlcjExNDA0MTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1140412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/niya3", "html_url": "https://github.com/niya3", "followers_url": "https://api.github.com/users/niya3/followers", "following_url": "https://api.github.com/users/niya3/following{/other_user}", "gists_url": "https://api.github.com/users/niya3/gists{/gist_id}", "starred_url": "https://api.github.com/users/niya3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/niya3/subscriptions", "organizations_url": "https://api.github.com/users/niya3/orgs", "repos_url": "https://api.github.com/users/niya3/repos", "events_url": "https://api.github.com/users/niya3/events{/privacy}", "received_events_url": "https://api.github.com/users/niya3/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 747107963, "node_id": "MDU6TGFiZWw3NDcxMDc5NjM=", "url": "https://api.github.com/repos/tmux-python/libtmux/labels/stale", "name": "stale", "color": "ffffff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-10-05T17:45:30Z", "updated_at": "2017-11-18T06:32:09Z", "closed_at": "2017-11-18T06:32:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Works from terminal:\n`tmux send-key -t 0 Enter`\n->\n\n```\nuser@host$\nuser@host$\n```\n\nDoesn't work in libtmux:\n\n```\n>>> import libtmux\n>>> pane = libtmux.Server().get_by_id('$1').attached_pane\n>>> pane\nPane(%5 Window(@4 2:a, Session($1 foo)))\n>>> pane.send_keys('Enter')\n```\n\n->\n\n```\nuser@host$  Enter\nEnter: command not found\n```\n\n**up.** oh, #13 -_-\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tmux-python/libtmux/issues/13", "repository_url": "https://api.github.com/repos/tmux-python/libtmux", "labels_url": "https://api.github.com/repos/tmux-python/libtmux/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/tmux-python/libtmux/issues/13/comments", "events_url": "https://api.github.com/repos/tmux-python/libtmux/issues/13/events", "html_url": "https://github.com/tmux-python/libtmux/issues/13", "id": 172348477, "node_id": "MDU6SXNzdWUxNzIzNDg0Nzc=", "number": 13, "title": "Send modifier keys to the attached pane via .send_keys()", "user": {"login": "RPiAwesomeness", "id": 11481499, "node_id": "MDQ6VXNlcjExNDgxNDk5", "avatar_url": "https://avatars1.githubusercontent.com/u/11481499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RPiAwesomeness", "html_url": "https://github.com/RPiAwesomeness", "followers_url": "https://api.github.com/users/RPiAwesomeness/followers", "following_url": "https://api.github.com/users/RPiAwesomeness/following{/other_user}", "gists_url": "https://api.github.com/users/RPiAwesomeness/gists{/gist_id}", "starred_url": "https://api.github.com/users/RPiAwesomeness/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RPiAwesomeness/subscriptions", "organizations_url": "https://api.github.com/users/RPiAwesomeness/orgs", "repos_url": "https://api.github.com/users/RPiAwesomeness/repos", "events_url": "https://api.github.com/users/RPiAwesomeness/events{/privacy}", "received_events_url": "https://api.github.com/users/RPiAwesomeness/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 380502461, "node_id": "MDU6TGFiZWwzODA1MDI0NjE=", "url": "https://api.github.com/repos/tmux-python/libtmux/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 380502463, "node_id": "MDU6TGFiZWwzODA1MDI0NjM=", "url": "https://api.github.com/repos/tmux-python/libtmux/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 747107963, "node_id": "MDU6TGFiZWw3NDcxMDc5NjM=", "url": "https://api.github.com/repos/tmux-python/libtmux/labels/stale", "name": "stale", "color": "ffffff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "tony", "id": 26336, "node_id": "MDQ6VXNlcjI2MzM2", "avatar_url": "https://avatars0.githubusercontent.com/u/26336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tony", "html_url": "https://github.com/tony", "followers_url": "https://api.github.com/users/tony/followers", "following_url": "https://api.github.com/users/tony/following{/other_user}", "gists_url": "https://api.github.com/users/tony/gists{/gist_id}", "starred_url": "https://api.github.com/users/tony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tony/subscriptions", "organizations_url": "https://api.github.com/users/tony/orgs", "repos_url": "https://api.github.com/users/tony/repos", "events_url": "https://api.github.com/users/tony/events{/privacy}", "received_events_url": "https://api.github.com/users/tony/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tony", "id": 26336, "node_id": "MDQ6VXNlcjI2MzM2", "avatar_url": "https://avatars0.githubusercontent.com/u/26336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tony", "html_url": "https://github.com/tony", "followers_url": "https://api.github.com/users/tony/followers", "following_url": "https://api.github.com/users/tony/following{/other_user}", "gists_url": "https://api.github.com/users/tony/gists{/gist_id}", "starred_url": "https://api.github.com/users/tony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tony/subscriptions", "organizations_url": "https://api.github.com/users/tony/orgs", "repos_url": "https://api.github.com/users/tony/repos", "events_url": "https://api.github.com/users/tony/events{/privacy}", "received_events_url": "https://api.github.com/users/tony/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2016-08-21T23:40:57Z", "updated_at": "2017-11-18T06:32:08Z", "closed_at": "2017-11-18T06:32:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I really like the look of this project. However, for something that I need to do, I need to be able to send a modifier key, <kbd>Ctrl</kbd> to be exact.\n\nI've tried a few different things and I'll continue looking around for a solution, but I figured I would post an issue here in case this is not currently possible.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tmux-python/libtmux/issues/12", "repository_url": "https://api.github.com/repos/tmux-python/libtmux", "labels_url": "https://api.github.com/repos/tmux-python/libtmux/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/tmux-python/libtmux/issues/12/comments", "events_url": "https://api.github.com/repos/tmux-python/libtmux/issues/12/events", "html_url": "https://github.com/tmux-python/libtmux/issues/12", "id": 171783624, "node_id": "MDU6SXNzdWUxNzE3ODM2MjQ=", "number": 12, "title": "on missing tmux, libtmux crashes ", "user": {"login": "tshirtman", "id": 22759, "node_id": "MDQ6VXNlcjIyNzU5", "avatar_url": "https://avatars1.githubusercontent.com/u/22759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshirtman", "html_url": "https://github.com/tshirtman", "followers_url": "https://api.github.com/users/tshirtman/followers", "following_url": "https://api.github.com/users/tshirtman/following{/other_user}", "gists_url": "https://api.github.com/users/tshirtman/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshirtman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshirtman/subscriptions", "organizations_url": "https://api.github.com/users/tshirtman/orgs", "repos_url": "https://api.github.com/users/tshirtman/repos", "events_url": "https://api.github.com/users/tshirtman/events{/privacy}", "received_events_url": "https://api.github.com/users/tshirtman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 380502461, "node_id": "MDU6TGFiZWwzODA1MDI0NjE=", "url": "https://api.github.com/repos/tmux-python/libtmux/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-17T23:21:58Z", "updated_at": "2016-08-18T17:19:51Z", "closed_at": "2016-08-18T17:19:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n  File \"/home/gabriel/.local/lib/python3.5/site-packages/libtmux/server.py\", line 426, in new_session\n    if self.has_session(session_name):\n  File \"/home/gabriel/.local/lib/python3.5/site-packages/libtmux/server.py\", line 326, in has_session\n    proc = self.cmd('has-session', '-t%s' % target_session)\n  File \"/home/gabriel/.local/lib/python3.5/site-packages/libtmux/server.py\", line 100, in cmd\n    return tmux_cmd(*args, **kwargs)\n  File \"/home/gabriel/.local/lib/python3.5/site-packages/libtmux/common.py\", line 153, in __init__\n    cmd = [which('tmux')]\n  File \"/home/gabriel/.local/lib/python3.5/site-packages/libtmux/common.py\", line 398, in which\n    logger.trace(\nAttributeError: 'Logger' object has no attribute 'trace'\n```\n\nIt seems libtmux uses a non-existing `trace` method on the logger to log the error. It's probably easy to forget to test this codepath ;)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tmux-python/libtmux/issues/9", "repository_url": "https://api.github.com/repos/tmux-python/libtmux", "labels_url": "https://api.github.com/repos/tmux-python/libtmux/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/tmux-python/libtmux/issues/9/comments", "events_url": "https://api.github.com/repos/tmux-python/libtmux/issues/9/events", "html_url": "https://github.com/tmux-python/libtmux/issues/9", "id": 162844402, "node_id": "MDU6SXNzdWUxNjI4NDQ0MDI=", "number": 9, "title": "Would it be better to use `logger` instead of `logging` in `libtmux.common.tmux_cmd` ? ", "user": {"login": "geekli", "id": 830238, "node_id": "MDQ6VXNlcjgzMDIzOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/830238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geekli", "html_url": "https://github.com/geekli", "followers_url": "https://api.github.com/users/geekli/followers", "following_url": "https://api.github.com/users/geekli/following{/other_user}", "gists_url": "https://api.github.com/users/geekli/gists{/gist_id}", "starred_url": "https://api.github.com/users/geekli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geekli/subscriptions", "organizations_url": "https://api.github.com/users/geekli/orgs", "repos_url": "https://api.github.com/users/geekli/repos", "events_url": "https://api.github.com/users/geekli/events{/privacy}", "received_events_url": "https://api.github.com/users/geekli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 747107963, "node_id": "MDU6TGFiZWw3NDcxMDc5NjM=", "url": "https://api.github.com/repos/tmux-python/libtmux/labels/stale", "name": "stale", "color": "ffffff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-06-29T05:34:33Z", "updated_at": "2017-11-18T06:32:10Z", "closed_at": "2017-11-18T06:32:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It's use `logging` in function `__init__` of Class `tmux_cmd`\n`logging.debug('self.stdout for %s: \\n%s' %\n                      (' '.join(cmd), self.stdout))`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tmux-python/libtmux/issues/7", "repository_url": "https://api.github.com/repos/tmux-python/libtmux", "labels_url": "https://api.github.com/repos/tmux-python/libtmux/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/tmux-python/libtmux/issues/7/comments", "events_url": "https://api.github.com/repos/tmux-python/libtmux/issues/7/events", "html_url": "https://github.com/tmux-python/libtmux/issues/7", "id": 160427963, "node_id": "MDU6SXNzdWUxNjA0Mjc5NjM=", "number": 7, "title": "Throw a useful error if option isn't set", "user": {"login": "tony", "id": 26336, "node_id": "MDQ6VXNlcjI2MzM2", "avatar_url": "https://avatars0.githubusercontent.com/u/26336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tony", "html_url": "https://github.com/tony", "followers_url": "https://api.github.com/users/tony/followers", "following_url": "https://api.github.com/users/tony/following{/other_user}", "gists_url": "https://api.github.com/users/tony/gists{/gist_id}", "starred_url": "https://api.github.com/users/tony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tony/subscriptions", "organizations_url": "https://api.github.com/users/tony/orgs", "repos_url": "https://api.github.com/users/tony/repos", "events_url": "https://api.github.com/users/tony/events{/privacy}", "received_events_url": "https://api.github.com/users/tony/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 380502463, "node_id": "MDU6TGFiZWwzODA1MDI0NjM=", "url": "https://api.github.com/repos/tmux-python/libtmux/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-06-15T13:54:08Z", "updated_at": "2016-06-16T03:47:10Z", "closed_at": "2016-06-16T03:47:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "``` python\nassert s.show_options('default-shell', g=True)\n```\n\n``` python\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n../libtmux/libtmux/session.py:374: in show_options\n    return self.show_option(option, g=g)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = Session($1 libtmux_XxTayh), option = [], g = True\n\n    def show_option(self, option, g=False):\n        \"\"\"Return a list of options for the window.\n\n            :todo: test and return True/False for on/off string\n\n            :param option: option to return.\n            :type option: string\n            :rtype: string, int or bool\n\n            \"\"\"\n\n        tmux_args = tuple()\n\n        if g:\n            tmux_args += ('-g',)\n\n        option = self.cmd(\n            'show-options', option, *tmux_args\n        ).stdout\n>       option = [tuple(item.split(' ')) for item in option][0]\nE       IndexError: list index out of range\n```\n\nHave a `raise=False` argument. If not raising, return `None`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tmux-python/libtmux/issues/2", "repository_url": "https://api.github.com/repos/tmux-python/libtmux", "labels_url": "https://api.github.com/repos/tmux-python/libtmux/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/tmux-python/libtmux/issues/2/comments", "events_url": "https://api.github.com/repos/tmux-python/libtmux/issues/2/events", "html_url": "https://github.com/tmux-python/libtmux/issues/2", "id": 157321456, "node_id": "MDU6SXNzdWUxNTczMjE0NTY=", "number": 2, "title": "Demonstrate how you can enter tmux commands via `.cmd`", "user": {"login": "tony", "id": 26336, "node_id": "MDQ6VXNlcjI2MzM2", "avatar_url": "https://avatars0.githubusercontent.com/u/26336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tony", "html_url": "https://github.com/tony", "followers_url": "https://api.github.com/users/tony/followers", "following_url": "https://api.github.com/users/tony/following{/other_user}", "gists_url": "https://api.github.com/users/tony/gists{/gist_id}", "starred_url": "https://api.github.com/users/tony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tony/subscriptions", "organizations_url": "https://api.github.com/users/tony/orgs", "repos_url": "https://api.github.com/users/tony/repos", "events_url": "https://api.github.com/users/tony/events{/privacy}", "received_events_url": "https://api.github.com/users/tony/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 747107963, "node_id": "MDU6TGFiZWw3NDcxMDc5NjM=", "url": "https://api.github.com/repos/tmux-python/libtmux/labels/stale", "name": "stale", "color": "ffffff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-28T05:22:16Z", "updated_at": "2017-11-18T06:32:07Z", "closed_at": "2017-11-18T06:32:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Its very valuable to know that you can have a window object and automatically be entering commands within the `-t` (target) context.\n\nFrom tmux manual:\n\n```\n This section contains a list of the commands supported by tmux.  Most\n commands accept the optional -t argument with one of target-client,\n target-session target-window, or target-pane.  These specify the\n client, session, window or pane which a command should affect.\n target-client is the name of the pty(7) file to which the client is\n connected, for example either of /dev/ttyp1 or ttyp1 for the client\n attached to /dev/ttyp1.  If no client is specified, the current client\n is chosen, if possible, or an error is reported.  Clients may be listed\n with the list-clients command.\n\n target-session is the session id prefixed with a $, the name of a ses\u2010\n sion (as listed by the list-sessions command), or the name of a client\n with the same syntax as target-client, in which case the session\n attached to the client is used.  When looking for the session name,\n tmux initially searches for an exact match; if none is found, the ses\u2010\n sion names are checked for any for which target-session is a prefix or\n for which it matches as an fnmatch(3) pattern.  If a single match is\n found, it is used as the target session; multiple matches produce an\n error.  If a session is omitted, the current session is used if avail\u2010\n able; if no current session is available, the most recently used is\n chosen.\n\n target-window specifies a window in the form session:window.  session\n follows the same rules as for target-session, and window is looked for\n in order: as a window index, for example mysession:1; as a window ID,\n such as @1; as an exact window name, such as mysession:mywindow; then\n as an fnmatch(3) pattern or the start of a window name, such as myses\u2010\n sion:mywin* or mysession:mywin.  An empty window name specifies the\n next unused index if appropriate (for example the new-window and\n link-window commands) otherwise the current window in session is cho\u2010\n sen.  The special character \u2018!\u2019 uses the last (previously current) win\u2010\n dow, \u2018^\u2019 selects the highest numbered window, \u2018$\u2019 selects the lowest\n numbered window, and \u2018+\u2019 and \u2018-\u2019 select the next window or the previous\n window by number.  When the argument does not contain a colon, tmux\n first attempts to parse it as window; if that fails, an attempt is made\n to match a session.\n\n target-pane takes a similar form to target-window but with the optional\n addition of a period followed by a pane index, for example: myses\u2010\n sion:mywindow.1.  If the pane index is omitted, the currently active\n pane in the specified window is used.  If neither a colon nor period\n appears, tmux first attempts to use the argument as a pane index; if\n that fails, it is looked up as for target-window.  A \u2018+\u2019, \u2018-\u2019 or \u2018!\u2019\n indicate the next, previous or last pane.  One of the strings top,\n bottom, left, right, top-left, top-right, bottom-left or bottom-right\n may be used instead of a pane index.\n\n The special characters \u2018+\u2019 and \u2018-\u2019 may be followed by an offset, for\n example:\n\n       select-window -t:+2\n\n When dealing with a session that doesn't contain sequential window\n indexes, they will be correctly skipped.\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tmux-python/libtmux/issues/1", "repository_url": "https://api.github.com/repos/tmux-python/libtmux", "labels_url": "https://api.github.com/repos/tmux-python/libtmux/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/tmux-python/libtmux/issues/1/comments", "events_url": "https://api.github.com/repos/tmux-python/libtmux/issues/1/events", "html_url": "https://github.com/tmux-python/libtmux/issues/1", "id": 157321328, "node_id": "MDU6SXNzdWUxNTczMjEzMjg=", "number": 1, "title": "Make it easier to capture-pane", "user": {"login": "tony", "id": 26336, "node_id": "MDQ6VXNlcjI2MzM2", "avatar_url": "https://avatars0.githubusercontent.com/u/26336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tony", "html_url": "https://github.com/tony", "followers_url": "https://api.github.com/users/tony/followers", "following_url": "https://api.github.com/users/tony/following{/other_user}", "gists_url": "https://api.github.com/users/tony/gists{/gist_id}", "starred_url": "https://api.github.com/users/tony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tony/subscriptions", "organizations_url": "https://api.github.com/users/tony/orgs", "repos_url": "https://api.github.com/users/tony/repos", "events_url": "https://api.github.com/users/tony/events{/privacy}", "received_events_url": "https://api.github.com/users/tony/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 747107963, "node_id": "MDU6TGFiZWw3NDcxMDc5NjM=", "url": "https://api.github.com/repos/tmux-python/libtmux/labels/stale", "name": "stale", "color": "ffffff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-28T05:18:00Z", "updated_at": "2017-11-18T06:32:06Z", "closed_at": "2017-11-18T06:32:06Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Allow use of `capture_pane` as a property and automatically return stdout.\n\n``` python\n>>> import libtmux\n\n>>> server = libtmux.Server()\n\n>>> server.findWhere({'session_name': 'foo'})\nSession($5 foo)\n\n>>> session = server.findWhere({'session_name': 'foo'})\n\n>>> session.attached_pane().cmd('capture-pane', '-p').stdout\n[u' ______________________________________________________________', u'/ A light wife doth make a heavy husband.                      \\\\', u'\\\\                 -- Wm. Shakespeare, \"The Merchant of Venice\" /', u' --------------------------------------------------------------', u'        \\\\   ^__^', u'         \\\\  (oo)\\\\_______', u'            (__)\\\\       )\\\\/\\\\', u'                ||----w |', u'                ||     ||', u'~', u'\\u276f']\n```\n", "performed_via_github_app": null, "score": 1.0}]}