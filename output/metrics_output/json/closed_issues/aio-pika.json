{"total_count": 108, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/mosquito/aio-pika/issues/342", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/342/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/342/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/342/events", "html_url": "https://github.com/mosquito/aio-pika/issues/342", "id": 680751976, "node_id": "MDU6SXNzdWU2ODA3NTE5NzY=", "number": 342, "title": "Any example on consuming with cpu-intensive long running tasks ", "user": {"login": "clippered", "id": 5051900, "node_id": "MDQ6VXNlcjUwNTE5MDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5051900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clippered", "html_url": "https://github.com/clippered", "followers_url": "https://api.github.com/users/clippered/followers", "following_url": "https://api.github.com/users/clippered/following{/other_user}", "gists_url": "https://api.github.com/users/clippered/gists{/gist_id}", "starred_url": "https://api.github.com/users/clippered/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clippered/subscriptions", "organizations_url": "https://api.github.com/users/clippered/orgs", "repos_url": "https://api.github.com/users/clippered/repos", "events_url": "https://api.github.com/users/clippered/events{/privacy}", "received_events_url": "https://api.github.com/users/clippered/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 451328865, "node_id": "MDU6TGFiZWw0NTEzMjg4NjU=", "url": "https://api.github.com/repos/mosquito/aio-pika/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-08-18T07:06:31Z", "updated_at": "2020-08-19T20:24:01Z", "closed_at": "2020-08-19T20:24:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI just want to check if there are any examples out there for consuming messages then processing them in a couple of minutes in a CPU intensive process before sending back the ack. When this is performed inside the consume callback, looks like the connection is dropped and the message is redelivered.\r\nIs it a good idea to put this in a thread instead, then signal back to the callback to do the ack when the thread finishes?\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/324", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/324/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/324/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/324/events", "html_url": "https://github.com/mosquito/aio-pika/issues/324", "id": 629253953, "node_id": "MDU6SXNzdWU2MjkyNTM5NTM=", "number": 324, "title": "aio-pika don't do raise exception when CONNECTION_FORCED", "user": {"login": "heckad", "id": 45011689, "node_id": "MDQ6VXNlcjQ1MDExNjg5", "avatar_url": "https://avatars2.githubusercontent.com/u/45011689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heckad", "html_url": "https://github.com/heckad", "followers_url": "https://api.github.com/users/heckad/followers", "following_url": "https://api.github.com/users/heckad/following{/other_user}", "gists_url": "https://api.github.com/users/heckad/gists{/gist_id}", "starred_url": "https://api.github.com/users/heckad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heckad/subscriptions", "organizations_url": "https://api.github.com/users/heckad/orgs", "repos_url": "https://api.github.com/users/heckad/repos", "events_url": "https://api.github.com/users/heckad/events{/privacy}", "received_events_url": "https://api.github.com/users/heckad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-02T14:33:27Z", "updated_at": "2020-06-02T15:58:59Z", "closed_at": "2020-06-02T15:58:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I found a bag. When I reboot rabbitmq aio-pika not raise Error. In `__receive_frame` method I get \r\nmessage with\r\n`frame_header = b'\\x01\\x00\\x00\\x00\\x00\\x00V'`\r\n`frame_payload = b\"\\x00\\n\\x002\\x01@KCONNECTION_FORCED - broker forced connection closure with reason 'shutdown'\\x00\\x00\\x00\\x00\\xce\"`\r\n\r\nseems reason in  check in\r\n\r\n```\r\n            if frame_header == b\"\\0x00\":\r\n                raise spec.AMQPFrameError(await self.reader.read())\r\n```\r\nframe_header on this point is `b'\\x01'`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/315", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/315/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/315/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/315/events", "html_url": "https://github.com/mosquito/aio-pika/issues/315", "id": 608425418, "node_id": "MDU6SXNzdWU2MDg0MjU0MTg=", "number": 315, "title": "Queue.iterator() can \"block\" event loop", "user": {"login": "wyfo", "id": 6006079, "node_id": "MDQ6VXNlcjYwMDYwNzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6006079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wyfo", "html_url": "https://github.com/wyfo", "followers_url": "https://api.github.com/users/wyfo/followers", "following_url": "https://api.github.com/users/wyfo/following{/other_user}", "gists_url": "https://api.github.com/users/wyfo/gists{/gist_id}", "starred_url": "https://api.github.com/users/wyfo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wyfo/subscriptions", "organizations_url": "https://api.github.com/users/wyfo/orgs", "repos_url": "https://api.github.com/users/wyfo/repos", "events_url": "https://api.github.com/users/wyfo/events{/privacy}", "received_events_url": "https://api.github.com/users/wyfo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-28T15:50:34Z", "updated_at": "2020-04-29T17:06:05Z", "closed_at": "2020-04-28T16:06:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "~~`aoi_pika.Queue.iterator()` uses a hidden `asyncio.Queue` to temporary store message. Even if it seems to be just an implementation detail, there is a side effect that it is worth to know and maybe to explicit in the documentation : `asyncio.Queue.get` is synchronous when the queue is not empty.\r\nIn the case of a queue receiving messages faster than it consumes them, the `asyncio.queue` is never empty and there is no event loop context switch with iterations. Moreover, if the handling of the message is synchronous too, there is no context switch at all; the loop is actually \"blocked\" in an infinite loop.\r\n(In my case, the signal handler added with `loop.add_signal_handler` could even not execute to shutdown gracefully my application)~~\r\n\r\n~~I know that there is no obligation for  an asynchronous iterator to make a context switch, and a lot of them doesn't, but the issue there is about the potential infinite loop because the (potentially synchronous) iterator is potentially infinite.\r\nI see two solution to this issue :~~\r\n- ~~adds a context switch (`asyncio.sleep(0)`) in each iteration, or only if the queue is not empty; it radically prevents this issue, with a small cost~~\r\n- ~~put a warning in the documentation about the fact that the iteration is synchronous when the queue is not empty and that could lead to infinite loop if the rest of the code is synchronous too~~\r\n- ~~do nothing (of course an other possible solution)~~\r\n\r\nEDIT I was wrong and wrote my issue too quickly. (if the loop was blocked, no other messages could be added to queue) Sorry.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/314", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/314/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/314/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/314/events", "html_url": "https://github.com/mosquito/aio-pika/issues/314", "id": 603105946, "node_id": "MDU6SXNzdWU2MDMxMDU5NDY=", "number": 314, "title": "RobustConnection Reconnecting even if manually closed", "user": {"login": "cyberlis", "id": 1144140, "node_id": "MDQ6VXNlcjExNDQxNDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1144140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cyberlis", "html_url": "https://github.com/cyberlis", "followers_url": "https://api.github.com/users/cyberlis/followers", "following_url": "https://api.github.com/users/cyberlis/following{/other_user}", "gists_url": "https://api.github.com/users/cyberlis/gists{/gist_id}", "starred_url": "https://api.github.com/users/cyberlis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cyberlis/subscriptions", "organizations_url": "https://api.github.com/users/cyberlis/orgs", "repos_url": "https://api.github.com/users/cyberlis/repos", "events_url": "https://api.github.com/users/cyberlis/events{/privacy}", "received_events_url": "https://api.github.com/users/cyberlis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-20T09:57:24Z", "updated_at": "2020-07-06T18:54:05Z", "closed_at": "2020-07-06T18:54:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "After updating to version 6.6.0 I get errors, when I try to close connection\r\n```python\r\nimport asyncio\r\nimport logging\r\n\r\nfrom aio_pika.robust_connection import connect_robust\r\n\r\n\r\nlogging.basicConfig(level=logging.DEBUG)\r\n\r\n\r\nasync def main():\r\n    connection = await connect_robust()\r\n    await connection.close()\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    asyncio.run(main())\r\n```\r\n\r\nOutput\r\n```\r\nDEBUG:asyncio:Using selector: KqueueSelector\r\nDEBUG:aiormq.connection:Can not read bytes from server:\r\nTraceback (most recent call last):\r\n  File \"/Users/d.lisovik/Library/Caches/pypoetry/virtualenvs/dispipe-2Qe6ZZMa-py3.7/lib/python3.7/site-packages/aiormq/connection.py\", line 377, in __reader\r\n    weight, channel, frame = await self.__receive_frame()\r\n  File \"/Users/d.lisovik/Library/Caches/pypoetry/virtualenvs/dispipe-2Qe6ZZMa-py3.7/lib/python3.7/site-packages/aiormq/connection.py\", line 329, in __receive_frame\r\n    frame_header = await self.reader.readexactly(1)\r\n  File \"/Users/d.lisovik/.pyenv/versions/3.7.2/lib/python3.7/asyncio/streams.py\", line 677, in readexactly\r\n    raise IncompleteReadError(incomplete, n)\r\nasyncio.streams.IncompleteReadError: 0 bytes read on a total of 1 expected bytes\r\nDEBUG:aio_pika.connection:Closing AMQP connection None\r\nINFO:aio_pika.robust_connection:Connection to amqp://guest:******@localhost:5672// closed. Reconnecting after 5 seconds.\r\n```\r\n\r\nI found one problem with connection closing.\r\nOutput\r\n```\r\nDEBUG:aio_pika.connection:Closing AMQP connection None\r\n```\r\n\r\nThis problem in `_make_connection`\r\n```python\r\nasync def _make_connection(self, **kwargs) -> aiormq.Connection:\r\n    connection = await aiormq.connect(self.url, **kwargs)\r\n    connection.closing.add_done_callback(\r\n        partial(self._on_connection_close, self.connection)\r\n    )\r\n    return connection\r\n```\r\nSpecifically in\r\n```python\r\npartial(self._on_connection_close, self.connection)\r\n```\r\nWhen we call partial, `self.connection` is `None` at this particular moment\r\nTo fix this we can pass `connection` instead of `self.connection`\r\n\r\nBut this doesn't fix Reconnecting and IncompleteReadError problem\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/302", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/302/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/302/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/302/events", "html_url": "https://github.com/mosquito/aio-pika/issues/302", "id": 573776080, "node_id": "MDU6SXNzdWU1NzM3NzYwODA=", "number": 302, "title": "message.reject called inside ProcessContext.__exit__ fails when channel is closed", "user": {"login": "DXist", "id": 828007, "node_id": "MDQ6VXNlcjgyODAwNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/828007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DXist", "html_url": "https://github.com/DXist", "followers_url": "https://api.github.com/users/DXist/followers", "following_url": "https://api.github.com/users/DXist/following{/other_user}", "gists_url": "https://api.github.com/users/DXist/gists{/gist_id}", "starred_url": "https://api.github.com/users/DXist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DXist/subscriptions", "organizations_url": "https://api.github.com/users/DXist/orgs", "repos_url": "https://api.github.com/users/DXist/repos", "events_url": "https://api.github.com/users/DXist/events{/privacy}", "received_events_url": "https://api.github.com/users/DXist/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 451328863, "node_id": "MDU6TGFiZWw0NTEzMjg4NjM=", "url": "https://api.github.com/repos/mosquito/aio-pika/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-02T07:39:06Z", "updated_at": "2020-03-13T14:49:17Z", "closed_at": "2020-03-13T14:49:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm using ProcessContext in my consumer implementation and get error:\r\n\r\n```\r\nAttributeError\r\n'NoneType' object has no attribute 'write'\r\n```\r\nin https://github.com/mosquito/aiormq/blob/bedf52cee682777435c71486e1614636aedc9330/aiormq/channel.py#L411\r\n\r\nThis exception is raised during handling of [ChannelInvalidStateError](https://github.com/mosquito/aiormq/blob/bedf52cee682777435c71486e1614636aedc9330/aiormq/channel.py#L89) raised inside the body of ProcessContext context manager.\r\n\r\nProcessContext tries to [reject](\r\nhttps://github.com/mosquito/aio-pika/blob/3915d2fd8e9c377197b5613bd4f5aeb6035a2826/aio_pika/message.py#L673) the message but fails to do that because the channel is closed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/293", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/293/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/293/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/293/events", "html_url": "https://github.com/mosquito/aio-pika/issues/293", "id": 560115732, "node_id": "MDU6SXNzdWU1NjAxMTU3MzI=", "number": 293, "title": "sometimes fail to connect to rabbitmq for unreasonable timeout exception", "user": {"login": "Peter-YAN", "id": 11254009, "node_id": "MDQ6VXNlcjExMjU0MDA5", "avatar_url": "https://avatars2.githubusercontent.com/u/11254009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Peter-YAN", "html_url": "https://github.com/Peter-YAN", "followers_url": "https://api.github.com/users/Peter-YAN/followers", "following_url": "https://api.github.com/users/Peter-YAN/following{/other_user}", "gists_url": "https://api.github.com/users/Peter-YAN/gists{/gist_id}", "starred_url": "https://api.github.com/users/Peter-YAN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Peter-YAN/subscriptions", "organizations_url": "https://api.github.com/users/Peter-YAN/orgs", "repos_url": "https://api.github.com/users/Peter-YAN/repos", "events_url": "https://api.github.com/users/Peter-YAN/events{/privacy}", "received_events_url": "https://api.github.com/users/Peter-YAN/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-05T03:21:21Z", "updated_at": "2020-02-07T01:53:45Z", "closed_at": "2020-02-07T01:53:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I test aio-pika in my host, application and rabbitmq are in the same host.\r\nsometimes, there is a timeout exception thrown by aio-pika.\r\nsource code:\r\n```\r\n           __mq_conn_url = 'amqp://{0}:{1}@{2}:{3}{4}'.format(self._config['user'],\r\n                                self._config['password'], self._config['mq_server_ip'],\r\n                                self._config['port'], self._config['vhost'])\r\n\r\n            AMQP_URL = URL(os.getenv(\"AMQP_URL\", _mq_conn_url)).update_query(reconnect_interval=1)\r\n            self._log.info(\"URL:%s\", AMQP_URL)\r\n\r\n            if connection:\r\n                self._mq_connection = connection\r\n            else:\r\n                self._mq_connection = await aio_pika.connect_robust(\r\n                    str(AMQP_URL), loop=self._loop, timeout=DEFAULT_CONNECT_TIME_OUT,\r\n                    client_properties={'connection_name': self.__class__.__name__})\r\n```\r\nI try to change DEFAULT_CONNECT_TIME_OUT to **1.0, 3.0 OR 6.0**, but there timeout execption is also thrown.\r\nclient log:\r\n```\r\n  File \"/root/trunk/MQClient.py\", line 413, in initialize\r\n    client_properties={'connection_name': self.__class__.__name__})\r\n  File \"/root/trunk/sumscope_book_api_env/lib64/python3.6/site-packages/aio_pika/robust_connection.py\", line 259, in connect_robust\r\n    client_properties=client_properties, **kwargs\r\n  File \"/root/trunk/sumscope_book_api_env/lib64/python3.6/site-packages/aio_pika/connection.py\", line 324, in connect\r\n    timeout=timeout, client_properties=client_properties\r\n  File \"/root/trunk/sumscope_book_api_env/lib64/python3.6/site-packages/aio_pika/robust_connection.py\", line 123, in connect\r\n    **self.connect_kwargs\r\n  File \"/root/trunk/sumscope_book_api_env/lib64/python3.6/site-packages/aio_pika/connection.py\", line 125, in connect\r\n    timeout=timeout\r\n  File \"/usr/lib64/python3.6/asyncio/tasks.py\", line 362, in wait_for\r\n    raise futures.TimeoutError()\r\nconcurrent.futures._base.TimeoutError\r\n```\r\nrabbitmq log:\r\n```\r\n2020-02-04 12:24:07.672 [info] <0.399.4> accepting AMQP connection <0.399.4> (192.168.1.113:52190 -> 192.168.1.113:5672)\r\n2020-02-04 12:24:07.697 [info] <0.399.4> connection <0.399.4> (192.168.1.113:52190 -> 192.168.1.113:5672): user 'guest' authenticated and granted access to vhost '/'\r\n2020-02-04 12:24:07.736 [info] <0.423.4> accepting AMQP connection <0.423.4> (192.168.1.113:52192 -> 192.168.1.113:5672)\r\n2020-02-04 12:24:07.746 [info] <0.423.4> connection <0.423.4> (192.168.1.113:52192 -> 192.168.1.113:5672): user 'guest' authenticated and granted access to vhost '/'\r\n2020-02-04 12:24:07.785 [info] <0.452.4> accepting AMQP connection <0.452.4> (192.168.1.113:52194 -> 192.168.1.113:5672)\r\n2020-02-04 12:24:07.830 [info] <0.452.4> connection <0.452.4> (192.168.1.113:52194 -> 192.168.1.113:5672): user 'guest' authenticated and granted access to vhost '/'\r\n2020-02-04 12:24:08.603 [info] <0.469.4> accepting AMQP connection <0.469.4> (192.168.1.113:52200 -> 192.168.1.113:5672)\r\n2020-02-04 12:24:11.608 [info] <0.476.4> accepting AMQP connection <0.476.4> (192.168.1.113:52202 -> 192.168.1.113:5672)\r\n2020-02-04 12:24:13.618 [info] <0.476.4> connection <0.476.4> (192.168.1.113:52202 -> 192.168.1.113:5672): user 'guest' authenticated and granted access to vhost '/'\r\n2020-02-04 12:24:14.959 [warning] <0.399.4> closing AMQP connection <0.399.4> (192.168.1.113:52190 -> 192.168.1.113:5672, vhost: '/', user: 'guest'):\r\nclient unexpectedly closed TCP connection\r\n2020-02-04 12:24:14.959 [warning] <0.476.4> closing AMQP connection <0.476.4> (192.168.1.113:52202 -> 192.168.1.113:5672, vhost: '/', user: 'guest'):\r\nclient unexpectedly closed TCP connection\r\n2020-02-04 12:24:14.959 [warning] <0.423.4> closing AMQP connection <0.423.4> (192.168.1.113:52192 -> 192.168.1.113:5672, vhost: '/', user: 'guest'):\r\nclient unexpectedly closed TCP connection\r\n2020-02-04 12:24:14.959 [warning] <0.452.4> closing AMQP connection <0.452.4> (192.168.1.113:52194 -> 192.168.1.113:5672, vhost: '/', user: 'guest'):\r\nclient unexpectedly closed TCP connection\r\n2020-02-04 12:24:16.616 [error] <0.469.4> closing AMQP connection <0.469.4> (192.168.1.113:52200 -> 192.168.1.113:5672):\r\n{handshake_error,starting,0,{amqp_error,channel_error,\"unexpected method in connection state starting\",'connection.close'}}\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/292", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/292/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/292/events", "html_url": "https://github.com/mosquito/aio-pika/issues/292", "id": 559580574, "node_id": "MDU6SXNzdWU1NTk1ODA1NzQ=", "number": 292, "title": "Proposed add OSError to CONNECTION_EXCEPTIONS", "user": {"login": "heckad", "id": 45011689, "node_id": "MDQ6VXNlcjQ1MDExNjg5", "avatar_url": "https://avatars2.githubusercontent.com/u/45011689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heckad", "html_url": "https://github.com/heckad", "followers_url": "https://api.github.com/users/heckad/followers", "following_url": "https://api.github.com/users/heckad/following{/other_user}", "gists_url": "https://api.github.com/users/heckad/gists{/gist_id}", "starred_url": "https://api.github.com/users/heckad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heckad/subscriptions", "organizations_url": "https://api.github.com/users/heckad/orgs", "repos_url": "https://api.github.com/users/heckad/repos", "events_url": "https://api.github.com/users/heckad/events{/privacy}", "received_events_url": "https://api.github.com/users/heckad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-04T09:10:23Z", "updated_at": "2020-02-17T16:11:21Z", "closed_at": "2020-02-17T16:11:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When selector can't connect it raise OSError. Need to add it ti handleable too.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/289", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/289/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/289/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/289/events", "html_url": "https://github.com/mosquito/aio-pika/issues/289", "id": 553400911, "node_id": "MDU6SXNzdWU1NTM0MDA5MTE=", "number": 289, "title": "incorrect type annotation on add_close_callback's callback parameter", "user": {"login": "brianmaissy", "id": 622989, "node_id": "MDQ6VXNlcjYyMjk4OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/622989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brianmaissy", "html_url": "https://github.com/brianmaissy", "followers_url": "https://api.github.com/users/brianmaissy/followers", "following_url": "https://api.github.com/users/brianmaissy/following{/other_user}", "gists_url": "https://api.github.com/users/brianmaissy/gists{/gist_id}", "starred_url": "https://api.github.com/users/brianmaissy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brianmaissy/subscriptions", "organizations_url": "https://api.github.com/users/brianmaissy/orgs", "repos_url": "https://api.github.com/users/brianmaissy/repos", "events_url": "https://api.github.com/users/brianmaissy/events{/privacy}", "received_events_url": "https://api.github.com/users/brianmaissy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-22T09:05:58Z", "updated_at": "2020-02-17T10:35:58Z", "closed_at": "2020-02-17T10:35:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "The signature of `Connection.add_close_callback` is currently as follows:\r\n\r\n`def add_close_callback(self, callback: Callable[[], None]):`\r\n\r\nAccording to the docstring, the `callback` will be passed an `asyncio.Future` as the first argument. The current signature implies that it will be called with no arguments.\r\n\r\nI think the correct annotation is:\r\n`def add_close_callback(self, callback: Callable[[asyncio.Future], None]):`\r\nor if you would rather not specify the arguments:\r\n`def add_close_callback(self, callback: Callable[[...], None]):`\r\n\r\nHappy to open a PR if this sounds ok.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/284", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/284/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/284/events", "html_url": "https://github.com/mosquito/aio-pika/issues/284", "id": 546646127, "node_id": "MDU6SXNzdWU1NDY2NDYxMjc=", "number": 284, "title": "Memory leak.", "user": {"login": "heckad", "id": 45011689, "node_id": "MDQ6VXNlcjQ1MDExNjg5", "avatar_url": "https://avatars2.githubusercontent.com/u/45011689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heckad", "html_url": "https://github.com/heckad", "followers_url": "https://api.github.com/users/heckad/followers", "following_url": "https://api.github.com/users/heckad/following{/other_user}", "gists_url": "https://api.github.com/users/heckad/gists{/gist_id}", "starred_url": "https://api.github.com/users/heckad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heckad/subscriptions", "organizations_url": "https://api.github.com/users/heckad/orgs", "repos_url": "https://api.github.com/users/heckad/repos", "events_url": "https://api.github.com/users/heckad/events{/privacy}", "received_events_url": "https://api.github.com/users/heckad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-08T05:01:53Z", "updated_at": "2020-02-13T11:28:10Z", "closed_at": "2020-02-13T11:28:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I found that if in asgi app there is one connection and on each request new channel is created then we will have a memory leak. The reason in the private set of channels in connection: `__channels`. Maybe add a done callback thet will remove channel when it closed from `__channels` or change type on `WeakSet` and add a check to __del__ method if we delete not closed channel?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/275", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/275/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/275/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/275/events", "html_url": "https://github.com/mosquito/aio-pika/issues/275", "id": 527969246, "node_id": "MDU6SXNzdWU1Mjc5NjkyNDY=", "number": 275, "title": "Question: What is the recommended way of consuming and publishing in the same program?", "user": {"login": "nockstarr", "id": 10715311, "node_id": "MDQ6VXNlcjEwNzE1MzEx", "avatar_url": "https://avatars1.githubusercontent.com/u/10715311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nockstarr", "html_url": "https://github.com/nockstarr", "followers_url": "https://api.github.com/users/nockstarr/followers", "following_url": "https://api.github.com/users/nockstarr/following{/other_user}", "gists_url": "https://api.github.com/users/nockstarr/gists{/gist_id}", "starred_url": "https://api.github.com/users/nockstarr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nockstarr/subscriptions", "organizations_url": "https://api.github.com/users/nockstarr/orgs", "repos_url": "https://api.github.com/users/nockstarr/repos", "events_url": "https://api.github.com/users/nockstarr/events{/privacy}", "received_events_url": "https://api.github.com/users/nockstarr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-25T09:50:49Z", "updated_at": "2019-11-26T09:52:45Z", "closed_at": "2019-11-26T09:52:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Im my particular use case I need to  \r\n1. Continuously consume messages from Q1.\r\n2. Process each received message.\r\n3. For each received and processed message a \"new message\" is created.\r\n4. Publish new message to Q2.   \r\n\r\nI could not find many examples on how to do this, but this must be a pretty common use case? \"I\" came up with this method (mostly borrowed from [Connection pooling example).](https://aio-pika.readthedocs.io/en/latest/quick-start.html#connection-pooling) I feel like it must be a better way to do this ?\r\n\r\n```python\r\nimport asyncio\r\nimport aio_pika\r\nfrom aio_pika.pool import Pool\r\nimport json\r\n\r\nRABBIT_URI = \"amqp://guest:guest@localhost/\"\r\n\r\nCONSUMER_QUEUE = \"processing_queue\"\r\nEXCHANGE_NAME = \"completed_alerts\"\r\nPUBLISH_QUEUE = \"completed_queue\"\r\n\r\n\r\nasync def main_tester():\r\n    \"\"\"Everything creating inside main_tester() for simplicity of this example\"\"\"\r\n    loop = asyncio.get_event_loop()\r\n\r\n    async def get_connection():\r\n        return await aio_pika.connect_robust(RABBIT_URI)\r\n\r\n    connection_pool = Pool(get_connection, max_size=2, loop=loop)\r\n\r\n    async def get_channel() -> aio_pika.Channel:\r\n        async with connection_pool.acquire() as connection:\r\n            return await connection.channel()\r\n\r\n    channel_pool = Pool(get_channel, max_size=10, loop=loop)\r\n\r\n    async def consume():\r\n        async with channel_pool.acquire() as channel:  # type: aio_pika.Channel\r\n            while True:\r\n                await channel.set_qos(10)\r\n\r\n                queue = await channel.declare_queue(\r\n                    CONSUMER_QUEUE,\r\n                    durable=True,\r\n                    auto_delete=False\r\n                )\r\n                async with queue.iterator() as queue_iter:\r\n                    async for message in queue_iter:\r\n                        msg = json.loads(message.body)\r\n                        # Do a lot of stuff with the received message..\r\n                        # When the 'processing' of the received process is done, a new message is created which needs\r\n                        # to be published to another queue.\r\n                        new_message = {\"msg\": \"Represents a new message as a result of processing the received message\"}\r\n\r\n                        await publish(new_message, PUBLISH_QUEUE)\r\n                        await message.ack()\r\n                await asyncio.sleep(0.1)\r\n\r\n    async def publish(msg: dict, routing_key: str):\r\n        async with channel_pool.acquire() as channel:  # type: aio_pika.Channel\r\n            exchange = await channel.declare_exchange(EXCHANGE_NAME, durable=True)\r\n\r\n            ready_queue = await channel.declare_queue(\r\n                routing_key, durable=True\r\n            )\r\n            await ready_queue.bind(exchange, routing_key)\r\n\r\n            await exchange.publish(\r\n                aio_pika.Message(\r\n                    body=json.dumps(msg).encode(),\r\n                    delivery_mode=aio_pika.DeliveryMode.PERSISTENT\r\n                ),\r\n                routing_key\r\n            )\r\n\r\n    task = loop.create_task(consume())\r\n    await task\r\n\r\nif __name__ == \"__main__\":\r\n    loop = asyncio.get_event_loop()\r\n    loop.run_until_complete(main_tester())\r\n    loop.close()\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/270", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/270/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/270/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/270/events", "html_url": "https://github.com/mosquito/aio-pika/issues/270", "id": 524723679, "node_id": "MDU6SXNzdWU1MjQ3MjM2Nzk=", "number": 270, "title": "update pypi package", "user": {"login": "x0day", "id": 6091595, "node_id": "MDQ6VXNlcjYwOTE1OTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6091595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/x0day", "html_url": "https://github.com/x0day", "followers_url": "https://api.github.com/users/x0day/followers", "following_url": "https://api.github.com/users/x0day/following{/other_user}", "gists_url": "https://api.github.com/users/x0day/gists{/gist_id}", "starred_url": "https://api.github.com/users/x0day/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/x0day/subscriptions", "organizations_url": "https://api.github.com/users/x0day/orgs", "repos_url": "https://api.github.com/users/x0day/repos", "events_url": "https://api.github.com/users/x0day/events{/privacy}", "received_events_url": "https://api.github.com/users/x0day/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 451328865, "node_id": "MDU6TGFiZWw0NTEzMjg4NjU=", "url": "https://api.github.com/repos/mosquito/aio-pika/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-19T01:53:22Z", "updated_at": "2020-02-17T14:40:44Z", "closed_at": "2020-02-17T14:40:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "the current package version in github is 6.3.2, but package version is 6.3.0 in pypi.\r\n\r\ninstall_requires in aio-pika 6.3.0 is 'aiormq>=2.9,<3', so we can't feel aiormq bug is fixed if we install aio-pika use pipenv\u3002\r\n\r\nhttps://github.com/mosquito/aio-pika/commit/64985751afae608344bbc06c85e7a17f796e2d09#diff-2eeaed663bd0d25b7e608891384b7298\r\nhttps://github.com/mosquito/aiormq/commit/26ffef5978856a58883cc4d99642bee550ad3370\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/264", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/264/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/264/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/264/events", "html_url": "https://github.com/mosquito/aio-pika/issues/264", "id": 507847825, "node_id": "MDU6SXNzdWU1MDc4NDc4MjU=", "number": 264, "title": "UI friendly connection name, connection_name", "user": {"login": "Gyllsdorff", "id": 1038004, "node_id": "MDQ6VXNlcjEwMzgwMDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1038004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gyllsdorff", "html_url": "https://github.com/Gyllsdorff", "followers_url": "https://api.github.com/users/Gyllsdorff/followers", "following_url": "https://api.github.com/users/Gyllsdorff/following{/other_user}", "gists_url": "https://api.github.com/users/Gyllsdorff/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gyllsdorff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gyllsdorff/subscriptions", "organizations_url": "https://api.github.com/users/Gyllsdorff/orgs", "repos_url": "https://api.github.com/users/Gyllsdorff/repos", "events_url": "https://api.github.com/users/Gyllsdorff/events{/privacy}", "received_events_url": "https://api.github.com/users/Gyllsdorff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-16T13:20:34Z", "updated_at": "2019-10-16T16:06:00Z", "closed_at": "2019-10-16T16:06:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "In many rabbitmq client libs it is possible to set a connection name that will be visible in the admin UI, this makes it a bit easier for admins to kill connections abusing the system, debugging, etc.\r\n\r\n[This is](https://github.com/pika/pika/issues/989) how it is done in Pika, is it possible to do the same thing in `aio-pika`? I took a look in the code but I couldn't find anything like it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/260", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/260/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/260/events", "html_url": "https://github.com/mosquito/aio-pika/issues/260", "id": 502631881, "node_id": "MDU6SXNzdWU1MDI2MzE4ODE=", "number": 260, "title": "Type not converted from str to ExchangeType in declare_exchange", "user": {"login": "heckad", "id": 45011689, "node_id": "MDQ6VXNlcjQ1MDExNjg5", "avatar_url": "https://avatars2.githubusercontent.com/u/45011689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heckad", "html_url": "https://github.com/heckad", "followers_url": "https://api.github.com/users/heckad/followers", "following_url": "https://api.github.com/users/heckad/following{/other_user}", "gists_url": "https://api.github.com/users/heckad/gists{/gist_id}", "starred_url": "https://api.github.com/users/heckad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heckad/subscriptions", "organizations_url": "https://api.github.com/users/heckad/orgs", "repos_url": "https://api.github.com/users/heckad/repos", "events_url": "https://api.github.com/users/heckad/events{/privacy}", "received_events_url": "https://api.github.com/users/heckad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-04T13:17:17Z", "updated_at": "2019-10-09T16:59:04Z", "closed_at": "2019-10-09T16:59:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\nconnection = await aio_pika.connect(\r\n    rabbitmq_option('url'),\r\n)\r\n\r\nasync with connection.channel() as channel:\r\n    exchange = await channel.declare_exchange('new', 'fanout', durable=True)\r\n```\r\n    \r\n    ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/257", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/257/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/257/events", "html_url": "https://github.com/mosquito/aio-pika/issues/257", "id": 498094871, "node_id": "MDU6SXNzdWU0OTgwOTQ4NzE=", "number": 257, "title": "Exceptions in the consume callback don't get to logs or stderr", "user": {"login": "Kaveshnikov", "id": 17450895, "node_id": "MDQ6VXNlcjE3NDUwODk1", "avatar_url": "https://avatars2.githubusercontent.com/u/17450895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kaveshnikov", "html_url": "https://github.com/Kaveshnikov", "followers_url": "https://api.github.com/users/Kaveshnikov/followers", "following_url": "https://api.github.com/users/Kaveshnikov/following{/other_user}", "gists_url": "https://api.github.com/users/Kaveshnikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kaveshnikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kaveshnikov/subscriptions", "organizations_url": "https://api.github.com/users/Kaveshnikov/orgs", "repos_url": "https://api.github.com/users/Kaveshnikov/repos", "events_url": "https://api.github.com/users/Kaveshnikov/events{/privacy}", "received_events_url": "https://api.github.com/users/Kaveshnikov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-25T07:14:08Z", "updated_at": "2020-01-30T18:44:40Z", "closed_at": "2020-01-30T18:44:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "When exceptions acquire in the `on_message()` callback they don't go to logging even if set log level DEBUG at the `aio_pika` logger. Only if set DEBUG level at `aiormq` they become visible. I understand that it happens because of `asyncio.Task` machinery, but it is not obvious behavior. Could you add exceptions handle by default?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/251", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/251/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/251/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/251/events", "html_url": "https://github.com/mosquito/aio-pika/issues/251", "id": 494052200, "node_id": "MDU6SXNzdWU0OTQwNTIyMDA=", "number": 251, "title": "Call to untyped function \"process\" in typed context", "user": {"login": "euri10", "id": 1104190, "node_id": "MDQ6VXNlcjExMDQxOTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1104190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euri10", "html_url": "https://github.com/euri10", "followers_url": "https://api.github.com/users/euri10/followers", "following_url": "https://api.github.com/users/euri10/following{/other_user}", "gists_url": "https://api.github.com/users/euri10/gists{/gist_id}", "starred_url": "https://api.github.com/users/euri10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euri10/subscriptions", "organizations_url": "https://api.github.com/users/euri10/orgs", "repos_url": "https://api.github.com/users/euri10/repos", "events_url": "https://api.github.com/users/euri10/events{/privacy}", "received_events_url": "https://api.github.com/users/euri10/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-16T13:32:39Z", "updated_at": "2019-09-16T14:00:42Z", "closed_at": "2019-09-16T13:53:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have this error because process is missing typing\r\n```\r\n    async def _process_message(\r\n        self, message: aio_pika.IncomingMessage\r\n    ) -> OneOfCeleryTask:\r\n        m: AsyncContextManager[aio_pika.IncomingMessage] = message.process()\r\n        async with m:\r\n            if message.routing_key == \"task.multi\":\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/243", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/243/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/243/events", "html_url": "https://github.com/mosquito/aio-pika/issues/243", "id": 487989731, "node_id": "MDU6SXNzdWU0ODc5ODk3MzE=", "number": 243, "title": "Bump aiormq version", "user": {"login": "alkorgun", "id": 3319200, "node_id": "MDQ6VXNlcjMzMTkyMDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3319200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alkorgun", "html_url": "https://github.com/alkorgun", "followers_url": "https://api.github.com/users/alkorgun/followers", "following_url": "https://api.github.com/users/alkorgun/following{/other_user}", "gists_url": "https://api.github.com/users/alkorgun/gists{/gist_id}", "starred_url": "https://api.github.com/users/alkorgun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alkorgun/subscriptions", "organizations_url": "https://api.github.com/users/alkorgun/orgs", "repos_url": "https://api.github.com/users/alkorgun/repos", "events_url": "https://api.github.com/users/alkorgun/events{/privacy}", "received_events_url": "https://api.github.com/users/alkorgun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-02T04:31:25Z", "updated_at": "2019-10-31T10:07:36Z", "closed_at": "2019-10-31T10:07:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "This import fails with 2.3.3: https://github.com/mosquito/aio-pika/blob/master/aio_pika/robust_connection.py#L6\r\n\r\n```python\r\nIn [1]: from aiormq.connection import parse_bool, parse_int\r\n---------------------------------------------------------------------------\r\nImportError                               Traceback (most recent call last)\r\n<ipython-input-12-a9c92ae11b88> in <module>\r\n----> 1 from aiormq.connection import parse_bool, parse_int\r\n\r\nImportError: cannot import name 'parse_int'\r\n\r\nIn [2]: import aiormq\r\n\r\nIn [3]: aiormq.__version__\r\nOut[3]: '2.3.3'\r\n\r\n# ->\r\n\r\nIn [1]: from aiormq.connection import parse_bool, parse_int\r\n\r\nIn [2]: import aiormq\r\n\r\nIn [3]: aiormq.__version__\r\nOut[3]: '2.7.4'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/236", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/236/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/236/events", "html_url": "https://github.com/mosquito/aio-pika/issues/236", "id": 479432124, "node_id": "MDU6SXNzdWU0Nzk0MzIxMjQ=", "number": 236, "title": "Channel is not closed", "user": {"login": "belegnar", "id": 263551, "node_id": "MDQ6VXNlcjI2MzU1MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/263551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/belegnar", "html_url": "https://github.com/belegnar", "followers_url": "https://api.github.com/users/belegnar/followers", "following_url": "https://api.github.com/users/belegnar/following{/other_user}", "gists_url": "https://api.github.com/users/belegnar/gists{/gist_id}", "starred_url": "https://api.github.com/users/belegnar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/belegnar/subscriptions", "organizations_url": "https://api.github.com/users/belegnar/orgs", "repos_url": "https://api.github.com/users/belegnar/repos", "events_url": "https://api.github.com/users/belegnar/events{/privacy}", "received_events_url": "https://api.github.com/users/belegnar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-12T00:27:09Z", "updated_at": "2019-08-12T01:01:18Z", "closed_at": "2019-08-12T01:01:18Z", "author_association": "NONE", "active_lock_reason": null, "body": ".", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/229", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/229/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/229/events", "html_url": "https://github.com/mosquito/aio-pika/issues/229", "id": 452597833, "node_id": "MDU6SXNzdWU0NTI1OTc4MzM=", "number": 229, "title": "RobustChannel will not reconnect if the queue/exchange is declared twice with the same name.", "user": {"login": "Darkless012", "id": 1187034, "node_id": "MDQ6VXNlcjExODcwMzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1187034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Darkless012", "html_url": "https://github.com/Darkless012", "followers_url": "https://api.github.com/users/Darkless012/followers", "following_url": "https://api.github.com/users/Darkless012/following{/other_user}", "gists_url": "https://api.github.com/users/Darkless012/gists{/gist_id}", "starred_url": "https://api.github.com/users/Darkless012/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Darkless012/subscriptions", "organizations_url": "https://api.github.com/users/Darkless012/orgs", "repos_url": "https://api.github.com/users/Darkless012/repos", "events_url": "https://api.github.com/users/Darkless012/events{/privacy}", "received_events_url": "https://api.github.com/users/Darkless012/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 451328863, "node_id": "MDU6TGFiZWw0NTEzMjg4NjM=", "url": "https://api.github.com/repos/mosquito/aio-pika/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-05T16:26:04Z", "updated_at": "2020-05-28T09:45:01Z", "closed_at": "2020-04-23T19:24:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you declare exchange for the second time (with the same parameters), it overrides the previous exchange in `self._exchanges[name]` reference, which causes \"on_reconnect\" not to pass new channel to declared exchanges/queues, resulting in `RuntimeError: <Channel: \"1\"> closed` errors.\r\n\r\nI would make a pull request but don't know what's the correct solution, so I will propose few below:\r\n\r\nI will state the examples on **exchanges**, but everything also applies to **queues**\r\n\r\n**Option 1 - Fetch exchange from already declared dict**\r\n\r\n`robust_channel.py`\r\n```\r\nasync def declare_exchange(self, name: str,\r\n                           type: ExchangeType=ExchangeType.DIRECT,\r\n                           durable: bool=None, auto_delete: bool=False,\r\n                           internal: bool=False, passive: bool=False,\r\n                           arguments: dict=None, timeout: int=None,\r\n                           robust: bool=True) -> Exchange:\r\n\r\n+   if name in self._exchanges:\r\n+       return self._exchanges[name]\r\n\r\n    exchange = await super().declare_exchange(\r\n        name=name, type=type, durable=durable, auto_delete=auto_delete,\r\n        internal=internal, passive=passive, arguments=arguments,\r\n        timeout=timeout,\r\n    )\r\n\r\n    if not internal and robust:\r\n        self._exchanges[name] = exchange\r\n\r\n    return exchange\r\n```\r\n\r\nCons: \r\n- You return object which is used elsewhere\r\n- If you declare exchange with different parameters it will silently pass and return current instance, instead of raising exception.\r\n\r\n**Option 2 - variance on Option 1**\r\nActually trying to declare the exchange and discarting fetched object afterward \r\n`robust_channel.py`\r\n```\r\nasync def declare_exchange(self, name: str,\r\n                           type: ExchangeType=ExchangeType.DIRECT,\r\n                           durable: bool=None, auto_delete: bool=False,\r\n                           internal: bool=False, passive: bool=False,\r\n                           arguments: dict=None, timeout: int=None,\r\n                           robust: bool=True) -> Exchange:\r\n\r\n    exchange = await super().declare_exchange(\r\n        name=name, type=type, durable=durable, auto_delete=auto_delete,\r\n        internal=internal, passive=passive, arguments=arguments,\r\n        timeout=timeout,\r\n    )\r\n\r\n+   if name in self._exchanges:\r\n+       return self._exchanges[name]\r\n\r\n    if not internal and robust:\r\n        self._exchanges[name] = exchange\r\n\r\n    return exchange\r\n```\r\n\r\nCons: \r\n- You return object which is used elsewhere\r\n- Discarting awaited object.\r\n- Confusing code without explanation/comments\r\n\r\n**Option 3 - Compare all exchange connection parameters**\r\n`robust_channel.py`\r\n```\r\nasync def declare_exchange(self, name: str,\r\n                           type: ExchangeType=ExchangeType.DIRECT,\r\n                           durable: bool=None, auto_delete: bool=False,\r\n                           internal: bool=False, passive: bool=False,\r\n                           arguments: dict=None, timeout: int=None,\r\n                           robust: bool=True) -> Exchange:\r\n\r\n+   if name in self._exchanges:\r\n+       exchange = self._exchanges[name]\r\n+       if exchange.__type != type or exchange.durable is not durable or ... # rest\r\n+           raise RuntimeException(\"can't declare exchange... different arguments\") \r\n+       return self._exchanges[name]\r\n\r\n    exchange = await super().declare_exchange(\r\n        name=name, type=type, durable=durable, auto_delete=auto_delete,\r\n        internal=internal, passive=passive, arguments=arguments,\r\n        timeout=timeout,\r\n    )\r\n\r\n    if not internal and robust:\r\n        self._exchanges[name] = exchange\r\n\r\n    return exchange\r\n```\r\n\r\n**Option 4 - Store all the created exchanges**\r\n\r\n`robust_channel.py`\r\n```\r\nasync def declare_exchange(self, name: str,\r\n                           type: ExchangeType=ExchangeType.DIRECT,\r\n                           durable: bool=None, auto_delete: bool=False,\r\n                           internal: bool=False, passive: bool=False,\r\n                           arguments: dict=None, timeout: int=None,\r\n                           robust: bool=True) -> Exchange:\r\n\r\n    exchange = await super().declare_exchange(\r\n        name=name, type=type, durable=durable, auto_delete=auto_delete,\r\n        internal=internal, passive=passive, arguments=arguments,\r\n        timeout=timeout,\r\n    )\r\n\r\n    if not internal and robust:\r\n+       self._exchanges[(name, id(exchange))] = exchange\r\n\r\n    return exchange\r\n```\r\n\r\nCons:\r\n- `exchange_delete` can't be done just by name - since you can have multiple instance with same name \r\n- OR delete all the references to the exchange with the name, in which case either make self._exchanges[name] = list() for easier delete lookup, but harder to cycle through (2 levels of nesting)\r\n\r\n\r\nI'm inclined to Option 2 or Option 3, but I'd like to know other opinions or Options.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/228", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/228/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/228/events", "html_url": "https://github.com/mosquito/aio-pika/issues/228", "id": 451938746, "node_id": "MDU6SXNzdWU0NTE5Mzg3NDY=", "number": 228, "title": "No way to use rabbitmq-autogenerated queue name without monkey patching", "user": {"login": "misuzu", "id": 248143, "node_id": "MDQ6VXNlcjI0ODE0Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/248143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/misuzu", "html_url": "https://github.com/misuzu", "followers_url": "https://api.github.com/users/misuzu/followers", "following_url": "https://api.github.com/users/misuzu/following{/other_user}", "gists_url": "https://api.github.com/users/misuzu/gists{/gist_id}", "starred_url": "https://api.github.com/users/misuzu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/misuzu/subscriptions", "organizations_url": "https://api.github.com/users/misuzu/orgs", "repos_url": "https://api.github.com/users/misuzu/repos", "events_url": "https://api.github.com/users/misuzu/events{/privacy}", "received_events_url": "https://api.github.com/users/misuzu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-04T11:18:55Z", "updated_at": "2019-06-18T16:52:48Z", "closed_at": "2019-06-18T16:52:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "When setting queue name to '' rabbitmq should generate queue name on its own.\r\naio-pika is not usable on secured rabbitmq instances:\r\n```python\r\nqueue = await self._channel.declare_queue(\r\n            name='',\r\n            auto_delete=True,\r\n            exclusive=True)\r\n```\r\n```\r\naiormq.exceptions.ChannelAccessRefused: ACCESS_REFUSED - access to queue 'amq_minjshlm3xwhkaaqnfaaqw6jbu' in vhost '****' refused for user '*****'\r\n```\r\n\r\nI have to monkey patch RobustQueue to get things working:\r\n```python\r\naio_pika.robust_queue.RobustQueue._get_random_queue_name = lambda x: ''\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/226", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/226/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/226/events", "html_url": "https://github.com/mosquito/aio-pika/issues/226", "id": 443511413, "node_id": "MDU6SXNzdWU0NDM1MTE0MTM=", "number": 226, "title": "QueueIterator and \"no_ack\"", "user": {"login": "decaz", "id": 31096, "node_id": "MDQ6VXNlcjMxMDk2", "avatar_url": "https://avatars1.githubusercontent.com/u/31096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decaz", "html_url": "https://github.com/decaz", "followers_url": "https://api.github.com/users/decaz/followers", "following_url": "https://api.github.com/users/decaz/following{/other_user}", "gists_url": "https://api.github.com/users/decaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/decaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decaz/subscriptions", "organizations_url": "https://api.github.com/users/decaz/orgs", "repos_url": "https://api.github.com/users/decaz/repos", "events_url": "https://api.github.com/users/decaz/events{/privacy}", "received_events_url": "https://api.github.com/users/decaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-13T17:15:16Z", "updated_at": "2019-06-28T10:06:31Z", "closed_at": "2019-06-28T10:06:31Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "`QueueIterator` should not reject messages on close if it was initialized with `no_ack=True`:\r\nhttps://github.com/mosquito/aio-pika/blob/83fe1b206022b26d39a70f6a3359d2e6963826e8/aio_pika/queue.py#L366-L370\r\nOtherwise the exception will be raised:\r\nhttps://github.com/mosquito/aio-pika/blob/83fe1b206022b26d39a70f6a3359d2e6963826e8/aio_pika/message.py#L557-L558", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/224", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/224/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/224/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/224/events", "html_url": "https://github.com/mosquito/aio-pika/issues/224", "id": 442996395, "node_id": "MDU6SXNzdWU0NDI5OTYzOTU=", "number": 224, "title": "Question: is it possible to set heartbeat with uri params", "user": {"login": "MichalBedlinski", "id": 25527422, "node_id": "MDQ6VXNlcjI1NTI3NDIy", "avatar_url": "https://avatars2.githubusercontent.com/u/25527422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MichalBedlinski", "html_url": "https://github.com/MichalBedlinski", "followers_url": "https://api.github.com/users/MichalBedlinski/followers", "following_url": "https://api.github.com/users/MichalBedlinski/following{/other_user}", "gists_url": "https://api.github.com/users/MichalBedlinski/gists{/gist_id}", "starred_url": "https://api.github.com/users/MichalBedlinski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MichalBedlinski/subscriptions", "organizations_url": "https://api.github.com/users/MichalBedlinski/orgs", "repos_url": "https://api.github.com/users/MichalBedlinski/repos", "events_url": "https://api.github.com/users/MichalBedlinski/events{/privacy}", "received_events_url": "https://api.github.com/users/MichalBedlinski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-11T14:01:33Z", "updated_at": "2019-05-13T21:10:22Z", "closed_at": "2019-05-13T21:10:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have uri string : \"amqp://NANA:NANA@localhost:5672/NANA?heartbeat=10\"\r\nAfter i create connection i get only :\r\namqp://NANA:****@localhost:5672/NANA\r\nand in rabbitmq management i get default value of 60s for heatbeat\r\n\r\nIs it possible to set value for heartbeat for this connection ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/223", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/223/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/223/events", "html_url": "https://github.com/mosquito/aio-pika/issues/223", "id": 442528097, "node_id": "MDU6SXNzdWU0NDI1MjgwOTc=", "number": 223, "title": "Question: What is the best way to cleanly close a pool of channels", "user": {"login": "pappachino", "id": 4918300, "node_id": "MDQ6VXNlcjQ5MTgzMDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4918300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pappachino", "html_url": "https://github.com/pappachino", "followers_url": "https://api.github.com/users/pappachino/followers", "following_url": "https://api.github.com/users/pappachino/following{/other_user}", "gists_url": "https://api.github.com/users/pappachino/gists{/gist_id}", "starred_url": "https://api.github.com/users/pappachino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pappachino/subscriptions", "organizations_url": "https://api.github.com/users/pappachino/orgs", "repos_url": "https://api.github.com/users/pappachino/repos", "events_url": "https://api.github.com/users/pappachino/events{/privacy}", "received_events_url": "https://api.github.com/users/pappachino/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-10T04:00:26Z", "updated_at": "2020-02-17T14:39:59Z", "closed_at": "2020-02-17T14:39:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, \r\n\r\nIn most of the documentation, context managers are being used to close channels and connections I believe.\r\nHowever if I have a connection pool and a channel pool, I would like to cleanly close all the channels and the connections in the pool on shutdown of the app. But seems like there is no wait_closed or close, as in the aiopg package.\r\n\r\nMaybe I am missing out something, can you help me out with an example where I can pass a channel pool to a producer and cleanly close all the alive connections and channels.\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/219", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/219/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/219/events", "html_url": "https://github.com/mosquito/aio-pika/issues/219", "id": 438748172, "node_id": "MDU6SXNzdWU0Mzg3NDgxNzI=", "number": 219, "title": "Connection __del__ raises exception if connection attempt was unsuccessful", "user": {"login": "kremius", "id": 3407912, "node_id": "MDQ6VXNlcjM0MDc5MTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3407912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kremius", "html_url": "https://github.com/kremius", "followers_url": "https://api.github.com/users/kremius/followers", "following_url": "https://api.github.com/users/kremius/following{/other_user}", "gists_url": "https://api.github.com/users/kremius/gists{/gist_id}", "starred_url": "https://api.github.com/users/kremius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kremius/subscriptions", "organizations_url": "https://api.github.com/users/kremius/orgs", "repos_url": "https://api.github.com/users/kremius/repos", "events_url": "https://api.github.com/users/kremius/events{/privacy}", "received_events_url": "https://api.github.com/users/kremius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-30T12:17:26Z", "updated_at": "2019-05-13T12:12:32Z", "closed_at": "2019-05-13T12:12:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "How to reproduce:\r\n1. `sudo rabbitmqctl stop_app`\r\n2. Run the snippet below:\r\n```python\r\nimport aio_pika\r\nimport asyncio\r\n\r\nasync def connect_to_rabbit():\r\n    while True:\r\n        try:\r\n            rabbit = await aio_pika.connect('amqp://guest:guest@localhost:5672/')\r\n        except Exception as e:\r\n            await asyncio.sleep(1)\r\n\r\nloop = asyncio.get_event_loop()\r\nloop.create_task(connect_to_rabbit())\r\nloop.run_forever()\r\n```\r\nAfter some time errors like that will start appear:\r\n```\r\nFuture exception was never retrieved\r\nfuture: <Future finished exception=AttributeError(\"'NoneType' object has no attribute 'close'\")>\r\nTraceback (most recent call last):\r\n  File \"/home/alexander/code/test-3.7/lib/python3.7/site-packages/aio_pika/connection.py\", line 38, in close\r\n    return await self.connection.close(exc)\r\nAttributeError: 'NoneType' object has no attribute 'close'\r\n```\r\nSeems like it's because when exception is raised during connection then `self.connection` (https://github.com/mosquito/aio-pika/blob/master/aio_pika/connection.py#L48) is still `None`, but `__del__` doesn't check it (https://github.com/mosquito/aio-pika/blob/master/aio_pika/connection.py#L192). That causes `close` call on `None`.\r\nI fixed it locally by inserting in `__del__`\r\n```python\r\nif not self.connection:\r\n    return\r\n```\r\nbut I'm not really sure if it's a proper fix.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/218", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/218/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/218/events", "html_url": "https://github.com/mosquito/aio-pika/issues/218", "id": 438657871, "node_id": "MDU6SXNzdWU0Mzg2NTc4NzE=", "number": 218, "title": "How to properly close RobustConnection?", "user": {"login": "kremius", "id": 3407912, "node_id": "MDQ6VXNlcjM0MDc5MTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3407912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kremius", "html_url": "https://github.com/kremius", "followers_url": "https://api.github.com/users/kremius/followers", "following_url": "https://api.github.com/users/kremius/following{/other_user}", "gists_url": "https://api.github.com/users/kremius/gists{/gist_id}", "starred_url": "https://api.github.com/users/kremius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kremius/subscriptions", "organizations_url": "https://api.github.com/users/kremius/orgs", "repos_url": "https://api.github.com/users/kremius/repos", "events_url": "https://api.github.com/users/kremius/events{/privacy}", "received_events_url": "https://api.github.com/users/kremius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-30T08:28:37Z", "updated_at": "2019-05-05T14:29:40Z", "closed_at": "2019-05-05T14:26:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```python\r\nimport aio_pika\r\nimport asyncio\r\n\r\nasync def connect_to_rabbit():\r\n    rabbit = await aio_pika.connect_robust('amqp://guest:guest@localhost:5672/')\r\n    await rabbit.close()\r\n\r\nloop = asyncio.get_event_loop()\r\nfor i in range(0, 100):\r\n    loop.create_task(connect_to_rabbit())\r\nloop.run_forever()\r\n```\r\nAfter ~10 seconds (reconnect interval I assume?) a lot of connections can be seen here  `http://127.0.0.1:15672/#/connections`:\r\n![100-connections](https://user-images.githubusercontent.com/3407912/56949046-9135ad00-6b3a-11e9-883f-1a1457a020a7.png)\r\nIf `aio_pika.connect_robust` is replaced with simple `aio_pika.connect` then everything works as expected.\r\nIs there any way to close robust connection reliably?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/216", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/216/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/216/events", "html_url": "https://github.com/mosquito/aio-pika/issues/216", "id": 436133835, "node_id": "MDU6SXNzdWU0MzYxMzM4MzU=", "number": 216, "title": "Exception in Queue.consume callback isn't propagated properly", "user": {"login": "kremius", "id": 3407912, "node_id": "MDQ6VXNlcjM0MDc5MTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3407912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kremius", "html_url": "https://github.com/kremius", "followers_url": "https://api.github.com/users/kremius/followers", "following_url": "https://api.github.com/users/kremius/following{/other_user}", "gists_url": "https://api.github.com/users/kremius/gists{/gist_id}", "starred_url": "https://api.github.com/users/kremius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kremius/subscriptions", "organizations_url": "https://api.github.com/users/kremius/orgs", "repos_url": "https://api.github.com/users/kremius/repos", "events_url": "https://api.github.com/users/kremius/events{/privacy}", "received_events_url": "https://api.github.com/users/kremius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-23T11:19:57Z", "updated_at": "2019-04-24T07:31:20Z", "closed_at": "2019-04-24T07:31:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "``` python\r\ndef foo(m):\r\n    print('exception will be raised')\r\n    raise ValueError('error')\r\n\r\nawait queue.consume(foo)\r\n```\r\nAnd then a new message is received from RabbitMQ.\r\n\r\n**Expected behavior:** `asyncio` exception handler is called immediately.\r\n**Actual behavior**: exception is placed into future and then that future is abandoned. When future's `__del__` will be called it will call loop exception handler.\r\n\r\nI assume that happens because here https://github.com/mosquito/aio-pika/blob/master/aio_pika/tools.py#L31 callback call is wrapped into `run` function which places raised exception into future, but seems like that future is never handled afterwards.\r\nI \"fixed\" that issue locally by removing exception handling:\r\n```python\r\n# try:\r\nfuture.set_result(func(*args, **kwargs))\r\n# except Exception as e:\r\n#     future.set_exception(e)\r\n```\r\nbut I'm not sure that it's really good fix.\r\n\r\nIf it's expected behavior then can you hint how to properly handle exceptions in such cases?\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/209", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/209/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/209/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/209/events", "html_url": "https://github.com/mosquito/aio-pika/issues/209", "id": 428748968, "node_id": "MDU6SXNzdWU0Mjg3NDg5Njg=", "number": 209, "title": "Headers value type forced to str", "user": {"login": "Artimi", "id": 1468560, "node_id": "MDQ6VXNlcjE0Njg1NjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1468560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Artimi", "html_url": "https://github.com/Artimi", "followers_url": "https://api.github.com/users/Artimi/followers", "following_url": "https://api.github.com/users/Artimi/following{/other_user}", "gists_url": "https://api.github.com/users/Artimi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Artimi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Artimi/subscriptions", "organizations_url": "https://api.github.com/users/Artimi/orgs", "repos_url": "https://api.github.com/users/Artimi/repos", "events_url": "https://api.github.com/users/Artimi/events{/privacy}", "received_events_url": "https://api.github.com/users/Artimi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-03T12:50:20Z", "updated_at": "2019-04-04T14:02:13Z", "closed_at": "2019-04-03T15:18:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nThanks for the work you are doing on `aio_pika` lately. Much appreciated.\r\n\r\nI've noticed that with the new major version all headers values are cast to `str` see:\r\n```python\r\n>>> import aio_pika\r\n>>> m = aio_pika.Message(b'hello', headers = {'int': 42})\r\n>>> m.headers['int'] == 42\r\nFalse\r\n>>> type(m.headers['int'])\r\nstr\r\n```\r\nIs this intentional? I can see it is probably because of https://github.com/mosquito/aio-pika/blob/master/aio_pika/message.py#L164. What is the reason behind this? We are sending ints in headers so this blocks us from update to current `aio_pika`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/203", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/203/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/203/events", "html_url": "https://github.com/mosquito/aio-pika/issues/203", "id": 414223256, "node_id": "MDU6SXNzdWU0MTQyMjMyNTY=", "number": 203, "title": "asyncio close is called twice", "user": {"login": "josephbiko", "id": 17003173, "node_id": "MDQ6VXNlcjE3MDAzMTcz", "avatar_url": "https://avatars3.githubusercontent.com/u/17003173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josephbiko", "html_url": "https://github.com/josephbiko", "followers_url": "https://api.github.com/users/josephbiko/followers", "following_url": "https://api.github.com/users/josephbiko/following{/other_user}", "gists_url": "https://api.github.com/users/josephbiko/gists{/gist_id}", "starred_url": "https://api.github.com/users/josephbiko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josephbiko/subscriptions", "organizations_url": "https://api.github.com/users/josephbiko/orgs", "repos_url": "https://api.github.com/users/josephbiko/repos", "events_url": "https://api.github.com/users/josephbiko/events{/privacy}", "received_events_url": "https://api.github.com/users/josephbiko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-25T17:38:11Z", "updated_at": "2019-02-26T13:01:06Z", "closed_at": "2019-02-26T13:01:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nimport aio_pika\r\nimport asyncio\r\n\r\nasync def main():\r\n    connection = await aio_pika.connect()\r\n\r\n    async with connection:\r\n        channel = await connection.channel()\r\n\r\n        queue = await channel.declare_queue('test')\r\n\r\n        async with queue.iterator() as q:\r\n            async for message in q:\r\n                with message.process():\r\n                    break\r\n\r\nasync def w():\r\n\r\n    await asyncio.sleep(3)\r\n\r\ntask = asyncio.ensure_future(main())\r\nasyncio.get_event_loop().run_until_complete(w())\r\ntask.cancel()\r\nasyncio.get_event_loop().run_until_complete(w())\r\n```\r\n\r\nthe following code produces the following error:\r\n```\r\n\r\nTraceback (most recent call last):\r\n  File \"D:/stack/sendall/website/sendall/test.py\", line 16, in main\r\n    break\r\n  File \"D:\\Programs\\python3.7\\venvs\\sendall\\lib\\site-packages\\aio_pika\\queue.py\", line 395, in __aexit__\r\n    await self.close()\r\n  File \"D:\\Programs\\python3.7\\venvs\\sendall\\lib\\site-packages\\aio_pika\\tools.py\", line 59, in awaiter\r\n    return await future\r\n  File \"D:\\Programs\\python3.7\\venvs\\sendall\\lib\\site-packages\\aio_pika\\queue.py\", line 349, in close\r\n    await self._amqp_queue.cancel(self._consumer_tag)\r\n  File \"D:\\Programs\\python3.7\\venvs\\sendall\\lib\\site-packages\\aio_pika\\queue.py\", line 226, in cancel\r\n    timeout=timeout, loop=self.loop\r\n  File \"D:\\Programs\\python3.7\\lib\\asyncio\\tasks.py\", line 388, in wait_for\r\n    return await fut\r\n  File \"D:\\Programs\\python3.7\\venvs\\sendall\\lib\\site-packages\\aiormq\\channel.py\", line 287, in basic_cancel\r\n    nowait=nowait,\r\n  File \"D:\\Programs\\python3.7\\venvs\\sendall\\lib\\site-packages\\aiormq\\base.py\", line 161, in wrap\r\n    return await self.create_task(func(self, *args, **kwargs))\r\n  File \"D:\\Programs\\python3.7\\venvs\\sendall\\lib\\site-packages\\aiormq\\base.py\", line 22, in __await__\r\n    return (yield from self.task.__await__(*args, **kwargs))\r\n  File \"D:\\Programs\\python3.7\\venvs\\sendall\\lib\\site-packages\\aiormq\\channel.py\", line 87, in rpc\r\n    pamqp.frame.marshal(frame, self.number)\r\n  File \"D:\\Programs\\python3.7\\venvs\\sendall\\lib\\site-packages\\pamqp\\frame.py\", line 99, in marshal\r\n    return _marshal_method_frame(frame_value, channel_id)\r\n  File \"D:\\Programs\\python3.7\\venvs\\sendall\\lib\\site-packages\\pamqp\\frame.py\", line 246, in _marshal_method_frame\r\n    frame_value.marshal())\r\n  File \"D:\\Programs\\python3.7\\venvs\\sendall\\lib\\site-packages\\pamqp\\specification.py\", line 192, in marshal\r\n    output.append(encode.by_type(data_value, data_type))\r\n  File \"D:\\Programs\\python3.7\\venvs\\sendall\\lib\\site-packages\\pamqp\\encode.py\", line 410, in by_type\r\n    return short_string(value)\r\n  File \"D:\\Programs\\python3.7\\venvs\\sendall\\lib\\site-packages\\pamqp\\encode.py\", line 227, in short_string\r\n    raise TypeError('bytes or str required')\r\nTypeError: bytes or str required\r\n```\r\n\r\nThis is because self.close is called twice in the Queue iterator.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/202", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/202/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/202/events", "html_url": "https://github.com/mosquito/aio-pika/issues/202", "id": 414178905, "node_id": "MDU6SXNzdWU0MTQxNzg5MDU=", "number": 202, "title": "RobustConnection doesn't reconnect if RabbitMQ is down", "user": {"login": "decaz", "id": 31096, "node_id": "MDQ6VXNlcjMxMDk2", "avatar_url": "https://avatars1.githubusercontent.com/u/31096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decaz", "html_url": "https://github.com/decaz", "followers_url": "https://api.github.com/users/decaz/followers", "following_url": "https://api.github.com/users/decaz/following{/other_user}", "gists_url": "https://api.github.com/users/decaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/decaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decaz/subscriptions", "organizations_url": "https://api.github.com/users/decaz/orgs", "repos_url": "https://api.github.com/users/decaz/repos", "events_url": "https://api.github.com/users/decaz/events{/privacy}", "received_events_url": "https://api.github.com/users/decaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-02-25T16:03:22Z", "updated_at": "2019-10-31T10:02:50Z", "closed_at": "2019-10-31T10:02:50Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "If connection was closed after it was connected then it tries to reconnect, but if it cannot connect from the very beginning then it wouldn't try to reconnect.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/201", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/201/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/201/events", "html_url": "https://github.com/mosquito/aio-pika/issues/201", "id": 414151387, "node_id": "MDU6SXNzdWU0MTQxNTEzODc=", "number": 201, "title": "yarl exception when connecting", "user": {"login": "decaz", "id": 31096, "node_id": "MDQ6VXNlcjMxMDk2", "avatar_url": "https://avatars1.githubusercontent.com/u/31096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decaz", "html_url": "https://github.com/decaz", "followers_url": "https://api.github.com/users/decaz/followers", "following_url": "https://api.github.com/users/decaz/following{/other_user}", "gists_url": "https://api.github.com/users/decaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/decaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decaz/subscriptions", "organizations_url": "https://api.github.com/users/decaz/orgs", "repos_url": "https://api.github.com/users/decaz/repos", "events_url": "https://api.github.com/users/decaz/events{/privacy}", "received_events_url": "https://api.github.com/users/decaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-25T15:09:06Z", "updated_at": "2019-03-10T19:11:48Z", "closed_at": "2019-03-10T19:11:48Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "If virtualhost is specified explicitly (not `/`), then yarl raises `ValueError: Path in a URL with authority should start with a slash ('/') if set`:\r\nhttps://github.com/aio-libs/yarl/blob/948f9c2df5a40a7a59e4bea3901bdd537d984b28/tests/test_url_build.py#L166-L168", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/200", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/200/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/200/events", "html_url": "https://github.com/mosquito/aio-pika/issues/200", "id": 414148784, "node_id": "MDU6SXNzdWU0MTQxNDg3ODQ=", "number": 200, "title": "Callbacks were gone", "user": {"login": "decaz", "id": 31096, "node_id": "MDQ6VXNlcjMxMDk2", "avatar_url": "https://avatars1.githubusercontent.com/u/31096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decaz", "html_url": "https://github.com/decaz", "followers_url": "https://api.github.com/users/decaz/followers", "following_url": "https://api.github.com/users/decaz/following{/other_user}", "gists_url": "https://api.github.com/users/decaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/decaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decaz/subscriptions", "organizations_url": "https://api.github.com/users/decaz/orgs", "repos_url": "https://api.github.com/users/decaz/repos", "events_url": "https://api.github.com/users/decaz/events{/privacy}", "received_events_url": "https://api.github.com/users/decaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-25T15:03:44Z", "updated_at": "2019-03-07T15:09:37Z", "closed_at": "2019-03-07T15:09:37Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "There are no more `add_connection_lost_callback` and `add_reconnect_callback` callbacks for connection.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/199", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/199/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/199/events", "html_url": "https://github.com/mosquito/aio-pika/issues/199", "id": 414144635, "node_id": "MDU6SXNzdWU0MTQxNDQ2MzU=", "number": 199, "title": "Bind exception when routing_key is None", "user": {"login": "decaz", "id": 31096, "node_id": "MDQ6VXNlcjMxMDk2", "avatar_url": "https://avatars1.githubusercontent.com/u/31096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decaz", "html_url": "https://github.com/decaz", "followers_url": "https://api.github.com/users/decaz/followers", "following_url": "https://api.github.com/users/decaz/following{/other_user}", "gists_url": "https://api.github.com/users/decaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/decaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decaz/subscriptions", "organizations_url": "https://api.github.com/users/decaz/orgs", "repos_url": "https://api.github.com/users/decaz/repos", "events_url": "https://api.github.com/users/decaz/events{/privacy}", "received_events_url": "https://api.github.com/users/decaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-25T14:55:32Z", "updated_at": "2019-03-10T19:34:21Z", "closed_at": "2019-03-10T19:34:21Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Binding queue with the default `routing_key: str=None` value leads to the following exception:\r\n```\r\n  File \"/home/decaz/.virtualenvs/test-aio-pika/lib/python3.6/site-packages/aio_pika/robust_queue.py\", line 67, in bind\r\n    **kwargs\r\n  File \"/usr/lib/python3.6/asyncio/coroutines.py\", line 129, in throw\r\n    return self.gen.throw(type, value, traceback)\r\n  File \"/home/decaz/.virtualenvs/test-aio-pika/lib/python3.6/site-packages/aio_pika/queue.py\", line 125, in bind\r\n    ), timeout=timeout, loop=self.loop\r\n  File \"/usr/lib/python3.6/asyncio/tasks.py\", line 339, in wait_for\r\n    return (yield from fut)\r\n  File \"/usr/lib/python3.6/asyncio/coroutines.py\", line 129, in throw\r\n    return self.gen.throw(type, value, traceback)\r\n  File \"/home/decaz/.virtualenvs/test-aio-pika/lib/python3.6/site-packages/aiormq/channel.py\", line 487, in queue_bind\r\n    nowait=nowait, arguments=arguments\r\n  File \"/usr/lib/python3.6/asyncio/coroutines.py\", line 129, in throw\r\n    return self.gen.throw(type, value, traceback)\r\n  File \"/home/decaz/.virtualenvs/test-aio-pika/lib/python3.6/site-packages/aiormq/base.py\", line 161, in wrap\r\n    return await self.create_task(func(self, *args, **kwargs))\r\n  File \"/home/decaz/.virtualenvs/test-aio-pika/lib/python3.6/site-packages/aiormq/base.py\", line 22, in __await__\r\n    return (yield from self.task.__await__(*args, **kwargs))\r\n  File \"/usr/lib/python3.6/asyncio/coroutines.py\", line 126, in send\r\n    return self.gen.send(value)\r\n  File \"/home/decaz/.virtualenvs/test-aio-pika/lib/python3.6/site-packages/aiormq/channel.py\", line 87, in rpc\r\n    pamqp.frame.marshal(frame, self.number)\r\n  File \"/home/decaz/.virtualenvs/test-aio-pika/lib/python3.6/site-packages/pamqp/frame.py\", line 99, in marshal\r\n    return _marshal_method_frame(frame_value, channel_id)\r\n  File \"/home/decaz/.virtualenvs/test-aio-pika/lib/python3.6/site-packages/pamqp/frame.py\", line 246, in _marshal_method_frame\r\n    frame_value.marshal())\r\n  File \"/home/decaz/.virtualenvs/test-aio-pika/lib/python3.6/site-packages/pamqp/specification.py\", line 192, in marshal\r\n    output.append(encode.by_type(data_value, data_type))\r\n  File \"/home/decaz/.virtualenvs/test-aio-pika/lib/python3.6/site-packages/pamqp/encode.py\", line 410, in by_type\r\n    return short_string(value)\r\n  File \"/home/decaz/.virtualenvs/test-aio-pika/lib/python3.6/site-packages/pamqp/encode.py\", line 227, in short_string\r\n    raise TypeError('bytes or str required')\r\nTypeError: bytes or str required\r\n```\r\nI guess there should be something like in `pika`: https://github.com/pika/pika/blob/a3818a5dfd76b51a84f03f7683dc024fc8324679/pika/channel.py#L781-L782\r\nDidn't check but maybe `unbind` has the same problem.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/197", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/197/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/197/events", "html_url": "https://github.com/mosquito/aio-pika/issues/197", "id": 413019824, "node_id": "MDU6SXNzdWU0MTMwMTk4MjQ=", "number": 197, "title": "Aio_pika (with aiormq) is now incompatible with RabbitMQ 3.3", "user": {"login": "zarybnicky", "id": 5161057, "node_id": "MDQ6VXNlcjUxNjEwNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5161057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zarybnicky", "html_url": "https://github.com/zarybnicky", "followers_url": "https://api.github.com/users/zarybnicky/followers", "following_url": "https://api.github.com/users/zarybnicky/following{/other_user}", "gists_url": "https://api.github.com/users/zarybnicky/gists{/gist_id}", "starred_url": "https://api.github.com/users/zarybnicky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zarybnicky/subscriptions", "organizations_url": "https://api.github.com/users/zarybnicky/orgs", "repos_url": "https://api.github.com/users/zarybnicky/repos", "events_url": "https://api.github.com/users/zarybnicky/events{/privacy}", "received_events_url": "https://api.github.com/users/zarybnicky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2019-02-21T16:43:46Z", "updated_at": "2020-01-09T12:58:02Z", "closed_at": "2019-05-07T13:36:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After upgrading to the lastest aio_pika version, our code communicating with RabbitMQ 3.3.5 (don't ask why...) stopped working. We've traced the problem to a queue_declare call with arguments that include x-message-ttl, without it the code works OK. I thought the problem was bad serialization, but any type other than int gets an expected error from RabbitMQ.\r\n\r\nTesting with RabbitMQ 3.7 works without a problem, so we're now downgrading indefinitely to 4.* as we are unable to upgrade our Rabbit instance.\r\n\r\nFor further reference, the relevant stack trace:\r\n```\r\n[2019-02-21 17:24:48,805] aiormq.connection - DEBUG - Can not read bytes from server:\r\nTraceback (most recent call last):\r\n  File \"/var/lib/mundoscaldis/mundoscaldis-monoprocessing/.venv/lib/python3.6/site-packages/aiormq/connection.py\", line 295, in __reader\r\n    weight, channel, frame = await self.__receive_frame()\r\n  File \"/var/lib/mundoscaldis/mundoscaldis-monoprocessing/.venv/lib/python3.6/site-packages/aiormq/base.py\", line 161, in wrap\r\n    return await self.create_task(func(self, *args, **kwargs))\r\n  File \"/var/lib/mundoscaldis/mundoscaldis-monoprocessing/.venv/lib/python3.6/site-packages/aiormq/base.py\", line 22, in __await__\r\n    return (yield from self.task.__await__(*args, **kwargs))\r\n  File \"/var/lib/mundoscaldis/mundoscaldis-monoprocessing/.venv/lib/python3.6/site-packages/aiormq/connection.py\", line 246, in __receive_frame\r\n    frame_header = await self.reader.readexactly(1)\r\n  File \"/usr/lib64/python3.6/asyncio/streams.py\", line 672, in readexactly\r\n    raise IncompleteReadError(incomplete, n)\r\nasyncio.streams.IncompleteReadError: 0 bytes read on a total of 1 expected bytes\r\n\r\n[2019-02-21 17:24:48,809] asyncio - ERROR - Task exception was never retrieved\r\nfuture: <Task finished coro=<_wrap_awaitable() done, defined at /usr/lib64/python3.6/asyncio/tasks.py:530> exception=ConnectionError('0 bytes read on a total of 1 expected bytes',)>\r\nTraceback (most recent call last):\r\n  File \"/var/lib/mundoscaldis/mundoscaldis-monoprocessing/.venv/lib/python3.6/site-packages/aiormq/base.py\", line 22, in __await__\r\n    return (yield from self.task.__await__(*args, **kwargs))\r\nconcurrent.futures._base.CancelledError\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"main.py\", line 4, in <module>\r\n    main()\r\n  [...]\r\n  File \"/var/lib/mundoscaldis/mundoscaldis-monoprocessing/.venv/lib/python3.6/site-packages/mundoscaldis/services/rabbitmq_service.py\", line 102, in _declare_queue\r\n    que.real_queue = await self.chan.declare_queue(que.name, **que.opts)\r\n  File \"/var/lib/mundoscaldis/mundoscaldis-monoprocessing/.venv/lib/python3.6/site-packages/aio_pika/robust_channel.py\", line 127, in declare_queue\r\n    arguments=arguments, timeout=timeout,\r\n  File \"/var/lib/mundoscaldis/mundoscaldis-monoprocessing/.venv/lib/python3.6/site-packages/aio_pika/channel.py\", line 239, in declare_queue\r\n    await queue.declare(timeout=timeout)\r\n  File \"/var/lib/mundoscaldis/mundoscaldis-monoprocessing/.venv/lib/python3.6/site-packages/aio_pika/queue.py\", line 86, in declare\r\n    ), timeout=timeout, loop=self.loop\r\n  File \"/usr/lib64/python3.6/asyncio/tasks.py\", line 339, in wait_for\r\n    return (yield from fut)\r\n  File \"/var/lib/mundoscaldis/mundoscaldis-monoprocessing/.venv/lib/python3.6/site-packages/aiormq/channel.py\", line 505, in queue_declare\r\n    arguments=arguments,\r\n  File \"/var/lib/mundoscaldis/mundoscaldis-monoprocessing/.venv/lib/python3.6/site-packages/aiormq/base.py\", line 161, in wrap\r\n    return await self.create_task(func(self, *args, **kwargs))\r\n  File \"/var/lib/mundoscaldis/mundoscaldis-monoprocessing/.venv/lib/python3.6/site-packages/aiormq/base.py\", line 24, in __await__\r\n    raise self.exception from e\r\n  File \"/usr/lib64/python3.6/asyncio/tasks.py\", line 537, in _wrap_awaitable\r\n    return (yield from awaitable.__await__())\r\n  File \"/var/lib/mundoscaldis/mundoscaldis-monoprocessing/.venv/lib/python3.6/site-packages/aiormq/base.py\", line 24, in __await__\r\n    raise self.exception from e\r\n  File \"/usr/lib64/python3.6/asyncio/tasks.py\", line 537, in _wrap_awaitable\r\n    return (yield from awaitable.__await__())\r\n  File \"/var/lib/mundoscaldis/mundoscaldis-monoprocessing/.venv/lib/python3.6/site-packages/aiormq/base.py\", line 24, in __await__\r\n    raise self.exception from e\r\nConnectionError: 0 bytes read on a total of 1 expected bytes\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/196", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/196/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/196/events", "html_url": "https://github.com/mosquito/aio-pika/issues/196", "id": 410868891, "node_id": "MDU6SXNzdWU0MTA4Njg4OTE=", "number": 196, "title": "Exception when reconnecting", "user": {"login": "caiohsramos", "id": 12804854, "node_id": "MDQ6VXNlcjEyODA0ODU0", "avatar_url": "https://avatars0.githubusercontent.com/u/12804854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caiohsramos", "html_url": "https://github.com/caiohsramos", "followers_url": "https://api.github.com/users/caiohsramos/followers", "following_url": "https://api.github.com/users/caiohsramos/following{/other_user}", "gists_url": "https://api.github.com/users/caiohsramos/gists{/gist_id}", "starred_url": "https://api.github.com/users/caiohsramos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caiohsramos/subscriptions", "organizations_url": "https://api.github.com/users/caiohsramos/orgs", "repos_url": "https://api.github.com/users/caiohsramos/repos", "events_url": "https://api.github.com/users/caiohsramos/events{/privacy}", "received_events_url": "https://api.github.com/users/caiohsramos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-15T17:24:18Z", "updated_at": "2019-02-22T16:11:33Z", "closed_at": "2019-02-22T16:11:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI'm getting the following exception:\r\n```\r\nTask exception was never retrieved\r\nfuture: <Task finished coro=<_wrap_awaitable() done, defined at /home/caio.ramos/anaconda3/lib/python3.7/asyncio/tasks.py:592> exception=ConnectionError('0 bytes read on a total of 1 expected bytes')>\r\nTraceback (most recent call last):\r\n  File \"/home/caio.ramos/anaconda3/lib/python3.7/site-packages/aiormq/base.py\", line 22, in __await__\r\n    return (yield from self.task.__await__(*args, **kwargs))\r\nconcurrent.futures._base.CancelledError\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/caio.ramos/anaconda3/lib/python3.7/asyncio/tasks.py\", line 599, in _wrap_awaitable\r\n    return (yield from awaitable.__await__())\r\n  File \"/home/caio.ramos/anaconda3/lib/python3.7/site-packages/aiormq/base.py\", line 24, in __await__\r\n    raise self.exception from e\r\nConnectionError: 0 bytes read on a total of 1 expected bytes\r\n```\r\nIt happens after a while when I connect, and keeps repeating. I'm basically running the following code:\r\n```\r\nasync def start_consumer():\r\n    conn = await io_pika.connect_robust()\r\n    queue_name = 'test_queue'\r\n\r\n    channel = await conn.channel()\r\n\r\n    await channel.set_qos(prefetch_count=5)\r\n\r\n    queue = await channel.declare_queue(\r\n        queue_name, auto_delete=True\r\n    )\r\n\r\n    await queue.consume(process_message)\r\n```\r\nThe message handling works fine, but it keeps showing that exception.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/191", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/191/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/191/events", "html_url": "https://github.com/mosquito/aio-pika/issues/191", "id": 404306095, "node_id": "MDU6SXNzdWU0MDQzMDYwOTU=", "number": 191, "title": "Hang at exit, likely due to run_in_executor changes", "user": {"login": "dequis", "id": 94108, "node_id": "MDQ6VXNlcjk0MTA4", "avatar_url": "https://avatars2.githubusercontent.com/u/94108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dequis", "html_url": "https://github.com/dequis", "followers_url": "https://api.github.com/users/dequis/followers", "following_url": "https://api.github.com/users/dequis/following{/other_user}", "gists_url": "https://api.github.com/users/dequis/gists{/gist_id}", "starred_url": "https://api.github.com/users/dequis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dequis/subscriptions", "organizations_url": "https://api.github.com/users/dequis/orgs", "repos_url": "https://api.github.com/users/dequis/repos", "events_url": "https://api.github.com/users/dequis/events{/privacy}", "received_events_url": "https://api.github.com/users/dequis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-29T14:04:04Z", "updated_at": "2019-02-21T09:45:10Z", "closed_at": "2019-02-21T09:45:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "re: https://github.com/mosquito/aio-pika/pull/186\r\n\r\nI'm seeing some weird behavior that isn't quite a deadlock, but since it doesn't make sense it's probably threads. Specifically, it happened a few times already that part of my application code would raise an exception and hang. The asyncio runner code has a try...finally loop whose finally clause tries to cancel all running tasks, but it doesn't seem to be able to cancel them, waiting forever instead. Also, since it never leaves the finally, the original exception isn't printed.\r\n\r\nMy exception happens inside the first run_until_complete of the following part of asyncio:\r\n\r\n```python\r\n    try:\r\n        events.set_event_loop(loop)\r\n        loop.set_debug(debug)\r\n        return loop.run_until_complete(main)     # <-------\r\n    finally:\r\n        try:\r\n            _cancel_all_tasks(loop)\r\n            loop.run_until_complete(loop.shutdown_asyncgens())\r\n        finally:\r\n            events.set_event_loop(None)\r\n            loop.close()\r\n```\r\n\r\n(from https://github.com/python/cpython/blob/v3.7.2/Lib/asyncio/runners.py )t\r\n\r\nThen _cancel_all_tasks gets stuck forever here:\r\n\r\n```python\r\n    for task in to_cancel:\r\n        task.cancel()\r\n\r\n\r\n    loop.run_until_complete(\r\n        tasks.gather(*to_cancel, loop=loop, return_exceptions=True))\r\n```\r\n\r\nThe traceback for this location is:\r\n\r\n```\r\n  File \"my_app.py\", line 261, in <module>\r\n    asyncio.run(main())\r\n  File \"/usr/local/lib/python3.7/asyncio/runners.py\", line 46, in run\r\n    _cancel_all_tasks(loop)\r\n  File \"/usr/local/lib/python3.7/asyncio/runners.py\", line 62, in _cancel_all_tasks\r\n    tasks.gather(*to_cancel, loop=loop, return_exceptions=True))\r\n  File \"/usr/local/lib/python3.7/asyncio/base_events.py\", line 555, in run_until_complete\r\n    self.run_forever()\r\n  File \"/usr/local/lib/python3.7/asyncio/base_events.py\", line 523, in run_forever\r\n    self._run_once()\r\n  File \"/usr/local/lib/python3.7/asyncio/base_events.py\", line 1722, in _run_once\r\n    event_list = self._selector.select(timeout)\r\n  File \"/usr/local/lib/python3.7/selectors.py\", line 468, in select\r\n    fd_event_list = self._selector.poll(timeout, max_ev)\r\n  File \"<string>\", line 1, in <module>\r\n```\r\n\r\nThis isn't an exception, it's a `traceback.print_stack()` called from an attached gdb, specifically:\r\n\r\n```\r\n(gdb) p PyRun_SimpleString(\"import traceback; traceback.print_stack()\")\r\n```\r\n\r\nI still haven't found exactly what causes this, and it's likely to be a problem in asyncio, not really here. This is also python 3.7.0 instead of 3.7.2 so maybe some bugfixes are missing. I mostly wanted to write this down somewhere in case it starts hitting other people. And it seems very likely that this is because of the thread pool added by run_in_executor.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/188", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/188/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/188/events", "html_url": "https://github.com/mosquito/aio-pika/issues/188", "id": 400892894, "node_id": "MDU6SXNzdWU0MDA4OTI4OTQ=", "number": 188, "title": "ImportError: cannot import name 'AsyncContextManager'", "user": {"login": "montag451", "id": 249317, "node_id": "MDQ6VXNlcjI0OTMxNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/249317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/montag451", "html_url": "https://github.com/montag451", "followers_url": "https://api.github.com/users/montag451/followers", "following_url": "https://api.github.com/users/montag451/following{/other_user}", "gists_url": "https://api.github.com/users/montag451/gists{/gist_id}", "starred_url": "https://api.github.com/users/montag451/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/montag451/subscriptions", "organizations_url": "https://api.github.com/users/montag451/orgs", "repos_url": "https://api.github.com/users/montag451/repos", "events_url": "https://api.github.com/users/montag451/events{/privacy}", "received_events_url": "https://api.github.com/users/montag451/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-01-18T21:19:58Z", "updated_at": "2019-11-19T21:12:16Z", "closed_at": "2019-11-19T21:12:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "The latest version of `aio-pika` available on PyPI (version 4.9.3) fails to load on Python 3.5. `AsyncContextManager` has been introduced in Python 3.6. Is Python 3.5 not supported anymore ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/181", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/181/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/181/events", "html_url": "https://github.com/mosquito/aio-pika/issues/181", "id": 394021175, "node_id": "MDU6SXNzdWUzOTQwMjExNzU=", "number": 181, "title": "Usage of pika's nowait parameters", "user": {"login": "decaz", "id": 31096, "node_id": "MDQ6VXNlcjMxMDk2", "avatar_url": "https://avatars1.githubusercontent.com/u/31096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decaz", "html_url": "https://github.com/decaz", "followers_url": "https://api.github.com/users/decaz/followers", "following_url": "https://api.github.com/users/decaz/following{/other_user}", "gists_url": "https://api.github.com/users/decaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/decaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decaz/subscriptions", "organizations_url": "https://api.github.com/users/decaz/orgs", "repos_url": "https://api.github.com/users/decaz/repos", "events_url": "https://api.github.com/users/decaz/events{/privacy}", "received_events_url": "https://api.github.com/users/decaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-25T13:31:16Z", "updated_at": "2019-10-31T10:05:25Z", "closed_at": "2019-10-31T10:05:25Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "There are a lot of pika's methods which support `nowait` parameter but they aren't used by `aio-pika`: `exchange_bind` for example.\r\n\r\nPika:\r\nhttps://github.com/mosquito/aio-pika/blob/6386c5918f4809e4ae126579d8dcece322a94400/aio_pika/pika/channel.py#L468-L474\r\naio-pika:\r\nhttps://github.com/mosquito/aio-pika/blob/6386c5918f4809e4ae126579d8dcece322a94400/aio_pika/exchange.py#L146-L152\r\n\r\nWhat is the reason for? Is it done intentionally?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/179", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/179/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/179/events", "html_url": "https://github.com/mosquito/aio-pika/issues/179", "id": 393894428, "node_id": "MDU6SXNzdWUzOTM4OTQ0Mjg=", "number": 179, "title": "Duplicate exception on queue declaration error", "user": {"login": "decaz", "id": 31096, "node_id": "MDQ6VXNlcjMxMDk2", "avatar_url": "https://avatars1.githubusercontent.com/u/31096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decaz", "html_url": "https://github.com/decaz", "followers_url": "https://api.github.com/users/decaz/followers", "following_url": "https://api.github.com/users/decaz/following{/other_user}", "gists_url": "https://api.github.com/users/decaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/decaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decaz/subscriptions", "organizations_url": "https://api.github.com/users/decaz/orgs", "repos_url": "https://api.github.com/users/decaz/repos", "events_url": "https://api.github.com/users/decaz/events{/privacy}", "received_events_url": "https://api.github.com/users/decaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-24T14:52:50Z", "updated_at": "2018-12-25T13:16:26Z", "closed_at": "2018-12-25T13:16:26Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "In case of queue declaration error it's future callback raises another one duplicate. For instance when we declare queue with the same name then we are getting `aio_pika.exceptions.ChannelClosed` with the cause `(405): RESOURCE_LOCKED` from this one:\r\nhttps://github.com/mosquito/aio-pika/blob/1a49286b2c03c7405087f232d4fc1dee1f32a3b3/aio_pika/channel.py#L132\r\nBut our future has the following callback:\r\nhttps://github.com/mosquito/aio-pika/blob/1a49286b2c03c7405087f232d4fc1dee1f32a3b3/aio_pika/queue.py#L96-L104\r\nSo at the first line of the callback (`res = result.result()`) we are getting raised exception again. I think any exception should be suppressed here. @mosquito what do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/177", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/177/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/177/events", "html_url": "https://github.com/mosquito/aio-pika/issues/177", "id": 392258468, "node_id": "MDU6SXNzdWUzOTIyNTg0Njg=", "number": 177, "title": "Race condition on callback timeout", "user": {"login": "decaz", "id": 31096, "node_id": "MDQ6VXNlcjMxMDk2", "avatar_url": "https://avatars1.githubusercontent.com/u/31096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decaz", "html_url": "https://github.com/decaz", "followers_url": "https://api.github.com/users/decaz/followers", "following_url": "https://api.github.com/users/decaz/following{/other_user}", "gists_url": "https://api.github.com/users/decaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/decaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decaz/subscriptions", "organizations_url": "https://api.github.com/users/decaz/orgs", "repos_url": "https://api.github.com/users/decaz/repos", "events_url": "https://api.github.com/users/decaz/events{/privacy}", "received_events_url": "https://api.github.com/users/decaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-18T17:24:42Z", "updated_at": "2018-12-25T13:16:19Z", "closed_at": "2018-12-25T13:16:19Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Reproducing on the example of queue consume cancellation. For instance we cancel it with the timeout specified:\r\n```python\r\nawait queue.cancel(timeout=1)\r\n```\r\n\r\nThen the future with timeout will be created:\r\nhttps://github.com/mosquito/aio-pika/blob/1a49286b2c03c7405087f232d4fc1dee1f32a3b3/aio_pika/queue.py#L254\r\n\r\nAfter that the callback will be scheduled:\r\nhttps://github.com/mosquito/aio-pika/blob/1a49286b2c03c7405087f232d4fc1dee1f32a3b3/aio_pika/pika/channel.py#L184-L185\r\n\r\n1 second later the `asyncio.TimeoutError` exception will be set for that future:\r\nhttps://github.com/mosquito/aio-pika/blob/1a49286b2c03c7405087f232d4fc1dee1f32a3b3/aio_pika/common.py#L28-L31\r\n\r\nAnd finally all scheduled callbacks will be processed:\r\nhttps://github.com/mosquito/aio-pika/blob/1a49286b2c03c7405087f232d4fc1dee1f32a3b3/aio_pika/pika/callback.py#L232-L240\r\n\r\nThere we'll have the `InvalidStateError` exception raised with the following log:\r\n```\r\nCalling <built-in method set_result of _asyncio.Future object at 0x7fa6ad8cef28> for \"2:Basic.CancelOk\" failed\r\n```\r\n\r\nThus, if a timeout occurs before the end of processing of callbacks, then this leads to race condition.\r\n@mosquito at the moment I see a problem only in the case of a timeout. Maybe there are some other pitfalls?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/173", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/173/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/173/events", "html_url": "https://github.com/mosquito/aio-pika/issues/173", "id": 388947207, "node_id": "MDU6SXNzdWUzODg5NDcyMDc=", "number": 173, "title": "Question: What is the best channel management strategy", "user": {"login": "krieghan", "id": 792633, "node_id": "MDQ6VXNlcjc5MjYzMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/792633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krieghan", "html_url": "https://github.com/krieghan", "followers_url": "https://api.github.com/users/krieghan/followers", "following_url": "https://api.github.com/users/krieghan/following{/other_user}", "gists_url": "https://api.github.com/users/krieghan/gists{/gist_id}", "starred_url": "https://api.github.com/users/krieghan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krieghan/subscriptions", "organizations_url": "https://api.github.com/users/krieghan/orgs", "repos_url": "https://api.github.com/users/krieghan/repos", "events_url": "https://api.github.com/users/krieghan/events{/privacy}", "received_events_url": "https://api.github.com/users/krieghan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-08T18:34:21Z", "updated_at": "2018-12-13T22:42:53Z", "closed_at": "2018-12-13T22:42:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm struggling with the discovering the best strategy for channel management in a web application that uses aio_pika to publish to a RabbitMQ queue, and I'm hoping that you have some insights into this.  I've looked for information in the documentation, and in other issues for such insights, but I haven't been able to find an authoritative answer to my question.  Here are the options that I've come up with:\r\n\r\n1. Create a new channel each time a task needs to publish to the queue, using a context manager.  The channel should be torn down after the task publishes.\r\n\r\n(This seems wasteful, as we end up creating a lot of ephemeral channels and the associated exchanges, whose lifetime is very limited)\r\n\r\n2. Create a single global channel that every task uses for publishing\r\n\r\n3. Create a channel pool (with some min and max number of channels).  Each channel can only be used by one task at a time.\r\n\r\n4. Create a channel pool (as above, in 3), but allow each channel to be used by multiple tasks.  The pool should distribute work evenly to all the channels.  Perhaps there should be some ceiling on how many tasks can be publishing on each channel, but perhaps not.\r\n\r\n\r\nI know that a channel *can* be used by multiple tasks at the same time.  I think the main thing that I do not understand is if there is some performance benefit of having multiple channels, or some maximum number of communications that a channel can be engaged in simultaneously.  Documentation for Rabbit and AMQP and various discussions about channels seem to revolve around having one channel-per-thread, but I'm not quite sure how that applies to use in aio applications.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/169", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/169/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/169/events", "html_url": "https://github.com/mosquito/aio-pika/issues/169", "id": 387724461, "node_id": "MDU6SXNzdWUzODc3MjQ0NjE=", "number": 169, "title": "all_channels at the RobustChannel's QoS", "user": {"login": "decaz", "id": 31096, "node_id": "MDQ6VXNlcjMxMDk2", "avatar_url": "https://avatars1.githubusercontent.com/u/31096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decaz", "html_url": "https://github.com/decaz", "followers_url": "https://api.github.com/users/decaz/followers", "following_url": "https://api.github.com/users/decaz/following{/other_user}", "gists_url": "https://api.github.com/users/decaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/decaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decaz/subscriptions", "organizations_url": "https://api.github.com/users/decaz/orgs", "repos_url": "https://api.github.com/users/decaz/repos", "events_url": "https://api.github.com/users/decaz/events{/privacy}", "received_events_url": "https://api.github.com/users/decaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-05T11:59:47Z", "updated_at": "2019-11-19T22:14:47Z", "closed_at": "2019-11-19T22:14:47Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "What's the reason of unavailability of `all_channels` parameter at the `RobustChannel.set_qos` method?\r\n\r\nhttps://github.com/mosquito/aio-pika/blob/57af0c3f3f81f49e9593f7d96ef624582ce3be79/aio_pika/robust_channel.py#L87-L90", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/164", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/164/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/164/events", "html_url": "https://github.com/mosquito/aio-pika/issues/164", "id": 384351802, "node_id": "MDU6SXNzdWUzODQzNTE4MDI=", "number": 164, "title": "async ACK using only the delivery_tag", "user": {"login": "Jacobh2", "id": 6471372, "node_id": "MDQ6VXNlcjY0NzEzNzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/6471372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jacobh2", "html_url": "https://github.com/Jacobh2", "followers_url": "https://api.github.com/users/Jacobh2/followers", "following_url": "https://api.github.com/users/Jacobh2/following{/other_user}", "gists_url": "https://api.github.com/users/Jacobh2/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jacobh2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jacobh2/subscriptions", "organizations_url": "https://api.github.com/users/Jacobh2/orgs", "repos_url": "https://api.github.com/users/Jacobh2/repos", "events_url": "https://api.github.com/users/Jacobh2/events{/privacy}", "received_events_url": "https://api.github.com/users/Jacobh2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-26T14:20:33Z", "updated_at": "2018-11-27T06:35:34Z", "closed_at": "2018-11-27T06:35:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the [docs for pika's channels](https://pika.readthedocs.io/en/stable/modules/channel.html#pika.channel.Channel.basic_ack), there is a possibility to ACK (or NACK) a message using only the `delivery_tag`. I can see [here](https://github.com/mosquito/aio-pika/blob/master/aio_pika/message.py#L380) that that's what you're using in the `IncomingMessage` class. But this class is not available if I only want to ack using the `delivery_tag` (essentially the ability to ACK on an int)\r\n\r\nWhat is the recommended way to ack messages using only the `delivery_tag`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/159", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/159/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/159/events", "html_url": "https://github.com/mosquito/aio-pika/issues/159", "id": 379039255, "node_id": "MDU6SXNzdWUzNzkwMzkyNTU=", "number": 159, "title": "Raise `DeprecationWarning` by using python3.7.1", "user": {"login": "linw1995", "id": 13523027, "node_id": "MDQ6VXNlcjEzNTIzMDI3", "avatar_url": "https://avatars0.githubusercontent.com/u/13523027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linw1995", "html_url": "https://github.com/linw1995", "followers_url": "https://api.github.com/users/linw1995/followers", "following_url": "https://api.github.com/users/linw1995/following{/other_user}", "gists_url": "https://api.github.com/users/linw1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/linw1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linw1995/subscriptions", "organizations_url": "https://api.github.com/users/linw1995/orgs", "repos_url": "https://api.github.com/users/linw1995/repos", "events_url": "https://api.github.com/users/linw1995/events{/privacy}", "received_events_url": "https://api.github.com/users/linw1995/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-09T06:27:49Z", "updated_at": "2018-12-25T13:29:00Z", "closed_at": "2018-12-25T13:29:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "It raise `DeprecationWarning` by using **python3.7.1**\r\n\r\n```\r\n/aio_pika/pika/utils.py:16: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n  return isinstance(handle, collections.Callable)\r\n```\r\n\r\nhttps://github.com/mosquito/aio-pika/blob/ca6b3d2bec562a0d6853dfd50c671fa487c7c425/aio_pika/pika/utils.py#L16", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/157", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/157/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/157/events", "html_url": "https://github.com/mosquito/aio-pika/issues/157", "id": 374313856, "node_id": "MDU6SXNzdWUzNzQzMTM4NTY=", "number": 157, "title": "Can't connect.", "user": {"login": "mawaishanif", "id": 20681953, "node_id": "MDQ6VXNlcjIwNjgxOTUz", "avatar_url": "https://avatars2.githubusercontent.com/u/20681953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mawaishanif", "html_url": "https://github.com/mawaishanif", "followers_url": "https://api.github.com/users/mawaishanif/followers", "following_url": "https://api.github.com/users/mawaishanif/following{/other_user}", "gists_url": "https://api.github.com/users/mawaishanif/gists{/gist_id}", "starred_url": "https://api.github.com/users/mawaishanif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mawaishanif/subscriptions", "organizations_url": "https://api.github.com/users/mawaishanif/orgs", "repos_url": "https://api.github.com/users/mawaishanif/repos", "events_url": "https://api.github.com/users/mawaishanif/events{/privacy}", "received_events_url": "https://api.github.com/users/mawaishanif/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-10-26T10:03:41Z", "updated_at": "2018-10-26T13:34:52Z", "closed_at": "2018-10-26T13:34:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "`Traceback (most recent call last):\r\n  File \"<pyshell#8>\", line 1, in <module>\r\n    asyncio.run(acon())\r\n  File \"C:\\Users\\Awais\\AppData\\Local\\Programs\\Python\\Python37\\lib\\asyncio\\runners.py\", line 43, in run\r\n    return loop.run_until_complete(main)\r\n  File \"C:\\Users\\Awais\\AppData\\Local\\Programs\\Python\\Python37\\lib\\asyncio\\base_events.py\", line 568, in run_until_complete\r\n    return future.result()\r\n  File \"<pyshell#5>\", line 2, in acon\r\n    return await aio_pika.connect(\"AMPQ URL\")\r\n  File \"C:\\Users\\Awais\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\aio_pika\\connection.py\", line 437, in connect\r\n    await connection.connect()\r\n  File \"C:\\Users\\Awais\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\aio_pika\\connection.py\", line 232, in connect\r\n    result = await f\r\nConnectionRefusedError: Connection to 35.183.159.128:5672 failed: timeout\r\n>>> \r\n`\r\n\r\nHere is my function\r\nasync def acon():\r\n\treturn await aio_pika.connect(\"URL\")\r\n\r\n*I have changed url and ip to dummy ones.*\r\n\r\nI can connect to locally hosted rabbitMQ server but when I connect to external server I see this error.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/155", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/155/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/155/events", "html_url": "https://github.com/mosquito/aio-pika/issues/155", "id": 373096382, "node_id": "MDU6SXNzdWUzNzMwOTYzODI=", "number": 155, "title": "TypeError: object of type 'Method' has no len() when publish gives NACK", "user": {"login": "adamhooper", "id": 10812, "node_id": "MDQ6VXNlcjEwODEy", "avatar_url": "https://avatars3.githubusercontent.com/u/10812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamhooper", "html_url": "https://github.com/adamhooper", "followers_url": "https://api.github.com/users/adamhooper/followers", "following_url": "https://api.github.com/users/adamhooper/following{/other_user}", "gists_url": "https://api.github.com/users/adamhooper/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamhooper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamhooper/subscriptions", "organizations_url": "https://api.github.com/users/adamhooper/orgs", "repos_url": "https://api.github.com/users/adamhooper/repos", "events_url": "https://api.github.com/users/adamhooper/events{/privacy}", "received_events_url": "https://api.github.com/users/adamhooper/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-23T16:45:26Z", "updated_at": "2018-12-07T14:25:42Z", "closed_at": "2018-12-07T14:25:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "With RabbitMQ:\r\n\r\n```\r\nimport asyncio\r\nimport aio_pika\r\nasync def run():\r\n    connection = await aio_pika.connect('amqp://guest:guest@localhost/')\r\n    async with connection.channel() as channel:\r\n        queue = await channel.declare_queue(exclusive=True, arguments={\r\n            'x-max-length': 1,\r\n            'x-overflow': 'reject-publish',\r\n        })\r\n        await channel.default_exchange.publish(\r\n            aio_pika.Message(body=b'queue me'),\r\n            routing_key=queue.name\r\n        )\r\n        return await channel.default_exchange.publish(\r\n            aio_pika.Message(body=b'reject me'),\r\n            routing_key=queue.name\r\n        )\r\nloop = asyncio.get_event_loop()\r\nloop.run_until_complete(run())\r\n```\r\n\r\nI receive an error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"nack_error.py\", line 22, in <module>\r\n    loop.run_until_complete(run())\r\n  File \"/usr/lib64/python3.6/asyncio/base_events.py\", line 468, in run_until_complete\r\n    return future.result()\r\n  File \"nack_error.py\", line 18, in run\r\n    routing_key=queue.name\r\n  File \"/home/adam/.local/lib/python3.6/site-packages/aio_pika-4.1.0-py3.6.egg/aio_pika/common.py\", line 122, in wrap\r\n    return await func(self, *args, **kwargs)\r\n  File \"/home/adam/.local/lib/python3.6/site-packages/aio_pika-4.1.0-py3.6.egg/aio_pika/exchange.py\", line 203, in publish\r\n    immediate=immediate\r\n  File \"/home/adam/.local/lib/python3.6/site-packages/aio_pika-4.1.0-py3.6.egg/aio_pika/common.py\", line 122, in wrap\r\n    return await func(self, *args, **kwargs)\r\n  File \"/home/adam/.local/lib/python3.6/site-packages/aio_pika-4.1.0-py3.6.egg/aio_pika/channel.py\", line 281, in _publish\r\n    return await f\r\n  File \"/home/adam/.local/lib/python3.6/site-packages/aio_pika-4.1.0-py3.6.egg/aio_pika/channel.py\", line 210, in _on_delivery_confirmation\r\n    future.set_exception(exceptions.NackError(method_frame))\r\n  File \"/home/adam/.local/lib/python3.6/site-packages/aio_pika-4.1.0-py3.6.egg/aio_pika/pika/exceptions.py\", line 139, in __init__\r\n    \"%s message(s) NACKed\" % (len(messages)))\r\nTypeError: object of type 'Method' has no len()\r\n```\r\n\r\n... but my reading of the documentation suggests `run()` should return `False`, because it's returning the second `publish()` return value. The docs say: `publisher_confirms \u2013 if True the aio_pika.Exchange.publish() method will be return bool after publish is complete. Otherwise the aio_pika.Exchange.publish() method will be return None`\r\n\r\nI'd be perfectly happy with a `NackError`. My current workaround is to catch `TypeError`, which is not ideal.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/147", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/147/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/147/events", "html_url": "https://github.com/mosquito/aio-pika/issues/147", "id": 355410993, "node_id": "MDU6SXNzdWUzNTU0MTA5OTM=", "number": 147, "title": "[BUG] kwargs['arguments'] always be None", "user": {"login": "linw1995", "id": 13523027, "node_id": "MDQ6VXNlcjEzNTIzMDI3", "avatar_url": "https://avatars0.githubusercontent.com/u/13523027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linw1995", "html_url": "https://github.com/linw1995", "followers_url": "https://api.github.com/users/linw1995/followers", "following_url": "https://api.github.com/users/linw1995/following{/other_user}", "gists_url": "https://api.github.com/users/linw1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/linw1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linw1995/subscriptions", "organizations_url": "https://api.github.com/users/linw1995/orgs", "repos_url": "https://api.github.com/users/linw1995/repos", "events_url": "https://api.github.com/users/linw1995/events{/privacy}", "received_events_url": "https://api.github.com/users/linw1995/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-30T03:33:05Z", "updated_at": "2018-08-30T09:48:48Z", "closed_at": "2018-08-30T09:47:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/mosquito/aio-pika/blob/5768b2b7783c171b504fe75138f21b806bd1d429/aio_pika/patterns/rpc.py#L285-L300\r\n\r\n`dict.update` method return `None`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/146", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/146/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/146/events", "html_url": "https://github.com/mosquito/aio-pika/issues/146", "id": 350827043, "node_id": "MDU6SXNzdWUzNTA4MjcwNDM=", "number": 146, "title": "ImportError: cannot import name 'TYPE_CHECKING'", "user": {"login": "marvinosswald", "id": 1621844, "node_id": "MDQ6VXNlcjE2MjE4NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1621844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marvinosswald", "html_url": "https://github.com/marvinosswald", "followers_url": "https://api.github.com/users/marvinosswald/followers", "following_url": "https://api.github.com/users/marvinosswald/following{/other_user}", "gists_url": "https://api.github.com/users/marvinosswald/gists{/gist_id}", "starred_url": "https://api.github.com/users/marvinosswald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marvinosswald/subscriptions", "organizations_url": "https://api.github.com/users/marvinosswald/orgs", "repos_url": "https://api.github.com/users/marvinosswald/repos", "events_url": "https://api.github.com/users/marvinosswald/events{/privacy}", "received_events_url": "https://api.github.com/users/marvinosswald/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-15T14:18:53Z", "updated_at": "2018-08-15T14:21:15Z", "closed_at": "2018-08-15T14:21:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to run the sending example from a class give me this error:\r\n\r\n`\r\nImportError: cannot import name 'TYPE_CHECKING'\r\n`\r\n\r\nif this is me being stupid about structuring my modules in python please tell me.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/144", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/144/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/144/events", "html_url": "https://github.com/mosquito/aio-pika/issues/144", "id": 345907918, "node_id": "MDU6SXNzdWUzNDU5MDc5MTg=", "number": 144, "title": "Cannot publish to default exchange", "user": {"login": "shanecarey17", "id": 7001915, "node_id": "MDQ6VXNlcjcwMDE5MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7001915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shanecarey17", "html_url": "https://github.com/shanecarey17", "followers_url": "https://api.github.com/users/shanecarey17/followers", "following_url": "https://api.github.com/users/shanecarey17/following{/other_user}", "gists_url": "https://api.github.com/users/shanecarey17/gists{/gist_id}", "starred_url": "https://api.github.com/users/shanecarey17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shanecarey17/subscriptions", "organizations_url": "https://api.github.com/users/shanecarey17/orgs", "repos_url": "https://api.github.com/users/shanecarey17/repos", "events_url": "https://api.github.com/users/shanecarey17/events{/privacy}", "received_events_url": "https://api.github.com/users/shanecarey17/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-30T19:46:02Z", "updated_at": "2018-08-01T16:51:01Z", "closed_at": "2018-08-01T16:51:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Attempting to publish a message requires an exchange to be declared, and declaring the default exchange raises an error\r\n\r\n`pika.exceptions.ChannelClosed: (403, 'ACCESS_REFUSED - operation not permitted on the default exchange')`\r\n\r\nIt is not possible to publish directly through the channel object, and the constructor to `aio_pika.Exchange` is not user friendly.\r\n\r\nThe exchange should not be declared if no exchange name is specified.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/137", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/137/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/137/events", "html_url": "https://github.com/mosquito/aio-pika/issues/137", "id": 335133847, "node_id": "MDU6SXNzdWUzMzUxMzM4NDc=", "number": 137, "title": "Incorrect type annotation for return value in RobustConnection.channel() ", "user": {"login": "dangusev", "id": 3066740, "node_id": "MDQ6VXNlcjMwNjY3NDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/3066740?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dangusev", "html_url": "https://github.com/dangusev", "followers_url": "https://api.github.com/users/dangusev/followers", "following_url": "https://api.github.com/users/dangusev/following{/other_user}", "gists_url": "https://api.github.com/users/dangusev/gists{/gist_id}", "starred_url": "https://api.github.com/users/dangusev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dangusev/subscriptions", "organizations_url": "https://api.github.com/users/dangusev/orgs", "repos_url": "https://api.github.com/users/dangusev/repos", "events_url": "https://api.github.com/users/dangusev/events{/privacy}", "received_events_url": "https://api.github.com/users/dangusev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-23T21:56:53Z", "updated_at": "2018-06-24T06:55:21Z", "closed_at": "2018-06-24T06:54:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey! It seems that after latest changes in .channel() method API somebody forgot to update the type annotation) Now it's not a coroutine and just returns Channel instance.\r\n\r\nhttps://github.com/mosquito/aio-pika/blob/5aa024141a18355306aed504fc09e6244a6601cf/aio_pika/connection.py#L230\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/134", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/134/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/134/events", "html_url": "https://github.com/mosquito/aio-pika/issues/134", "id": 334138357, "node_id": "MDU6SXNzdWUzMzQxMzgzNTc=", "number": 134, "title": "connection.connect ignores ssl=True and \"amqps\" scheme in url", "user": {"login": "blazewicz", "id": 13185945, "node_id": "MDQ6VXNlcjEzMTg1OTQ1", "avatar_url": "https://avatars1.githubusercontent.com/u/13185945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blazewicz", "html_url": "https://github.com/blazewicz", "followers_url": "https://api.github.com/users/blazewicz/followers", "following_url": "https://api.github.com/users/blazewicz/following{/other_user}", "gists_url": "https://api.github.com/users/blazewicz/gists{/gist_id}", "starred_url": "https://api.github.com/users/blazewicz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blazewicz/subscriptions", "organizations_url": "https://api.github.com/users/blazewicz/orgs", "repos_url": "https://api.github.com/users/blazewicz/repos", "events_url": "https://api.github.com/users/blazewicz/events{/privacy}", "received_events_url": "https://api.github.com/users/blazewicz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-20T15:43:22Z", "updated_at": "2018-12-03T11:37:37Z", "closed_at": "2018-12-03T11:37:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Bug partially introduced in 27b00b2.\r\n\r\nCurrently to establish SSL connection with amqp url user must provide at least one `ssl_options` field even when defaults are fine.\r\n\r\nFor example:\r\n\r\n```Python\r\nconnection = await aio_pika.connect_robust('amqps://guest:guest@localhost:5672', ssl=True)\r\n```\r\n\r\nWill create a plain-text connection.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/132", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/132/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/132/events", "html_url": "https://github.com/mosquito/aio-pika/issues/132", "id": 331109495, "node_id": "MDU6SXNzdWUzMzExMDk0OTU=", "number": 132, "title": "python 3.7 incompatibility", "user": {"login": "josephbiko", "id": 17003173, "node_id": "MDQ6VXNlcjE3MDAzMTcz", "avatar_url": "https://avatars3.githubusercontent.com/u/17003173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josephbiko", "html_url": "https://github.com/josephbiko", "followers_url": "https://api.github.com/users/josephbiko/followers", "following_url": "https://api.github.com/users/josephbiko/following{/other_user}", "gists_url": "https://api.github.com/users/josephbiko/gists{/gist_id}", "starred_url": "https://api.github.com/users/josephbiko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josephbiko/subscriptions", "organizations_url": "https://api.github.com/users/josephbiko/orgs", "repos_url": "https://api.github.com/users/josephbiko/repos", "events_url": "https://api.github.com/users/josephbiko/events{/privacy}", "received_events_url": "https://api.github.com/users/josephbiko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-06-11T09:23:48Z", "updated_at": "2018-08-16T05:22:59Z", "closed_at": "2018-08-16T05:22:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nasync for message in queue:\r\n        with message.process():\r\n            print(message.body)\r\n\r\n            if queue.name in message.body.decode():\r\n                break\r\n```\r\n\r\nthrows an error:\r\n> 'async for' received an object from __aiter__ that does not implement __anext__: generator\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/121", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/121/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/121/events", "html_url": "https://github.com/mosquito/aio-pika/issues/121", "id": 313184598, "node_id": "MDU6SXNzdWUzMTMxODQ1OTg=", "number": 121, "title": "Need to close the channel explicitly?", "user": {"login": "imnisen", "id": 12237169, "node_id": "MDQ6VXNlcjEyMjM3MTY5", "avatar_url": "https://avatars3.githubusercontent.com/u/12237169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imnisen", "html_url": "https://github.com/imnisen", "followers_url": "https://api.github.com/users/imnisen/followers", "following_url": "https://api.github.com/users/imnisen/following{/other_user}", "gists_url": "https://api.github.com/users/imnisen/gists{/gist_id}", "starred_url": "https://api.github.com/users/imnisen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imnisen/subscriptions", "organizations_url": "https://api.github.com/users/imnisen/orgs", "repos_url": "https://api.github.com/users/imnisen/repos", "events_url": "https://api.github.com/users/imnisen/events{/privacy}", "received_events_url": "https://api.github.com/users/imnisen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-11T06:05:42Z", "updated_at": "2018-06-03T12:28:06Z", "closed_at": "2018-05-31T19:01:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\uff0cWhen the publisher successfully publish a message, does it need to close the declared channel explicitly?   As shows below:\r\n\r\n```\r\nasync def publish(data):\r\n       # Here conn is global,made by \"connect_robust\", which I want to make it long live\r\n        channel = await conn.channel()  \r\n        exchange = await channel.declare_exchange(\r\n            'some_exchange',\r\n            aio_pika.ExchangeType.DIRECT,\r\n            durable=True\r\n        )\r\n        message = aio_pika.Message(\r\n            json.dumps(data).encode(),\r\n            headers={\"a\": \"b\")},\r\n            delivery_mode=aio_pika.DeliveryMode.PERSISTENT\r\n        )\r\n        await exchange.publish(message, routing_key=\"some_key\")\r\n        await channel.close()  # Need close here?\r\n```\r\n\r\nI want to reuse the connection, so make it global, after that, each time when I need publish a message, I declare the channel, send the message, the close the channel.\r\n\r\nMy problem is if I close the channel with `await channel.close()`, when call the method `publish` frequently(0.5 second once), this will raise a `pika.exceptions.ChannelClosed`, not each time, several times one exception could happen.\r\nThis is very strange, because the channel each time is a new channel, not the closed one last time.\r\n\r\nHowever, if I don't close the channel myself, this works ok.\r\n\r\nWhat cause this problem, or is there another good practise for this.\r\n\r\nps:  aio-pika ==2.3.0, python==3.6.2\r\n\r\nThanks very much!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/118", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/118/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/118/events", "html_url": "https://github.com/mosquito/aio-pika/issues/118", "id": 311284937, "node_id": "MDU6SXNzdWUzMTEyODQ5Mzc=", "number": 118, "title": "pip install latest aio pika with bad pika version", "user": {"login": "nirtayeb", "id": 9025195, "node_id": "MDQ6VXNlcjkwMjUxOTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/9025195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nirtayeb", "html_url": "https://github.com/nirtayeb", "followers_url": "https://api.github.com/users/nirtayeb/followers", "following_url": "https://api.github.com/users/nirtayeb/following{/other_user}", "gists_url": "https://api.github.com/users/nirtayeb/gists{/gist_id}", "starred_url": "https://api.github.com/users/nirtayeb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nirtayeb/subscriptions", "organizations_url": "https://api.github.com/users/nirtayeb/orgs", "repos_url": "https://api.github.com/users/nirtayeb/repos", "events_url": "https://api.github.com/users/nirtayeb/events{/privacy}", "received_events_url": "https://api.github.com/users/nirtayeb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-04T15:42:07Z", "updated_at": "2018-04-04T15:52:41Z", "closed_at": "2018-04-04T15:52:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to install latest aio-pika with those commands:\r\n`pip install aio-pika`\r\n`pip install https://github.com/mosquito/aio-pika/archive/2.3.0.tar.gz`\r\nand, `pip install https://github.com/mosquito/aio-pika/archive/2.3.0.zip`\r\n\r\nAll of the three installed pika-0.11.2 instead of pika-0.10.0\r\n\r\nbut if I use:\r\n`pip install git+https://github.com/mosquito/aio-pika`\r\n\r\nit installs the pika-0.10.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/117", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/117/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/117/events", "html_url": "https://github.com/mosquito/aio-pika/issues/117", "id": 311192649, "node_id": "MDU6SXNzdWUzMTExOTI2NDk=", "number": 117, "title": "aio_pika.Queue get() timeout", "user": {"login": "MichalJagiello", "id": 1583987, "node_id": "MDQ6VXNlcjE1ODM5ODc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1583987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MichalJagiello", "html_url": "https://github.com/MichalJagiello", "followers_url": "https://api.github.com/users/MichalJagiello/followers", "following_url": "https://api.github.com/users/MichalJagiello/following{/other_user}", "gists_url": "https://api.github.com/users/MichalJagiello/gists{/gist_id}", "starred_url": "https://api.github.com/users/MichalJagiello/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MichalJagiello/subscriptions", "organizations_url": "https://api.github.com/users/MichalJagiello/orgs", "repos_url": "https://api.github.com/users/MichalJagiello/repos", "events_url": "https://api.github.com/users/MichalJagiello/events{/privacy}", "received_events_url": "https://api.github.com/users/MichalJagiello/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-04T11:35:54Z", "updated_at": "2018-04-09T11:57:44Z", "closed_at": "2018-04-09T11:57:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "No matter what value I passed as a timeout parameter I have always got aio_pika.exceptions.QueueEmpty exception just after call that coroutine.\r\n```\r\nimport asyncio\r\nfrom aio_pika import connect, IncomingMessage\r\n\r\n\r\nasync def on_message(message: IncomingMessage):\r\n    \"\"\"\r\n    on_message doesn't necessarily have to be defined as async.\r\n    Here it is to show that it's possible.\r\n    \"\"\"\r\n    print(\" [x] Received message %r\" % message)\r\n    print(\"Message body is: %r\" % message.body)\r\n    print(\"Before sleep!\")\r\n    await asyncio.sleep(5) # Represents async I/O operations\r\n    print(\"After sleep!\")\r\n\r\n\r\nasync def main(loop):\r\n    # Perform connection\r\n    connection = await connect(\r\n        \"amqp://guest:guest@localhost/\", loop=loop\r\n    )\r\n\r\n    # Creating a channel\r\n    channel = await connection.channel()\r\n\r\n    # Declaring queue\r\n    queue = await channel.declare_queue('hello')\r\n\r\n    msg = await queue.get(timeout=20)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    loop = asyncio.get_event_loop()\r\n    loop.create_task(main(loop))\r\n\r\n    # we enter a never-ending loop that waits for data and runs callbacks whenever necessary.\r\n    print(\" [*] Waiting for messages. To exit press CTRL+C\")\r\n    loop.run_forever()\r\n```\r\nI think that `msg = await queue.get(timeout=20)` should wait 20 seconds for a new message. Is it correct?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/115", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/115/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/115/events", "html_url": "https://github.com/mosquito/aio-pika/issues/115", "id": 305825917, "node_id": "MDU6SXNzdWUzMDU4MjU5MTc=", "number": 115, "title": "Can I use aio-pika in twisted? Is there an example?", "user": {"login": "quanjin9099", "id": 10294604, "node_id": "MDQ6VXNlcjEwMjk0NjA0", "avatar_url": "https://avatars1.githubusercontent.com/u/10294604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quanjin9099", "html_url": "https://github.com/quanjin9099", "followers_url": "https://api.github.com/users/quanjin9099/followers", "following_url": "https://api.github.com/users/quanjin9099/following{/other_user}", "gists_url": "https://api.github.com/users/quanjin9099/gists{/gist_id}", "starred_url": "https://api.github.com/users/quanjin9099/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quanjin9099/subscriptions", "organizations_url": "https://api.github.com/users/quanjin9099/orgs", "repos_url": "https://api.github.com/users/quanjin9099/repos", "events_url": "https://api.github.com/users/quanjin9099/events{/privacy}", "received_events_url": "https://api.github.com/users/quanjin9099/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-16T07:22:01Z", "updated_at": "2018-12-25T13:18:36Z", "closed_at": "2018-12-25T13:18:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can I use aio-pika in twisted? Is there an example?\r\nths", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/114", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/114/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/114/events", "html_url": "https://github.com/mosquito/aio-pika/issues/114", "id": 303088431, "node_id": "MDU6SXNzdWUzMDMwODg0MzE=", "number": 114, "title": "Release version not match pypi version", "user": {"login": "MichalJagiello", "id": 1583987, "node_id": "MDQ6VXNlcjE1ODM5ODc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1583987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MichalJagiello", "html_url": "https://github.com/MichalJagiello", "followers_url": "https://api.github.com/users/MichalJagiello/followers", "following_url": "https://api.github.com/users/MichalJagiello/following{/other_user}", "gists_url": "https://api.github.com/users/MichalJagiello/gists{/gist_id}", "starred_url": "https://api.github.com/users/MichalJagiello/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MichalJagiello/subscriptions", "organizations_url": "https://api.github.com/users/MichalJagiello/orgs", "repos_url": "https://api.github.com/users/MichalJagiello/repos", "events_url": "https://api.github.com/users/MichalJagiello/events{/privacy}", "received_events_url": "https://api.github.com/users/MichalJagiello/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-07T12:58:52Z", "updated_at": "2018-03-07T13:49:35Z", "closed_at": "2018-03-07T13:49:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. I have installed aio-pika using `pip install aio_pika` and using `pip freeze` I can see that I have installed `aio-pika==2.2.2`, but [here](https://github.com/mosquito/aio-pika/releases) last version is `2.0.0a0`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/112", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/112/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/112/events", "html_url": "https://github.com/mosquito/aio-pika/issues/112", "id": 302401725, "node_id": "MDU6SXNzdWUzMDI0MDE3MjU=", "number": 112, "title": "Error flood by robust connection", "user": {"login": "decaz", "id": 31096, "node_id": "MDQ6VXNlcjMxMDk2", "avatar_url": "https://avatars1.githubusercontent.com/u/31096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decaz", "html_url": "https://github.com/decaz", "followers_url": "https://api.github.com/users/decaz/followers", "following_url": "https://api.github.com/users/decaz/following{/other_user}", "gists_url": "https://api.github.com/users/decaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/decaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decaz/subscriptions", "organizations_url": "https://api.github.com/users/decaz/orgs", "repos_url": "https://api.github.com/users/decaz/repos", "events_url": "https://api.github.com/users/decaz/events{/privacy}", "received_events_url": "https://api.github.com/users/decaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 32, "created_at": "2018-03-05T18:00:29Z", "updated_at": "2019-10-31T10:00:50Z", "closed_at": "2019-10-31T10:00:50Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I guess robust connection was broken. If we start simple consumer from [example](https://aio-pika.readthedocs.io/en/latest/quick-start.html#simple-consumer) and restart RabbitMQ server than we will drown in errors returned by `aio-pika`.\r\n\r\nVersion `1.9.1` is OK, so the problem was introduced in `2.0.0a` (when `pika` was upgraded to the version `0.11.0`).\r\n\r\nExample log:\r\n```\r\nRabbitMQ connection lost\r\nConnection refused: 500 - (-1, 'EOF')\r\nRabbitMQ connection lost\r\nFuture exception was never retrieved\r\nfuture: <Future finished exception=ConnectionError('Auto Reconnect Error',)>\r\nConnectionError: Auto Reconnect Error\r\nTask exception was never retrieved\r\nfuture: <Task finished coro=<RobustConnection.connect() done, defined at /home/decaz/workspace/aio-pika/aio_pika/robust_connection.py:101> exception=The AMQP connection was closed: ('Channel allocation requires an open connection: <AsyncioConnection CLOSED socket=None pa$\r\nams=<ConnectionParameters host=127.0.0.1 port=5672 virtual_host=/ ssl=False>>',)>\r\nTraceback (most recent call last):\r\n  File \"/home/decaz/workspace/aio-pika/aio_pika/robust_connection.py\", line 110, in connect\r\n    yield from channel.on_reconnect(self, number)\r\n  File \"/home/decaz/workspace/aio-pika/aio_pika/robust_channel.py\", line 64, in on_reconnect\r\n    yield from self.initialize()\r\n  File \"/home/decaz/workspace/aio-pika/aio_pika/robust_channel.py\", line 74, in initialize\r\n    result = yield from super().initialize()\r\n  File \"/home/decaz/workspace/aio-pika/aio_pika/channel.py\", line 153, in initialize\r\n    self._channel = yield from self._create_channel(timeout)\r\n  File \"/home/decaz/workspace/aio-pika/aio_pika/channel.py\", line 132, in _create_channel\r\n    channel_number=self._channel_number\r\n  File \"/home/decaz/.virtualenvs/aio-pika/lib/python3.6/site-packages/pika/connection.py\", line 1153, in channel\r\n    'Channel allocation requires an open connection: %s' % self)\r\npika.exceptions.ConnectionClosed: Channel allocation requires an open connection: <AsyncioConnection CLOSED socket=None params=<ConnectionParameters host=127.0.0.1 port=5672 virtual_host=/ ssl=False>>\r\nFuture exception was never retrieved\r\nfuture: <Future finished exception=ConnectionError('Auto Reconnect Error',)>\r\nConnectionError: Auto Reconnect Error\r\nFuture exception was never retrieved\r\nfuture: <Future finished exception=ConnectionError('Auto Reconnect Error',)>\r\nConnectionError: Auto Reconnect Error\r\nFuture exception was never retrieved\r\nfuture: <Future finished exception=ConnectionError('Auto Reconnect Error',)>\r\nConnectionError: Auto Reconnect Error\r\nFuture exception was never retrieved\r\nfuture: <Future finished exception=ConnectionError('Auto Reconnect Error',)>\r\nConnectionError: Auto Reconnect Error\r\nException in callback BaseConnection._handle_events(fd=6, events=1)()\r\nhandle: <Handle BaseConnection._handle_events(fd=6, events=1)()>\r\nTraceback (most recent call last):\r\n...\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/asyncio/events.py\", line 145, in _run\r\n    self._callback(*self._args)\r\n  File \"/home/decaz/.virtualenvs/aio-pika/lib/python3.6/site-packages/pika/adapters/base_connection.py\", line 395, in _handle_events\r\n    self._handle_read()\r\n  File \"/home/decaz/.virtualenvs/aio-pika/lib/python3.6/site-packages/pika/adapters/base_connection.py\", line 449, in _handle_read\r\n    self._on_data_available(data)\r\n  File \"/home/decaz/.virtualenvs/aio-pika/lib/python3.6/site-packages/pika/connection.py\", line 1938, in _on_data_available\r\n    self._process_frame(frame_value)\r\n  File \"/home/decaz/.virtualenvs/aio-pika/lib/python3.6/site-packages/pika/connection.py\", line 2059, in _process_frame\r\n    if self._process_callbacks(frame_value):\r\n  File \"/home/decaz/.virtualenvs/aio-pika/lib/python3.6/site-packages/pika/connection.py\", line 2040, in _process_callbacks\r\n    frame_value)  # Args\r\n  File \"/home/decaz/.virtualenvs/aio-pika/lib/python3.6/site-packages/pika/callback.py\", line 60, in wrapper\r\n    return function(*tuple(args), **kwargs)\r\n  File \"/home/decaz/.virtualenvs/aio-pika/lib/python3.6/site-packages/pika/callback.py\", line 92, in wrapper\r\n    return function(*args, **kwargs)\r\n  File \"/home/decaz/.virtualenvs/aio-pika/lib/python3.6/site-packages/pika/callback.py\", line 236, in process\r\n    callback(*args, **keywords)\r\nasyncio.base_futures.InvalidStateError: invalid state\r\nException in callback Queue.declare.<locals>.on_queue_declared(<Future finis...nect Error',)>) at /home/decaz/workspace/aio-pika/aio_pika/queue.py:72\r\nhandle: <Handle Queue.declare.<locals>.on_queue_declared(<Future finis...nect Error',)>) at /home/decaz/workspace/aio-pika/aio_pika/queue.py:72>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/asyncio/events.py\", line 145, in _run\r\n    self._callback(*self._args)\r\n  File \"/home/decaz/workspace/aio-pika/aio_pika/queue.py\", line 73, in on_queue_declared\r\n    res = result.result()\r\nConnectionError: Auto Reconnect Error\r\nTask exception was never retrieved\r\nfuture: <Task finished coro=<RobustConnection.connect() done, defined at /home/decaz/workspace/aio-pika/aio_pika/robust_connection.py:101> exception=ConnectionError('Auto Reconnect Error',)>\r\nTraceback (most recent call last):\r\n  File \"/home/decaz/workspace/aio-pika/aio_pika/robust_connection.py\", line 110, in connect\r\n    yield from channel.on_reconnect(self, number)\r\n  File \"/home/decaz/workspace/aio-pika/aio_pika/robust_channel.py\", line 70, in on_reconnect\r\n    yield from queue.on_reconnect(self)\r\n  File \"/home/decaz/workspace/aio-pika/aio_pika/robust_queue.py\", line 34, in on_reconnect\r\n    yield from self.declare()\r\n  File \"/home/decaz/workspace/aio-pika/aio_pika/common.py\", line 122, in wrap\r\n    return (yield from func(self, *args, **kwargs))\r\n  File \"/usr/lib/python3.6/asyncio/events.py\", line 145, in _run\r\n    self._callback(*self._args)\r\n  File \"/home/decaz/workspace/aio-pika/aio_pika/queue.py\", line 73, in on_queue_declared\r\n    res = result.result()\r\nConnectionError: Auto Reconnect Error\r\nFuture exception was never retrieved\r\nfuture: <Future finished exception=ConnectionError('Auto Reconnect Error',)>\r\nConnectionError: Auto Reconnect Error\r\nException in callback BaseConnection._handle_events(fd=7, events=1)()\r\nhandle: <Handle BaseConnection._handle_events(fd=7, events=1)()>\r\n...\r\nTask exception was never retrieved\r\nfuture: <Task finished coro=<RobustConnection.connect() done, defined at /home/decaz/workspace/aio-pika/aio_pika/robust_connection.py:101> exception=ConnectionError('Auto Reconnect Error',)>\r\nTraceback (most recent call last):\r\n  File \"/home/decaz/workspace/aio-pika/aio_pika/robust_connection.py\", line 110, in connect\r\n    yield from channel.on_reconnect(self, number)\r\n  File \"/home/decaz/workspace/aio-pika/aio_pika/robust_channel.py\", line 70, in on_reconnect\r\n    yield from queue.on_reconnect(self)\r\n  File \"/home/decaz/workspace/aio-pika/aio_pika/robust_queue.py\", line 41, in on_reconnect\r\n    yield from self.consume(consumer_tag=consumer_tag, **kwargs)\r\n  File \"/home/decaz/workspace/aio-pika/aio_pika/robust_queue.py\", line 75, in consume\r\n    consumer_tag = yield from super().consume(consumer_tag=consumer_tag, **kwargs)\r\n  File \"/home/decaz/workspace/aio-pika/aio_pika/common.py\", line 122, in wrap\r\n    return (yield from func(self, *args, **kwargs))\r\n  File \"/home/decaz/workspace/aio-pika/aio_pika/queue.py\", line 199, in consume\r\n    yield from future\r\nConnectionError: Auto Reconnect Error\r\nException in callback Connection._on_connect_timer()\r\nhandle: <TimerHandle when=468382.871150722 Connection._on_connect_timer()>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/asyncio/events.py\", line 145, in _run\r\n    self._callback(*self._args)\r\n  File \"/home/decaz/.virtualenvs/aio-pika/lib/python3.6/site-packages/pika/connection.py\", line 1811, in _on_connect_timer\r\n    error = self._adapter_connect()\r\n  File \"/home/decaz/.virtualenvs/aio-pika/lib/python3.6/site-packages/pika/adapters/asyncio_connection.py\", line 193, in _adapter_connect\r\n  File \"/home/decaz/.virtualenvs/aio-pika/lib/python3.6/site-packages/pika/adapters/base_connection.py\", line 170, in _adapter_connect\r\n    error = self._create_and_connect_to_socket(sock_addr)\r\n  File \"/home/decaz/.virtualenvs/aio-pika/lib/python3.6/site-packages/pika/adapters/base_connection.py\", line 203, in _create_and_connect_to_socket\r\n    sock_addr_tuple[0], sock_addr_tuple[1], sock_addr_tuple[2])\r\n  File \"/home/decaz/.virtualenvs/aio-pika/lib/python3.6/site-packages/pika/adapters/base_connection.py\", line 255, in _create_tcp_connection_socket\r\n    return socket.socket(sock_family, sock_type, sock_proto)\r\n  File \"/usr/lib/python3.6/socket.py\", line 144, in __init__\r\nOSError: [Errno 24] Too many open files\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/109", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/109/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/109/events", "html_url": "https://github.com/mosquito/aio-pika/issues/109", "id": 298359330, "node_id": "MDU6SXNzdWUyOTgzNTkzMzA=", "number": 109, "title": "Switch to the pika AsyncioConnection adapter", "user": {"login": "decaz", "id": 31096, "node_id": "MDQ6VXNlcjMxMDk2", "avatar_url": "https://avatars1.githubusercontent.com/u/31096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decaz", "html_url": "https://github.com/decaz", "followers_url": "https://api.github.com/users/decaz/followers", "following_url": "https://api.github.com/users/decaz/following{/other_user}", "gists_url": "https://api.github.com/users/decaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/decaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decaz/subscriptions", "organizations_url": "https://api.github.com/users/decaz/orgs", "repos_url": "https://api.github.com/users/decaz/repos", "events_url": "https://api.github.com/users/decaz/events{/privacy}", "received_events_url": "https://api.github.com/users/decaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-19T17:53:31Z", "updated_at": "2018-02-20T09:38:58Z", "closed_at": "2018-02-20T09:34:44Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "It's latest `pika` version used now. Can we switch to the pika's `AsyncioConnection` adapter now?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/108", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/108/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/108/events", "html_url": "https://github.com/mosquito/aio-pika/issues/108", "id": 297370182, "node_id": "MDU6SXNzdWUyOTczNzAxODI=", "number": 108, "title": "Use of transactions", "user": {"login": "arun11299", "id": 214426, "node_id": "MDQ6VXNlcjIxNDQyNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/214426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arun11299", "html_url": "https://github.com/arun11299", "followers_url": "https://api.github.com/users/arun11299/followers", "following_url": "https://api.github.com/users/arun11299/following{/other_user}", "gists_url": "https://api.github.com/users/arun11299/gists{/gist_id}", "starred_url": "https://api.github.com/users/arun11299/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arun11299/subscriptions", "organizations_url": "https://api.github.com/users/arun11299/orgs", "repos_url": "https://api.github.com/users/arun11299/repos", "events_url": "https://api.github.com/users/arun11299/events{/privacy}", "received_events_url": "https://api.github.com/users/arun11299/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-15T08:59:41Z", "updated_at": "2018-02-21T13:52:13Z", "closed_at": "2018-02-21T13:52:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nIs there any place where I can find the use of transaction to commit and rollback published messages ?\r\nThe available documentation seems to be very confusing.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/107", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/107/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/107/events", "html_url": "https://github.com/mosquito/aio-pika/issues/107", "id": 295119899, "node_id": "MDU6SXNzdWUyOTUxMTk4OTk=", "number": 107, "title": "aio_pika is slower than pika", "user": {"login": "michailj", "id": 7388134, "node_id": "MDQ6VXNlcjczODgxMzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7388134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michailj", "html_url": "https://github.com/michailj", "followers_url": "https://api.github.com/users/michailj/followers", "following_url": "https://api.github.com/users/michailj/following{/other_user}", "gists_url": "https://api.github.com/users/michailj/gists{/gist_id}", "starred_url": "https://api.github.com/users/michailj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michailj/subscriptions", "organizations_url": "https://api.github.com/users/michailj/orgs", "repos_url": "https://api.github.com/users/michailj/repos", "events_url": "https://api.github.com/users/michailj/events{/privacy}", "received_events_url": "https://api.github.com/users/michailj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2018-02-07T12:29:45Z", "updated_at": "2019-08-08T16:40:39Z", "closed_at": "2019-08-08T16:40:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have prepared two scripts to publish 10k messages, one using aio_pika and the second using pika. I measure time them need to send these messages. First script:\r\n```\r\nimport asyncio\r\nimport aio_pika\r\nimport datetime\r\n\r\n\r\nasync def main(loop):\r\n    connection = await aio_pika.connect(\"amqp://guest:guest@172.17.0.2/\", loop=loop)\r\n    routing_key = \"test_queue\"\r\n    channel = await connection.channel()\r\n    num_of_messages = 10000\r\n    start = datetime.datetime.now()\r\n    msg = aio_pika.Message(body=b'hello')\r\n    for _ in range(num_of_messages):\r\n        await channel.default_exchange.publish(\r\n            msg,\r\n            routing_key=routing_key\r\n        )\r\n    tt = datetime.datetime.now() - start\r\n    print(tt.total_seconds(), num_of_messages/tt.total_seconds())\r\n    await connection.close()\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    loop = asyncio.get_event_loop()\r\n    loop.run_until_complete(main(loop))\r\n    loop.close()\r\n```\r\nResult:\r\n```\r\n2.227745 4488.844100199978\r\n```\r\nSecond:\r\n```\r\nimport pika\r\nimport datetime\r\n\r\n\r\nconnection = pika.BlockingConnection(pika.URLParameters(\"amqp://guest:guest@172.17.0.2/\"))\r\nchannel = connection.channel()\r\n\r\nnum_of_messages = 10000\r\n\r\nrouting_key = \"test_queue\"\r\n\r\nstart = datetime.datetime.now()\r\n\r\nfor _ in range(num_of_messages):\r\n    channel.basic_publish(exchange='',\r\n                        routing_key=routing_key,\r\n                        body=b'hello')\r\n\r\ntt = datetime.datetime.now() - start\r\nprint(tt.total_seconds(), num_of_messages/tt.total_seconds())\r\n\r\nconnection.close()\r\n```\r\nResult:\r\n```\r\n0.37214 26871.60745955823\r\n```\r\nIt looks pika is 6 time faster than aio_pika. Why there is such difference?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/106", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/106/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/106/events", "html_url": "https://github.com/mosquito/aio-pika/issues/106", "id": 295009906, "node_id": "MDU6SXNzdWUyOTUwMDk5MDY=", "number": 106, "title": "capture exception when publish to not exists routing key", "user": {"login": "inshua", "id": 2752067, "node_id": "MDQ6VXNlcjI3NTIwNjc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2752067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inshua", "html_url": "https://github.com/inshua", "followers_url": "https://api.github.com/users/inshua/followers", "following_url": "https://api.github.com/users/inshua/following{/other_user}", "gists_url": "https://api.github.com/users/inshua/gists{/gist_id}", "starred_url": "https://api.github.com/users/inshua/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inshua/subscriptions", "organizations_url": "https://api.github.com/users/inshua/orgs", "repos_url": "https://api.github.com/users/inshua/repos", "events_url": "https://api.github.com/users/inshua/events{/privacy}", "received_events_url": "https://api.github.com/users/inshua/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-07T05:17:21Z", "updated_at": "2018-04-28T21:41:02Z", "closed_at": "2018-04-28T21:41:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nawait exchange.publish(msg, routing_key='not_exists_queue')\r\n```\r\nin asynqp, if the routing key not exists, will raise exception in consumer.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/104", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/104/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/104/events", "html_url": "https://github.com/mosquito/aio-pika/issues/104", "id": 294094151, "node_id": "MDU6SXNzdWUyOTQwOTQxNTE=", "number": 104, "title": "Cluster connection", "user": {"login": "luup2k", "id": 3969130, "node_id": "MDQ6VXNlcjM5NjkxMzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/3969130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luup2k", "html_url": "https://github.com/luup2k", "followers_url": "https://api.github.com/users/luup2k/followers", "following_url": "https://api.github.com/users/luup2k/following{/other_user}", "gists_url": "https://api.github.com/users/luup2k/gists{/gist_id}", "starred_url": "https://api.github.com/users/luup2k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luup2k/subscriptions", "organizations_url": "https://api.github.com/users/luup2k/orgs", "repos_url": "https://api.github.com/users/luup2k/repos", "events_url": "https://api.github.com/users/luup2k/events{/privacy}", "received_events_url": "https://api.github.com/users/luup2k/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-03T08:19:39Z", "updated_at": "2018-04-28T21:40:52Z", "closed_at": "2018-04-28T21:40:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\nLooking into doc/classes seems that is not possible connect to a cluster(a,b,c nodes) using aio-pika library.\r\n\r\nBut... i was thinking about the option to using the add_connection_lost_callback, to regenerate host string, and using other different host, this is possible??\r\n\r\nregards", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/102", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/102/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/102/events", "html_url": "https://github.com/mosquito/aio-pika/issues/102", "id": 293954662, "node_id": "MDU6SXNzdWUyOTM5NTQ2NjI=", "number": 102, "title": "Ignoring authentication errors within robust connection", "user": {"login": "decaz", "id": 31096, "node_id": "MDQ6VXNlcjMxMDk2", "avatar_url": "https://avatars1.githubusercontent.com/u/31096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decaz", "html_url": "https://github.com/decaz", "followers_url": "https://api.github.com/users/decaz/followers", "following_url": "https://api.github.com/users/decaz/following{/other_user}", "gists_url": "https://api.github.com/users/decaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/decaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decaz/subscriptions", "organizations_url": "https://api.github.com/users/decaz/orgs", "repos_url": "https://api.github.com/users/decaz/repos", "events_url": "https://api.github.com/users/decaz/events{/privacy}", "received_events_url": "https://api.github.com/users/decaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-02T16:55:32Z", "updated_at": "2018-03-11T10:54:38Z", "closed_at": "2018-03-11T10:54:38Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I suggest not to raise `pika.exceptions.ProbableAuthenticationError` within robust connection and continue retrying to connect. Or at least add some optional parameter for the `connect_robust` function.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/100", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/100/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/100/events", "html_url": "https://github.com/mosquito/aio-pika/issues/100", "id": 291681162, "node_id": "MDU6SXNzdWUyOTE2ODExNjI=", "number": 100, "title": "Closing channels in case of connection problems", "user": {"login": "decaz", "id": 31096, "node_id": "MDQ6VXNlcjMxMDk2", "avatar_url": "https://avatars1.githubusercontent.com/u/31096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decaz", "html_url": "https://github.com/decaz", "followers_url": "https://api.github.com/users/decaz/followers", "following_url": "https://api.github.com/users/decaz/following{/other_user}", "gists_url": "https://api.github.com/users/decaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/decaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decaz/subscriptions", "organizations_url": "https://api.github.com/users/decaz/orgs", "repos_url": "https://api.github.com/users/decaz/repos", "events_url": "https://api.github.com/users/decaz/events{/privacy}", "received_events_url": "https://api.github.com/users/decaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-01-25T19:07:25Z", "updated_at": "2019-10-31T10:00:29Z", "closed_at": "2019-10-31T10:00:29Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Is `_on_channel_close` callback should be called in case of connection lost or refused?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/99", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/99/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/99/events", "html_url": "https://github.com/mosquito/aio-pika/issues/99", "id": 291641259, "node_id": "MDU6SXNzdWUyOTE2NDEyNTk=", "number": 99, "title": "Support the amqps:// URL scheme", "user": {"login": "fmang", "id": 1500359, "node_id": "MDQ6VXNlcjE1MDAzNTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1500359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmang", "html_url": "https://github.com/fmang", "followers_url": "https://api.github.com/users/fmang/followers", "following_url": "https://api.github.com/users/fmang/following{/other_user}", "gists_url": "https://api.github.com/users/fmang/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmang/subscriptions", "organizations_url": "https://api.github.com/users/fmang/orgs", "repos_url": "https://api.github.com/users/fmang/repos", "events_url": "https://api.github.com/users/fmang/events{/privacy}", "received_events_url": "https://api.github.com/users/fmang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-25T16:55:19Z", "updated_at": "2018-05-25T18:57:01Z", "closed_at": "2018-05-25T18:57:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I noticed that while aio-pika accepted URL in its connect functions, the scheme is ignored.\r\n\r\nFor example:\r\n\r\n```python\r\nconnection = await aio_pika.connect('amqps://localhost/')\r\n```\r\n\r\nWhat it does: connect to localhost:5672, without SSL.\r\n\r\nWhat it should do: connect to localhost:5671, with SSL.\r\n\r\nPika already implement that logic with the [URLParameters](https://github.com/pika/pika/blob/66387744cf971ebb1c69cf48b7de017f40ff9bbe/pika/connection.py#L711) class, so it might be a good idea to delegate the URL parsing functionality to it, and ensure aio-pika's URLs are consistent with pika's.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/98", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/98/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/98/events", "html_url": "https://github.com/mosquito/aio-pika/issues/98", "id": 291235900, "node_id": "MDU6SXNzdWUyOTEyMzU5MDA=", "number": 98, "title": "RobustChannel does not reset it's delivery-tag after reconnect.", "user": {"login": "xlevus", "id": 143979, "node_id": "MDQ6VXNlcjE0Mzk3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/143979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xlevus", "html_url": "https://github.com/xlevus", "followers_url": "https://api.github.com/users/xlevus/followers", "following_url": "https://api.github.com/users/xlevus/following{/other_user}", "gists_url": "https://api.github.com/users/xlevus/gists{/gist_id}", "starred_url": "https://api.github.com/users/xlevus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xlevus/subscriptions", "organizations_url": "https://api.github.com/users/xlevus/orgs", "repos_url": "https://api.github.com/users/xlevus/repos", "events_url": "https://api.github.com/users/xlevus/events{/privacy}", "received_events_url": "https://api.github.com/users/xlevus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-24T14:50:04Z", "updated_at": "2018-02-09T11:11:39Z", "closed_at": "2018-01-25T19:45:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I may be wrong here, I'm not 100% sure on how clients should handle this.\r\n\r\nGiven I have a RobustConnection, with a channel, and a non-durable, auto-delete queue, and one consumer. All flags are the default.\r\n\r\nI can happily publish a messages to the queue.\r\n\r\nWhen I restart rabbit, causing the connection to disconnect, once the connection has recovered, publishing a message results in\r\n\r\n```\r\n2018-01-24 14:45:25 [info     ] Unknown delivery tag 1 for message confirmation \"Basic.Ack\" [aio_pika.channel]\r\n```\r\nAdditionally, once an unknown delivery tag is found, consumers using that channel no longer appear to consume.\r\n\r\nthe issue resolves itself by adding `self._delivery_tag = 0` to `Channel.initalize`.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/96", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/96/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/96/events", "html_url": "https://github.com/mosquito/aio-pika/issues/96", "id": 288671407, "node_id": "MDU6SXNzdWUyODg2NzE0MDc=", "number": 96, "title": "aiopika to aio-libs?", "user": {"login": "decaz", "id": 31096, "node_id": "MDQ6VXNlcjMxMDk2", "avatar_url": "https://avatars1.githubusercontent.com/u/31096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decaz", "html_url": "https://github.com/decaz", "followers_url": "https://api.github.com/users/decaz/followers", "following_url": "https://api.github.com/users/decaz/following{/other_user}", "gists_url": "https://api.github.com/users/decaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/decaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decaz/subscriptions", "organizations_url": "https://api.github.com/users/decaz/orgs", "repos_url": "https://api.github.com/users/decaz/repos", "events_url": "https://api.github.com/users/decaz/events{/privacy}", "received_events_url": "https://api.github.com/users/decaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-15T17:41:21Z", "updated_at": "2018-03-11T10:54:29Z", "closed_at": "2018-03-11T10:54:29Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I suggest to rename the project to `aiopika` and (maybe) move the repository to the https://github.com/aio-libs organization. It would be more pythonic relatively to other `asyncio` libraries and perhaps bring more users, testers, developers and contributors to the project.\r\n\r\n@mosquito what do you think about it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/92", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/92/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/92/events", "html_url": "https://github.com/mosquito/aio-pika/issues/92", "id": 287608291, "node_id": "MDU6SXNzdWUyODc2MDgyOTE=", "number": 92, "title": "Context manager for channel", "user": {"login": "shanecarey17", "id": 7001915, "node_id": "MDQ6VXNlcjcwMDE5MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7001915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shanecarey17", "html_url": "https://github.com/shanecarey17", "followers_url": "https://api.github.com/users/shanecarey17/followers", "following_url": "https://api.github.com/users/shanecarey17/following{/other_user}", "gists_url": "https://api.github.com/users/shanecarey17/gists{/gist_id}", "starred_url": "https://api.github.com/users/shanecarey17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shanecarey17/subscriptions", "organizations_url": "https://api.github.com/users/shanecarey17/orgs", "repos_url": "https://api.github.com/users/shanecarey17/repos", "events_url": "https://api.github.com/users/shanecarey17/events{/privacy}", "received_events_url": "https://api.github.com/users/shanecarey17/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-10T23:04:44Z", "updated_at": "2018-04-28T21:39:44Z", "closed_at": "2018-04-28T21:39:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I think a context manager would be nice for a channel, especially in cases where multiple coroutines share a connection and need to handle the case where the task is cancelled\r\n\r\n```\r\nclass Channel(...):\r\n    ...\r\n\r\n    @asyncio.coroutine\r\n    def __aenter__(self) -> 'Channel':\r\n        return self\r\n\r\n    @asyncio.coroutine\r\n    def __aexit__(self, exc_type, exc_val, exc_tb):\r\n        yield from self.close()\r\n```\r\n\r\nExample usage, the queue should auto delete when the task is cancelled but that only happens when the channel closes.\r\n\r\n```\r\nimport aio_pika\r\nimport asyncio\r\n\r\nconn = aio_pika.connect_robust('amqp://...')\r\n\r\nasync def task():\r\n    async with await conn.channel() as channel:\r\n        exchange = await channel.declare_exchange('exchange')\r\n        queue = await channel.declare_queue(auto_delete=True)\r\n        await queue.bind(exchange, routing_key='key')\r\n\r\n        async for msg in queue: # Task is cancelled here\r\n            with msg.process():\r\n                print(msg.body.decode())\r\n\r\nif __name__ == '__main__':\r\n    done, pending = asyncio.wait([task(), asyncio.sleep(5.0)], return_when=asyncio.FIRST_COMPLETED)\r\n\r\n    for task in pending:\r\n        task.cancel()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/91", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/91/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/91/events", "html_url": "https://github.com/mosquito/aio-pika/issues/91", "id": 287528489, "node_id": "MDU6SXNzdWUyODc1Mjg0ODk=", "number": 91, "title": "How can I enable logging for all aio-pika?", "user": {"login": "shanecarey17", "id": 7001915, "node_id": "MDQ6VXNlcjcwMDE5MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7001915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shanecarey17", "html_url": "https://github.com/shanecarey17", "followers_url": "https://api.github.com/users/shanecarey17/followers", "following_url": "https://api.github.com/users/shanecarey17/following{/other_user}", "gists_url": "https://api.github.com/users/shanecarey17/gists{/gist_id}", "starred_url": "https://api.github.com/users/shanecarey17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shanecarey17/subscriptions", "organizations_url": "https://api.github.com/users/shanecarey17/orgs", "repos_url": "https://api.github.com/users/shanecarey17/repos", "events_url": "https://api.github.com/users/shanecarey17/events{/privacy}", "received_events_url": "https://api.github.com/users/shanecarey17/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-10T18:11:37Z", "updated_at": "2018-01-10T22:55:31Z", "closed_at": "2018-01-10T22:55:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "How can I enable logging for all aio-pika?\r\n\r\nLooking for something like\r\n\r\n```\r\ngetLogger('aio-pika.????').setLevel(logging.INFO)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/90", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/90/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/90/events", "html_url": "https://github.com/mosquito/aio-pika/issues/90", "id": 285735500, "node_id": "MDU6SXNzdWUyODU3MzU1MDA=", "number": 90, "title": "AMQP Client connect_robust - How to recover gracefully?", "user": {"login": "eldardamari", "id": 2379595, "node_id": "MDQ6VXNlcjIzNzk1OTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2379595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eldardamari", "html_url": "https://github.com/eldardamari", "followers_url": "https://api.github.com/users/eldardamari/followers", "following_url": "https://api.github.com/users/eldardamari/following{/other_user}", "gists_url": "https://api.github.com/users/eldardamari/gists{/gist_id}", "starred_url": "https://api.github.com/users/eldardamari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eldardamari/subscriptions", "organizations_url": "https://api.github.com/users/eldardamari/orgs", "repos_url": "https://api.github.com/users/eldardamari/repos", "events_url": "https://api.github.com/users/eldardamari/events{/privacy}", "received_events_url": "https://api.github.com/users/eldardamari/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-01-03T16:21:07Z", "updated_at": "2019-08-08T16:34:51Z", "closed_at": "2019-08-08T16:34:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am running **20** consumers concurrently on my app, each one of them running\r\n```python\r\nawait queue.consume(consumer_func)\r\n```\r\n\r\nDuring the lifecycle of my app, I am encountering multiple exceptions like:\r\n ```RuntimeError('Connection closed'), ConnectionClosed, ChannelClosed```\r\nAnd trying to recover with a decorator and refresh connection method.\r\n\r\n```python\r\nself.rmq_channel = await self.rmq_connection.channel()\r\n  File \"/Users/eldar/virtual_env/lib/python3.6/site-packages/aio_pika/connection.py\", line 26, in wrap\r\n    raise RuntimeError(\"Connection closed\")\r\nRuntimeError: Connection closed\r\n```\r\n\r\n1. What is the best practice to recover lost/corrupted/blocked connections? \r\n\r\nI'm attaching my client and decorator:\r\n\r\n### Client\r\n```python\r\nclass AsyncAMQP:\r\n    def __init__(self, prefetch_count: int = 1):\r\n        self.rmq_connection = None\r\n        self.rmq_channel = None\r\n        self.prefetch_count = prefetch_count\r\n\r\n        self.is_connecting = False\r\n\r\n    async def init_connetion(self):\r\n        if not all([self.rmq_connection, self.rmq_channel]):\r\n            self.is_connecting = True\r\n            self.rmq_connection = await connect_robust(RABBIT_URL, ssl=True, heartbeat_interval=10)\r\n            self.rmq_channel = await self.rmq_connection.channel()\r\n            # This tells RabbitMQ not to give more than one message to a worker at a time\r\n            await self.rmq_channel.set_qos(prefetch_count=self.prefetch_count or 1)\r\n\r\n        self.is_connecting = False\r\n        return self.rmq_connection, self.rmq_channel\r\n\r\n    async def close(self):\r\n        if self.rmq_channel:\r\n            await self.rmq_channel.close()\r\n\r\n        if self.rmq_connection and not self.rmq_connection.is_closed:\r\n            await self.rmq_connection.close()\r\n\r\n    @rabbit_recoverer\r\n    async def post(self, queue_name: str, message: dict):\r\n        rmq_connection, rmq_channel = await self.init_connetion()\r\n\r\n        try:\r\n            await rmq_channel.declare_queue(queue_name, durable=True)\r\n            await rmq_channel.default_exchange.publish(Message(message,\r\n                                                               delivery_mode=DeliveryMode.PERSISTENT),\r\n                                                       routing_key=queue_name)\r\n        finally:\r\n            await self.close()\r\n\r\n    async def refresh_connection(self):\r\n        if not self.is_connecting:\r\n            await self.close()\r\n            self.rmq_channel = None\r\n            self.rmq_connection = None\r\n            self.rmq_connection, self.rmq_channel = await self.init_connetion()\r\n\r\n```\r\n### Decorator\r\n```python\r\ndef rabbit_recoverer(func):\r\n    @wraps(func)\r\n    async def wrapped(self, *args, **kwargs):\r\n        response = None\r\n        refresh_conn = False\r\n        try:\r\n            response = await func(self, *args, **kwargs)\r\n        except RuntimeError as e:\r\n            if str(e) == 'Connection closed':\r\n                refresh_conn = True\r\n            else:\r\n                raise\r\n        except (ConnectionClosed, ChannelClosed, ConnectionError, TimeoutError) as e:\r\n            refresh_conn = True\r\n        finally:\r\n            if refresh_conn:\r\n                await self.refresh_connection()\r\n                response = await func(self, *args, **kwargs)\r\n        return response\r\n    return wrapped\r\n```\r\n\r\nThanks for the help, kudos on the great work!\r\n  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/89", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/89/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/89/events", "html_url": "https://github.com/mosquito/aio-pika/issues/89", "id": 285710712, "node_id": "MDU6SXNzdWUyODU3MTA3MTI=", "number": 89, "title": "Package versioning is handled incorrectly.", "user": {"login": "xlevus", "id": 143979, "node_id": "MDQ6VXNlcjE0Mzk3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/143979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xlevus", "html_url": "https://github.com/xlevus", "followers_url": "https://api.github.com/users/xlevus/followers", "following_url": "https://api.github.com/users/xlevus/following{/other_user}", "gists_url": "https://api.github.com/users/xlevus/gists{/gist_id}", "starred_url": "https://api.github.com/users/xlevus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xlevus/subscriptions", "organizations_url": "https://api.github.com/users/xlevus/orgs", "repos_url": "https://api.github.com/users/xlevus/repos", "events_url": "https://api.github.com/users/xlevus/events{/privacy}", "received_events_url": "https://api.github.com/users/xlevus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-03T14:58:58Z", "updated_at": "2018-01-05T19:54:32Z", "closed_at": "2018-01-05T19:52:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "The way you're handling your package requirements is wrong (as far as I understand it).\r\n\r\nAdding package dependencies based on python version should be handled like so:\r\nhttps://github.com/python/mypy/blob/master/setup.py#L115\r\n\r\nAdding dependency of python version should be handled like so:\r\nhttps://github.com/xlevus/python-diana/blob/async-params/setup.py#L29\r\n  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/87", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/87/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/87/events", "html_url": "https://github.com/mosquito/aio-pika/issues/87", "id": 285249424, "node_id": "MDU6SXNzdWUyODUyNDk0MjQ=", "number": 87, "title": "Github release version (1.5.1) != pypi (1.7.1)", "user": {"login": "eldardamari", "id": 2379595, "node_id": "MDQ6VXNlcjIzNzk1OTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2379595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eldardamari", "html_url": "https://github.com/eldardamari", "followers_url": "https://api.github.com/users/eldardamari/followers", "following_url": "https://api.github.com/users/eldardamari/following{/other_user}", "gists_url": "https://api.github.com/users/eldardamari/gists{/gist_id}", "starred_url": "https://api.github.com/users/eldardamari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eldardamari/subscriptions", "organizations_url": "https://api.github.com/users/eldardamari/orgs", "repos_url": "https://api.github.com/users/eldardamari/repos", "events_url": "https://api.github.com/users/eldardamari/events{/privacy}", "received_events_url": "https://api.github.com/users/eldardamari/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-31T09:50:14Z", "updated_at": "2018-01-03T09:45:34Z", "closed_at": "2018-01-03T09:45:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Why Github latest release version does not match pypi latest? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/86", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/86/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/86/events", "html_url": "https://github.com/mosquito/aio-pika/issues/86", "id": 284748343, "node_id": "MDU6SXNzdWUyODQ3NDgzNDM=", "number": 86, "title": "Binding queue to exchange requires declaring exchange (creating exchange object)", "user": {"login": "jkr78", "id": 24533927, "node_id": "MDQ6VXNlcjI0NTMzOTI3", "avatar_url": "https://avatars3.githubusercontent.com/u/24533927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jkr78", "html_url": "https://github.com/jkr78", "followers_url": "https://api.github.com/users/jkr78/followers", "following_url": "https://api.github.com/users/jkr78/following{/other_user}", "gists_url": "https://api.github.com/users/jkr78/gists{/gist_id}", "starred_url": "https://api.github.com/users/jkr78/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jkr78/subscriptions", "organizations_url": "https://api.github.com/users/jkr78/orgs", "repos_url": "https://api.github.com/users/jkr78/repos", "events_url": "https://api.github.com/users/jkr78/events{/privacy}", "received_events_url": "https://api.github.com/users/jkr78/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-27T15:53:37Z", "updated_at": "2018-01-05T19:58:21Z", "closed_at": "2018-01-05T19:57:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently it is impossible to bind queue to exchange by name. \r\nI have to ether to declare exchange or create dummy exchange object or mock (object with name attribute). Redeclaring exchanges may cause errors if configuration changes on one end.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/84", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/84/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/84/events", "html_url": "https://github.com/mosquito/aio-pika/issues/84", "id": 284539470, "node_id": "MDU6SXNzdWUyODQ1Mzk0NzA=", "number": 84, "title": "Use asyncio.TimeoutError instead of TimeoutError", "user": {"login": "decaz", "id": 31096, "node_id": "MDQ6VXNlcjMxMDk2", "avatar_url": "https://avatars1.githubusercontent.com/u/31096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decaz", "html_url": "https://github.com/decaz", "followers_url": "https://api.github.com/users/decaz/followers", "following_url": "https://api.github.com/users/decaz/following{/other_user}", "gists_url": "https://api.github.com/users/decaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/decaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decaz/subscriptions", "organizations_url": "https://api.github.com/users/decaz/orgs", "repos_url": "https://api.github.com/users/decaz/repos", "events_url": "https://api.github.com/users/decaz/events{/privacy}", "received_events_url": "https://api.github.com/users/decaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-26T11:12:36Z", "updated_at": "2018-03-11T10:54:20Z", "closed_at": "2018-03-11T10:54:20Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I think that would be more appropriate solution.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/82", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/82/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/82/events", "html_url": "https://github.com/mosquito/aio-pika/issues/82", "id": 278028697, "node_id": "MDU6SXNzdWUyNzgwMjg2OTc=", "number": 82, "title": "bug found: routing_key not work", "user": {"login": "Pro-YY", "id": 6488157, "node_id": "MDQ6VXNlcjY0ODgxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/6488157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pro-YY", "html_url": "https://github.com/Pro-YY", "followers_url": "https://api.github.com/users/Pro-YY/followers", "following_url": "https://api.github.com/users/Pro-YY/following{/other_user}", "gists_url": "https://api.github.com/users/Pro-YY/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pro-YY/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pro-YY/subscriptions", "organizations_url": "https://api.github.com/users/Pro-YY/orgs", "repos_url": "https://api.github.com/users/Pro-YY/repos", "events_url": "https://api.github.com/users/Pro-YY/events{/privacy}", "received_events_url": "https://api.github.com/users/Pro-YY/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-30T07:57:32Z", "updated_at": "2018-04-28T21:37:59Z", "closed_at": "2018-04-28T21:37:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "in publish example: i.e.\r\npublisher publish to a exchange with routing key, and subscriber bind queue and exchange with routing key.\r\nIt shows that routing_key takes no effect and turn out to be error, when **the 'queue name' is not the same as 'routing key name'**, hope fix in the future.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/81", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/81/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/81/events", "html_url": "https://github.com/mosquito/aio-pika/issues/81", "id": 276722878, "node_id": "MDU6SXNzdWUyNzY3MjI4Nzg=", "number": 81, "title": "how to use aio-pika in tornado?", "user": {"login": "calJ2016", "id": 23138635, "node_id": "MDQ6VXNlcjIzMTM4NjM1", "avatar_url": "https://avatars0.githubusercontent.com/u/23138635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calJ2016", "html_url": "https://github.com/calJ2016", "followers_url": "https://api.github.com/users/calJ2016/followers", "following_url": "https://api.github.com/users/calJ2016/following{/other_user}", "gists_url": "https://api.github.com/users/calJ2016/gists{/gist_id}", "starred_url": "https://api.github.com/users/calJ2016/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calJ2016/subscriptions", "organizations_url": "https://api.github.com/users/calJ2016/orgs", "repos_url": "https://api.github.com/users/calJ2016/repos", "events_url": "https://api.github.com/users/calJ2016/events{/privacy}", "received_events_url": "https://api.github.com/users/calJ2016/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-25T03:44:21Z", "updated_at": "2017-12-15T14:52:16Z", "closed_at": "2017-12-15T14:52:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello, could you give some example to show how to use aio-pika in tornado? thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/80", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/80/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/80/events", "html_url": "https://github.com/mosquito/aio-pika/issues/80", "id": 275393655, "node_id": "MDU6SXNzdWUyNzUzOTM2NTU=", "number": 80, "title": "Use pika==0.11.0", "user": {"login": "akalex", "id": 5378995, "node_id": "MDQ6VXNlcjUzNzg5OTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/5378995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akalex", "html_url": "https://github.com/akalex", "followers_url": "https://api.github.com/users/akalex/followers", "following_url": "https://api.github.com/users/akalex/following{/other_user}", "gists_url": "https://api.github.com/users/akalex/gists{/gist_id}", "starred_url": "https://api.github.com/users/akalex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akalex/subscriptions", "organizations_url": "https://api.github.com/users/akalex/orgs", "repos_url": "https://api.github.com/users/akalex/repos", "events_url": "https://api.github.com/users/akalex/events{/privacy}", "received_events_url": "https://api.github.com/users/akalex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-20T15:25:19Z", "updated_at": "2019-02-26T21:49:58Z", "closed_at": "2019-02-26T21:28:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am just curious, why **aio-pika** is restricted to used **pika** with the version less than 0.11.0? Is there something that might broke code functionality? \r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/78", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/78/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/78/events", "html_url": "https://github.com/mosquito/aio-pika/issues/78", "id": 270602829, "node_id": "MDU6SXNzdWUyNzA2MDI4Mjk=", "number": 78, "title": "Publish to unexistent queue", "user": {"login": "olexandr-klymenko", "id": 2428944, "node_id": "MDQ6VXNlcjI0Mjg5NDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2428944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olexandr-klymenko", "html_url": "https://github.com/olexandr-klymenko", "followers_url": "https://api.github.com/users/olexandr-klymenko/followers", "following_url": "https://api.github.com/users/olexandr-klymenko/following{/other_user}", "gists_url": "https://api.github.com/users/olexandr-klymenko/gists{/gist_id}", "starred_url": "https://api.github.com/users/olexandr-klymenko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olexandr-klymenko/subscriptions", "organizations_url": "https://api.github.com/users/olexandr-klymenko/orgs", "repos_url": "https://api.github.com/users/olexandr-klymenko/repos", "events_url": "https://api.github.com/users/olexandr-klymenko/events{/privacy}", "received_events_url": "https://api.github.com/users/olexandr-klymenko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-02T10:29:08Z", "updated_at": "2017-11-12T09:10:23Z", "closed_at": "2017-11-12T09:10:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Exchange.publish doesn't seem to handle unexistent queue. So, if message is published request hangs forever. There should be a way to figure out that the queue is absent ant raise corresponding exception", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/77", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/77/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/77/events", "html_url": "https://github.com/mosquito/aio-pika/issues/77", "id": 269532841, "node_id": "MDU6SXNzdWUyNjk1MzI4NDE=", "number": 77, "title": "Typo in readme.rst?", "user": {"login": "YanisITMegastar", "id": 32539952, "node_id": "MDQ6VXNlcjMyNTM5OTUy", "avatar_url": "https://avatars3.githubusercontent.com/u/32539952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YanisITMegastar", "html_url": "https://github.com/YanisITMegastar", "followers_url": "https://api.github.com/users/YanisITMegastar/followers", "following_url": "https://api.github.com/users/YanisITMegastar/following{/other_user}", "gists_url": "https://api.github.com/users/YanisITMegastar/gists{/gist_id}", "starred_url": "https://api.github.com/users/YanisITMegastar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YanisITMegastar/subscriptions", "organizations_url": "https://api.github.com/users/YanisITMegastar/orgs", "repos_url": "https://api.github.com/users/YanisITMegastar/repos", "events_url": "https://api.github.com/users/YanisITMegastar/events{/privacy}", "received_events_url": "https://api.github.com/users/YanisITMegastar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-30T09:33:59Z", "updated_at": "2017-11-12T09:14:36Z", "closed_at": "2017-11-12T09:14:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "An example with message publishing is preceded with \"Sample receiver:\".\r\nMaybe \"Sample publisher\" was really meant?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/75", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/75/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/75/events", "html_url": "https://github.com/mosquito/aio-pika/issues/75", "id": 268041170, "node_id": "MDU6SXNzdWUyNjgwNDExNzA=", "number": 75, "title": "Exceptions thrown during reconnect", "user": {"login": "peter-wimsey", "id": 33061469, "node_id": "MDQ6VXNlcjMzMDYxNDY5", "avatar_url": "https://avatars2.githubusercontent.com/u/33061469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-wimsey", "html_url": "https://github.com/peter-wimsey", "followers_url": "https://api.github.com/users/peter-wimsey/followers", "following_url": "https://api.github.com/users/peter-wimsey/following{/other_user}", "gists_url": "https://api.github.com/users/peter-wimsey/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-wimsey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-wimsey/subscriptions", "organizations_url": "https://api.github.com/users/peter-wimsey/orgs", "repos_url": "https://api.github.com/users/peter-wimsey/repos", "events_url": "https://api.github.com/users/peter-wimsey/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-wimsey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-24T13:53:15Z", "updated_at": "2018-01-03T14:10:39Z", "closed_at": "2018-01-03T09:49:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am trying to create an AMQP connections that quietly tries to reconnect while the RabbitMQ server is down.\r\n\r\nHere's a slightly modified version of the client example:\r\n\r\n```python\r\nimport asyncio\r\nfrom aio_pika.robust_connection import RobustConnection\r\n\r\nimport aio_pika\r\n\r\n\r\ndef on_amqp_lost(connection):\r\n    print('###### on_ampq_lost', connection)\r\n\r\n\r\nasync def ampq(current_loop: asyncio.AbstractEventLoop):\r\n    connection = await aio_pika.connect_robust(\r\n        \"amqp://amqp_user:**********@ip-*********.eu-west-1.compute.internal:5672\",\r\n        reconnect_interval=10,\r\n        loop=current_loop\r\n    )  # type: RobustConnection\r\n\r\n    connection.add_connection_lost_callback(on_amqp_lost)\r\n\r\n    async with connection:\r\n\r\n        channel = await connection.channel()\r\n\r\n        queue = await channel.declare_queue(\"some_queue\", durable=True)\r\n\r\n        print('###### connected')\r\n\r\n        async for message in queue:\r\n            with message.process():\r\n                print(message.body)\r\n\r\n\r\ndef on_loop_exception(current_loop, context):\r\n    exc = context.get('exception')\r\n    print('###### on_loop_exception %r ' % (exc,))\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    loop = asyncio.get_event_loop()\r\n    asyncio.ensure_future(ampq(loop))\r\n    loop.set_exception_handler(on_loop_exception)\r\n    loop.run_forever()\r\n```\r\n\r\nThis connects fine:\r\n\r\n```\r\n###### connected\r\nb'{\"message\": \"hello\"}'\r\n```\r\n\r\nAfter restarting the RabbitMQ server (takes about 3 seconds) an _Auto Reconnect Error_ is thrown but the connection seems to recover\r\n\r\n```\r\n###### on_ampq_lost amqp://amqp_user:********@ip-*********.eu-west-1.compute.internal:5672\r\n###### on_loop_exception ConnectionError('Auto Reconnect Error',) \r\nb'{\"message\": \"hello\"}'\r\n\r\n```\r\n\r\nIf I shut down the RabbitMQ server I get the last 3 exceptions shown below repeatedly:\r\n\r\n```\r\n###### on_ampq_lost amqp://amqp_user:********@ip-*********.eu-west-1.compute.internal:5672\r\n###### on_loop_exception ConnectionError('Auto Reconnect Error',) \r\n###### on_loop_exception AttributeError(\"'NoneType' object has no attribute 'channel'\",) \r\n###### on_loop_exception ConnectionError('Auto Reconnect Error',) \r\n```\r\n\r\nOnce the RabbitMQ server is up again the connection recovers.\r\n\r\nHow can I avoid these exceptions? In my use case there are other connections open on the same loop and I want to stop it once any of these disconnects.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/72", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/72/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/72/events", "html_url": "https://github.com/mosquito/aio-pika/issues/72", "id": 266764363, "node_id": "MDU6SXNzdWUyNjY3NjQzNjM=", "number": 72, "title": "'passive' param is not accepted by 'Channel.declare_exchange()'", "user": {"login": "pierec", "id": 2878847, "node_id": "MDQ6VXNlcjI4Nzg4NDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2878847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierec", "html_url": "https://github.com/pierec", "followers_url": "https://api.github.com/users/pierec/followers", "following_url": "https://api.github.com/users/pierec/following{/other_user}", "gists_url": "https://api.github.com/users/pierec/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierec/subscriptions", "organizations_url": "https://api.github.com/users/pierec/orgs", "repos_url": "https://api.github.com/users/pierec/repos", "events_url": "https://api.github.com/users/pierec/events{/privacy}", "received_events_url": "https://api.github.com/users/pierec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-19T08:44:20Z", "updated_at": "2017-10-20T11:42:38Z", "closed_at": "2017-10-20T11:39:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is there a reason why `passive` param is not supported while declaring an exchange? It should just be a matter of passing another param to PIKA method (http://pika.readthedocs.io/en/0.10.0/modules/channel.html#pika.channel.Channel.exchange_declare).\r\n\r\nI have a case where I'd like to bail out if the exchange does not exist already instead of attempting to create one.\r\n\r\nI'd be more than happy to contribute a patch that fixes this issue, but wanted to consult here first :).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/71", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/71/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/71/events", "html_url": "https://github.com/mosquito/aio-pika/issues/71", "id": 265679673, "node_id": "MDU6SXNzdWUyNjU2Nzk2NzM=", "number": 71, "title": "Event loop is closed when exiting QueueIterator", "user": {"login": "bitrut", "id": 283447, "node_id": "MDQ6VXNlcjI4MzQ0Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/283447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitrut", "html_url": "https://github.com/bitrut", "followers_url": "https://api.github.com/users/bitrut/followers", "following_url": "https://api.github.com/users/bitrut/following{/other_user}", "gists_url": "https://api.github.com/users/bitrut/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitrut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitrut/subscriptions", "organizations_url": "https://api.github.com/users/bitrut/orgs", "repos_url": "https://api.github.com/users/bitrut/repos", "events_url": "https://api.github.com/users/bitrut/events{/privacy}", "received_events_url": "https://api.github.com/users/bitrut/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-10-16T08:06:25Z", "updated_at": "2017-11-17T17:56:45Z", "closed_at": "2017-11-17T17:56:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been trying to use QueueIterator. I run the example from the home page of docs for simple producer and consumer. I'm getting this error:\r\n```\r\nException ignored in: <bound method QueueIterator.__del__ of <aio_pika.queue.QueueIterator object at 0x10d7da6a0>>\r\nTraceback (most recent call last):\r\n  File \"/Users/bitrut/.virtualenvs/conradlib/lib/python3.6/site-packages/aio_pika/queue.py\", line 362, in __del__\r\n    self.close()\r\n  File \"/Users/bitrut/.virtualenvs/conradlib/lib/python3.6/site-packages/aio_pika/queue.py\", line 359, in close\r\n    return self.loop.create_task(self._close())\r\n  File \"/usr/local/Cellar/python3/3.6.1/Frameworks/Python.framework/Versions/3.6/lib/python3.6/asyncio/base_events.py\", line 282, in create_task\r\n    self._check_closed()\r\n  File \"/usr/local/Cellar/python3/3.6.1/Frameworks/Python.framework/Versions/3.6/lib/python3.6/asyncio/base_events.py\", line 357, in _check_closed\r\n    raise RuntimeError('Event loop is closed')\r\nRuntimeError: Event loop is closed\r\n```\r\n\r\nI can't figure out what's wrong.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/70", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/70/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/70/events", "html_url": "https://github.com/mosquito/aio-pika/issues/70", "id": 261442488, "node_id": "MDU6SXNzdWUyNjE0NDI0ODg=", "number": 70, "title": "Error in Channel._channel_maker ?", "user": {"login": "fortiema", "id": 969451, "node_id": "MDQ6VXNlcjk2OTQ1MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/969451?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fortiema", "html_url": "https://github.com/fortiema", "followers_url": "https://api.github.com/users/fortiema/followers", "following_url": "https://api.github.com/users/fortiema/following{/other_user}", "gists_url": "https://api.github.com/users/fortiema/gists{/gist_id}", "starred_url": "https://api.github.com/users/fortiema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fortiema/subscriptions", "organizations_url": "https://api.github.com/users/fortiema/orgs", "repos_url": "https://api.github.com/users/fortiema/repos", "events_url": "https://api.github.com/users/fortiema/events{/privacy}", "received_events_url": "https://api.github.com/users/fortiema/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-28T19:59:55Z", "updated_at": "2017-10-02T16:04:27Z", "closed_at": "2017-10-02T16:04:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all, thanks for making this library available - Having robust asynchronous AMQP clients is something exciting.\r\n\r\nI may be wrong (I'm very new to asyncio so this is all a bit confusing to me still), but there seem to be an error in `_channel_maker` function at [channel.py#L68](https://github.com/fortiema/aio-pika/blob/44127dd87ad15a2cc27cdb2870d868aa0bb0bbc9/aio_pika/channel.py#L68)\r\n\r\n```python\r\ndef _channel_maker(self):\r\n        return self._connection._connection.channel\r\n```\r\n\r\nThe first `_connection` refers to `AsyncioConnection`, but it does not have a `_connection` property itself. This means every time the connection is closed, and then re-established, I get this error thrown out:\r\n\r\n```\r\nTraceback (most recent call last):\r\n [...]\r\n    return self._connection._connection.channel\r\nAttributeError: 'NoneType' object has no attribute 'channel'\r\n```\r\n\r\nEditing the code to remove the second `_connection` seems to fix the issue for me.\r\n\r\n\r\nDetails:\r\n* python 3.6.2\r\n* aio-pika 1.4.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/69", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/69/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/69/events", "html_url": "https://github.com/mosquito/aio-pika/issues/69", "id": 260072461, "node_id": "MDU6SXNzdWUyNjAwNzI0NjE=", "number": 69, "title": "Changelog", "user": {"login": "gilbsgilbs", "id": 3407667, "node_id": "MDQ6VXNlcjM0MDc2Njc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3407667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilbsgilbs", "html_url": "https://github.com/gilbsgilbs", "followers_url": "https://api.github.com/users/gilbsgilbs/followers", "following_url": "https://api.github.com/users/gilbsgilbs/following{/other_user}", "gists_url": "https://api.github.com/users/gilbsgilbs/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilbsgilbs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilbsgilbs/subscriptions", "organizations_url": "https://api.github.com/users/gilbsgilbs/orgs", "repos_url": "https://api.github.com/users/gilbsgilbs/repos", "events_url": "https://api.github.com/users/gilbsgilbs/events{/privacy}", "received_events_url": "https://api.github.com/users/gilbsgilbs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-09-24T09:52:59Z", "updated_at": "2017-09-24T16:56:33Z", "closed_at": "2017-09-24T10:06:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi!\r\nWould it be possible to provide a changelog between releases? It's quite hard to figure out what changed or even if there are breaking changes. Therefore, I'm not confident for updating aio-pika in production.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/68", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/68/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/68/events", "html_url": "https://github.com/mosquito/aio-pika/issues/68", "id": 259626496, "node_id": "MDU6SXNzdWUyNTk2MjY0OTY=", "number": 68, "title": "Consume messages like an async generator", "user": {"login": "saabeilin", "id": 1620799, "node_id": "MDQ6VXNlcjE2MjA3OTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1620799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saabeilin", "html_url": "https://github.com/saabeilin", "followers_url": "https://api.github.com/users/saabeilin/followers", "following_url": "https://api.github.com/users/saabeilin/following{/other_user}", "gists_url": "https://api.github.com/users/saabeilin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saabeilin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saabeilin/subscriptions", "organizations_url": "https://api.github.com/users/saabeilin/orgs", "repos_url": "https://api.github.com/users/saabeilin/repos", "events_url": "https://api.github.com/users/saabeilin/events{/privacy}", "received_events_url": "https://api.github.com/users/saabeilin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-21T20:44:13Z", "updated_at": "2017-09-23T19:41:49Z", "closed_at": "2017-09-23T19:41:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Are there any plans to introduce an async generator consumer?\r\n```\r\nasync for message in queue.consume(...):\r\n    await so_something(message)\r\n```\r\n(just started looking into the library, so might miss something)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/64", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/64/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/64/events", "html_url": "https://github.com/mosquito/aio-pika/issues/64", "id": 257180242, "node_id": "MDU6SXNzdWUyNTcxODAyNDI=", "number": 64, "title": "Client does not seem to be sending heartbeats to RabbitMQ", "user": {"login": "dstibrany", "id": 1217455, "node_id": "MDQ6VXNlcjEyMTc0NTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1217455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dstibrany", "html_url": "https://github.com/dstibrany", "followers_url": "https://api.github.com/users/dstibrany/followers", "following_url": "https://api.github.com/users/dstibrany/following{/other_user}", "gists_url": "https://api.github.com/users/dstibrany/gists{/gist_id}", "starred_url": "https://api.github.com/users/dstibrany/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dstibrany/subscriptions", "organizations_url": "https://api.github.com/users/dstibrany/orgs", "repos_url": "https://api.github.com/users/dstibrany/repos", "events_url": "https://api.github.com/users/dstibrany/events{/privacy}", "received_events_url": "https://api.github.com/users/dstibrany/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-12T20:58:47Z", "updated_at": "2017-10-16T09:02:31Z", "closed_at": "2017-10-16T09:02:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to configure worker -> rabbitmq using aio-pika and I'd like to keep a long lived connection open, but I'm running in to disconnection issues if there is a lull in activity. I'm noticing that if I set `heartbeat_interval`, this will change how long rabbitmq waits to determine if a connection is 'dead', but has no affect on the interval in which the client sends heartbeats out. In fact, I'm not actually seeing any heartbeats being sent out from the aio-pika client in tcpdump.\r\n\r\nIs this a bug in aio-pika or in pika?\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/63", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/63/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/63/events", "html_url": "https://github.com/mosquito/aio-pika/issues/63", "id": 257039578, "node_id": "MDU6SXNzdWUyNTcwMzk1Nzg=", "number": 63, "title": "Trying to reconnect after close was invoked", "user": {"login": "decaz", "id": 31096, "node_id": "MDQ6VXNlcjMxMDk2", "avatar_url": "https://avatars1.githubusercontent.com/u/31096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decaz", "html_url": "https://github.com/decaz", "followers_url": "https://api.github.com/users/decaz/followers", "following_url": "https://api.github.com/users/decaz/following{/other_user}", "gists_url": "https://api.github.com/users/decaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/decaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decaz/subscriptions", "organizations_url": "https://api.github.com/users/decaz/orgs", "repos_url": "https://api.github.com/users/decaz/repos", "events_url": "https://api.github.com/users/decaz/events{/privacy}", "received_events_url": "https://api.github.com/users/decaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-09-12T13:17:38Z", "updated_at": "2018-04-28T21:34:08Z", "closed_at": "2018-04-28T21:34:08Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Maybe we can save handler at: https://github.com/mosquito/aio-pika/blob/1a70b3d4aa7b6e7ed7a310ce88883ba2e5d47649/aio_pika/robust_connection.py#L77-L80 and then cancel it within the close method, but I think there will be deadlock as it cannot return connection.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/61", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/61/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/61/events", "html_url": "https://github.com/mosquito/aio-pika/issues/61", "id": 256777402, "node_id": "MDU6SXNzdWUyNTY3Nzc0MDI=", "number": 61, "title": "Queue consume callback is not called", "user": {"login": "decaz", "id": 31096, "node_id": "MDQ6VXNlcjMxMDk2", "avatar_url": "https://avatars1.githubusercontent.com/u/31096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decaz", "html_url": "https://github.com/decaz", "followers_url": "https://api.github.com/users/decaz/followers", "following_url": "https://api.github.com/users/decaz/following{/other_user}", "gists_url": "https://api.github.com/users/decaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/decaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decaz/subscriptions", "organizations_url": "https://api.github.com/users/decaz/orgs", "repos_url": "https://api.github.com/users/decaz/repos", "events_url": "https://api.github.com/users/decaz/events{/privacy}", "received_events_url": "https://api.github.com/users/decaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-11T17:11:08Z", "updated_at": "2017-09-12T08:06:38Z", "closed_at": "2017-09-12T08:06:28Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "`$ cat test.py`\r\n```python\r\nimport asyncio\r\n\r\nfrom aio_pika import Message, connect\r\n\r\nasync def on_message(message):\r\n    print(message)\r\n\r\nasync def test(queue_name):\r\n    connection = await connect('amqp://guest:guest@localhost:5672/')\r\n    channel = await connection.channel()\r\n    await channel.queue_delete(queue_name)\r\n    queue = await channel.declare_queue(queue_name)\r\n    queue.consume(on_message)\r\n\r\n    msg = Message(b'Test')\r\n    await channel.default_exchange.publish(msg, routing_key=queue_name)\r\n\r\nif __name__ == '__main__':\r\n    loop = asyncio.get_event_loop()\r\n    loop.run_until_complete(test(queue_name='test_queue'))\r\n```\r\n```\r\n$ pip list | grep pika\r\naio-pika (0.21.0)\r\npika (0.10.0)\r\n```\r\n```\r\n$ python3.6 test.py\r\nIncomingMessage:{'app_id': None,\r\n 'body_size': 4,\r\n...\r\n 'user_id': None}\r\n```\r\n```\r\n$ pip install aio-pika==1.0.0\r\n...\r\nSuccessfully installed aio-pika-1.0.0\r\n$ pip list | grep pika\r\naio-pika (1.0.0)\r\npika (0.10.0)\r\n```\r\n```\r\n$ python3.6 test.py\r\n$ \r\n```\r\nThere are no messages while consuming, but there is one message in the queue (can see it through the management plugin). It's ok within v0.21.0, the problem appears from v1.0.0. Same problem with the latest v1.3.2.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/56", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/56/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/56/events", "html_url": "https://github.com/mosquito/aio-pika/issues/56", "id": 255975293, "node_id": "MDU6SXNzdWUyNTU5NzUyOTM=", "number": 56, "title": "await queue.get() seems to gets stuck when the queue is empty (not getting new elements)", "user": {"login": "jakubczaplicki", "id": 147901, "node_id": "MDQ6VXNlcjE0NzkwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/147901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubczaplicki", "html_url": "https://github.com/jakubczaplicki", "followers_url": "https://api.github.com/users/jakubczaplicki/followers", "following_url": "https://api.github.com/users/jakubczaplicki/following{/other_user}", "gists_url": "https://api.github.com/users/jakubczaplicki/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubczaplicki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubczaplicki/subscriptions", "organizations_url": "https://api.github.com/users/jakubczaplicki/orgs", "repos_url": "https://api.github.com/users/jakubczaplicki/repos", "events_url": "https://api.github.com/users/jakubczaplicki/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubczaplicki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-09-07T15:19:45Z", "updated_at": "2017-09-09T20:25:42Z", "closed_at": "2017-09-09T20:15:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "What should be the correct behaviour in the following case :\r\n\r\n```\r\nasync def consumer(queue_in):\r\n    while True:\r\n        msg = await queue_in.get()\r\n        await do_stuff(msg)\r\n```\r\n\r\nFrom what I observe is that the queue just gets stuck waiting for an element. But when an element is added to the queue, the `get()` doesn't \"see\" it, and keeps waiting: `2017-09-07 15:13:50,959 aio_pika.queue  DEBUG    Awaiting message from queue: <Queue(queue_in): auto_delete=False, durable=None, exclusive=False, arguments=None>`\r\n\r\nHowever after adding the timeout:\r\n\r\n```\r\nasync def consumer(queue_in):\r\n    while True:\r\n        try:\r\n            msg = await queue_in.get(timeout=3.0)\r\n            await do_stuff(msg)\r\n        except TimeoutError:\r\n            await asyncio.sleep(1.5)\r\n```\r\n\r\nThe `get()` times out (even when an element is added to the queue within the timeout), and in the next iteration it reads all the elements from the queue added in the meantime.\r\n\r\nAm I doing something wrong ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/55", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/55/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/55/events", "html_url": "https://github.com/mosquito/aio-pika/issues/55", "id": 255021651, "node_id": "MDU6SXNzdWUyNTUwMjE2NTE=", "number": 55, "title": "aio-pika RPC client example documentation incorrect", "user": {"login": "AndreasPresthammer", "id": 328539, "node_id": "MDQ6VXNlcjMyODUzOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/328539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreasPresthammer", "html_url": "https://github.com/AndreasPresthammer", "followers_url": "https://api.github.com/users/AndreasPresthammer/followers", "following_url": "https://api.github.com/users/AndreasPresthammer/following{/other_user}", "gists_url": "https://api.github.com/users/AndreasPresthammer/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreasPresthammer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreasPresthammer/subscriptions", "organizations_url": "https://api.github.com/users/AndreasPresthammer/orgs", "repos_url": "https://api.github.com/users/AndreasPresthammer/repos", "events_url": "https://api.github.com/users/AndreasPresthammer/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreasPresthammer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-04T12:03:12Z", "updated_at": "2017-09-04T12:26:39Z", "closed_at": "2017-09-04T12:26:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looks like the embedded version of rpc_client.py in this page: https://aio-pika.readthedocs.io/en/latest/rabbitmq-tutorial/6-rpc.html#putting-it-all-together is actually the rpc_server.py", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/54", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/54/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/54/events", "html_url": "https://github.com/mosquito/aio-pika/issues/54", "id": 254979863, "node_id": "MDU6SXNzdWUyNTQ5Nzk4NjM=", "number": 54, "title": "How to handle ConnectionClose in consume scope?", "user": {"login": "eldardamari", "id": 2379595, "node_id": "MDQ6VXNlcjIzNzk1OTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2379595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eldardamari", "html_url": "https://github.com/eldardamari", "followers_url": "https://api.github.com/users/eldardamari/followers", "following_url": "https://api.github.com/users/eldardamari/following{/other_user}", "gists_url": "https://api.github.com/users/eldardamari/gists{/gist_id}", "starred_url": "https://api.github.com/users/eldardamari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eldardamari/subscriptions", "organizations_url": "https://api.github.com/users/eldardamari/orgs", "repos_url": "https://api.github.com/users/eldardamari/repos", "events_url": "https://api.github.com/users/eldardamari/events{/privacy}", "received_events_url": "https://api.github.com/users/eldardamari/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-09-04T09:09:43Z", "updated_at": "2018-02-05T21:07:24Z", "closed_at": "2017-09-07T15:18:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @mosquito,\r\n\r\nI have a consumer for a specific queue (let's call the queue: `queue_a`).\r\nIn `queue_a.consume(consume_callback)`,I'm ack/reject messages manually.\r\n```python\r\nasync def consume_callback(message: IncomingMessage):\r\n   try:\r\n        # do stuff\r\n        # message.ack\r\n   except:\r\n        message.reject()\r\n```\r\nwhile calling `message.reject()` I get sometime ```pika.exceptions.ConnectionClosed``` exception which I find difficult  to refresh!\r\n\r\nAny suggestion how to refresh the connection from within `consume_callback`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/46", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/46/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/46/events", "html_url": "https://github.com/mosquito/aio-pika/issues/46", "id": 243471837, "node_id": "MDU6SXNzdWUyNDM0NzE4Mzc=", "number": 46, "title": "message.publish hangs forever sometimes", "user": {"login": "gilbsgilbs", "id": 3407667, "node_id": "MDQ6VXNlcjM0MDc2Njc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3407667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilbsgilbs", "html_url": "https://github.com/gilbsgilbs", "followers_url": "https://api.github.com/users/gilbsgilbs/followers", "following_url": "https://api.github.com/users/gilbsgilbs/following{/other_user}", "gists_url": "https://api.github.com/users/gilbsgilbs/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilbsgilbs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilbsgilbs/subscriptions", "organizations_url": "https://api.github.com/users/gilbsgilbs/orgs", "repos_url": "https://api.github.com/users/gilbsgilbs/repos", "events_url": "https://api.github.com/users/gilbsgilbs/events{/privacy}", "received_events_url": "https://api.github.com/users/gilbsgilbs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-07-17T17:40:10Z", "updated_at": "2017-07-21T12:20:47Z", "closed_at": "2017-07-21T12:20:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi!\r\n\r\nIt happens that `message.publish` hangs forever although the message was successfully published. See [here](https://github.com/mosquito/aio-pika/issues/46#issuecomment-316130980).\r\n\r\n~~It happens that I `reject` messages at the end of a `basic_consume` callback. Though, when I call  `reject()`, it happens that messages are not actually rejected, and just remain in unacked state until I close the connection.~~\r\n\r\n~~As soon as I add logging around `reject()`, it starts working again. Do you see any reason why this is happening and how to workaround this ?~~\r\n\r\n~~I've been digging into `pika` and in `BaseConnection`, there's the `_handle_write` function that is supposed to write to the socket. As you explained in #7 this might be non-blocking (although I don't see why, because it seems to write to the socket explicitly and expects timeout ; there must be a gotcha). Any chance that this is not flushed before the end of the task under some circumstances?~~\r\n\r\nThanks!\r\nGilb's", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/40", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/40/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/40/events", "html_url": "https://github.com/mosquito/aio-pika/issues/40", "id": 238771088, "node_id": "MDU6SXNzdWUyMzg3NzEwODg=", "number": 40, "title": "Error log for normal shutdown", "user": {"login": "gilbsgilbs", "id": 3407667, "node_id": "MDQ6VXNlcjM0MDc2Njc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3407667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilbsgilbs", "html_url": "https://github.com/gilbsgilbs", "followers_url": "https://api.github.com/users/gilbsgilbs/followers", "following_url": "https://api.github.com/users/gilbsgilbs/following{/other_user}", "gists_url": "https://api.github.com/users/gilbsgilbs/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilbsgilbs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilbsgilbs/subscriptions", "organizations_url": "https://api.github.com/users/gilbsgilbs/orgs", "repos_url": "https://api.github.com/users/gilbsgilbs/repos", "events_url": "https://api.github.com/users/gilbsgilbs/events{/privacy}", "received_events_url": "https://api.github.com/users/gilbsgilbs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-27T08:17:15Z", "updated_at": "2017-07-09T16:08:43Z", "closed_at": "2017-07-09T16:08:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nWhen connection is closed normally, aio_pika outputs an error log invariably : `aio_pika.channel - ERROR - Channel <pika.channel.Channel object at 0x7fdc76040c50> closed: 0`. See https://github.com/mosquito/aio-pika/blob/65de58dbbe75fee0a95ce947ef6e73ab00c3dec5/aio_pika/channel.py#L66 .\r\n\r\nThis should happen only when the connection is closed abnormally.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/39", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/39/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/39/events", "html_url": "https://github.com/mosquito/aio-pika/issues/39", "id": 238094390, "node_id": "MDU6SXNzdWUyMzgwOTQzOTA=", "number": 39, "title": "basic_nack not implemented", "user": {"login": "gilbsgilbs", "id": 3407667, "node_id": "MDQ6VXNlcjM0MDc2Njc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3407667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilbsgilbs", "html_url": "https://github.com/gilbsgilbs", "followers_url": "https://api.github.com/users/gilbsgilbs/followers", "following_url": "https://api.github.com/users/gilbsgilbs/following{/other_user}", "gists_url": "https://api.github.com/users/gilbsgilbs/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilbsgilbs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilbsgilbs/subscriptions", "organizations_url": "https://api.github.com/users/gilbsgilbs/orgs", "repos_url": "https://api.github.com/users/gilbsgilbs/repos", "events_url": "https://api.github.com/users/gilbsgilbs/events{/privacy}", "received_events_url": "https://api.github.com/users/gilbsgilbs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-23T09:48:31Z", "updated_at": "2017-09-09T20:39:19Z", "closed_at": "2017-09-09T20:39:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nThat's not a big issue since we can still use [`reject`](https://aio-pika.readthedocs.io/en/latest/apidoc.html#aio_pika.IncomingMessage.reject) to perform almost the same operation, but although `basic_nack` is mentioned [here](https://aio-pika.readthedocs.io/en/latest/apidoc.html#aio_pika.IncomingMessage) in aio-pika's documentation, I don't see any way to perform a nack using `aio-pika`. Therefore, it's not possible to \"reject\" multiple messages at once. Moreover, it's semantically a bit different.\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/37", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/37/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/37/events", "html_url": "https://github.com/mosquito/aio-pika/issues/37", "id": 237520508, "node_id": "MDU6SXNzdWUyMzc1MjA1MDg=", "number": 37, "title": "Expose message/consumer counts from declare_queue", "user": {"login": "connec", "id": 160652, "node_id": "MDQ6VXNlcjE2MDY1Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/160652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/connec", "html_url": "https://github.com/connec", "followers_url": "https://api.github.com/users/connec/followers", "following_url": "https://api.github.com/users/connec/following{/other_user}", "gists_url": "https://api.github.com/users/connec/gists{/gist_id}", "starred_url": "https://api.github.com/users/connec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/connec/subscriptions", "organizations_url": "https://api.github.com/users/connec/orgs", "repos_url": "https://api.github.com/users/connec/repos", "events_url": "https://api.github.com/users/connec/events{/privacy}", "received_events_url": "https://api.github.com/users/connec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-21T12:42:30Z", "updated_at": "2017-07-09T17:13:22Z", "closed_at": "2017-07-09T17:13:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Due to the `Queue` abstractions it's currently impossible to safely get the [actual result](https://github.com/pika/pika/blob/0.10.0/pika/spec.py#L1014) of the `queue.declare` operation, along with the `message_count` and `consumer_count`.\r\n\r\nA trivial solution would be to add `message_count` and `consumer_count` to `Queue`, and then set it [here](https://github.com/mosquito/aio-pika/blob/master/aio_pika/queue.py#L66) along with `name`. Would this be an acceptable approach for a PR?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/35", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/35/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/35/events", "html_url": "https://github.com/mosquito/aio-pika/issues/35", "id": 237279576, "node_id": "MDU6SXNzdWUyMzcyNzk1NzY=", "number": 35, "title": "`basic_cancel` is not implemented", "user": {"login": "gilbsgilbs", "id": 3407667, "node_id": "MDQ6VXNlcjM0MDc2Njc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3407667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilbsgilbs", "html_url": "https://github.com/gilbsgilbs", "followers_url": "https://api.github.com/users/gilbsgilbs/followers", "following_url": "https://api.github.com/users/gilbsgilbs/following{/other_user}", "gists_url": "https://api.github.com/users/gilbsgilbs/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilbsgilbs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilbsgilbs/subscriptions", "organizations_url": "https://api.github.com/users/gilbsgilbs/orgs", "repos_url": "https://api.github.com/users/gilbsgilbs/repos", "events_url": "https://api.github.com/users/gilbsgilbs/events{/privacy}", "received_events_url": "https://api.github.com/users/gilbsgilbs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-20T16:59:29Z", "updated_at": "2017-06-20T18:44:10Z", "closed_at": "2017-06-20T18:43:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi there,\r\n\r\nAs far as I can see in the code and in the documentation, [`basic_cancel`](https://github.com/pika/pika/blob/51fd186f1fabe0da8582609d266df1e28e57e3f4/pika/channel.py#L202) is not implemented in `aio-pika`. Moreover, it's currently not possible to hack around this, since aio-pika's `consume` method doesn't return the consumer tag.\r\n\r\nMay I submit a PR for this?\r\n\r\nThanks,\r\nGilb's", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/33", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/33/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/33/events", "html_url": "https://github.com/mosquito/aio-pika/issues/33", "id": 236923463, "node_id": "MDU6SXNzdWUyMzY5MjM0NjM=", "number": 33, "title": "aio_pika.connection.Connection.closing future exception not retrieved", "user": {"login": "akhoronko", "id": 7221554, "node_id": "MDQ6VXNlcjcyMjE1NTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/7221554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akhoronko", "html_url": "https://github.com/akhoronko", "followers_url": "https://api.github.com/users/akhoronko/followers", "following_url": "https://api.github.com/users/akhoronko/following{/other_user}", "gists_url": "https://api.github.com/users/akhoronko/gists{/gist_id}", "starred_url": "https://api.github.com/users/akhoronko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akhoronko/subscriptions", "organizations_url": "https://api.github.com/users/akhoronko/orgs", "repos_url": "https://api.github.com/users/akhoronko/repos", "events_url": "https://api.github.com/users/akhoronko/events{/privacy}", "received_events_url": "https://api.github.com/users/akhoronko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-19T15:08:36Z", "updated_at": "2017-06-19T20:58:35Z", "closed_at": "2017-06-19T20:58:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Calling of Connection.closing performs \"__closing\" future copying and in the case of connection error exception of this future copy won't be retrieved - \"Future exception was never retrieved\" in output.\r\nSuch copying happens on every Connection.is_closed and Connection.channel calls.\r\n\r\n[demo script](https://gist.github.com/akhoronko/a653e12e285c9cc8a9faa96d92556f98)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/32", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/32/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/32/events", "html_url": "https://github.com/mosquito/aio-pika/issues/32", "id": 236869497, "node_id": "MDU6SXNzdWUyMzY4Njk0OTc=", "number": 32, "title": "ACK is not awaitable", "user": {"login": "gilbsgilbs", "id": 3407667, "node_id": "MDQ6VXNlcjM0MDc2Njc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3407667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilbsgilbs", "html_url": "https://github.com/gilbsgilbs", "followers_url": "https://api.github.com/users/gilbsgilbs/followers", "following_url": "https://api.github.com/users/gilbsgilbs/following{/other_user}", "gists_url": "https://api.github.com/users/gilbsgilbs/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilbsgilbs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilbsgilbs/subscriptions", "organizations_url": "https://api.github.com/users/gilbsgilbs/orgs", "repos_url": "https://api.github.com/users/gilbsgilbs/repos", "events_url": "https://api.github.com/users/gilbsgilbs/events{/privacy}", "received_events_url": "https://api.github.com/users/gilbsgilbs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-19T12:06:34Z", "updated_at": "2017-06-19T12:46:29Z", "closed_at": "2017-06-19T12:08:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi there,\r\n\r\nLooking at [this section of the documentation](https://aio-pika.readthedocs.io/en/latest/rabbitmq-tutorial/2-work-queues.html#message-acknowledgment), `message.ack()` is not awaited, which means that the ack will be blocking. Do you hope that it won't block long enough to be significant? What if RabbitMQ timeouts? Is that due to some implementation difficulty? (AFAICS, neither can Twisted consumer await the ack).\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/30", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/30/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/30/events", "html_url": "https://github.com/mosquito/aio-pika/issues/30", "id": 233255159, "node_id": "MDU6SXNzdWUyMzMyNTUxNTk=", "number": 30, "title": "Submit payments to maintainers of the Python ecosystem", "user": {"login": "pydanny", "id": 62857, "node_id": "MDQ6VXNlcjYyODU3", "avatar_url": "https://avatars1.githubusercontent.com/u/62857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pydanny", "html_url": "https://github.com/pydanny", "followers_url": "https://api.github.com/users/pydanny/followers", "following_url": "https://api.github.com/users/pydanny/following{/other_user}", "gists_url": "https://api.github.com/users/pydanny/gists{/gist_id}", "starred_url": "https://api.github.com/users/pydanny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pydanny/subscriptions", "organizations_url": "https://api.github.com/users/pydanny/orgs", "repos_url": "https://api.github.com/users/pydanny/repos", "events_url": "https://api.github.com/users/pydanny/events{/privacy}", "received_events_url": "https://api.github.com/users/pydanny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-02T17:54:44Z", "updated_at": "2017-06-02T18:16:54Z", "closed_at": "2017-06-02T18:04:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since you insist on using bleeding edge components in production, and feel you have the right to harass maintainers when those bleeding edge components have problems, you should be paying the maintainers for their unpaid volunteer time. Contact maintainers to request their Patreon accounts (or other similar services) and send them at least 4 hours of their hourly rate per month.\r\n\r\nReference: https://github.com/pypa/setuptools/pull/1043", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mosquito/aio-pika/issues/25", "repository_url": "https://api.github.com/repos/mosquito/aio-pika", "labels_url": "https://api.github.com/repos/mosquito/aio-pika/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/mosquito/aio-pika/issues/25/comments", "events_url": "https://api.github.com/repos/mosquito/aio-pika/issues/25/events", "html_url": "https://github.com/mosquito/aio-pika/issues/25", "id": 231113862, "node_id": "MDU6SXNzdWUyMzExMTM4NjI=", "number": 25, "title": "Publishing while consuming", "user": {"login": "decaz", "id": 31096, "node_id": "MDQ6VXNlcjMxMDk2", "avatar_url": "https://avatars1.githubusercontent.com/u/31096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decaz", "html_url": "https://github.com/decaz", "followers_url": "https://api.github.com/users/decaz/followers", "following_url": "https://api.github.com/users/decaz/following{/other_user}", "gists_url": "https://api.github.com/users/decaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/decaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decaz/subscriptions", "organizations_url": "https://api.github.com/users/decaz/orgs", "repos_url": "https://api.github.com/users/decaz/repos", "events_url": "https://api.github.com/users/decaz/events{/privacy}", "received_events_url": "https://api.github.com/users/decaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-05-24T17:24:18Z", "updated_at": "2017-05-25T07:39:52Z", "closed_at": "2017-05-24T20:12:45Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "The worker should get new task from the _task_queue_, publish new message into the _task_queue2_ and acknowledge the received task from the _task_queue_.\r\n\r\nLet's assume that the worker is not running. Now run _new_task.py_: 3 tasks were sent into the _task_queue_. Now run _worker.py_: 3 tasks were received from the _task_queue_, 3 tasks were sent into the _task_queue2_, BUT 1 task left **unacknowledged** in the _task_queue_. Can you help me to get to the reason, why? Maybe I am doing something wrong?\r\n\r\nP.S.: Number of tasks in the new_task.py (default is 3) can be changed - **the higher this number is, the more unacknowledged tasks are left in the _task_queue_ after running the worker**.\r\n\r\n**new_task.py**\r\n```python\r\nimport asyncio\r\nfrom aio_pika import connect, Message, DeliveryMode\r\n\r\nasync def main():\r\n    connection = await connect(\"amqp://guest:guest@rabbit/\")\r\n    channel = await connection.channel()\r\n    message_body = b\"Hello World!\"\r\n    message = Message(message_body, delivery_mode=DeliveryMode.PERSISTENT)\r\n    for _ in range(3):\r\n        await channel.default_exchange.publish(message, routing_key='task_queue')\r\n        print(\"Sent %r\" % message)\r\n    await connection.close()\r\n\r\nloop = asyncio.get_event_loop()\r\nloop.run_until_complete(main())\r\n```\r\n\r\n**worker.py**\r\n```python\r\nimport asyncio\r\nfrom aio_pika import connect, IncomingMessage, Message, DeliveryMode\r\n\r\nchannel = None\r\n\r\nasync def on_message(message):\r\n    with message.process():\r\n        print(\"Received message %r\" % message.body)\r\n        new_message = Message(b'New message', delivery_mode=DeliveryMode.PERSISTENT)\r\n        await channel.default_exchange.publish(new_message, routing_key='task_queue2')\r\n\r\nasync def main():\r\n    global channel\r\n    connection = await connect(\"amqp://guest:guest@rabbit/\")\r\n    channel = await connection.channel()\r\n    queue = await channel.declare_queue('task_queue', durable=True)\r\n    await channel.declare_queue('task_queue2', durable=True)\r\n    queue.consume(on_message)\r\n\r\nloop = asyncio.get_event_loop()\r\nloop.create_task(main())\r\nloop.run_forever()\r\n```", "performed_via_github_app": null, "score": 1.0}]}