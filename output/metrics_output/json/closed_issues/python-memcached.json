{"total_count": 49, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/156", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/156/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/156/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/156", "id": 388985435, "node_id": "MDU6SXNzdWUzODg5ODU0MzU=", "number": 156, "title": "Bug: Our memcached client intermittently fails on the production server", "user": {"login": "emadelwany", "id": 1061017, "node_id": "MDQ6VXNlcjEwNjEwMTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1061017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emadelwany", "html_url": "https://github.com/emadelwany", "followers_url": "https://api.github.com/users/emadelwany/followers", "following_url": "https://api.github.com/users/emadelwany/following{/other_user}", "gists_url": "https://api.github.com/users/emadelwany/gists{/gist_id}", "starred_url": "https://api.github.com/users/emadelwany/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emadelwany/subscriptions", "organizations_url": "https://api.github.com/users/emadelwany/orgs", "repos_url": "https://api.github.com/users/emadelwany/repos", "events_url": "https://api.github.com/users/emadelwany/events{/privacy}", "received_events_url": "https://api.github.com/users/emadelwany/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-09T04:15:30Z", "updated_at": "2018-12-09T04:17:18Z", "closed_at": "2018-12-09T04:17:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/153", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/153/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/153/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/153", "id": 383852282, "node_id": "MDU6SXNzdWUzODM4NTIyODI=", "number": 153, "title": "memcache.Client.MemcachedKeyCharacterError: Control/space characters not allowed (key=b'')", "user": {"login": "superliuliuliu", "id": 31435840, "node_id": "MDQ6VXNlcjMxNDM1ODQw", "avatar_url": "https://avatars2.githubusercontent.com/u/31435840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/superliuliuliu", "html_url": "https://github.com/superliuliuliu", "followers_url": "https://api.github.com/users/superliuliuliu/followers", "following_url": "https://api.github.com/users/superliuliuliu/following{/other_user}", "gists_url": "https://api.github.com/users/superliuliuliu/gists{/gist_id}", "starred_url": "https://api.github.com/users/superliuliuliu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/superliuliuliu/subscriptions", "organizations_url": "https://api.github.com/users/superliuliuliu/orgs", "repos_url": "https://api.github.com/users/superliuliuliu/repos", "events_url": "https://api.github.com/users/superliuliuliu/events{/privacy}", "received_events_url": "https://api.github.com/users/superliuliuliu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-23T14:56:21Z", "updated_at": "2018-11-25T09:29:36Z", "closed_at": "2018-11-25T09:29:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use the memcache to storage the key-value pair ,but when I get  the key it wrong!  Program error message is\uff1a\r\n\r\n  File \"C:\\Users\\superliu\\Desktop\\pythontest\\app\\cms\\forms.py\", line 40, in validate_captcha\r\n    captcha_cache = mycache.get(newemail)\r\n  File \"C:\\Users\\superliu\\Desktop\\pythontest\\utils\\mycache.py\", line 22, in get\r\n    return cache.get(key)\r\n  File \"c:\\users\\superliu\\desktop\\pythontest\\forum\\lib\\site-packages\\memcache.py\", line 1121, in get\r\n    return self._get('get', key)\r\n  File \"c:\\users\\superliu\\desktop\\pythontest\\forum\\lib\\site-packages\\memcache.py\", line 1065, in _get\r\n    self.check_key(key)\r\n  File \"c:\\users\\superliu\\desktop\\pythontest\\forum\\lib\\site-packages\\memcache.py\", line 1320, in check_key\r\n    \"Control/space characters not allowed (key=%r)\" % key)\r\nmemcache.Client.MemcachedKeyCharacterError: Control/space characters not allowed (key=b'')\r\n\r\n\r\nthe code:\r\n```python\r\ndef validate_captcha(self, field):\r\n        captcha = field.data\r\n        newemail = self.newemail.data\r\n        captcha_cache = mycache.get(newemail)\r\n        if not captcha_cache or captcha_cache.lower() != captcha.lower():\r\n            raise ValidationError(\"xxxx\")\r\n```\r\n\r\nthe file mycache.py:\r\n```python\r\nimport memcache\r\n\r\ncache = memcache.Client(['127.0.0.1:15000'], debug=True)\r\n\r\n\r\ndef set(key, value, timeout = 60):\r\n    return cache.set(key, value, timeout)\r\n\r\ndef get(key):\r\n    return cache.get(key)\r\n\r\ndef delete(key):\r\n    return cache.delete(key)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/138", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/138/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/138/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/138", "id": 276683325, "node_id": "MDU6SXNzdWUyNzY2ODMzMjU=", "number": 138, "title": "Support for KEY_PREFIX", "user": {"login": "imaia", "id": 14771411, "node_id": "MDQ6VXNlcjE0NzcxNDEx", "avatar_url": "https://avatars1.githubusercontent.com/u/14771411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imaia", "html_url": "https://github.com/imaia", "followers_url": "https://api.github.com/users/imaia/followers", "following_url": "https://api.github.com/users/imaia/following{/other_user}", "gists_url": "https://api.github.com/users/imaia/gists{/gist_id}", "starred_url": "https://api.github.com/users/imaia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imaia/subscriptions", "organizations_url": "https://api.github.com/users/imaia/orgs", "repos_url": "https://api.github.com/users/imaia/repos", "events_url": "https://api.github.com/users/imaia/events{/privacy}", "received_events_url": "https://api.github.com/users/imaia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-24T18:51:49Z", "updated_at": "2017-11-27T17:06:52Z", "closed_at": "2017-11-27T17:06:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Got myself one of these today, using memcached with django1.11:\r\n`TypeError: __init__() got an unexpected keyword argument 'KEY_PREFIX'`\r\n\r\nAre there plans to support key_prefix?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/131", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/131/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/131/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/131", "id": 269317941, "node_id": "MDU6SXNzdWUyNjkzMTc5NDE=", "number": 131, "title": "Fails silently if unable to connect to socket", "user": {"login": "racitup", "id": 18157195, "node_id": "MDQ6VXNlcjE4MTU3MTk1", "avatar_url": "https://avatars2.githubusercontent.com/u/18157195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/racitup", "html_url": "https://github.com/racitup", "followers_url": "https://api.github.com/users/racitup/followers", "following_url": "https://api.github.com/users/racitup/following{/other_user}", "gists_url": "https://api.github.com/users/racitup/gists{/gist_id}", "starred_url": "https://api.github.com/users/racitup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/racitup/subscriptions", "organizations_url": "https://api.github.com/users/racitup/orgs", "repos_url": "https://api.github.com/users/racitup/repos", "events_url": "https://api.github.com/users/racitup/events{/privacy}", "received_events_url": "https://api.github.com/users/racitup/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-28T13:38:28Z", "updated_at": "2018-01-26T09:31:07Z", "closed_at": "2018-01-26T09:31:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is no indication that a socket is unreachable.\r\n\r\nIn my case the socket was owned by 'memcache:memcache' with permission 'srwx------' (the default for memcached) yet my client process was run by another user. There appears to be no indication at all that the service was unreachable. I couldn't for the life of my figure out why things weren't being cached from django.. I'm fairly new to this sort of thing.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/129", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/129/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/129/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/129", "id": 255398619, "node_id": "MDU6SXNzdWUyNTUzOTg2MTk=", "number": 129, "title": "Python 3.3 Flake8 Failure", "user": {"login": "matteius", "id": 479892, "node_id": "MDQ6VXNlcjQ3OTg5Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/479892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matteius", "html_url": "https://github.com/matteius", "followers_url": "https://api.github.com/users/matteius/followers", "following_url": "https://api.github.com/users/matteius/following{/other_user}", "gists_url": "https://api.github.com/users/matteius/gists{/gist_id}", "starred_url": "https://api.github.com/users/matteius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matteius/subscriptions", "organizations_url": "https://api.github.com/users/matteius/orgs", "repos_url": "https://api.github.com/users/matteius/repos", "events_url": "https://api.github.com/users/matteius/events{/privacy}", "received_events_url": "https://api.github.com/users/matteius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-05T20:27:48Z", "updated_at": "2017-10-30T20:33:19Z", "closed_at": "2017-10-30T20:33:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems all recent Pull Requests are failing on Python 3.3 due to a Flake8 error.   Example:  https://travis-ci.org/linsomniac/python-memcached/builds/272217875?utm_source=github_status&utm_medium=notification", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/122", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/122/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/122/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/122", "id": 235868585, "node_id": "MDU6SXNzdWUyMzU4Njg1ODU=", "number": 122, "title": "12 Test failures while running tests ", "user": {"login": "snehlatamohite", "id": 29422309, "node_id": "MDQ6VXNlcjI5NDIyMzA5", "avatar_url": "https://avatars3.githubusercontent.com/u/29422309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snehlatamohite", "html_url": "https://github.com/snehlatamohite", "followers_url": "https://api.github.com/users/snehlatamohite/followers", "following_url": "https://api.github.com/users/snehlatamohite/following{/other_user}", "gists_url": "https://api.github.com/users/snehlatamohite/gists{/gist_id}", "starred_url": "https://api.github.com/users/snehlatamohite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snehlatamohite/subscriptions", "organizations_url": "https://api.github.com/users/snehlatamohite/orgs", "repos_url": "https://api.github.com/users/snehlatamohite/repos", "events_url": "https://api.github.com/users/snehlatamohite/events{/privacy}", "received_events_url": "https://api.github.com/users/snehlatamohite/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-14T12:52:04Z", "updated_at": "2017-10-30T20:33:25Z", "closed_at": "2017-10-30T20:33:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am trying to build package on ubuntu 16.04 for ppc64le architecture. I am getting 12 test failures having some assertion error. \r\n\r\nI have attached the logs. \r\n\r\nPlease help to resolve the issue. \r\n\r\nThanks,\r\nSnehlata Mohite.\r\n[test_failures.txt](https://github.com/linsomniac/python-memcached/files/1074607/test_failures.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/114", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/114/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/114/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/114", "id": 196224363, "node_id": "MDU6SXNzdWUxOTYyMjQzNjM=", "number": 114, "title": "Use GitHub's squash merging", "user": {"login": "timgraham", "id": 411869, "node_id": "MDQ6VXNlcjQxMTg2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/411869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgraham", "html_url": "https://github.com/timgraham", "followers_url": "https://api.github.com/users/timgraham/followers", "following_url": "https://api.github.com/users/timgraham/following{/other_user}", "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions", "organizations_url": "https://api.github.com/users/timgraham/orgs", "repos_url": "https://api.github.com/users/timgraham/repos", "events_url": "https://api.github.com/users/timgraham/events{/privacy}", "received_events_url": "https://api.github.com/users/timgraham/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-17T14:22:16Z", "updated_at": "2017-11-05T00:10:30Z", "closed_at": "2017-11-05T00:10:30Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "To make history easier to navigate using `git log`, I suggest to enable and use [squash merging](https://github.com/blog/2141-squash-your-commits) to avoid merge commits in history.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/109", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/109/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/109/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/109", "id": 195528464, "node_id": "MDU6SXNzdWUxOTU1Mjg0NjQ=", "number": 109, "title": "Drop support for unsupported Python versions (2.6, 3.2)", "user": {"login": "timgraham", "id": 411869, "node_id": "MDQ6VXNlcjQxMTg2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/411869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgraham", "html_url": "https://github.com/timgraham", "followers_url": "https://api.github.com/users/timgraham/followers", "following_url": "https://api.github.com/users/timgraham/following{/other_user}", "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions", "organizations_url": "https://api.github.com/users/timgraham/orgs", "repos_url": "https://api.github.com/users/timgraham/repos", "events_url": "https://api.github.com/users/timgraham/events{/privacy}", "received_events_url": "https://api.github.com/users/timgraham/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-14T13:18:35Z", "updated_at": "2016-12-17T14:41:48Z", "closed_at": "2016-12-17T14:41:48Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Any objections?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/104", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/104/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/104/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/104", "id": 186991321, "node_id": "MDU6SXNzdWUxODY5OTEzMjE=", "number": 104, "title": "python-memcached in 1.58 encoded question", "user": {"login": "sherwinl1u", "id": 23231191, "node_id": "MDQ6VXNlcjIzMjMxMTkx", "avatar_url": "https://avatars0.githubusercontent.com/u/23231191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherwinl1u", "html_url": "https://github.com/sherwinl1u", "followers_url": "https://api.github.com/users/sherwinl1u/followers", "following_url": "https://api.github.com/users/sherwinl1u/following{/other_user}", "gists_url": "https://api.github.com/users/sherwinl1u/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherwinl1u/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherwinl1u/subscriptions", "organizations_url": "https://api.github.com/users/sherwinl1u/orgs", "repos_url": "https://api.github.com/users/sherwinl1u/repos", "events_url": "https://api.github.com/users/sherwinl1u/events{/privacy}", "received_events_url": "https://api.github.com/users/sherwinl1u/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-11-03T07:16:04Z", "updated_at": "2017-11-14T20:28:48Z", "closed_at": "2017-11-14T20:28:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "By reading the code in memcache.py,  I found a encoded question.\r\nIn set() founction, It encode to utf8, if  the value is six.text_type\r\n def _val_to_store_info(self, val, min_compress_len):\r\n        flags = 0\r\n        if isinstance(val, six.binary_type):\r\n            pass\r\n        elif isinstance(val, six.text_type):\r\n            val = val.encode('utf-8')\r\n        ......\r\n\r\n\r\nbut , In get() function, It decoder to unicoder ,only if the six.PY3 is true \r\ndef _recv_value(self, server, flags, rlen):\r\n        rlen += 2  # include \\r\\n\r\n        buf = server.recv(rlen)\r\n        if len(buf) != rlen:\r\n            raise _Error(\"received %d bytes when expecting %d\"\r\n                         % (len(buf), rlen))\r\n\r\n        if len(buf) == rlen:\r\n            buf = buf[:-2]  # strip \\r\\n\r\n\r\n        if flags & Client._FLAG_COMPRESSED:\r\n            buf = self.decompressor(buf)\r\n            flags &= ~Client._FLAG_COMPRESSED\r\n\r\n        if flags == 0:\r\n            # Bare string\r\n            if six.PY3:\r\n                val = buf.decode('utf8')\r\n            else:\r\n                val = buf\r\n        elif flags & Client._FLAG_INTEGER:\r\n            val = int(buf)\r\n       ......\r\n\r\n\r\nI think we should fix it   like this in set() function\r\n\r\n def _val_to_store_info(self, val, min_compress_len):\r\n        flags = 0\r\n        if isinstance(val, six.binary_type):\r\n            pass\r\n        elif isinstance(val, six.text_type) and six.PY3:\r\n            val = val.encode('utf-8')\r\n        ......\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/103", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/103/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/103/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/103", "id": 184154018, "node_id": "MDU6SXNzdWUxODQxNTQwMTg=", "number": 103, "title": "can't install python-memcached1.58 in Python 3.6.0b2", "user": {"login": "sc-syf", "id": 7570566, "node_id": "MDQ6VXNlcjc1NzA1NjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/7570566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sc-syf", "html_url": "https://github.com/sc-syf", "followers_url": "https://api.github.com/users/sc-syf/followers", "following_url": "https://api.github.com/users/sc-syf/following{/other_user}", "gists_url": "https://api.github.com/users/sc-syf/gists{/gist_id}", "starred_url": "https://api.github.com/users/sc-syf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sc-syf/subscriptions", "organizations_url": "https://api.github.com/users/sc-syf/orgs", "repos_url": "https://api.github.com/users/sc-syf/repos", "events_url": "https://api.github.com/users/sc-syf/events{/privacy}", "received_events_url": "https://api.github.com/users/sc-syf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-10-20T07:27:41Z", "updated_at": "2017-01-02T06:37:16Z", "closed_at": "2017-01-02T06:37:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "here is the traceback:\n\nTraceback (most recent call last):\n  File \"setup.py\", line 8, in <module>\n    version=get_module_constant('memcache', '**version**'),\n  File \"/home/ubuntu/.myvenv/lib/python3.6/site-packages/setuptools/depends.py\", line 164, in get_module_constant\n    return extract_constant(code, symbol, default)\n  File \"/home/ubuntu/.myvenv/lib/python3.6/site-packages/setuptools/depends.py\", line 195, in extract_constant\n    const = code.co_consts[arg]\nIndexError: tuple index out of range\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/101", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/101/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/101/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/101", "id": 179691745, "node_id": "MDU6SXNzdWUxNzk2OTE3NDU=", "number": 101, "title": "# note that the key used for incr/decr must be a string.", "user": {"login": "glusa8", "id": 4329589, "node_id": "MDQ6VXNlcjQzMjk1ODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4329589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glusa8", "html_url": "https://github.com/glusa8", "followers_url": "https://api.github.com/users/glusa8/followers", "following_url": "https://api.github.com/users/glusa8/following{/other_user}", "gists_url": "https://api.github.com/users/glusa8/gists{/gist_id}", "starred_url": "https://api.github.com/users/glusa8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glusa8/subscriptions", "organizations_url": "https://api.github.com/users/glusa8/orgs", "repos_url": "https://api.github.com/users/glusa8/repos", "events_url": "https://api.github.com/users/glusa8/events{/privacy}", "received_events_url": "https://api.github.com/users/glusa8/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-28T06:39:21Z", "updated_at": "2016-09-28T06:41:53Z", "closed_at": "2016-09-28T06:41:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the source code, I found the following comment:\n\n``` py\n    mc.set(\"key\", \"1\") # note that the key used for incr/decr must be\n                       # a string.\n    mc.incr(\"key\")\n    mc.decr(\"key\")\n```\n\nHowever, I tested `incr` using both integer and string. **Both** seem to work:\n\n``` py\nIn [14]: cache.add('foo', 1)\nOut[14]: True\n\nIn [15]: cache.incr('foo')\nOut[15]: 2\n\nIn [16]: cache.get('foo')\nOut[16]: 2\n\nIn [17]: cache.add('bar', '1')\nOut[17]: True\n\nIn [18]: cache.incr('bar')\nOut[18]: 2\n\nIn [19]: cache.get('bar')\nOut[19]: '2'\n```\n\nSo is the comment still relevant?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/94", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/94/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/94/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/94", "id": 154487886, "node_id": "MDU6SXNzdWUxNTQ0ODc4ODY=", "number": 94, "title": "Package is unmaintained - recommend using pylibmc instead", "user": {"login": "edmorley", "id": 501702, "node_id": "MDQ6VXNlcjUwMTcwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/501702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edmorley", "html_url": "https://github.com/edmorley", "followers_url": "https://api.github.com/users/edmorley/followers", "following_url": "https://api.github.com/users/edmorley/following{/other_user}", "gists_url": "https://api.github.com/users/edmorley/gists{/gist_id}", "starred_url": "https://api.github.com/users/edmorley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edmorley/subscriptions", "organizations_url": "https://api.github.com/users/edmorley/orgs", "repos_url": "https://api.github.com/users/edmorley/repos", "events_url": "https://api.github.com/users/edmorley/events{/privacy}", "received_events_url": "https://api.github.com/users/edmorley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-12T13:52:59Z", "updated_at": "2016-05-30T15:29:39Z", "closed_at": "2016-05-26T14:49:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In case anyone about to start using python-memcached sees this.\n\nThis package is not actively maintained at the moment. For example with the latest release there is a 400% performance slowdown under Python 2.7 (#71) that would be fixed by the unmerged #86.\n\nAs such for now I'd strongly recommend using pylibmc instead, which in most cases is a drop-in replacement:\nhttps://github.com/lericson/pylibmc\nhttp://sendapatch.se/projects/pylibmc/misc.html#differences-from-python-memcached\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/90", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/90/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/90/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/90", "id": 137497600, "node_id": "MDU6SXNzdWUxMzc0OTc2MDA=", "number": 90, "title": "Is it possible to reformat Changelog according to the best practices proposed by keepachangelog.com?", "user": {"login": "svetlyak40wt", "id": 24827, "node_id": "MDQ6VXNlcjI0ODI3", "avatar_url": "https://avatars2.githubusercontent.com/u/24827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svetlyak40wt", "html_url": "https://github.com/svetlyak40wt", "followers_url": "https://api.github.com/users/svetlyak40wt/followers", "following_url": "https://api.github.com/users/svetlyak40wt/following{/other_user}", "gists_url": "https://api.github.com/users/svetlyak40wt/gists{/gist_id}", "starred_url": "https://api.github.com/users/svetlyak40wt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svetlyak40wt/subscriptions", "organizations_url": "https://api.github.com/users/svetlyak40wt/orgs", "repos_url": "https://api.github.com/users/svetlyak40wt/repos", "events_url": "https://api.github.com/users/svetlyak40wt/events{/privacy}", "received_events_url": "https://api.github.com/users/svetlyak40wt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-03-01T07:35:37Z", "updated_at": "2017-10-30T20:33:51Z", "closed_at": "2017-10-30T20:33:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "It will be easier to track what happened between two versions if information will be grouped by version.\n\nI could reformat the Changelog file and make a pull-request if you wish.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/83", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/83/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/83/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/83", "id": 111584000, "node_id": "MDU6SXNzdWUxMTE1ODQwMDA=", "number": 83, "title": "Python3 exception when Client can't connect", "user": {"login": "ei-grad", "id": 78607, "node_id": "MDQ6VXNlcjc4NjA3", "avatar_url": "https://avatars0.githubusercontent.com/u/78607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ei-grad", "html_url": "https://github.com/ei-grad", "followers_url": "https://api.github.com/users/ei-grad/followers", "following_url": "https://api.github.com/users/ei-grad/following{/other_user}", "gists_url": "https://api.github.com/users/ei-grad/gists{/gist_id}", "starred_url": "https://api.github.com/users/ei-grad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ei-grad/subscriptions", "organizations_url": "https://api.github.com/users/ei-grad/orgs", "repos_url": "https://api.github.com/users/ei-grad/repos", "events_url": "https://api.github.com/users/ei-grad/events{/privacy}", "received_events_url": "https://api.github.com/users/ei-grad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-15T10:01:51Z", "updated_at": "2017-11-01T19:32:16Z", "closed_at": "2017-11-01T19:32:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\nIn [1]: import memcache\n\nIn [2]: mc = memcache.Client(['somenonexistenthost'])\n\nIn [3]: mc.get('qwe')\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-3-bb201bdf51b9> in <module>()\n----> 1 mc.get('qwe')\n\n/home/ei-grad/.local/lib/python3.5/site-packages/memcache.py in get(self, key)\n   1087         @return: The value or None.\n   1088         '''\n-> 1089         return self._get('get', key)\n   1090 \n   1091     def gets(self, key):\n\n/home/ei-grad/.local/lib/python3.5/site-packages/memcache.py in _get(self, cmd, key)\n   1032         if self.do_check_key:\n   1033             self.check_key(key)\n-> 1034         server, key = self._get_server(key)\n   1035         if not server:\n   1036             return None\n\n/home/ei-grad/.local/lib/python3.5/site-packages/memcache.py in _get_server(self, key)\n    411                 # print(\"(using server %s)\" % server,)\n    412                 return server, key\n--> 413             serverhash = serverHashFunction(str(serverhash) + str(i))\n    414         return None, None\n    415 \n\n/home/ei-grad/.local/lib/python3.5/site-packages/memcache.py in cmemcache_hash(key)\n     63 def cmemcache_hash(key):\n     64     return (\n---> 65         (((binascii.crc32(key) & 0xffffffff)\n     66           >> 16) & 0x7fff) or 1)\n     67 serverHashFunction = cmemcache_hash\n\nTypeError: a bytes-like object is required, not 'str'\n\nIn [4]: mc = memcache.Client(['localhost'])\n\nIn [6]: mc.set('qwe', 'it works')\nOut[6]: True\n\nIn [7]: mc.get('qwe')\nOut[7]: 'it works'\n\n```\n\nSee also #70\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/80", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/80/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/80/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/80", "id": 100443100, "node_id": "MDU6SXNzdWUxMDA0NDMxMDA=", "number": 80, "title": "Python 3 crash on storing binary strings", "user": {"login": "timgraham", "id": 411869, "node_id": "MDQ6VXNlcjQxMTg2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/411869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgraham", "html_url": "https://github.com/timgraham", "followers_url": "https://api.github.com/users/timgraham/followers", "following_url": "https://api.github.com/users/timgraham/following{/other_user}", "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions", "organizations_url": "https://api.github.com/users/timgraham/orgs", "repos_url": "https://api.github.com/users/timgraham/repos", "events_url": "https://api.github.com/users/timgraham/events{/privacy}", "received_events_url": "https://api.github.com/users/timgraham/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-08-12T00:50:23Z", "updated_at": "2017-11-14T20:30:15Z", "closed_at": "2017-11-14T20:30:15Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "This test (adapted from Django's test suite) passes on Python 2, but fails on Python 3:\n\n``` diff\ndiff --git a/tests/test_memcache.py b/tests/test_memcache.py\nindex 321dc7b..0415de9 100644\n--- a/tests/test_memcache.py\n+++ b/tests/test_memcache.py\n@@ -137,6 +137,30 @@ class TestMemcache(unittest.TestCase):\n         value = self.mc.get(key)\n         self.assertEqual(value, 5)\n\n+    def test_binary_string(self):\n+        # Binary strings should be cacheable\n+        from zlib import compress, decompress\n+        value = 'value_to_be_compressed'\n+        compressed_value = compress(value.encode())\n+\n+        # Test set\n+        self.mc.set('binary1', compressed_value)\n+        compressed_result = self.mc.get('binary1')\n+        self.assertEqual(compressed_value, compressed_result)\n+        self.assertEqual(value, decompress(compressed_result).decode())\n+\n+        # Test add\n+        self.mc.add('binary1-add', compressed_value)\n+        compressed_result = self.mc.get('binary1-add')\n+        self.assertEqual(compressed_value, compressed_result)\n+        self.assertEqual(value, decompress(compressed_result).decode())\n+\n+        # Test set_many\n+        self.mc.set_multi({'binary1-set_many': compressed_value})\n+        compressed_result = self.mc.get('binary1-set_many')\n+        self.assertEqual(compressed_value, compressed_result)\n+        self.assertEqual(value, decompress(compressed_result).decode())\n+\n     def test_ignore_too_large_value(self):\n         # NOTE: \"MemCached: while expecting[...]\" is normal...\n         key = 'keyhere'\n```\n\n```\n======================================================================\nERROR: test_binary_string (__main__.TestMemcache)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"tests/test_memcache3.py\", line 53, in test_binary_string\n    compressed_result = self.mc.get('binary1')\n  File \"/home/tim/code/python-memcached/memcache.py\", line 1093, in get\n    return self._get('get', key)\n  File \"/home/tim/code/python-memcached/memcache.py\", line 1077, in _get\n    return _unsafe_get()\n  File \"/home/tim/code/python-memcached/memcache.py\", line 1065, in _unsafe_get\n    value = self._recv_value(server, flags, rlen)\n  File \"/home/tim/code/python-memcached/memcache.py\", line 1235, in _recv_value\n    val = buf.decode('utf8')\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x9c in position 1: invalid start byte\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/79", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/79/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/79/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/79", "id": 100440982, "node_id": "MDU6SXNzdWUxMDA0NDA5ODI=", "number": 79, "title": "Regression storing non-ASCII values on Python 2", "user": {"login": "timgraham", "id": 411869, "node_id": "MDQ6VXNlcjQxMTg2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/411869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgraham", "html_url": "https://github.com/timgraham", "followers_url": "https://api.github.com/users/timgraham/followers", "following_url": "https://api.github.com/users/timgraham/following{/other_user}", "gists_url": "https://api.github.com/users/timgraham/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgraham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgraham/subscriptions", "organizations_url": "https://api.github.com/users/timgraham/orgs", "repos_url": "https://api.github.com/users/timgraham/repos", "events_url": "https://api.github.com/users/timgraham/events{/privacy}", "received_events_url": "https://api.github.com/users/timgraham/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-08-12T00:31:05Z", "updated_at": "2017-11-14T20:20:14Z", "closed_at": "2017-11-14T20:20:14Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Bisected to 04f1c78c13bd54050b1d2d3baa9e86d9e79b3629\n\nFailing test case (adapted from Django's test suite):\n\n``` diff\ndiff --git a/tests/test_memcache.py b/tests/test_memcache.py\nindex 321dc7b..03147d6 100644\n--- a/tests/test_memcache.py\n+++ b/tests/test_memcache.py\n@@ -1,3 +1,4 @@\n+# -*- coding: utf-8 -*-\n from __future__ import print_function\n\n import unittest\n@@ -137,6 +138,14 @@ class TestMemcache(unittest.TestCase):\n         value = self.mc.get(key)\n         self.assertEqual(value, 5)\n\n+    def test_unicode_value(self):\n+        key = 'key'\n+        value = six.u('I\u00f1t\u00ebrn\u00e2ti\u00f4n\u00e0liz\u00e6ti\u00f8n2')\n+\n+        self.mc.set(key, value)\n+        cached_value = self.mc.get(key)\n+        self.assertEqual(value, cached_value)\n+\n     def test_ignore_too_large_value(self):\n         # NOTE: \"MemCached: while expecting[...]\" is normal...\n         key = 'keyhere'\n```\n\n```\n======================================================================\nFAIL: test_unicode_value (__main__.TestMemcache)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"tests/test_memcache.py\", line 147, in test_unicode_value\n    self.assertEqual(value, cached_value)\nAssertionError: u'I\\xc3\\xb1t\\xc3\\xabrn\\xc3\\xa2ti\\xc3\\xb4n\\xc3\\xa0liz\\xc3\\xa6ti\\xc3\\xb8n2' != 'I\\xc3\\x83\\xc2\\xb1t\\xc3\\x83\\xc2\\xabrn\\xc3\\x83\\xc2\\xa2ti\\xc3\\x83\\xc2\\xb4n\\xc3\\x83\\xc2\\xa0liz\\xc3\\x83\\xc2\\xa6ti\\xc3\\x83\\xc2\\xb8n2'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/77", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/77/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/77/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/77", "id": 98450890, "node_id": "MDU6SXNzdWU5ODQ1MDg5MA==", "number": 77, "title": "ImportError on six when running tests", "user": {"login": "nicholasserra", "id": 512288, "node_id": "MDQ6VXNlcjUxMjI4OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/512288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicholasserra", "html_url": "https://github.com/nicholasserra", "followers_url": "https://api.github.com/users/nicholasserra/followers", "following_url": "https://api.github.com/users/nicholasserra/following{/other_user}", "gists_url": "https://api.github.com/users/nicholasserra/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicholasserra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicholasserra/subscriptions", "organizations_url": "https://api.github.com/users/nicholasserra/orgs", "repos_url": "https://api.github.com/users/nicholasserra/repos", "events_url": "https://api.github.com/users/nicholasserra/events{/privacy}", "received_events_url": "https://api.github.com/users/nicholasserra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-07-31T18:56:34Z", "updated_at": "2015-08-02T14:49:54Z", "closed_at": "2015-07-31T20:11:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Following the docs on running tests and hitting an ImportError while running. Six is definitely installed, not sure if this is a venv issue, or something that's been brought up before?\n\n```\n(memcached)nick@localhost python-memcached (master) $ tox -e py27\npy27 create: /Users/nick/Code/python-memcached/.tox/py27\npy27 installdeps: -r/Users/nick/Code/python-memcached/requirements.txt, -r/Users/nick/Code/python-memcached/test-requirements.txt\npy27 develop-inst: /Users/nick/Code/python-memcached\npy27 installed: argparse==1.3.0,coverage==3.7.1,flake8==2.2.4,hacking==0.10.2,mccabe==0.2.1,nose==1.3.7,pbr==0.10.8,pep8==1.5.7,pyflakes==0.8.1,-e git+https://github.com/nicholasserra/python-memcached.git@664bd3e23fe500fbde4c70636e2d24c8fd2f35af#egg=python_memcached-master,six==1.9.0,stevedore==1.2.0,virtualenv==12.0.2,virtualenv-clone==0.2.5,virtualenvwrapper==4.3.1,wsgiref==0.1.2\npy27 runtests: PYTHONHASHSEED='3267181802'\npy27 runtests: commands[0] | nosetests\nEE\n======================================================================\nERROR: Failure: ImportError (No module named six)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/nick/Code/python-memcached/.tox/py27/lib/python2.7/site-packages/nose/loader.py\", line 418, in loadTestsFromName\n    addr.filename, addr.module)\n  File \"/Users/nick/Code/python-memcached/.tox/py27/lib/python2.7/site-packages/nose/importer.py\", line 47, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n  File \"/Users/nick/Code/python-memcached/.tox/py27/lib/python2.7/site-packages/nose/importer.py\", line 94, in importFromDir\n    mod = load_module(part_fqname, fh, filename, desc)\n  File \"/Users/nick/Code/python-memcached/tests/test_memcache.py\", line 5, in <module>\n    import six\nImportError: No module named six\n\n======================================================================\nERROR: Failure: ImportError (No module named six)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/nick/Code/python-memcached/.tox/py27/lib/python2.7/site-packages/nose/loader.py\", line 418, in loadTestsFromName\n    addr.filename, addr.module)\n  File \"/Users/nick/Code/python-memcached/.tox/py27/lib/python2.7/site-packages/nose/importer.py\", line 47, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n  File \"/Users/nick/Code/python-memcached/.tox/py27/lib/python2.7/site-packages/nose/importer.py\", line 94, in importFromDir\n    mod = load_module(part_fqname, fh, filename, desc)\n  File \"/Users/nick/Code/python-memcached/tests/test_setmulti.py\", line 17, in <module>\n    import memcache\n  File \"/Users/nick/Code/python-memcached/memcache.py\", line 60, in <module>\n    import six\nImportError: No module named six\n\n----------------------------------------------------------------------\nRan 2 tests in 0.004s\n\nFAILED (errors=2)\nERROR: InvocationError: '/Users/nick/Code/python-memcached/.tox/py27/bin/nosetests'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/76", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/76/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/76/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/76", "id": 98425080, "node_id": "MDU6SXNzdWU5ODQyNTA4MA==", "number": 76, "title": "String 'True' treated as Int ", "user": {"login": "MartinBrugnara", "id": 2514272, "node_id": "MDQ6VXNlcjI1MTQyNzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2514272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MartinBrugnara", "html_url": "https://github.com/MartinBrugnara", "followers_url": "https://api.github.com/users/MartinBrugnara/followers", "following_url": "https://api.github.com/users/MartinBrugnara/following{/other_user}", "gists_url": "https://api.github.com/users/MartinBrugnara/gists{/gist_id}", "starred_url": "https://api.github.com/users/MartinBrugnara/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MartinBrugnara/subscriptions", "organizations_url": "https://api.github.com/users/MartinBrugnara/orgs", "repos_url": "https://api.github.com/users/MartinBrugnara/repos", "events_url": "https://api.github.com/users/MartinBrugnara/events{/privacy}", "received_events_url": "https://api.github.com/users/MartinBrugnara/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-31T16:29:33Z", "updated_at": "2015-07-31T17:36:58Z", "closed_at": "2015-07-31T17:36:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Context: memcached + python-memcached + django-memcached\n\nError: \n/usr/local/lib/python2.7/site-packages/memcache.py in _recv_value\n1235            val = int(buf) \n\nLocal vars:\n\n```\nbuf 'True'\nself    <memcache.Client object at 0x7f926d7590b8>\nrlen    6\nflags   2\nserver  <memcache._Host object at 0x7f926d826190>\n```\n\nThis error does **not** occur **in v <= 1.54**\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/75", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/75/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/75/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/75", "id": 98213779, "node_id": "MDU6SXNzdWU5ODIxMzc3OQ==", "number": 75, "title": "Setting/Getting boolean values yields a ValueError", "user": {"login": "papachoco", "id": 244702, "node_id": "MDQ6VXNlcjI0NDcwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/244702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/papachoco", "html_url": "https://github.com/papachoco", "followers_url": "https://api.github.com/users/papachoco/followers", "following_url": "https://api.github.com/users/papachoco/following{/other_user}", "gists_url": "https://api.github.com/users/papachoco/gists{/gist_id}", "starred_url": "https://api.github.com/users/papachoco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/papachoco/subscriptions", "organizations_url": "https://api.github.com/users/papachoco/orgs", "repos_url": "https://api.github.com/users/papachoco/repos", "events_url": "https://api.github.com/users/papachoco/events{/privacy}", "received_events_url": "https://api.github.com/users/papachoco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-07-30T16:44:21Z", "updated_at": "2015-07-31T18:12:17Z", "closed_at": "2015-07-31T17:49:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "In Python Memcached 1.56 (w/ six-1.9.0 & Python 2.7.10)\n\ndoing\n\ncache.set('foo', False)\ncache.get('foo')\n\ngenerates a ValueError: invalid literal for int() with base 10: 'False'\n\nline 1235 memcache.py\n\nWhen the method _val_to_store_info is called the path code that it is followed with a boolean is\n\n```\n   elif isinstance(val, int):\n        flags |= Client._FLAG_INTEGER\n        val = str(val)\n        if six.PY3:\n            val = val.encode('ascii')\n        # force no attempt to compress this silly string.\n        min_compress_len = 0\n```\n\nSince the flags bits have been set to an integer, the boolean value is changed to a string ('False'). So in the method _recv_value the code tries to change that string to an int which fails .\n\nIn Python Memcached 1.54\n\nthe original code in _val_to_store_info is\n\nelif isinstance(val, int):\n            flags |= Client._FLAG_INTEGER\n            val = \"%d\" % val\n            # force no attempt to compress this silly string.\n            min_compress_len = 0\n\nthe issue also affect when checking for long values\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/72", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/72/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/72/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/72", "id": 97497131, "node_id": "MDU6SXNzdWU5NzQ5NzEzMQ==", "number": 72, "title": "python-memcached 1.53 wheel package has 1.55 code in it", "user": {"login": "vkurup", "id": 4413, "node_id": "MDQ6VXNlcjQ0MTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/4413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vkurup", "html_url": "https://github.com/vkurup", "followers_url": "https://api.github.com/users/vkurup/followers", "following_url": "https://api.github.com/users/vkurup/following{/other_user}", "gists_url": "https://api.github.com/users/vkurup/gists{/gist_id}", "starred_url": "https://api.github.com/users/vkurup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vkurup/subscriptions", "organizations_url": "https://api.github.com/users/vkurup/orgs", "repos_url": "https://api.github.com/users/vkurup/repos", "events_url": "https://api.github.com/users/vkurup/events{/privacy}", "received_events_url": "https://api.github.com/users/vkurup/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-07-27T16:03:03Z", "updated_at": "2015-08-02T14:52:17Z", "closed_at": "2015-07-31T19:39:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI just noticed that some of my TravisCI tests started failing. They depend on `python-memcached==1.5.3`, and the failure looks like this:\n\n```\nERROR: test_cache_is_working (bulk_sms.tests.test_sending.MultiprocSendingTest)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/travis/build/<projectname>/bulk_sms/tests/test_sending.py\", line 330, in test_cache_is_working\n    self.assertTrue(cache.get('CACHETEST', default=False),\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/django/core/cache/backends/memcached.py\", line 82, in get\n    val = self._cache.get(key)\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/memcache.py\", line 1089, in get\n    return self._get('get', key)\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/memcache.py\", line 1073, in _get\n    return _unsafe_get()\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/memcache.py\", line 1061, in _unsafe_get\n    value = self._recv_value(server, flags, rlen)\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/memcache.py\", line 1235, in _recv_value\n    val = int(buf)\nValueError: invalid literal for int() with base 10: 'True'\n```\n\nWhen I look at [this page](https://pypi.python.org/pypi/python-memcached/1.53), the source package has different code than the wheel package:\n\n![image](https://cloud.githubusercontent.com/assets/4413/8910832/0377d236-3457-11e5-80e8-4f47d0501579.png)\n\nSpecifically, line 93 of memcache.py inside the wheel package says this:\n\n```\n__version__ = \"1.55\"\n```\n\nWould it be possible to upload a new wheel package with 1.53 code in it? Thanks for your work modernizing this package!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/71", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/71/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/71/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/71", "id": 94002356, "node_id": "MDU6SXNzdWU5NDAwMjM1Ng==", "number": 71, "title": "Performance drop between v1.53 and v1.54", "user": {"login": "edmorley", "id": 501702, "node_id": "MDQ6VXNlcjUwMTcwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/501702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edmorley", "html_url": "https://github.com/edmorley", "followers_url": "https://api.github.com/users/edmorley/followers", "following_url": "https://api.github.com/users/edmorley/following{/other_user}", "gists_url": "https://api.github.com/users/edmorley/gists{/gist_id}", "starred_url": "https://api.github.com/users/edmorley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edmorley/subscriptions", "organizations_url": "https://api.github.com/users/edmorley/orgs", "repos_url": "https://api.github.com/users/edmorley/repos", "events_url": "https://api.github.com/users/edmorley/events{/privacy}", "received_events_url": "https://api.github.com/users/edmorley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-07-09T09:37:53Z", "updated_at": "2016-05-26T14:51:21Z", "closed_at": "2016-05-26T14:51:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We've been using python-memcached v1.48 with Python 2.7.8 and Django 1.7.7.\n\nI've just tried deploying python-memcached v1.54 and it increased average Memcached get response times from ~4.5ms to ~16ms, and sets from ~0.3ms to ~0.4ms (as reported by New Relic).\n\nBefore I try bisecting further, is this expected?\n\n(If it helps, our version of `six` is 1.9.0).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/70", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/70/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/70/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/70", "id": 87739448, "node_id": "MDU6SXNzdWU4NzczOTQ0OA==", "number": 70, "title": "Python 3 TypeError: 'str' does not support the buffer interface - memcache.py line 65", "user": {"login": "coreycb", "id": 1678881, "node_id": "MDQ6VXNlcjE2Nzg4ODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1678881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coreycb", "html_url": "https://github.com/coreycb", "followers_url": "https://api.github.com/users/coreycb/followers", "following_url": "https://api.github.com/users/coreycb/following{/other_user}", "gists_url": "https://api.github.com/users/coreycb/gists{/gist_id}", "starred_url": "https://api.github.com/users/coreycb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coreycb/subscriptions", "organizations_url": "https://api.github.com/users/coreycb/orgs", "repos_url": "https://api.github.com/users/coreycb/repos", "events_url": "https://api.github.com/users/coreycb/events{/privacy}", "received_events_url": "https://api.github.com/users/coreycb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-06-12T14:05:11Z", "updated_at": "2016-03-10T15:19:52Z", "closed_at": "2015-07-26T20:57:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "If memcached isn't running Python3 gets the following error on set():  TypeError: 'str' does not support the buffer interface.  Should this be handled better?\n\nWe're hitting this in python-keystoneclient test code that checks if memcached is available.  See: https://github.com/openstack/python-keystoneclient/blob/master/keystoneclient/tests/unit/test_auth_token_middleware.py#L78\n\nHere's the difference between python 2 and 3 behavior:\n\nubuntu@w1:~$ sudo service memcached stop  \nubuntu@w1:~$ python\nPython 2.7.10 (default, Jun  1 2015, 16:21:46) \n[GCC 4.9.2] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import memcache\n>>> c = memcache.Client(['localhost:11211'])\n>>> c.set('ping', 'pong', time=1)\n0\n>>> quit()\nubuntu@w1:~$ python3\nPython 3.4.3+ (default, Jun  2 2015, 14:09:35) \n[GCC 4.9.2] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import memcache  \n>>> c = memcache.Client(['localhost:11211'])  \n>>> c.set('ping', 'pong', time=1)  \nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/lib/python3/dist-packages/memcache.py\", line 700, in set\n    return self._set(\"set\", key, val, time, min_compress_len, noreply)\n  File \"/usr/lib/python3/dist-packages/memcache.py\", line 983, in _set\n    server, key = self._get_server(key)\n  File \"/usr/lib/python3/dist-packages/memcache.py\", line 413, in _get_server\n    serverhash = serverHashFunction(str(serverhash) + str(i))\n  File \"/usr/lib/python3/dist-packages/memcache.py\", line 65, in cmemcache_hash\n    (((binascii.crc32(key) & 0xffffffff)\nTypeError: 'str' does not support the buffer interface\n>>> quit()\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/65", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/65/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/65/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/65", "id": 55728332, "node_id": "MDU6SXNzdWU1NTcyODMzMg==", "number": 65, "title": "Alive-Check", "user": {"login": "f0o", "id": 1656377, "node_id": "MDQ6VXNlcjE2NTYzNzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1656377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/f0o", "html_url": "https://github.com/f0o", "followers_url": "https://api.github.com/users/f0o/followers", "following_url": "https://api.github.com/users/f0o/following{/other_user}", "gists_url": "https://api.github.com/users/f0o/gists{/gist_id}", "starred_url": "https://api.github.com/users/f0o/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/f0o/subscriptions", "organizations_url": "https://api.github.com/users/f0o/orgs", "repos_url": "https://api.github.com/users/f0o/repos", "events_url": "https://api.github.com/users/f0o/events{/privacy}", "received_events_url": "https://api.github.com/users/f0o/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-28T08:40:45Z", "updated_at": "2015-03-18T20:24:20Z", "closed_at": "2015-03-18T20:24:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nhow can I figure out if a host is alive or not without using expensive timestamp set/get checks?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/64", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/64/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/64/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/64", "id": 55196667, "node_id": "MDU6SXNzdWU1NTE5NjY2Nw==", "number": 64, "title": "1.54 release?", "user": {"login": "skimbrel", "id": 484269, "node_id": "MDQ6VXNlcjQ4NDI2OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/484269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skimbrel", "html_url": "https://github.com/skimbrel", "followers_url": "https://api.github.com/users/skimbrel/followers", "following_url": "https://api.github.com/users/skimbrel/following{/other_user}", "gists_url": "https://api.github.com/users/skimbrel/gists{/gist_id}", "starred_url": "https://api.github.com/users/skimbrel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skimbrel/subscriptions", "organizations_url": "https://api.github.com/users/skimbrel/orgs", "repos_url": "https://api.github.com/users/skimbrel/repos", "events_url": "https://api.github.com/users/skimbrel/events{/privacy}", "received_events_url": "https://api.github.com/users/skimbrel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-01-22T19:23:05Z", "updated_at": "2015-03-18T21:45:21Z", "closed_at": "2015-03-18T20:59:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looks like a lot of work has been done since 1.53 \u2014 what's the status on a new release?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/58", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/58/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/58/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/58", "id": 44830815, "node_id": "MDU6SXNzdWU0NDgzMDgxNQ==", "number": 58, "title": "Status of 1.54?", "user": {"login": "murphyke", "id": 928642, "node_id": "MDQ6VXNlcjkyODY0Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/928642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/murphyke", "html_url": "https://github.com/murphyke", "followers_url": "https://api.github.com/users/murphyke/followers", "following_url": "https://api.github.com/users/murphyke/following{/other_user}", "gists_url": "https://api.github.com/users/murphyke/gists{/gist_id}", "starred_url": "https://api.github.com/users/murphyke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/murphyke/subscriptions", "organizations_url": "https://api.github.com/users/murphyke/orgs", "repos_url": "https://api.github.com/users/murphyke/repos", "events_url": "https://api.github.com/users/murphyke/events{/privacy}", "received_events_url": "https://api.github.com/users/murphyke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-10-03T18:14:06Z", "updated_at": "2015-03-18T20:59:46Z", "closed_at": "2015-03-18T20:59:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "From the CHANGELOG and commit messages, I gather that a 1.54 release is imminent.\n\nPeople may be interested in it because of the presumed ability to set SERVER_MAX_VALUE_LENGTH at import time.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/55", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/55/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/55/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/55", "id": 43553238, "node_id": "MDU6SXNzdWU0MzU1MzIzOA==", "number": 55, "title": "Incorrect \"Key is None\" during multi_delete()", "user": {"login": "sergio97", "id": 281540, "node_id": "MDQ6VXNlcjI4MTU0MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/281540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sergio97", "html_url": "https://github.com/sergio97", "followers_url": "https://api.github.com/users/sergio97/followers", "following_url": "https://api.github.com/users/sergio97/following{/other_user}", "gists_url": "https://api.github.com/users/sergio97/gists{/gist_id}", "starred_url": "https://api.github.com/users/sergio97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sergio97/subscriptions", "organizations_url": "https://api.github.com/users/sergio97/orgs", "repos_url": "https://api.github.com/users/sergio97/repos", "events_url": "https://api.github.com/users/sergio97/events{/privacy}", "received_events_url": "https://api.github.com/users/sergio97/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-09-22T21:08:16Z", "updated_at": "2014-09-29T13:37:05Z", "closed_at": "2014-09-24T22:01:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "The code below shows this behaviour:\n\nimport memcache\nmc = memcache.Client(['127.0.0.1:11211'], debug=0)\n\nkeys = [\"\", \"userA\", \"userB\"]\nprefix = \"settings_\"\nmc.delete_multi(keys, key_prefix=prefix)\n\nIn my case I use empty string to signify the default for a collection of keys. Memcache will store it fine but python-memcache incorrectly reports I'm using a key of None. I think this is the cause:\nIn _map_and_prefix_keys() we check validity of the key before adding the prefix: https://github.com/linsomniac/python-memcached/blob/master/memcache.py#L725\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/54", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/54/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/54/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/54", "id": 42717733, "node_id": "MDU6SXNzdWU0MjcxNzczMw==", "number": 54, "title": "TypeError: 'str' does not support the buffer interface under Python 3", "user": {"login": "tiktuk", "id": 153722, "node_id": "MDQ6VXNlcjE1MzcyMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/153722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiktuk", "html_url": "https://github.com/tiktuk", "followers_url": "https://api.github.com/users/tiktuk/followers", "following_url": "https://api.github.com/users/tiktuk/following{/other_user}", "gists_url": "https://api.github.com/users/tiktuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiktuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiktuk/subscriptions", "organizations_url": "https://api.github.com/users/tiktuk/orgs", "repos_url": "https://api.github.com/users/tiktuk/repos", "events_url": "https://api.github.com/users/tiktuk/events{/privacy}", "received_events_url": "https://api.github.com/users/tiktuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-09-14T10:30:26Z", "updated_at": "2015-07-26T20:58:14Z", "closed_at": "2015-07-26T20:58:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get this error under Python 3.4 using linsomniac/python-memcached@2251916a6a1e8f35609d8d963f68ccab8c1b9402:\n\n```\nError handling request\nTraceback (most recent call last):\n  File \"/user/.virtualenvs/project/lib/python3.4/site-packages/django/core/handlers/base.py\", line 199, in get_response\n    response = middleware_method(request, response)\n  File \"/user/.virtualenvs/project/lib/python3.4/site-packages/mezzanine/core/middleware.py\", line 192, in process_response\n    context = RequestContext(request)\n  File \"/user/.virtualenvs/project/lib/python3.4/site-packages/django/template/context.py\", line 169, in __init__\n    self.update(processor(request))\n  File \"/user/.virtualenvs/project/lib/python3.4/site-packages/mezzanine/conf/context_processors.py\", line 40, in settings\n    settings_dict = cache_get(cache_key)\n  File \"/user/.virtualenvs/project/lib/python3.4/site-packages/mezzanine/utils/cache.py\", line 48, in cache_get\n    packed = cache.get(_hashed_key(key))\n  File \"/user/.virtualenvs/project/lib/python3.4/site-packages/django/core/cache/backends/memcached.py\", line 75, in get\n    val = self._cache.get(key)\n  File \"/user/.virtualenvs/project/lib/python3.4/site-packages/memcache.py\", line 1002, in get\n    return self._get('get', key)\n  File \"/user/.virtualenvs/project/lib/python3.4/site-packages/memcache.py\", line 986, in _get\n    return _unsafe_get()\n  File \"/user/.virtualenvs/project/lib/python3.4/site-packages/memcache.py\", line 957, in _unsafe_get\n    server.send_cmd(\"%s %s\" % (cmd, key))\n  File \"/user/.virtualenvs/project/lib/python3.4/site-packages/memcache.py\", line 1299, in send_cmd\n    self.socket.sendall(cmd + '\\r\\n')\nTypeError: 'str' does not support the buffer interface\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/user/.virtualenvs/project/lib/python3.4/site-packages/gunicorn/workers/sync.py\", line 93, in handle\n    self.handle_request(listener, req, client, addr)\n  File \"/user/.virtualenvs/project/lib/python3.4/site-packages/gunicorn/workers/sync.py\", line 134, in handle_request\n    respiter = self.wsgi(environ, resp.start_response)\n  File \"/user/.virtualenvs/project/lib/python3.4/site-packages/django/core/handlers/wsgi.py\", line 206, in __call__\n    response = self.get_response(request)\n  File \"/user/.virtualenvs/project/lib/python3.4/site-packages/django/core/handlers/base.py\", line 203, in get_response\n    response = self.handle_uncaught_exception(request, resolver, sys.exc_info())\n  File \"/user/.virtualenvs/project/lib/python3.4/site-packages/django/core/handlers/base.py\", line 236, in handle_uncaught_exception\n    return callback(request, **param_dict)\n  File \"/user/.virtualenvs/project/lib/python3.4/site-packages/django/utils/decorators.py\", line 99, in _wrapped_view\n    response = view_func(request, *args, **kwargs)\n  File \"/user/.virtualenvs/project/lib/python3.4/site-packages/mezzanine/core/views.py\", line 220, in server_error\n    context = RequestContext(request, {\"STATIC_URL\": settings.STATIC_URL})\n  File \"/user/.virtualenvs/project/lib/python3.4/site-packages/django/template/context.py\", line 169, in __init__\n    self.update(processor(request))\n  File \"/user/.virtualenvs/project/lib/python3.4/site-packages/mezzanine/conf/context_processors.py\", line 40, in settings\n    settings_dict = cache_get(cache_key)\n  File \"/user/.virtualenvs/project/lib/python3.4/site-packages/mezzanine/utils/cache.py\", line 48, in cache_get\n    packed = cache.get(_hashed_key(key))\n  File \"/user/.virtualenvs/project/lib/python3.4/site-packages/django/core/cache/backends/memcached.py\", line 75, in get\n    val = self._cache.get(key)\n  File \"/user/.virtualenvs/project/lib/python3.4/site-packages/memcache.py\", line 1002, in get\n    return self._get('get', key)\n  File \"/user/.virtualenvs/project/lib/python3.4/site-packages/memcache.py\", line 986, in _get\n    return _unsafe_get()\n  File \"/user/.virtualenvs/project/lib/python3.4/site-packages/memcache.py\", line 957, in _unsafe_get\n    server.send_cmd(\"%s %s\" % (cmd, key))\n  File \"/user/.virtualenvs/project/lib/python3.4/site-packages/memcache.py\", line 1299, in send_cmd\n    self.socket.sendall(cmd + '\\r\\n')\nTypeError: 'str' does not support the buffer interface\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/53", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/53/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/53/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/53", "id": 41750593, "node_id": "MDU6SXNzdWU0MTc1MDU5Mw==", "number": 53, "title": "Google code style formatted docstrings", "user": {"login": "gmr", "id": 49469, "node_id": "MDQ6VXNlcjQ5NDY5", "avatar_url": "https://avatars2.githubusercontent.com/u/49469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gmr", "html_url": "https://github.com/gmr", "followers_url": "https://api.github.com/users/gmr/followers", "following_url": "https://api.github.com/users/gmr/following{/other_user}", "gists_url": "https://api.github.com/users/gmr/gists{/gist_id}", "starred_url": "https://api.github.com/users/gmr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gmr/subscriptions", "organizations_url": "https://api.github.com/users/gmr/orgs", "repos_url": "https://api.github.com/users/gmr/repos", "events_url": "https://api.github.com/users/gmr/events{/privacy}", "received_events_url": "https://api.github.com/users/gmr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-09-02T20:23:40Z", "updated_at": "2015-07-26T20:59:47Z", "closed_at": "2015-07-26T20:59:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to update the codebase to use Google's coding style for docstrings:\n\n```\nArgs:\n    path (str): The path of the file to wrap\n    field_storage (FileStorage): The :class:`FileStorage` instance to wrap\n    temporary (bool): Whether or not to delete the file when the File\n       instance is destructed\n\nReturns:\n    BufferedFileStorage: A buffered writable file descriptor\n```\n\nDoing so would enable it to work with [Sphinx](http://sphinx-doc.org/) using the [Napoleon extension](http://sphinx-doc.org/latest/ext/napoleon.html), but did not want to put forth the work if it would not be accepted.\n\nWould you be willing to accept such a pull-request if it is clean, doesn't break anything, etc? I could also add a docs dir with sphinx autodoc so a readthedocs.org site could be setup.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/51", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/51/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/51/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/51", "id": 41045834, "node_id": "MDU6SXNzdWU0MTA0NTgzNA==", "number": 51, "title": "delete returns nonzero on NOT_FOUND", "user": {"login": "bzzoop", "id": 59039, "node_id": "MDQ6VXNlcjU5MDM5", "avatar_url": "https://avatars1.githubusercontent.com/u/59039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bzzoop", "html_url": "https://github.com/bzzoop", "followers_url": "https://api.github.com/users/bzzoop/followers", "following_url": "https://api.github.com/users/bzzoop/following{/other_user}", "gists_url": "https://api.github.com/users/bzzoop/gists{/gist_id}", "starred_url": "https://api.github.com/users/bzzoop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bzzoop/subscriptions", "organizations_url": "https://api.github.com/users/bzzoop/orgs", "repos_url": "https://api.github.com/users/bzzoop/repos", "events_url": "https://api.github.com/users/bzzoop/events{/privacy}", "received_events_url": "https://api.github.com/users/bzzoop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-08-25T09:23:44Z", "updated_at": "2014-09-21T19:20:42Z", "closed_at": "2014-09-21T19:20:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It appears that delete will return nonzero even on failure (NOT_FOUND server response). This appears to violate the api description that says \"@return: Nonzero on success.\" The memecached text protocol [defines](https://github.com/memcached/memcached/blob/master/doc/protocol.txt#L264) only 'DELETED' as \"success\", and 'NOT_FOUND' to indicate the server did not have the key at the time the delete was requested -- and records this in server stats as 'delete_misses'.\n\nThe fix is trivial (simply remove NOT_FOUND from the expect list for delete), and I was going to just open a pull req for it, but there appears to be some history behind the decision.\n\nIt appears this change was part of 81933bc299740b7f10253abd439a719424d506fc and related to an [old-bug](https://bugs.launchpad.net/python-memcached/+bug/471727) (at least this is the bug referenced in the commit).\n\nIs there historical/deeper meaning surrounding this change?\nIs it a bug or just a kludge to maintain some pre-existing behavior (e.g. api stability)?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/48", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/48/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/48/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/48", "id": 37335199, "node_id": "MDU6SXNzdWUzNzMzNTE5OQ==", "number": 48, "title": "New release with python 3 support", "user": {"login": "jamielennox", "id": 416057, "node_id": "MDQ6VXNlcjQxNjA1Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/416057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamielennox", "html_url": "https://github.com/jamielennox", "followers_url": "https://api.github.com/users/jamielennox/followers", "following_url": "https://api.github.com/users/jamielennox/following{/other_user}", "gists_url": "https://api.github.com/users/jamielennox/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamielennox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamielennox/subscriptions", "organizations_url": "https://api.github.com/users/jamielennox/orgs", "repos_url": "https://api.github.com/users/jamielennox/repos", "events_url": "https://api.github.com/users/jamielennox/events{/privacy}", "received_events_url": "https://api.github.com/users/jamielennox/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2014-07-08T05:37:08Z", "updated_at": "2015-07-27T07:04:47Z", "closed_at": "2015-07-26T20:56:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \n\nThe latest release is now over a year old and doesn't include any of the python 3 compatibility. Can you release a new version please? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/45", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/45/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/45/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/45", "id": 33842097, "node_id": "MDU6SXNzdWUzMzg0MjA5Nw==", "number": 45, "title": "Catching _ConnectionDeadError in get_multi", "user": {"login": "spulec", "id": 292606, "node_id": "MDQ6VXNlcjI5MjYwNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/292606?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spulec", "html_url": "https://github.com/spulec", "followers_url": "https://api.github.com/users/spulec/followers", "following_url": "https://api.github.com/users/spulec/following{/other_user}", "gists_url": "https://api.github.com/users/spulec/gists{/gist_id}", "starred_url": "https://api.github.com/users/spulec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spulec/subscriptions", "organizations_url": "https://api.github.com/users/spulec/orgs", "repos_url": "https://api.github.com/users/spulec/repos", "events_url": "https://api.github.com/users/spulec/events{/privacy}", "received_events_url": "https://api.github.com/users/spulec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-05-19T22:05:52Z", "updated_at": "2014-09-21T19:16:22Z", "closed_at": "2014-09-21T19:16:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\n  cache.get_multi(new_keys)\n  File \"site-packages/memcache.py\", line 930, in get_multi\n    line = server.readline()\n  File \"site-packages/memcache.py\", line 1129, in readline\n    raise _ConnectionDeadError()\n```\n\nIt currently catches `_Error` and `socket.error`, but not `_ConnectionDeadError`.\n\nI noticed this while doing a restart of a memcached machine.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/44", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/44/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/44/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/44", "id": 33543997, "node_id": "MDU6SXNzdWUzMzU0Mzk5Nw==", "number": 44, "title": "Support for usernames/passwords?", "user": {"login": "audiodude", "id": 57832, "node_id": "MDQ6VXNlcjU3ODMy", "avatar_url": "https://avatars1.githubusercontent.com/u/57832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/audiodude", "html_url": "https://github.com/audiodude", "followers_url": "https://api.github.com/users/audiodude/followers", "following_url": "https://api.github.com/users/audiodude/following{/other_user}", "gists_url": "https://api.github.com/users/audiodude/gists{/gist_id}", "starred_url": "https://api.github.com/users/audiodude/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/audiodude/subscriptions", "organizations_url": "https://api.github.com/users/audiodude/orgs", "repos_url": "https://api.github.com/users/audiodude/repos", "events_url": "https://api.github.com/users/audiodude/events{/privacy}", "received_events_url": "https://api.github.com/users/audiodude/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-05-14T23:46:58Z", "updated_at": "2014-09-21T19:08:13Z", "closed_at": "2014-09-21T19:08:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI'm trying to use memcache on Heroku with \"Memcached Cloud\". The connection credentials I'm given include a username and a password, however it doesn't seem like there's anywhere to provide that information in the library. Is there any plan to support usernames/passwords in the library, or is that beyond the scope of this library?\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/32", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/32/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/32/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/32", "id": 29643298, "node_id": "MDU6SXNzdWUyOTY0MzI5OA==", "number": 32, "title": "Failed operations should raise errors", "user": {"login": "iartarisi", "id": 35473, "node_id": "MDQ6VXNlcjM1NDcz", "avatar_url": "https://avatars0.githubusercontent.com/u/35473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iartarisi", "html_url": "https://github.com/iartarisi", "followers_url": "https://api.github.com/users/iartarisi/followers", "following_url": "https://api.github.com/users/iartarisi/following{/other_user}", "gists_url": "https://api.github.com/users/iartarisi/gists{/gist_id}", "starred_url": "https://api.github.com/users/iartarisi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iartarisi/subscriptions", "organizations_url": "https://api.github.com/users/iartarisi/orgs", "repos_url": "https://api.github.com/users/iartarisi/repos", "events_url": "https://api.github.com/users/iartarisi/events{/privacy}", "received_events_url": "https://api.github.com/users/iartarisi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-03-18T13:09:34Z", "updated_at": "2014-03-19T08:45:28Z", "closed_at": "2014-03-18T15:37:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Right now, failed operations in `python-memcached` either return `0` or `None`. For example, `get` returns `None` if it cannot connect to the server, but `set` returns `0`. \n\nIt is more pythonic to raise exceptions when an unexpected condition has occurred.\n\nSee for example how [redis-py](https://github.com/andymccurdy/redis-py) raises a `ConnectionError` exception on invoking `get` when the server is down.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/31", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/31/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/31/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/31", "id": 29359877, "node_id": "MDU6SXNzdWUyOTM1OTg3Nw==", "number": 31, "title": "Catching _ConnectionDeadError in  _deletetouch", "user": {"login": "petr", "id": 13464, "node_id": "MDQ6VXNlcjEzNDY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petr", "html_url": "https://github.com/petr", "followers_url": "https://api.github.com/users/petr/followers", "following_url": "https://api.github.com/users/petr/following{/other_user}", "gists_url": "https://api.github.com/users/petr/gists{/gist_id}", "starred_url": "https://api.github.com/users/petr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petr/subscriptions", "organizations_url": "https://api.github.com/users/petr/orgs", "repos_url": "https://api.github.com/users/petr/repos", "events_url": "https://api.github.com/users/petr/events{/privacy}", "received_events_url": "https://api.github.com/users/petr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-03-13T15:26:24Z", "updated_at": "2014-09-21T19:16:22Z", "closed_at": "2014-09-21T19:01:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that handler of _ConnectionDeadError is missed. \n\n``` python\n        try:\n            server.send_cmd(cmd)\n            line = server.readline()\n            if line and line.strip() in expected: return 1\n            self.debuglog('%s expected %s, got: %s'\n                    % (cmd, ' or '.join(expected), repr(line)))\n        except socket.error, msg:\n            if isinstance(msg, tuple): msg = msg[1]\n            server.mark_dead(msg)\n        return 0\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/24", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/24/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/24/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/24", "id": 23091685, "node_id": "MDU6SXNzdWUyMzA5MTY4NQ==", "number": 24, "title": "set_multi fails with tens of thousands of keys", "user": {"login": "kylegibson", "id": 243791, "node_id": "MDQ6VXNlcjI0Mzc5MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/243791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylegibson", "html_url": "https://github.com/kylegibson", "followers_url": "https://api.github.com/users/kylegibson/followers", "following_url": "https://api.github.com/users/kylegibson/following{/other_user}", "gists_url": "https://api.github.com/users/kylegibson/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylegibson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylegibson/subscriptions", "organizations_url": "https://api.github.com/users/kylegibson/orgs", "repos_url": "https://api.github.com/users/kylegibson/repos", "events_url": "https://api.github.com/users/kylegibson/events{/privacy}", "received_events_url": "https://api.github.com/users/kylegibson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-11-21T19:41:29Z", "updated_at": "2014-09-21T18:18:37Z", "closed_at": "2014-09-21T18:18:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "version 1.53\n\nError from memcached: Failed to write, and not due to blocking: Connection reset by peer\n\n``` python\ndata = zip(range(1000000,1200000), range(1, 200000))\nset_multi_results = set_multi(dict(data))\nget_many_results = get_multi(range(1000000, 1200000))\n```\n\n`set_multi_results` contains all of the keys, because the server died.\n`get_many_results` will contain some arbitrary fraction of keys that were actually set, testing on my system was about 30,000.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/21", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/21/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/21/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/21", "id": 22861328, "node_id": "MDU6SXNzdWUyMjg2MTMyOA==", "number": 21, "title": "Can't get, or set 'NFL::CAR_TB'", "user": {"login": "seaders", "id": 955114, "node_id": "MDQ6VXNlcjk1NTExNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/955114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seaders", "html_url": "https://github.com/seaders", "followers_url": "https://api.github.com/users/seaders/followers", "following_url": "https://api.github.com/users/seaders/following{/other_user}", "gists_url": "https://api.github.com/users/seaders/gists{/gist_id}", "starred_url": "https://api.github.com/users/seaders/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seaders/subscriptions", "organizations_url": "https://api.github.com/users/seaders/orgs", "repos_url": "https://api.github.com/users/seaders/repos", "events_url": "https://api.github.com/users/seaders/events{/privacy}", "received_events_url": "https://api.github.com/users/seaders/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-11-18T19:35:30Z", "updated_at": "2013-11-28T13:46:25Z", "closed_at": "2013-11-20T03:22:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "After checking a whole loada things, I've found that for some keys, python-memcached just won't get, or set them on my machine (homebrew'd 1.4.15, pip installed python-memcached 1.53 on Mac OSX 10.9).  My first issue was a shot in the dark, not having a clear idea as to what was going on, but after more digging I now definitely now.\n\nIt all hinges around \n    def _get_server(self, key):\n\nIf we add two debug printout lines,\n\n```\ndef _get_server(self, key):\n    if isinstance(key, tuple):\n        serverhash, key = key\n    else:\n        serverhash = serverHashFunction(key)\n\n    for i in range(Client._SERVER_RETRIES):\n        server = self.buckets[serverhash % len(self.buckets)]\n        if server.connect():\n            #print \"(using server %s)\" % server,\n            print 'got server {} for {}'.format(serverhash % len(self.buckets),\n                                                key)\n            return server, key\n        print 'server {} failed for {}'.format(serverhash % len(self.buckets),\n                                            key)\n        serverhash = serverHashFunction(str(serverhash) + str(i))\n    return None, None\n```\n\nTrying to get or set the key 'NFL::CAR_TB',\n\n```\nimport memcache\nmc_cl = memcache.Client('127.0.0.1')\nmc_cl.set('NFL::CAR_TB', 1)\nmc_cl.get('NFL::CAR_TB')\nmc_cl.set('NFL::CAR_UB', 1)\nmc_cl.get('NFL::CAR_UB')\n```\n\nresults, on my machine with,\n\n```\nserver 7 (inet:.:11211 (dead until 1384820703)) failed for NFL::CAR_TB\nserver 8 (inet:1:11211 (dead until 1384820703)) failed for NFL::CAR_TB\nserver 3 (inet:.:11211 (dead until 1384820703)) failed for NFL::CAR_TB\nserver 8 (inet:1:11211 (dead until 1384820703)) failed for NFL::CAR_TB\nserver 0 (inet:1:11211 (dead until 1384820703)) failed for NFL::CAR_TB\nserver 7 (inet:.:11211 (dead until 1384820703)) failed for NFL::CAR_TB\nserver 7 (inet:.:11211 (dead until 1384820703)) failed for NFL::CAR_TB\nserver 5 (inet:.:11211 (dead until 1384820703)) failed for NFL::CAR_TB\nserver 1 (inet:2:11211 (dead until 1384820703)) failed for NFL::CAR_TB\nserver 5 (inet:.:11211 (dead until 1384820703)) failed for NFL::CAR_TB\nserver 7 (inet:.:11211 (dead until 1384820703)) failed for NFL::CAR_TB\nserver 8 (inet:1:11211 (dead until 1384820703)) failed for NFL::CAR_TB\nserver 3 (inet:.:11211 (dead until 1384820703)) failed for NFL::CAR_TB\nserver 8 (inet:1:11211 (dead until 1384820703)) failed for NFL::CAR_TB\nserver 0 (inet:1:11211 (dead until 1384820703)) failed for NFL::CAR_TB\nserver 7 (inet:.:11211 (dead until 1384820703)) failed for NFL::CAR_TB\nserver 7 (inet:.:11211 (dead until 1384820703)) failed for NFL::CAR_TB\nserver 5 (inet:.:11211 (dead until 1384820703)) failed for NFL::CAR_TB\nserver 1 (inet:2:11211 (dead until 1384820703)) failed for NFL::CAR_TB\nserver 5 (inet:.:11211 (dead until 1384820703)) failed for NFL::CAR_TB\ngot server 6 for NFL::CAR_UB\ngot server 6 for NFL::CAR_UB\n```\n\nIf I alter _get_server to\n\n```\ndef _get_server(self, key):\n    choices = range(len(self.buckets) - 1)\n    random.shuffle(choices)\n\n    if isinstance(key, tuple):\n        choice, key = key\n    else:\n        choice = choices.pop()\n\n    for _ in range(Client._SERVER_RETRIES):\n        server = self.buckets[choice]\n        if server.connect():\n            #print \"(using server %s)\" % server,\n            print 'got server {} for {}'.format(choice,\n                                                key)\n            return server, key\n        print 'server {} ({}) failed for {}'.format(choice, server, key)\n        choice = choices.pop()\n    return None, None\n```\n\nThen everything works much better,\n\n```\ngot server 4 for NFL::CAR_TB\nserver 1 (inet:2:11211 (dead until 1384820883)) failed for NFL::CAR_TB\nserver 7 (inet:.:11211 (dead until 1384820883)) failed for NFL::CAR_TB\nserver 0 (inet:1:11211 (dead until 1384820883)) failed for NFL::CAR_TB\nserver 2 (inet:7:11211 (dead until 1384820883)) failed for NFL::CAR_TB\ngot server 4 for NFL::CAR_TB\nserver 1 (inet:2:11211 (dead until 1384820883)) failed for NFL::CAR_UB\nserver 3 (inet:.:11211 (dead until 1384820883)) failed for NFL::CAR_UB\ngot server 4 for NFL::CAR_UB\nserver 1 (inet:2:11211 (dead until 1384820883)) failed for NFL::CAR_UB\ngot server 6 for NFL::CAR_UB\n```\n\n~~\nmulti_get and multi_set not getting / setting all keys\n\nI was getting very inconsistent results when trying to set multiple keys in my python program,\n\n```\nimport memcache\n\nTWO_HOURS = 2 * 60 * 60\nmc_cl = memcache.Client('127.0.0.1')\nmapping = {...}\n\nmc_cl.flush_all()\nret = mc_cl.set_multi(mapping=mapping, time=TWO_HOURS)\ngetret = mc_cl.get_multi(mapping.keys())\nif len(mapping) != len(getret):\n    print 'not set\\n\\t{}'.format('\\n\\t'.join([str((k, mapping[k])) for k in\n                                              [a for a in mapping.keys()\n                                               if a not in getret.keys()]]))\n```\n\nAnd after analysing the raw memcache output, it seems like not all the keys are being set, and not all the keys are being requested thereafter.  All things done and up to date on homebrew and pip, on Mac OSX 10.9.\n\nMemcache output below and reading it states that only 101 keys were attempted to be written and read, whereas there were 228 items.\n\n```\nimport re\n\ngamesSet = []\ngamesGet = []\nwith open('memout.log') as f:\n    for line in f.read().split('\\n'):\n        match = re.match('^<21 set ([^ ]+) .*$', line)\n        if match is not None:\n            gamesSet.append(match.group(1))\n            continue\n        match = re.match('^<21 get (.*)$', line)\n        if match is not None:\n            gamesGet += match.group(1).split(' ')\n            continue\nprint len(mapping), mapping\nprint len(gamesSet), gamesSet\nprint len(gamesGet), gamesGet\n```\n\nThat log is below.\n\n```\n<21 new auto-negotiating client connection\n21: Client using the ascii protocol\n<21 flush_all\n>21 OK\n<22 new auto-negotiating client connection\n22: Client using the ascii protocol\n<22 flush_all\n>22 OK\n<21 set NCAAF::BUFF_KENTST 1 7200 34\n>21 STORED\n<21 set NCAAF::ND_USC 1 7200 29\n>21 STORED\n```\n\n~~\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/20", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/20/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/20/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/20", "id": 22822956, "node_id": "MDU6SXNzdWUyMjgyMjk1Ng==", "number": 20, "title": "installing with easy-install or pip", "user": {"login": "burakk", "id": 176419, "node_id": "MDQ6VXNlcjE3NjQxOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/176419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/burakk", "html_url": "https://github.com/burakk", "followers_url": "https://api.github.com/users/burakk/followers", "following_url": "https://api.github.com/users/burakk/following{/other_user}", "gists_url": "https://api.github.com/users/burakk/gists{/gist_id}", "starred_url": "https://api.github.com/users/burakk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/burakk/subscriptions", "organizations_url": "https://api.github.com/users/burakk/orgs", "repos_url": "https://api.github.com/users/burakk/repos", "events_url": "https://api.github.com/users/burakk/events{/privacy}", "received_events_url": "https://api.github.com/users/burakk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-11-18T09:26:20Z", "updated_at": "2014-03-26T04:52:43Z", "closed_at": "2014-03-26T04:52:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nI am getting errors while trying to load python-memcached. With easy-install\n\nBest match: python-memcached 1.53\nDownloading https://pypi.python.org/packages/source/p/python-memcached/python-memcached-1.53.tar.gz#md5=89570d26e7e7b15caa668a6b2678bd3c\nProcessing python-memcached-1.53.tar.gz\nWriting /var/folders/_b/zp6hg4_s52l19z0z42kvzzt80000gn/T/easy_install-qat645/python-memcached-1.53/setup.cfg\nRunning python-memcached-1.53/setup.py -q bdist_egg --dist-dir /var/folders/_b/zp6hg4_s52l19z0z42kvzzt80000gn/T/easy_install-qat645/python-memcached-1.53/egg-dist-tmp-ibs24u\nTraceback (most recent call last):\n  File \"/Users/burakk/BurakWorks/Web/VIRTUAL_ENVIRONMENTS/django_ozo/bin/easy_install\", line 9, in <module>\n    load_entry_point('setuptools==0.9.8', 'console_scripts', 'easy_install')()\n  File \"/Users/burakk/BurakWorks/Web/VIRTUAL_ENVIRONMENTS/django_ozo/lib/python3.3/site-packages/setuptools/command/easy_install.py\", line 1992, in main\n    with_ei_usage(lambda:\n  File \"/Users/burakk/BurakWorks/Web/VIRTUAL_ENVIRONMENTS/django_ozo/lib/python3.3/site-packages/setuptools/command/easy_install.py\", line 1979, in with_ei_usage\n    return f()\n  File \"/Users/burakk/BurakWorks/Web/VIRTUAL_ENVIRONMENTS/django_ozo/lib/python3.3/site-packages/setuptools/command/easy_install.py\", line 1996, in <lambda>\n    distclass=DistributionWithoutHelpCommands, **kw\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/distutils/core.py\", line 148, in setup\n    dist.run_commands()\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/distutils/dist.py\", line 929, in run_commands\n    self.run_command(cmd)\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/distutils/dist.py\", line 948, in run_command\n    cmd_obj.run()\n  File \"/Users/burakk/BurakWorks/Web/VIRTUAL_ENVIRONMENTS/django_ozo/lib/python3.3/site-packages/setuptools/command/easy_install.py\", line 380, in run\n    self.easy_install(spec, not self.no_deps)\n  File \"/Users/burakk/BurakWorks/Web/VIRTUAL_ENVIRONMENTS/django_ozo/lib/python3.3/site-packages/setuptools/command/easy_install.py\", line 623, in easy_install\n    return self.install_item(spec, dist.location, tmpdir, deps)\n  File \"/Users/burakk/BurakWorks/Web/VIRTUAL_ENVIRONMENTS/django_ozo/lib/python3.3/site-packages/setuptools/command/easy_install.py\", line 653, in install_item\n    dists = self.install_eggs(spec, download, tmpdir)\n  File \"/Users/burakk/BurakWorks/Web/VIRTUAL_ENVIRONMENTS/django_ozo/lib/python3.3/site-packages/setuptools/command/easy_install.py\", line 849, in install_eggs\n    return self.build_and_install(setup_script, setup_base)\n  File \"/Users/burakk/BurakWorks/Web/VIRTUAL_ENVIRONMENTS/django_ozo/lib/python3.3/site-packages/setuptools/command/easy_install.py\", line 1130, in build_and_install\n    self.run_setup(setup_script, setup_base, args)\n  File \"/Users/burakk/BurakWorks/Web/VIRTUAL_ENVIRONMENTS/django_ozo/lib/python3.3/site-packages/setuptools/command/easy_install.py\", line 1115, in run_setup\n    run_setup(setup_script, args)\n  File \"/Users/burakk/BurakWorks/Web/VIRTUAL_ENVIRONMENTS/django_ozo/lib/python3.3/site-packages/setuptools/sandbox.py\", line 69, in run_setup\n    lambda: execfile(\n  File \"/Users/burakk/BurakWorks/Web/VIRTUAL_ENVIRONMENTS/django_ozo/lib/python3.3/site-packages/setuptools/sandbox.py\", line 120, in run\n    return func()\n  File \"/Users/burakk/BurakWorks/Web/VIRTUAL_ENVIRONMENTS/django_ozo/lib/python3.3/site-packages/setuptools/sandbox.py\", line 71, in <lambda>\n    {'__file__':setup_script, '**name**':'**main**'}\n  File \"/Users/burakk/BurakWorks/Web/VIRTUAL_ENVIRONMENTS/django_ozo/lib/python3.3/site-packages/setuptools/compat.py\", line 92, in execfile\n    exec_(compile(source, fn, 'exec'), globs, locs)\n  File \"setup.py\", line 4, in <module>\n  File \"/var/folders/_b/zp6hg4_s52l19z0z42kvzzt80000gn/T/easy_install-qat645/python-memcached-1.53/memcache.py\", line 410\n    except socket.error, msg:\n                       ^\nSyntaxError: invalid syntax\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/19", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/19/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/19/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/19", "id": 22003523, "node_id": "MDU6SXNzdWUyMjAwMzUyMw==", "number": 19, "title": "MemcachedKeyCharacterError should confess the bad key", "user": {"login": "roysmith", "id": 704337, "node_id": "MDQ6VXNlcjcwNDMzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/704337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roysmith", "html_url": "https://github.com/roysmith", "followers_url": "https://api.github.com/users/roysmith/followers", "following_url": "https://api.github.com/users/roysmith/following{/other_user}", "gists_url": "https://api.github.com/users/roysmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/roysmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roysmith/subscriptions", "organizations_url": "https://api.github.com/users/roysmith/orgs", "repos_url": "https://api.github.com/users/roysmith/repos", "events_url": "https://api.github.com/users/roysmith/events{/privacy}", "received_events_url": "https://api.github.com/users/roysmith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-11-02T15:46:24Z", "updated_at": "2014-09-21T18:23:28Z", "closed_at": "2014-09-21T18:23:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "We got a bunch of MemcachedKeyCharacterError exceptions from inside our django app.  We've been unable to reproduce the problem.  Debugging these would be a lot easier if the exception included the offending key.  Something like the following should do the trick:\n\n```\n--- /home/roy/deploy/current/python/lib/python2.7/site-packages/memcache.py 2013-10-10 16:43:47.484586967 -0400\n+++ /tmp/memcache.py    2013-11-02 11:41:36.316624255 -0400\n@@ -1059,7 +1059,7 @@\n                          % self.server_max_key_length)\n             if not valid_key_chars_re.match(key):\n                 raise Client.MemcachedKeyCharacterError(\n-                        \"Control characters not allowed\")\n+                        \"Control characters not allowed (key = %r)\" % key)\n\n class _Host(object):\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/18", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/18/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/18/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/18", "id": 20984357, "node_id": "MDU6SXNzdWUyMDk4NDM1Nw==", "number": 18, "title": "git tags are missing", "user": {"login": "apevec", "id": 934852, "node_id": "MDQ6VXNlcjkzNDg1Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/934852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apevec", "html_url": "https://github.com/apevec", "followers_url": "https://api.github.com/users/apevec/followers", "following_url": "https://api.github.com/users/apevec/following{/other_user}", "gists_url": "https://api.github.com/users/apevec/gists{/gist_id}", "starred_url": "https://api.github.com/users/apevec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apevec/subscriptions", "organizations_url": "https://api.github.com/users/apevec/orgs", "repos_url": "https://api.github.com/users/apevec/repos", "events_url": "https://api.github.com/users/apevec/events{/privacy}", "received_events_url": "https://api.github.com/users/apevec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-10-14T21:58:25Z", "updated_at": "2013-10-15T05:03:36Z", "closed_at": "2013-10-15T05:03:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be useful to have git tags corresponding to pypi release tarballs:\nhttps://pypi.python.org/packages/source/p/python-memcached/\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/14", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/14/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/14/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/14", "id": 18500686, "node_id": "MDU6SXNzdWUxODUwMDY4Ng==", "number": 14, "title": "get fails with UnboundLocalError: local variable 'val' referenced before assignment", "user": {"login": "rseward", "id": 1762178, "node_id": "MDQ6VXNlcjE3NjIxNzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1762178?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rseward", "html_url": "https://github.com/rseward", "followers_url": "https://api.github.com/users/rseward/followers", "following_url": "https://api.github.com/users/rseward/following{/other_user}", "gists_url": "https://api.github.com/users/rseward/gists{/gist_id}", "starred_url": "https://api.github.com/users/rseward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rseward/subscriptions", "organizations_url": "https://api.github.com/users/rseward/orgs", "repos_url": "https://api.github.com/users/rseward/repos", "events_url": "https://api.github.com/users/rseward/events{/privacy}", "received_events_url": "https://api.github.com/users/rseward/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-08-24T02:49:56Z", "updated_at": "2013-08-25T18:43:24Z", "closed_at": "2013-08-25T18:43:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I receive the above exception when issuing a get request for a key \"groovy-1\" inserted by a Java client.\n\nThe key in question (inserted by a Java client) that causes a problem.\n\necho \"get key groovy-1\" | nc 127.0.0.1  11211\nVALUE groovy-1 32 13\n1377311483802\nEND\n\nDoes a flag value of \"32\" affect this python client's ability to read the value?\n\nThank you for looking into the matter.\n\nThe code that causes the Exception is as follows:\n\n```\n#!/usr/bin/env python\n\nimport memcache\n\nmc = memcache.Client( [ '127.0.0.1:11211'] )\n\n# access a non-existent key in memcache, should throw\n# UnboundLocalError: local variable 'val' referenced before assignment\n# At least that exception is thrown for me using python_memcached-1.48-py2.7.egg\n#    installed using easy_install on Aug 23rd 2013.\n\nprint \"groovy-1 = %s\" % mc.get( \"groovy-1\" )\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/13", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/13/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/13/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/13", "id": 17924305, "node_id": "MDU6SXNzdWUxNzkyNDMwNQ==", "number": 13, "title": "Changing SERVER_MAX_VALUE_SIZE doesn't work", "user": {"login": "alexf101", "id": 2832017, "node_id": "MDQ6VXNlcjI4MzIwMTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2832017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexf101", "html_url": "https://github.com/alexf101", "followers_url": "https://api.github.com/users/alexf101/followers", "following_url": "https://api.github.com/users/alexf101/following{/other_user}", "gists_url": "https://api.github.com/users/alexf101/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexf101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexf101/subscriptions", "organizations_url": "https://api.github.com/users/alexf101/orgs", "repos_url": "https://api.github.com/users/alexf101/repos", "events_url": "https://api.github.com/users/alexf101/events{/privacy}", "received_events_url": "https://api.github.com/users/alexf101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2013-08-12T04:57:32Z", "updated_at": "2014-09-10T20:09:45Z", "closed_at": "2013-08-12T14:53:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Apparently, changing the value of server_max_value_length in the memcache module does NOT change the value inherited by the clients.\n\nFrom looking at the source, I can not for the life of me figure out why!\n\nThis example was run on Ubuntu 13.04, and I've also observed it on a remote machine running Ubuntu 12.04 (on Amazon cloud).\n\n``` python\nPython 2.7.4 (default, Apr 19 2013, 18:28:01) \n[GCC 4.7.3] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import memcache\n>>> memcache.SERVER_MAX_VALUE_LENGTH\n1048576\n>>> memcache.SERVER_MAX_VALUE_LENGTH *= 10\n>>> memcache.SERVER_MAX_VALUE_LENGTH\n10485760\n>>> c = memcache.Client(['localhost'])\n>>> c.server_max_value_length\n1048576\n>>> memcache.SERVER_MAX_VALUE_LENGTH\n10485760\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/12", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/12/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/12/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/12", "id": 16689605, "node_id": "MDU6SXNzdWUxNjY4OTYwNQ==", "number": 12, "title": "Installation of PyPI package is really slow.", "user": {"login": "vdboor", "id": 200303, "node_id": "MDQ6VXNlcjIwMDMwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/200303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vdboor", "html_url": "https://github.com/vdboor", "followers_url": "https://api.github.com/users/vdboor/followers", "following_url": "https://api.github.com/users/vdboor/following{/other_user}", "gists_url": "https://api.github.com/users/vdboor/gists{/gist_id}", "starred_url": "https://api.github.com/users/vdboor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vdboor/subscriptions", "organizations_url": "https://api.github.com/users/vdboor/orgs", "repos_url": "https://api.github.com/users/vdboor/repos", "events_url": "https://api.github.com/users/vdboor/events{/privacy}", "received_events_url": "https://api.github.com/users/vdboor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2013-07-12T16:14:46Z", "updated_at": "2013-07-19T19:29:39Z", "closed_at": "2013-07-17T19:33:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Installing python-memcached over PyPI takes ages.\n\nI suspect some _url configuration_ on the PyPI package causes this.\nCould you fix this issue?\n\nBelow is my console output for debugging this:\n\n```\n$ pypi-show-urls -v -p python-memcached \n\nDownload candidates for python-memcached\n========================================\n\n  Candidates from https://pypi.python.org/simple/python-memcached/\n  ----------------------------------------------------------------\n    https://pypi.python.org/packages/source/p/python-memcached/python-memcached-1.51.tar.gz#md5=580603a82b7078642ed18ea000f825c5\n    https://pypi.python.org/packages/source/p/python-memcached/python-memcached-1.48.tar.gz#md5=58f8c328304df6aca1f8b60170e98932\n    https://pypi.python.org/packages/source/p/python-memcached/python-memcached-1.31.tar.gz#md5=e1de1fa7d504bb9ce0f9e295fd77adb0\n    https://pypi.python.org/packages/source/p/python-memcached/python-memcached-1.47.tar.gz#md5=e4e9d65e5721a1bb01f8d657ddf3f03e\n    https://pypi.python.org/packages/source/p/python-memcached/python-memcached-1.53.tar.gz#md5=89570d26e7e7b15caa668a6b2678bd3c\n    https://pypi.python.org/packages/source/p/python-memcached/python-memcached-1.52.tar.gz#md5=b80e2d024470e9baf693d016c9e96d6a\n    ftp://ftp.tummy.com/pub/python-memcached/old-releases/python-memcached-1.45.tar.gz\n    http://ftp.tummy.com/pub/python-memcached/old-releases/python-memcached-1.46.tar.gz\n    ftp://ftp.tummy.com/pub/python-memcached/old-releases/python-memcached-1.44.tar.gz\n    ftp://ftp.tummy.com/pub/python-memcached/old-releases/python-memcached-1.43.tar.gz\n    ftp://ftp.tummy.com/pub/python-memcached/old-releases/python-memcached-1.38.tar.gz\n    ftp://ftp.tummy.com/pub/python-memcached/old-releases/python-memcached-1.41.tar.gz\n    ftp://ftp.tummy.com/pub/python-memcached/old-releases/python-memcached-1.42.tar.gz\n    http://ftp.tummy.com/pub/python-memcached/old-releases/python-memcached-1.47.tar.gz\n    ftp://ftp.tummy.com/pub/python-memcached/old-releases/python-memcached-1.40.tar.gz\n    ftp://ftp.tummy.com/pub/python-memcached/old-releases/python-memcached-latest.tar.gz\n    http://ftp.tummy.com/pub/python-memcached/old-releases/python-memcached-1.48.tar.gz\n\n  Candidates from http://www.tummy.com/Community/software/python-memcached/\n  -------------------------------------------------------------------------\n    ftp://ftp.tummy.com/pub/python-memcached/python-memcached-latest.tar.gz\n\n  Versions only available externally\n  ----------------------------------\n    1.38\n    1.42\n    1.45\n    1.44\n    1.46\n    1.41\n    1.40\n    1.43\n    latest\n\n\n$ pip install -vUI python-memcached\nDownloading/unpacking python-memcached\n  Could not fetch URL ftp://ftp.tummy.com/pub/python-memcached/old-releases/python-memcached-latest.tar.gz (from http://f.pypi.python.org/simple/python-memcached/): <urlopen error ftp error: [Errno ftp error] 550 Failed to change directory.>\n  Will skip URL ftp://ftp.tummy.com/pub/python-memcached/old-releases/python-memcached-latest.tar.gz when looking for download links for python-memcached\n  Using version 1.53 (newest of versions: 1.53, 1.52, 1.51, 1.48, 1.48, 1.47, 1.47, 1.46, 1.45, 1.44, 1.43, 1.42, 1.41, 1.40, 1.38, 1.31, latest, latest)\n  Using download cache from /Users/diederik/Library/Caches/pip-downloads/http%3A%2F%2Ff.pypi.python.org%2Fpackages%2Fsource%2Fp%2Fpython-memcached%2Fpython-memcached-1.53.tar.gz\n  Running setup.py egg_info for package python-memcached\n    running egg_info\n    creating pip-egg-info/python_memcached.egg-info\n    writing pip-egg-info/python_memcached.egg-info/PKG-INFO\n    writing top-level names to pip-egg-info/python_memcached.egg-info/top_level.txt\n    writing dependency_links to pip-egg-info/python_memcached.egg-info/dependency_links.txt\n    writing manifest file 'pip-egg-info/python_memcached.egg-info/SOURCES.txt'\n    warning: manifest_maker: standard file '-c' not found\n\n    reading manifest file 'pip-egg-info/python_memcached.egg-info/SOURCES.txt'\n    reading manifest template 'MANIFEST.in'\n    warning: no files found matching '*.rst'\n    warning: no files found matching '*.txt'\n    warning: no files found matching 'MakeFile'\n    warning: no previously-included files matching '*.pyc' found anywhere in distribution\n    warning: no previously-included files matching '.gitignore' found anywhere in distribution\n    warning: no previously-included files matching '.DS_Store' found anywhere in distribution\n    writing manifest file 'pip-egg-info/python_memcached.egg-info/SOURCES.txt'\nInstalling collected packages: python-memcached\n  Found existing installation: python-memcached 1.53\n    Uninstalling python-memcached:\n      Removing file or directory /Users/diederik/Sites/virtualenvs/demo-env/lib/python2.7/site-packages/memcache.py\n      Removing file or directory /Users/diederik/Sites/virtualenvs/demo-env/lib/python2.7/site-packages/memcache.pyc\n      Removing file or directory /Users/diederik/Sites/virtualenvs/demo-env/lib/python2.7/site-packages/python_memcached-1.53-py2.7.egg-info\n      Successfully uninstalled python-memcached\n  Running setup.py install for python-memcached\n    running install\n    running build\n    running build_py\n    creating build\n    creating build/lib\n    copying memcache.py -> build/lib\n    running install_lib\n    copying build/lib/memcache.py -> /Users/diederik/Sites/virtualenvs/demo-env/lib/python2.7/site-packages\n    byte-compiling /Users/diederik/Sites/virtualenvs/demo-env/lib/python2.7/site-packages/memcache.py to memcache.pyc\n    running install_egg_info\n    running egg_info\n    writing python_memcached.egg-info/PKG-INFO\n    writing top-level names to python_memcached.egg-info/top_level.txt\n    writing dependency_links to python_memcached.egg-info/dependency_links.txt\n    warning: manifest_maker: standard file '-c' not found\n\n    reading manifest file 'python_memcached.egg-info/SOURCES.txt'\n    reading manifest template 'MANIFEST.in'\n    warning: no files found matching '*.rst'\n    warning: no files found matching '*.txt'\n    warning: no files found matching 'MakeFile'\n    warning: no previously-included files matching '*.pyc' found anywhere in distribution\n    warning: no previously-included files matching '.gitignore' found anywhere in distribution\n    warning: no previously-included files matching '.DS_Store' found anywhere in distribution\n    writing manifest file 'python_memcached.egg-info/SOURCES.txt'\n    Copying python_memcached.egg-info to /Users/diederik/Sites/virtualenvs/demo-env/lib/python2.7/site-packages/python_memcached-1.53-py2.7.egg-info\n    running install_scripts\n    writing list of installed files to '/var/folders/24/5y_gshzd7vg9f5mv_hpxf1y40000gn/T/pip-JNRJb5-record/install-record.txt'\nSuccessfully installed python-memcached\nCleaning up...\n  Removing temporary dir /Users/diederik/Sites/virtualenvs/demo-env/build...\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/11", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/11/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/11/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/11", "id": 16678926, "node_id": "MDU6SXNzdWUxNjY3ODkyNg==", "number": 11, "title": "local variable 'val' referenced before assignment", "user": {"login": "dazoot", "id": 1543455, "node_id": "MDQ6VXNlcjE1NDM0NTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1543455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dazoot", "html_url": "https://github.com/dazoot", "followers_url": "https://api.github.com/users/dazoot/followers", "following_url": "https://api.github.com/users/dazoot/following{/other_user}", "gists_url": "https://api.github.com/users/dazoot/gists{/gist_id}", "starred_url": "https://api.github.com/users/dazoot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dazoot/subscriptions", "organizations_url": "https://api.github.com/users/dazoot/orgs", "repos_url": "https://api.github.com/users/dazoot/repos", "events_url": "https://api.github.com/users/dazoot/events{/privacy}", "received_events_url": "https://api.github.com/users/dazoot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "linsomniac", "id": 466380, "node_id": "MDQ6VXNlcjQ2NjM4MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/466380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linsomniac", "html_url": "https://github.com/linsomniac", "followers_url": "https://api.github.com/users/linsomniac/followers", "following_url": "https://api.github.com/users/linsomniac/following{/other_user}", "gists_url": "https://api.github.com/users/linsomniac/gists{/gist_id}", "starred_url": "https://api.github.com/users/linsomniac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linsomniac/subscriptions", "organizations_url": "https://api.github.com/users/linsomniac/orgs", "repos_url": "https://api.github.com/users/linsomniac/repos", "events_url": "https://api.github.com/users/linsomniac/events{/privacy}", "received_events_url": "https://api.github.com/users/linsomniac/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "linsomniac", "id": 466380, "node_id": "MDQ6VXNlcjQ2NjM4MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/466380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linsomniac", "html_url": "https://github.com/linsomniac", "followers_url": "https://api.github.com/users/linsomniac/followers", "following_url": "https://api.github.com/users/linsomniac/following{/other_user}", "gists_url": "https://api.github.com/users/linsomniac/gists{/gist_id}", "starred_url": "https://api.github.com/users/linsomniac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linsomniac/subscriptions", "organizations_url": "https://api.github.com/users/linsomniac/orgs", "repos_url": "https://api.github.com/users/linsomniac/repos", "events_url": "https://api.github.com/users/linsomniac/events{/privacy}", "received_events_url": "https://api.github.com/users/linsomniac/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2013-07-12T12:21:37Z", "updated_at": "2013-08-11T04:06:27Z", "closed_at": "2013-08-11T04:06:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "From time to time when getting some data from memcache i get this error:\n\nERR = local variable 'val' referenced before assignment\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/10", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/10/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/10/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/10", "id": 15641854, "node_id": "MDU6SXNzdWUxNTY0MTg1NA==", "number": 10, "title": "Sporadic KeyError when using get_multi", "user": {"login": "jamesonjlee", "id": 698668, "node_id": "MDQ6VXNlcjY5ODY2OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/698668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesonjlee", "html_url": "https://github.com/jamesonjlee", "followers_url": "https://api.github.com/users/jamesonjlee/followers", "following_url": "https://api.github.com/users/jamesonjlee/following{/other_user}", "gists_url": "https://api.github.com/users/jamesonjlee/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesonjlee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesonjlee/subscriptions", "organizations_url": "https://api.github.com/users/jamesonjlee/orgs", "repos_url": "https://api.github.com/users/jamesonjlee/repos", "events_url": "https://api.github.com/users/jamesonjlee/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesonjlee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-06-17T16:20:21Z", "updated_at": "2015-04-17T08:26:03Z", "closed_at": "2013-06-17T23:59:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n# some web code here\n# keys = [key, key+'_queued']\n File \"./services/cache.py\", line 33, in mget\n    results = self.get_multi(keys)\n  File \"/var/www/heydayserver/env/local/lib/python2.7/site-packages/memcache.py\", line 972, in get_multi\n    retvals[prefixed_to_orig_key[rkey]] = val   # un-prefix returned key.\nKeyError: '-34.9832:146.2685_queued'\n```\n\nI am not sure why this is happening though, all I use the memcache for is to store json strings with keys.  It happens sporadically, around redeploy of a Flask server.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/8", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/8/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/8/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/8", "id": 14976352, "node_id": "MDU6SXNzdWUxNDk3NjM1Mg==", "number": 8, "title": "set_multi() raises AttributeError if connection is closed between readline() calls", "user": {"login": "benhoyt", "id": 999033, "node_id": "MDQ6VXNlcjk5OTAzMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/999033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benhoyt", "html_url": "https://github.com/benhoyt", "followers_url": "https://api.github.com/users/benhoyt/followers", "following_url": "https://api.github.com/users/benhoyt/following{/other_user}", "gists_url": "https://api.github.com/users/benhoyt/gists{/gist_id}", "starred_url": "https://api.github.com/users/benhoyt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benhoyt/subscriptions", "organizations_url": "https://api.github.com/users/benhoyt/orgs", "repos_url": "https://api.github.com/users/benhoyt/repos", "events_url": "https://api.github.com/users/benhoyt/events{/privacy}", "received_events_url": "https://api.github.com/users/benhoyt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2013-05-31T05:18:22Z", "updated_at": "2013-06-09T21:34:08Z", "closed_at": "2013-06-07T08:02:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "We ran into an issue on our live memcached servers where `set_multi()` was raising an error like the following (this is test code, but it was basically the same traceback):\n\n```\nTraceback (most recent call last):\n  File \"C:\\dev\\main\\python\\test\\setmultibug.py\", line 41, in <module>\n    main()\n  File \"C:\\dev\\main\\python\\test\\setmultibug.py\", line 37, in main\n    bad_keys = client.set_multi(mapping)\n  File \"C:\\dev\\main\\tools\\python\\modules\\memcache.py\", line 735, in set_multi\n    line = server.readline()\n  File \"C:\\dev\\main\\tools\\python\\modules\\memcache.py\", line 1163, in readline\n    recv = self.socket.recv\nAttributeError: 'NoneType' object has no attribute 'recv'\n```\n\nI'm not sure the root cause of the connection issue in our case, but it shouldn't cause an AttributeError -- it should mark the server dead and move along. What I believe is happening is the connection was being forcibly closed between `readline()` calls when reading the per-key responses in `set_multi()`.\n\n`readline()` actually handles this case with its `if not data: ...` clause, but it does it by calling `self.close_socket()` directly, which sets `self.socket = None`.\n\nHere's a test program that stubs out `socket.socket` to pretend it closed the connection between recv() calls to repro the issue:\n\n``` python\n\"\"\"Repro memcache set_multi() AttributeError:\nAttributeError: 'NoneType' object has no attribute 'recv'\n\"\"\"\n\nimport socket\n\nimport memcache\n\nRECV_CHUNKS = ['chunk1']\n\nclass FakeSocket(object):\n    def __init__(self, *args):\n        print 'FakeSocket{0!r}'.format(args)\n        self._recv_chunks = list(RECV_CHUNKS)\n\n    def connect(self, *args):\n        print 'FakeSocket.connect{0!r}'.format(args)\n\n    def sendall(self, *args):\n        print 'FakeSocket.sendall{0!r}'.format(args)\n\n    def recv(self, *args):\n        if self._recv_chunks:\n            data = self._recv_chunks.pop(0)\n        else:\n            data = ''\n        print 'FakeSocket.recv{0!r} -> {1!r}'.format(args, data)\n        return data\n\n    def close(self):\n        print 'FakeSocket.close()'\n\ndef main():\n    socket.socket = FakeSocket\n    client = memcache.Client(['memcached'], debug=True)\n    mapping = {'foo': 'FOO', 'bar': 'BAR'}\n    bad_keys = client.set_multi(mapping)\n    print 'set_multi({0!r}) -> {1!r}'.format(mapping, bad_keys)\n\nif __name__ == '__main__':\n    main()\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/5", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/5/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/5/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/5", "id": 14001713, "node_id": "MDU6SXNzdWUxNDAwMTcxMw==", "number": 5, "title": "No such file README.md in Version 1.50", "user": {"login": "kraiz", "id": 634934, "node_id": "MDQ6VXNlcjYzNDkzNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/634934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kraiz", "html_url": "https://github.com/kraiz", "followers_url": "https://api.github.com/users/kraiz/followers", "following_url": "https://api.github.com/users/kraiz/following{/other_user}", "gists_url": "https://api.github.com/users/kraiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/kraiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kraiz/subscriptions", "organizations_url": "https://api.github.com/users/kraiz/orgs", "repos_url": "https://api.github.com/users/kraiz/repos", "events_url": "https://api.github.com/users/kraiz/events{/privacy}", "received_events_url": "https://api.github.com/users/kraiz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-05-06T13:51:57Z", "updated_at": "2013-08-05T04:08:44Z", "closed_at": "2013-05-06T21:35:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n$ pip install python-memcached==1.50\nDownloading/unpacking python-memcached==1.50\n  Running setup.py egg_info for package python-memcached\n    Traceback (most recent call last):\n      File \"<string>\", line 14, in <module>\n      File \"/home/lakr/.venv/mtk_1.5/build/python-memcached/setup.py\", line 9, in <module>\n        long_description=open(\"README.md\").read(),\n    IOError: [Errno 2] No such file or directory: 'README.md'\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n\n  File \"<string>\", line 14, in <module>\n\n  File \"/home/lakr/.venv/mtk_1.5/build/python-memcached/setup.py\", line 9, in <module>\n\n    long_description=open(\"README.md\").read(),\n\nIOError: [Errno 2] No such file or directory: 'README.md'\n\n----------------------------------------\nCommand python setup.py egg_info failed with error code 1 in /home/lakr/.venv/mtk_1.5/build/python-memcached\nStoring complete log in /home/lakr/.pip/pip.log\n```\n\nGet this when installing via pypi. Surely related to 17fc5255701844800902f15e8123f56128038f3c.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/4", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/4/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/4/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/4", "id": 13920717, "node_id": "MDU6SXNzdWUxMzkyMDcxNw==", "number": 4, "title": "Speed up gets/sets by 30% by simplifying check_key", "user": {"login": "benhoyt", "id": 999033, "node_id": "MDQ6VXNlcjk5OTAzMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/999033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benhoyt", "html_url": "https://github.com/benhoyt", "followers_url": "https://api.github.com/users/benhoyt/followers", "following_url": "https://api.github.com/users/benhoyt/following{/other_user}", "gists_url": "https://api.github.com/users/benhoyt/gists{/gist_id}", "starred_url": "https://api.github.com/users/benhoyt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benhoyt/subscriptions", "organizations_url": "https://api.github.com/users/benhoyt/orgs", "repos_url": "https://api.github.com/users/benhoyt/repos", "events_url": "https://api.github.com/users/benhoyt/events{/privacy}", "received_events_url": "https://api.github.com/users/benhoyt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2013-05-03T03:42:52Z", "updated_at": "2013-05-06T13:30:57Z", "closed_at": "2013-05-06T13:30:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't know if anyone's profiled where memcache.py is spending most of its time, but in my recent benchmarks, cProfile tells me it was spending far and away most of its time in check_key(). This is quite sad, as once you've tested your code, you're not going to be sending through bad keys, so these expensive checks are basically worthless in production.\n\nThe most expensive check is looping through all the chars in the key, calling ord(c), and ensuring each char is not a control character. This is the most expensive check, and also the least likely to actually happen in practice (in my experience it's very rare to build a key containing control chars).\n\n**I'm using a subclass of memcache.Client that overrides check_key() and speeds up my multi_get/multi_set benchmark by literally 30%.** I still perform the most basic sanity checks on the key:\n\n```\nclass Client(memcache.Client):\n    def check_key(self, key, key_extra_len=0):\n        assert key, \"Can't use None or empty string as key\"\n        assert isinstance(key, str), 'Keys must be str instances'\n```\n\nEven eliminating the `for char in key:` loop gets you 80% of this speed improvement.\n\nWhat about an option to the Client() constructor check_keys that bypasses what's now check_key(), or just performs the basic checks I show above? It could be check_keys=True by default to emulate current behaviour.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/3", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/3/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/3/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/3", "id": 13679466, "node_id": "MDU6SXNzdWUxMzY3OTQ2Ng==", "number": 3, "title": "Release management confusion", "user": {"login": "saschpe", "id": 115275, "node_id": "MDQ6VXNlcjExNTI3NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/115275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saschpe", "html_url": "https://github.com/saschpe", "followers_url": "https://api.github.com/users/saschpe/followers", "following_url": "https://api.github.com/users/saschpe/following{/other_user}", "gists_url": "https://api.github.com/users/saschpe/gists{/gist_id}", "starred_url": "https://api.github.com/users/saschpe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saschpe/subscriptions", "organizations_url": "https://api.github.com/users/saschpe/orgs", "repos_url": "https://api.github.com/users/saschpe/repos", "events_url": "https://api.github.com/users/saschpe/events{/privacy}", "received_events_url": "https://api.github.com/users/saschpe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-04-26T09:07:35Z", "updated_at": "2013-05-06T13:31:27Z", "closed_at": "2013-05-06T13:31:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there, I am a bit confused about the current latest release on PyPI (1.31) whereas I used to package 1.47 (https://pypi.python.org/pypi/python-memcached/1.47) for openSUSE. However, it seems like the contents of 1.31 is newer than 1.47. The issue here is that distributions already packaged and ship 1.47 (or 1.48) and downgrading would be a huge pain (involving RPM epoch). Also, when comparing both versions, 1.467has more than 100000 downloads compared to ~500 of 1.37. So I suspect we're not the only ones hitting this issue.\n\nSo first of all thank you for taking over maintainership of this module. But in order to solve the issue, could you please create a release with a more appropriate version number? Maybe a 2.0 is appropriate even ;-)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/linsomniac/python-memcached/issues/2", "repository_url": "https://api.github.com/repos/linsomniac/python-memcached", "labels_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/2/comments", "events_url": "https://api.github.com/repos/linsomniac/python-memcached/issues/2/events", "html_url": "https://github.com/linsomniac/python-memcached/issues/2", "id": 13327437, "node_id": "MDU6SXNzdWUxMzMyNzQzNw==", "number": 2, "title": "Python 3 support", "user": {"login": "w-diesel", "id": 4037704, "node_id": "MDQ6VXNlcjQwMzc3MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4037704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/w-diesel", "html_url": "https://github.com/w-diesel", "followers_url": "https://api.github.com/users/w-diesel/followers", "following_url": "https://api.github.com/users/w-diesel/following{/other_user}", "gists_url": "https://api.github.com/users/w-diesel/gists{/gist_id}", "starred_url": "https://api.github.com/users/w-diesel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/w-diesel/subscriptions", "organizations_url": "https://api.github.com/users/w-diesel/orgs", "repos_url": "https://api.github.com/users/w-diesel/repos", "events_url": "https://api.github.com/users/w-diesel/events{/privacy}", "received_events_url": "https://api.github.com/users/w-diesel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2013-04-18T01:06:11Z", "updated_at": "2014-07-08T05:22:10Z", "closed_at": "2013-04-18T10:23:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\nI ran code via  2to3 tool and it seems quite simple to port it. Maybe you have some thoughts about it, what Python versions might be supported?\n", "performed_via_github_app": null, "score": 1.0}]}