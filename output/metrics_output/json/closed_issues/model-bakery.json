{"total_count": 30, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/91", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/91/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/91/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/91", "id": 664209410, "node_id": "MDU6SXNzdWU2NjQyMDk0MTA=", "number": 91, "title": "Support for choices parameter in TextField", "user": {"login": "cnarain", "id": 702405, "node_id": "MDQ6VXNlcjcwMjQwNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/702405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cnarain", "html_url": "https://github.com/cnarain", "followers_url": "https://api.github.com/users/cnarain/followers", "following_url": "https://api.github.com/users/cnarain/following{/other_user}", "gists_url": "https://api.github.com/users/cnarain/gists{/gist_id}", "starred_url": "https://api.github.com/users/cnarain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cnarain/subscriptions", "organizations_url": "https://api.github.com/users/cnarain/orgs", "repos_url": "https://api.github.com/users/cnarain/repos", "events_url": "https://api.github.com/users/cnarain/events{/privacy}", "received_events_url": "https://api.github.com/users/cnarain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-23T05:19:02Z", "updated_at": "2020-07-23T05:22:17Z", "closed_at": "2020-07-23T05:22:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Short summary.\r\n\r\n## Expected behavior\r\n\r\nIf the `choices` argument is specified on a TextField, Model Bakery should pick from a random valid choice for the field.\r\n\r\n## Actual behavior\r\n\r\nModel Bakery skips TextFields with `choices` resulting a database IntegrityError:\r\n\r\n`django.db.utils.IntegrityError: null value in column \"status\" violates not-null constraint`\r\n\r\n## Reproduction Steps\r\n\r\nHow to reproduce this issue.\r\n\r\n```\r\nmodels.py\r\nfrom django.db import models\r\n\r\nclass OrderStatus(models.TextChoices):\r\n    CANCELLED = \"CANCELLED\"\r\n    DELIVERED = \"DELIVERED\"\r\n\r\nclass Order(models.Model):\r\n      status = models.TextField(choices=OrderStatus.choices, default=None)\r\n```\r\n```\r\ntest.py\r\nfrom model_bakery import baker\r\nfrom models import Order\r\norder = baker.make(Order)\r\n```\r\n\r\n### Versions\r\n\r\nPython: 3.8.2\r\nDjango: 3.0.7\r\nModel Bakery: 1.1.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/83", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/83/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/83/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/83", "id": 642310603, "node_id": "MDU6SXNzdWU2NDIzMTA2MDM=", "number": 83, "title": "Support for form fields", "user": {"login": "jayvdb", "id": 15092, "node_id": "MDQ6VXNlcjE1MDky", "avatar_url": "https://avatars1.githubusercontent.com/u/15092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayvdb", "html_url": "https://github.com/jayvdb", "followers_url": "https://api.github.com/users/jayvdb/followers", "following_url": "https://api.github.com/users/jayvdb/following{/other_user}", "gists_url": "https://api.github.com/users/jayvdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayvdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayvdb/subscriptions", "organizations_url": "https://api.github.com/users/jayvdb/orgs", "repos_url": "https://api.github.com/users/jayvdb/repos", "events_url": "https://api.github.com/users/jayvdb/events{/privacy}", "received_events_url": "https://api.github.com/users/jayvdb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-20T05:07:22Z", "updated_at": "2020-06-23T13:55:28Z", "closed_at": "2020-06-23T13:55:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently model-bakery seems to mostly support db fields.\r\n\r\nWould it be ok to also add support for form fields, specifically ChoiceField?\r\n\r\nThe use case is explained at https://github.com/alsur/django-admin-auto-tests/issues/6, which is using model bakery (c.f. https://github.com/alsur/django-admin-auto-tests/pull/4) to populate admin forms for smoke tests.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/81", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/81/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/81/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/81", "id": 638219085, "node_id": "MDU6SXNzdWU2MzgyMTkwODU=", "number": 81, "title": "Support postgres date range fields", "user": {"login": "berinhard", "id": 238223, "node_id": "MDQ6VXNlcjIzODIyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/238223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berinhard", "html_url": "https://github.com/berinhard", "followers_url": "https://api.github.com/users/berinhard/followers", "following_url": "https://api.github.com/users/berinhard/following{/other_user}", "gists_url": "https://api.github.com/users/berinhard/gists{/gist_id}", "starred_url": "https://api.github.com/users/berinhard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berinhard/subscriptions", "organizations_url": "https://api.github.com/users/berinhard/orgs", "repos_url": "https://api.github.com/users/berinhard/repos", "events_url": "https://api.github.com/users/berinhard/events{/privacy}", "received_events_url": "https://api.github.com/users/berinhard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-13T19:39:07Z", "updated_at": "2020-07-21T18:52:06Z", "closed_at": "2020-07-21T18:52:06Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently model bakery does not support postgres' range fields [DateRangeField](https://docs.djangoproject.com/en/3.0/ref/contrib/postgres/fields/#daterangefield) and [DatetimeRangeField](https://docs.djangoproject.com/en/3.0/ref/contrib/postgres/fields/#datetimerangefield).\r\n\r\nIn #80 I've added support to the numeric range fields, but the date/datetime ones are still missing.\r\n\r\n## Expected behavior\r\n\r\nModel bakery should create random values for models with fields as `django.contrib.postgres.fields.DateRangeField` or `django.contrib.postgres.fields.DatetimeRangeField`.\r\n\r\n## Actual behavior\r\n\r\nThe following error is being raised:\r\n\r\n```\r\nTypeError: <class 'django.contrib.postgres.fields.ranges.DateRangeField'> is not supported by baker.\r\n```\r\n\r\n## Reproduction Steps\r\n\r\nHow to reproduce this issue.\r\n\r\n1. Add `DateRangeField` and `DatetimeRangeField` as new fields in our [test model](https://github.com/model-bakers/model_bakery/blob/master/tests/generic/models.py#L71);\r\n2. The tests will start to fail with the given `TypeError` exception;\r\n\r\n### Versions\r\n\r\nPython: 3.8\r\nDjango: 3.0\r\nModel Bakery: 1.1.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/75", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/75/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/75/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/75", "id": 630830808, "node_id": "MDU6SXNzdWU2MzA4MzA4MDg=", "number": 75, "title": "Enable seq to be imported from baker", "user": {"login": "radwon", "id": 3501229, "node_id": "MDQ6VXNlcjM1MDEyMjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3501229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/radwon", "html_url": "https://github.com/radwon", "followers_url": "https://api.github.com/users/radwon/followers", "following_url": "https://api.github.com/users/radwon/following{/other_user}", "gists_url": "https://api.github.com/users/radwon/gists{/gist_id}", "starred_url": "https://api.github.com/users/radwon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/radwon/subscriptions", "organizations_url": "https://api.github.com/users/radwon/orgs", "repos_url": "https://api.github.com/users/radwon/repos", "events_url": "https://api.github.com/users/radwon/events{/privacy}", "received_events_url": "https://api.github.com/users/radwon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-04T13:35:07Z", "updated_at": "2020-06-14T15:10:50Z", "closed_at": "2020-06-14T15:10:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I think it would be useful to also enable the seq() function to be imported from the baker module like it is in the recipe module so that it can be used as baker.seq() if preferred or to avoid namespace issues.\r\n\r\nThe current import can be left in place for backwards compatibility or to continue importing seq as before.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/74", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/74/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/74/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/74", "id": 629193545, "node_id": "MDU6SXNzdWU2MjkxOTM1NDU=", "number": 74, "title": "baker.make only creates value for username on Django's User model ", "user": {"login": "mazulo", "id": 1661112, "node_id": "MDQ6VXNlcjE2NjExMTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1661112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mazulo", "html_url": "https://github.com/mazulo", "followers_url": "https://api.github.com/users/mazulo/followers", "following_url": "https://api.github.com/users/mazulo/following{/other_user}", "gists_url": "https://api.github.com/users/mazulo/gists{/gist_id}", "starred_url": "https://api.github.com/users/mazulo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mazulo/subscriptions", "organizations_url": "https://api.github.com/users/mazulo/orgs", "repos_url": "https://api.github.com/users/mazulo/repos", "events_url": "https://api.github.com/users/mazulo/events{/privacy}", "received_events_url": "https://api.github.com/users/mazulo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-02T13:14:28Z", "updated_at": "2020-06-16T11:07:31Z", "closed_at": "2020-06-13T18:03:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Short summary.\r\nI'm not sure if I'm missing something, and please let me know if I am, but whenever I create a user with `baker.make` it creates a user but only `username` has value in it. I'd expect `.make` to generate values for the other fields it supports, like `EmailField`.\r\n\r\n## Expected behavior\r\n\r\n`baker.make(User)` would create random values for all fields it supports, including `EmailField`.\r\n\r\n## Actual behavior\r\n\r\nIt doesn't create an `email` value for the user.\r\n\r\n\r\n## Reproduction Steps\r\n\r\nHow to reproduce this issue.\r\n\r\n```bash\r\nIn [1]: from model_bakery import baker                                                                                                                                                                                                                                                            \r\n\r\nIn [2]: from django.contrib.auth.models import User                                                                                                                                                                                                                                               \r\n\r\nIn [3]: user = baker.make(User)                                                                                                                                                                                                                                                                   \r\n\r\nIn [4]: user.email                                                                                                                                                                                                                                                                                \r\nOut[4]: ''\r\n\r\nIn [5]: user.username                                                                                                                                                                                                                                                                             \r\nOut[5]: 'tGIavQwgHZslfbKYWZlhJQOmo [truncated]'\r\n\r\nIn [6]: user.first_name                                                                                                                                                                                                                                                                           \r\nOut[6]: ''\r\n\r\nIn [7]: user.last_name                                                                                                                                                                                                                                                                            \r\nOut[7]: ''\r\n```\r\n\r\n### Versions\r\n\r\nPython: 3.6.9\r\nDjango: 1.11.29\r\nModel Bakery: 1.1.0\r\n\r\nAlso tested on\r\n\r\n### Versions\r\n\r\nPython: 3.8.3\r\nDjango: 3.0.6\r\nModel Bakery: 1.1.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/73", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/73/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/73/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/73", "id": 625110683, "node_id": "MDU6SXNzdWU2MjUxMTA2ODM=", "number": 73, "title": "More information about the model mommy rename", "user": {"login": "berinhard", "id": 238223, "node_id": "MDQ6VXNlcjIzODIyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/238223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berinhard", "html_url": "https://github.com/berinhard", "followers_url": "https://api.github.com/users/berinhard/followers", "following_url": "https://api.github.com/users/berinhard/following{/other_user}", "gists_url": "https://api.github.com/users/berinhard/gists{/gist_id}", "starred_url": "https://api.github.com/users/berinhard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berinhard/subscriptions", "organizations_url": "https://api.github.com/users/berinhard/orgs", "repos_url": "https://api.github.com/users/berinhard/repos", "events_url": "https://api.github.com/users/berinhard/events{/privacy}", "received_events_url": "https://api.github.com/users/berinhard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-26T18:54:21Z", "updated_at": "2020-05-26T18:56:39Z", "closed_at": "2020-05-26T18:56:38Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Today, an user who I'll remain anonymous, created an issue tittle **Naming, gender stereotypes etc** where he brought up a few questions about the project lib rename from model_mommy to model_bakery.\r\n\r\nAfter my comment, the person asked me to deleted the issue because he thought he had expressed his thoughts in a bad manner which could lead people to think he was against the fighting inequality. Since I don't want this project to become a place where people start to get judged by what they've once said in a hidden Github issue, I'm documenting my replies to his questions because I think they can be helpful if someone brings up the same discussion in the future.\r\n\r\n### Original content\r\nFrom @berinhard:\r\n\r\nHi ANON_USER, thanks for your comment. I'd like to reply to your questions making sure that my answers reflect only **my personal opinions** and they don't say anything about the other maintainers points of view.\r\n\r\n    How does the renaming of the project help to fight gender stereotypes in tech?\r\n\r\nI think that just the existence of this issue is an example of how it can help. This whole discussion won't even exist on this public space if we didn't rename the project and openly address it with the goal of to not reinforce gender stereotypes.\r\n\r\nBut, even so, I'm maybe not the best person to answer your question properly. Because, first of all, I identify myself as a man, so I don't suffer from any kind of prejudice based on my gender and, second, there are a lot of people who really study and debate this question deeper than I'll ever be able to. In the Python community, for example, Naomi Ceder is doing an **incredible** work on this direction. I highly recommend you to watch, at least, her talk [Antipatterns for Diversity](https://www.youtube.com/watch?v=kdl5odf-sMc) where she touches this gender stereotypes discussion. If you have time and interest, I also recommend you to watch [Farewell and Welcome Home: Python in Two Genders at PyCon 2014](https://www.youtube.com/watch?v=4R6FXtZl154&t=0s) where she talks from a more personal point of view about this and other topics.\r\n\r\nBut I can share with you my personal experience on this process. What I've seen and heard were a **a lot of complaints** from many people who I admire about the name of the lib. I've even had a very productive discussion about it when I submitted a talk to DjangoCon in 2015, if I'm not wrong about the year. There were also people coming to me and openly saying that they won't use the lib because of clients who were offended by the name and don't want it on their projects. So, even though I couldn't properly understand all the reasons behind it at the time, the reality was a single one: the project name sounds bad one for other people.\r\n\r\nI'm a very practical person and when I face the fact that things that I do can potentially harm other people, I just try to change my behavior to prevent this. Simple as that. I wasn't able to maintain the project anymore knowing this and I only had two possible outcomes: drop the project or propose other ways to evolve it. That's when @amureki and @anapaulagomes offered the help to maintain the project and that's when we started to work together on the rename and moved the repo from my personal Github account to this organization.\r\n\r\n    Are you sure the old project name was based on gender stereotypes in tech rather than biological roles?\r\n\r\nI'd be speculating if I answer you that and I'd prefer not to do so. I'm not the project creator and I can't talk about the old name decision. The person who created, a good friend of mine, is no longer maintaining the project and gave me free pass to any kind of project design decision at the time he left, including the project rename.\r\n\r\nAnyway, as I strongly refuses the idea of reducing people's genders to biological roles, [as many researchers also do](https://www.nytimes.com/2018/10/22/health/transgender-trump-biology.html), I can only think that the old project name reinforces gender stereotypes.\r\n\r\n    How come there's other maintained projects of the contributors that look even more stereotypical (grandma)? Are there any plans to rename them as well?\r\n\r\nThis question does not apply to model bakery or the rename discussion.\r\n\r\n    Do you think it would be a good idea to contact the creators of FactoryGirl and ObjectDaddy and ask them to rename their projects, too?\r\n\r\nI really like this idea, although I won't be the person to do so because maintaining model bakery and my other personal projects already consumes a lot the free time that I devote to free software contributions. If anyone else wants to do so and thinks that model bakery's rename is a good example to use, feel free to do so =)\r\n\r\n------------\r\n\r\nNow, ANON_USER since you've done a research on the contributors personal projects and profiles, I couldn't avoid doing the same with you. I noticed that this very elaborated issue is practically your only open activity in Github for the last 2 years, so I'm assuming this discussion is very important to you and I'm glad you've started it.\r\n\r\nBut, if you allow me to, I'd also like to invite you to have a more frequent open source activity on Github by not only creating issues, but also collaborating with the code itself. People spend a good amount of their personal time creating and maintaining projects so other people, like you and me, don't have to do so. Although this \"business model\" is not the ideal one, is the only one we have developed so far as open source development and I'd like to welcome you to help growing free software as well.\r\n\r\nI don't know how much time did you take to open this issue or to study our personal profiles, but I'd like to invite you to do the same with [our open issues](https://github.com/model-bakers/model_bakery/issues) and maybe help us to improve the project. For example, I really liked your critique about the `Kid` model in our docs. This is something that I didn't notice and can be improved. Feel free to open an issue and help us with that! \r\n\r\nIf you're not interested on helping with model bakery, please do so with other projects. Code contributions from new people are crucial for a better and more diverse free software development environment.\r\n\r\nI'm closing this issue since it won't result in any kind of change in the project's code base.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/72", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/72/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/72/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/72", "id": 624779584, "node_id": "MDU6SXNzdWU2MjQ3Nzk1ODQ=", "number": 72, "title": "DELETED", "user": {"login": "andr0s", "id": 298775, "node_id": "MDQ6VXNlcjI5ODc3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/298775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andr0s", "html_url": "https://github.com/andr0s", "followers_url": "https://api.github.com/users/andr0s/followers", "following_url": "https://api.github.com/users/andr0s/following{/other_user}", "gists_url": "https://api.github.com/users/andr0s/gists{/gist_id}", "starred_url": "https://api.github.com/users/andr0s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andr0s/subscriptions", "organizations_url": "https://api.github.com/users/andr0s/orgs", "repos_url": "https://api.github.com/users/andr0s/repos", "events_url": "https://api.github.com/users/andr0s/events{/privacy}", "received_events_url": "https://api.github.com/users/andr0s/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-26T10:32:57Z", "updated_at": "2020-05-26T18:56:00Z", "closed_at": "2020-05-26T15:12:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "The issue deleted by its creator ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/70", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/70/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/70/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/70", "id": 608763170, "node_id": "MDU6SXNzdWU2MDg3NjMxNzA=", "number": 70, "title": "DecimalRangeField support requested", "user": {"login": "elcolie", "id": 18206728, "node_id": "MDQ6VXNlcjE4MjA2NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18206728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolie", "html_url": "https://github.com/elcolie", "followers_url": "https://api.github.com/users/elcolie/followers", "following_url": "https://api.github.com/users/elcolie/following{/other_user}", "gists_url": "https://api.github.com/users/elcolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolie/subscriptions", "organizations_url": "https://api.github.com/users/elcolie/orgs", "repos_url": "https://api.github.com/users/elcolie/repos", "events_url": "https://api.github.com/users/elcolie/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-29T04:08:27Z", "updated_at": "2020-07-21T18:52:06Z", "closed_at": "2020-07-21T18:52:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "TypeError: <class 'django.contrib.postgres.fields.ranges.DecimalRangeField'> is not supported by baker.\r\n\r\n## Expected behavior\r\nBe able to get `instance`\r\n\r\nWhat you expected.\r\n`instance` is created\r\n\r\n## Actual behavior\r\nTypeError: <class 'django.contrib.postgres.fields.ranges.DecimalRangeField'> is not supported by baker.\r\n\r\n## Reproduction Steps\r\n1. `from django.contrib.postgres.fields import DecimalRangeField` as a header\r\n1.  Make a model with `DecimalRangeField()`\r\n1. `baker.make(MyModel, _quantity=20)`\r\n\r\n\r\n### Versions\r\n\r\nPython: 3.8.2\r\nDjango: django==3.0.5\r\nModel Bakery: model-bakery==1.1.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/66", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/66/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/66/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/66", "id": 568506173, "node_id": "MDU6SXNzdWU1Njg1MDYxNzM=", "number": 66, "title": "How does model_bakery handle computed properties?", "user": {"login": "lanshark", "id": 1121027, "node_id": "MDQ6VXNlcjExMjEwMjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1121027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lanshark", "html_url": "https://github.com/lanshark", "followers_url": "https://api.github.com/users/lanshark/followers", "following_url": "https://api.github.com/users/lanshark/following{/other_user}", "gists_url": "https://api.github.com/users/lanshark/gists{/gist_id}", "starred_url": "https://api.github.com/users/lanshark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lanshark/subscriptions", "organizations_url": "https://api.github.com/users/lanshark/orgs", "repos_url": "https://api.github.com/users/lanshark/repos", "events_url": "https://api.github.com/users/lanshark/events{/privacy}", "received_events_url": "https://api.github.com/users/lanshark/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-20T19:03:40Z", "updated_at": "2020-02-29T15:11:24Z", "closed_at": "2020-02-29T15:11:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Short summary.\r\n\r\nCan/Does model_bakery handle computed properties?\r\n\r\n## Expected behavior\r\n\r\nA model with computed properties is created, and calling that model to retrieve the computed property value returns the calculated data.\r\n\r\nWhat you expected.\r\n\r\nIF I have a model named \"Exam\" and it has a computed property (@property) 'status', which calculates a status based on values from another table, it should return the correct status.\r\n\r\n## Actual behavior\r\n\r\nI get a message that exam object has no attribute 'status'\r\n\r\n### Versions\r\n\r\nPython: 3.7.5\r\nDjango: 2.2\r\nModel Bakery: 1.0.2\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/63", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/63/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/63/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/63", "id": 558737428, "node_id": "MDU6SXNzdWU1NTg3Mzc0Mjg=", "number": 63, "title": "After update to 1.1.0 decimal fields is broken", "user": {"login": "last-partizan", "id": 301015, "node_id": "MDQ6VXNlcjMwMTAxNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/301015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/last-partizan", "html_url": "https://github.com/last-partizan", "followers_url": "https://api.github.com/users/last-partizan/followers", "following_url": "https://api.github.com/users/last-partizan/following{/other_user}", "gists_url": "https://api.github.com/users/last-partizan/gists{/gist_id}", "starred_url": "https://api.github.com/users/last-partizan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/last-partizan/subscriptions", "organizations_url": "https://api.github.com/users/last-partizan/orgs", "repos_url": "https://api.github.com/users/last-partizan/repos", "events_url": "https://api.github.com/users/last-partizan/events{/privacy}", "received_events_url": "https://api.github.com/users/last-partizan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1602791496, "node_id": "MDU6TGFiZWwxNjAyNzkxNDk2", "url": "https://api.github.com/repos/model-bakers/model_bakery/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-02T18:37:58Z", "updated_at": "2020-03-06T07:29:08Z", "closed_at": "2020-03-06T07:26:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "After updating to 1.1.0 tests using models with decimal fields os broken with following trace:\r\n\r\n```\r\n../../.venv/lib/python3.6/site-packages/django/db/backends/base/operations.py:500: in adapt_decimalfield_value\r\n    return utils.format_number(value, max_digits, decimal_places)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nvalue = Decimal('47109723.57'), max_digits = 7, decimal_places = 2\r\n\r\n    def format_number(value, max_digits, decimal_places):\r\n        \"\"\"\r\n        Format a number into a string with the requisite number of digits and\r\n        decimal places.\r\n        \"\"\"\r\n        if value is None:\r\n            return None\r\n        if isinstance(value, decimal.Decimal):\r\n            context = decimal.getcontext().copy()\r\n            if max_digits is not None:\r\n                context.prec = max_digits\r\n            if decimal_places is not None:\r\n>               value = value.quantize(decimal.Decimal(\".1\") ** decimal_places, context=context)\r\nE               decimal.InvalidOperation: [<class 'decimal.InvalidOperation'>]\r\n\r\n../../.venv/lib/python3.6/site-packages/django/db/backends/utils.py:239: InvalidOperation\r\n\r\n```\r\n\r\n\r\n## Reproduction Steps\r\n\r\ncreate model like this\r\n\r\n```\r\nclass Account(models.Model):\r\n    balance = models.DecimalField(max_digits=7, decimal_places=2)\r\n\r\nbaker.make(Account)\r\n```\r\n\r\n### Versions\r\n\r\nPython: 3.6\r\nDjango: 2.0\r\nModel Bakery: 1.1.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/53", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/53/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/53/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/53", "id": 544592277, "node_id": "MDU6SXNzdWU1NDQ1OTIyNzc=", "number": 53, "title": "Rename explanation/rationale and migration notes", "user": {"login": "epicserve", "id": 191620, "node_id": "MDQ6VXNlcjE5MTYyMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/191620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/epicserve", "html_url": "https://github.com/epicserve", "followers_url": "https://api.github.com/users/epicserve/followers", "following_url": "https://api.github.com/users/epicserve/following{/other_user}", "gists_url": "https://api.github.com/users/epicserve/gists{/gist_id}", "starred_url": "https://api.github.com/users/epicserve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/epicserve/subscriptions", "organizations_url": "https://api.github.com/users/epicserve/orgs", "repos_url": "https://api.github.com/users/epicserve/repos", "events_url": "https://api.github.com/users/epicserve/events{/privacy}", "received_events_url": "https://api.github.com/users/epicserve/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-02T14:06:48Z", "updated_at": "2020-01-11T19:22:37Z", "closed_at": "2020-01-11T18:38:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please add an explanation/rationale as to why it was renamed from model mommy to model bakery in the docs and provide some tips on how to migrate from model mommy to model bakery.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/51", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/51/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/51/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/51", "id": 538761455, "node_id": "MDU6SXNzdWU1Mzg3NjE0NTU=", "number": 51, "title": "Generator not being used correctly when doing batch create", "user": {"login": "liavkoren", "id": 5854101, "node_id": "MDQ6VXNlcjU4NTQxMDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5854101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liavkoren", "html_url": "https://github.com/liavkoren", "followers_url": "https://api.github.com/users/liavkoren/followers", "following_url": "https://api.github.com/users/liavkoren/following{/other_user}", "gists_url": "https://api.github.com/users/liavkoren/gists{/gist_id}", "starred_url": "https://api.github.com/users/liavkoren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liavkoren/subscriptions", "organizations_url": "https://api.github.com/users/liavkoren/orgs", "repos_url": "https://api.github.com/users/liavkoren/repos", "events_url": "https://api.github.com/users/liavkoren/events{/privacy}", "received_events_url": "https://api.github.com/users/liavkoren/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-17T00:40:39Z", "updated_at": "2020-01-20T16:23:28Z", "closed_at": "2020-01-20T16:23:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Short summary.\r\n\r\nUsing `itertools.cycle` doesn't seem to be working correctly when passing a value for `_quantity` to `baker.make`. \r\n\r\n## Expected behavior\r\nI bake up a batch of instances.\r\n\r\n\r\n## Actual behavior\r\n\r\n```\r\nIn [12]: baker.make('sgauth.User', username=cycle(['foo', 'bar']), _quantity=2)\r\nIntegrityError: duplicate key value violates unique constraint \"sgauth_user_username_key\"\r\nDETAIL:  Key (username)=(<itertools.cycle object at 0x11c6ffbd8>) already exists.\r\n```\r\n\r\n### Versions\r\n\r\nPython: 2.7.16\r\nDjango: 1.11.23\r\nModel Bakery: 1.0.2\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/45", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/45/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/45/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/45", "id": 533210231, "node_id": "MDU6SXNzdWU1MzMyMTAyMzE=", "number": 45, "title": "Django 3.0 support", "user": {"login": "amureki", "id": 627183, "node_id": "MDQ6VXNlcjYyNzE4Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/627183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amureki", "html_url": "https://github.com/amureki", "followers_url": "https://api.github.com/users/amureki/followers", "following_url": "https://api.github.com/users/amureki/following{/other_user}", "gists_url": "https://api.github.com/users/amureki/gists{/gist_id}", "starred_url": "https://api.github.com/users/amureki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amureki/subscriptions", "organizations_url": "https://api.github.com/users/amureki/orgs", "repos_url": "https://api.github.com/users/amureki/repos", "events_url": "https://api.github.com/users/amureki/events{/privacy}", "received_events_url": "https://api.github.com/users/amureki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1602791501, "node_id": "MDU6TGFiZWwxNjAyNzkxNTAx", "url": "https://api.github.com/repos/model-bakers/model_bakery/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-12-05T08:55:52Z", "updated_at": "2019-12-09T21:40:26Z", "closed_at": "2019-12-09T21:40:26Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "[Django 3.0 released](https://www.djangoproject.com/weblog/2019/dec/02/django-3-released/), and we need to add support (or just confirm that everything works) for it.\r\n\r\n\r\nThe work here can be started by adding Django 3.0 version to our `tox.ini` file here:\r\nhttps://github.com/model-bakers/model_bakery/blob/master/tox.ini similarly to other Django versions.\r\nThen by opening a PR you will see if there are any tests failing and code needs an attention.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/38", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/38/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/38/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/38", "id": 526260104, "node_id": "MDU6SXNzdWU1MjYyNjAxMDQ=", "number": 38, "title": "Add a Python code formatter", "user": {"login": "berinhard", "id": 238223, "node_id": "MDQ6VXNlcjIzODIyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/238223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berinhard", "html_url": "https://github.com/berinhard", "followers_url": "https://api.github.com/users/berinhard/followers", "following_url": "https://api.github.com/users/berinhard/following{/other_user}", "gists_url": "https://api.github.com/users/berinhard/gists{/gist_id}", "starred_url": "https://api.github.com/users/berinhard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berinhard/subscriptions", "organizations_url": "https://api.github.com/users/berinhard/orgs", "repos_url": "https://api.github.com/users/berinhard/repos", "events_url": "https://api.github.com/users/berinhard/events{/privacy}", "received_events_url": "https://api.github.com/users/berinhard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1602791501, "node_id": "MDU6TGFiZWwxNjAyNzkxNTAx", "url": "https://api.github.com/repos/model-bakers/model_bakery/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}], "state": "closed", "locked": false, "assignee": {"login": "anapaulagomes", "id": 1899950, "node_id": "MDQ6VXNlcjE4OTk5NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1899950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anapaulagomes", "html_url": "https://github.com/anapaulagomes", "followers_url": "https://api.github.com/users/anapaulagomes/followers", "following_url": "https://api.github.com/users/anapaulagomes/following{/other_user}", "gists_url": "https://api.github.com/users/anapaulagomes/gists{/gist_id}", "starred_url": "https://api.github.com/users/anapaulagomes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anapaulagomes/subscriptions", "organizations_url": "https://api.github.com/users/anapaulagomes/orgs", "repos_url": "https://api.github.com/users/anapaulagomes/repos", "events_url": "https://api.github.com/users/anapaulagomes/events{/privacy}", "received_events_url": "https://api.github.com/users/anapaulagomes/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "anapaulagomes", "id": 1899950, "node_id": "MDQ6VXNlcjE4OTk5NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1899950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anapaulagomes", "html_url": "https://github.com/anapaulagomes", "followers_url": "https://api.github.com/users/anapaulagomes/followers", "following_url": "https://api.github.com/users/anapaulagomes/following{/other_user}", "gists_url": "https://api.github.com/users/anapaulagomes/gists{/gist_id}", "starred_url": "https://api.github.com/users/anapaulagomes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anapaulagomes/subscriptions", "organizations_url": "https://api.github.com/users/anapaulagomes/orgs", "repos_url": "https://api.github.com/users/anapaulagomes/repos", "events_url": "https://api.github.com/users/anapaulagomes/events{/privacy}", "received_events_url": "https://api.github.com/users/anapaulagomes/received_events", "type": "User", "site_admin": false}, {"login": "giovana-morais", "id": 12520431, "node_id": "MDQ6VXNlcjEyNTIwNDMx", "avatar_url": "https://avatars1.githubusercontent.com/u/12520431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giovana-morais", "html_url": "https://github.com/giovana-morais", "followers_url": "https://api.github.com/users/giovana-morais/followers", "following_url": "https://api.github.com/users/giovana-morais/following{/other_user}", "gists_url": "https://api.github.com/users/giovana-morais/gists{/gist_id}", "starred_url": "https://api.github.com/users/giovana-morais/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giovana-morais/subscriptions", "organizations_url": "https://api.github.com/users/giovana-morais/orgs", "repos_url": "https://api.github.com/users/giovana-morais/repos", "events_url": "https://api.github.com/users/giovana-morais/events{/privacy}", "received_events_url": "https://api.github.com/users/giovana-morais/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2019-11-20T22:49:24Z", "updated_at": "2019-12-05T10:40:47Z", "closed_at": "2019-12-05T10:40:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We should add [Black](https://github.com/psf/black) to enforce some code styles to improve legibility and maintenance.\r\n\r\n- [x] Add Black as a development requirement\r\n- [x] Add it to the pre-commit config\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/36", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/36/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/36/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/36", "id": 523967931, "node_id": "MDU6SXNzdWU1MjM5Njc5MzE=", "number": 36, "title": "Investigate many to many creation with through option", "user": {"login": "anapaulagomes", "id": 1899950, "node_id": "MDQ6VXNlcjE4OTk5NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1899950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anapaulagomes", "html_url": "https://github.com/anapaulagomes", "followers_url": "https://api.github.com/users/anapaulagomes/followers", "following_url": "https://api.github.com/users/anapaulagomes/following{/other_user}", "gists_url": "https://api.github.com/users/anapaulagomes/gists{/gist_id}", "starred_url": "https://api.github.com/users/anapaulagomes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anapaulagomes/subscriptions", "organizations_url": "https://api.github.com/users/anapaulagomes/orgs", "repos_url": "https://api.github.com/users/anapaulagomes/repos", "events_url": "https://api.github.com/users/anapaulagomes/events{/privacy}", "received_events_url": "https://api.github.com/users/anapaulagomes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1602791496, "node_id": "MDU6TGFiZWwxNjAyNzkxNDk2", "url": "https://api.github.com/repos/model-bakers/model_bakery/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 1602791506, "node_id": "MDU6TGFiZWwxNjAyNzkxNTA2", "url": "https://api.github.com/repos/model-bakers/model_bakery/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-17T10:48:56Z", "updated_at": "2019-11-21T06:33:49Z", "closed_at": "2019-11-21T06:33:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Someone gave us a hint about this test won't be working:\r\n\r\n```\r\n    def test_create_many_to_many_with_through_option(self):\r\n        \"\"\"\r\n         This does not works\r\n        \"\"\"\r\n        # School student's attr is a m2m relationship with a model through\r\n        school = baker.make(models.School, make_m2m=True)\r\n        assert models.School.objects.count() == 1\r\n        assert school.students.count() == baker.MAX_MANY_QUANTITY\r\n        assert models.SchoolEnrollment.objects.count() == baker.MAX_MANY_QUANTITY\r\n        assert models.Person.objects.count() == baker.MAX_MANY_QUANTITY\r\n```\r\n\r\n## Expected behavior\r\n\r\nWe must investigate weather this is working or not.\r\n\r\n- [ ] Many to many creation should work via through option\r\n- [ ] The test should reproduce this behavior accordingly\r\n\r\n## Actual behavior\r\n\r\nWe have a comment saying it doesn't work. lol\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/32", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/32/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/32/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/32", "id": 516176940, "node_id": "MDU6SXNzdWU1MTYxNzY5NDA=", "number": 32, "title": "Add self `model_bakery.SELF` reference for explicit/future attribute set ", "user": {"login": "timabilov", "id": 17686230, "node_id": "MDQ6VXNlcjE3Njg2MjMw", "avatar_url": "https://avatars3.githubusercontent.com/u/17686230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timabilov", "html_url": "https://github.com/timabilov", "followers_url": "https://api.github.com/users/timabilov/followers", "following_url": "https://api.github.com/users/timabilov/following{/other_user}", "gists_url": "https://api.github.com/users/timabilov/gists{/gist_id}", "starred_url": "https://api.github.com/users/timabilov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timabilov/subscriptions", "organizations_url": "https://api.github.com/users/timabilov/orgs", "repos_url": "https://api.github.com/users/timabilov/repos", "events_url": "https://api.github.com/users/timabilov/events{/privacy}", "received_events_url": "https://api.github.com/users/timabilov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-11-01T15:18:32Z", "updated_at": "2019-11-08T21:18:19Z", "closed_at": "2019-11-08T21:18:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think there should be convenient way to reference to the self/future object \r\n## Expected behavior\r\n       baker.make(\r\n            'shop.Customer',\r\n             username=model_bakery.FUTURE.first_name\r\n            \r\n        )\r\nAfter that new object will have the same `username` as the `first_name` as an example\r\n## Actual behavior\r\nRight now there is no any possible solution AFAIK \r\n\r\n\r\n\r\nP.S. I just wanna migrate to that project but i think it misses that feature! :) I can try to implement/help that if this thing will be approved for sure ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/15", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/15/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/15/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/15", "id": 506718842, "node_id": "MDU6SXNzdWU1MDY3MTg4NDI=", "number": 15, "title": "Better fields examples for our existing docs", "user": {"login": "berinhard", "id": 238223, "node_id": "MDQ6VXNlcjIzODIyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/238223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berinhard", "html_url": "https://github.com/berinhard", "followers_url": "https://api.github.com/users/berinhard/followers", "following_url": "https://api.github.com/users/berinhard/following{/other_user}", "gists_url": "https://api.github.com/users/berinhard/gists{/gist_id}", "starred_url": "https://api.github.com/users/berinhard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berinhard/subscriptions", "organizations_url": "https://api.github.com/users/berinhard/orgs", "repos_url": "https://api.github.com/users/berinhard/repos", "events_url": "https://api.github.com/users/berinhard/events{/privacy}", "received_events_url": "https://api.github.com/users/berinhard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1602791497, "node_id": "MDU6TGFiZWwxNjAyNzkxNDk3", "url": "https://api.github.com/repos/model-bakers/model_bakery/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": "Improvements or additions to documentation"}, {"id": 1602791501, "node_id": "MDU6TGFiZWwxNjAyNzkxNTAx", "url": "https://api.github.com/repos/model-bakers/model_bakery/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-14T15:16:47Z", "updated_at": "2020-03-03T21:49:40Z", "closed_at": "2020-03-03T21:49:40Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As pointed by @anapaulagomes in [this PR discussion](https://github.com/model-bakers/model_bakery/pull/13#discussion_r334272667) the current models in our documentation have a lot of non-sense fields, such as `Customer.happy` or `Customer.wanted_games_qtd`. \r\n\r\nIt would be nice to have more semantic examples and also closer to real world data modeling. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/12", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/12/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/12/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/12", "id": 505823404, "node_id": "MDU6SXNzdWU1MDU4MjM0MDQ=", "number": 12, "title": "Move from travis-ci.org (being deprecated) to travis-ci.com", "user": {"login": "amureki", "id": 627183, "node_id": "MDQ6VXNlcjYyNzE4Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/627183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amureki", "html_url": "https://github.com/amureki", "followers_url": "https://api.github.com/users/amureki/followers", "following_url": "https://api.github.com/users/amureki/following{/other_user}", "gists_url": "https://api.github.com/users/amureki/gists{/gist_id}", "starred_url": "https://api.github.com/users/amureki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amureki/subscriptions", "organizations_url": "https://api.github.com/users/amureki/orgs", "repos_url": "https://api.github.com/users/amureki/repos", "events_url": "https://api.github.com/users/amureki/events{/privacy}", "received_events_url": "https://api.github.com/users/amureki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1602791499, "node_id": "MDU6TGFiZWwxNjAyNzkxNDk5", "url": "https://api.github.com/repos/model-bakers/model_bakery/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-11T12:29:38Z", "updated_at": "2019-10-14T14:34:34Z", "closed_at": "2019-10-12T08:39:39Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "## Description\r\n\r\nCurrently, we are running travis build on their `org` service, which is being deprecated.\r\nAll public and private projects are supposed to run under travis-ci.com.\r\n\r\nTo do the switched we need to enable repo access to travis-ci.com and disable it on the old website. This should do the trick.\r\n\r\n- [x] Update the readme badge", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/11", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/11/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/11/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/11", "id": 505813532, "node_id": "MDU6SXNzdWU1MDU4MTM1MzI=", "number": 11, "title": "Add github.io page to model_bakery explaining the history and reasons for this migration", "user": {"login": "berinhard", "id": 238223, "node_id": "MDQ6VXNlcjIzODIyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/238223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berinhard", "html_url": "https://github.com/berinhard", "followers_url": "https://api.github.com/users/berinhard/followers", "following_url": "https://api.github.com/users/berinhard/following{/other_user}", "gists_url": "https://api.github.com/users/berinhard/gists{/gist_id}", "starred_url": "https://api.github.com/users/berinhard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berinhard/subscriptions", "organizations_url": "https://api.github.com/users/berinhard/orgs", "repos_url": "https://api.github.com/users/berinhard/repos", "events_url": "https://api.github.com/users/berinhard/events{/privacy}", "received_events_url": "https://api.github.com/users/berinhard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "berinhard", "id": 238223, "node_id": "MDQ6VXNlcjIzODIyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/238223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berinhard", "html_url": "https://github.com/berinhard", "followers_url": "https://api.github.com/users/berinhard/followers", "following_url": "https://api.github.com/users/berinhard/following{/other_user}", "gists_url": "https://api.github.com/users/berinhard/gists{/gist_id}", "starred_url": "https://api.github.com/users/berinhard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berinhard/subscriptions", "organizations_url": "https://api.github.com/users/berinhard/orgs", "repos_url": "https://api.github.com/users/berinhard/repos", "events_url": "https://api.github.com/users/berinhard/events{/privacy}", "received_events_url": "https://api.github.com/users/berinhard/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "berinhard", "id": 238223, "node_id": "MDQ6VXNlcjIzODIyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/238223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berinhard", "html_url": "https://github.com/berinhard", "followers_url": "https://api.github.com/users/berinhard/followers", "following_url": "https://api.github.com/users/berinhard/following{/other_user}", "gists_url": "https://api.github.com/users/berinhard/gists{/gist_id}", "starred_url": "https://api.github.com/users/berinhard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berinhard/subscriptions", "organizations_url": "https://api.github.com/users/berinhard/orgs", "repos_url": "https://api.github.com/users/berinhard/repos", "events_url": "https://api.github.com/users/berinhard/events{/privacy}", "received_events_url": "https://api.github.com/users/berinhard/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-10-11T12:07:11Z", "updated_at": "2019-10-22T16:23:08Z", "closed_at": "2019-10-22T16:23:08Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Blog post must have a gist with commands to help people to migrate their project to use model_bakery instead of model_mommy;", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/10", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/10/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/10/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/10", "id": 505812860, "node_id": "MDU6SXNzdWU1MDU4MTI4NjA=", "number": 10, "title": "Add model_bakery to pypi", "user": {"login": "berinhard", "id": 238223, "node_id": "MDQ6VXNlcjIzODIyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/238223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berinhard", "html_url": "https://github.com/berinhard", "followers_url": "https://api.github.com/users/berinhard/followers", "following_url": "https://api.github.com/users/berinhard/following{/other_user}", "gists_url": "https://api.github.com/users/berinhard/gists{/gist_id}", "starred_url": "https://api.github.com/users/berinhard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berinhard/subscriptions", "organizations_url": "https://api.github.com/users/berinhard/orgs", "repos_url": "https://api.github.com/users/berinhard/repos", "events_url": "https://api.github.com/users/berinhard/events{/privacy}", "received_events_url": "https://api.github.com/users/berinhard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/model-bakers/model_bakery/milestones/1", "html_url": "https://github.com/model-bakers/model_bakery/milestone/1", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/milestones/1/labels", "id": 4743367, "node_id": "MDk6TWlsZXN0b25lNDc0MzM2Nw==", "number": 1, "title": "Release 1.0.0", "description": "Required work to address the release 1.0.0", "creator": {"login": "berinhard", "id": 238223, "node_id": "MDQ6VXNlcjIzODIyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/238223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berinhard", "html_url": "https://github.com/berinhard", "followers_url": "https://api.github.com/users/berinhard/followers", "following_url": "https://api.github.com/users/berinhard/following{/other_user}", "gists_url": "https://api.github.com/users/berinhard/gists{/gist_id}", "starred_url": "https://api.github.com/users/berinhard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berinhard/subscriptions", "organizations_url": "https://api.github.com/users/berinhard/orgs", "repos_url": "https://api.github.com/users/berinhard/repos", "events_url": "https://api.github.com/users/berinhard/events{/privacy}", "received_events_url": "https://api.github.com/users/berinhard/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "open", "created_at": "2019-10-11T12:06:09Z", "updated_at": "2019-10-14T16:13:48Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2019-10-11T12:05:40Z", "updated_at": "2019-10-11T20:20:31Z", "closed_at": "2019-10-11T20:20:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "RELEASE THE KRAKEN!!!!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/9", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/9/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/9/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/9", "id": 505811777, "node_id": "MDU6SXNzdWU1MDU4MTE3Nzc=", "number": 9, "title": "Create an auxiliar script to replace model_mommy to model_bakery", "user": {"login": "berinhard", "id": 238223, "node_id": "MDQ6VXNlcjIzODIyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/238223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berinhard", "html_url": "https://github.com/berinhard", "followers_url": "https://api.github.com/users/berinhard/followers", "following_url": "https://api.github.com/users/berinhard/following{/other_user}", "gists_url": "https://api.github.com/users/berinhard/gists{/gist_id}", "starred_url": "https://api.github.com/users/berinhard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berinhard/subscriptions", "organizations_url": "https://api.github.com/users/berinhard/orgs", "repos_url": "https://api.github.com/users/berinhard/repos", "events_url": "https://api.github.com/users/berinhard/events{/privacy}", "received_events_url": "https://api.github.com/users/berinhard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "anapaulagomes", "id": 1899950, "node_id": "MDQ6VXNlcjE4OTk5NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1899950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anapaulagomes", "html_url": "https://github.com/anapaulagomes", "followers_url": "https://api.github.com/users/anapaulagomes/followers", "following_url": "https://api.github.com/users/anapaulagomes/following{/other_user}", "gists_url": "https://api.github.com/users/anapaulagomes/gists{/gist_id}", "starred_url": "https://api.github.com/users/anapaulagomes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anapaulagomes/subscriptions", "organizations_url": "https://api.github.com/users/anapaulagomes/orgs", "repos_url": "https://api.github.com/users/anapaulagomes/repos", "events_url": "https://api.github.com/users/anapaulagomes/events{/privacy}", "received_events_url": "https://api.github.com/users/anapaulagomes/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "anapaulagomes", "id": 1899950, "node_id": "MDQ6VXNlcjE4OTk5NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1899950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anapaulagomes", "html_url": "https://github.com/anapaulagomes", "followers_url": "https://api.github.com/users/anapaulagomes/followers", "following_url": "https://api.github.com/users/anapaulagomes/following{/other_user}", "gists_url": "https://api.github.com/users/anapaulagomes/gists{/gist_id}", "starred_url": "https://api.github.com/users/anapaulagomes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anapaulagomes/subscriptions", "organizations_url": "https://api.github.com/users/anapaulagomes/orgs", "repos_url": "https://api.github.com/users/anapaulagomes/repos", "events_url": "https://api.github.com/users/anapaulagomes/events{/privacy}", "received_events_url": "https://api.github.com/users/anapaulagomes/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-10-11T12:03:13Z", "updated_at": "2019-10-21T20:29:12Z", "closed_at": "2019-10-21T20:29:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It would be nice to have a simple gist with a few `grep` + `sed` commands so people can run to replace `model_mommy` by `model_bakery` in their projects.\r\n\r\n## Expected behavior\r\n\r\nI don't have any strong opinion on that and I'm open to any ideas...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/8", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/8/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/8/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/8", "id": 505810626, "node_id": "MDU6SXNzdWU1MDU4MTA2MjY=", "number": 8, "title": "Add model_bakery to readthedocs", "user": {"login": "berinhard", "id": 238223, "node_id": "MDQ6VXNlcjIzODIyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/238223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berinhard", "html_url": "https://github.com/berinhard", "followers_url": "https://api.github.com/users/berinhard/followers", "following_url": "https://api.github.com/users/berinhard/following{/other_user}", "gists_url": "https://api.github.com/users/berinhard/gists{/gist_id}", "starred_url": "https://api.github.com/users/berinhard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berinhard/subscriptions", "organizations_url": "https://api.github.com/users/berinhard/orgs", "repos_url": "https://api.github.com/users/berinhard/repos", "events_url": "https://api.github.com/users/berinhard/events{/privacy}", "received_events_url": "https://api.github.com/users/berinhard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "berinhard", "id": 238223, "node_id": "MDQ6VXNlcjIzODIyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/238223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berinhard", "html_url": "https://github.com/berinhard", "followers_url": "https://api.github.com/users/berinhard/followers", "following_url": "https://api.github.com/users/berinhard/following{/other_user}", "gists_url": "https://api.github.com/users/berinhard/gists{/gist_id}", "starred_url": "https://api.github.com/users/berinhard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berinhard/subscriptions", "organizations_url": "https://api.github.com/users/berinhard/orgs", "repos_url": "https://api.github.com/users/berinhard/repos", "events_url": "https://api.github.com/users/berinhard/events{/privacy}", "received_events_url": "https://api.github.com/users/berinhard/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "berinhard", "id": 238223, "node_id": "MDQ6VXNlcjIzODIyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/238223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berinhard", "html_url": "https://github.com/berinhard", "followers_url": "https://api.github.com/users/berinhard/followers", "following_url": "https://api.github.com/users/berinhard/following{/other_user}", "gists_url": "https://api.github.com/users/berinhard/gists{/gist_id}", "starred_url": "https://api.github.com/users/berinhard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berinhard/subscriptions", "organizations_url": "https://api.github.com/users/berinhard/orgs", "repos_url": "https://api.github.com/users/berinhard/repos", "events_url": "https://api.github.com/users/berinhard/events{/privacy}", "received_events_url": "https://api.github.com/users/berinhard/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/model-bakers/model_bakery/milestones/1", "html_url": "https://github.com/model-bakers/model_bakery/milestone/1", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/milestones/1/labels", "id": 4743367, "node_id": "MDk6TWlsZXN0b25lNDc0MzM2Nw==", "number": 1, "title": "Release 1.0.0", "description": "Required work to address the release 1.0.0", "creator": {"login": "berinhard", "id": 238223, "node_id": "MDQ6VXNlcjIzODIyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/238223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berinhard", "html_url": "https://github.com/berinhard", "followers_url": "https://api.github.com/users/berinhard/followers", "following_url": "https://api.github.com/users/berinhard/following{/other_user}", "gists_url": "https://api.github.com/users/berinhard/gists{/gist_id}", "starred_url": "https://api.github.com/users/berinhard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berinhard/subscriptions", "organizations_url": "https://api.github.com/users/berinhard/orgs", "repos_url": "https://api.github.com/users/berinhard/repos", "events_url": "https://api.github.com/users/berinhard/events{/privacy}", "received_events_url": "https://api.github.com/users/berinhard/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "open", "created_at": "2019-10-11T12:06:09Z", "updated_at": "2019-10-14T16:13:48Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2019-10-11T12:00:45Z", "updated_at": "2019-10-14T16:23:12Z", "closed_at": "2019-10-14T16:13:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Configure readthedocs by adding the model_bakery repo.\r\n\r\n## Expected behavior\r\n\r\nTo be able to access https://model-bakery.readthedocs.io/en/latest/\r\n\r\n## Actual behavior\r\n\r\n404 hehehe", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/7", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/7/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/7/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/7", "id": 505809918, "node_id": "MDU6SXNzdWU1MDU4MDk5MTg=", "number": 7, "title": "Rename model mommy references in the docs", "user": {"login": "berinhard", "id": 238223, "node_id": "MDQ6VXNlcjIzODIyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/238223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berinhard", "html_url": "https://github.com/berinhard", "followers_url": "https://api.github.com/users/berinhard/followers", "following_url": "https://api.github.com/users/berinhard/following{/other_user}", "gists_url": "https://api.github.com/users/berinhard/gists{/gist_id}", "starred_url": "https://api.github.com/users/berinhard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berinhard/subscriptions", "organizations_url": "https://api.github.com/users/berinhard/orgs", "repos_url": "https://api.github.com/users/berinhard/repos", "events_url": "https://api.github.com/users/berinhard/events{/privacy}", "received_events_url": "https://api.github.com/users/berinhard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "berinhard", "id": 238223, "node_id": "MDQ6VXNlcjIzODIyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/238223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berinhard", "html_url": "https://github.com/berinhard", "followers_url": "https://api.github.com/users/berinhard/followers", "following_url": "https://api.github.com/users/berinhard/following{/other_user}", "gists_url": "https://api.github.com/users/berinhard/gists{/gist_id}", "starred_url": "https://api.github.com/users/berinhard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berinhard/subscriptions", "organizations_url": "https://api.github.com/users/berinhard/orgs", "repos_url": "https://api.github.com/users/berinhard/repos", "events_url": "https://api.github.com/users/berinhard/events{/privacy}", "received_events_url": "https://api.github.com/users/berinhard/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "berinhard", "id": 238223, "node_id": "MDQ6VXNlcjIzODIyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/238223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berinhard", "html_url": "https://github.com/berinhard", "followers_url": "https://api.github.com/users/berinhard/followers", "following_url": "https://api.github.com/users/berinhard/following{/other_user}", "gists_url": "https://api.github.com/users/berinhard/gists{/gist_id}", "starred_url": "https://api.github.com/users/berinhard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berinhard/subscriptions", "organizations_url": "https://api.github.com/users/berinhard/orgs", "repos_url": "https://api.github.com/users/berinhard/repos", "events_url": "https://api.github.com/users/berinhard/events{/privacy}", "received_events_url": "https://api.github.com/users/berinhard/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/model-bakers/model_bakery/milestones/1", "html_url": "https://github.com/model-bakers/model_bakery/milestone/1", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/milestones/1/labels", "id": 4743367, "node_id": "MDk6TWlsZXN0b25lNDc0MzM2Nw==", "number": 1, "title": "Release 1.0.0", "description": "Required work to address the release 1.0.0", "creator": {"login": "berinhard", "id": 238223, "node_id": "MDQ6VXNlcjIzODIyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/238223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berinhard", "html_url": "https://github.com/berinhard", "followers_url": "https://api.github.com/users/berinhard/followers", "following_url": "https://api.github.com/users/berinhard/following{/other_user}", "gists_url": "https://api.github.com/users/berinhard/gists{/gist_id}", "starred_url": "https://api.github.com/users/berinhard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berinhard/subscriptions", "organizations_url": "https://api.github.com/users/berinhard/orgs", "repos_url": "https://api.github.com/users/berinhard/repos", "events_url": "https://api.github.com/users/berinhard/events{/privacy}", "received_events_url": "https://api.github.com/users/berinhard/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "open", "created_at": "2019-10-11T12:06:09Z", "updated_at": "2019-10-14T16:13:48Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2019-10-11T11:59:20Z", "updated_at": "2019-10-14T15:32:13Z", "closed_at": "2019-10-14T15:32:13Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This work is required so we can release version model_bakery's 1.0.0 :+1: ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/2", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/2/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/2/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/2", "id": 504292526, "node_id": "MDU6SXNzdWU1MDQyOTI1MjY=", "number": 2, "title": "Use a name convention for placeholders for files", "user": {"login": "berinhard", "id": 238223, "node_id": "MDQ6VXNlcjIzODIyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/238223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berinhard", "html_url": "https://github.com/berinhard", "followers_url": "https://api.github.com/users/berinhard/followers", "following_url": "https://api.github.com/users/berinhard/following{/other_user}", "gists_url": "https://api.github.com/users/berinhard/gists{/gist_id}", "starred_url": "https://api.github.com/users/berinhard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berinhard/subscriptions", "organizations_url": "https://api.github.com/users/berinhard/orgs", "repos_url": "https://api.github.com/users/berinhard/repos", "events_url": "https://api.github.com/users/berinhard/events{/privacy}", "received_events_url": "https://api.github.com/users/berinhard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-08T21:36:17Z", "updated_at": "2019-10-09T12:26:06Z", "closed_at": "2019-10-09T12:26:06Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The placeholder files for image and file fields have two different naming conventions:\r\n\r\n```\r\nmodel_bakery/mock_file.txt\r\nmodel_bakery/mock-img.jpeg\r\n```\r\n\r\n`mock-img.jpeg` should use underline as well. The `MANIFEST.in` file should be updated with the new name.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/30", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/30/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/30/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/30", "id": 510765182, "node_id": "MDU6SXNzdWU1MTA3NjUxODI=", "number": 30, "title": "SSHR_FREE_DAYS initialization with the workalendar module", "user": {"login": "pvergain", "id": 57228, "node_id": "MDQ6VXNlcjU3MjI4", "avatar_url": "https://avatars3.githubusercontent.com/u/57228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvergain", "html_url": "https://github.com/pvergain", "followers_url": "https://api.github.com/users/pvergain/followers", "following_url": "https://api.github.com/users/pvergain/following{/other_user}", "gists_url": "https://api.github.com/users/pvergain/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvergain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvergain/subscriptions", "organizations_url": "https://api.github.com/users/pvergain/orgs", "repos_url": "https://api.github.com/users/pvergain/repos", "events_url": "https://api.github.com/users/pvergain/events{/privacy}", "received_events_url": "https://api.github.com/users/pvergain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-08T14:39:17Z", "updated_at": "2019-11-01T17:52:39Z", "closed_at": "2019-11-01T17:52:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "To initialize the SSHR_FREE_DAYS you can use the holidays() method from  https://github.com/peopledoc/workalendar.\r\n\r\n>>> from datetime import date\r\n>>> from workalendar.europe import France\r\n>>> cal = France()\r\n>>> cal.holidays(2012)\r\n[(datetime.date(2012, 1, 1), 'New year'),\r\n (datetime.date(2012, 4, 9), 'Easter Monday'),\r\n (datetime.date(2012, 5, 1), 'Labour Day'),\r\n (datetime.date(2012, 5, 8), 'Victory in Europe Day'),\r\n (datetime.date(2012, 5, 17), 'Ascension Day'),\r\n (datetime.date(2012, 5, 28), 'Whit Monday'),\r\n (datetime.date(2012, 7, 14), 'Bastille Day'),\r\n (datetime.date(2012, 8, 15), 'Assumption of Mary to Heaven'),\r\n (datetime.date(2012, 11, 1), \"All Saints' Day\"),\r\n (datetime.date(2012, 11, 11), 'Armistice Day'),\r\n (datetime.date(2012, 12, 25), 'Christmas')]\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/22", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/22/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/22/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/22", "id": 510764542, "node_id": "MDU6SXNzdWU1MTA3NjQ1NDI=", "number": 22, "title": "Feature: start parameter in recipe.seq() if is passed a string", "user": {"login": "aipi", "id": 17441599, "node_id": "MDQ6VXNlcjE3NDQxNTk5", "avatar_url": "https://avatars2.githubusercontent.com/u/17441599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aipi", "html_url": "https://github.com/aipi", "followers_url": "https://api.github.com/users/aipi/followers", "following_url": "https://api.github.com/users/aipi/following{/other_user}", "gists_url": "https://api.github.com/users/aipi/gists{/gist_id}", "starred_url": "https://api.github.com/users/aipi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aipi/subscriptions", "organizations_url": "https://api.github.com/users/aipi/orgs", "repos_url": "https://api.github.com/users/aipi/repos", "events_url": "https://api.github.com/users/aipi/events{/privacy}", "received_events_url": "https://api.github.com/users/aipi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-28T18:04:01Z", "updated_at": "2020-01-21T16:46:51Z", "closed_at": "2020-01-21T16:46:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "`recipe.seq()` already give the possibility of `increment_by`, and if make something like `seq(4)` it increment starting in 4. However, would be cool if passed a string to `recipe.seq()`, it gives the possibility of determinate the start of incrementation. \r\n\r\nSomething like:\r\n```python\r\nipv6_set = mommy.make(IPv6Address, _quantity=4, address=seq('2001:12f8:0:28::', start=4))\r\n```\r\nReturning:\r\n```\r\n[<IPv6Address: [2001:12f8:0:28::4]>, <IPv6Address: [2001:12f8:0:28::5]>, <IPv6Address: [2001:12f8:0:28::6]>, <IPv6Address: [2001:12f8:0:28::7]>]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/21", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/21/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/21/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/21", "id": 510764460, "node_id": "MDU6SXNzdWU1MTA3NjQ0NjA=", "number": 21, "title": "Can't create a user in a group due to gen_m2m MAX_MANY_QUANTITY", "user": {"login": "graingert", "id": 413772, "node_id": "MDQ6VXNlcjQxMzc3Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/413772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graingert", "html_url": "https://github.com/graingert", "followers_url": "https://api.github.com/users/graingert/followers", "following_url": "https://api.github.com/users/graingert/following{/other_user}", "gists_url": "https://api.github.com/users/graingert/gists{/gist_id}", "starred_url": "https://api.github.com/users/graingert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graingert/subscriptions", "organizations_url": "https://api.github.com/users/graingert/orgs", "repos_url": "https://api.github.com/users/graingert/repos", "events_url": "https://api.github.com/users/graingert/events{/privacy}", "received_events_url": "https://api.github.com/users/graingert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-10T14:30:39Z", "updated_at": "2019-11-05T20:17:08Z", "closed_at": "2019-11-05T20:17:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "eg:\r\n\r\n```python\r\nuser = mommy.make('User', groups__name='foo')\r\n```\r\n\r\nit tries to create 5 groups with the name: 'foo' but that fails with a unique constraint error", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/20", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/20/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/20/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/20", "id": 510764394, "node_id": "MDU6SXNzdWU1MTA3NjQzOTQ=", "number": 20, "title": "invalid related properties are not reported", "user": {"login": "graingert", "id": 413772, "node_id": "MDQ6VXNlcjQxMzc3Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/413772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graingert", "html_url": "https://github.com/graingert", "followers_url": "https://api.github.com/users/graingert/followers", "following_url": "https://api.github.com/users/graingert/following{/other_user}", "gists_url": "https://api.github.com/users/graingert/gists{/gist_id}", "starred_url": "https://api.github.com/users/graingert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graingert/subscriptions", "organizations_url": "https://api.github.com/users/graingert/orgs", "repos_url": "https://api.github.com/users/graingert/repos", "events_url": "https://api.github.com/users/graingert/events{/privacy}", "received_events_url": "https://api.github.com/users/graingert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-06T12:06:35Z", "updated_at": "2019-11-05T20:09:10Z", "closed_at": "2019-11-05T20:09:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "With these models:\r\n\r\n```python\r\nclass Author(models.Model):\r\n    first_name = models.CharField(max_length=100)\r\n\r\nclass Book(models.Model):\r\n    title = models.CharField(max_length=200)\r\n    author = models.ForeignKey(Author, on_delete=models.SET_NULL, null=True)\r\n```\r\n\r\nIf I do:\r\n\r\n`mommy.make('Author', book__name='foo)`\r\n\r\nIt just fails to make the Book silently, I should get an Error like:\r\n\r\n```\r\nCould not resolve 'book' into field, available fields: ['first_name', 'book_set']\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/19", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/19/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/19/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/19", "id": 510764303, "node_id": "MDU6SXNzdWU1MTA3NjQzMDM=", "number": 19, "title": "_fill_optional doesn't throw any error when using invalid field ", "user": {"login": "matheusbsilva", "id": 14370340, "node_id": "MDQ6VXNlcjE0MzcwMzQw", "avatar_url": "https://avatars0.githubusercontent.com/u/14370340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matheusbsilva", "html_url": "https://github.com/matheusbsilva", "followers_url": "https://api.github.com/users/matheusbsilva/followers", "following_url": "https://api.github.com/users/matheusbsilva/following{/other_user}", "gists_url": "https://api.github.com/users/matheusbsilva/gists{/gist_id}", "starred_url": "https://api.github.com/users/matheusbsilva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matheusbsilva/subscriptions", "organizations_url": "https://api.github.com/users/matheusbsilva/orgs", "repos_url": "https://api.github.com/users/matheusbsilva/repos", "events_url": "https://api.github.com/users/matheusbsilva/events{/privacy}", "received_events_url": "https://api.github.com/users/matheusbsilva/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-17T17:35:34Z", "updated_at": "2019-11-06T10:05:37Z", "closed_at": "2019-11-05T20:18:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I use an invalid field name to a model through `_fill_optional` param on `make` it doesn't throw any error warning about the invalid field that I'm trying to fill. Ex.:\r\n\r\n```python\r\n# My model\r\nclass Person(models.Model):\r\n  name = fields.Charfield(max_length=100)\r\n  phone = fields.Charfield(max_length=30)\r\n\r\n# Trying to fill invalid field\r\n\r\n# It doesn't throw any error\r\nperson = mommy.make('Person', _fill_optional=['birth_date'])\r\n\r\nperson.birth_date\r\n> AttributeError: 'Person' object has no attribute 'birth_date'\r\n```\r\n\r\nThis should be the expected behavior?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/model-bakers/model_bakery/issues/18", "repository_url": "https://api.github.com/repos/model-bakers/model_bakery", "labels_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/18/comments", "events_url": "https://api.github.com/repos/model-bakers/model_bakery/issues/18/events", "html_url": "https://github.com/model-bakers/model_bakery/issues/18", "id": 510764209, "node_id": "MDU6SXNzdWU1MTA3NjQyMDk=", "number": 18, "title": "Ability to load custom fields for Model Mommy to also generate", "user": {"login": "aaronlelevier", "id": 5514112, "node_id": "MDQ6VXNlcjU1MTQxMTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5514112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaronlelevier", "html_url": "https://github.com/aaronlelevier", "followers_url": "https://api.github.com/users/aaronlelevier/followers", "following_url": "https://api.github.com/users/aaronlelevier/following{/other_user}", "gists_url": "https://api.github.com/users/aaronlelevier/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaronlelevier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaronlelevier/subscriptions", "organizations_url": "https://api.github.com/users/aaronlelevier/orgs", "repos_url": "https://api.github.com/users/aaronlelevier/repos", "events_url": "https://api.github.com/users/aaronlelevier/events{/privacy}", "received_events_url": "https://api.github.com/users/aaronlelevier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2017-11-01T19:47:36Z", "updated_at": "2020-01-22T15:24:22Z", "closed_at": "2020-01-22T14:30:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to be able to load a custom fields list to `model_mommy` so that Models with these fields can also be generated.  \r\n\r\nMaybe this is similar to a [Recipe](http://model-mommy.readthedocs.org/en/latest/recipes.html) but it would be a one time config load of fields that comply to an interface potentially, and then `mommy.make(MyModelWithACustomField)` would be able to still generate the Model instance.  Thus avoiding the error: `<Field> is not supported by mommy`", "performed_via_github_app": null, "score": 1.0}]}