{"total_count": 36, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/nats-io/nats.py/issues/127", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/127/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/127/events", "html_url": "https://github.com/nats-io/nats.py/issues/127", "id": 550214327, "node_id": "MDU6SXNzdWU1NTAyMTQzMjc=", "number": 127, "title": "Client silently crashes if callbacks are not co-routines", "user": {"login": "neoaggelos", "id": 1888650, "node_id": "MDQ6VXNlcjE4ODg2NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1888650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neoaggelos", "html_url": "https://github.com/neoaggelos", "followers_url": "https://api.github.com/users/neoaggelos/followers", "following_url": "https://api.github.com/users/neoaggelos/following{/other_user}", "gists_url": "https://api.github.com/users/neoaggelos/gists{/gist_id}", "starred_url": "https://api.github.com/users/neoaggelos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neoaggelos/subscriptions", "organizations_url": "https://api.github.com/users/neoaggelos/orgs", "repos_url": "https://api.github.com/users/neoaggelos/repos", "events_url": "https://api.github.com/users/neoaggelos/events{/privacy}", "received_events_url": "https://api.github.com/users/neoaggelos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-15T14:19:00Z", "updated_at": "2020-01-16T06:02:43Z", "closed_at": "2020-01-16T06:02:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Documentation does not make it clear that callback functions must be async coroutines. The fact that message handlers can be simple functions does not help with that either.\r\n\r\nIf, by mistake, someone writes...\r\n\r\n```\r\ndef error_cb():\r\n    print(\"an error occured\")\r\n\r\nclient = Client(...., error_cb=error_cb)\r\n```\r\n\r\n... he will not get any error, and the client will silently crash the first time the error callback is awaited, without any indications.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/124", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/124/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/124/events", "html_url": "https://github.com/nats-io/nats.py/issues/124", "id": 532757256, "node_id": "MDU6SXNzdWU1MzI3NTcyNTY=", "number": 124, "title": "Client.py error", "user": {"login": "konstantin-Sk", "id": 53292936, "node_id": "MDQ6VXNlcjUzMjkyOTM2", "avatar_url": "https://avatars3.githubusercontent.com/u/53292936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/konstantin-Sk", "html_url": "https://github.com/konstantin-Sk", "followers_url": "https://api.github.com/users/konstantin-Sk/followers", "following_url": "https://api.github.com/users/konstantin-Sk/following{/other_user}", "gists_url": "https://api.github.com/users/konstantin-Sk/gists{/gist_id}", "starred_url": "https://api.github.com/users/konstantin-Sk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/konstantin-Sk/subscriptions", "organizations_url": "https://api.github.com/users/konstantin-Sk/orgs", "repos_url": "https://api.github.com/users/konstantin-Sk/repos", "events_url": "https://api.github.com/users/konstantin-Sk/events{/privacy}", "received_events_url": "https://api.github.com/users/konstantin-Sk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-04T15:26:20Z", "updated_at": "2019-12-04T16:45:52Z", "closed_at": "2019-12-04T16:45:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi.\r\nIn examples/client.py, line 20:` def start(self):`\r\nmust be: `async def start(self):`\r\nOr in another case this error will pop up: \r\n`  File \"client.py\", line 22\r\n    await self.nc.connect(io_loop=self.loop)\r\n             ^\r\nSyntaxError: invalid syntax\r\n`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/113", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/113/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/113/events", "html_url": "https://github.com/nats-io/nats.py/issues/113", "id": 484274917, "node_id": "MDU6SXNzdWU0ODQyNzQ5MTc=", "number": 113, "title": "Pending_size of subscription `_INBOX` is always growing", "user": {"login": "laishzh", "id": 1683919, "node_id": "MDQ6VXNlcjE2ODM5MTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1683919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laishzh", "html_url": "https://github.com/laishzh", "followers_url": "https://api.github.com/users/laishzh/followers", "following_url": "https://api.github.com/users/laishzh/following{/other_user}", "gists_url": "https://api.github.com/users/laishzh/gists{/gist_id}", "starred_url": "https://api.github.com/users/laishzh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laishzh/subscriptions", "organizations_url": "https://api.github.com/users/laishzh/orgs", "repos_url": "https://api.github.com/users/laishzh/repos", "events_url": "https://api.github.com/users/laishzh/events{/privacy}", "received_events_url": "https://api.github.com/users/laishzh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-23T00:30:59Z", "updated_at": "2019-08-23T20:23:30Z", "closed_at": "2019-08-23T20:23:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am using nats in a long-time task. After a long period, an error of \"nats: slow consumer, messages dropped\" is raised. I find out that there is a problem when dequeue a message from Subscription `_INBOX`. Following is a demo to show this case. The pending_size of `_INBOX` is always growing. \r\n\r\n\r\n* NATS Version: 2.0.0-linux (docker)\r\n* nats.py version: 0.9.2\r\n\r\nDemo:\r\n```\r\nimport asyncio\r\nfrom nats.aio.client import Client as NATS\r\nfrom nats.aio.errors import ErrConnectionClosed, ErrTimeout, ErrNoServers\r\n\r\nasync def run(loop):\r\n    nc = NATS()\r\n\r\n    await nc.connect(\"127.0.0.1:4222\", loop=loop)\r\n\r\n    async def help_request(msg):\r\n        subject = msg.subject\r\n        reply = msg.reply\r\n        data = msg.data.decode()\r\n        print(\"Received a message on '{subject} {reply}': {data}\".format(\r\n            subject=subject, reply=reply, data=data))\r\n        await nc.publish(reply, b'I can help')\r\n\r\n    # Use queue named 'workers' for distributing requests\r\n    # among subscribers.\r\n    sid = await nc.subscribe(\"help\", \"workers\", help_request)\r\n\r\n    while True:\r\n        # Send a request and expect a single response\r\n        # and trigger timeout if not faster than 1 second.\r\n        try:\r\n            response = await nc.request(\"help\", b'help me', timeout=1)\r\n            print(\"Received response: {message}\".format(\r\n                message=response.data.decode()))\r\n        except ErrTimeout:\r\n            print(\"Request timed out\")\r\n\r\n        # Output all subscriptions' pending_size\r\n        print(\"NC subs: {}\".format(len(nc._subs)))\r\n        for k, v in nc._subs.items():\r\n            print(\"Key: {}, SubName: {}, pending_size: {}\".format(k, v.subject, v.pending_size))\r\n\r\n    # Remove interest in subscription.\r\n    await nc.unsubscribe(sid)\r\n\r\n    # Terminate connection to NATS.\r\n    await nc.close()\r\n\r\nif __name__ == '__main__':\r\n    loop = asyncio.get_event_loop()\r\n    loop.run_until_complete(run(loop))\r\n    loop.close()\r\n\r\n```\r\n\r\nOutput: \r\n```\r\nNC subs: 2\r\nKey: 1, SubName: help, pending_size: 0\r\nKey: 2, SubName: _INBOX.sXm35gMyTu5v7u0Zmpi9h2.*, pending_size: 28450\r\nReceived a message on 'help _INBOX.sXm35gMyTu5v7u0Zmpi9h2.sXm35gMyTu5vlpVcmpi9h2': help me\r\nReceived response: I can help\r\nNC subs: 2\r\nKey: 1, SubName: help, pending_size: 0\r\nKey: 2, SubName: _INBOX.sXm35gMyTu5v7u0Zmpi9h2.*, pending_size: 28460\r\nReceived a message on 'help _INBOX.sXm35gMyTu5v7u0Zmpi9h2.sXm35gMyTu5vUuVcmpi9h2': help me\r\nReceived response: I can help\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/111", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/111/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/111/events", "html_url": "https://github.com/nats-io/nats.py/issues/111", "id": 477247861, "node_id": "MDU6SXNzdWU0NzcyNDc4NjE=", "number": 111, "title": "How to run worker forever and process future requests via request-reply?", "user": {"login": "kiddpt", "id": 5070414, "node_id": "MDQ6VXNlcjUwNzA0MTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5070414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiddpt", "html_url": "https://github.com/kiddpt", "followers_url": "https://api.github.com/users/kiddpt/followers", "following_url": "https://api.github.com/users/kiddpt/following{/other_user}", "gists_url": "https://api.github.com/users/kiddpt/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiddpt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiddpt/subscriptions", "organizations_url": "https://api.github.com/users/kiddpt/orgs", "repos_url": "https://api.github.com/users/kiddpt/repos", "events_url": "https://api.github.com/users/kiddpt/events{/privacy}", "received_events_url": "https://api.github.com/users/kiddpt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-06T08:43:26Z", "updated_at": "2019-08-07T05:35:14Z", "closed_at": "2019-08-07T05:35:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "How will you write a code that would wait for all future requests using the request-reply feature for NATS? When I run the script:\r\n\r\n```python\r\n    import asyncio\r\n    from nats.aio.client import Client as NATS\r\n    \r\n    async def run(loop):\r\n        nc = NATS()\r\n    \r\n        await nc.connect(\"nats:4222\", loop=loop)\r\n    \r\n        async def help_request(msg):\r\n            subject = msg.subject\r\n            reply = msg.reply\r\n            data = msg.data.decode()\r\n            print(\"Received a message on '{subject} {reply}': {data}\".format(\r\n                subject=subject, reply=reply, data=data))\r\n            await nc.publish(reply, b'I can help')\r\n    \r\n        # Use queue named 'workers' for distributing requests\r\n        # among subscribers.\r\n        await nc.subscribe(\"help\", \"workers\", help_request)\r\n    \r\n        await nc.close()\r\n    \r\n    if __name__ == '__main__':\r\n        loop = asyncio.get_event_loop()\r\n        loop.run_until_complete(run(loop))\r\n        loop.close()\r\n```\r\n\r\nIt just runs through all the codes and then exits quickly. Coming from a NodeJS background, I'm assuming `nc.subscribe(\"help\", \"workers\", help_request)` opens up a running job that would hold the process from exiting. How do you do this in python?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/110", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/110/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/110/events", "html_url": "https://github.com/nats-io/nats.py/issues/110", "id": 463887497, "node_id": "MDU6SXNzdWU0NjM4ODc0OTc=", "number": 110, "title": "Add discovered servers handler", "user": {"login": "wallyqs", "id": 26195, "node_id": "MDQ6VXNlcjI2MTk1", "avatar_url": "https://avatars3.githubusercontent.com/u/26195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wallyqs", "html_url": "https://github.com/wallyqs", "followers_url": "https://api.github.com/users/wallyqs/followers", "following_url": "https://api.github.com/users/wallyqs/following{/other_user}", "gists_url": "https://api.github.com/users/wallyqs/gists{/gist_id}", "starred_url": "https://api.github.com/users/wallyqs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wallyqs/subscriptions", "organizations_url": "https://api.github.com/users/wallyqs/orgs", "repos_url": "https://api.github.com/users/wallyqs/repos", "events_url": "https://api.github.com/users/wallyqs/events{/privacy}", "received_events_url": "https://api.github.com/users/wallyqs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-03T18:07:58Z", "updated_at": "2019-08-26T22:28:16Z", "closed_at": "2019-08-26T22:28:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "That can be used to notify when a new server joins, similar as in the Go client.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/105", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/105/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/105/events", "html_url": "https://github.com/nats-io/nats.py/issues/105", "id": 443907183, "node_id": "MDU6SXNzdWU0NDM5MDcxODM=", "number": 105, "title": "Use f-strings instead of .format", "user": {"login": "charliestrawn", "id": 235416, "node_id": "MDQ6VXNlcjIzNTQxNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/235416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charliestrawn", "html_url": "https://github.com/charliestrawn", "followers_url": "https://api.github.com/users/charliestrawn/followers", "following_url": "https://api.github.com/users/charliestrawn/following{/other_user}", "gists_url": "https://api.github.com/users/charliestrawn/gists{/gist_id}", "starred_url": "https://api.github.com/users/charliestrawn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charliestrawn/subscriptions", "organizations_url": "https://api.github.com/users/charliestrawn/orgs", "repos_url": "https://api.github.com/users/charliestrawn/repos", "events_url": "https://api.github.com/users/charliestrawn/events{/privacy}", "received_events_url": "https://api.github.com/users/charliestrawn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 304665586, "node_id": "MDU6TGFiZWwzMDQ2NjU1ODY=", "url": "https://api.github.com/repos/nats-io/nats.py/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "charliestrawn", "id": 235416, "node_id": "MDQ6VXNlcjIzNTQxNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/235416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charliestrawn", "html_url": "https://github.com/charliestrawn", "followers_url": "https://api.github.com/users/charliestrawn/followers", "following_url": "https://api.github.com/users/charliestrawn/following{/other_user}", "gists_url": "https://api.github.com/users/charliestrawn/gists{/gist_id}", "starred_url": "https://api.github.com/users/charliestrawn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charliestrawn/subscriptions", "organizations_url": "https://api.github.com/users/charliestrawn/orgs", "repos_url": "https://api.github.com/users/charliestrawn/repos", "events_url": "https://api.github.com/users/charliestrawn/events{/privacy}", "received_events_url": "https://api.github.com/users/charliestrawn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "charliestrawn", "id": 235416, "node_id": "MDQ6VXNlcjIzNTQxNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/235416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charliestrawn", "html_url": "https://github.com/charliestrawn", "followers_url": "https://api.github.com/users/charliestrawn/followers", "following_url": "https://api.github.com/users/charliestrawn/following{/other_user}", "gists_url": "https://api.github.com/users/charliestrawn/gists{/gist_id}", "starred_url": "https://api.github.com/users/charliestrawn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charliestrawn/subscriptions", "organizations_url": "https://api.github.com/users/charliestrawn/orgs", "repos_url": "https://api.github.com/users/charliestrawn/repos", "events_url": "https://api.github.com/users/charliestrawn/events{/privacy}", "received_events_url": "https://api.github.com/users/charliestrawn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2019-05-14T13:12:05Z", "updated_at": "2020-04-12T23:52:03Z", "closed_at": "2020-04-12T23:52:03Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Python 3.6+ supports a new style of string formatting which reads much easier.\r\n\r\n```py\r\nuri = urlparse(\"{}://{}\".format(scheme, connect_url))\r\n```\r\nbecomes\r\n```py\r\nuri = urlparse(f'{scheme}://{connect_url}')\r\n```\r\nThis reads nicer in areas like the protocol where we are concatting strings with `+` as well.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/99", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/99/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/99/events", "html_url": "https://github.com/nats-io/nats.py/issues/99", "id": 418507386, "node_id": "MDU6SXNzdWU0MTg1MDczODY=", "number": 99, "title": "Python NATS Client not able to achieve the desired performance", "user": {"login": "purDgr8", "id": 48211476, "node_id": "MDQ6VXNlcjQ4MjExNDc2", "avatar_url": "https://avatars1.githubusercontent.com/u/48211476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/purDgr8", "html_url": "https://github.com/purDgr8", "followers_url": "https://api.github.com/users/purDgr8/followers", "following_url": "https://api.github.com/users/purDgr8/following{/other_user}", "gists_url": "https://api.github.com/users/purDgr8/gists{/gist_id}", "starred_url": "https://api.github.com/users/purDgr8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/purDgr8/subscriptions", "organizations_url": "https://api.github.com/users/purDgr8/orgs", "repos_url": "https://api.github.com/users/purDgr8/repos", "events_url": "https://api.github.com/users/purDgr8/events{/privacy}", "received_events_url": "https://api.github.com/users/purDgr8/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2019-03-07T20:16:32Z", "updated_at": "2019-05-15T03:21:09Z", "closed_at": "2019-05-15T03:21:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have written a short python NATS Client that subscribes to a certain subject and then publishes 'n' number of requests to  the gNATSd and eventually to a NatsClient written in C. This C NatsClient then replies on the 'reply subject' mentioned in the publish_request call. The problem that I see is : all the publish_requests are sent very quickly from python Natsclient to gNATSd and then to the C Natsclient, but the response takes pretty long. I am sure that the bottleneck here is somewhere in the subscribe and the response_handle part of the code and not in the C Natsclient that sends the responses. Here is the code snippet :\r\n\r\n    def connect(self):\r\n        self.loop.run_until_complete(self.nc.connect(servers=[\"nats://localhost:4222\"]))\r\n\r\n    def disconnect(self):\r\n        return self.loop.run_until_complete(self.nc.close())\r\n\r\n    def send(self, request_number):\r\n        self.loop.run_until_complete(self.pub())\r\n\r\n    def recv(self):\r\n        self.loop.run_until_complete(self.sub())\r\n\r\n    def wait_for_msg(self):\r\n        self.loop.run_until_complete(self.wait())\r\n\r\n    async def pub(self):\r\n        await self.nc.publish_request(self.subject, self.reply, json.dumps(self.data1).encode())\r\n\r\n    async def sub(self):\r\n        async def response_handle(msg):\r\n            message = json.loads(msg.data.decode())\r\n            self.msgs.append(message)\r\n            #self.future.set_result(message)\r\n\r\n        await self.nc.subscribe(self.reply, cb = response_handle)\r\n\r\n    async def wait(self):\r\n        try:\r\n            msg = await asyncio.wait_for(self.future, 1)\r\n        except asyncio.TimeoutError:\r\n            print(\"NATS: No more messages to receive exiting\")\r\n\r\n\r\nThose methods are being called in the following order :\r\n\r\n    def send_recv(self):\r\n        self.nats.recv()\r\n        for i in range(100):\r\n            self.nats.send()\r\n        self.nats.wait_for_msg()\r\n\r\n    def run(self):\r\n        self.nats.connect()\r\n        t = time.time()\r\n        self.send_recv()\r\n        self.nats.flush_nats()\r\n        total_time = time.time() - t\r\n        self.nats.print()\r\n        print (\"Time taken:\", total_time)\r\n\r\nAlso, a general observation is that on increasing the number of response from 100 to say 10000, I see that the program exits after receiving only a few responses and after raising the exception \"NATS: No more messages to receive exiting\". However, if I raise the timeout value to a greater number here : await asyncio.wait_for(self.future, 1) I do get all the responses.\r\n\r\nCould someone please suggest what can be done to reduce the time for processing all those requests.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/97", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/97/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/97/events", "html_url": "https://github.com/nats-io/nats.py/issues/97", "id": 413838179, "node_id": "MDU6SXNzdWU0MTM4MzgxNzk=", "number": 97, "title": "functools.partial as callback on request", "user": {"login": "aratz-lasa", "id": 28734408, "node_id": "MDQ6VXNlcjI4NzM0NDA4", "avatar_url": "https://avatars2.githubusercontent.com/u/28734408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aratz-lasa", "html_url": "https://github.com/aratz-lasa", "followers_url": "https://api.github.com/users/aratz-lasa/followers", "following_url": "https://api.github.com/users/aratz-lasa/following{/other_user}", "gists_url": "https://api.github.com/users/aratz-lasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/aratz-lasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aratz-lasa/subscriptions", "organizations_url": "https://api.github.com/users/aratz-lasa/orgs", "repos_url": "https://api.github.com/users/aratz-lasa/repos", "events_url": "https://api.github.com/users/aratz-lasa/events{/privacy}", "received_events_url": "https://api.github.com/users/aratz-lasa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-24T16:15:41Z", "updated_at": "2019-02-24T16:55:13Z", "closed_at": "2019-02-24T16:55:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I think it would be a nice idea if you could pass an async function wrapped on functools.partial.\r\nIt would be just to add two lines in nats-->aio-->client.py-->line 509:\r\n`elif hasattr(cb, \"func\") and asyncio.iscoroutinefunction(cb.func):\r\n                sub.coro = cb`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/93", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/93/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/93/events", "html_url": "https://github.com/nats-io/nats.py/issues/93", "id": 377009819, "node_id": "MDU6SXNzdWUzNzcwMDk4MTk=", "number": 93, "title": "Sometimes gnats server responds with a \"PING\" of its own instead of \"OK\" after initial connection, causing is_connected to never get set on the client.", "user": {"login": "lemonkey", "id": 53710, "node_id": "MDQ6VXNlcjUzNzEw", "avatar_url": "https://avatars1.githubusercontent.com/u/53710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lemonkey", "html_url": "https://github.com/lemonkey", "followers_url": "https://api.github.com/users/lemonkey/followers", "following_url": "https://api.github.com/users/lemonkey/following{/other_user}", "gists_url": "https://api.github.com/users/lemonkey/gists{/gist_id}", "starred_url": "https://api.github.com/users/lemonkey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lemonkey/subscriptions", "organizations_url": "https://api.github.com/users/lemonkey/orgs", "repos_url": "https://api.github.com/users/lemonkey/repos", "events_url": "https://api.github.com/users/lemonkey/events{/privacy}", "received_events_url": "https://api.github.com/users/lemonkey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-11-03T01:11:57Z", "updated_at": "2019-08-16T00:55:51Z", "closed_at": "2019-05-14T18:22:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "This can lead to situations where an attempt to connect via a NATS instance using await finishes waiting for the asynchronous connection to complete, yet the NATS instance is not formally connected via the is_connected property being set to True.\r\n\r\nWhen the gnats server responds to a connect command with \"OK\", if we proceed to immediately write \"PING\", the server will respond with the expected \"PONG\".\r\n\r\nBut when the gnats server responds to a connect command with its own \"PING\", when we immediately write \"PING\", the next op from the io_reader buffer will be the server's own \"PING\" instead of the expected \"PONG\", which is what client.py is using to consider the client connected.\r\n\r\nMy proposed fix is to simply add an extra `next_op = yield from self._io_reader.readline()` after the main connect command is written, but before we send the client's \"PING\" to the server.\r\n\r\nThe value of next_op after the initial connection will still be either \"OK\" or sometimes \"PING\". In either case, after we write our own \"PING\" from the client and then drain the writer, the next op read from the io_reader buffer will consistenly be \"OK\" and then \"PONG\" (unless there was an actual problem with the client's PING from being recognized by the gnats server).\r\n\r\nWith the fix, example of when server responds with expected \"OK\" after initial connection:\r\n```\r\nclient.py: writing connect_cmd [b'CONNECT {\"auth_token\": \"xxxxxxx\", \"echo\": true, \"lang\": \"python3\", \"pedantic\": true, \"protocol\": 1, \"verbose\": true, \"version\": \"0.8.2\"}\\r\\n']\r\nclient.py: next_op [b'+OK\\r\\n']\r\nclient.py: writing ping_proto [b'PING\\r\\n']\r\nclient.py: next_op [b'PONG\\r\\n']\r\nclient.py: client is_connected set to True!\r\nclient.py: process_connect_init() complete\r\n```\r\n\r\nWith the fix, example of when server responds with unexpected \"PING\" after initial connection:\r\n```\r\nclient.py: writing connect_cmd [b'CONNECT {\"auth_token\": \"xxxxxxx\", \"echo\": true, \"lang\": \"python3\", \"pedantic\": true, \"protocol\": 1, \"verbose\": true, \"version\": \"0.8.2\"}\\r\\n']\r\nclient.py: next_op [b'PING\\r\\n']\r\nclient.py: writing ping_proto [b'PING\\r\\n']\r\nclient.py: next_op [b'+OK\\r\\n']\r\nclient.py: next_op [b'PONG\\r\\n']\r\nclient.py: client is_connected set to True!\r\nclient.py: process_connect_init() complete\r\n```\r\n\r\nNote that in the above case, the \"OK\" is read from the io_reader because verbose is currently set to True.\r\n\r\nWithout the fix mentioned above, we can sometimes see:\r\n```\r\nclient.py: writing connect_cmd [b'CONNECT {\"auth_token\": \"xxxxxxx\", \"echo\": true, \"lang\": \"python3\", \"pedantic\": true, \"protocol\": 1, \"verbose\": true, \"version\": \"0.8.2\"}\\r\\n']\r\nclient.py: writing ping_proto [b'PING\\r\\n']\r\nclient.py: next_op [b'PING\\r\\n']\r\nclient.py: client is_connected is NOT set to True!\r\nclient.py: process_connect_init() complete\r\n```\r\n\r\nhttps://github.com/nats-io/asyncio-nats/blob/a370dcc6733a3f32544568afe5885ffdf6c96905/nats/aio/client.py#L1311", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/90", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/90/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/90/events", "html_url": "https://github.com/nats-io/nats.py/issues/90", "id": 361298540, "node_id": "MDU6SXNzdWUzNjEyOTg1NDA=", "number": 90, "title": "Wrong order of callbacks", "user": {"login": "nxsofsys", "id": 1502388, "node_id": "MDQ6VXNlcjE1MDIzODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1502388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nxsofsys", "html_url": "https://github.com/nxsofsys", "followers_url": "https://api.github.com/users/nxsofsys/followers", "following_url": "https://api.github.com/users/nxsofsys/following{/other_user}", "gists_url": "https://api.github.com/users/nxsofsys/gists{/gist_id}", "starred_url": "https://api.github.com/users/nxsofsys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nxsofsys/subscriptions", "organizations_url": "https://api.github.com/users/nxsofsys/orgs", "repos_url": "https://api.github.com/users/nxsofsys/repos", "events_url": "https://api.github.com/users/nxsofsys/events{/privacy}", "received_events_url": "https://api.github.com/users/nxsofsys/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-09-18T13:14:13Z", "updated_at": "2018-09-19T00:37:41Z", "closed_at": "2018-09-19T00:37:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nNATS documentation says, that messages from one publisher are received in the same order as they were published. But if we make few subscriptions, and publish messages for each one few times, callbacks will be called in different order. This is because each subscriber has own message queue. Here is example:\r\n\r\nreceive.py\r\n```\r\nimport asyncio\r\nfrom nats.aio.client import Client as NATS\r\n\r\nasync def run(loop):\r\n\r\n    await nc.connect(\"nats://nats:4222\", loop=loop)\r\n\r\n    async def message_handler_A(msg):\r\n        print('message_handler_A')\r\n\r\n    async def message_handler_B(msg):\r\n        print('message_handler_B')\r\n\r\n    async def message_handler_C(msg):\r\n        print('message_handler_C')\r\n\r\n    await nc.subscribe(\"message_handler_A\", cb=message_handler_A)\r\n    await nc.subscribe(\"message_handler_B\", cb=message_handler_B)\r\n    await nc.subscribe(\"message_handler_C\", cb=message_handler_C)\r\n    print('receiving')\r\n\r\n\r\nif __name__ == '__main__':\r\n    nc = NATS()\r\n    loop = asyncio.get_event_loop()\r\n    loop.run_until_complete(run(loop))\r\n    loop.run_forever()\r\n```\r\n\r\npublish.py:\r\n```\r\nimport asyncio\r\nfrom nats.aio.client import Client as NATS\r\n\r\nasync def run(loop):\r\n    await nc.connect(\"nats://nats:4222\", loop=loop)\r\n    for i in range(10):\r\n      await nc.publish(\"message_handler_B\", b\"\")\r\n      await nc.publish(\"message_handler_C\", b\"\")\r\n      await nc.publish(\"message_handler_A\", b\"\")\r\n\r\nif __name__ == '__main__':\r\n    nc = NATS()\r\n    loop = asyncio.get_event_loop()\r\n    loop.run_until_complete(run(loop))\r\n    loop.run_forever()\r\n```\r\n\r\nJust run publish.py after receive.py.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/85", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/85/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/85/events", "html_url": "https://github.com/nats-io/nats.py/issues/85", "id": 355214312, "node_id": "MDU6SXNzdWUzNTUyMTQzMTI=", "number": 85, "title": "aiohttp loop issue", "user": {"login": "jimmykirk", "id": 4401577, "node_id": "MDQ6VXNlcjQ0MDE1Nzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4401577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimmykirk", "html_url": "https://github.com/jimmykirk", "followers_url": "https://api.github.com/users/jimmykirk/followers", "following_url": "https://api.github.com/users/jimmykirk/following{/other_user}", "gists_url": "https://api.github.com/users/jimmykirk/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimmykirk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimmykirk/subscriptions", "organizations_url": "https://api.github.com/users/jimmykirk/orgs", "repos_url": "https://api.github.com/users/jimmykirk/repos", "events_url": "https://api.github.com/users/jimmykirk/events{/privacy}", "received_events_url": "https://api.github.com/users/jimmykirk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-29T15:26:18Z", "updated_at": "2018-08-30T15:37:20Z", "closed_at": "2018-08-30T15:37:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to have my messages post to nats as I run the function, but cannot workout how to do this within aiohttp\r\n\r\n```python\r\nimport lasio\r\nimport numpy\r\nfrom aiohttp import web\r\nimport json\r\nfrom nats.aio.client import Client as NATS\r\nimport asyncio\r\nfrom datetime import datetime\r\nimport os\r\n\r\nasync def parse_las(filepath):\r\n    try:\r\n        # read log file\r\n        l = lasio.read(filepath)\r\n\r\n        # create log curves array\r\n        log_curves = []\r\n\r\n        # loop through curves in file\r\n        for curve in l.curves:\r\n\r\n            # create curve object values\r\n            log_curve = {}\r\n            log_curve[\"mnem\"] = curve.mnemonic\r\n            log_curve[\"units\"] = curve.unit\r\n            log_curve[\"desc\"] = curve.descr\r\n\r\n            # Load curves\r\n            curves = l[curve.mnemonic]\r\n\r\n            # Replace nulls with -999.25 by default (config later)\r\n            curves[numpy.isnan(curves)] = -999.25\r\n\r\n            # Convert curve values from ndarray to list\r\n            log_curve[\"values\"] = curves.tolist()\r\n\r\n            # write curve to log curves array\r\n            log_curves.append(log_curve)\r\n\r\n        # get log params\r\n        params = []\r\n        for parameter in l.params:\r\n            param = {}\r\n            param['mnem'] = parameter.mnemonic\r\n            param['desc'] = parameter.descr\r\n            param['value'] = parameter.value\r\n            params.append(param)\r\n\r\n        # get log header\r\n        log_well = []\r\n        for well in l.well:\r\n            log_well_mnem = {}\r\n            log_well_mnem['mnem'] = well.mnemonic\r\n            log_well_mnem['desc'] = well.descr\r\n            log_well_mnem['value'] = well.value\r\n            log_well_mnem['unit'] = well.unit\r\n            log_well.append(log_well_mnem)\r\n\r\n        # return data\r\n        return {\"status\": \"success\", \"filename\": os.path.basename(filepath), \"data\": {\"curves\": log_curves, \"well\": log_well, \"params\": params}}\r\n\r\n    # errors\r\n    except KeyError:\r\n        return {\"status\": \"failed\", \"data\": \"Could not parse file. Error in file.\" }\r\n\r\n    except WindowsError:\r\n        return {\"status\": \"failed\", \"data\": \"Could not open file specified. Check permissions and file location.\"}\r\n\r\nasync def send_message(loop, message):\r\n    mq_url = \"nats://10.0.20.205:30005\"\r\n    client = NATS()\r\n    await client.connect(io_loop=loop, servers=[mq_url])\r\n    await client.publish(\"logs\", message.encode())\r\n    #await client.flush()\r\n    client.close()\r\n\r\n\r\nasync def parse_log(request):\r\n    '''Handles log parsing'''\r\n    print('origin: ' + datetime.now().strftime(\"%H:%M:%S.%f\"))\r\n    try:\r\n        # parse input data\r\n        try:\r\n            data = await request.json()\r\n            #print(data)\r\n        except:\r\n            raise ValueError\r\n\r\n        if data is None:\r\n            raise ValueError\r\n\r\n        try:\r\n            filepath = str(data['filepath'])\r\n            #filepath = \"C:\\\\las\\\\1AA040307806W400_5.las\"\r\n        except (TypeError, KeyError):\r\n            raise ValueError\r\n        #print(filepath)\r\n        data = await parse_las(filepath)\r\n        #data = parse_las(\"C:\\\\las\\\\1AA040307806W400_5.las\")\r\n\r\n    except ValueError:\r\n        # if bad request data, return 400 Bad Request\r\n        web.web_response.Response.status = 400\r\n        return web.web_response.Response.status\r\n\r\n    except KeyError:\r\n        # if name already exists, return 409 Conflict\r\n        web.web_response.Response.status = 409\r\n        return web.web_response.Response.status\r\n\r\n    # return 200 Success\r\n    print('message: ' + datetime.now().strftime(\"%H:%M:%S.%f\"))\r\n    await send_message(loop, json.dumps(data))\r\n\r\n    return web.Response(text=\"{status: success}\")\r\n\r\napp = web.Application()\r\napp.router.add_post('/log/parse', parse_log)\r\n\r\nasync def main():\r\n    runner = web.AppRunner(app)\r\n    await runner.setup()\r\n    site = web.TCPSite(runner, '0.0.0.0', 8080)\r\n    await site.start()\r\n\r\nloop = asyncio.get_event_loop()\r\nsrv = loop.run_until_complete(main())\r\nloop.run_forever()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/81", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/81/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/81/events", "html_url": "https://github.com/nats-io/nats.py/issues/81", "id": 352758614, "node_id": "MDU6SXNzdWUzNTI3NTg2MTQ=", "number": 81, "title": "Implement connect timeout ", "user": {"login": "wallyqs", "id": 26195, "node_id": "MDQ6VXNlcjI2MTk1", "avatar_url": "https://avatars3.githubusercontent.com/u/26195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wallyqs", "html_url": "https://github.com/wallyqs", "followers_url": "https://api.github.com/users/wallyqs/followers", "following_url": "https://api.github.com/users/wallyqs/following{/other_user}", "gists_url": "https://api.github.com/users/wallyqs/gists{/gist_id}", "starred_url": "https://api.github.com/users/wallyqs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wallyqs/subscriptions", "organizations_url": "https://api.github.com/users/wallyqs/orgs", "repos_url": "https://api.github.com/users/wallyqs/repos", "events_url": "https://api.github.com/users/wallyqs/events{/privacy}", "received_events_url": "https://api.github.com/users/wallyqs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nats-io/nats.py/milestones/6", "html_url": "https://github.com/nats-io/nats.py/milestone/6", "labels_url": "https://api.github.com/repos/nats-io/nats.py/milestones/6/labels", "id": 3507584, "node_id": "MDk6TWlsZXN0b25lMzUwNzU4NA==", "number": 6, "title": "v0.8.0", "description": null, "creator": {"login": "wallyqs", "id": 26195, "node_id": "MDQ6VXNlcjI2MTk1", "avatar_url": "https://avatars3.githubusercontent.com/u/26195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wallyqs", "html_url": "https://github.com/wallyqs", "followers_url": "https://api.github.com/users/wallyqs/followers", "following_url": "https://api.github.com/users/wallyqs/following{/other_user}", "gists_url": "https://api.github.com/users/wallyqs/gists{/gist_id}", "starred_url": "https://api.github.com/users/wallyqs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wallyqs/subscriptions", "organizations_url": "https://api.github.com/users/wallyqs/orgs", "repos_url": "https://api.github.com/users/wallyqs/repos", "events_url": "https://api.github.com/users/wallyqs/events{/privacy}", "received_events_url": "https://api.github.com/users/wallyqs/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "open", "created_at": "2018-07-18T22:09:10Z", "updated_at": "2018-08-24T17:02:50Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2018-08-22T00:35:46Z", "updated_at": "2018-08-24T17:02:50Z", "closed_at": "2018-08-24T17:02:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://github.com/nats-io/asyncio-nats/blob/6b7fb09c0a240bc12102f6801790e760eb4541c5/nats/aio/client.py#L1140", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/79", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/79/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/79/events", "html_url": "https://github.com/nats-io/nats.py/issues/79", "id": 352335729, "node_id": "MDU6SXNzdWUzNTIzMzU3Mjk=", "number": 79, "title": "Simpler way to set NATS endpoint in connect API", "user": {"login": "wallyqs", "id": 26195, "node_id": "MDQ6VXNlcjI2MTk1", "avatar_url": "https://avatars3.githubusercontent.com/u/26195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wallyqs", "html_url": "https://github.com/wallyqs", "followers_url": "https://api.github.com/users/wallyqs/followers", "following_url": "https://api.github.com/users/wallyqs/following{/other_user}", "gists_url": "https://api.github.com/users/wallyqs/gists{/gist_id}", "starred_url": "https://api.github.com/users/wallyqs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wallyqs/subscriptions", "organizations_url": "https://api.github.com/users/wallyqs/orgs", "repos_url": "https://api.github.com/users/wallyqs/repos", "events_url": "https://api.github.com/users/wallyqs/events{/privacy}", "received_events_url": "https://api.github.com/users/wallyqs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nats-io/nats.py/milestones/6", "html_url": "https://github.com/nats-io/nats.py/milestone/6", "labels_url": "https://api.github.com/repos/nats-io/nats.py/milestones/6/labels", "id": 3507584, "node_id": "MDk6TWlsZXN0b25lMzUwNzU4NA==", "number": 6, "title": "v0.8.0", "description": null, "creator": {"login": "wallyqs", "id": 26195, "node_id": "MDQ6VXNlcjI2MTk1", "avatar_url": "https://avatars3.githubusercontent.com/u/26195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wallyqs", "html_url": "https://github.com/wallyqs", "followers_url": "https://api.github.com/users/wallyqs/followers", "following_url": "https://api.github.com/users/wallyqs/following{/other_user}", "gists_url": "https://api.github.com/users/wallyqs/gists{/gist_id}", "starred_url": "https://api.github.com/users/wallyqs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wallyqs/subscriptions", "organizations_url": "https://api.github.com/users/wallyqs/orgs", "repos_url": "https://api.github.com/users/wallyqs/repos", "events_url": "https://api.github.com/users/wallyqs/events{/privacy}", "received_events_url": "https://api.github.com/users/wallyqs/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "open", "created_at": "2018-07-18T22:09:10Z", "updated_at": "2018-08-24T17:02:50Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2018-08-20T23:52:10Z", "updated_at": "2018-08-21T22:35:32Z", "closed_at": "2018-08-21T22:35:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently when connecting, it is required to set an array with the list of servers as follows:\r\n\r\n```python\r\nawait nc.connect(servers=[\"nats://demo.nats.io:4222\"])\r\n\r\nawait nc.connect([\"nats://demo.nats.io:4222\"], max_reconnect_attempts=-1)\r\n```\r\n\r\nBut as in the Go client, this could be simplified to have a bare string with a single endpoint instead without having to specify the scheme:\r\n\r\n```python\r\nawait nc.connect(\"demo.nats.io:4222\", name='my-client')\r\n```\r\n\r\nor assuming the NATS server port is 4222 as well:\r\n\r\n```python\r\nawait nc.connect(\"demo.nats.io\", name='my-client')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/72", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/72/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/72/events", "html_url": "https://github.com/nats-io/nats.py/issues/72", "id": 349708556, "node_id": "MDU6SXNzdWUzNDk3MDg1NTY=", "number": 72, "title": "Add drain mode", "user": {"login": "wallyqs", "id": 26195, "node_id": "MDQ6VXNlcjI2MTk1", "avatar_url": "https://avatars3.githubusercontent.com/u/26195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wallyqs", "html_url": "https://github.com/wallyqs", "followers_url": "https://api.github.com/users/wallyqs/followers", "following_url": "https://api.github.com/users/wallyqs/following{/other_user}", "gists_url": "https://api.github.com/users/wallyqs/gists{/gist_id}", "starred_url": "https://api.github.com/users/wallyqs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wallyqs/subscriptions", "organizations_url": "https://api.github.com/users/wallyqs/orgs", "repos_url": "https://api.github.com/users/wallyqs/repos", "events_url": "https://api.github.com/users/wallyqs/events{/privacy}", "received_events_url": "https://api.github.com/users/wallyqs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nats-io/nats.py/milestones/6", "html_url": "https://github.com/nats-io/nats.py/milestone/6", "labels_url": "https://api.github.com/repos/nats-io/nats.py/milestones/6/labels", "id": 3507584, "node_id": "MDk6TWlsZXN0b25lMzUwNzU4NA==", "number": 6, "title": "v0.8.0", "description": null, "creator": {"login": "wallyqs", "id": 26195, "node_id": "MDQ6VXNlcjI2MTk1", "avatar_url": "https://avatars3.githubusercontent.com/u/26195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wallyqs", "html_url": "https://github.com/wallyqs", "followers_url": "https://api.github.com/users/wallyqs/followers", "following_url": "https://api.github.com/users/wallyqs/following{/other_user}", "gists_url": "https://api.github.com/users/wallyqs/gists{/gist_id}", "starred_url": "https://api.github.com/users/wallyqs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wallyqs/subscriptions", "organizations_url": "https://api.github.com/users/wallyqs/orgs", "repos_url": "https://api.github.com/users/wallyqs/repos", "events_url": "https://api.github.com/users/wallyqs/events{/privacy}", "received_events_url": "https://api.github.com/users/wallyqs/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "open", "created_at": "2018-07-18T22:09:10Z", "updated_at": "2018-08-24T17:02:50Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2018-08-11T05:46:29Z", "updated_at": "2018-08-24T09:59:29Z", "closed_at": "2018-08-24T09:59:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "\u27a1\ufe0e https://github.com/nats-io/go-nats/pull/378", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/71", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/71/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/71/events", "html_url": "https://github.com/nats-io/nats.py/issues/71", "id": 342920439, "node_id": "MDU6SXNzdWUzNDI5MjA0Mzk=", "number": 71, "title": "Revise Python 3.7 support", "user": {"login": "wallyqs", "id": 26195, "node_id": "MDQ6VXNlcjI2MTk1", "avatar_url": "https://avatars3.githubusercontent.com/u/26195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wallyqs", "html_url": "https://github.com/wallyqs", "followers_url": "https://api.github.com/users/wallyqs/followers", "following_url": "https://api.github.com/users/wallyqs/following{/other_user}", "gists_url": "https://api.github.com/users/wallyqs/gists{/gist_id}", "starred_url": "https://api.github.com/users/wallyqs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wallyqs/subscriptions", "organizations_url": "https://api.github.com/users/wallyqs/orgs", "repos_url": "https://api.github.com/users/wallyqs/repos", "events_url": "https://api.github.com/users/wallyqs/events{/privacy}", "received_events_url": "https://api.github.com/users/wallyqs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nats-io/nats.py/milestones/6", "html_url": "https://github.com/nats-io/nats.py/milestone/6", "labels_url": "https://api.github.com/repos/nats-io/nats.py/milestones/6/labels", "id": 3507584, "node_id": "MDk6TWlsZXN0b25lMzUwNzU4NA==", "number": 6, "title": "v0.8.0", "description": null, "creator": {"login": "wallyqs", "id": 26195, "node_id": "MDQ6VXNlcjI2MTk1", "avatar_url": "https://avatars3.githubusercontent.com/u/26195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wallyqs", "html_url": "https://github.com/wallyqs", "followers_url": "https://api.github.com/users/wallyqs/followers", "following_url": "https://api.github.com/users/wallyqs/following{/other_user}", "gists_url": "https://api.github.com/users/wallyqs/gists{/gist_id}", "starred_url": "https://api.github.com/users/wallyqs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wallyqs/subscriptions", "organizations_url": "https://api.github.com/users/wallyqs/orgs", "repos_url": "https://api.github.com/users/wallyqs/repos", "events_url": "https://api.github.com/users/wallyqs/events{/privacy}", "received_events_url": "https://api.github.com/users/wallyqs/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "open", "created_at": "2018-07-18T22:09:10Z", "updated_at": "2018-08-24T17:02:50Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2018-07-19T23:14:08Z", "updated_at": "2018-08-15T16:49:32Z", "closed_at": "2018-08-15T16:49:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "At first glance it looks like example works but there might me few regressions... a list of a few TODOs:\r\n\r\n- [x] Enable in Travis (waiting for: https://github.com/travis-ci/travis-ci/issues/9815)\r\n- [x] Revise TLS. Connect TLS example works but should probably move to use loop.start_tls instead which is available in Python 3.7(https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.AbstractEventLoop.start_tls)\r\n- [x] Fix failing tests (several `yield from` errors in tests)\r\n- [x] Update examples which now don't work (https://github.com/nats-io/asyncio-nats/issues/70)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/70", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/70/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/70/events", "html_url": "https://github.com/nats-io/nats.py/issues/70", "id": 342912654, "node_id": "MDU6SXNzdWUzNDI5MTI2NTQ=", "number": 70, "title": "Configuring TLS connections in python3.7", "user": {"login": "theisensanders-wf", "id": 1512948, "node_id": "MDQ6VXNlcjE1MTI5NDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1512948?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theisensanders-wf", "html_url": "https://github.com/theisensanders-wf", "followers_url": "https://api.github.com/users/theisensanders-wf/followers", "following_url": "https://api.github.com/users/theisensanders-wf/following{/other_user}", "gists_url": "https://api.github.com/users/theisensanders-wf/gists{/gist_id}", "starred_url": "https://api.github.com/users/theisensanders-wf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theisensanders-wf/subscriptions", "organizations_url": "https://api.github.com/users/theisensanders-wf/orgs", "repos_url": "https://api.github.com/users/theisensanders-wf/repos", "events_url": "https://api.github.com/users/theisensanders-wf/events{/privacy}", "received_events_url": "https://api.github.com/users/theisensanders-wf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nats-io/nats.py/milestones/6", "html_url": "https://github.com/nats-io/nats.py/milestone/6", "labels_url": "https://api.github.com/repos/nats-io/nats.py/milestones/6/labels", "id": 3507584, "node_id": "MDk6TWlsZXN0b25lMzUwNzU4NA==", "number": 6, "title": "v0.8.0", "description": null, "creator": {"login": "wallyqs", "id": 26195, "node_id": "MDQ6VXNlcjI2MTk1", "avatar_url": "https://avatars3.githubusercontent.com/u/26195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wallyqs", "html_url": "https://github.com/wallyqs", "followers_url": "https://api.github.com/users/wallyqs/followers", "following_url": "https://api.github.com/users/wallyqs/following{/other_user}", "gists_url": "https://api.github.com/users/wallyqs/gists{/gist_id}", "starred_url": "https://api.github.com/users/wallyqs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wallyqs/subscriptions", "organizations_url": "https://api.github.com/users/wallyqs/orgs", "repos_url": "https://api.github.com/users/wallyqs/repos", "events_url": "https://api.github.com/users/wallyqs/events{/privacy}", "received_events_url": "https://api.github.com/users/wallyqs/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "open", "created_at": "2018-07-18T22:09:10Z", "updated_at": "2018-08-24T17:02:50Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2018-07-19T22:35:47Z", "updated_at": "2018-08-15T16:56:31Z", "closed_at": "2018-08-15T16:56:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @wallyqs  , a change to python in version 3.7 breaks the recommended method of setting up TLS connections.\r\n\r\n```python\r\n>>> import ssl\r\n>>> ssl_ctx = ssl.create_default_context(purpose=ssl.Purpose.SERVER_AUTH)\r\n>>> ssl_ctx.protocol = ssl.PROTOCOL_TLSv1_2\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAttributeError: can't set attribute\r\n```\r\n\r\nIs there another way to set up an SSL context without setting the protocol property?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/68", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/68/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/68/events", "html_url": "https://github.com/nats-io/nats.py/issues/68", "id": 342509457, "node_id": "MDU6SXNzdWUzNDI1MDk0NTc=", "number": 68, "title": "Use async/await syntax in the client", "user": {"login": "wallyqs", "id": 26195, "node_id": "MDQ6VXNlcjI2MTk1", "avatar_url": "https://avatars3.githubusercontent.com/u/26195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wallyqs", "html_url": "https://github.com/wallyqs", "followers_url": "https://api.github.com/users/wallyqs/followers", "following_url": "https://api.github.com/users/wallyqs/following{/other_user}", "gists_url": "https://api.github.com/users/wallyqs/gists{/gist_id}", "starred_url": "https://api.github.com/users/wallyqs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wallyqs/subscriptions", "organizations_url": "https://api.github.com/users/wallyqs/orgs", "repos_url": "https://api.github.com/users/wallyqs/repos", "events_url": "https://api.github.com/users/wallyqs/events{/privacy}", "received_events_url": "https://api.github.com/users/wallyqs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nats-io/nats.py/milestones/7", "html_url": "https://github.com/nats-io/nats.py/milestone/7", "labels_url": "https://api.github.com/repos/nats-io/nats.py/milestones/7/labels", "id": 3573383, "node_id": "MDk6TWlsZXN0b25lMzU3MzM4Mw==", "number": 7, "title": "v1.0.0", "description": "", "creator": {"login": "wallyqs", "id": 26195, "node_id": "MDQ6VXNlcjI2MTk1", "avatar_url": "https://avatars3.githubusercontent.com/u/26195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wallyqs", "html_url": "https://github.com/wallyqs", "followers_url": "https://api.github.com/users/wallyqs/followers", "following_url": "https://api.github.com/users/wallyqs/following{/other_user}", "gists_url": "https://api.github.com/users/wallyqs/gists{/gist_id}", "starred_url": "https://api.github.com/users/wallyqs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wallyqs/subscriptions", "organizations_url": "https://api.github.com/users/wallyqs/orgs", "repos_url": "https://api.github.com/users/wallyqs/repos", "events_url": "https://api.github.com/users/wallyqs/events{/privacy}", "received_events_url": "https://api.github.com/users/wallyqs/received_events", "type": "User", "site_admin": false}, "open_issues": 10, "closed_issues": 1, "state": "open", "created_at": "2018-08-15T16:19:49Z", "updated_at": "2019-12-06T22:47:06Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2018-07-18T22:08:58Z", "updated_at": "2019-08-30T22:24:44Z", "closed_at": "2019-08-30T22:24:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently using `yield from` and `asyncio.coroutine` but should update to use async/await instead soon.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/66", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/66/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/66/events", "html_url": "https://github.com/nats-io/nats.py/issues/66", "id": 341987004, "node_id": "MDU6SXNzdWUzNDE5ODcwMDQ=", "number": 66, "title": "Library reconnects don't work", "user": {"login": "pvanderlinden", "id": 391586, "node_id": "MDQ6VXNlcjM5MTU4Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/391586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvanderlinden", "html_url": "https://github.com/pvanderlinden", "followers_url": "https://api.github.com/users/pvanderlinden/followers", "following_url": "https://api.github.com/users/pvanderlinden/following{/other_user}", "gists_url": "https://api.github.com/users/pvanderlinden/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvanderlinden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvanderlinden/subscriptions", "organizations_url": "https://api.github.com/users/pvanderlinden/orgs", "repos_url": "https://api.github.com/users/pvanderlinden/repos", "events_url": "https://api.github.com/users/pvanderlinden/events{/privacy}", "received_events_url": "https://api.github.com/users/pvanderlinden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-17T16:09:22Z", "updated_at": "2018-07-19T15:51:55Z", "closed_at": "2018-07-18T22:05:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Originally posted here: https://github.com/nats-io/asyncio-nats-streaming/issues/7\r\nI can not get reconnects working, I have tested it with a program publishing and consuming, if I shut down the server for a few seconds, they both will stop working (the publisher will timeout on publishing, the consumer will just not receive any messages anymore)\r\n\r\nConnection code:\r\n```\r\nfrom functools import partial\r\n\r\n\r\nasync def test_cb(cb_type, *args, **kwargs):\r\n    print(cb_type, args, kwargs)\r\n\r\nnc = NATS()\r\nawait nc.connect(io_loop=loop, error_cb=partial(test_cb, 'error'), disconnected_cb=partial(test_cb, 'disconnect'), closed_cb=partial(test_cb, 'closed'), reconnected_cb=partial(test_cb, 'reconnect'), ping_interval=25)\r\n```\r\n\r\nOutput:\r\n```\r\nerror (NatsError('nats: empty response from server when expecting INFO message',),) {}\r\nreconnect () {}\r\nerror (<class 'nats.aio.errors.ErrStaleConnection'>,) {}\r\ndisconnect () {}\r\nerror (NatsError('nats: empty response from server when expecting INFO message',),) {}\r\nerror (ConnectionRefusedError(111, \"Connect call failed ('127.0.0.1', 4222)\"),) {}\r\ndisconnect () {}\r\nclosed () {}\r\n```\r\n\r\nWhat I understand from the defaults it should try to reconnect 10 times with a delay of 2 seconds, which means if the server is down for less then 20 seconds it should at least reconnect and resume operation, unfortunately it won't resume operation (the consumer will just not receive anything anymore, the producer will timeout on a publish call, even when the server is back up again).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/60", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/60/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/60/events", "html_url": "https://github.com/nats-io/nats.py/issues/60", "id": 331707792, "node_id": "MDU6SXNzdWUzMzE3MDc3OTI=", "number": 60, "title": "This is unfortunatly completly useless without even the most basic examples", "user": {"login": "tpihl", "id": 74858, "node_id": "MDQ6VXNlcjc0ODU4", "avatar_url": "https://avatars0.githubusercontent.com/u/74858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tpihl", "html_url": "https://github.com/tpihl", "followers_url": "https://api.github.com/users/tpihl/followers", "following_url": "https://api.github.com/users/tpihl/following{/other_user}", "gists_url": "https://api.github.com/users/tpihl/gists{/gist_id}", "starred_url": "https://api.github.com/users/tpihl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tpihl/subscriptions", "organizations_url": "https://api.github.com/users/tpihl/orgs", "repos_url": "https://api.github.com/users/tpihl/repos", "events_url": "https://api.github.com/users/tpihl/events{/privacy}", "received_events_url": "https://api.github.com/users/tpihl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-12T18:44:17Z", "updated_at": "2018-06-13T17:56:35Z", "closed_at": "2018-06-13T17:55:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was hopeful when i saw CloudNative but this doc is horrible and seems to be moved forward forever. Go side is useful, but this.....\r\n\r\nNot a single example where the nats server is somewhere except on localhost. I really doubt NATS is valuable in the community at this stage and maybe we should select more community-friendly cloud-native tools.\r\n\r\nAnd not a single example or ambition to support non-asyncio-approach. Most python scripts are small and become over-complex if they need asyncio mandatory for simple devops stuff or similar. \r\n\r\nTo bad.\r\n/T\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/54", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/54/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/54/events", "html_url": "https://github.com/nats-io/nats.py/issues/54", "id": 296725850, "node_id": "MDU6SXNzdWUyOTY3MjU4NTA=", "number": 54, "title": "Performance problems", "user": {"login": "umax", "id": 14619, "node_id": "MDQ6VXNlcjE0NjE5", "avatar_url": "https://avatars1.githubusercontent.com/u/14619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/umax", "html_url": "https://github.com/umax", "followers_url": "https://api.github.com/users/umax/followers", "following_url": "https://api.github.com/users/umax/following{/other_user}", "gists_url": "https://api.github.com/users/umax/gists{/gist_id}", "starred_url": "https://api.github.com/users/umax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/umax/subscriptions", "organizations_url": "https://api.github.com/users/umax/orgs", "repos_url": "https://api.github.com/users/umax/repos", "events_url": "https://api.github.com/users/umax/events{/privacy}", "received_events_url": "https://api.github.com/users/umax/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nats-io/nats.py/milestones/3", "html_url": "https://github.com/nats-io/nats.py/milestone/3", "labels_url": "https://api.github.com/repos/nats-io/nats.py/milestones/3/labels", "id": 3114784, "node_id": "MDk6TWlsZXN0b25lMzExNDc4NA==", "number": 3, "title": "v0.7.0", "description": null, "creator": {"login": "wallyqs", "id": 26195, "node_id": "MDQ6VXNlcjI2MTk1", "avatar_url": "https://avatars3.githubusercontent.com/u/26195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wallyqs", "html_url": "https://github.com/wallyqs", "followers_url": "https://api.github.com/users/wallyqs/followers", "following_url": "https://api.github.com/users/wallyqs/following{/other_user}", "gists_url": "https://api.github.com/users/wallyqs/gists{/gist_id}", "starred_url": "https://api.github.com/users/wallyqs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wallyqs/subscriptions", "organizations_url": "https://api.github.com/users/wallyqs/orgs", "repos_url": "https://api.github.com/users/wallyqs/repos", "events_url": "https://api.github.com/users/wallyqs/events{/privacy}", "received_events_url": "https://api.github.com/users/wallyqs/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "closed", "created_at": "2018-02-13T21:50:05Z", "updated_at": "2018-07-20T16:21:24Z", "due_on": null, "closed_at": "2018-07-20T16:21:24Z"}, "comments": 12, "created_at": "2018-02-13T12:50:43Z", "updated_at": "2018-04-04T19:21:09Z", "closed_at": "2018-04-04T19:21:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nI want to get know NATS + asyncio-nats-client RPS (request-response case). The test scenario is simple:\r\nserver.py\r\n```py\r\nimport asyncio\r\n\r\nimport uvloop\r\n\r\nfrom nats.aio.client import Client\r\n\r\n\r\nasync def main(loop):\r\n    client = Client()\r\n    await client.connect(io_loop=loop)\r\n    print('connected')\r\n\r\n    async def handler(msg):\r\n        await client.publish(msg.reply, b'pong')\r\n\r\n    await client.subscribe('test', queue='workers', cb=handler)\r\n    print('subscribed')\r\n\r\n\r\nif __name__ == '__main__':\r\n    loop = uvloop.new_event_loop()\r\n    asyncio.set_event_loop(loop)\r\n\r\n    loop.run_until_complete(main(loop))\r\n    print('start listening')\r\n    loop.run_forever()\r\n    loop.close()\r\n```\r\n\r\nclient.py\r\n```py\r\nimport asyncio\r\nimport sys\r\n\r\nimport uvloop\r\nfrom nats.aio.client import Client\r\n\r\n\r\nasync def main(loop):\r\n    futures = [\r\n        asyncio.ensure_future(client.timed_request('test', b'ping', 1))\r\n        for i in range(int(sys.argv[1]))\r\n    ]\r\n\r\n    await asyncio.wait_for(asyncio.gather(*futures), 1.0)\r\n\r\n\r\nif __name__ == '__main__':\r\n    loop = uvloop.new_event_loop()\r\n    asyncio.set_event_loop(loop)\r\n\r\n    client = Client()\r\n    loop.run_until_complete(client.connect(io_loop=loop))\r\n    print('connected')\r\n\r\n    loop.run_until_complete(main(loop))\r\n```\r\n\r\nHow to run:\r\n```\r\n$ gnatsd\r\n$ python3.6 server.py\r\n$ python3.6 client.py 1000\r\n```\r\n\r\nI cant' get more than 1000 requests/responses in 1 second on my MacBook Pro (2.3 GHz Intel Core i5). Maybe I do something wrong or it's library limitations?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/53", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/53/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/53/events", "html_url": "https://github.com/nats-io/nats.py/issues/53", "id": 290180933, "node_id": "MDU6SXNzdWUyOTAxODA5MzM=", "number": 53, "title": "Socketio asyncio NATS manage can't get subscribe message", "user": {"login": "Negashev", "id": 4653589, "node_id": "MDQ6VXNlcjQ2NTM1ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4653589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Negashev", "html_url": "https://github.com/Negashev", "followers_url": "https://api.github.com/users/Negashev/followers", "following_url": "https://api.github.com/users/Negashev/following{/other_user}", "gists_url": "https://api.github.com/users/Negashev/gists{/gist_id}", "starred_url": "https://api.github.com/users/Negashev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Negashev/subscriptions", "organizations_url": "https://api.github.com/users/Negashev/orgs", "repos_url": "https://api.github.com/users/Negashev/repos", "events_url": "https://api.github.com/users/Negashev/events{/privacy}", "received_events_url": "https://api.github.com/users/Negashev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 304665587, "node_id": "MDU6TGFiZWwzMDQ2NjU1ODc=", "url": "https://api.github.com/repos/nats-io/nats.py/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-20T10:08:45Z", "updated_at": "2018-08-15T07:14:45Z", "closed_at": "2018-08-15T07:14:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I write client manager for [python-socketio](https://github.com/miguelgrinberg/python-socketio) on NATS, following the example of a  [redis manager](https://github.com/miguelgrinberg/python-socketio/blob/master/socketio/asyncio_redis_manager.py).\r\nThis manager send publish but not get subscribe messages, what am I doing wrong?\r\n\r\nNATS (docker latest)\r\nPython (docker python:alpine)\r\n\r\n```python\r\nimport asyncio\r\nimport pickle\r\n\r\ntry:\r\n    import nats\r\nexcept ImportError:\r\n    nats = None\r\n\r\nfrom socketio.asyncio_pubsub_manager import AsyncPubSubManager\r\n\r\n\r\nclass AsyncNatsManager(AsyncPubSubManager):  # pragma: no cover\r\n    \"\"\"NATS based client manager for asyncio servers.\r\n\r\n    This class implements a NATS backend for event sharing across multiple\r\n    processes. Only kept here as one more example of how to build a custom\r\n    backend, since the kombu backend is perfectly adequate to support a NATS\r\n    message queue.\r\n\r\n    To use a NATS backend, initialize the :class:`Server` instance as\r\n    follows::\r\n\r\n        server = socketio.Server(client_manager=socketio.AsyncNatsManager(\r\n            'nats://hostname:port'))\r\n\r\n    :param url: The connection URL for the NATS server. For a default NATS\r\n                store running on the same host, use ``nats://``.\r\n    :param channel: The channel name on which the server sends and receives\r\n                    notifications. Must be the same in all the servers.\r\n    :param write_only: If set ot ``True``, only initialize to emit events. The\r\n                       default of ``False`` initializes the class for emitting\r\n                       and receiving.\r\n    \"\"\"\r\n    name = 'asyncionats'\r\n\r\n    def __init__(self, servers=None, channel='socketio',\r\n                 write_only=False):\r\n        if servers is None:\r\n            servers = [\"nats://nats:4222\"]\r\n        if nats is None:\r\n            raise RuntimeError('NATS package is not installed '\r\n                               '(Run \"pip install asyncio-nats-client\" in your '\r\n                               'virtualenv).')\r\n        self.servers = servers\r\n        self.queue = asyncio.Queue()\r\n        self.producer = None\r\n        self.consumer = None\r\n        self.sid = None\r\n        super().__init__(channel=channel, write_only=write_only)\r\n\r\n    async def _publish(self, data):\r\n        if self.producer is None:\r\n            self.producer = await nats.connect(servers=self.servers)\r\n        return await self.producer.publish(self.channel, pickle.dumps(data))\r\n\r\n    async def _listen(self):\r\n        print(self)\r\n        if self.consumer is None:\r\n            self.consumer = await nats.connect(servers=self.servers)\r\n            self.sid = await self.consumer.subscribe('socketio', cb=self.message_handler)\r\n        return await self.queue.get()\r\n\r\n    async def message_handler(self, msg):\r\n        subject = msg.subject\r\n        reply = msg.reply\r\n        data = msg.data.decode()\r\n        print(f\"Received a message on '{subject} {reply}': {data}\")\r\n        await self.queue.put(data)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/52", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/52/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/52/events", "html_url": "https://github.com/nats-io/nats.py/issues/52", "id": 286694790, "node_id": "MDU6SXNzdWUyODY2OTQ3OTA=", "number": 52, "title": "Closing the NATS connections blocks on something", "user": {"login": "c0deaddict", "id": 510553, "node_id": "MDQ6VXNlcjUxMDU1Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/510553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c0deaddict", "html_url": "https://github.com/c0deaddict", "followers_url": "https://api.github.com/users/c0deaddict/followers", "following_url": "https://api.github.com/users/c0deaddict/following{/other_user}", "gists_url": "https://api.github.com/users/c0deaddict/gists{/gist_id}", "starred_url": "https://api.github.com/users/c0deaddict/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c0deaddict/subscriptions", "organizations_url": "https://api.github.com/users/c0deaddict/orgs", "repos_url": "https://api.github.com/users/c0deaddict/repos", "events_url": "https://api.github.com/users/c0deaddict/events{/privacy}", "received_events_url": "https://api.github.com/users/c0deaddict/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nats-io/nats.py/milestones/5", "html_url": "https://github.com/nats-io/nats.py/milestone/5", "labels_url": "https://api.github.com/repos/nats-io/nats.py/milestones/5/labels", "id": 3242654, "node_id": "MDk6TWlsZXN0b25lMzI0MjY1NA==", "number": 5, "title": "v0.7.2", "description": null, "creator": {"login": "wallyqs", "id": 26195, "node_id": "MDQ6VXNlcjI2MTk1", "avatar_url": "https://avatars3.githubusercontent.com/u/26195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wallyqs", "html_url": "https://github.com/wallyqs", "followers_url": "https://api.github.com/users/wallyqs/followers", "following_url": "https://api.github.com/users/wallyqs/following{/other_user}", "gists_url": "https://api.github.com/users/wallyqs/gists{/gist_id}", "starred_url": "https://api.github.com/users/wallyqs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wallyqs/subscriptions", "organizations_url": "https://api.github.com/users/wallyqs/orgs", "repos_url": "https://api.github.com/users/wallyqs/repos", "events_url": "https://api.github.com/users/wallyqs/events{/privacy}", "received_events_url": "https://api.github.com/users/wallyqs/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "closed", "created_at": "2018-04-04T16:51:03Z", "updated_at": "2018-07-20T16:21:27Z", "due_on": null, "closed_at": "2018-07-20T16:21:27Z"}, "comments": 1, "created_at": "2018-01-08T09:58:18Z", "updated_at": "2018-07-18T23:17:10Z", "closed_at": "2018-07-18T23:17:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "After closing the connection with close() some tasks keep running for a few seconds. I expected that 'await nc.close()' would wait until all tasks are cancelled and stopped.\r\n\r\nSample code:\r\n\r\n```python\r\nimport asyncio\r\nimport signal\r\n\r\nfrom nats.aio.client import Client as NATS\r\n\r\nNATS_SERVERS = ['nats://localhost:4222']\r\n\r\nasync def main():\r\n    nc = NATS()\r\n    await nc.connect(servers=NATS_SERVERS)\r\n    print('Connected to NATS at {}'.format(nc.connected_url.netloc))\r\n\r\n    async def signal_handler():\r\n        if nc.is_closed:\r\n            return\r\n\r\n        print('Disconnecting from NATS...')\r\n        await nc.close()\r\n\r\n        pending = asyncio.Task.all_tasks()\r\n        for task in pending:\r\n            print('Task is still running: {} cancelled? {}'.format(task, task.cancelled())) \r\n\r\n    loop = asyncio.get_event_loop()\r\n    for sig in ('SIGINT', 'SIGTERM'):\r\n        loop.add_signal_handler(getattr(signal, sig),\r\n                                lambda: asyncio.ensure_future(signal_handler()))\r\n\r\n    # subscribe on messages\r\n\r\n\r\nif __name__ == '__main__':\r\n    loop = asyncio.get_event_loop()\r\n    loop.run_until_complete(main())\r\n    try:\r\n        loop.run_forever()\r\n    finally:\r\n        print('Shutting down')\r\n        loop.close()\r\n```\r\n\r\nThis is the output I get, you can see some tasks are still running.\r\n\r\n```\r\nConnected to NATS at localhost:4222\r\nDisconnecting from NATS...\r\nTask is still running: <Task pending coro=<main.<locals>.signal_handler() running at /usr/src/app/notifier/app.py:35>>, cancelled? False\r\nTask is still running: <Task pending coro=<Client._ping_interval() running at /usr/local/lib/python3.6/site-packages/nats/aio/client.py:963> wait_for=<Future cancelled>>, cancelled? False\r\nTask is still running: <Task pending coro=<Client._read_loop() running at /usr/local/lib/python3.6/site-packages/nats/aio/client.py:996> wait_for=<Future cancelled>>, cancelled? False\r\nTask is still running: <Task cancelling coro=<Client._flusher() running at /usr/local/lib/python3.6/site-packages/nats/aio/client.py:944> wait_for=<Future finished result=None>>, cancelled? False\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/51", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/51/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/51/events", "html_url": "https://github.com/nats-io/nats.py/issues/51", "id": 279739153, "node_id": "MDU6SXNzdWUyNzk3MzkxNTM=", "number": 51, "title": "How it works with service on Golang with gob encoder", "user": {"login": "morozovcookie", "id": 8736459, "node_id": "MDQ6VXNlcjg3MzY0NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/8736459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/morozovcookie", "html_url": "https://github.com/morozovcookie", "followers_url": "https://api.github.com/users/morozovcookie/followers", "following_url": "https://api.github.com/users/morozovcookie/following{/other_user}", "gists_url": "https://api.github.com/users/morozovcookie/gists{/gist_id}", "starred_url": "https://api.github.com/users/morozovcookie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/morozovcookie/subscriptions", "organizations_url": "https://api.github.com/users/morozovcookie/orgs", "repos_url": "https://api.github.com/users/morozovcookie/repos", "events_url": "https://api.github.com/users/morozovcookie/events{/privacy}", "received_events_url": "https://api.github.com/users/morozovcookie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-06T12:42:46Z", "updated_at": "2017-12-06T18:09:59Z", "closed_at": "2017-12-06T18:09:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! I have two service: first on Python and second on Golang. On the second service I use NATS with gob encoder. So could there be any problems? Or all work fine \"from box\"?\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/46", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/46/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/46/events", "html_url": "https://github.com/nats-io/nats.py/issues/46", "id": 274124202, "node_id": "MDU6SXNzdWUyNzQxMjQyMDI=", "number": 46, "title": "Is buffer / max payload size is fixed?", "user": {"login": "djKooks", "id": 1720209, "node_id": "MDQ6VXNlcjE3MjAyMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1720209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djKooks", "html_url": "https://github.com/djKooks", "followers_url": "https://api.github.com/users/djKooks/followers", "following_url": "https://api.github.com/users/djKooks/following{/other_user}", "gists_url": "https://api.github.com/users/djKooks/gists{/gist_id}", "starred_url": "https://api.github.com/users/djKooks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djKooks/subscriptions", "organizations_url": "https://api.github.com/users/djKooks/orgs", "repos_url": "https://api.github.com/users/djKooks/repos", "events_url": "https://api.github.com/users/djKooks/events{/privacy}", "received_events_url": "https://api.github.com/users/djKooks/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-15T11:32:18Z", "updated_at": "2017-11-16T02:11:15Z", "closed_at": "2017-11-16T02:11:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello~\r\nI'm bit experienced in `rabbitmq`, but almost newbie in nats. \r\nWhile looking on project, it seems max_payload and buffer size are set as default and unchangeable outside of module. Is this the correct part?\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/43", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/43/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/43/events", "html_url": "https://github.com/nats-io/nats.py/issues/43", "id": 256858471, "node_id": "MDU6SXNzdWUyNTY4NTg0NzE=", "number": 43, "title": "TLS Reconnect tests flapping", "user": {"login": "wallyqs", "id": 26195, "node_id": "MDQ6VXNlcjI2MTk1", "avatar_url": "https://avatars3.githubusercontent.com/u/26195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wallyqs", "html_url": "https://github.com/wallyqs", "followers_url": "https://api.github.com/users/wallyqs/followers", "following_url": "https://api.github.com/users/wallyqs/following{/other_user}", "gists_url": "https://api.github.com/users/wallyqs/gists{/gist_id}", "starred_url": "https://api.github.com/users/wallyqs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wallyqs/subscriptions", "organizations_url": "https://api.github.com/users/wallyqs/orgs", "repos_url": "https://api.github.com/users/wallyqs/repos", "events_url": "https://api.github.com/users/wallyqs/events{/privacy}", "received_events_url": "https://api.github.com/users/wallyqs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-11T22:14:44Z", "updated_at": "2017-12-06T13:46:20Z", "closed_at": "2017-12-06T13:46:20Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\r\n=== RUN ClientTLSReconnectTest.test_tls_reconnect\r\nFatal write error on socket transport\r\nprotocol: <asyncio.sslproto.SSLProtocol object at 0x7f09c89760b8>\r\ntransport: <_SelectorSocketTransport fd=11 read=polling write=<idle, bufsize=0>>\r\nTraceback (most recent call last):\r\n  File \"/opt/python/3.5.1/lib/python3.5/asyncio/selector_events.py\", line 702, in write\r\n    n = self._sock.send(data)\r\nOSError: [Errno 9] Bad file descriptor\r\nERROR: test_tls_reconnect (tests.client_test.ClientTLSReconnectTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/travis/build/nats-io/asyncio-nats/nats/aio/client.py\", line 424, in timed_request\r\n    msg = yield from asyncio.wait_for(future, timeout, loop=self._loop)\r\n  File \"/opt/python/3.5.1/lib/python3.5/asyncio/tasks.py\", line 390, in wait_for\r\n    raise futures.TimeoutError()\r\nconcurrent.futures._base.TimeoutError\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/build/nats-io/asyncio-nats/tests/utils.py\", line 295, in wrapper\r\n    loop=test_case.loop))\r\n  File \"/opt/python/3.5.1/lib/python3.5/asyncio/base_events.py\", line 337, in run_until_complete\r\n    return future.result()\r\n  File \"/opt/python/3.5.1/lib/python3.5/asyncio/futures.py\", line 274, in result\r\n    raise self._exception\r\n  File \"/opt/python/3.5.1/lib/python3.5/asyncio/tasks.py\", line 239, in _step\r\n    result = coro.send(None)\r\n  File \"/opt/python/3.5.1/lib/python3.5/asyncio/tasks.py\", line 386, in wait_for\r\n    return fut.result()\r\n  File \"/opt/python/3.5.1/lib/python3.5/asyncio/futures.py\", line 274, in result\r\n    raise self._exception\r\n  File \"/opt/python/3.5.1/lib/python3.5/asyncio/tasks.py\", line 239, in _step\r\n    result = coro.send(None)\r\n  File \"/home/travis/build/nats-io/asyncio-nats/tests/client_test.py\", line 1050, in test_tls_reconnect\r\n    response = yield from nc.timed_request(\"example\", b'Help!', timeout=1)\r\n  File \"/home/travis/build/nats-io/asyncio-nats/nats/aio/client.py\", line 428, in timed_request\r\n    raise ErrTimeout\r\nnats.aio.errors.ErrTimeout: nats: Timeout\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/38", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/38/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/38/events", "html_url": "https://github.com/nats-io/nats.py/issues/38", "id": 241857780, "node_id": "MDU6SXNzdWUyNDE4NTc3ODA=", "number": 38, "title": "first install fails", "user": {"login": "sebgoa", "id": 1886299, "node_id": "MDQ6VXNlcjE4ODYyOTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1886299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebgoa", "html_url": "https://github.com/sebgoa", "followers_url": "https://api.github.com/users/sebgoa/followers", "following_url": "https://api.github.com/users/sebgoa/following{/other_user}", "gists_url": "https://api.github.com/users/sebgoa/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebgoa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebgoa/subscriptions", "organizations_url": "https://api.github.com/users/sebgoa/orgs", "repos_url": "https://api.github.com/users/sebgoa/repos", "events_url": "https://api.github.com/users/sebgoa/events{/privacy}", "received_events_url": "https://api.github.com/users/sebgoa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-10T21:31:40Z", "updated_at": "2017-07-10T21:34:00Z", "closed_at": "2017-07-10T21:34:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to install, first try fails, probably my fault, but it is strange\r\n\r\n```\r\n$ sudo pip install asyncio-nats-client\r\nPassword:\r\nThe directory '/Users/sebgoa/Library/Caches/pip/http' or its parent directory is not owned by the current user and the cache has been disabled. Please check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.\r\nThe directory '/Users/sebgoa/Library/Caches/pip' or its parent directory is not owned by the current user and caching wheels has been disabled. check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.\r\nCollecting asyncio-nats-client\r\n  Downloading asyncio-nats-client-0.5.0.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/private/tmp/pip-build-5STZqO/asyncio-nats-client/setup.py\", line 2, in <module>\r\n        from nats.aio.client import __version__\r\n      File \"nats/__init__.py\", line 10\r\n        yield from nc.connect(**options)\r\n                 ^\r\n    SyntaxError: invalid syntax\r\n    \r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /private/tmp/pip-build-5STZqO/asyncio-nats-client/\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/37", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/37/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/37/events", "html_url": "https://github.com/nats-io/nats.py/issues/37", "id": 241541128, "node_id": "MDU6SXNzdWUyNDE1NDExMjg=", "number": 37, "title": "Auth Code Authentication", "user": {"login": "mfdeux", "id": 20100329, "node_id": "MDQ6VXNlcjIwMTAwMzI5", "avatar_url": "https://avatars2.githubusercontent.com/u/20100329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mfdeux", "html_url": "https://github.com/mfdeux", "followers_url": "https://api.github.com/users/mfdeux/followers", "following_url": "https://api.github.com/users/mfdeux/following{/other_user}", "gists_url": "https://api.github.com/users/mfdeux/gists{/gist_id}", "starred_url": "https://api.github.com/users/mfdeux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mfdeux/subscriptions", "organizations_url": "https://api.github.com/users/mfdeux/orgs", "repos_url": "https://api.github.com/users/mfdeux/repos", "events_url": "https://api.github.com/users/mfdeux/events{/privacy}", "received_events_url": "https://api.github.com/users/mfdeux/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-09T17:50:48Z", "updated_at": "2017-07-13T09:38:19Z", "closed_at": "2017-07-11T19:32:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Will auth code authentication be included? Authenticating with token in connection string (i.e. \"nats://TOKEN@localhost:4222\") passes in the token as username server side.  Changing to \"nats://:TOKEN@localhost:4222\" passes the token in as password, but still does not work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/30", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/30/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/30/events", "html_url": "https://github.com/nats-io/nats.py/issues/30", "id": 205129630, "node_id": "MDU6SXNzdWUyMDUxMjk2MzA=", "number": 30, "title": "Provide public max_payload", "user": {"login": "mffrench", "id": 5983074, "node_id": "MDQ6VXNlcjU5ODMwNzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5983074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mffrench", "html_url": "https://github.com/mffrench", "followers_url": "https://api.github.com/users/mffrench/followers", "following_url": "https://api.github.com/users/mffrench/following{/other_user}", "gists_url": "https://api.github.com/users/mffrench/gists{/gist_id}", "starred_url": "https://api.github.com/users/mffrench/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mffrench/subscriptions", "organizations_url": "https://api.github.com/users/mffrench/orgs", "repos_url": "https://api.github.com/users/mffrench/repos", "events_url": "https://api.github.com/users/mffrench/events{/privacy}", "received_events_url": "https://api.github.com/users/mffrench/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-03T11:07:07Z", "updated_at": "2017-02-04T20:43:27Z", "closed_at": "2017-02-04T20:43:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nfollowing issue is a minor one. I've implemented a split algo when message payload are greater to the configured NATS max payload. So I need to get this max payload from asyncio_nats but this is currently a private field (_max_payload). Would be great if you provide this as a public one.\r\n\r\nThank you !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/29", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/29/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/29/events", "html_url": "https://github.com/nats-io/nats.py/issues/29", "id": 205128723, "node_id": "MDU6SXNzdWUyMDUxMjg3MjM=", "number": 29, "title": "'Queue' object has no attribute 'task_done' after asyncio loop getters problem", "user": {"login": "mffrench", "id": 5983074, "node_id": "MDQ6VXNlcjU5ODMwNzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5983074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mffrench", "html_url": "https://github.com/mffrench", "followers_url": "https://api.github.com/users/mffrench/followers", "following_url": "https://api.github.com/users/mffrench/following{/other_user}", "gists_url": "https://api.github.com/users/mffrench/gists{/gist_id}", "starred_url": "https://api.github.com/users/mffrench/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mffrench/subscriptions", "organizations_url": "https://api.github.com/users/mffrench/orgs", "repos_url": "https://api.github.com/users/mffrench/repos", "events_url": "https://api.github.com/users/mffrench/events{/privacy}", "received_events_url": "https://api.github.com/users/mffrench/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-03T11:02:36Z", "updated_at": "2017-03-28T16:31:08Z", "closed_at": "2017-03-28T16:31:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm currently facing an issue with asyncio loop after more than 48h run (so not easy to reproduce). \r\n\r\nThis asyncio problem (some loop getters problem I need to troubleshoot deeper) impact the asyncio-nats code as shown bellow : \r\n\r\n```\r\n  File \"/usr/lib/python3.4/site-packages/nats/aio/client.py\", line 584, in _process_op_err\r\n    self._flush_queue.task_done()\r\nAttributeError: 'Queue' object has no attribute 'task_done'\r\n```\r\n\r\nMaybe is there some protection code to add here ? If you have any tips to help me troubleshoot deeper let me now anyway...\r\n\r\nHere's the code where I'm using asyncio-nats : https://github.com/echinopsii/net.echinopsii.ariane.community.cli.python3/blob/master/ariane_clip3/natsd/driver.py\r\n\r\nNOTE : I'm using actor pattern (pykka) with asyncio-nats which may not be a great fit... Probably should I use deeper functions (IE : function implementing NATS protocol only) in asyncio-nats to avoid asyncio logic ?\r\n\r\nFull stack trace : \r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.4/site-packages/nats/aio/client.py\", line 491, in _flush_pending\r\n    yield from self._flush_queue.put(None)\r\n  File \"/usr/lib64/python3.4/asyncio/queues.py\", line 126, in put\r\n    'queue non-empty, why are getters waiting?')\r\nAssertionError: queue non-empty, why are getters waiting?\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.4/site-packages/ariane_docker/components.py\", line 105, in sniff\r\n    next_action=InjectorCachedComponent.action_update, data_blob=self.data_blob())\r\n  File \"/usr/lib/python3.4/site-packages/ariane_clip3/injector.py\", line 829, in cache\r\n    json_last_refresh=json_last_refresh, data_blob=data_blob).get()\r\n  File \"/usr/lib64/python3.4/site-packages/pykka/threading.py\", line 52, in get\r\n    compat.reraise(*self._data['exc_info'])\r\n  File \"/usr/lib64/python3.4/site-packages/pykka/compat.py\", line 24, in reraise\r\n    raise value\r\n  File \"/usr/lib64/python3.4/site-packages/pykka/actor.py\", line 201, in _actor_loop\r\n    response = self._handle_receive(message)\r\n  File \"/usr/lib64/python3.4/site-packages/pykka/actor.py\", line 295, in _handle_receive\r\n    return callee(*message['args'], **message['kwargs'])\r\n  File \"/usr/lib/python3.4/site-packages/ariane_clip3/injector.py\", line 696, in save\r\n    result = InjectorCachedComponentService.requester.call(args).get()\r\n  File \"/usr/lib64/python3.4/site-packages/pykka/threading.py\", line 52, in get\r\n    compat.reraise(*self._data['exc_info'])\r\n  File \"/usr/lib64/python3.4/site-packages/pykka/compat.py\", line 24, in reraise\r\n    raise value\r\n  File \"/usr/lib64/python3.4/site-packages/pykka/actor.py\", line 201, in _actor_loop\r\n    response = self._handle_receive(message)\r\n  File \"/usr/lib64/python3.4/site-packages/pykka/actor.py\", line 295, in _handle_receive\r\n    return callee(*message['args'], **message['kwargs'])\r\n  File \"/usr/lib/python3.4/site-packages/ariane_clip3/natsd/driver.py\", line 507, in call\r\n    next(self.nc.flush(1))\r\n  File \"/usr/lib/python3.4/site-packages/nats/aio/client.py\", line 433, in flush\r\n    yield from self._send_ping(future)\r\n  File \"/usr/lib/python3.4/site-packages/nats/aio/client.py\", line 788, in _send_ping\r\n    yield from self._flush_pending()\r\n  File \"/usr/lib/python3.4/site-packages/nats/aio/client.py\", line 496, in _flush_pending\r\n    NatsError(\"nats: error kicking the flusher\"))\r\n  File \"/usr/lib/python3.4/site-packages/nats/aio/client.py\", line 584, in _process_op_err\r\n    self._flush_queue.task_done()\r\nAttributeError: 'Queue' object has no attribute 'task_done'\r\n```\r\n\r\nThank you for your help :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/27", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/27/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/27/events", "html_url": "https://github.com/nats-io/nats.py/issues/27", "id": 193256594, "node_id": "MDU6SXNzdWUxOTMyNTY1OTQ=", "number": 27, "title": "Support asynchronous INFO, and Servers/DiscoveredServers API", "user": {"login": "mcqueary", "id": 6993964, "node_id": "MDQ6VXNlcjY5OTM5NjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6993964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcqueary", "html_url": "https://github.com/mcqueary", "followers_url": "https://api.github.com/users/mcqueary/followers", "following_url": "https://api.github.com/users/mcqueary/following{/other_user}", "gists_url": "https://api.github.com/users/mcqueary/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcqueary/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcqueary/subscriptions", "organizations_url": "https://api.github.com/users/mcqueary/orgs", "repos_url": "https://api.github.com/users/mcqueary/repos", "events_url": "https://api.github.com/users/mcqueary/events{/privacy}", "received_events_url": "https://api.github.com/users/mcqueary/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nats-io/nats.py/milestones/2", "html_url": "https://github.com/nats-io/nats.py/milestone/2", "labels_url": "https://api.github.com/repos/nats-io/nats.py/milestones/2/labels", "id": 2509212, "node_id": "MDk6TWlsZXN0b25lMjUwOTIxMg==", "number": 2, "title": "v0.6.0", "description": null, "creator": {"login": "wallyqs", "id": 26195, "node_id": "MDQ6VXNlcjI2MTk1", "avatar_url": "https://avatars3.githubusercontent.com/u/26195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wallyqs", "html_url": "https://github.com/wallyqs", "followers_url": "https://api.github.com/users/wallyqs/followers", "following_url": "https://api.github.com/users/wallyqs/following{/other_user}", "gists_url": "https://api.github.com/users/wallyqs/gists{/gist_id}", "starred_url": "https://api.github.com/users/wallyqs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wallyqs/subscriptions", "organizations_url": "https://api.github.com/users/wallyqs/orgs", "repos_url": "https://api.github.com/users/wallyqs/repos", "events_url": "https://api.github.com/users/wallyqs/events{/privacy}", "received_events_url": "https://api.github.com/users/wallyqs/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "closed", "created_at": "2017-05-09T06:43:34Z", "updated_at": "2018-07-20T16:21:09Z", "due_on": null, "closed_at": "2018-07-20T16:21:09Z"}, "comments": 0, "created_at": "2016-12-03T01:41:24Z", "updated_at": "2017-09-08T23:09:16Z", "closed_at": "2017-09-08T23:09:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/26", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/26/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/26/events", "html_url": "https://github.com/nats-io/nats.py/issues/26", "id": 187259356, "node_id": "MDU6SXNzdWUxODcyNTkzNTY=", "number": 26, "title": "v0.3.3 release ?", "user": {"login": "sam3000", "id": 1624743, "node_id": "MDQ6VXNlcjE2MjQ3NDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1624743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sam3000", "html_url": "https://github.com/sam3000", "followers_url": "https://api.github.com/users/sam3000/followers", "following_url": "https://api.github.com/users/sam3000/following{/other_user}", "gists_url": "https://api.github.com/users/sam3000/gists{/gist_id}", "starred_url": "https://api.github.com/users/sam3000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sam3000/subscriptions", "organizations_url": "https://api.github.com/users/sam3000/orgs", "repos_url": "https://api.github.com/users/sam3000/repos", "events_url": "https://api.github.com/users/sam3000/events{/privacy}", "received_events_url": "https://api.github.com/users/sam3000/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-04T05:55:22Z", "updated_at": "2017-03-28T16:31:38Z", "closed_at": "2017-03-28T16:31:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI was wondering if something is blocking the v0.3.3 release or are we just missing the tag ?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/23", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/23/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/23/events", "html_url": "https://github.com/nats-io/nats.py/issues/23", "id": 183778086, "node_id": "MDU6SXNzdWUxODM3NzgwODY=", "number": 23, "title": "Support nats streaming server", "user": {"login": "jared-mackey", "id": 10620022, "node_id": "MDQ6VXNlcjEwNjIwMDIy", "avatar_url": "https://avatars1.githubusercontent.com/u/10620022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jared-mackey", "html_url": "https://github.com/jared-mackey", "followers_url": "https://api.github.com/users/jared-mackey/followers", "following_url": "https://api.github.com/users/jared-mackey/following{/other_user}", "gists_url": "https://api.github.com/users/jared-mackey/gists{/gist_id}", "starred_url": "https://api.github.com/users/jared-mackey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jared-mackey/subscriptions", "organizations_url": "https://api.github.com/users/jared-mackey/orgs", "repos_url": "https://api.github.com/users/jared-mackey/repos", "events_url": "https://api.github.com/users/jared-mackey/events{/privacy}", "received_events_url": "https://api.github.com/users/jared-mackey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-18T19:17:59Z", "updated_at": "2016-10-19T18:39:08Z", "closed_at": "2016-10-19T18:39:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does this library support nats streaming server?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/21", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/21/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/21/events", "html_url": "https://github.com/nats-io/nats.py/issues/21", "id": 174242254, "node_id": "MDU6SXNzdWUxNzQyNDIyNTQ=", "number": 21, "title": "Upload version to PyPI", "user": {"login": "Gr1N", "id": 1087619, "node_id": "MDQ6VXNlcjEwODc2MTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1087619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gr1N", "html_url": "https://github.com/Gr1N", "followers_url": "https://api.github.com/users/Gr1N/followers", "following_url": "https://api.github.com/users/Gr1N/following{/other_user}", "gists_url": "https://api.github.com/users/Gr1N/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gr1N/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gr1N/subscriptions", "organizations_url": "https://api.github.com/users/Gr1N/orgs", "repos_url": "https://api.github.com/users/Gr1N/repos", "events_url": "https://api.github.com/users/Gr1N/events{/privacy}", "received_events_url": "https://api.github.com/users/Gr1N/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "wallyqs", "id": 26195, "node_id": "MDQ6VXNlcjI2MTk1", "avatar_url": "https://avatars3.githubusercontent.com/u/26195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wallyqs", "html_url": "https://github.com/wallyqs", "followers_url": "https://api.github.com/users/wallyqs/followers", "following_url": "https://api.github.com/users/wallyqs/following{/other_user}", "gists_url": "https://api.github.com/users/wallyqs/gists{/gist_id}", "starred_url": "https://api.github.com/users/wallyqs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wallyqs/subscriptions", "organizations_url": "https://api.github.com/users/wallyqs/orgs", "repos_url": "https://api.github.com/users/wallyqs/repos", "events_url": "https://api.github.com/users/wallyqs/events{/privacy}", "received_events_url": "https://api.github.com/users/wallyqs/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wallyqs", "id": 26195, "node_id": "MDQ6VXNlcjI2MTk1", "avatar_url": "https://avatars3.githubusercontent.com/u/26195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wallyqs", "html_url": "https://github.com/wallyqs", "followers_url": "https://api.github.com/users/wallyqs/followers", "following_url": "https://api.github.com/users/wallyqs/following{/other_user}", "gists_url": "https://api.github.com/users/wallyqs/gists{/gist_id}", "starred_url": "https://api.github.com/users/wallyqs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wallyqs/subscriptions", "organizations_url": "https://api.github.com/users/wallyqs/orgs", "repos_url": "https://api.github.com/users/wallyqs/repos", "events_url": "https://api.github.com/users/wallyqs/events{/privacy}", "received_events_url": "https://api.github.com/users/wallyqs/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2016-08-31T10:48:22Z", "updated_at": "2016-09-01T07:49:20Z", "closed_at": "2016-08-31T16:09:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi!\n\nIt's me again. :)\nCould you please upload new version of package to PyPI with this helpful fix https://github.com/nats-io/asyncio-nats/commit/4888b43b218d583990b4597bcbea0fd635bd9988? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/20", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/20/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/20/events", "html_url": "https://github.com/nats-io/nats.py/issues/20", "id": 166019024, "node_id": "MDU6SXNzdWUxNjYwMTkwMjQ=", "number": 20, "title": "TLS support", "user": {"login": "iggy", "id": 20441, "node_id": "MDQ6VXNlcjIwNDQx", "avatar_url": "https://avatars1.githubusercontent.com/u/20441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iggy", "html_url": "https://github.com/iggy", "followers_url": "https://api.github.com/users/iggy/followers", "following_url": "https://api.github.com/users/iggy/following{/other_user}", "gists_url": "https://api.github.com/users/iggy/gists{/gist_id}", "starred_url": "https://api.github.com/users/iggy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iggy/subscriptions", "organizations_url": "https://api.github.com/users/iggy/orgs", "repos_url": "https://api.github.com/users/iggy/repos", "events_url": "https://api.github.com/users/iggy/events{/privacy}", "received_events_url": "https://api.github.com/users/iggy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "wallyqs", "id": 26195, "node_id": "MDQ6VXNlcjI2MTk1", "avatar_url": "https://avatars3.githubusercontent.com/u/26195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wallyqs", "html_url": "https://github.com/wallyqs", "followers_url": "https://api.github.com/users/wallyqs/followers", "following_url": "https://api.github.com/users/wallyqs/following{/other_user}", "gists_url": "https://api.github.com/users/wallyqs/gists{/gist_id}", "starred_url": "https://api.github.com/users/wallyqs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wallyqs/subscriptions", "organizations_url": "https://api.github.com/users/wallyqs/orgs", "repos_url": "https://api.github.com/users/wallyqs/repos", "events_url": "https://api.github.com/users/wallyqs/events{/privacy}", "received_events_url": "https://api.github.com/users/wallyqs/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wallyqs", "id": 26195, "node_id": "MDQ6VXNlcjI2MTk1", "avatar_url": "https://avatars3.githubusercontent.com/u/26195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wallyqs", "html_url": "https://github.com/wallyqs", "followers_url": "https://api.github.com/users/wallyqs/followers", "following_url": "https://api.github.com/users/wallyqs/following{/other_user}", "gists_url": "https://api.github.com/users/wallyqs/gists{/gist_id}", "starred_url": "https://api.github.com/users/wallyqs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wallyqs/subscriptions", "organizations_url": "https://api.github.com/users/wallyqs/orgs", "repos_url": "https://api.github.com/users/wallyqs/repos", "events_url": "https://api.github.com/users/wallyqs/events{/privacy}", "received_events_url": "https://api.github.com/users/wallyqs/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nats-io/nats.py/milestones/1", "html_url": "https://github.com/nats-io/nats.py/milestone/1", "labels_url": "https://api.github.com/repos/nats-io/nats.py/milestones/1/labels", "id": 2417154, "node_id": "MDk6TWlsZXN0b25lMjQxNzE1NA==", "number": 1, "title": "v0.5.0", "description": null, "creator": {"login": "wallyqs", "id": 26195, "node_id": "MDQ6VXNlcjI2MTk1", "avatar_url": "https://avatars3.githubusercontent.com/u/26195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wallyqs", "html_url": "https://github.com/wallyqs", "followers_url": "https://api.github.com/users/wallyqs/followers", "following_url": "https://api.github.com/users/wallyqs/following{/other_user}", "gists_url": "https://api.github.com/users/wallyqs/gists{/gist_id}", "starred_url": "https://api.github.com/users/wallyqs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wallyqs/subscriptions", "organizations_url": "https://api.github.com/users/wallyqs/orgs", "repos_url": "https://api.github.com/users/wallyqs/repos", "events_url": "https://api.github.com/users/wallyqs/events{/privacy}", "received_events_url": "https://api.github.com/users/wallyqs/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "closed", "created_at": "2017-03-28T16:32:14Z", "updated_at": "2018-07-20T16:21:13Z", "due_on": null, "closed_at": "2018-07-20T16:21:13Z"}, "comments": 1, "created_at": "2016-07-18T05:02:37Z", "updated_at": "2017-05-09T03:35:21Z", "closed_at": "2017-05-09T03:35:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "`gnatsd` supports TLS since version 0.7.0. It would be nice if this library did as well.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/12", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/12/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/12/events", "html_url": "https://github.com/nats-io/nats.py/issues/12", "id": 144696726, "node_id": "MDU6SXNzdWUxNDQ2OTY3MjY=", "number": 12, "title": "Add package to PyPI", "user": {"login": "Gr1N", "id": 1087619, "node_id": "MDQ6VXNlcjEwODc2MTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1087619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gr1N", "html_url": "https://github.com/Gr1N", "followers_url": "https://api.github.com/users/Gr1N/followers", "following_url": "https://api.github.com/users/Gr1N/following{/other_user}", "gists_url": "https://api.github.com/users/Gr1N/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gr1N/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gr1N/subscriptions", "organizations_url": "https://api.github.com/users/Gr1N/orgs", "repos_url": "https://api.github.com/users/Gr1N/repos", "events_url": "https://api.github.com/users/Gr1N/events{/privacy}", "received_events_url": "https://api.github.com/users/Gr1N/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-03-30T19:30:35Z", "updated_at": "2016-05-10T19:41:19Z", "closed_at": "2016-05-10T19:41:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi!\nWould it be possible to get this package into [PyPI](https://pypi.python.org/pypi)?\nPlease :pray: \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nats-io/nats.py/issues/4", "repository_url": "https://api.github.com/repos/nats-io/nats.py", "labels_url": "https://api.github.com/repos/nats-io/nats.py/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/nats-io/nats.py/issues/4/comments", "events_url": "https://api.github.com/repos/nats-io/nats.py/issues/4/events", "html_url": "https://github.com/nats-io/nats.py/issues/4", "id": 130117549, "node_id": "MDU6SXNzdWUxMzAxMTc1NDk=", "number": 4, "title": "Need help getting started", "user": {"login": "gitdlam", "id": 191362, "node_id": "MDQ6VXNlcjE5MTM2Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/191362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gitdlam", "html_url": "https://github.com/gitdlam", "followers_url": "https://api.github.com/users/gitdlam/followers", "following_url": "https://api.github.com/users/gitdlam/following{/other_user}", "gists_url": "https://api.github.com/users/gitdlam/gists{/gist_id}", "starred_url": "https://api.github.com/users/gitdlam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gitdlam/subscriptions", "organizations_url": "https://api.github.com/users/gitdlam/orgs", "repos_url": "https://api.github.com/users/gitdlam/repos", "events_url": "https://api.github.com/users/gitdlam/events{/privacy}", "received_events_url": "https://api.github.com/users/gitdlam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-31T11:45:04Z", "updated_at": "2016-02-02T18:04:01Z", "closed_at": "2016-02-02T18:04:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi sorry about newbie questioin. I've been messing with the basic examples and can't seem to get the effect i want.\nI just need a basic example of having a subscription setup and then wait forever, not sure if there is already a built in function for this.  The Go version is marvelous but here i'm lost. \n\nMany thanks.\n", "performed_via_github_app": null, "score": 1.0}]}