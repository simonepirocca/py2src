{"total_count": 52, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/139", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/139/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/139/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/139", "id": 644888626, "node_id": "MDU6SXNzdWU2NDQ4ODg2MjY=", "number": 139, "title": "Objects with custom `.save()` logic cannot be undeleted. ", "user": {"login": "doganmeh", "id": 8139662, "node_id": "MDQ6VXNlcjgxMzk2NjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/8139662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doganmeh", "html_url": "https://github.com/doganmeh", "followers_url": "https://api.github.com/users/doganmeh/followers", "following_url": "https://api.github.com/users/doganmeh/following{/other_user}", "gists_url": "https://api.github.com/users/doganmeh/gists{/gist_id}", "starred_url": "https://api.github.com/users/doganmeh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doganmeh/subscriptions", "organizations_url": "https://api.github.com/users/doganmeh/orgs", "repos_url": "https://api.github.com/users/doganmeh/repos", "events_url": "https://api.github.com/users/doganmeh/events{/privacy}", "received_events_url": "https://api.github.com/users/doganmeh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-24T19:46:36Z", "updated_at": "2020-07-15T21:07:02Z", "closed_at": "2020-07-15T21:07:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`.delete()` calls `super().save()`:\r\n\r\nhttps://github.com/makinacorpus/django-safedelete/blob/4faeec341924c422f38ac4e2e73e6b65b13dcc03/safedelete/models.py#L145\r\n\r\nHowever, `.undelete()` calls `self.save()`:\r\n\r\nhttps://github.com/makinacorpus/django-safedelete/blob/4faeec341924c422f38ac4e2e73e6b65b13dcc03/safedelete/models.py#L117\r\n\r\nWhy is that discrepancy?\r\n\r\nWe have a model with custom logic in `self.save()` which prevents objects from being updated in certain situations. They can be deleted, but cannot be undeleted. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/137", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/137/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/137/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/137", "id": 610084038, "node_id": "MDU6SXNzdWU2MTAwODQwMzg=", "number": 137, "title": "undelete_selected() always reports SUCCESS even if it wasn't", "user": {"login": "mkoistinen", "id": 615759, "node_id": "MDQ6VXNlcjYxNTc1OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/615759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkoistinen", "html_url": "https://github.com/mkoistinen", "followers_url": "https://api.github.com/users/mkoistinen/followers", "following_url": "https://api.github.com/users/mkoistinen/following{/other_user}", "gists_url": "https://api.github.com/users/mkoistinen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkoistinen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkoistinen/subscriptions", "organizations_url": "https://api.github.com/users/mkoistinen/orgs", "repos_url": "https://api.github.com/users/mkoistinen/repos", "events_url": "https://api.github.com/users/mkoistinen/events{/privacy}", "received_events_url": "https://api.github.com/users/mkoistinen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-30T14:41:45Z", "updated_at": "2020-05-14T08:55:02Z", "closed_at": "2020-05-14T08:55:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `undelete_selected` admin action always reports SUCCESS even when the operation wasn't.\r\n\r\nThere are 2 reasons for this:\r\n1. There's no logic for measuring success;\r\n2. The construct `django.VERSION[1] <= 4` -- probably intended for versions 1.0...1.4 -- now prevents Django versions 2.0...2.4 and 3.0...3.4 from using the default INFO level.\r\n\r\nPR incoming =)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/133", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/133/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/133/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/133", "id": 569795024, "node_id": "MDU6SXNzdWU1Njk3OTUwMjQ=", "number": 133, "title": "model.objects.all() ", "user": {"login": "Singh-Sg", "id": 26885708, "node_id": "MDQ6VXNlcjI2ODg1NzA4", "avatar_url": "https://avatars3.githubusercontent.com/u/26885708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Singh-Sg", "html_url": "https://github.com/Singh-Sg", "followers_url": "https://api.github.com/users/Singh-Sg/followers", "following_url": "https://api.github.com/users/Singh-Sg/following{/other_user}", "gists_url": "https://api.github.com/users/Singh-Sg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Singh-Sg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Singh-Sg/subscriptions", "organizations_url": "https://api.github.com/users/Singh-Sg/orgs", "repos_url": "https://api.github.com/users/Singh-Sg/repos", "events_url": "https://api.github.com/users/Singh-Sg/events{/privacy}", "received_events_url": "https://api.github.com/users/Singh-Sg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-24T11:26:00Z", "updated_at": "2020-02-24T11:26:08Z", "closed_at": "2020-02-24T11:26:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/131", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/131/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/131/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/131", "id": 530613951, "node_id": "MDU6SXNzdWU1MzA2MTM5NTE=", "number": 131, "title": "Doing a .get on a queryset adds deleted objects", "user": {"login": "skorokithakis", "id": 23648, "node_id": "MDQ6VXNlcjIzNjQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/23648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skorokithakis", "html_url": "https://github.com/skorokithakis", "followers_url": "https://api.github.com/users/skorokithakis/followers", "following_url": "https://api.github.com/users/skorokithakis/following{/other_user}", "gists_url": "https://api.github.com/users/skorokithakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/skorokithakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skorokithakis/subscriptions", "organizations_url": "https://api.github.com/users/skorokithakis/orgs", "repos_url": "https://api.github.com/users/skorokithakis/repos", "events_url": "https://api.github.com/users/skorokithakis/events{/privacy}", "received_events_url": "https://api.github.com/users/skorokithakis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-30T18:22:56Z", "updated_at": "2019-12-02T16:03:57Z", "closed_at": "2019-12-02T14:55:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a model that contains a deleted task (`Butter knife`)\r\n\r\n```\r\n<SafeDeleteQueryset [<Task: MRI>, <Task: LINAC>, <Task: GammaKnife>, <Task: CyberKnife>, <Task: Banana stand>, <Task: Butter knife>]>\r\n\r\n>>> g\r\n<Task: MRI>\r\n\r\n>>> tasks = Task.objects.filter(department=d)\r\n>>> tasks.count()\r\n5\r\n>>> tasks = Task.objects.filter(department=d)\r\n>>> tasks.get(pk=g.id)\r\n<Task: MRI>\r\n>>> tasks.count()\r\n6\r\n```\r\n\r\nI'm not getting a deleted task, I'm just getting a random, non-deleted task, yet that queryset then contains the deleted task as well.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/128", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/128/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/128/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/128", "id": 484189333, "node_id": "MDU6SXNzdWU0ODQxODkzMzM=", "number": 128, "title": "Django REST Framework Pagination not optimezed ", "user": {"login": "VladislavTurchinevich", "id": 44006961, "node_id": "MDQ6VXNlcjQ0MDA2OTYx", "avatar_url": "https://avatars0.githubusercontent.com/u/44006961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VladislavTurchinevich", "html_url": "https://github.com/VladislavTurchinevich", "followers_url": "https://api.github.com/users/VladislavTurchinevich/followers", "following_url": "https://api.github.com/users/VladislavTurchinevich/following{/other_user}", "gists_url": "https://api.github.com/users/VladislavTurchinevich/gists{/gist_id}", "starred_url": "https://api.github.com/users/VladislavTurchinevich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VladislavTurchinevich/subscriptions", "organizations_url": "https://api.github.com/users/VladislavTurchinevich/orgs", "repos_url": "https://api.github.com/users/VladislavTurchinevich/repos", "events_url": "https://api.github.com/users/VladislavTurchinevich/events{/privacy}", "received_events_url": "https://api.github.com/users/VladislavTurchinevich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-22T20:12:08Z", "updated_at": "2019-09-16T14:50:48Z", "closed_at": "2019-09-16T14:50:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django default queryset behavior \r\n```\r\n>>> qs = User.objects.all()                                                 \r\n>>> import inspect                                                          \r\n>>> inspect.ismethod(qs.count)                                              \r\n>>> True\r\n>>> <bound method QuerySet.count of <QuerySet [<User: test_user@gmail.com>, <User: test@gmail.com>]>>\r\n```\r\n\r\nSafeDeleteQueryset behavior \r\n```\r\n>>> qs = Settings.objects.all()\r\n>>> import inspect\r\n>>> inspect.ismethod(qs.count)\r\n>>> <function SafeDeleteQueryset.__getattribute__.<locals>.decorator at 0x7f029809d158>\r\nFalse\r\n````\r\n\r\nSo when I use django-rest ListAPIView and default, pagination class, they call count property as looks a this way  \r\n```\r\n    @cached_property\r\n    def count(self):\r\n        \"\"\"Return the total number of objects, across all pages.\"\"\"\r\n        c = getattr(self.object_list, 'count', None)\r\n        if callable(c) and not inspect.isbuiltin(c) and method_has_no_args(c): # return False \r\n            return c()\r\n        return len(self.object_list)\r\n```\r\nso in the case when I use django-safedelete method_has_no_args(c): -> returns False when in case Django default is returned True. In django-safedelete case query executes and length count in python not in the database so performance is slow.  \r\n\r\nSo a simple way to solve the problem is to use another paginator with another condition in the count. If I not right correct me, please. Thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/126", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/126/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/126/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/126", "id": 472674320, "node_id": "MDU6SXNzdWU0NzI2NzQzMjA=", "number": 126, "title": "Django 2.2 compatibility", "user": {"login": "znotdead", "id": 136279, "node_id": "MDQ6VXNlcjEzNjI3OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/136279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/znotdead", "html_url": "https://github.com/znotdead", "followers_url": "https://api.github.com/users/znotdead/followers", "following_url": "https://api.github.com/users/znotdead/following{/other_user}", "gists_url": "https://api.github.com/users/znotdead/gists{/gist_id}", "starred_url": "https://api.github.com/users/znotdead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/znotdead/subscriptions", "organizations_url": "https://api.github.com/users/znotdead/orgs", "repos_url": "https://api.github.com/users/znotdead/repos", "events_url": "https://api.github.com/users/znotdead/events{/privacy}", "received_events_url": "https://api.github.com/users/znotdead/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-25T05:39:43Z", "updated_at": "2019-08-19T07:23:36Z", "closed_at": "2019-08-19T07:23:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is significant performance issue in `SafeDeleteQueryset` because of recent changes in Django 2.2 when using Paginator (django/core/paginator.py) and `count`.\r\n\r\n`count` method always falling to `len` as `method_has_no_args(c)` where `c = getattr(self.object_list, 'count', None)` for `SafeDeleteQueryset` always gives False.\r\n\r\nhttps://github.com/django/django/commit/3767c7ff391d5f277e25bca38ef3730ddf9cea9c commit that broke safedelete", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/112", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/112/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/112/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/112", "id": 392255228, "node_id": "MDU6SXNzdWUzOTIyNTUyMjg=", "number": 112, "title": "SOFT_DELETE_CASCADE make soft delete on already soft deleted items", "user": {"login": "ADR-007", "id": 7348960, "node_id": "MDQ6VXNlcjczNDg5NjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7348960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ADR-007", "html_url": "https://github.com/ADR-007", "followers_url": "https://api.github.com/users/ADR-007/followers", "following_url": "https://api.github.com/users/ADR-007/following{/other_user}", "gists_url": "https://api.github.com/users/ADR-007/gists{/gist_id}", "starred_url": "https://api.github.com/users/ADR-007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ADR-007/subscriptions", "organizations_url": "https://api.github.com/users/ADR-007/orgs", "repos_url": "https://api.github.com/users/ADR-007/repos", "events_url": "https://api.github.com/users/ADR-007/events{/privacy}", "received_events_url": "https://api.github.com/users/ADR-007/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-18T17:16:00Z", "updated_at": "2018-12-20T14:06:25Z", "closed_at": "2018-12-20T14:06:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi all! I happy to use this library but looks like I found a bug:\r\n\r\nSOFT_DELETE_CASCADE makes soft delete on already soft-deleted items and it leads to produce an extra `pre_softdelete` signals.\r\n\r\nAnd it is a problem because I can not know is it real delete or just duplicate?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/109", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/109/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/109/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/109", "id": 335612822, "node_id": "MDU6SXNzdWUzMzU2MTI4MjI=", "number": 109, "title": "highlight_deleted and russian letters", "user": {"login": "dvkovner", "id": 13110972, "node_id": "MDQ6VXNlcjEzMTEwOTcy", "avatar_url": "https://avatars0.githubusercontent.com/u/13110972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvkovner", "html_url": "https://github.com/dvkovner", "followers_url": "https://api.github.com/users/dvkovner/followers", "following_url": "https://api.github.com/users/dvkovner/following{/other_user}", "gists_url": "https://api.github.com/users/dvkovner/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvkovner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvkovner/subscriptions", "organizations_url": "https://api.github.com/users/dvkovner/orgs", "repos_url": "https://api.github.com/users/dvkovner/repos", "events_url": "https://api.github.com/users/dvkovner/events{/privacy}", "received_events_url": "https://api.github.com/users/dvkovner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-26T00:17:28Z", "updated_at": "2018-07-02T08:45:21Z", "closed_at": "2018-07-02T08:45:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! I've just tried to use your package and came across a problem. I want to use highlight_deleted in my model's admin. It works fine with latin letters, but doesn't work with cyrilic. For example, in the code below I'm getting this error: \"'ascii' codec can't encode characters in position 0-3: ordinal not in range(128)\" cause my model's name field contains '\u0442\u0435\u0441\u0442' value. Any suggestions?\r\n```\r\nclass StockAdmin(SafeDeleteAdmin):\r\n    \"\"\"\r\n    \u0410\u043a\u0446\u0438\u0438\r\n    \"\"\"\r\n    form = StockModelForm\r\n    list_display = (highlight_deleted, 'name', 'date_start', 'date_end', 'type', 'amount_of_discount') + SafeDeleteAdmin.list_display\r\n    list_filter = SafeDeleteAdmin.list_filter\r\n    filter_horizontal = ('available_for_goods', 'categories')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/106", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/106/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/106/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/106", "id": 325639232, "node_id": "MDU6SXNzdWUzMjU2MzkyMzI=", "number": 106, "title": "Duplicated line in _perform_unique_checks", "user": {"login": "twidi", "id": 193474, "node_id": "MDQ6VXNlcjE5MzQ3NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/193474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twidi", "html_url": "https://github.com/twidi", "followers_url": "https://api.github.com/users/twidi/followers", "following_url": "https://api.github.com/users/twidi/following{/other_user}", "gists_url": "https://api.github.com/users/twidi/gists{/gist_id}", "starred_url": "https://api.github.com/users/twidi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twidi/subscriptions", "organizations_url": "https://api.github.com/users/twidi/orgs", "repos_url": "https://api.github.com/users/twidi/repos", "events_url": "https://api.github.com/users/twidi/events{/privacy}", "received_events_url": "https://api.github.com/users/twidi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-23T10:13:04Z", "updated_at": "2018-05-29T08:39:50Z", "closed_at": "2018-05-29T08:39:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As you can see, the first line of this extract from `_perform_unique_checks` serves no purpose and in fact make useless the `if` below. I guess it's a refactoring problem and this line should be removed.\r\n\r\nhttps://github.com/makinacorpus/django-safedelete/blob/1663faaa22729a3f33f07933e4aecaf7578ffd48/safedelete/models.py#L190-L196", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/98", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/98/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/98/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/98", "id": 303037637, "node_id": "MDU6SXNzdWUzMDMwMzc2Mzc=", "number": 98, "title": "update_or_create() with unique contraint raises error", "user": {"login": "GitRon", "id": 3176075, "node_id": "MDQ6VXNlcjMxNzYwNzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3176075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GitRon", "html_url": "https://github.com/GitRon", "followers_url": "https://api.github.com/users/GitRon/followers", "following_url": "https://api.github.com/users/GitRon/following{/other_user}", "gists_url": "https://api.github.com/users/GitRon/gists{/gist_id}", "starred_url": "https://api.github.com/users/GitRon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GitRon/subscriptions", "organizations_url": "https://api.github.com/users/GitRon/orgs", "repos_url": "https://api.github.com/users/GitRon/repos", "events_url": "https://api.github.com/users/GitRon/events{/privacy}", "received_events_url": "https://api.github.com/users/GitRon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-07T10:11:32Z", "updated_at": "2018-05-29T09:50:01Z", "closed_at": "2018-05-29T09:21:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi guys,\r\n\r\nCase: SoftDeleteModel with a unique constraint on a field (not the regular id).\r\n\r\nWhen I use MyModel.objects.update_or_create(my_unique_field=42, defaults={foo=\"bar\"}) and the object is already softdeleted, I get an error: \"Duplicate entry '42' for key 'my_unique_field' (#266)\"\r\n\r\nI wrote a custom manger to solve the issue, you've got a pull request.\r\n\r\nI added a function testing if we need to do this depending if the model has a unique constraint defined. \r\n\r\nMaybe we need a case-handling for policies != soft_delete...\r\n\r\nBest regards\r\nRon", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/90", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/90/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/90/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/90", "id": 289451562, "node_id": "MDU6SXNzdWUyODk0NTE1NjI=", "number": 90, "title": "Trying to get ValuesListQuerySet throws \"TypeError: _clone() takes exactly 1 argument (2 given)\"", "user": {"login": "jkkjonah", "id": 1680185, "node_id": "MDQ6VXNlcjE2ODAxODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1680185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jkkjonah", "html_url": "https://github.com/jkkjonah", "followers_url": "https://api.github.com/users/jkkjonah/followers", "following_url": "https://api.github.com/users/jkkjonah/following{/other_user}", "gists_url": "https://api.github.com/users/jkkjonah/gists{/gist_id}", "starred_url": "https://api.github.com/users/jkkjonah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jkkjonah/subscriptions", "organizations_url": "https://api.github.com/users/jkkjonah/orgs", "repos_url": "https://api.github.com/users/jkkjonah/repos", "events_url": "https://api.github.com/users/jkkjonah/events{/privacy}", "received_events_url": "https://api.github.com/users/jkkjonah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-01-17T23:30:31Z", "updated_at": "2018-01-31T11:20:20Z", "closed_at": "2018-01-31T11:13:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I defined an extremely simple SafeDeleteModel and when I try to get a ValuesListQuerySet, the following error is thrown. Any idea why this is happening? Willing to contribute a fix, but could use some guidance.\r\n\r\n```\r\nTypeError: _clone() takes exactly 1 argument (2 given)\r\n```\r\n\r\nMy model:\r\n```\r\nclass DumbModel(SafeDeleteModel):\r\n    is_thing = models.BooleanField(default=False)\r\n```\r\n\r\nMy code:\r\n```\r\nIn [1]: from app.models import DumbModel\r\nIn [2]: DumbModel.objects.all().values_list()\r\nOut[2]: <repr(<django.db.models.query.ValuesListQuerySet at 0x106df54d0>) failed: TypeError: _clone() takes exactly 1 argument (2 given)>\r\n\r\nIn [3]: DumbModel.objects.all().values_list()[0]\r\nOut [3]: TypeError: _clone() takes exactly 1 argument (2 given)\r\n```\r\n\r\nDjango version: 1.8.14\r\ndjango-safedelete version: 0.4.4\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/89", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/89/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/89/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/89", "id": 289257168, "node_id": "MDU6SXNzdWUyODkyNTcxNjg=", "number": 89, "title": "Django>=2.0 support", "user": {"login": "Euphorbium", "id": 976661, "node_id": "MDQ6VXNlcjk3NjY2MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/976661?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Euphorbium", "html_url": "https://github.com/Euphorbium", "followers_url": "https://api.github.com/users/Euphorbium/followers", "following_url": "https://api.github.com/users/Euphorbium/following{/other_user}", "gists_url": "https://api.github.com/users/Euphorbium/gists{/gist_id}", "starred_url": "https://api.github.com/users/Euphorbium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Euphorbium/subscriptions", "organizations_url": "https://api.github.com/users/Euphorbium/orgs", "repos_url": "https://api.github.com/users/Euphorbium/repos", "events_url": "https://api.github.com/users/Euphorbium/events{/privacy}", "received_events_url": "https://api.github.com/users/Euphorbium/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-01-17T12:59:03Z", "updated_at": "2018-03-26T10:05:55Z", "closed_at": "2018-01-31T08:26:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a plan to support the new django versions?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/87", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/87/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/87/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/87", "id": 258388715, "node_id": "MDU6SXNzdWUyNTgzODg3MTU=", "number": 87, "title": "SafeDeleteMixin is not abstract", "user": {"login": "AndyGreenwell94", "id": 28748495, "node_id": "MDQ6VXNlcjI4NzQ4NDk1", "avatar_url": "https://avatars1.githubusercontent.com/u/28748495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndyGreenwell94", "html_url": "https://github.com/AndyGreenwell94", "followers_url": "https://api.github.com/users/AndyGreenwell94/followers", "following_url": "https://api.github.com/users/AndyGreenwell94/following{/other_user}", "gists_url": "https://api.github.com/users/AndyGreenwell94/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndyGreenwell94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndyGreenwell94/subscriptions", "organizations_url": "https://api.github.com/users/AndyGreenwell94/orgs", "repos_url": "https://api.github.com/users/AndyGreenwell94/repos", "events_url": "https://api.github.com/users/AndyGreenwell94/events{/privacy}", "received_events_url": "https://api.github.com/users/AndyGreenwell94/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-18T07:21:34Z", "updated_at": "2017-09-18T08:23:37Z", "closed_at": "2017-09-18T08:23:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "As **SafeDeleteMixin** is not abstract it cause problems during flush, as django wants to flush it, but there is no real table was ever created.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/86", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/86/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/86/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/86", "id": 244935265, "node_id": "MDU6SXNzdWUyNDQ5MzUyNjU=", "number": 86, "title": "Deletion of object is immediately reversed by save() method", "user": {"login": "jackappleby", "id": 1742659, "node_id": "MDQ6VXNlcjE3NDI2NTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1742659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackappleby", "html_url": "https://github.com/jackappleby", "followers_url": "https://api.github.com/users/jackappleby/followers", "following_url": "https://api.github.com/users/jackappleby/following{/other_user}", "gists_url": "https://api.github.com/users/jackappleby/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackappleby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackappleby/subscriptions", "organizations_url": "https://api.github.com/users/jackappleby/orgs", "repos_url": "https://api.github.com/users/jackappleby/repos", "events_url": "https://api.github.com/users/jackappleby/events{/privacy}", "received_events_url": "https://api.github.com/users/jackappleby/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-23T20:49:11Z", "updated_at": "2017-07-23T21:41:25Z", "closed_at": "2017-07-23T21:41:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using, for example, the SOFT_DELETE policy, I'm finding that an object is correctly set with `self.deleted = timezone.now()`(https://github.com/makinacorpus/django-safedelete/blob/master/safedelete/models.py#L137). But then in the `save()` function, it is immediately undeleted. This is because `keep_deleted`  [is defaulted to False](https://github.com/makinacorpus/django-safedelete/blob/master/safedelete/models.py#L74), which results in [the deleted field being set to None](https://github.com/makinacorpus/django-safedelete/blob/master/safedelete/models.py#L95). The object is then saved as if the soft delete never occurred. For extra info, if I momentarily set the arg `keep_deleted` to True in the package save method, everything works.\r\n\r\nAny clues as to what I'm getting wrong here would be much appreciated :) ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/85", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/85/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/85/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/85", "id": 242008782, "node_id": "MDU6SXNzdWUyNDIwMDg3ODI=", "number": 85, "title": "How to create custom mangers for models inheriting SafeDeleteModel?", "user": {"login": "ciarancourtney", "id": 6096029, "node_id": "MDQ6VXNlcjYwOTYwMjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6096029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ciarancourtney", "html_url": "https://github.com/ciarancourtney", "followers_url": "https://api.github.com/users/ciarancourtney/followers", "following_url": "https://api.github.com/users/ciarancourtney/following{/other_user}", "gists_url": "https://api.github.com/users/ciarancourtney/gists{/gist_id}", "starred_url": "https://api.github.com/users/ciarancourtney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ciarancourtney/subscriptions", "organizations_url": "https://api.github.com/users/ciarancourtney/orgs", "repos_url": "https://api.github.com/users/ciarancourtney/repos", "events_url": "https://api.github.com/users/ciarancourtney/events{/privacy}", "received_events_url": "https://api.github.com/users/ciarancourtney/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-11T11:03:41Z", "updated_at": "2018-01-31T11:14:06Z", "closed_at": "2018-01-31T11:14:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Per the [docs](https://docs.djangoproject.com/en/1.11/topics/db/managers/#custom-managers-and-model-inheritance) it seems that it should be possible to add additional custom managers to a model, if the SafeDeleteModel is initializing objects property, but this doesn't seem to be the case. If I add a custom manager to a model, model._default_manager will be that manager.\r\n\r\nShouldn't SafeDeleteModel define a default_manager_name?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/83", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/83/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/83/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/83", "id": 234128345, "node_id": "MDU6SXNzdWUyMzQxMjgzNDU=", "number": 83, "title": "just submitting bug fixes for your documentation", "user": {"login": "kinganu", "id": 16883689, "node_id": "MDQ6VXNlcjE2ODgzNjg5", "avatar_url": "https://avatars1.githubusercontent.com/u/16883689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kinganu", "html_url": "https://github.com/kinganu", "followers_url": "https://api.github.com/users/kinganu/followers", "following_url": "https://api.github.com/users/kinganu/following{/other_user}", "gists_url": "https://api.github.com/users/kinganu/gists{/gist_id}", "starred_url": "https://api.github.com/users/kinganu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kinganu/subscriptions", "organizations_url": "https://api.github.com/users/kinganu/orgs", "repos_url": "https://api.github.com/users/kinganu/repos", "events_url": "https://api.github.com/users/kinganu/events{/privacy}", "received_events_url": "https://api.github.com/users/kinganu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-06-07T08:18:33Z", "updated_at": "2017-09-18T08:23:54Z", "closed_at": "2017-09-18T08:23:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "on this page: http://django-safedelete.readthedocs.io/en/latest/managers.html , need this import, otherwise you get NameError not defined:\r\n\r\nfrom safedelete.config import *\r\n\r\nand this line here http://django-safedelete.readthedocs.io/en/latest/admin.html needs a comma, otherwise TypeError cannot convert str to tuple object implicitly:\r\nlist_filter = (\"last_name\",) + SafeDeleteAdmin.list_filter\r\n\r\nnew to django, im trying to add safedelete functionality to my project and service models for my app, it is challenging, a tutorial would be nice.   heres what Im working on  https://dpaste.de/Gxc1 ,  having issues seeing my service objects - I dont have the queryset set up properly with your package Im sure.  I can see them in django admin though, highlight deleted isnt showing in red though, and a NAME is in the list_display instead of Service.   Got everything mostly working. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/82", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/82/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/82/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/82", "id": 232072071, "node_id": "MDU6SXNzdWUyMzIwNzIwNzE=", "number": 82, "title": "Is it possible to undelete() related objects?", "user": {"login": "JanNovakFRI", "id": 17454855, "node_id": "MDQ6VXNlcjE3NDU0ODU1", "avatar_url": "https://avatars3.githubusercontent.com/u/17454855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JanNovakFRI", "html_url": "https://github.com/JanNovakFRI", "followers_url": "https://api.github.com/users/JanNovakFRI/followers", "following_url": "https://api.github.com/users/JanNovakFRI/following{/other_user}", "gists_url": "https://api.github.com/users/JanNovakFRI/gists{/gist_id}", "starred_url": "https://api.github.com/users/JanNovakFRI/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JanNovakFRI/subscriptions", "organizations_url": "https://api.github.com/users/JanNovakFRI/orgs", "repos_url": "https://api.github.com/users/JanNovakFRI/repos", "events_url": "https://api.github.com/users/JanNovakFRI/events{/privacy}", "received_events_url": "https://api.github.com/users/JanNovakFRI/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 44088041, "node_id": "MDU6TGFiZWw0NDA4ODA0MQ==", "url": "https://api.github.com/repos/makinacorpus/django-safedelete/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-29T17:44:34Z", "updated_at": "2018-03-20T09:15:00Z", "closed_at": "2018-03-20T09:15:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, is it possible to undelete an object and all related ones. As far as I figured out it only works one way (delete cascade). Or I am missing something?\r\n\r\nBest Regards\r\nJan", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/81", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/81/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/81/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/81", "id": 229262636, "node_id": "MDU6SXNzdWUyMjkyNjI2MzY=", "number": 81, "title": "prefetch_related are re-evaluated", "user": {"login": "Gagaro", "id": 3845486, "node_id": "MDQ6VXNlcjM4NDU0ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3845486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gagaro", "html_url": "https://github.com/Gagaro", "followers_url": "https://api.github.com/users/Gagaro/followers", "following_url": "https://api.github.com/users/Gagaro/following{/other_user}", "gists_url": "https://api.github.com/users/Gagaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gagaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gagaro/subscriptions", "organizations_url": "https://api.github.com/users/Gagaro/orgs", "repos_url": "https://api.github.com/users/Gagaro/repos", "events_url": "https://api.github.com/users/Gagaro/events{/privacy}", "received_events_url": "https://api.github.com/users/Gagaro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 44088039, "node_id": "MDU6TGFiZWw0NDA4ODAzOQ==", "url": "https://api.github.com/repos/makinacorpus/django-safedelete/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-17T07:36:48Z", "updated_at": "2017-05-30T12:34:40Z", "closed_at": "2017-05-30T12:34:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "see 921b3fb72e67cddfb0964b82dc1bd0b7ac0eb2d6", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/79", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/79/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/79/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/79", "id": 227945011, "node_id": "MDU6SXNzdWUyMjc5NDUwMTE=", "number": 79, "title": "Deleted instances still appear in formfields (Heisenbug?)", "user": {"login": "ciarancourtney", "id": 6096029, "node_id": "MDQ6VXNlcjYwOTYwMjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6096029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ciarancourtney", "html_url": "https://github.com/ciarancourtney", "followers_url": "https://api.github.com/users/ciarancourtney/followers", "following_url": "https://api.github.com/users/ciarancourtney/following{/other_user}", "gists_url": "https://api.github.com/users/ciarancourtney/gists{/gist_id}", "starred_url": "https://api.github.com/users/ciarancourtney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ciarancourtney/subscriptions", "organizations_url": "https://api.github.com/users/ciarancourtney/orgs", "repos_url": "https://api.github.com/users/ciarancourtney/repos", "events_url": "https://api.github.com/users/ciarancourtney/events{/privacy}", "received_events_url": "https://api.github.com/users/ciarancourtney/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 44088039, "node_id": "MDU6TGFiZWw0NDA4ODAzOQ==", "url": "https://api.github.com/repos/makinacorpus/django-safedelete/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-05-11T10:22:10Z", "updated_at": "2017-05-16T11:12:38Z", "closed_at": "2017-05-16T11:12:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a model for which I override Django Admin's `formfield_for_foreignkey()` like so:\r\n\r\n    class MyCustomAdmin(CustomSafeDeleteAdmin):\r\n\r\n        def get_queryset(self, request):\r\n            qs = super(MyCustomAdmin, self).get_queryset(request)\r\n            return qs.filter(user=request.user)\r\n\r\n        def formfield_for_foreignkey(self, db_field, request, **kwargs):\r\n            user= request.user\r\n            if db_field.name == 'foo':\r\n                kwargs['queryset'] = Foo.objects.filter(user=user)\r\n            return super(MyCustomAdmin, self).formfield_for_foreignkey(db_field, request, **kwargs)\r\n\r\nThe `Foo` model inherits from `SafeDeleteModel`, so its default objects manager should be handled by the default SafeDeleteManager.\r\n\r\nProblem is I am still seeing deleted `Foo` instances in formfield ForeignKey dropdowns, but not if I debug `Foo.objects.filter(user=user)` or `Foo.objects.all()`, and then if I step through, they don't appear in the dropdown, hence Heisenbug :( \r\n\r\nIs this releated to the note [here](https://django-safedelete.readthedocs.io/en/latest/managers.html#safedelete.managers.DELETED_INVISIBLE) on ForeignKey visibility?\r\n\r\nDjango will stop me from saving the model with a deleted FK, it will give the error `Select a valid choice. That choice is not one of the available choices`\r\n\r\nATM the only way I can reliably ensure deleted instances don't appear is to append `.exclude(deleted__isnull=False)` to all querysets, but this is not desirable, the default manager should ensure they don't exist?\r\n\r\nUsing safedelete 0.4.1 with queryset.py from PR #77,  Django 1.11.1 and Python 3.6.1 (Note issue happens with or without PR 77 patch)\r\n\r\n\r\nFor extra ref I am overiding some django admin functions so I can split safedelete access in admin between su/staff and 'lite' admin users\r\n\r\n```\r\nfrom safedelete.admin import SafeDeleteAdmin, highlight_deleted\r\n\r\nclass CustomSafeDeleteAdmin(SafeDeleteAdmin):\r\n    \"\"\"\r\n    Overriding this convenience class from django-safedelete, as we want:\r\n        - Delete to work 'as in' for non su-staff i.e. User has no idea deleted model instances still exist\r\n        - Allow su/staff to see all instances, deleted or not, and recover them if needs be\r\n\r\n    Notes:\r\n        - If su/staff try deleting an already deleted instance, this is a noop\r\n    \"\"\"\r\n\r\n    # override django-safedelete method so deleted instances are hidden from non su/staff\r\n    def get_queryset(self, request):\r\n        qs = super(CustomSafeDeleteAdmin, self).get_queryset(request)\r\n        if request.user.profile.user_can_undelete():\r\n            return qs\r\n        else:\r\n            # assuming the model in question inherits SafeDeleteModel, this will exclude deleted model instances (the default)\r\n            return self.model._default_manager.all()\r\n\r\n    def get_list_display(self, request):\r\n        list_display = super(CustomSafeDeleteAdmin, self).get_list_display(request)\r\n        if request.user.profile.user_can_undelete():\r\n\r\n            # highlight_deleted overrides the default instance 'Name'\r\n            list_display = list(list_display)\r\n            if 'name' in list_display:\r\n                list_display.remove('name')\r\n            if 'Name' in list_display:\r\n                list_display.remove('Name')\r\n            return [highlight_deleted] + list_display\r\n        else:\r\n            return list_display\r\n\r\n    # hide undelete action from admin changelist page actions if user not su/staff\r\n    def get_actions(self, request):\r\n        actions = super(CustomSafeDeleteAdmin, self).get_actions(request)\r\n        if not request.user.profile.user_can_undelete():\r\n            if 'undelete_selected' in actions:\r\n                del actions['undelete_selected']\r\n        return actions\r\n\r\n    # hide deleted list_filter from admin changelist page if user not su/staff\r\n    def get_list_filter(self, request):\r\n        list_filter = super(CustomSafeDeleteAdmin, self).get_list_filter(request)\r\n        if request.user.profile.user_can_undelete():\r\n            if isinstance(list_filter, list):\r\n                list_filter = tuple(list_filter)\r\n            return SafeDeleteAdmin.list_filter + list_filter\r\n        else:\r\n            return list_filter\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/78", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/78/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/78/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/78", "id": 227691436, "node_id": "MDU6SXNzdWUyMjc2OTE0MzY=", "number": 78, "title": "allow_tags deprecated in Django 2.0", "user": {"login": "ciarancourtney", "id": 6096029, "node_id": "MDQ6VXNlcjYwOTYwMjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6096029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ciarancourtney", "html_url": "https://github.com/ciarancourtney", "followers_url": "https://api.github.com/users/ciarancourtney/followers", "following_url": "https://api.github.com/users/ciarancourtney/following{/other_user}", "gists_url": "https://api.github.com/users/ciarancourtney/gists{/gist_id}", "starred_url": "https://api.github.com/users/ciarancourtney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ciarancourtney/subscriptions", "organizations_url": "https://api.github.com/users/ciarancourtney/orgs", "repos_url": "https://api.github.com/users/ciarancourtney/repos", "events_url": "https://api.github.com/users/ciarancourtney/events{/privacy}", "received_events_url": "https://api.github.com/users/ciarancourtney/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-05-10T14:04:40Z", "updated_at": "2017-05-30T12:35:53Z", "closed_at": "2017-05-30T12:35:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Warning below appears in Django 1.9+\r\n\r\n    RemovedInDjango20Warning: Deprecated allow_tags attribute used on field <function highlight_deleted at 0x7f32cd9ef9d8>. Use django.utils.html.format_html(), format_html_join(), or django.utils.safestring.mark_safe() instead.\r\n\r\nI think you just need to wrap the html [here ](https://github.com/makinacorpus/django-safedelete/blob/master/safedelete/admin.py#L24)with format_html() instead", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/76", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/76/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/76/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/76", "id": 224229002, "node_id": "MDU6SXNzdWUyMjQyMjkwMDI=", "number": 76, "title": "QuerySet first() method gives Cannot filter a query once a slice has been taken. ", "user": {"login": "glemmaPaul", "id": 4697524, "node_id": "MDQ6VXNlcjQ2OTc1MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4697524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glemmaPaul", "html_url": "https://github.com/glemmaPaul", "followers_url": "https://api.github.com/users/glemmaPaul/followers", "following_url": "https://api.github.com/users/glemmaPaul/following{/other_user}", "gists_url": "https://api.github.com/users/glemmaPaul/gists{/gist_id}", "starred_url": "https://api.github.com/users/glemmaPaul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glemmaPaul/subscriptions", "organizations_url": "https://api.github.com/users/glemmaPaul/orgs", "repos_url": "https://api.github.com/users/glemmaPaul/repos", "events_url": "https://api.github.com/users/glemmaPaul/events{/privacy}", "received_events_url": "https://api.github.com/users/glemmaPaul/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 44088039, "node_id": "MDU6TGFiZWw0NDA4ODAzOQ==", "url": "https://api.github.com/repos/makinacorpus/django-safedelete/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2017-04-25T18:20:17Z", "updated_at": "2020-01-09T11:08:44Z", "closed_at": "2018-01-09T08:56:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey guys!\r\n\r\nIt seems that this code change gave me an issue, as following:\r\n```\r\nUser.objects.filter(email=\"paul@email.nl\").first()\r\n```\r\nGives me:\r\n```\r\nFile \"/Users/pauloostenrijk/webprojects/app/app/users/import_export/resources.py\", line 57, in before_import\r\nuser = User.objects.all().filter(email=row['email']).first()\r\nFile \"/Users/pauloostenrijk/.virtualenvs/app/lib/python2.7/site-packages/django/db/models/query.py\", line 550, in first\r\nobjects = list((self if self.ordered else self.order_by('pk'))[:1])\r\nFile \"/Users/pauloostenrijk/.virtualenvs/app/lib/python2.7/site-packages/django/db/models/query.py\", line 258, in __iter__\r\nself._fetch_all()\r\nFile \"/Users/pauloostenrijk/.virtualenvs/app/lib/python2.7/site-packages/safedelete/queryset.py\", line 121, in decorator\r\nself._filter_visibility()\r\nFile \"/Users/pauloostenrijk/.virtualenvs/app/lib/python2.7/site-packages/safedelete/queryset.py\", line 98, in _filter_visibility\r\n\"Cannot filter a query once a slice has been taken.\"\r\nAssertionError: Cannot filter a query once a slice has been taken.\r\n```\r\n\r\nHere are some implementation details:\r\n```\r\nfrom safedelete.managers import SafeDeleteManager\r\n\r\nclass UserManager(BaseUserManager, SafeDeleteManager):\r\n```\r\n\r\n```\r\n@python_2_unicode_compatible\r\nclass User(SafeDeleteModel, AbstractBaseUser, TimeStampedUUIDModel, PermissionsMixin):\r\n    objects = UserManager()\r\n```\r\n\r\nVersion: 0.4.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/75", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/75/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/75/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/75", "id": 220584546, "node_id": "MDU6SXNzdWUyMjA1ODQ1NDY=", "number": 75, "title": "0.4.0 pypi release missing static directory", "user": {"login": "ciarancourtney", "id": 6096029, "node_id": "MDQ6VXNlcjYwOTYwMjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6096029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ciarancourtney", "html_url": "https://github.com/ciarancourtney", "followers_url": "https://api.github.com/users/ciarancourtney/followers", "following_url": "https://api.github.com/users/ciarancourtney/following{/other_user}", "gists_url": "https://api.github.com/users/ciarancourtney/gists{/gist_id}", "starred_url": "https://api.github.com/users/ciarancourtney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ciarancourtney/subscriptions", "organizations_url": "https://api.github.com/users/ciarancourtney/orgs", "repos_url": "https://api.github.com/users/ciarancourtney/repos", "events_url": "https://api.github.com/users/ciarancourtney/events{/privacy}", "received_events_url": "https://api.github.com/users/ciarancourtney/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 44088039, "node_id": "MDU6TGFiZWw0NDA4ODAzOQ==", "url": "https://api.github.com/repos/makinacorpus/django-safedelete/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-04-10T09:21:14Z", "updated_at": "2017-04-13T11:58:29Z", "closed_at": "2017-04-13T11:58:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Download tarball from https://pypi.python.org/pypi/django-safedelete/0.4.0 and notice admin.css is missing", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/68", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/68/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/68/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/68", "id": 207940335, "node_id": "MDU6SXNzdWUyMDc5NDAzMzU=", "number": 68, "title": "safedelete fails to cascade properly with inheritance", "user": {"login": "wli", "id": 649892, "node_id": "MDQ6VXNlcjY0OTg5Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/649892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wli", "html_url": "https://github.com/wli", "followers_url": "https://api.github.com/users/wli/followers", "following_url": "https://api.github.com/users/wli/following{/other_user}", "gists_url": "https://api.github.com/users/wli/gists{/gist_id}", "starred_url": "https://api.github.com/users/wli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wli/subscriptions", "organizations_url": "https://api.github.com/users/wli/orgs", "repos_url": "https://api.github.com/users/wli/repos", "events_url": "https://api.github.com/users/wli/events{/privacy}", "received_events_url": "https://api.github.com/users/wli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-15T21:54:14Z", "updated_at": "2017-02-21T19:42:39Z", "closed_at": "2017-02-21T19:42:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Somewhat related to https://github.com/makinacorpus/django-safedelete/issues/55\r\n\r\nWhile figuring out how to add a db index to help with query performance (I know it was added in https://github.com/makinacorpus/django-safedelete/pull/67, but only for the 0.3.x branch), I decided to subclass the SafeDeleteMixin.\r\n\r\n```\r\n# Override safedelete mixin to enable db index.\r\nclass CustomSafeDeleteModel(SafeDeleteMixin):\r\n    deleted = models.DateTimeField(editable=False, null=True, db_index=True)\r\n\r\n    class Meta:\r\n        abstract = True\r\n```\r\n\r\nThe culprit appears to be that it only checks the first-level of `__bases__` to see if a model is a safedelete model: https://github.com/makinacorpus/django-safedelete/blob/6a20488785d4ac335d96031204064c53a25127e5/safedelete/models.py#L10\r\n\r\nWhile my current issue can be solved in other ways, this does prevent django abstract model inheritance from working properly. It only manifests itself when setting the `_safedelete_policy` to `safedelete.models.SOFT_DELETE_CASCADE`, so it's pretty subtle.\r\n\r\nFor anyone looking for a quick short-term hack around this, you can do this so that `is_safedelete` works properly:\r\n\r\n```\r\n# Override safedelete mixin to enable db index.\r\nclass CustomSafeDeleteMixin(object):\r\n    deleted = models.DateTimeField(editable=False, null=True, db_index=True)\r\n\r\n    class Meta:\r\n        abstract = True\r\n\r\nclass MyModel(SafeDeleteMixin, CustomSafeDeleteMixin):\r\n   # ...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/57", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/57/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/57/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/57", "id": 197062030, "node_id": "MDU6SXNzdWUxOTcwNjIwMzA=", "number": 57, "title": "Separate tests", "user": {"login": "AndreasBackx", "id": 1593486, "node_id": "MDQ6VXNlcjE1OTM0ODY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1593486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreasBackx", "html_url": "https://github.com/AndreasBackx", "followers_url": "https://api.github.com/users/AndreasBackx/followers", "following_url": "https://api.github.com/users/AndreasBackx/following{/other_user}", "gists_url": "https://api.github.com/users/AndreasBackx/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreasBackx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreasBackx/subscriptions", "organizations_url": "https://api.github.com/users/AndreasBackx/orgs", "repos_url": "https://api.github.com/users/AndreasBackx/repos", "events_url": "https://api.github.com/users/AndreasBackx/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreasBackx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-12-21T23:52:46Z", "updated_at": "2017-01-13T09:35:38Z", "closed_at": "2017-01-13T09:35:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Tests like `SimpleTest.test_hard_delete_nocascade` only rely on 2 models of which 1 had a ForeignKey to the other. Because there are other models in the mix, that can mess up the tests which caused bug #56. Tests should be put in a subfolder and multiple files that each test a specific policy for example. It would weed out some perhaps future bugs that come with too tightly coupled tests.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/55", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/55/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/55/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/55", "id": 196975898, "node_id": "MDU6SXNzdWUxOTY5NzU4OTg=", "number": 55, "title": "SafeDeleteMixin is not a mixin", "user": {"login": "AndreasBackx", "id": 1593486, "node_id": "MDQ6VXNlcjE1OTM0ODY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1593486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreasBackx", "html_url": "https://github.com/AndreasBackx", "followers_url": "https://api.github.com/users/AndreasBackx/followers", "following_url": "https://api.github.com/users/AndreasBackx/following{/other_user}", "gists_url": "https://api.github.com/users/AndreasBackx/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreasBackx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreasBackx/subscriptions", "organizations_url": "https://api.github.com/users/AndreasBackx/orgs", "repos_url": "https://api.github.com/users/AndreasBackx/repos", "events_url": "https://api.github.com/users/AndreasBackx/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreasBackx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-12-21T16:30:55Z", "updated_at": "2017-02-21T13:02:42Z", "closed_at": "2017-02-21T13:02:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The name `SafeDeleteMixin` seems to say that the class is a Mixin when it's not because it inherits from `django.db.models`. Wouldn't `SafeDeleteModel`be a better name in this case? It clears up some confusion regarding inheritance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/54", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/54/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/54/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/54", "id": 193815390, "node_id": "MDU6SXNzdWUxOTM4MTUzOTA=", "number": 54, "title": "test with django 1.10 and master", "user": {"login": "thenewguy", "id": 77731, "node_id": "MDQ6VXNlcjc3NzMx", "avatar_url": "https://avatars2.githubusercontent.com/u/77731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thenewguy", "html_url": "https://github.com/thenewguy", "followers_url": "https://api.github.com/users/thenewguy/followers", "following_url": "https://api.github.com/users/thenewguy/following{/other_user}", "gists_url": "https://api.github.com/users/thenewguy/gists{/gist_id}", "starred_url": "https://api.github.com/users/thenewguy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thenewguy/subscriptions", "organizations_url": "https://api.github.com/users/thenewguy/orgs", "repos_url": "https://api.github.com/users/thenewguy/repos", "events_url": "https://api.github.com/users/thenewguy/events{/privacy}", "received_events_url": "https://api.github.com/users/thenewguy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-06T16:17:46Z", "updated_at": "2017-01-13T12:41:40Z", "closed_at": "2017-01-13T12:41:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was looking for a mixin that handles the edge cases I am encountering attempting to add masking to a model that I never want to be deleted.  This project seems to the what I am looking for.  I noticed the tests do not run on django 1.10 so I am raising this issue", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/48", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/48/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/48/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/48", "id": 170701952, "node_id": "MDU6SXNzdWUxNzA3MDE5NTI=", "number": 48, "title": "Cascade on Soft Delete", "user": {"login": "ish-vasa", "id": 6989932, "node_id": "MDQ6VXNlcjY5ODk5MzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/6989932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ish-vasa", "html_url": "https://github.com/ish-vasa", "followers_url": "https://api.github.com/users/ish-vasa/followers", "following_url": "https://api.github.com/users/ish-vasa/following{/other_user}", "gists_url": "https://api.github.com/users/ish-vasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ish-vasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ish-vasa/subscriptions", "organizations_url": "https://api.github.com/users/ish-vasa/orgs", "repos_url": "https://api.github.com/users/ish-vasa/repos", "events_url": "https://api.github.com/users/ish-vasa/events{/privacy}", "received_events_url": "https://api.github.com/users/ish-vasa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-08-11T17:35:14Z", "updated_at": "2017-01-13T10:26:27Z", "closed_at": "2017-01-13T10:26:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does this library support cascading soft deletes?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/44", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/44/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/44/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/44", "id": 141682326, "node_id": "MDU6SXNzdWUxNDE2ODIzMjY=", "number": 44, "title": "custom manager and queryset methods not working", "user": {"login": "smcoll", "id": 321438, "node_id": "MDQ6VXNlcjMyMTQzOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/321438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smcoll", "html_url": "https://github.com/smcoll", "followers_url": "https://api.github.com/users/smcoll/followers", "following_url": "https://api.github.com/users/smcoll/following{/other_user}", "gists_url": "https://api.github.com/users/smcoll/gists{/gist_id}", "starred_url": "https://api.github.com/users/smcoll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smcoll/subscriptions", "organizations_url": "https://api.github.com/users/smcoll/orgs", "repos_url": "https://api.github.com/users/smcoll/repos", "events_url": "https://api.github.com/users/smcoll/events{/privacy}", "received_events_url": "https://api.github.com/users/smcoll/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-17T19:20:03Z", "updated_at": "2016-03-18T13:46:30Z", "closed_at": "2016-03-18T07:49:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "i'll issue a PR shortly with failing tests which should give a clearer picture.  Let me know if i misunderstood the usage of the factory.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/43", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/43/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/43/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/43", "id": 127389644, "node_id": "MDU6SXNzdWUxMjczODk2NDQ=", "number": 43, "title": "Todo before 0.4.x release", "user": {"login": "Gagaro", "id": 3845486, "node_id": "MDQ6VXNlcjM4NDU0ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3845486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gagaro", "html_url": "https://github.com/Gagaro", "followers_url": "https://api.github.com/users/Gagaro/followers", "following_url": "https://api.github.com/users/Gagaro/following{/other_user}", "gists_url": "https://api.github.com/users/Gagaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gagaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gagaro/subscriptions", "organizations_url": "https://api.github.com/users/Gagaro/orgs", "repos_url": "https://api.github.com/users/Gagaro/repos", "events_url": "https://api.github.com/users/Gagaro/events{/privacy}", "received_events_url": "https://api.github.com/users/Gagaro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-01-19T08:22:02Z", "updated_at": "2017-01-13T12:40:44Z", "closed_at": "2017-01-13T12:40:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "- [x] Doc for post_*delete signals\r\n- [x] fix #41\r\n- [x] take a look at #16\r\n- [x] remove Django 1.4 => 1.7 support and clean code.\r\n- [x] Add DELETED_VISIBLE_BY_FIELD\r\n- [x] Add SOFT_DELETE_CASCADE\r\n- [ ] Check the doc is up to date.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/41", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/41/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/41/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/41", "id": 126746701, "node_id": "MDU6SXNzdWUxMjY3NDY3MDE=", "number": 41, "title": "Undelete does nothing when using DELETED_INVISIBLE", "user": {"login": "sbussetti", "id": 913361, "node_id": "MDQ6VXNlcjkxMzM2MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/913361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbussetti", "html_url": "https://github.com/sbussetti", "followers_url": "https://api.github.com/users/sbussetti/followers", "following_url": "https://api.github.com/users/sbussetti/following{/other_user}", "gists_url": "https://api.github.com/users/sbussetti/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbussetti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbussetti/subscriptions", "organizations_url": "https://api.github.com/users/sbussetti/orgs", "repos_url": "https://api.github.com/users/sbussetti/repos", "events_url": "https://api.github.com/users/sbussetti/events{/privacy}", "received_events_url": "https://api.github.com/users/sbussetti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-01-14T20:58:50Z", "updated_at": "2016-10-17T07:38:10Z", "closed_at": "2016-10-17T07:38:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is actually a pre-existing one I've been running into on Django 1.7/1.8.\n\nWhen attempting to undelete (save) a deleted model, the `_base_manager` is used by Django to create the \"base_qs\" to perform the update from:\n\n``` python\nbase_qs = cls._base_manager.using(using)\n...\nupdated = self._do_update(base_qs, using, pk_val, values, update_fields, forced_update)\n```\n\nBecause the _base_manager is the SafeDeleteManager, only model instances where deleted__isnull=True are considered. This returns and empty set of course because we're attempting to save an instance where deleted is not null.\n\nAs a result, `_do_update` returns False, since no records were updated, and django then attempts to insert a new record, which defeats the purpose of undeleting.\n\nSo far, the only workaround I've found is to set `_base_manager = models.Manager()`, but this has some other negative side-effects, such as causing reverse managers from instances with ForeignKeys to the SafeDelete model to not filter out deleted models.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/37", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/37/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/37/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/37", "id": 117619196, "node_id": "MDU6SXNzdWUxMTc2MTkxOTY=", "number": 37, "title": "How to use no-delete?", "user": {"login": "barseghyanartur", "id": 4925587, "node_id": "MDQ6VXNlcjQ5MjU1ODc=", "avatar_url": "https://avatars3.githubusercontent.com/u/4925587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barseghyanartur", "html_url": "https://github.com/barseghyanartur", "followers_url": "https://api.github.com/users/barseghyanartur/followers", "following_url": "https://api.github.com/users/barseghyanartur/following{/other_user}", "gists_url": "https://api.github.com/users/barseghyanartur/gists{/gist_id}", "starred_url": "https://api.github.com/users/barseghyanartur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barseghyanartur/subscriptions", "organizations_url": "https://api.github.com/users/barseghyanartur/orgs", "repos_url": "https://api.github.com/users/barseghyanartur/repos", "events_url": "https://api.github.com/users/barseghyanartur/events{/privacy}", "received_events_url": "https://api.github.com/users/barseghyanartur/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-18T16:05:09Z", "updated_at": "2015-11-23T08:25:30Z", "closed_at": "2015-11-19T13:05:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As advertised in the docs:\n\nYou can choose what happens when you delete an object :\n1. it can be masked from your database (soft delete)\n2. it can be normally deleted (hard delete)\n3. it can be hard-deleted, but if its deletion would delete other objects, it will only be masked\n4. it can be never deleted or masked from your database (no delete, use with caution)\n\nI could not find option 4. Could you please clarify, how to implement no-delete with  `django-safedelete`?\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/34", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/34/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/34/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/34", "id": 95819675, "node_id": "MDU6SXNzdWU5NTgxOTY3NQ==", "number": 34, "title": "Django 1.9 compatibility", "user": {"login": "rfleschenberg", "id": 4319330, "node_id": "MDQ6VXNlcjQzMTkzMzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/4319330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rfleschenberg", "html_url": "https://github.com/rfleschenberg", "followers_url": "https://api.github.com/users/rfleschenberg/followers", "following_url": "https://api.github.com/users/rfleschenberg/following{/other_user}", "gists_url": "https://api.github.com/users/rfleschenberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/rfleschenberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rfleschenberg/subscriptions", "organizations_url": "https://api.github.com/users/rfleschenberg/orgs", "repos_url": "https://api.github.com/users/rfleschenberg/repos", "events_url": "https://api.github.com/users/rfleschenberg/events{/privacy}", "received_events_url": "https://api.github.com/users/rfleschenberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-07-18T12:18:24Z", "updated_at": "2015-08-22T15:19:13Z", "closed_at": "2015-08-22T15:19:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`models.py` calls `safedelete_mixin_factory(SOFT_DELETE)` at import time. This breaks against the current Django master branch, so it will likely be broken on Django 1.9.\n\nI don't fully understand the issue yet. Can we move that call somewhere else, so it is executed after the app registry is ready?\n\nHere is an example traceback:\n\n```\nTraceback (most recent call last):\n  File \"./manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/home/rene/.virtualenvs/academy/lib/python3.4/site-packages/django/core/management/__init__.py\", line 331, in execute_from_command_line\n    utility.execute()\n  File \"/home/rene/.virtualenvs/academy/lib/python3.4/site-packages/django/core/management/__init__.py\", line 305, in execute\n    django.setup()\n  File \"/home/rene/.virtualenvs/academy/lib/python3.4/site-packages/django/__init__.py\", line 18, in setup\n    apps.populate(settings.INSTALLED_APPS)\n  File \"/home/rene/.virtualenvs/academy/lib/python3.4/site-packages/django/apps/registry.py\", line 85, in populate\n    app_config = AppConfig.create(entry)\n  File \"/home/rene/.virtualenvs/academy/lib/python3.4/site-packages/django/apps/config.py\", line 86, in create\n    module = import_module(entry)\n  File \"/home/rene/.virtualenvs/academy/lib64/python3.4/importlib/__init__.py\", line 109, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"<frozen importlib._bootstrap>\", line 2254, in _gcd_import\n  File \"<frozen importlib._bootstrap>\", line 2237, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 2226, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 1200, in _load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 1129, in _exec\n  File \"<frozen importlib._bootstrap>\", line 1471, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 321, in _call_with_frames_removed\n  File \"/home/rene/.virtualenvs/academy/lib/python3.4/site-packages/safedelete/__init__.py\", line 5, in <module>\n    from .models import safedelete_mixin_factory\n  File \"/home/rene/.virtualenvs/academy/lib/python3.4/site-packages/safedelete/models.py\", line 127, in <module>\n    SoftDeleteMixin = safedelete_mixin_factory(SOFT_DELETE)\n  File \"/home/rene/.virtualenvs/academy/lib/python3.4/site-packages/safedelete/models.py\", line 37, in safedelete_mixin_factory\n    class Model(models.Model):\n  File \"/home/rene/.virtualenvs/academy/lib/python3.4/site-packages/django/db/models/base.py\", line 94, in __new__\n    app_config = apps.get_containing_app_config(module)\n  File \"/home/rene/.virtualenvs/academy/lib/python3.4/site-packages/django/apps/registry.py\", line 239, in get_containing_app_config\n    self.check_apps_ready()\n  File \"/home/rene/.virtualenvs/academy/lib/python3.4/site-packages/django/apps/registry.py\", line 124, in check_apps_ready\n    raise AppRegistryNotReady(\"Apps aren't loaded yet.\")\ndjango.core.exceptions.AppRegistryNotReady: Apps aren't loaded yet.\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/27", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/27/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/27/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/27", "id": 46611317, "node_id": "MDU6SXNzdWU0NjYxMTMxNw==", "number": 27, "title": "Getting rid of Django 1.3 compatibility", "user": {"login": "Gagaro", "id": 3845486, "node_id": "MDQ6VXNlcjM4NDU0ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3845486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gagaro", "html_url": "https://github.com/Gagaro", "followers_url": "https://api.github.com/users/Gagaro/followers", "following_url": "https://api.github.com/users/Gagaro/following{/other_user}", "gists_url": "https://api.github.com/users/Gagaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gagaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gagaro/subscriptions", "organizations_url": "https://api.github.com/users/Gagaro/orgs", "repos_url": "https://api.github.com/users/Gagaro/repos", "events_url": "https://api.github.com/users/Gagaro/events{/privacy}", "received_events_url": "https://api.github.com/users/Gagaro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 44088043, "node_id": "MDU6TGFiZWw0NDA4ODA0Mw==", "url": "https://api.github.com/repos/makinacorpus/django-safedelete/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-10-23T10:47:17Z", "updated_at": "2014-12-09T16:25:56Z", "closed_at": "2014-12-09T16:25:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hello,\n\nWhat would you think of gettign rid of Django 1.3 compatibility ? I'm currently working on improving the admin part of the module (https://github.com/Gagaro/django-safedelete/tree/improve_admin), and I have to do lots of workarounds to handle it. One would be to heavily change a template because Django 1.3 is missing one of the templatetags used in it.\n\nDjango 1.3 is no longer supported and supporting it make the code heavier. Does someone really need the 1.3 support ? What do you think about removing it ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/24", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/24/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/24/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/24", "id": 33467076, "node_id": "MDU6SXNzdWUzMzQ2NzA3Ng==", "number": 24, "title": "Please update Pypi Package", "user": {"login": "kilrogg", "id": 980899, "node_id": "MDQ6VXNlcjk4MDg5OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/980899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kilrogg", "html_url": "https://github.com/kilrogg", "followers_url": "https://api.github.com/users/kilrogg/followers", "following_url": "https://api.github.com/users/kilrogg/following{/other_user}", "gists_url": "https://api.github.com/users/kilrogg/gists{/gist_id}", "starred_url": "https://api.github.com/users/kilrogg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kilrogg/subscriptions", "organizations_url": "https://api.github.com/users/kilrogg/orgs", "repos_url": "https://api.github.com/users/kilrogg/repos", "events_url": "https://api.github.com/users/kilrogg/events{/privacy}", "received_events_url": "https://api.github.com/users/kilrogg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-05-14T07:15:23Z", "updated_at": "2014-12-10T10:17:52Z", "closed_at": "2014-12-10T10:17:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "In light of recent changes (especially moving version information into setup.py) could you please update the pypi-Package?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/20", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/20/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/20/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/20", "id": 28171588, "node_id": "MDU6SXNzdWUyODE3MTU4OA==", "number": 20, "title": "Remove need for factory methods?", "user": {"login": "vdboor", "id": 200303, "node_id": "MDQ6VXNlcjIwMDMwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/200303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vdboor", "html_url": "https://github.com/vdboor", "followers_url": "https://api.github.com/users/vdboor/followers", "following_url": "https://api.github.com/users/vdboor/following{/other_user}", "gists_url": "https://api.github.com/users/vdboor/gists{/gist_id}", "starred_url": "https://api.github.com/users/vdboor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vdboor/subscriptions", "organizations_url": "https://api.github.com/users/vdboor/orgs", "repos_url": "https://api.github.com/users/vdboor/repos", "events_url": "https://api.github.com/users/vdboor/events{/privacy}", "received_events_url": "https://api.github.com/users/vdboor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-02-24T15:51:51Z", "updated_at": "2016-01-15T09:16:59Z", "closed_at": "2016-01-15T09:16:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Curious, what is the reason for the factory methods to exists?\nFrom what I've seen the mixins could easily be provided as stand-alone classes.\n\nCurrently it's impossible to override the `SafeDeleteQueryset` because of the current design\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/19", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/19/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/19/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/19", "id": 28162742, "node_id": "MDU6SXNzdWUyODE2Mjc0Mg==", "number": 19, "title": "Can't install via a requirements.txt file.", "user": {"login": "lemuelf", "id": 1447980, "node_id": "MDQ6VXNlcjE0NDc5ODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1447980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lemuelf", "html_url": "https://github.com/lemuelf", "followers_url": "https://api.github.com/users/lemuelf/followers", "following_url": "https://api.github.com/users/lemuelf/following{/other_user}", "gists_url": "https://api.github.com/users/lemuelf/gists{/gist_id}", "starred_url": "https://api.github.com/users/lemuelf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lemuelf/subscriptions", "organizations_url": "https://api.github.com/users/lemuelf/orgs", "repos_url": "https://api.github.com/users/lemuelf/repos", "events_url": "https://api.github.com/users/lemuelf/events{/privacy}", "received_events_url": "https://api.github.com/users/lemuelf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-02-24T13:57:13Z", "updated_at": "2014-12-09T16:28:37Z", "closed_at": "2014-12-09T16:28:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "If being installed via pip with a requirements file with Django and safedelete, it will fail because django-safedelete's `setup.py` imports django, which isn't installed yet (pip will run all package's setup.py before installing anything to try resolve the dependencies).\n\nThe only way to install this package is via a 2 step pip install process\n1. pip install django\n2. pip install django-safedelete\nwhich means it can't be done in a requirements file. (Or am I missing something?)\n\nSolution is to avoid importing django in the setup.py file, but I don't see a nice way to do that since the version is being retrieved from a module that imports another module that imports django.  Any suggestions?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/16", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/16/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/16/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/16", "id": 17647489, "node_id": "MDU6SXNzdWUxNzY0NzQ4OQ==", "number": 16, "title": "Use something other than the collector of the admin site, to find related objects.", "user": {"login": "palkeo", "id": 900940, "node_id": "MDQ6VXNlcjkwMDk0MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/900940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palkeo", "html_url": "https://github.com/palkeo", "followers_url": "https://api.github.com/users/palkeo/followers", "following_url": "https://api.github.com/users/palkeo/following{/other_user}", "gists_url": "https://api.github.com/users/palkeo/gists{/gist_id}", "starred_url": "https://api.github.com/users/palkeo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palkeo/subscriptions", "organizations_url": "https://api.github.com/users/palkeo/orgs", "repos_url": "https://api.github.com/users/palkeo/repos", "events_url": "https://api.github.com/users/palkeo/events{/privacy}", "received_events_url": "https://api.github.com/users/palkeo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 44088041, "node_id": "MDU6TGFiZWw0NDA4ODA0MQ==", "url": "https://api.github.com/repos/makinacorpus/django-safedelete/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-08-05T17:39:26Z", "updated_at": "2016-03-25T11:10:13Z", "closed_at": "2016-03-25T11:10:13Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "To find objects that would have been cascade-deleted if an object is deleted, the Django admin site collector is used.\nBut, it should be possible to do it using a \u00ab normal \u00bb Django collector, not the one of the admin site.\n\nCf : https://github.com/makinacorpus/django-safedelete/blob/master/safedelete/utils.py#L12\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/15", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/15/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/15/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/15", "id": 17389435, "node_id": "MDU6SXNzdWUxNzM4OTQzNQ==", "number": 15, "title": "What about changing deleted field type to datetime?", "user": {"login": "meteozond", "id": 975689, "node_id": "MDQ6VXNlcjk3NTY4OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/975689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meteozond", "html_url": "https://github.com/meteozond", "followers_url": "https://api.github.com/users/meteozond/followers", "following_url": "https://api.github.com/users/meteozond/following{/other_user}", "gists_url": "https://api.github.com/users/meteozond/gists{/gist_id}", "starred_url": "https://api.github.com/users/meteozond/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meteozond/subscriptions", "organizations_url": "https://api.github.com/users/meteozond/orgs", "repos_url": "https://api.github.com/users/meteozond/repos", "events_url": "https://api.github.com/users/meteozond/events{/privacy}", "received_events_url": "https://api.github.com/users/meteozond/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-07-30T10:45:51Z", "updated_at": "2013-07-30T10:46:14Z", "closed_at": "2013-07-30T10:46:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be useful for statistics, logging and delayed garbage collecting.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/14", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/14/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/14/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/14", "id": 17389380, "node_id": "MDU6SXNzdWUxNzM4OTM4MA==", "number": 14, "title": "What about changing deleted field type to datetime?", "user": {"login": "meteozond", "id": 975689, "node_id": "MDQ6VXNlcjk3NTY4OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/975689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meteozond", "html_url": "https://github.com/meteozond", "followers_url": "https://api.github.com/users/meteozond/followers", "following_url": "https://api.github.com/users/meteozond/following{/other_user}", "gists_url": "https://api.github.com/users/meteozond/gists{/gist_id}", "starred_url": "https://api.github.com/users/meteozond/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meteozond/subscriptions", "organizations_url": "https://api.github.com/users/meteozond/orgs", "repos_url": "https://api.github.com/users/meteozond/repos", "events_url": "https://api.github.com/users/meteozond/events{/privacy}", "received_events_url": "https://api.github.com/users/meteozond/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 44088041, "node_id": "MDU6TGFiZWw0NDA4ODA0MQ==", "url": "https://api.github.com/repos/makinacorpus/django-safedelete/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 44088043, "node_id": "MDU6TGFiZWw0NDA4ODA0Mw==", "url": "https://api.github.com/repos/makinacorpus/django-safedelete/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-07-30T10:43:42Z", "updated_at": "2016-01-15T09:17:16Z", "closed_at": "2016-01-15T09:17:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be useful for statistics, logging and delayed garbage collecting.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/13", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/13/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/13/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/13", "id": 16417834, "node_id": "MDU6SXNzdWUxNjQxNzgzNA==", "number": 13, "title": "Add Changelog", "user": {"login": "leplatrem", "id": 546692, "node_id": "MDQ6VXNlcjU0NjY5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/546692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leplatrem", "html_url": "https://github.com/leplatrem", "followers_url": "https://api.github.com/users/leplatrem/followers", "following_url": "https://api.github.com/users/leplatrem/following{/other_user}", "gists_url": "https://api.github.com/users/leplatrem/gists{/gist_id}", "starred_url": "https://api.github.com/users/leplatrem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leplatrem/subscriptions", "organizations_url": "https://api.github.com/users/leplatrem/orgs", "repos_url": "https://api.github.com/users/leplatrem/repos", "events_url": "https://api.github.com/users/leplatrem/events{/privacy}", "received_events_url": "https://api.github.com/users/leplatrem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 44088041, "node_id": "MDU6TGFiZWw0NDA4ODA0MQ==", "url": "https://api.github.com/repos/makinacorpus/django-safedelete/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-07-05T20:36:40Z", "updated_at": "2014-12-09T16:26:29Z", "closed_at": "2014-12-09T16:26:29Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Either separate file, and section in README.\nShould be visible on pypi either way.\n\nSee https://github.com/twoscoops/django-admin2\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/12", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/12/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/12/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/12", "id": 16417770, "node_id": "MDU6SXNzdWUxNjQxNzc3MA==", "number": 12, "title": "Installation paragraph should mention stable and current master", "user": {"login": "leplatrem", "id": 546692, "node_id": "MDQ6VXNlcjU0NjY5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/546692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leplatrem", "html_url": "https://github.com/leplatrem", "followers_url": "https://api.github.com/users/leplatrem/followers", "following_url": "https://api.github.com/users/leplatrem/following{/other_user}", "gists_url": "https://api.github.com/users/leplatrem/gists{/gist_id}", "starred_url": "https://api.github.com/users/leplatrem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leplatrem/subscriptions", "organizations_url": "https://api.github.com/users/leplatrem/orgs", "repos_url": "https://api.github.com/users/leplatrem/repos", "events_url": "https://api.github.com/users/leplatrem/events{/privacy}", "received_events_url": "https://api.github.com/users/leplatrem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 44088041, "node_id": "MDU6TGFiZWw0NDA4ODA0MQ==", "url": "https://api.github.com/repos/makinacorpus/django-safedelete/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-07-05T20:34:45Z", "updated_at": "2014-12-09T16:56:48Z", "closed_at": "2014-12-09T16:56:48Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "See https://github.com/AndrewIngram/django-extra-views\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/11", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/11/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/11/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/11", "id": 16417611, "node_id": "MDU6SXNzdWUxNjQxNzYxMQ==", "number": 11, "title": "Create issues for each FIXME in code", "user": {"login": "leplatrem", "id": 546692, "node_id": "MDQ6VXNlcjU0NjY5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/546692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leplatrem", "html_url": "https://github.com/leplatrem", "followers_url": "https://api.github.com/users/leplatrem/followers", "following_url": "https://api.github.com/users/leplatrem/following{/other_user}", "gists_url": "https://api.github.com/users/leplatrem/gists{/gist_id}", "starred_url": "https://api.github.com/users/leplatrem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leplatrem/subscriptions", "organizations_url": "https://api.github.com/users/leplatrem/orgs", "repos_url": "https://api.github.com/users/leplatrem/repos", "events_url": "https://api.github.com/users/leplatrem/events{/privacy}", "received_events_url": "https://api.github.com/users/leplatrem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 44088041, "node_id": "MDU6TGFiZWw0NDA4ODA0MQ==", "url": "https://api.github.com/repos/makinacorpus/django-safedelete/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-07-05T20:29:09Z", "updated_at": "2013-08-05T17:39:38Z", "closed_at": "2013-08-05T17:39:38Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/10", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/10/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/10/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/10", "id": 16417329, "node_id": "MDU6SXNzdWUxNjQxNzMyOQ==", "number": 10, "title": "Choose one short description and use it everywhere", "user": {"login": "leplatrem", "id": 546692, "node_id": "MDQ6VXNlcjU0NjY5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/546692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leplatrem", "html_url": "https://github.com/leplatrem", "followers_url": "https://api.github.com/users/leplatrem/followers", "following_url": "https://api.github.com/users/leplatrem/following{/other_user}", "gists_url": "https://api.github.com/users/leplatrem/gists{/gist_id}", "starred_url": "https://api.github.com/users/leplatrem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leplatrem/subscriptions", "organizations_url": "https://api.github.com/users/leplatrem/orgs", "repos_url": "https://api.github.com/users/leplatrem/repos", "events_url": "https://api.github.com/users/leplatrem/events{/privacy}", "received_events_url": "https://api.github.com/users/leplatrem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 44088041, "node_id": "MDU6TGFiZWw0NDA4ODA0MQ==", "url": "https://api.github.com/repos/makinacorpus/django-safedelete/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-07-05T20:19:19Z", "updated_at": "2013-07-10T12:33:28Z", "closed_at": "2013-07-10T12:33:28Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Introduction sentence in readme, short description in setup.py, repository description, ...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/9", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/9/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/9/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/9", "id": 16417293, "node_id": "MDU6SXNzdWUxNjQxNzI5Mw==", "number": 9, "title": "Add requires in setup.py", "user": {"login": "leplatrem", "id": 546692, "node_id": "MDQ6VXNlcjU0NjY5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/546692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leplatrem", "html_url": "https://github.com/leplatrem", "followers_url": "https://api.github.com/users/leplatrem/followers", "following_url": "https://api.github.com/users/leplatrem/following{/other_user}", "gists_url": "https://api.github.com/users/leplatrem/gists{/gist_id}", "starred_url": "https://api.github.com/users/leplatrem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leplatrem/subscriptions", "organizations_url": "https://api.github.com/users/leplatrem/orgs", "repos_url": "https://api.github.com/users/leplatrem/repos", "events_url": "https://api.github.com/users/leplatrem/events{/privacy}", "received_events_url": "https://api.github.com/users/leplatrem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 44088041, "node_id": "MDU6TGFiZWw0NDA4ODA0MQ==", "url": "https://api.github.com/repos/makinacorpus/django-safedelete/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-07-05T20:18:14Z", "updated_at": "2013-07-08T08:43:09Z", "closed_at": "2013-07-08T08:43:09Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Django, with minimum version\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/8", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/8/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/8/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/8", "id": 16417268, "node_id": "MDU6SXNzdWUxNjQxNzI2OA==", "number": 8, "title": "Include Readme as long description in setup.py", "user": {"login": "leplatrem", "id": 546692, "node_id": "MDQ6VXNlcjU0NjY5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/546692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leplatrem", "html_url": "https://github.com/leplatrem", "followers_url": "https://api.github.com/users/leplatrem/followers", "following_url": "https://api.github.com/users/leplatrem/following{/other_user}", "gists_url": "https://api.github.com/users/leplatrem/gists{/gist_id}", "starred_url": "https://api.github.com/users/leplatrem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leplatrem/subscriptions", "organizations_url": "https://api.github.com/users/leplatrem/orgs", "repos_url": "https://api.github.com/users/leplatrem/repos", "events_url": "https://api.github.com/users/leplatrem/events{/privacy}", "received_events_url": "https://api.github.com/users/leplatrem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 44088041, "node_id": "MDU6TGFiZWw0NDA4ODA0MQ==", "url": "https://api.github.com/repos/makinacorpus/django-safedelete/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-07-05T20:17:37Z", "updated_at": "2013-07-08T08:36:12Z", "closed_at": "2013-07-08T08:36:12Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/7", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/7/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/7/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/7", "id": 16417224, "node_id": "MDU6SXNzdWUxNjQxNzIyNA==", "number": 7, "title": "Add __version__ in package", "user": {"login": "leplatrem", "id": 546692, "node_id": "MDQ6VXNlcjU0NjY5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/546692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leplatrem", "html_url": "https://github.com/leplatrem", "followers_url": "https://api.github.com/users/leplatrem/followers", "following_url": "https://api.github.com/users/leplatrem/following{/other_user}", "gists_url": "https://api.github.com/users/leplatrem/gists{/gist_id}", "starred_url": "https://api.github.com/users/leplatrem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leplatrem/subscriptions", "organizations_url": "https://api.github.com/users/leplatrem/orgs", "repos_url": "https://api.github.com/users/leplatrem/repos", "events_url": "https://api.github.com/users/leplatrem/events{/privacy}", "received_events_url": "https://api.github.com/users/leplatrem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 44088041, "node_id": "MDU6TGFiZWw0NDA4ODA0MQ==", "url": "https://api.github.com/repos/makinacorpus/django-safedelete/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-07-05T20:16:23Z", "updated_at": "2013-08-04T18:00:41Z", "closed_at": "2013-08-04T18:00:41Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "See https://github.com/makinacorpus/Geotrek/blob/master/geotrek/__init__.py\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/6", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/6/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/6/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/6", "id": 16417131, "node_id": "MDU6SXNzdWUxNjQxNzEzMQ==", "number": 6, "title": "License file is mispelled", "user": {"login": "leplatrem", "id": 546692, "node_id": "MDQ6VXNlcjU0NjY5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/546692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leplatrem", "html_url": "https://github.com/leplatrem", "followers_url": "https://api.github.com/users/leplatrem/followers", "following_url": "https://api.github.com/users/leplatrem/following{/other_user}", "gists_url": "https://api.github.com/users/leplatrem/gists{/gist_id}", "starred_url": "https://api.github.com/users/leplatrem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leplatrem/subscriptions", "organizations_url": "https://api.github.com/users/leplatrem/orgs", "repos_url": "https://api.github.com/users/leplatrem/repos", "events_url": "https://api.github.com/users/leplatrem/events{/privacy}", "received_events_url": "https://api.github.com/users/leplatrem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 44088041, "node_id": "MDU6TGFiZWw0NDA4ODA0MQ==", "url": "https://api.github.com/repos/makinacorpus/django-safedelete/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-07-05T20:13:38Z", "updated_at": "2013-07-08T08:30:04Z", "closed_at": "2013-07-08T08:30:04Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/5", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/5/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/5/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/5", "id": 16325470, "node_id": "MDU6SXNzdWUxNjMyNTQ3MA==", "number": 5, "title": "Register on pypi & djangopackages", "user": {"login": "leplatrem", "id": 546692, "node_id": "MDQ6VXNlcjU0NjY5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/546692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leplatrem", "html_url": "https://github.com/leplatrem", "followers_url": "https://api.github.com/users/leplatrem/followers", "following_url": "https://api.github.com/users/leplatrem/following{/other_user}", "gists_url": "https://api.github.com/users/leplatrem/gists{/gist_id}", "starred_url": "https://api.github.com/users/leplatrem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leplatrem/subscriptions", "organizations_url": "https://api.github.com/users/leplatrem/orgs", "repos_url": "https://api.github.com/users/leplatrem/repos", "events_url": "https://api.github.com/users/leplatrem/events{/privacy}", "received_events_url": "https://api.github.com/users/leplatrem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-07-03T15:47:36Z", "updated_at": "2013-07-05T09:51:10Z", "closed_at": "2013-07-05T09:51:10Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/4", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/4/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/4/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/4", "id": 16325442, "node_id": "MDU6SXNzdWUxNjMyNTQ0Mg==", "number": 4, "title": "Add Makina logo to README", "user": {"login": "leplatrem", "id": 546692, "node_id": "MDQ6VXNlcjU0NjY5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/546692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leplatrem", "html_url": "https://github.com/leplatrem", "followers_url": "https://api.github.com/users/leplatrem/followers", "following_url": "https://api.github.com/users/leplatrem/following{/other_user}", "gists_url": "https://api.github.com/users/leplatrem/gists{/gist_id}", "starred_url": "https://api.github.com/users/leplatrem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leplatrem/subscriptions", "organizations_url": "https://api.github.com/users/leplatrem/orgs", "repos_url": "https://api.github.com/users/leplatrem/repos", "events_url": "https://api.github.com/users/leplatrem/events{/privacy}", "received_events_url": "https://api.github.com/users/leplatrem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 44088041, "node_id": "MDU6TGFiZWw0NDA4ODA0MQ==", "url": "https://api.github.com/repos/makinacorpus/django-safedelete/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-07-03T15:47:11Z", "updated_at": "2013-07-08T08:23:39Z", "closed_at": "2013-07-08T08:23:39Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/3", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/3/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/3/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/3", "id": 16325407, "node_id": "MDU6SXNzdWUxNjMyNTQwNw==", "number": 3, "title": "Get rid of models module for imports (?)", "user": {"login": "leplatrem", "id": 546692, "node_id": "MDQ6VXNlcjU0NjY5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/546692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leplatrem", "html_url": "https://github.com/leplatrem", "followers_url": "https://api.github.com/users/leplatrem/followers", "following_url": "https://api.github.com/users/leplatrem/following{/other_user}", "gists_url": "https://api.github.com/users/leplatrem/gists{/gist_id}", "starred_url": "https://api.github.com/users/leplatrem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leplatrem/subscriptions", "organizations_url": "https://api.github.com/users/leplatrem/orgs", "repos_url": "https://api.github.com/users/leplatrem/repos", "events_url": "https://api.github.com/users/leplatrem/events{/privacy}", "received_events_url": "https://api.github.com/users/leplatrem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 44088043, "node_id": "MDU6TGFiZWw0NDA4ODA0Mw==", "url": "https://api.github.com/repos/makinacorpus/django-safedelete/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-07-03T15:46:30Z", "updated_at": "2013-07-04T09:26:59Z", "closed_at": "2013-07-04T09:26:59Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/2", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/2/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/2/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/2", "id": 16325377, "node_id": "MDU6SXNzdWUxNjMyNTM3Nw==", "number": 2, "title": "Add setup.py", "user": {"login": "leplatrem", "id": 546692, "node_id": "MDQ6VXNlcjU0NjY5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/546692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leplatrem", "html_url": "https://github.com/leplatrem", "followers_url": "https://api.github.com/users/leplatrem/followers", "following_url": "https://api.github.com/users/leplatrem/following{/other_user}", "gists_url": "https://api.github.com/users/leplatrem/gists{/gist_id}", "starred_url": "https://api.github.com/users/leplatrem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leplatrem/subscriptions", "organizations_url": "https://api.github.com/users/leplatrem/orgs", "repos_url": "https://api.github.com/users/leplatrem/repos", "events_url": "https://api.github.com/users/leplatrem/events{/privacy}", "received_events_url": "https://api.github.com/users/leplatrem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 44088041, "node_id": "MDU6TGFiZWw0NDA4ODA0MQ==", "url": "https://api.github.com/repos/makinacorpus/django-safedelete/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-07-03T15:46:04Z", "updated_at": "2013-08-04T18:00:11Z", "closed_at": "2013-08-04T18:00:11Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": " [ ] Use zest releaser.\n [ ] Add VERSION file and use it in setup.py\n [ ] Add **version** attribute https://github.com/makinacorpus/Geotrek/blob/master/geotrek/__init__.py\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/1", "repository_url": "https://api.github.com/repos/makinacorpus/django-safedelete", "labels_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/1/comments", "events_url": "https://api.github.com/repos/makinacorpus/django-safedelete/issues/1/events", "html_url": "https://github.com/makinacorpus/django-safedelete/issues/1", "id": 16324156, "node_id": "MDU6SXNzdWUxNjMyNDE1Ng==", "number": 1, "title": "Get rid of french ", "user": {"login": "leplatrem", "id": 546692, "node_id": "MDQ6VXNlcjU0NjY5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/546692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leplatrem", "html_url": "https://github.com/leplatrem", "followers_url": "https://api.github.com/users/leplatrem/followers", "following_url": "https://api.github.com/users/leplatrem/following{/other_user}", "gists_url": "https://api.github.com/users/leplatrem/gists{/gist_id}", "starred_url": "https://api.github.com/users/leplatrem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leplatrem/subscriptions", "organizations_url": "https://api.github.com/users/leplatrem/orgs", "repos_url": "https://api.github.com/users/leplatrem/repos", "events_url": "https://api.github.com/users/leplatrem/events{/privacy}", "received_events_url": "https://api.github.com/users/leplatrem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-07-03T15:34:44Z", "updated_at": "2013-07-04T09:24:02Z", "closed_at": "2013-07-04T09:24:02Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Example: TODO\n", "performed_via_github_app": null, "score": 1.0}]}