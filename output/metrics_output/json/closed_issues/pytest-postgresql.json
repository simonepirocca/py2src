{"total_count": 37, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/309", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/309/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/309/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/309/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/309", "id": 668429991, "node_id": "MDU6SXNzdWU2Njg0Mjk5OTE=", "number": 309, "title": "Unable to set database password", "user": {"login": "wolkiewiczk", "id": 45897171, "node_id": "MDQ6VXNlcjQ1ODk3MTcx", "avatar_url": "https://avatars3.githubusercontent.com/u/45897171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wolkiewiczk", "html_url": "https://github.com/wolkiewiczk", "followers_url": "https://api.github.com/users/wolkiewiczk/followers", "following_url": "https://api.github.com/users/wolkiewiczk/following{/other_user}", "gists_url": "https://api.github.com/users/wolkiewiczk/gists{/gist_id}", "starred_url": "https://api.github.com/users/wolkiewiczk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wolkiewiczk/subscriptions", "organizations_url": "https://api.github.com/users/wolkiewiczk/orgs", "repos_url": "https://api.github.com/users/wolkiewiczk/repos", "events_url": "https://api.github.com/users/wolkiewiczk/events{/privacy}", "received_events_url": "https://api.github.com/users/wolkiewiczk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 435182311, "node_id": "MDU6TGFiZWw0MzUxODIzMTE=", "url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-07-30T07:00:13Z", "updated_at": "2020-08-21T11:34:15Z", "closed_at": "2020-08-21T11:34:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\nThanks for the great library. I found the issue while trying to set the password in the fixture. I tried to set the password by 2 ways, the first is by the factory object and the second by pytest.ini and in both cases the error was the same:\r\n\r\n```\r\nTypeError: can only concatenate tuple (not \"str\") to tuple\r\n```\r\n\r\nIt seems like the flaw is located in `pytest_postgresql/executor.py` file in these lines:\r\n```python\r\n        if self.password:\r\n            with tempfile.NamedTemporaryFile() as password_file:\r\n                init_directory += (\r\n                    '--pwfile \"%s\"' % password_file.name\r\n                )\r\n```\r\n\r\nHere you are trying to concatenate string to `init_directory` variable which as we can see here:\r\n\r\n```python\r\n        init_directory = (\r\n            self.executable, 'initdb',\r\n            '-o \"--auth=trust --username=%s\"' % self.user,\r\n            '-D %s' % self.datadir,\r\n        )\r\n```\r\n\r\n...is a tuple.\r\nSo the problem is simply lack of the comma. I can fix this on today's evening (Polish time) if you don't mind it. I really need that to be fixed quickly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/294", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/294/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/294/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/294/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/294", "id": 613121951, "node_id": "MDU6SXNzdWU2MTMxMjE5NTE=", "number": 294, "title": "DatabaseJanitor ignores password", "user": {"login": "strfx", "id": 14072500, "node_id": "MDQ6VXNlcjE0MDcyNTAw", "avatar_url": "https://avatars2.githubusercontent.com/u/14072500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/strfx", "html_url": "https://github.com/strfx", "followers_url": "https://api.github.com/users/strfx/followers", "following_url": "https://api.github.com/users/strfx/following{/other_user}", "gists_url": "https://api.github.com/users/strfx/gists{/gist_id}", "starred_url": "https://api.github.com/users/strfx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/strfx/subscriptions", "organizations_url": "https://api.github.com/users/strfx/orgs", "repos_url": "https://api.github.com/users/strfx/repos", "events_url": "https://api.github.com/users/strfx/events{/privacy}", "received_events_url": "https://api.github.com/users/strfx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-06T07:54:30Z", "updated_at": "2020-05-12T13:23:50Z", "closed_at": "2020-05-12T07:39:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all\r\n\r\nJust stumpled upon something. A PostgreSQL instance runs in a Docker container. The instance requires password. But when using the `postgresql_noproc` factory with a password supplied as factory parameter, it results in a `psycopg2.OperationalError: fe_sendauth: no password supplied`\r\n\r\nThe problems seems to be that the `password` parameter is not actually passed to `DatabaseJanitor` inside the factory: https://github.com/ClearcodeHQ/pytest-postgresql/blob/f7570d7b963295503d159c5081b87b7ae08f2c4d/src/pytest_postgresql/factories.py#L282-L284\r\n\r\nAltough `DatabaseJanitor` passes the password parameter to psycopg2 when used as a context manager:\r\nhttps://github.com/ClearcodeHQ/pytest-postgresql/blob/f7570d7b963295503d159c5081b87b7ae08f2c4d/src/pytest_postgresql/janitor.py#L79-L88\r\n\r\n`password` is set to None by default:\r\nhttps://github.com/ClearcodeHQ/pytest-postgresql/blob/f7570d7b963295503d159c5081b87b7ae08f2c4d/src/pytest_postgresql/janitor.py#L23-L34\r\n\r\nLet me know if that is indeed a bug or if I can provide further details.\r\n\r\nThanks!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/279", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/279/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/279/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/279/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/279", "id": 562009627, "node_id": "MDU6SXNzdWU1NjIwMDk2Mjc=", "number": 279, "title": "DatabaseJanitor.init() fails if username doesn't match an existing db name", "user": {"login": "ashokdelphia", "id": 48444234, "node_id": "MDQ6VXNlcjQ4NDQ0MjM0", "avatar_url": "https://avatars1.githubusercontent.com/u/48444234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashokdelphia", "html_url": "https://github.com/ashokdelphia", "followers_url": "https://api.github.com/users/ashokdelphia/followers", "following_url": "https://api.github.com/users/ashokdelphia/following{/other_user}", "gists_url": "https://api.github.com/users/ashokdelphia/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashokdelphia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashokdelphia/subscriptions", "organizations_url": "https://api.github.com/users/ashokdelphia/orgs", "repos_url": "https://api.github.com/users/ashokdelphia/repos", "events_url": "https://api.github.com/users/ashokdelphia/events{/privacy}", "received_events_url": "https://api.github.com/users/ashokdelphia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-08T11:57:04Z", "updated_at": "2020-02-13T12:55:44Z", "closed_at": "2020-02-13T12:55:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### What action do you want to perform\r\n\r\nI have a service, 'something-backend', which has an existing dev database called `something_backend` with the database user `something-backend`. For tests, I'd like to use `pytest-postgresql` to make a throwaway database called `something_backend_test`, using the same database user.\r\n\r\nSo I want to initialize a new database where the username does not match an existing database, e.g.\r\n\r\n```\r\nfrom pytest_postgresql.factories import init_postgresql_database\r\n\r\nuser = 'something-backend'\r\nhost = 'db'\r\nport = '5432'\r\ndb_name = 'something_backend_test'\r\ninit_postgresql_database(user, host, port, db_name)\r\n```\r\nor similarly calling the non-deprecated version:\r\n```\r\nDatabaseJanitor(user, host, port, db_name, 0.0).init()\r\n```\r\n\r\n### What are the results\r\n\r\n    psycopg2.OperationalError: FATAL:  database \"something-backend\" does not exist\r\n\r\nIf I rename the user to `something_backend`, and have an existing database called that, then the code above will make the `something_backend_test` database.\r\n\r\n### What are the expected results\r\n\r\nThe database is successfully created.\r\n\r\nI believe this is because the [`psycopg2.connect()` call in Janitor](https://github.com/ClearcodeHQ/pytest-postgresql/blob/255681b/src/pytest_postgresql/janitor.py#L79) is only passing the user, host and port, so Postgres is defaulting to a database name that matches the user's name.\r\n\r\nI think it would be safe to pass `dbname='postgres'` here, and if I make that change locally, everything appears to work as expected.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/265", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/265/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/265/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/265/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/265", "id": 536916808, "node_id": "MDU6SXNzdWU1MzY5MTY4MDg=", "number": 265, "title": "Support deleting the database on start", "user": {"login": "mmaslowskicc", "id": 10533721, "node_id": "MDQ6VXNlcjEwNTMzNzIx", "avatar_url": "https://avatars0.githubusercontent.com/u/10533721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmaslowskicc", "html_url": "https://github.com/mmaslowskicc", "followers_url": "https://api.github.com/users/mmaslowskicc/followers", "following_url": "https://api.github.com/users/mmaslowskicc/following{/other_user}", "gists_url": "https://api.github.com/users/mmaslowskicc/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmaslowskicc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmaslowskicc/subscriptions", "organizations_url": "https://api.github.com/users/mmaslowskicc/orgs", "repos_url": "https://api.github.com/users/mmaslowskicc/repos", "events_url": "https://api.github.com/users/mmaslowskicc/events{/privacy}", "received_events_url": "https://api.github.com/users/mmaslowskicc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-12T11:20:49Z", "updated_at": "2019-12-12T15:12:20Z", "closed_at": "2019-12-12T15:12:20Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "### What action do you want to perform\r\n\r\nI use `postgresql_noproc` and my tests crash with a segmentation fault in the code that I'm testing.\r\n\r\nI attempt to rerun them to see if they fail again or to debug them.\r\n\r\n### What are the results\r\n\r\nThe `tests` database from previous run already exists and the fixture fails to create it:\r\n\r\n```\r\n>       with DatabaseJanitor(\r\n                pg_user, pg_host, pg_port, pg_db, proc_fixture.version\r\n        ):\r\n\r\n../../.local/share/virtualenvs/venvname/lib/python3.8/site-packages/pytest_postgresql/factories.py:281: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n../../.local/share/virtualenvs/venvname/lib/python3.8/site-packages/pytest_postgresql/janitor.py:89: in __enter__\r\n    self.init()\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <pytest_postgresql.janitor.DatabaseJanitor object at 0x7ffff25220a0>\r\n\r\n    def init(self) -> None:\r\n        \"\"\"Create database in postgresql.\"\"\"\r\n        with self.cursor() as cur:\r\n>           cur.execute('CREATE DATABASE \"{}\";'.format(self.db_name))\r\nE           psycopg2.errors.DuplicateDatabase: database \"tests\" already exists\r\n\r\n../../.local/share/virtualenvs/venvname/lib/python3.8/site-packages/pytest_postgresql/janitor.py:55: DuplicateDatabase\r\n```\r\n\r\n### What are the expected results\r\n\r\nI somehow configure pytest-postgresql that it's not a mistake and it drops the test database before creating it, just like it would drop it at the end of the test.\r\n\r\nNot dropping the database by default is good, since I could have accidentally configured it to use a more useful database with some data I want to keep.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/260", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/260/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/260/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/260", "id": 528191959, "node_id": "MDU6SXNzdWU1MjgxOTE5NTk=", "number": 260, "title": "Support password secured connections", "user": {"login": "fizyk", "id": 229393, "node_id": "MDQ6VXNlcjIyOTM5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizyk", "html_url": "https://github.com/fizyk", "followers_url": "https://api.github.com/users/fizyk/followers", "following_url": "https://api.github.com/users/fizyk/following{/other_user}", "gists_url": "https://api.github.com/users/fizyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizyk/subscriptions", "organizations_url": "https://api.github.com/users/fizyk/orgs", "repos_url": "https://api.github.com/users/fizyk/repos", "events_url": "https://api.github.com/users/fizyk/events{/privacy}", "received_events_url": "https://api.github.com/users/fizyk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 435182316, "node_id": "MDU6TGFiZWw0MzUxODIzMTY=", "url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-25T16:19:46Z", "updated_at": "2020-03-19T08:33:39Z", "closed_at": "2020-03-19T08:33:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "NoopExecutor and regular one.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/255", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/255/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/255/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/255/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/255", "id": 518316005, "node_id": "MDU6SXNzdWU1MTgzMTYwMDU=", "number": 255, "title": "UnboundLocalError when attempting to connect as user requiring a password", "user": {"login": "mmaslowskicc", "id": 10533721, "node_id": "MDQ6VXNlcjEwNTMzNzIx", "avatar_url": "https://avatars0.githubusercontent.com/u/10533721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmaslowskicc", "html_url": "https://github.com/mmaslowskicc", "followers_url": "https://api.github.com/users/mmaslowskicc/followers", "following_url": "https://api.github.com/users/mmaslowskicc/following{/other_user}", "gists_url": "https://api.github.com/users/mmaslowskicc/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmaslowskicc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmaslowskicc/subscriptions", "organizations_url": "https://api.github.com/users/mmaslowskicc/orgs", "repos_url": "https://api.github.com/users/mmaslowskicc/repos", "events_url": "https://api.github.com/users/mmaslowskicc/events{/privacy}", "received_events_url": "https://api.github.com/users/mmaslowskicc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 435182311, "node_id": "MDU6TGFiZWw0MzUxODIzMTE=", "url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-06T08:29:05Z", "updated_at": "2019-11-26T13:09:55Z", "closed_at": "2019-11-26T13:09:55Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "### What action do you want to perform\r\n\r\nI attempt to connect to a password-protected server via NoopExecutor.\r\n\r\n### What are the results\r\n\r\nThis gives a confusing error (I deleted the venv name from the output):\r\n```\r\nself = <pytest_postgresql.factories.NoopExecutor object at 0x7fbe5d4df760>\r\n    @property\r\n    def version(self):\r\n        \"\"\"Get postgresql's version.\"\"\"\r\n        if self._version:\r\n            return self._version\r\n        try:\r\n>           connection = psycopg2.connect(\r\n                dbname='postgres',\r\n                user=self.user,\r\n                host=self.host,\r\n                port=self.port,\r\n                options=self.options\r\n            )\r\nenv/lib/python3.8/site-packages/pytest_postgresql/factories.py:58:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\ndsn = \"dbname=postgres user=dbuser host=localhost port=5432 options=''\", connection_factory = None, cursor_factory = None\r\nkwargs = {'dbname': 'postgres', 'host': 'localhost', 'options': '', 'port': 5432, ...}, kwasync = {}\r\n    def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\r\n        \"\"\"\r\n        Create a new database connection.\r\n\r\n        The connection parameters can be specified as a string:\r\n\r\n            conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\r\n\r\n        or using a set of keyword arguments:\r\n\r\n            conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\r\n\r\n        Or as a mix of both. The basic connection parameters are:\r\n\r\n        - *dbname*: the database name\r\n        - *database*: the database name (only as keyword argument)\r\n        - *user*: user name used to authenticate\r\n        - *password*: password used to authenticate\r\n        - *host*: database host address (defaults to UNIX socket if not provided)\r\n        - *port*: connection port number (defaults to 5432 if not provided)\r\n\r\n        Using the *connection_factory* parameter a different class or connections\r\n        factory can be specified. It should be a callable object taking a dsn\r\n        argument.\r\n\r\n        Using the *cursor_factory* parameter, a new default cursor factory will be\r\n        used by cursor().\r\n\r\n        Using *async*=True an asynchronous connection will be created. *async_* is\r\n        a valid alias (for Python versions where ``async`` is a keyword).\r\n\r\n        Any other keyword parameter will be passed to the underlying client\r\n        library: the list of supported parameters depends on the library version.\r\n\r\n        \"\"\"\r\n        kwasync = {}\r\n        if 'async' in kwargs:\r\n            kwasync['async'] = kwargs.pop('async')\r\n        if 'async_' in kwargs:\r\n            kwasync['async_'] = kwargs.pop('async_')\r\n\r\n        if dsn is None and not kwargs:\r\n            raise TypeError('missing dsn and no parameters')\r\n\r\n        dsn = _ext.make_dsn(dsn, **kwargs)\r\n>       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\r\nE       psycopg2.OperationalError: fe_sendauth: no password supplied\r\nenv/lib/python3.8/site-packages/psycopg2/__init__.py:126: OperationalError\r\nDuring handling of the above exception, another exception occurred:\r\nrequest = <SubRequest 'postgresql_external' for <Function test_use_the_db>>\r\n    @pytest.fixture\r\n    def postgresql_factory(request):\r\n        \"\"\"\r\n        Fixture factory for PostgreSQL.\r\n\r\n        :param FixtureRequest request: fixture request object\r\n        :rtype: psycopg2.connection\r\n        :returns: postgresql client\r\n        \"\"\"\r\n        config = get_config(request)\r\n        if not psycopg2:\r\n            raise ImportError(\r\n                'No module named psycopg2. Please install either '\r\n                'psycopg2 or psycopg2-binary package for CPython '\r\n                'or psycopg2cffi for Pypy.'\r\n            )\r\n        proc_fixture = request.getfixturevalue(process_fixture_name)\r\n\r\n        # _, config = try_import('psycopg2', request)\r\n        pg_host = proc_fixture.host\r\n        pg_port = proc_fixture.port\r\n        pg_user = proc_fixture.user\r\n        pg_options = proc_fixture.options\r\n        pg_db = db_name or config['dbname']\r\n\r\n        with DatabaseJanitor(\r\n>               pg_user, pg_host, pg_port, pg_db, proc_fixture.version\r\n        ):\r\nenv/lib/python3.8/site-packages/pytest_postgresql/factories.py:282:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\nself = <pytest_postgresql.factories.NoopExecutor object at 0x7fbe5d4df760>\r\n    @property\r\n    def version(self):\r\n        \"\"\"Get postgresql's version.\"\"\"\r\n        if self._version:\r\n            return self._version\r\n        try:\r\n            connection = psycopg2.connect(\r\n                dbname='postgres',\r\n                user=self.user,\r\n                host=self.host,\r\n                port=self.port,\r\n                options=self.options\r\n            )\r\n            version = str(connection.server_version)\r\n            self._version = parse_version(\r\n                '.'.join([\r\n                    version[i: i+2] for i in range(0, len(version), 2)\r\n                    if int(version[i: i+2])\r\n                ])\r\n            )\r\n            return self._version\r\n        finally:\r\n>           connection.close()\r\nE           UnboundLocalError: local variable 'connection' referenced before assignment\r\nenv/lib/python3.8/site-packages/pytest_postgresql/factories.py:74: UnboundLocalError\r\n```\r\n\r\nSince https://github.com/ClearcodeHQ/pytest-postgresql/blob/master/src/pytest_postgresql/factories.py#L58 is in try/finally and raises an exception but no connection is assigned to be closed.\r\n\r\n### What are the expected results\r\n\r\n`connection.close()` runs only if we have a connection.\r\n\r\n`psycopg2.OperationalError: fe_sendauth: no password supplied` is the only exception raised.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/252", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/252/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/252/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/252", "id": 514953479, "node_id": "MDU6SXNzdWU1MTQ5NTM0Nzk=", "number": 252, "title": "Regression with drop_postgresql_database", "user": {"login": "di", "id": 294415, "node_id": "MDQ6VXNlcjI5NDQxNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/294415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/di", "html_url": "https://github.com/di", "followers_url": "https://api.github.com/users/di/followers", "following_url": "https://api.github.com/users/di/following{/other_user}", "gists_url": "https://api.github.com/users/di/gists{/gist_id}", "starred_url": "https://api.github.com/users/di/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/di/subscriptions", "organizations_url": "https://api.github.com/users/di/orgs", "repos_url": "https://api.github.com/users/di/repos", "events_url": "https://api.github.com/users/di/events{/privacy}", "received_events_url": "https://api.github.com/users/di/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-30T20:14:16Z", "updated_at": "2019-10-31T09:15:06Z", "closed_at": "2019-10-31T09:12:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since `pytest-postgresql==2.1.0` we've gotten test failures indicating that our test database is not being properly dropped.\r\n\r\nIn #227, it looks like there is a copy/paste error, and `drop_postgresql_database` is calling `DatabaseJanitor.init()` instead of `DatabaseJanitor.drop()`:\r\n\r\nhttps://github.com/ClearcodeHQ/pytest-postgresql/blob/94c5c9b7ba1a8dbd1f80827a992eb43492314639/src/pytest_postgresql/factories.py#L109-L124", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/238", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/238/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/238/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/238/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/238", "id": 497201519, "node_id": "MDU6SXNzdWU0OTcyMDE1MTk=", "number": 238, "title": "Does not work in some earlier versions of python 3.5", "user": {"login": "rschwiebert", "id": 8643352, "node_id": "MDQ6VXNlcjg2NDMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8643352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rschwiebert", "html_url": "https://github.com/rschwiebert", "followers_url": "https://api.github.com/users/rschwiebert/followers", "following_url": "https://api.github.com/users/rschwiebert/following{/other_user}", "gists_url": "https://api.github.com/users/rschwiebert/gists{/gist_id}", "starred_url": "https://api.github.com/users/rschwiebert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rschwiebert/subscriptions", "organizations_url": "https://api.github.com/users/rschwiebert/orgs", "repos_url": "https://api.github.com/users/rschwiebert/repos", "events_url": "https://api.github.com/users/rschwiebert/events{/privacy}", "received_events_url": "https://api.github.com/users/rschwiebert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-09-23T16:26:38Z", "updated_at": "2019-09-27T19:41:05Z", "closed_at": "2019-09-27T19:41:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "### What action do you want to perform\r\nI want to use the postgresql fixture in a test. I have python 3.5.2 and pytest-postgresql 2.1.0.\r\n\r\n### What are the results\r\n```Traceback (most recent call last):\r\n  File \"/opt/venvs/test/bin/pytest\", line 10, in <module>\r\n    sys.exit(main())\r\n  File \"/opt/venvs/test/lib/python3.5/site-packages/_pytest/config/__init__.py\", line 58, in main\r\n    config = _prepareconfig(args, plugins)\r\n  File \"/opt/venvs/test/lib/python3.5/site-packages/_pytest/config/__init__.py\", line 208, in _prepareconfig\r\n    pluginmanager=pluginmanager, args=args\r\n  File \"/opt/venvs/test/lib/python3.5/site-packages/pluggy/hooks.py\", line 286, in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n  File \"/opt/venvs/test/lib/python3.5/site-packages/pluggy/manager.py\", line 92, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \"/opt/venvs/test/lib/python3.5/site-packages/pluggy/manager.py\", line 86, in <lambda>\r\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n  File \"/opt/venvs/test/lib/python3.5/site-packages/pluggy/callers.py\", line 203, in _multicall\r\n    gen.send(outcome)\r\n  File \"/opt/venvs/test/lib/python3.5/site-packages/_pytest/helpconfig.py\", line 89, in pytest_cmdline_parse\r\n    config = outcome.get_result()\r\n  File \"/opt/venvs/test/lib/python3.5/site-packages/pluggy/callers.py\", line 80, in get_result\r\n    raise ex[1].with_traceback(ex[2])\r\n  File \"/opt/venvs/test/lib/python3.5/site-packages/pluggy/callers.py\", line 187, in _multicall\r\n    res = hook_impl.function(*args)\r\n  File \"/opt/venvs/test/lib/python3.5/site-packages/_pytest/config/__init__.py\", line 719, in pytest_cmdline_parse\r\n    self.parse(args)\r\n  File \"/opt/venvs/test/lib/python3.5/site-packages/_pytest/config/__init__.py\", line 927, in parse\r\n    self._preparse(args, addopts=addopts)\r\n  File \"/opt/venvs/test/lib/python3.5/site-packages/_pytest/config/__init__.py\", line 873, in _preparse\r\n    self.pluginmanager.load_setuptools_entrypoints(\"pytest11\")\r\n  File \"/opt/venvs/test/lib/python3.5/site-packages/pluggy/manager.py\", line 297, in load_setuptools_entrypoints\r\n    plugin = ep.load()\r\n  File \"/opt/venvs/test/lib/python3.5/site-packages/importlib_metadata/__init__.py\", line 92, in load\r\n    module = import_module(match.group('module'))\r\n  File \"/opt/venvs/test/lib/python3.5/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 986, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 958, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\r\n  File \"/opt/venvs/test/lib/python3.5/site-packages/_pytest/assertion/rewrite.py\", line 140, in exec_module\r\n    exec(co, module.__dict__)\r\n  File \"/opt/venvs/test/lib/python3.5/site-packages/pytest_postgresql/plugin.py\", line 21, in <module>\r\n    from pytest_postgresql import factories\r\n  File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 958, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\r\n  File \"/opt/venvs/test/lib/python3.5/site-packages/_pytest/assertion/rewrite.py\", line 140, in exec_module\r\n    exec(co, module.__dict__)\r\n  File \"/opt/venvs/test/lib/python3.5/site-packages/pytest_postgresql/factories.py\", line 28, in <module>\r\n    from pytest_postgresql.janitor import DatabaseJanitor, psycopg2\r\n  File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 958, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\r\n  File \"/opt/venvs/test/lib/python3.5/site-packages/_pytest/assertion/rewrite.py\", line 140, in exec_module\r\n    exec(co, module.__dict__)\r\n  File \"/opt/venvs/test/lib/python3.5/site-packages/pytest_postgresql/janitor.py\", line 23, in <module>\r\n    class DatabaseJanitor:\r\n  File \"/opt/venvs/test/lib/python3.5/site-packages/pytest_postgresql/janitor.py\", line 94, in DatabaseJanitor\r\n    exc_type: Optional[Type[BaseException]],\r\n  File \"/usr/lib/python3.5/typing.py\", line 649, in __getitem__\r\n    return Union[arg, type(None)]\r\n  File \"/usr/lib/python3.5/typing.py\", line 552, in __getitem__\r\n    dict(self.__dict__), parameters, _root=True)\r\n  File \"/usr/lib/python3.5/typing.py\", line 512, in __new__\r\n    for t2 in all_params - {t1} if not isinstance(t2, TypeVar)):\r\n  File \"/usr/lib/python3.5/typing.py\", line 512, in <genexpr>\r\n    for t2 in all_params - {t1} if not isinstance(t2, TypeVar)):\r\n  File \"/usr/lib/python3.5/typing.py\", line 1077, in __subclasscheck__\r\n    if super().__subclasscheck__(cls):\r\n  File \"/opt/venvs/test/lib/python3.5/abc.py\", line 225, in __subclasscheck__\r\n    for scls in cls.__subclasses__():\r\nTypeError: descriptor '__subclasses__' of 'type' object needs an argument\r\n```\r\n\r\n### What are the expected results\r\nIncluding `postgresql` fixture should not cause this exception(?)\r\n\r\n\r\nUpon a little further digging, I found that the version of `mirakuru` installed requires python 3.6 or later.   Downgrading mirikuru to 1.1.0 and pytest-postgresql to 1.4.1 got things to work, but at the cost of installing a version of mirakuru that is incompatible according to the specifications.\r\n\r\nIn this commit: https://github.com/ClearcodeHQ/pytest-postgresql/commit/76e6605e19450fe37faabf8679332d66a597529b I see someone pinning to <2.1.0 for python3.5, possibly to fix this. However, 2.0.1 appears to be the only version that suits the hard-coded requirements, but it doesn't fix the problem.  Downgrading `mirakuru` to 1.1.0 eliminated the traceback I reported above, but still threw the same exception at a different point in code.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/232", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/232/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/232/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/232", "id": 486519550, "node_id": "MDU6SXNzdWU0ODY1MTk1NTA=", "number": 232, "title": "pytest-postgresql 2.0.0 broken on macOS (AttributeError: module 'select' has no attribute 'poll')", "user": {"login": "lpsinger", "id": 728407, "node_id": "MDQ6VXNlcjcyODQwNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/728407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lpsinger", "html_url": "https://github.com/lpsinger", "followers_url": "https://api.github.com/users/lpsinger/followers", "following_url": "https://api.github.com/users/lpsinger/following{/other_user}", "gists_url": "https://api.github.com/users/lpsinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/lpsinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lpsinger/subscriptions", "organizations_url": "https://api.github.com/users/lpsinger/orgs", "repos_url": "https://api.github.com/users/lpsinger/repos", "events_url": "https://api.github.com/users/lpsinger/events{/privacy}", "received_events_url": "https://api.github.com/users/lpsinger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 435182317, "node_id": "MDU6TGFiZWw0MzUxODIzMTc=", "url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}, {"id": 481309881, "node_id": "MDU6TGFiZWw0ODEzMDk4ODE=", "url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/labels/input%20needed", "name": "input needed", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-08-28T17:44:18Z", "updated_at": "2020-01-04T00:57:35Z", "closed_at": "2019-09-06T11:36:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "### What action do you want to perform\r\n\r\nI have a minimal test file, `test_postgres.py`:\r\n\r\n```python\r\ndef test_postgres(postgresql_proc):\r\n    pass\r\n```\r\n\r\nand I run `pytest test_postgres.py` on macOS 10.14.6.\r\n\r\n### What are the results\r\n\r\nWith pytest-postgresql I get the following error message.\r\n\r\nThis is broken in pytest-postgresql 2.0.0. If I downgrade to pytest-postgresql <= 1.4.1 and mirakuru <= 1.1.0, it's not broken.\r\n\r\n```\r\n(test) bash-3.2$ pytest test_postgres.py \r\nTraceback (most recent call last):\r\n  File \"/Users/lpsinger/.local/share/virtualenvs/test-6C_DLGjE/bin/pytest\", line 10, in <module>\r\n    sys.exit(main())\r\n  File \"/Users/lpsinger/.local/share/virtualenvs/test-6C_DLGjE/lib/python3.7/site-packages/_pytest/config/__init__.py\", line 58, in main\r\n    config = _prepareconfig(args, plugins)\r\n  File \"/Users/lpsinger/.local/share/virtualenvs/test-6C_DLGjE/lib/python3.7/site-packages/_pytest/config/__init__.py\", line 208, in _prepareconfig\r\n    pluginmanager=pluginmanager, args=args\r\n  File \"/Users/lpsinger/.local/share/virtualenvs/test-6C_DLGjE/lib/python3.7/site-packages/pluggy/hooks.py\", line 289, in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n  File \"/Users/lpsinger/.local/share/virtualenvs/test-6C_DLGjE/lib/python3.7/site-packages/pluggy/manager.py\", line 87, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \"/Users/lpsinger/.local/share/virtualenvs/test-6C_DLGjE/lib/python3.7/site-packages/pluggy/manager.py\", line 81, in <lambda>\r\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n  File \"/Users/lpsinger/.local/share/virtualenvs/test-6C_DLGjE/lib/python3.7/site-packages/pluggy/callers.py\", line 203, in _multicall\r\n    gen.send(outcome)\r\n  File \"/Users/lpsinger/.local/share/virtualenvs/test-6C_DLGjE/lib/python3.7/site-packages/_pytest/helpconfig.py\", line 89, in pytest_cmdline_parse\r\n    config = outcome.get_result()\r\n  File \"/Users/lpsinger/.local/share/virtualenvs/test-6C_DLGjE/lib/python3.7/site-packages/pluggy/callers.py\", line 80, in get_result\r\n    raise ex[1].with_traceback(ex[2])\r\n  File \"/Users/lpsinger/.local/share/virtualenvs/test-6C_DLGjE/lib/python3.7/site-packages/pluggy/callers.py\", line 187, in _multicall\r\n    res = hook_impl.function(*args)\r\n  File \"/Users/lpsinger/.local/share/virtualenvs/test-6C_DLGjE/lib/python3.7/site-packages/_pytest/config/__init__.py\", line 716, in pytest_cmdline_parse\r\n    self.parse(args)\r\n  File \"/Users/lpsinger/.local/share/virtualenvs/test-6C_DLGjE/lib/python3.7/site-packages/_pytest/config/__init__.py\", line 924, in parse\r\n    self._preparse(args, addopts=addopts)\r\n  File \"/Users/lpsinger/.local/share/virtualenvs/test-6C_DLGjE/lib/python3.7/site-packages/_pytest/config/__init__.py\", line 870, in _preparse\r\n    self.pluginmanager.load_setuptools_entrypoints(\"pytest11\")\r\n  File \"/Users/lpsinger/.local/share/virtualenvs/test-6C_DLGjE/lib/python3.7/site-packages/pluggy/manager.py\", line 292, in load_setuptools_entrypoints\r\n    plugin = ep.load()\r\n  File \"/Users/lpsinger/.local/share/virtualenvs/test-6C_DLGjE/lib/python3.7/site-packages/importlib_metadata/__init__.py\", line 90, in load\r\n    module = import_module(match.group('module'))\r\n  File \"/Users/lpsinger/.local/share/virtualenvs/test-6C_DLGjE/lib/python3.7/importlib/__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n  File \"/Users/lpsinger/.local/share/virtualenvs/test-6C_DLGjE/lib/python3.7/site-packages/_pytest/assertion/rewrite.py\", line 140, in exec_module\r\n    exec(co, module.__dict__)\r\n  File \"/Users/lpsinger/.local/share/virtualenvs/test-6C_DLGjE/lib/python3.7/site-packages/pytest_postgresql/plugin.py\", line 21, in <module>\r\n    from pytest_postgresql import factories\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n  File \"/Users/lpsinger/.local/share/virtualenvs/test-6C_DLGjE/lib/python3.7/site-packages/_pytest/assertion/rewrite.py\", line 140, in exec_module\r\n    exec(co, module.__dict__)\r\n  File \"/Users/lpsinger/.local/share/virtualenvs/test-6C_DLGjE/lib/python3.7/site-packages/pytest_postgresql/factories.py\", line 33, in <module>\r\n    from pytest_postgresql.executor import PostgreSQLExecutor\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n  File \"/Users/lpsinger/.local/share/virtualenvs/test-6C_DLGjE/lib/python3.7/site-packages/_pytest/assertion/rewrite.py\", line 140, in exec_module\r\n    exec(co, module.__dict__)\r\n  File \"/Users/lpsinger/.local/share/virtualenvs/test-6C_DLGjE/lib/python3.7/site-packages/pytest_postgresql/executor.py\", line 28, in <module>\r\n    from mirakuru import TCPExecutor\r\n  File \"/Users/lpsinger/.local/share/virtualenvs/test-6C_DLGjE/lib/python3.7/site-packages/mirakuru/__init__.py\", line 24, in <module>\r\n    from mirakuru.output import OutputExecutor\r\n  File \"/Users/lpsinger/.local/share/virtualenvs/test-6C_DLGjE/lib/python3.7/site-packages/mirakuru/output.py\", line 30, in <module>\r\n    class OutputExecutor(SimpleExecutor):\r\n  File \"/Users/lpsinger/.local/share/virtualenvs/test-6C_DLGjE/lib/python3.7/site-packages/mirakuru/output.py\", line 107, in OutputExecutor\r\n    def _wait_for_output(self, *polls: Tuple[select.poll, IO[Any]]) -> bool:\r\nAttributeError: module 'select' has no attribute 'poll'\r\n```\r\n\r\n### What are the expected results\r\n\r\n```\r\n(test) bash-3.2$ pytest test_postgres.py \r\n============================= test session starts ==============================\r\nplatform darwin -- Python 3.7.4, pytest-5.1.1, py-1.8.0, pluggy-0.12.0\r\nrootdir: /private/tmp/test\r\nplugins: postgresql-1.4.1\r\ncollected 1 item                                                               \r\n\r\ntest_postgres.py .                                                       [100%]\r\n\r\n============================== 1 passed in 1.20s ===============================\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/228", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/228/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/228/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/228", "id": 479261290, "node_id": "MDU6SXNzdWU0NzkyNjEyOTA=", "number": 228, "title": "Add mocked proc fixture to be used with docker or already existing/running servers", "user": {"login": "fizyk", "id": 229393, "node_id": "MDQ6VXNlcjIyOTM5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizyk", "html_url": "https://github.com/fizyk", "followers_url": "https://api.github.com/users/fizyk/followers", "following_url": "https://api.github.com/users/fizyk/following{/other_user}", "gists_url": "https://api.github.com/users/fizyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizyk/subscriptions", "organizations_url": "https://api.github.com/users/fizyk/orgs", "repos_url": "https://api.github.com/users/fizyk/repos", "events_url": "https://api.github.com/users/fizyk/events{/privacy}", "received_events_url": "https://api.github.com/users/fizyk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/milestones/3", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/milestone/3", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/milestones/3/labels", "id": 4647977, "node_id": "MDk6TWlsZXN0b25lNDY0Nzk3Nw==", "number": 3, "title": "v2.2.0", "description": "", "creator": {"login": "fizyk", "id": 229393, "node_id": "MDQ6VXNlcjIyOTM5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizyk", "html_url": "https://github.com/fizyk", "followers_url": "https://api.github.com/users/fizyk/followers", "following_url": "https://api.github.com/users/fizyk/following{/other_user}", "gists_url": "https://api.github.com/users/fizyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizyk/subscriptions", "organizations_url": "https://api.github.com/users/fizyk/orgs", "repos_url": "https://api.github.com/users/fizyk/repos", "events_url": "https://api.github.com/users/fizyk/events{/privacy}", "received_events_url": "https://api.github.com/users/fizyk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "open", "created_at": "2019-09-10T13:17:40Z", "updated_at": "2019-10-11T15:38:36Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2019-08-10T12:16:42Z", "updated_at": "2019-10-11T15:30:05Z", "closed_at": "2019-10-11T15:30:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Two ideas:\r\n* mocked fixture that will just connect to existing postgresql server\r\n* fixture that can start postgresql docker", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/226", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/226/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/226/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/226", "id": 478853172, "node_id": "MDU6SXNzdWU0Nzg4NTMxNzI=", "number": 226, "title": "Refactor init and drop database functions", "user": {"login": "fizyk", "id": 229393, "node_id": "MDQ6VXNlcjIyOTM5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizyk", "html_url": "https://github.com/fizyk", "followers_url": "https://api.github.com/users/fizyk/followers", "following_url": "https://api.github.com/users/fizyk/following{/other_user}", "gists_url": "https://api.github.com/users/fizyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizyk/subscriptions", "organizations_url": "https://api.github.com/users/fizyk/orgs", "repos_url": "https://api.github.com/users/fizyk/repos", "events_url": "https://api.github.com/users/fizyk/events{/privacy}", "received_events_url": "https://api.github.com/users/fizyk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/milestones/2", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/milestone/2", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/milestones/2/labels", "id": 4565499, "node_id": "MDk6TWlsZXN0b25lNDU2NTQ5OQ==", "number": 2, "title": "v2.1.0", "description": "docker connection", "creator": {"login": "fizyk", "id": 229393, "node_id": "MDQ6VXNlcjIyOTM5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizyk", "html_url": "https://github.com/fizyk", "followers_url": "https://api.github.com/users/fizyk/followers", "following_url": "https://api.github.com/users/fizyk/following{/other_user}", "gists_url": "https://api.github.com/users/fizyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizyk/subscriptions", "organizations_url": "https://api.github.com/users/fizyk/orgs", "repos_url": "https://api.github.com/users/fizyk/repos", "events_url": "https://api.github.com/users/fizyk/events{/privacy}", "received_events_url": "https://api.github.com/users/fizyk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "closed", "created_at": "2019-08-12T09:49:13Z", "updated_at": "2019-09-10T13:18:04Z", "due_on": null, "closed_at": "2019-09-10T13:18:04Z"}, "comments": 2, "created_at": "2019-08-09T08:02:33Z", "updated_at": "2019-09-10T13:19:18Z", "closed_at": "2019-08-09T20:30:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Create a class managing database state with init and drop functions\r\nLeave old functions with proper deprecation warning", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/225", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/225/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/225/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/225", "id": 478482620, "node_id": "MDU6SXNzdWU0Nzg0ODI2MjA=", "number": 225, "title": "TypeError: '>=' not supported between instances of 'float' and 'Version'", "user": {"login": "revmischa", "id": 245131, "node_id": "MDQ6VXNlcjI0NTEzMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/245131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/revmischa", "html_url": "https://github.com/revmischa", "followers_url": "https://api.github.com/users/revmischa/followers", "following_url": "https://api.github.com/users/revmischa/following{/other_user}", "gists_url": "https://api.github.com/users/revmischa/gists{/gist_id}", "starred_url": "https://api.github.com/users/revmischa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/revmischa/subscriptions", "organizations_url": "https://api.github.com/users/revmischa/orgs", "repos_url": "https://api.github.com/users/revmischa/repos", "events_url": "https://api.github.com/users/revmischa/events{/privacy}", "received_events_url": "https://api.github.com/users/revmischa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 435182319, "node_id": "MDU6TGFiZWw0MzUxODIzMTk=", "url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "fizyk", "id": 229393, "node_id": "MDQ6VXNlcjIyOTM5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizyk", "html_url": "https://github.com/fizyk", "followers_url": "https://api.github.com/users/fizyk/followers", "following_url": "https://api.github.com/users/fizyk/following{/other_user}", "gists_url": "https://api.github.com/users/fizyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizyk/subscriptions", "organizations_url": "https://api.github.com/users/fizyk/orgs", "repos_url": "https://api.github.com/users/fizyk/repos", "events_url": "https://api.github.com/users/fizyk/events{/privacy}", "received_events_url": "https://api.github.com/users/fizyk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fizyk", "id": 229393, "node_id": "MDQ6VXNlcjIyOTM5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizyk", "html_url": "https://github.com/fizyk", "followers_url": "https://api.github.com/users/fizyk/followers", "following_url": "https://api.github.com/users/fizyk/following{/other_user}", "gists_url": "https://api.github.com/users/fizyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizyk/subscriptions", "organizations_url": "https://api.github.com/users/fizyk/orgs", "repos_url": "https://api.github.com/users/fizyk/repos", "events_url": "https://api.github.com/users/fizyk/events{/privacy}", "received_events_url": "https://api.github.com/users/fizyk/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2019-08-08T13:47:22Z", "updated_at": "2019-08-09T08:03:06Z", "closed_at": "2019-08-09T07:31:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Tried upgrading to 2.0.0 and same problem\r\n\r\n```\r\n    @request.addfinalizer\r\n    def drop_database():\r\n>       drop_postgresql_database(pg_user, pg_host, pg_port, pg_db, 11.2)\r\n\r\nqc/test/conftest.py:46: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nuser = None, host = None, port = None, db_name = 'qc_test', version = 11.2\r\n\r\n    def drop_postgresql_database(user, host, port, db_name, version):\r\n        \"\"\"\r\n        Drop databse in postgresql.\r\n    \r\n        :param str user: postgresql username\r\n        :param str host: postgresql host\r\n        :param str port: postgresql port\r\n        :param str db_name: database name\r\n        :param packaging.version.Version version: postgresql version number\r\n        \"\"\"\r\n        conn = psycopg2.connect(user=user, host=host, port=port)\r\n        conn.set_isolation_level(psycopg2.extensions.ISOLATION_LEVEL_AUTOCOMMIT)\r\n        cur = conn.cursor()\r\n        # We cannot drop the database while there are connections to it, so we\r\n        # terminate all connections first while not allowing new connections.\r\n>       if version >= parse_version('9.2'):\r\nE       TypeError: '>=' not supported between instances of 'float' and 'Version'\r\n\r\n../../../../.virtualenvs/qc-backend-qjdNaO4n/lib/python3.7/site-packages/pytest_postgresql/factories.p:\r\n84: TypeError                                                                                         \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/221", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/221/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/221/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/221", "id": 473933024, "node_id": "MDU6SXNzdWU0NzM5MzMwMjQ=", "number": 221, "title": "Question: Is a postgres installation needed for pytest-postgresql?", "user": {"login": "chr1st1ank", "id": 1138025, "node_id": "MDQ6VXNlcjExMzgwMjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1138025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chr1st1ank", "html_url": "https://github.com/chr1st1ank", "followers_url": "https://api.github.com/users/chr1st1ank/followers", "following_url": "https://api.github.com/users/chr1st1ank/following{/other_user}", "gists_url": "https://api.github.com/users/chr1st1ank/gists{/gist_id}", "starred_url": "https://api.github.com/users/chr1st1ank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chr1st1ank/subscriptions", "organizations_url": "https://api.github.com/users/chr1st1ank/orgs", "repos_url": "https://api.github.com/users/chr1st1ank/repos", "events_url": "https://api.github.com/users/chr1st1ank/events{/privacy}", "received_events_url": "https://api.github.com/users/chr1st1ank/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-29T09:00:28Z", "updated_at": "2019-07-29T11:30:06Z", "closed_at": "2019-07-29T11:30:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "It doesn't get that clear from the setup instructions:\r\nDo I need to install posgres (server) separately in order to use pytest-postgresql?\r\n\r\nWhen I found this pytest extension I first assumed that it only mocks a connection, but it seems it creates a real test database on a real local postgres server.\r\n\r\nCould you please clarify this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/217", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/217/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/217/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/217", "id": 469845267, "node_id": "MDU6SXNzdWU0Njk4NDUyNjc=", "number": 217, "title": "Add type hints and mypy", "user": {"login": "fizyk", "id": 229393, "node_id": "MDQ6VXNlcjIyOTM5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizyk", "html_url": "https://github.com/fizyk", "followers_url": "https://api.github.com/users/fizyk/followers", "following_url": "https://api.github.com/users/fizyk/following{/other_user}", "gists_url": "https://api.github.com/users/fizyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizyk/subscriptions", "organizations_url": "https://api.github.com/users/fizyk/orgs", "repos_url": "https://api.github.com/users/fizyk/repos", "events_url": "https://api.github.com/users/fizyk/events{/privacy}", "received_events_url": "https://api.github.com/users/fizyk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-18T15:42:21Z", "updated_at": "2020-07-30T08:15:28Z", "closed_at": "2020-07-30T08:15:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Add type hints and mypy step to tests", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/210", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/210/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/210/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/210", "id": 459459448, "node_id": "MDU6SXNzdWU0NTk0NTk0NDg=", "number": 210, "title": "do not build universal wheels", "user": {"login": "fizyk", "id": 229393, "node_id": "MDQ6VXNlcjIyOTM5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizyk", "html_url": "https://github.com/fizyk", "followers_url": "https://api.github.com/users/fizyk/followers", "following_url": "https://api.github.com/users/fizyk/following{/other_user}", "gists_url": "https://api.github.com/users/fizyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizyk/subscriptions", "organizations_url": "https://api.github.com/users/fizyk/orgs", "repos_url": "https://api.github.com/users/fizyk/repos", "events_url": "https://api.github.com/users/fizyk/events{/privacy}", "received_events_url": "https://api.github.com/users/fizyk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/milestones/1", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/milestone/1", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/milestones/1/labels", "id": 4432255, "node_id": "MDk6TWlsZXN0b25lNDQzMjI1NQ==", "number": 1, "title": "v2.0.0", "description": "py3 only", "creator": {"login": "fizyk", "id": 229393, "node_id": "MDQ6VXNlcjIyOTM5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizyk", "html_url": "https://github.com/fizyk", "followers_url": "https://api.github.com/users/fizyk/followers", "following_url": "https://api.github.com/users/fizyk/following{/other_user}", "gists_url": "https://api.github.com/users/fizyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizyk/subscriptions", "organizations_url": "https://api.github.com/users/fizyk/orgs", "repos_url": "https://api.github.com/users/fizyk/repos", "events_url": "https://api.github.com/users/fizyk/events{/privacy}", "received_events_url": "https://api.github.com/users/fizyk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2019-06-22T10:06:43Z", "updated_at": "2019-08-12T09:48:48Z", "due_on": null, "closed_at": "2019-08-12T09:48:48Z"}, "comments": 0, "created_at": "2019-06-22T10:07:31Z", "updated_at": "2019-07-18T14:54:05Z", "closed_at": "2019-07-18T14:54:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/201", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/201/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/201/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/201", "id": 443895258, "node_id": "MDU6SXNzdWU0NDM4OTUyNTg=", "number": 201, "title": "Drop python 2 support", "user": {"login": "fizyk", "id": 229393, "node_id": "MDQ6VXNlcjIyOTM5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizyk", "html_url": "https://github.com/fizyk", "followers_url": "https://api.github.com/users/fizyk/followers", "following_url": "https://api.github.com/users/fizyk/following{/other_user}", "gists_url": "https://api.github.com/users/fizyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizyk/subscriptions", "organizations_url": "https://api.github.com/users/fizyk/orgs", "repos_url": "https://api.github.com/users/fizyk/repos", "events_url": "https://api.github.com/users/fizyk/events{/privacy}", "received_events_url": "https://api.github.com/users/fizyk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-14T12:47:12Z", "updated_at": "2019-05-22T15:02:00Z", "closed_at": "2019-05-22T15:02:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Since Python 2 reaches EOL by the end of the year, it should be safe to drop support for it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/195", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/195/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/195/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/195", "id": 436641137, "node_id": "MDU6SXNzdWU0MzY2NDExMzc=", "number": 195, "title": "Database creation fails when name contains hyphen", "user": {"login": "jamescooke", "id": 781059, "node_id": "MDQ6VXNlcjc4MTA1OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/781059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamescooke", "html_url": "https://github.com/jamescooke", "followers_url": "https://api.github.com/users/jamescooke/followers", "following_url": "https://api.github.com/users/jamescooke/following{/other_user}", "gists_url": "https://api.github.com/users/jamescooke/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamescooke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamescooke/subscriptions", "organizations_url": "https://api.github.com/users/jamescooke/orgs", "repos_url": "https://api.github.com/users/jamescooke/repos", "events_url": "https://api.github.com/users/jamescooke/events{/privacy}", "received_events_url": "https://api.github.com/users/jamescooke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 435182311, "node_id": "MDU6TGFiZWw0MzUxODIzMTE=", "url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 435182317, "node_id": "MDU6TGFiZWw0MzUxODIzMTc=", "url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-24T11:23:50Z", "updated_at": "2019-05-02T22:11:44Z", "closed_at": "2019-05-02T22:11:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "### What action do you want to perform\r\n\r\nCreate a database called \"qp-test\"\r\n\r\n\r\n### What are the results\r\n\r\nFailure with:\r\n\r\n```\r\n> cur.execute('CREATE DATABASE {0};'.format(db_name))\r\nE psycopg2.ProgrammingError: syntax error at or near \"-\"\r\nE LINE 1: CREATE DATABASE qp-test;\r\n```\r\n\r\n### What are the expected results\r\n\r\nDatabase should be created.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/189", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/189/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/189/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/189", "id": 429784582, "node_id": "MDU6SXNzdWU0Mjk3ODQ1ODI=", "number": 189, "title": "pscyopg2-binary", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-05T14:29:41Z", "updated_at": "2019-04-09T09:19:36Z", "closed_at": "2019-04-09T09:19:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### What action do you want to perform\r\n\r\nInstall this alongside `psycopg2-binary` instead of `psycopg2`, because it's a pre-compiled wheel.\r\n\r\n### What are the results\r\n\r\nSince `pytest-postgresql` depends directly on `psycopg2`, this isn't possible.\r\n\r\n### What are the expected results\r\n\r\nCan install just fine.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/162", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/162/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/162/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/162", "id": 374574144, "node_id": "MDU6SXNzdWUzNzQ1NzQxNDQ=", "number": 162, "title": "TravisCI, made no code changes. Build started failing.", "user": {"login": "nackjicholson", "id": 365247, "node_id": "MDQ6VXNlcjM2NTI0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/365247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nackjicholson", "html_url": "https://github.com/nackjicholson", "followers_url": "https://api.github.com/users/nackjicholson/followers", "following_url": "https://api.github.com/users/nackjicholson/following{/other_user}", "gists_url": "https://api.github.com/users/nackjicholson/gists{/gist_id}", "starred_url": "https://api.github.com/users/nackjicholson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nackjicholson/subscriptions", "organizations_url": "https://api.github.com/users/nackjicholson/orgs", "repos_url": "https://api.github.com/users/nackjicholson/repos", "events_url": "https://api.github.com/users/nackjicholson/events{/privacy}", "received_events_url": "https://api.github.com/users/nackjicholson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-26T22:59:52Z", "updated_at": "2018-10-29T16:39:54Z", "closed_at": "2018-10-29T16:39:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### What action do you want to perform\r\n\r\nRun tests in travis ci\r\n\r\n### What are the results\r\n\r\n```\r\n==================================== ERRORS ====================================\r\n____________ ERROR at setup of TestPutSeries.test_create_new_source ____________\r\nrequest = <SubRequest 'postgresql' for <Function 'test_create_new_source'>>\r\n    @pytest.fixture\r\n    def postgresql_factory(request):\r\n        \"\"\"\r\n            Fixture factory for PostgreSQL.\r\n    \r\n            :param FixtureRequest request: fixture request object\r\n            :rtype: psycopg2.connection\r\n            :returns: postgresql client\r\n            \"\"\"\r\n>       proc_fixture = request.getfixturevalue(process_fixture_name)\r\n../../../virtualenv/python3.6.3/lib/python3.6/site-packages/pytest_postgresql/factories.py:259: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n../../../virtualenv/python3.6.3/lib/python3.6/site-packages/pytest_postgresql/factories.py:211: in postgresql_proc_fixture\r\n    postgresql_ctl, pg_user, datadir\r\n../../../virtualenv/python3.6.3/lib/python3.6/site-packages/pytest_postgresql/factories.py:101: in init_postgresql_directory\r\n    subprocess.check_output(' '.join(init_directory), shell=True)\r\n/opt/python/3.6.3/lib/python3.6/subprocess.py:336: in check_output\r\n    **kwargs).stdout\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\ninput = None, timeout = None, check = True\r\npopenargs = ('/usr/lib/postgresql/11/bin/pg_ctl initdb -o \"--auth=trust --username=postgres\" -D /tmp/postgresqldata.21515',)\r\nkwargs = {'shell': True, 'stdout': -1}\r\nprocess = <subprocess.Popen object at 0x2ae2978fca90>, stdout = b''\r\nstderr = None, retcode = 127\r\n    def run(*popenargs, input=None, timeout=None, check=False, **kwargs):\r\n        \"\"\"Run command with arguments and return a CompletedProcess instance.\r\n    \r\n        The returned instance will have attributes args, returncode, stdout and\r\n        stderr. By default, stdout and stderr are not captured, and those attributes\r\n        will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them.\r\n    \r\n        If check is True and the exit code was non-zero, it raises a\r\n        CalledProcessError. The CalledProcessError object will have the return code\r\n        in the returncode attribute, and output & stderr attributes if those streams\r\n        were captured.\r\n    \r\n        If timeout is given, and the process takes too long, a TimeoutExpired\r\n        exception will be raised.\r\n    \r\n        There is an optional argument \"input\", allowing you to\r\n        pass a string to the subprocess's stdin.  If you use this argument\r\n        you may not also use the Popen constructor's \"stdin\" argument, as\r\n        it will be used internally.\r\n    \r\n        The other arguments are the same as for the Popen constructor.\r\n    \r\n        If universal_newlines=True is passed, the \"input\" argument must be a\r\n        string and stdout/stderr in the returned object will be strings rather than\r\n        bytes.\r\n        \"\"\"\r\n        if input is not None:\r\n            if 'stdin' in kwargs:\r\n                raise ValueError('stdin and input arguments may not both be used.')\r\n            kwargs['stdin'] = PIPE\r\n    \r\n        with Popen(*popenargs, **kwargs) as process:\r\n            try:\r\n                stdout, stderr = process.communicate(input, timeout=timeout)\r\n            except TimeoutExpired:\r\n                process.kill()\r\n                stdout, stderr = process.communicate()\r\n                raise TimeoutExpired(process.args, timeout, output=stdout,\r\n                                     stderr=stderr)\r\n            except:\r\n                process.kill()\r\n                process.wait()\r\n                raise\r\n            retcode = process.poll()\r\n            if check and retcode:\r\n                raise CalledProcessError(retcode, process.args,\r\n>                                        output=stdout, stderr=stderr)\r\nE               subprocess.CalledProcessError: Command '/usr/lib/postgresql/11/bin/pg_ctl initdb -o \"--auth=trust --username=postgres\" -D /tmp/postgresqldata.21515' returned non-zero exit status 127.\r\n```\r\n\r\n### What are the expected results\r\n\r\nTests to pass.\r\n\r\n\r\n\r\n\r\n\r\n\ud83e\udd37\u200d\u2642\ufe0f Any ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/151", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/151/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/151/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/151", "id": 356095248, "node_id": "MDU6SXNzdWUzNTYwOTUyNDg=", "number": 151, "title": "How can I have two connections to the tests database?", "user": {"login": "nackjicholson", "id": 365247, "node_id": "MDQ6VXNlcjM2NTI0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/365247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nackjicholson", "html_url": "https://github.com/nackjicholson", "followers_url": "https://api.github.com/users/nackjicholson/followers", "following_url": "https://api.github.com/users/nackjicholson/following{/other_user}", "gists_url": "https://api.github.com/users/nackjicholson/gists{/gist_id}", "starred_url": "https://api.github.com/users/nackjicholson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nackjicholson/subscriptions", "organizations_url": "https://api.github.com/users/nackjicholson/orgs", "repos_url": "https://api.github.com/users/nackjicholson/repos", "events_url": "https://api.github.com/users/nackjicholson/events{/privacy}", "received_events_url": "https://api.github.com/users/nackjicholson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-08-31T19:14:12Z", "updated_at": "2018-09-07T18:05:17Z", "closed_at": "2018-09-07T17:20:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### What action do you want to perform\r\n\r\nI have a test of a flask server which is injected with the postgresql connnection object. Once it finishes serving a request, it closes that connection.\r\n\r\nAfter making a request to create objects in my test database I would like to open a second connection to verify the objects are in the database. I can't seem to get this to work with the `factories`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/145", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/145/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/145/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/145", "id": 351396399, "node_id": "MDU6SXNzdWUzNTEzOTYzOTk=", "number": 145, "title": "Unable to specify `options` kwarg to underlying psycopg2.connect()", "user": {"login": "nackjicholson", "id": 365247, "node_id": "MDQ6VXNlcjM2NTI0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/365247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nackjicholson", "html_url": "https://github.com/nackjicholson", "followers_url": "https://api.github.com/users/nackjicholson/followers", "following_url": "https://api.github.com/users/nackjicholson/following{/other_user}", "gists_url": "https://api.github.com/users/nackjicholson/gists{/gist_id}", "starred_url": "https://api.github.com/users/nackjicholson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nackjicholson/subscriptions", "organizations_url": "https://api.github.com/users/nackjicholson/orgs", "repos_url": "https://api.github.com/users/nackjicholson/repos", "events_url": "https://api.github.com/users/nackjicholson/events{/privacy}", "received_events_url": "https://api.github.com/users/nackjicholson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-16T22:54:43Z", "updated_at": "2018-08-17T21:16:48Z", "closed_at": "2018-08-17T21:16:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### What action do you want to perform\r\n\r\nI would like to specify options as specified in [33.1 Database Control Functions](https://www.postgresql.org/docs/current/static/libpq-connect.html#LIBPQ-PARAMKEYWORDS) as well as in [psycopg2.connect](http://initd.org/psycopg/docs/module.html#psycopg2.connect).\r\n\r\nBasically I want to set the `search_path=myschema`.\r\n\r\nI think I could also get around this by setting an environment variable of `PGOPTIONS` if I really have to.\r\n\r\n### What are the results\r\n\r\nWrite now the results are, I can't use this project to run my postgresql tests because I get errors due to tables not being found.\r\n\r\nI have my tables defined in a schema:\r\n\r\n`CREATE SCHEMA myschema;`\r\n\r\nBut in my app I use the `options='-c search_path=myschema'` to automatically make that the default so that in all my queries I don't have to write `select * from myschema.foo;`. I can write `select * from foo;`.\r\n\r\nI need to do the same thing for my psycopg2 connection when it's under test.\r\n\r\n### What are the expected results\r\n\r\nTo be able to send an `options` option through the `pytest.ini` or as a command line option, or as an option to the `postgresql_proc` factory.\r\n\r\n\r\n### PR\r\n\r\nI'll have a PR up shortly that adds that option.\r\n\r\n### Workarounds\r\n\r\nSomehow get my tables to just build in the `public` schema when I'm testing. (I'm using my same migration scripts for production to build my database under test)\r\n\r\nEnvironment variable everywhere I run tests `PGOPTIONS=\"-c search_path=myschema\"`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/127", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/127/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/127/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/127", "id": 314221026, "node_id": "MDU6SXNzdWUzMTQyMjEwMjY=", "number": 127, "title": "OSX bug introduced in v1.3.4", "user": {"login": "ahgnaw", "id": 921335, "node_id": "MDQ6VXNlcjkyMTMzNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/921335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahgnaw", "html_url": "https://github.com/ahgnaw", "followers_url": "https://api.github.com/users/ahgnaw/followers", "following_url": "https://api.github.com/users/ahgnaw/following{/other_user}", "gists_url": "https://api.github.com/users/ahgnaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahgnaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahgnaw/subscriptions", "organizations_url": "https://api.github.com/users/ahgnaw/orgs", "repos_url": "https://api.github.com/users/ahgnaw/repos", "events_url": "https://api.github.com/users/ahgnaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ahgnaw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-13T19:14:44Z", "updated_at": "2018-07-02T14:04:01Z", "closed_at": "2018-07-02T14:04:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Calling `killpg` on a zombie pid on OSX raises `OSError: [Errno 1] Operation not permitted`. In commit f224d935e61192c888a6c24bddf02d6b7e7cdf1b, the line https://github.com/ClearcodeHQ/mirakuru/blob/master/src/mirakuru/base.py#L274 is raising that error when called.\r\n\r\nOne solution is to use `os.kill` in mirakuru instead.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/126", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/126/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/126/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/126", "id": 313143171, "node_id": "MDU6SXNzdWUzMTMxNDMxNzE=", "number": 126, "title": "Issue stopping postgresql during teardown", "user": {"login": "awiddersheim", "id": 3237256, "node_id": "MDQ6VXNlcjMyMzcyNTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3237256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/awiddersheim", "html_url": "https://github.com/awiddersheim", "followers_url": "https://api.github.com/users/awiddersheim/followers", "following_url": "https://api.github.com/users/awiddersheim/following{/other_user}", "gists_url": "https://api.github.com/users/awiddersheim/gists{/gist_id}", "starred_url": "https://api.github.com/users/awiddersheim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/awiddersheim/subscriptions", "organizations_url": "https://api.github.com/users/awiddersheim/orgs", "repos_url": "https://api.github.com/users/awiddersheim/repos", "events_url": "https://api.github.com/users/awiddersheim/events{/privacy}", "received_events_url": "https://api.github.com/users/awiddersheim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-11T01:33:01Z", "updated_at": "2018-07-02T14:04:49Z", "closed_at": "2018-07-02T14:04:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "After updating to `1.3.4` of this package I started having issues running things on Mac OSX. Looks like the issue is tied to https://github.com/ClearcodeHQ/pytest-postgresql/commit/f224d935e61192c888a6c24bddf02d6b7e7cdf1b. Specifically, the `super(PostgreSQLExecutor, self).stop()` addition. Haven't tried other platforms. I'm also not running as `root` when performing my tests.\r\n\r\nHere is a snippet from the traceback when things go wrong:\r\n\r\n```\r\n        try:\r\n>           os.killpg(self.process.pid, sig)\r\nE           PermissionError: [Errno 1] Operation not permitted\r\n\r\n.tox/py36/lib/python3.6/site-packages/mirakuru/base.py:266: PermissionError\r\n```\r\n\r\nPutting a guard around that line seems to help:\r\n\r\n```\r\n        if self.running():\r\n            super(PostgreSQLExecutor, self).stop()\r\n```\r\n\r\nThis _seems_ okay though it does go against the \"ask for forgiveness\" approach. Not sure if something should really be done in the `mirakuru` library instead. Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/109", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/109/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/109/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/109", "id": 284535383, "node_id": "MDU6SXNzdWUyODQ1MzUzODM=", "number": 109, "title": "Weird error at shutdown", "user": {"login": "lahwaacz", "id": 1289205, "node_id": "MDQ6VXNlcjEyODkyMDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1289205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lahwaacz", "html_url": "https://github.com/lahwaacz", "followers_url": "https://api.github.com/users/lahwaacz/followers", "following_url": "https://api.github.com/users/lahwaacz/following{/other_user}", "gists_url": "https://api.github.com/users/lahwaacz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lahwaacz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lahwaacz/subscriptions", "organizations_url": "https://api.github.com/users/lahwaacz/orgs", "repos_url": "https://api.github.com/users/lahwaacz/repos", "events_url": "https://api.github.com/users/lahwaacz/events{/privacy}", "received_events_url": "https://api.github.com/users/lahwaacz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 435182311, "node_id": "MDU6TGFiZWw0MzUxODIzMTE=", "url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 435182317, "node_id": "MDU6TGFiZWw0MzUxODIzMTc=", "url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "fizyk", "id": 229393, "node_id": "MDQ6VXNlcjIyOTM5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizyk", "html_url": "https://github.com/fizyk", "followers_url": "https://api.github.com/users/fizyk/followers", "following_url": "https://api.github.com/users/fizyk/following{/other_user}", "gists_url": "https://api.github.com/users/fizyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizyk/subscriptions", "organizations_url": "https://api.github.com/users/fizyk/orgs", "repos_url": "https://api.github.com/users/fizyk/repos", "events_url": "https://api.github.com/users/fizyk/events{/privacy}", "received_events_url": "https://api.github.com/users/fizyk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fizyk", "id": 229393, "node_id": "MDQ6VXNlcjIyOTM5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizyk", "html_url": "https://github.com/fizyk", "followers_url": "https://api.github.com/users/fizyk/followers", "following_url": "https://api.github.com/users/fizyk/following{/other_user}", "gists_url": "https://api.github.com/users/fizyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizyk/subscriptions", "organizations_url": "https://api.github.com/users/fizyk/orgs", "repos_url": "https://api.github.com/users/fizyk/repos", "events_url": "https://api.github.com/users/fizyk/events{/privacy}", "received_events_url": "https://api.github.com/users/fizyk/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2017-12-26T10:41:18Z", "updated_at": "2018-03-23T12:14:32Z", "closed_at": "2018-03-23T12:12:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting the following error at the end of pytest's output when a test fails. It doesn't prevent a successful pass when everything is OK, though.\r\n```\r\n********************************************************************************\r\nException while deleting Executor. 'It is strongly suggested that you use\r\nit as a context manager instead.\r\n********************************************************************************\r\nException ignored in: <bound method SimpleExecutor.__del__ of <pytest_postgresql.executor.PostgreSQLExecutor: \"/usr/bin/p...\" 0x7fe758d124a8>>\r\nTraceback (most recent call last):\r\n  File \"/home/lahwaacz/Bbox/pg/python3/wiki-scripts/.tox/py36/lib/python3.6/site-packages/mirakuru/base.py\", line 361, in __del__\r\n  File \"/home/lahwaacz/Bbox/pg/python3/wiki-scripts/.tox/py36/lib/python3.6/site-packages/mirakuru/base.py\", line 314, in kill\r\n  File \"/home/lahwaacz/Bbox/pg/python3/wiki-scripts/.tox/py36/lib/python3.6/site-packages/mirakuru/base.py\", line 227, in _kill_all_kids\r\n  File \"/home/lahwaacz/Bbox/pg/python3/wiki-scripts/.tox/py36/lib/python3.6/site-packages/mirakuru/base_env.py\", line 52, in processes_with_env_psutil\r\n  File \"/home/lahwaacz/Bbox/pg/python3/wiki-scripts/.tox/py36/lib/python3.6/site-packages/psutil/__init__.py\", line 1426, in process_iter\r\n  File \"/home/lahwaacz/Bbox/pg/python3/wiki-scripts/.tox/py36/lib/python3.6/site-packages/psutil/__init__.py\", line 1371, in pids\r\n  File \"/home/lahwaacz/Bbox/pg/python3/wiki-scripts/.tox/py36/lib/python3.6/site-packages/psutil/_pslinux.py\", line 1324, in pids\r\n  File \"/home/lahwaacz/Bbox/pg/python3/wiki-scripts/.tox/py36/lib/python3.6/site-packages/psutil/_pslinux.py\", line 214, in get_procfs_path\r\nKeyError: 'psutil'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/103", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/103/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/103/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/103", "id": 275541423, "node_id": "MDU6SXNzdWUyNzU1NDE0MjM=", "number": 103, "title": "postgresql 10 support", "user": {"login": "adampopkiewicz", "id": 1763118, "node_id": "MDQ6VXNlcjE3NjMxMTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1763118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adampopkiewicz", "html_url": "https://github.com/adampopkiewicz", "followers_url": "https://api.github.com/users/adampopkiewicz/followers", "following_url": "https://api.github.com/users/adampopkiewicz/following{/other_user}", "gists_url": "https://api.github.com/users/adampopkiewicz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adampopkiewicz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adampopkiewicz/subscriptions", "organizations_url": "https://api.github.com/users/adampopkiewicz/orgs", "repos_url": "https://api.github.com/users/adampopkiewicz/repos", "events_url": "https://api.github.com/users/adampopkiewicz/events{/privacy}", "received_events_url": "https://api.github.com/users/adampopkiewicz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-21T00:07:06Z", "updated_at": "2017-11-22T10:54:02Z", "closed_at": "2017-11-21T21:50:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "### What action do you want to perform\r\nI've run tests on 9.6 successfully. upgraded version to 10, re-run tests.\r\n\r\n### What are the results\r\ntest crashes at pg version check in executor.py, no test relying on db connection performs.\r\n\r\n### What are the expected results\r\ntests running as in 9.6\r\n\r\n### workaround/potential fix\r\nNow, my workaround is to change version regex to account for that extra digit\r\n`PostgreSQLExecutor::version` - I've added extra `\\d?`\r\n\r\nI haven't noticed any issues so far, as I'm not aware of any backwards incompatible changes in 10.0. yet I'm not sure if it's forward compatible just like that, as my test suite is rather small, and doesn't span all pg features.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/90", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/90/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/90/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/90", "id": 261546557, "node_id": "MDU6SXNzdWUyNjE1NDY1NTc=", "number": 90, "title": "Tests hung if logging_collector is on in postgresql.conf", "user": {"login": "brainmorsel", "id": 382850, "node_id": "MDQ6VXNlcjM4Mjg1MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/382850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brainmorsel", "html_url": "https://github.com/brainmorsel", "followers_url": "https://api.github.com/users/brainmorsel/followers", "following_url": "https://api.github.com/users/brainmorsel/following{/other_user}", "gists_url": "https://api.github.com/users/brainmorsel/gists{/gist_id}", "starred_url": "https://api.github.com/users/brainmorsel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brainmorsel/subscriptions", "organizations_url": "https://api.github.com/users/brainmorsel/orgs", "repos_url": "https://api.github.com/users/brainmorsel/repos", "events_url": "https://api.github.com/users/brainmorsel/events{/privacy}", "received_events_url": "https://api.github.com/users/brainmorsel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 435182316, "node_id": "MDU6TGFiZWw0MzUxODIzMTY=", "url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 458900321, "node_id": "MDU6TGFiZWw0NTg5MDAzMjE=", "url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/labels/hacktoberfest", "name": "hacktoberfest", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "fizyk", "id": 229393, "node_id": "MDQ6VXNlcjIyOTM5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizyk", "html_url": "https://github.com/fizyk", "followers_url": "https://api.github.com/users/fizyk/followers", "following_url": "https://api.github.com/users/fizyk/following{/other_user}", "gists_url": "https://api.github.com/users/fizyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizyk/subscriptions", "organizations_url": "https://api.github.com/users/fizyk/orgs", "repos_url": "https://api.github.com/users/fizyk/repos", "events_url": "https://api.github.com/users/fizyk/events{/privacy}", "received_events_url": "https://api.github.com/users/fizyk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fizyk", "id": 229393, "node_id": "MDQ6VXNlcjIyOTM5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizyk", "html_url": "https://github.com/fizyk", "followers_url": "https://api.github.com/users/fizyk/followers", "following_url": "https://api.github.com/users/fizyk/following{/other_user}", "gists_url": "https://api.github.com/users/fizyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizyk/subscriptions", "organizations_url": "https://api.github.com/users/fizyk/orgs", "repos_url": "https://api.github.com/users/fizyk/repos", "events_url": "https://api.github.com/users/fizyk/events{/privacy}", "received_events_url": "https://api.github.com/users/fizyk/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-09-29T06:48:36Z", "updated_at": "2017-10-06T21:14:11Z", "closed_at": "2017-10-06T21:11:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "In official postgresql RPMs for Centos 7 logging_collector enabled by default (in `/usr/pgsql-9.6/share/postgresql.conf.sample`) and will catch all output to stderr.\r\n\r\n`wait_for_postgres()` will wait for message `'database system is ready to accept connections'` forever.\r\n\r\nAs workaround you can disable logging_collector manually:\r\n```py\r\n# conftest.py\r\nfrom pytest_postgresql import factories\r\npostgresql_proc = factories.postgresql_proc(startparams='-o \"-c logging_collector=off\"')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/84", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/84/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/84/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/84", "id": 249856481, "node_id": "MDU6SXNzdWUyNDk4NTY0ODE=", "number": 84, "title": "Use the tmpdir built-in fixture for logs", "user": {"login": "lahwaacz", "id": 1289205, "node_id": "MDQ6VXNlcjEyODkyMDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1289205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lahwaacz", "html_url": "https://github.com/lahwaacz", "followers_url": "https://api.github.com/users/lahwaacz/followers", "following_url": "https://api.github.com/users/lahwaacz/following{/other_user}", "gists_url": "https://api.github.com/users/lahwaacz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lahwaacz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lahwaacz/subscriptions", "organizations_url": "https://api.github.com/users/lahwaacz/orgs", "repos_url": "https://api.github.com/users/lahwaacz/repos", "events_url": "https://api.github.com/users/lahwaacz/events{/privacy}", "received_events_url": "https://api.github.com/users/lahwaacz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 435182316, "node_id": "MDU6TGFiZWw0MzUxODIzMTY=", "url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/milestones/1", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/milestone/1", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/milestones/1/labels", "id": 4432255, "node_id": "MDk6TWlsZXN0b25lNDQzMjI1NQ==", "number": 1, "title": "v2.0.0", "description": "py3 only", "creator": {"login": "fizyk", "id": 229393, "node_id": "MDQ6VXNlcjIyOTM5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizyk", "html_url": "https://github.com/fizyk", "followers_url": "https://api.github.com/users/fizyk/followers", "following_url": "https://api.github.com/users/fizyk/following{/other_user}", "gists_url": "https://api.github.com/users/fizyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizyk/subscriptions", "organizations_url": "https://api.github.com/users/fizyk/orgs", "repos_url": "https://api.github.com/users/fizyk/repos", "events_url": "https://api.github.com/users/fizyk/events{/privacy}", "received_events_url": "https://api.github.com/users/fizyk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2019-06-22T10:06:43Z", "updated_at": "2019-08-12T09:48:48Z", "due_on": null, "closed_at": "2019-08-12T09:48:48Z"}, "comments": 0, "created_at": "2017-08-13T06:51:38Z", "updated_at": "2019-07-19T07:51:24Z", "closed_at": "2019-07-19T07:51:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Use the built-in [tmpdir](https://docs.pytest.org/en/latest/tmpdir.html) fixture instead of `/tmp/` directly for storing files such as postgresql logs. The main reason is that the temporary directories managed by pytest are automatically rotated, so you won't end up with hundreds of left-over files in `/tmp/`...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/57", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/57/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/57/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/57", "id": 225218063, "node_id": "MDU6SXNzdWUyMjUyMTgwNjM=", "number": 57, "title": "Can't connect / timeout (Postgresql in docker container)?", "user": {"login": "dmitry-saritasa", "id": 1747653, "node_id": "MDQ6VXNlcjE3NDc2NTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1747653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmitry-saritasa", "html_url": "https://github.com/dmitry-saritasa", "followers_url": "https://api.github.com/users/dmitry-saritasa/followers", "following_url": "https://api.github.com/users/dmitry-saritasa/following{/other_user}", "gists_url": "https://api.github.com/users/dmitry-saritasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmitry-saritasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmitry-saritasa/subscriptions", "organizations_url": "https://api.github.com/users/dmitry-saritasa/orgs", "repos_url": "https://api.github.com/users/dmitry-saritasa/repos", "events_url": "https://api.github.com/users/dmitry-saritasa/events{/privacy}", "received_events_url": "https://api.github.com/users/dmitry-saritasa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 435182319, "node_id": "MDU6TGFiZWw0MzUxODIzMTk=", "url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "fizyk", "id": 229393, "node_id": "MDQ6VXNlcjIyOTM5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizyk", "html_url": "https://github.com/fizyk", "followers_url": "https://api.github.com/users/fizyk/followers", "following_url": "https://api.github.com/users/fizyk/following{/other_user}", "gists_url": "https://api.github.com/users/fizyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizyk/subscriptions", "organizations_url": "https://api.github.com/users/fizyk/orgs", "repos_url": "https://api.github.com/users/fizyk/repos", "events_url": "https://api.github.com/users/fizyk/events{/privacy}", "received_events_url": "https://api.github.com/users/fizyk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fizyk", "id": 229393, "node_id": "MDQ6VXNlcjIyOTM5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizyk", "html_url": "https://github.com/fizyk", "followers_url": "https://api.github.com/users/fizyk/followers", "following_url": "https://api.github.com/users/fizyk/following{/other_user}", "gists_url": "https://api.github.com/users/fizyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizyk/subscriptions", "organizations_url": "https://api.github.com/users/fizyk/orgs", "repos_url": "https://api.github.com/users/fizyk/repos", "events_url": "https://api.github.com/users/fizyk/events{/privacy}", "received_events_url": "https://api.github.com/users/fizyk/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/milestones/3", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/milestone/3", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/milestones/3/labels", "id": 4647977, "node_id": "MDk6TWlsZXN0b25lNDY0Nzk3Nw==", "number": 3, "title": "v2.2.0", "description": "", "creator": {"login": "fizyk", "id": 229393, "node_id": "MDQ6VXNlcjIyOTM5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizyk", "html_url": "https://github.com/fizyk", "followers_url": "https://api.github.com/users/fizyk/followers", "following_url": "https://api.github.com/users/fizyk/following{/other_user}", "gists_url": "https://api.github.com/users/fizyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizyk/subscriptions", "organizations_url": "https://api.github.com/users/fizyk/orgs", "repos_url": "https://api.github.com/users/fizyk/repos", "events_url": "https://api.github.com/users/fizyk/events{/privacy}", "received_events_url": "https://api.github.com/users/fizyk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "open", "created_at": "2019-09-10T13:17:40Z", "updated_at": "2019-10-11T15:38:36Z", "due_on": null, "closed_at": null}, "comments": 9, "created_at": "2017-04-28T23:54:31Z", "updated_at": "2020-02-13T16:23:06Z", "closed_at": "2019-10-11T15:38:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python 3.5.2 \r\nPostgresql 9.6.2 running inside docker container with exposed ports (so I can run psql locally)\r\nPort: 5432\r\n\r\n# tests are blocked\r\n\r\n```\r\n(storm) \u279c  src git:(develop) \u2717 pytest -v \r\n============================================================================================================= test session starts =============================================================================================================\r\nplatform linux -- Python 3.5.2, pytest-3.0.7, py-1.4.33, pluggy-0.4.0 -- /home/dmitry/.pyenv/versions/3.5.2/envs/storm/bin/python\r\ncachedir: .cache\r\nrootdir: /home/dmitry/Projects/trivver/storm/src, inifile:\r\nplugins: xdist-1.16.0, postgresql-1.2.0, cov-2.4.0\r\ncollected 5 items \r\n\r\ncache/tests/lru_test.py::TestCacheLRU::test_get_session_user  ^C\r\n```\r\nSo my execution stuck inside test_get_session_user()\r\n\r\n**code**:\r\n```\r\npostgresql_proc = factories.postgresql_proc(user='postgres')\r\npostgresql = factories.postgresql('postgresql_proc')\r\n\r\n\r\nclass TestCacheLRU(object):\r\n    def test_get_session_user(self, postgresql):\r\n\r\n        cur = postgresql.cursor()\r\n        cur.execute(\r\n            'CREATE TABLE test (id serial PRIMARY KEY, num integer, data varchar);')\r\n        postgresql.commit()\r\n        cur.close()\r\n\r\n        assert lru.get_session_user(None) is None\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/44", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/44/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/44/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/44", "id": 201598245, "node_id": "MDU6SXNzdWUyMDE1OTgyNDU=", "number": 44, "title": "Fix race conditions during database drop when other processes connect after killing connections", "user": {"login": "mmaslowskicc", "id": 10533721, "node_id": "MDQ6VXNlcjEwNTMzNzIx", "avatar_url": "https://avatars0.githubusercontent.com/u/10533721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmaslowskicc", "html_url": "https://github.com/mmaslowskicc", "followers_url": "https://api.github.com/users/mmaslowskicc/followers", "following_url": "https://api.github.com/users/mmaslowskicc/following{/other_user}", "gists_url": "https://api.github.com/users/mmaslowskicc/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmaslowskicc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmaslowskicc/subscriptions", "organizations_url": "https://api.github.com/users/mmaslowskicc/orgs", "repos_url": "https://api.github.com/users/mmaslowskicc/repos", "events_url": "https://api.github.com/users/mmaslowskicc/events{/privacy}", "received_events_url": "https://api.github.com/users/mmaslowskicc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 435182311, "node_id": "MDU6TGFiZWw0MzUxODIzMTE=", "url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 435182316, "node_id": "MDU6TGFiZWw0MzUxODIzMTY=", "url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 435182317, "node_id": "MDU6TGFiZWw0MzUxODIzMTc=", "url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "mmaslowskicc", "id": 10533721, "node_id": "MDQ6VXNlcjEwNTMzNzIx", "avatar_url": "https://avatars0.githubusercontent.com/u/10533721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmaslowskicc", "html_url": "https://github.com/mmaslowskicc", "followers_url": "https://api.github.com/users/mmaslowskicc/followers", "following_url": "https://api.github.com/users/mmaslowskicc/following{/other_user}", "gists_url": "https://api.github.com/users/mmaslowskicc/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmaslowskicc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmaslowskicc/subscriptions", "organizations_url": "https://api.github.com/users/mmaslowskicc/orgs", "repos_url": "https://api.github.com/users/mmaslowskicc/repos", "events_url": "https://api.github.com/users/mmaslowskicc/events{/privacy}", "received_events_url": "https://api.github.com/users/mmaslowskicc/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mmaslowskicc", "id": 10533721, "node_id": "MDQ6VXNlcjEwNTMzNzIx", "avatar_url": "https://avatars0.githubusercontent.com/u/10533721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmaslowskicc", "html_url": "https://github.com/mmaslowskicc", "followers_url": "https://api.github.com/users/mmaslowskicc/followers", "following_url": "https://api.github.com/users/mmaslowskicc/following{/other_user}", "gists_url": "https://api.github.com/users/mmaslowskicc/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmaslowskicc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmaslowskicc/subscriptions", "organizations_url": "https://api.github.com/users/mmaslowskicc/orgs", "repos_url": "https://api.github.com/users/mmaslowskicc/repos", "events_url": "https://api.github.com/users/mmaslowskicc/events{/privacy}", "received_events_url": "https://api.github.com/users/mmaslowskicc/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-01-18T15:03:32Z", "updated_at": "2017-01-23T08:34:26Z", "closed_at": "2017-01-23T08:34:26Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "### What action do you want to perform\r\n\r\nJust use the PostgreSQL database fixture in tests with session-scoped fixtures running processes that randomly connect to the database during tests.\r\n\r\n### What are the results\r\n\r\nDropping the database fails, since it has other connections. All following tests fail at setup, since the database exists.\r\n\r\n### What are the expected results\r\n\r\nDropping the database succeeds, the following tests pass.\r\n\r\nProbably using <https://www.postgresql.org/docs/9.5/static/catalog-pg-database.html>'s `datallowconn` to disallow connections before killing them in `drop_postgresql_database` will fix it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/39", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/39/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/39/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/39", "id": 199693756, "node_id": "MDU6SXNzdWUxOTk2OTM3NTY=", "number": 39, "title": "remove path.py dependency", "user": {"login": "fizyk", "id": 229393, "node_id": "MDQ6VXNlcjIyOTM5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizyk", "html_url": "https://github.com/fizyk", "followers_url": "https://api.github.com/users/fizyk/followers", "following_url": "https://api.github.com/users/fizyk/following{/other_user}", "gists_url": "https://api.github.com/users/fizyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizyk/subscriptions", "organizations_url": "https://api.github.com/users/fizyk/orgs", "repos_url": "https://api.github.com/users/fizyk/repos", "events_url": "https://api.github.com/users/fizyk/events{/privacy}", "received_events_url": "https://api.github.com/users/fizyk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "mmaslowskicc", "id": 10533721, "node_id": "MDQ6VXNlcjEwNTMzNzIx", "avatar_url": "https://avatars0.githubusercontent.com/u/10533721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmaslowskicc", "html_url": "https://github.com/mmaslowskicc", "followers_url": "https://api.github.com/users/mmaslowskicc/followers", "following_url": "https://api.github.com/users/mmaslowskicc/following{/other_user}", "gists_url": "https://api.github.com/users/mmaslowskicc/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmaslowskicc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmaslowskicc/subscriptions", "organizations_url": "https://api.github.com/users/mmaslowskicc/orgs", "repos_url": "https://api.github.com/users/mmaslowskicc/repos", "events_url": "https://api.github.com/users/mmaslowskicc/events{/privacy}", "received_events_url": "https://api.github.com/users/mmaslowskicc/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mmaslowskicc", "id": 10533721, "node_id": "MDQ6VXNlcjEwNTMzNzIx", "avatar_url": "https://avatars0.githubusercontent.com/u/10533721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmaslowskicc", "html_url": "https://github.com/mmaslowskicc", "followers_url": "https://api.github.com/users/mmaslowskicc/followers", "following_url": "https://api.github.com/users/mmaslowskicc/following{/other_user}", "gists_url": "https://api.github.com/users/mmaslowskicc/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmaslowskicc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmaslowskicc/subscriptions", "organizations_url": "https://api.github.com/users/mmaslowskicc/orgs", "repos_url": "https://api.github.com/users/mmaslowskicc/repos", "events_url": "https://api.github.com/users/mmaslowskicc/events{/privacy}", "received_events_url": "https://api.github.com/users/mmaslowskicc/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-01-09T23:38:33Z", "updated_at": "2017-01-23T10:46:15Z", "closed_at": "2017-01-23T10:46:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Path.py has a really nice api, however it's use can safely be replace by stdlib limiting the number of dependencies pytest-postgresql has", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/24", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/24/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/24/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/24", "id": 189121934, "node_id": "MDU6SXNzdWUxODkxMjE5MzQ=", "number": 24, "title": "AttributeError: 'function' object has no attribute 'cursor'", "user": {"login": "fizyk", "id": 229393, "node_id": "MDQ6VXNlcjIyOTM5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizyk", "html_url": "https://github.com/fizyk", "followers_url": "https://api.github.com/users/fizyk/followers", "following_url": "https://api.github.com/users/fizyk/following{/other_user}", "gists_url": "https://api.github.com/users/fizyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizyk/subscriptions", "organizations_url": "https://api.github.com/users/fizyk/orgs", "repos_url": "https://api.github.com/users/fizyk/repos", "events_url": "https://api.github.com/users/fizyk/events{/privacy}", "received_events_url": "https://api.github.com/users/fizyk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 481309881, "node_id": "MDU6TGFiZWw0ODEzMDk4ODE=", "url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/labels/input%20needed", "name": "input needed", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-14T14:13:29Z", "updated_at": "2017-06-15T22:23:53Z", "closed_at": "2017-06-15T22:23:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "_From @tommagic on October 27, 2016 12:14_\n\nI follow the example here - http://pytest-dbfixtures.readthedocs.io/en/latest/howtouse.html for postgres - \n\n```\nfrom pytest_dbfixtures import factories\n\npostgresql_proc2 = factories.postgresql_proc(port=9876)\npostgresql2 = factories.postgresql('postgresql_proc2')\ncur = postgresql2.cursor()\n```\n\nI get the following error - \n`AttributeError: 'function' object has no attribute 'cursor'`\n\nMy version is - pytest-dbfixtures==0.16.0 and psycopg2==2.6.2, postgres 9.6 running locally.\nWhat do I do wrong?\n\n\n_Copied from original issue: ClearcodeHQ/pytest-dbfixtures#208_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/17", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/17/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/17/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/17", "id": 182481704, "node_id": "MDU6SXNzdWUxODI0ODE3MDQ=", "number": 17, "title": "Determine minimum supported postgresql version", "user": {"login": "fizyk", "id": 229393, "node_id": "MDQ6VXNlcjIyOTM5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizyk", "html_url": "https://github.com/fizyk", "followers_url": "https://api.github.com/users/fizyk/followers", "following_url": "https://api.github.com/users/fizyk/following{/other_user}", "gists_url": "https://api.github.com/users/fizyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizyk/subscriptions", "organizations_url": "https://api.github.com/users/fizyk/orgs", "repos_url": "https://api.github.com/users/fizyk/repos", "events_url": "https://api.github.com/users/fizyk/events{/privacy}", "received_events_url": "https://api.github.com/users/fizyk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 458900321, "node_id": "MDU6TGFiZWw0NTg5MDAzMjE=", "url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/labels/hacktoberfest", "name": "hacktoberfest", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-12T09:47:40Z", "updated_at": "2019-07-19T12:18:25Z", "closed_at": "2019-07-19T12:18:25Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "_From @fizyk on August 25, 2015 11:42_\n\nrecently I've tried to run some tests on postrgesql 8.4 and I failed due to the fact, that pg_ctl in postgresql 8.4 doesn't have initdb option.\n\nPostgres got installed as presented here http://www.postgresql.org/download/linux/debian/ for debian wheezy\n\n_Copied from original issue: ClearcodeHQ/pytest-dbfixtures#125_\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/16", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/16/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/16/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/16", "id": 182481180, "node_id": "MDU6SXNzdWUxODI0ODExODA=", "number": 16, "title": "Set locale for running database processes", "user": {"login": "fizyk", "id": 229393, "node_id": "MDQ6VXNlcjIyOTM5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizyk", "html_url": "https://github.com/fizyk", "followers_url": "https://api.github.com/users/fizyk/followers", "following_url": "https://api.github.com/users/fizyk/following{/other_user}", "gists_url": "https://api.github.com/users/fizyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizyk/subscriptions", "organizations_url": "https://api.github.com/users/fizyk/orgs", "repos_url": "https://api.github.com/users/fizyk/repos", "events_url": "https://api.github.com/users/fizyk/events{/privacy}", "received_events_url": "https://api.github.com/users/fizyk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 459980635, "node_id": "MDU6TGFiZWw0NTk5ODA2MzU=", "url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/labels/Accepting%20pull-requests", "name": "Accepting pull-requests", "color": "ededed", "default": false, "description": null}, {"id": 435182311, "node_id": "MDU6TGFiZWw0MzUxODIzMTE=", "url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 458900321, "node_id": "MDU6TGFiZWw0NTg5MDAzMjE=", "url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/labels/hacktoberfest", "name": "hacktoberfest", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/milestones/1", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/milestone/1", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/milestones/1/labels", "id": 4432255, "node_id": "MDk6TWlsZXN0b25lNDQzMjI1NQ==", "number": 1, "title": "v2.0.0", "description": "py3 only", "creator": {"login": "fizyk", "id": 229393, "node_id": "MDQ6VXNlcjIyOTM5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizyk", "html_url": "https://github.com/fizyk", "followers_url": "https://api.github.com/users/fizyk/followers", "following_url": "https://api.github.com/users/fizyk/following{/other_user}", "gists_url": "https://api.github.com/users/fizyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizyk/subscriptions", "organizations_url": "https://api.github.com/users/fizyk/orgs", "repos_url": "https://api.github.com/users/fizyk/repos", "events_url": "https://api.github.com/users/fizyk/events{/privacy}", "received_events_url": "https://api.github.com/users/fizyk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2019-06-22T10:06:43Z", "updated_at": "2019-08-12T09:48:48Z", "due_on": null, "closed_at": "2019-08-12T09:48:48Z"}, "comments": 5, "created_at": "2016-10-12T09:45:24Z", "updated_at": "2019-07-18T15:19:48Z", "closed_at": "2019-07-18T15:19:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "_From @enkore on May 4, 2016 10:9_\n\nWe had the issue here that our tests would hang forever or fail in strange ways sometimes (nonsensical errors implying that pgsql was not running while it was running etc). This was tracked down to the locale being set to something not-English, which caused the log messages of pgsql to be translated as well (e.g. into German).\n\n**Bug description:** dbfixtures fails when `wait_for_postgres` is called as part of the fixture initialization and tries to wait for `database system is ready to accept connections` appearing the log file (pgsql would start up fine, but print `Datenbanksystem ist bereit, um Verbindungen anzunehmen` instead, or some other localized text).\n\n**Proposed fix:** set LC_ALL=C in the database process environment, since that's what dbfixtures expects and needs to work. This is also our workaround (`export LC_ALL=C` before py.test in the same env/shell).\n\n---\n\nBy the way, I suspect that the wait_for_postgres mechanism isn't really doing anything after the first start; since the log file is not deleted automatically it will always contain the startup message from the first start, hence the check will pass immediately, independent of pgsql actually having printed that message during this run:\n- https://github.com/ClearcodeHQ/pytest-dbfixtures/blob/master/src/pytest_dbfixtures/factories/postgresql.py#L55\n- https://github.com/ClearcodeHQ/pytest-dbfixtures/blob/master/src/pytest_dbfixtures/factories/postgresql.py#L195\n\n_Copied from original issue: ClearcodeHQ/pytest-dbfixtures#150_\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/15", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/15/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/15/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/15", "id": 182480544, "node_id": "MDU6SXNzdWUxODI0ODA1NDQ=", "number": 15, "title": "Make temporary data directories configurable", "user": {"login": "fizyk", "id": 229393, "node_id": "MDQ6VXNlcjIyOTM5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizyk", "html_url": "https://github.com/fizyk", "followers_url": "https://api.github.com/users/fizyk/followers", "following_url": "https://api.github.com/users/fizyk/following{/other_user}", "gists_url": "https://api.github.com/users/fizyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizyk/subscriptions", "organizations_url": "https://api.github.com/users/fizyk/orgs", "repos_url": "https://api.github.com/users/fizyk/repos", "events_url": "https://api.github.com/users/fizyk/events{/privacy}", "received_events_url": "https://api.github.com/users/fizyk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 459980635, "node_id": "MDU6TGFiZWw0NTk5ODA2MzU=", "url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/labels/Accepting%20pull-requests", "name": "Accepting pull-requests", "color": "ededed", "default": false, "description": null}, {"id": 435182316, "node_id": "MDU6TGFiZWw0MzUxODIzMTY=", "url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-10-12T09:42:20Z", "updated_at": "2019-05-14T12:36:40Z", "closed_at": "2019-05-14T12:36:40Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "_From @enkore on May 4, 2016 10:20_\n\nCurrently these are hardcoded to paths like `/tmp/<dbname>.<port>` or similar paths (e.g. `/tmp/postgresqldata.5433`). It would be nice if this could be influenced in some way, e.g. an environment variable.\n\nUse case: This would allow to put these temporary paths in the working directory of CI jobs (travis, jenkins, ...), which rules out any issues that can occur with multiple jobs running in parallel. It also would make clean-up in case of crashes/errors easier (since the workdir is usually either automatically deleted after or before each build, or can be easily deleted from within the CI software).\n\n_Copied from original issue: ClearcodeHQ/pytest-dbfixtures#151_\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/14", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/14/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/14/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/14", "id": 182480278, "node_id": "MDU6SXNzdWUxODI0ODAyNzg=", "number": 14, "title": "Race condition between closing connections and dropping the database", "user": {"login": "mmaslowskicc", "id": 10533721, "node_id": "MDQ6VXNlcjEwNTMzNzIx", "avatar_url": "https://avatars0.githubusercontent.com/u/10533721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmaslowskicc", "html_url": "https://github.com/mmaslowskicc", "followers_url": "https://api.github.com/users/mmaslowskicc/followers", "following_url": "https://api.github.com/users/mmaslowskicc/following{/other_user}", "gists_url": "https://api.github.com/users/mmaslowskicc/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmaslowskicc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmaslowskicc/subscriptions", "organizations_url": "https://api.github.com/users/mmaslowskicc/orgs", "repos_url": "https://api.github.com/users/mmaslowskicc/repos", "events_url": "https://api.github.com/users/mmaslowskicc/events{/privacy}", "received_events_url": "https://api.github.com/users/mmaslowskicc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 435182311, "node_id": "MDU6TGFiZWw0MzUxODIzMTE=", "url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 458900321, "node_id": "MDU6TGFiZWw0NTg5MDAzMjE=", "url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/labels/hacktoberfest", "name": "hacktoberfest", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "mmaslowskicc", "id": 10533721, "node_id": "MDQ6VXNlcjEwNTMzNzIx", "avatar_url": "https://avatars0.githubusercontent.com/u/10533721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmaslowskicc", "html_url": "https://github.com/mmaslowskicc", "followers_url": "https://api.github.com/users/mmaslowskicc/followers", "following_url": "https://api.github.com/users/mmaslowskicc/following{/other_user}", "gists_url": "https://api.github.com/users/mmaslowskicc/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmaslowskicc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmaslowskicc/subscriptions", "organizations_url": "https://api.github.com/users/mmaslowskicc/orgs", "repos_url": "https://api.github.com/users/mmaslowskicc/repos", "events_url": "https://api.github.com/users/mmaslowskicc/events{/privacy}", "received_events_url": "https://api.github.com/users/mmaslowskicc/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mmaslowskicc", "id": 10533721, "node_id": "MDQ6VXNlcjEwNTMzNzIx", "avatar_url": "https://avatars0.githubusercontent.com/u/10533721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmaslowskicc", "html_url": "https://github.com/mmaslowskicc", "followers_url": "https://api.github.com/users/mmaslowskicc/followers", "following_url": "https://api.github.com/users/mmaslowskicc/following{/other_user}", "gists_url": "https://api.github.com/users/mmaslowskicc/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmaslowskicc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmaslowskicc/subscriptions", "organizations_url": "https://api.github.com/users/mmaslowskicc/orgs", "repos_url": "https://api.github.com/users/mmaslowskicc/repos", "events_url": "https://api.github.com/users/mmaslowskicc/events{/privacy}", "received_events_url": "https://api.github.com/users/mmaslowskicc/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2016-10-12T09:41:05Z", "updated_at": "2017-01-23T11:01:11Z", "closed_at": "2017-01-23T11:01:11Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "### What action do you want to perform\n\nRun tests with `postgresql` fixture. Have services with connection pooling started in session-scoped fixtures, reconnecting on error, also randomly querying the database.\n### What are the results\n\nWe run:\n\n```\n    cur.execute(\n        'SELECT pg_terminate_backend(pg_stat_activity.{0})'\n        'FROM pg_stat_activity WHERE pg_stat_activity.datname = %s;'.format(\n            pid_column),\n        (db,))\n    cur.execute('DROP DATABASE IF EXISTS {0};'.format(db))\n```\n\nThe second query fails with connections existing. A service might have reconnected between these two queries.\n### What are the expected results\n\nThe tests succceed. If we really cannot drop the database once, other tests succeed.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/13", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/13/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/13/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/13", "id": 182480255, "node_id": "MDU6SXNzdWUxODI0ODAyNTU=", "number": 13, "title": "postgresql startup-wait usually doesn't do anything", "user": {"login": "fizyk", "id": 229393, "node_id": "MDQ6VXNlcjIyOTM5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizyk", "html_url": "https://github.com/fizyk", "followers_url": "https://api.github.com/users/fizyk/followers", "following_url": "https://api.github.com/users/fizyk/following{/other_user}", "gists_url": "https://api.github.com/users/fizyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizyk/subscriptions", "organizations_url": "https://api.github.com/users/fizyk/orgs", "repos_url": "https://api.github.com/users/fizyk/repos", "events_url": "https://api.github.com/users/fizyk/events{/privacy}", "received_events_url": "https://api.github.com/users/fizyk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 458900321, "node_id": "MDU6TGFiZWw0NTg5MDAzMjE=", "url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/labels/hacktoberfest", "name": "hacktoberfest", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-10-12T09:40:56Z", "updated_at": "2019-05-14T10:59:14Z", "closed_at": "2019-05-14T10:59:13Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "_From @enkore on May 5, 2016 22:18_\n\nThe wait_for_postgres mechanism isn't really doing anything after the first run of tests; since the log file is not deleted automatically it will always contain the startup message from the first start, hence the check will pass immediately, independent of pgsql actually having printed that message during this run:\n- https://github.com/ClearcodeHQ/pytest-dbfixtures/blob/master/src/pytest_dbfixtures/factories/postgresql.py#L55\n- https://github.com/ClearcodeHQ/pytest-dbfixtures/blob/master/src/pytest_dbfixtures/factories/postgresql.py#L195\n\nAfter tests have run, before /tmp is emptied by the system (reboot or cronjob, or manually). My observation is that the logfile is not deleted (contrary to the docstring of `remove_postgresql_directory`, but in line with how I read the code) when the fixture finalizer is run.\n\n```\n$ rm /tmp/postgresql.5433.log\n$ py.test\n...\n== xyz passed ... ==\n$ py.test\n...\n$ grep \"database system is ready to accept connections\" /tmp/postgresql.5433.log \nLOG:  database system is ready to accept connections\nLOG:  database system is ready to accept connections\n```\n\n**Proposed fix:** Truncate the log file when starting a new instance in case it already exists. It makes debugging easy (since the logfile \"survives\" fixture teardown by default, as it does now), and doesn't create issues like this (possibly even in downstream test code looking at the log?)\n\n(From https://github.com/ClearcodeHQ/pytest-dbfixtures/issues/150#issuecomment-217100325 and the following)\n\n_Copied from original issue: ClearcodeHQ/pytest-dbfixtures#152_\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/12", "repository_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql", "labels_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/12/comments", "events_url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/issues/12/events", "html_url": "https://github.com/ClearcodeHQ/pytest-postgresql/issues/12", "id": 182125450, "node_id": "MDU6SXNzdWUxODIxMjU0NTA=", "number": 12, "title": "Configure test database through settings", "user": {"login": "fizyk", "id": 229393, "node_id": "MDQ6VXNlcjIyOTM5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizyk", "html_url": "https://github.com/fizyk", "followers_url": "https://api.github.com/users/fizyk/followers", "following_url": "https://api.github.com/users/fizyk/following{/other_user}", "gists_url": "https://api.github.com/users/fizyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizyk/subscriptions", "organizations_url": "https://api.github.com/users/fizyk/orgs", "repos_url": "https://api.github.com/users/fizyk/repos", "events_url": "https://api.github.com/users/fizyk/events{/privacy}", "received_events_url": "https://api.github.com/users/fizyk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 458900321, "node_id": "MDU6TGFiZWw0NTg5MDAzMjE=", "url": "https://api.github.com/repos/ClearcodeHQ/pytest-postgresql/labels/hacktoberfest", "name": "hacktoberfest", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-10-10T21:59:40Z", "updated_at": "2019-05-14T12:36:16Z", "closed_at": "2019-05-14T12:36:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### postgresql fixture to set up custom database\n\nWe should have a pytest.ini, command line option to complement postgresql argument that allows to change test database name.\n", "performed_via_github_app": null, "score": 1.0}]}